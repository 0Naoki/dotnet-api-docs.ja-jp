<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpSimpleClientProtocol.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac524110eb1ffa47f6267659a07e83cab2de1a0dfeb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24110eb1ffa47f6267659a07e83cab2de1a0dfeb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>Represents the base class for communicating with an XML Web service using the simple HTTP-GET and HTTP-POST protocols bindings.</source>
          <target state="translated">単純な HTTP-GET プロトコル バインディングおよび HTTP-POST プロトコル バインディングを使用して、XML Web サービスとの通信を行う基本クラスを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>This class specifies most of the implementation for communicating with an XML Web service over HTTP using encoders to encode the parameters and return values into common MIME formats.</source>
          <target state="translated">このクラスは、ほとんどのパラメーターをエンコードし、戻り値を共通の MIME 形式エンコーダーを使用して HTTP 経由で XML Web サービスと通信するための実装を指定します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>These encoders derive from the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter&gt;</ph> class.</source>
          <target state="translated">派生してこれらのエンコーダ、<ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>By default, a proxy class deriving from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol&gt;</ph> encodes parameters using the application/x-www-form-urlencoded MIME type and the response in plain XML.</source>
          <target state="translated">既定では、プロキシ クラスから派生する<ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol&gt;</ph>プレーン XML でアプリケーション/x-www-form-urlencoded MIME の種類と、応答を使用してパラメーターをエンコードします。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>Custom mime formatters can be specified using the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute&gt;</ph> attribute, however, there is no support for integrating this into a service description and proxy generation.</source>
          <target state="translated">使用してカスタム mime フォーマッタを指定することができます、<ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute&gt;</ph>属性は、ただし、このサービスの説明とプロキシの生成に統合するためのサポートはありません。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source><ph id="ph1">`Notes to Inheritors:`</ph> When you override this class, you can introduce methods in the derived class that are specific to a particular type of an XML Web service.</source>
          <target state="translated"><ph id="ph1">`Notes to Inheritors:`</ph> このクラスをオーバーライドする場合は、派生クラスでは、XML Web サービスの特定の種類に固有のメソッドを導入できます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>The methods simply capture the parameters, and call the base class to do the work of communicating with the site.</source>
          <target state="translated">メソッドは単にパラメーターをキャプチャし、サイトとの通信の作業を行うための基本クラスを呼び出します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>If the introduced methods are asynchronous, call the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A&gt;</ph> methods.</source>
          <target state="translated">導入されたメソッドが非同期の場合は、呼び出し、<ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>If the introduced methods are synchronous, call the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph> method.</source>
          <target state="translated">導入されたメソッドが同期の場合は、呼び出し、<ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>The overridden constructor typically sets the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> property to the URI of the XML Web service method.</source>
          <target state="translated">通常、オーバーライドされるコンス トラクターを設定、<ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph>プロパティを XML Web サービス メソッドの URI。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>The Web Services Description Language tool (Wsdl.exe) generates derived classes of <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol&gt;</ph> for a given Service Description.</source>
          <target state="translated">派生クラスを生成する Web サービス記述言語ツール (Wsdl.exe)<ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol&gt;</ph>特定のサービス説明用です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>The following code example is a proxy class generated by Wsdl.exe for the <ph id="ph1">`Math`</ph> XML Web service below.</source>
          <target state="translated">次のコード例は、の Wsdl.exe で生成されたプロキシ クラス、<ph id="ph1">`Math`</ph>次の XML Web サービスです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>The proxy class derives from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpGetClientProtocol&gt;</ph>, which derives from the abstract <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol&gt;</ph> class.</source>
          <target state="translated">プロキシ クラスの派生元<ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpGetClientProtocol&gt;</ph>、抽象から派生した<ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the preceding proxy class was created.</source>
          <target state="translated">次のコード例は、<ph id="ph1">`Math`</ph>前述のプロキシ クラスの作成元の XML Web サービスです。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>This type is thread safe.</source>
          <target state="translated">この型はスレッド セーフです。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The name of the XML Web service method.</source>
          <target state="translated">XML Web サービス メソッドの名前。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The URL to use when creating the <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> を作成するときに使用する URL。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>An array of objects containing the parameters to pass to the XML Web service method.</source>
          <target state="translated">XML Web サービス メソッドに渡すパラメーターを格納しているオブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</source>
          <target state="translated">配列内の値の順序は、呼び出し元の派生クラス メソッドに渡されたパラメーターの順序に対応しています。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The delegate to call when the asynchronous method call is complete.</source>
          <target state="translated">非同期メソッドの呼び出しが完了したときに呼び出されるデリゲート。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the delegate is not called.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> が <ph id="ph1">&lt;see langword="null" /&gt;</ph> の場合、このデリゲートは呼び出されません。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The additional information supplied by a client.</source>
          <target state="translated">クライアントから提供された追加情報。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Starts an asynchronous invocation of a method of an XML Web service.</source>
          <target state="translated">XML Web サービスのメソッドの非同期呼び出しを開始します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be passed to the <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" /&gt;</ph> method to obtain the return values from the XML Web service method.</source>
          <target state="translated">XML Web サービス メソッドからの戻り値を取得するために、<ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> メソッドに渡すことのできる <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">`methodName`</ph> parameter is used to find the types of the parameters and return values of the method that is invoking the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`methodName`</ph>パラメーターの型を検索しを呼び出しているメソッドの戻り値パラメーターが使用される、<ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>It is also used to find custom attributes that may have been added to the method.</source>
          <target state="translated">メソッドに追加されているカスタム属性を見つけることも使用されます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapRpcMethodAttribute&gt;</ph>, and <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> provide additional information on the derived method that is required for the HTTP protocol.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph>、 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapRpcMethodAttribute&gt;</ph>、および<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>の派生メソッドは、HTTP プロトコルに必要な追加情報を提供します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source><ph id="ph1">`asyncState`</ph> is passed into <ph id="ph2">`callback`</ph> and is included in the <ph id="ph3">&lt;xref:System.IAsyncResult&gt;</ph> that is returned from the <ph id="ph4">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`asyncState`</ph> 渡される<ph id="ph2">`callback`</ph>に含まれています、<ph id="ph3">&lt;xref:System.IAsyncResult&gt;</ph>から返された、<ph id="ph4">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>It is useful for passing information from the context of the asynchronous call to the handling of the asynchronous result in <ph id="ph1">`callback`</ph>.</source>
          <target state="translated">非同期の結果の処理への非同期呼び出しのコンテキストから情報を渡すために便利ですが<ph id="ph1">`callback`</ph>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The following code example is an ASP.NET Web Form, which calls an XML Web service named <ph id="ph1">`Math`</ph>.</source>
          <target state="translated">次のコード例は、名前付き XML Web サービスを呼び出して、ASP.NET Web フォーム<ph id="ph1">`Math`</ph>です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Within the <ph id="ph1">`EnterBtn_Click`</ph> function, the Web Form starts and completes an asynchronous invocation of the <ph id="ph2">`Add`</ph> XML Web service method.</source>
          <target state="translated">内で、<ph id="ph1">`EnterBtn_Click`</ph>関数の場合、Web フォームが開始しの非同期呼び出しを完了、 <ph id="ph2">`Add`</ph> XML Web サービス メソッドです。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the <ph id="ph1">`Math`</ph> XML Web service below.</source>
          <target state="translated">次のコード例は、Web サービス記述言語ツール (Wsdl.exe) によって生成されたプロキシ クラス、<ph id="ph1">`Math`</ph>次の XML Web サービスです。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Within the <ph id="ph1">`BeginAdd`</ph> method of the proxy class, the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> method starts an asynchronous invocation of the <ph id="ph3">`Add`</ph> XML Web service method.</source>
          <target state="translated">内で、<ph id="ph1">`BeginAdd`</ph>プロキシ クラスのメソッド、<ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph>メソッドの非同期呼び出しを開始する、 <ph id="ph3">`Add`</ph> XML Web サービス メソッドです。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the preceding proxy class was created.</source>
          <target state="translated">次のコード例は、<ph id="ph1">`Math`</ph>前述のプロキシ クラスの作成元の XML Web サービスです。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The request reached the server computer, but was not processed successfully.</source>
          <target state="translated">要求はサーバー コンピューターに到達しましたが、正常に処理されませんでした。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned from the <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> メソッドから返された <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>Completes asynchronous invocation of an XML Web service method using HTTP.</source>
          <target state="translated">HTTP を使用して XML Web サービス メソッドの非同期呼び出しを完了します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>An array of objects containing the return value and any by reference or <ph id="ph1">&lt;paramref name="out" /&gt;</ph> parameters for the XML Web service method.</source>
          <target state="translated">XML Web サービス メソッドの戻り値や、参照渡しパラメーターまたは <ph id="ph1">&lt;paramref name="out" /&gt;</ph> パラメーターを格納しているオブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The following code example is an ASP.NET Web Form, which calls an XML Web service named <ph id="ph1">`Math`</ph>.</source>
          <target state="translated">次のコード例は、名前付き XML Web サービスを呼び出して、ASP.NET Web フォーム<ph id="ph1">`Math`</ph>です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>Within the <ph id="ph1">`EnterBtn_Click`</ph> function, the Web Form starts and completes an asynchronous invocation of the <ph id="ph2">`Add`</ph> XML Web service method.</source>
          <target state="translated">内で、<ph id="ph1">`EnterBtn_Click`</ph>関数の場合、Web フォームが開始しの非同期呼び出しを完了、 <ph id="ph2">`Add`</ph> XML Web サービス メソッドです。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the <ph id="ph1">`Math`</ph> XML Web service below.</source>
          <target state="translated">次のコード例は、Web サービス記述言語ツール (Wsdl.exe) によって生成されたプロキシ クラス、<ph id="ph1">`Math`</ph>次の XML Web サービスです。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>Within the <ph id="ph1">`EndAdd`</ph> method of the proxy class, the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> method starts an asynchronous invocation of the <ph id="ph3">`Add`</ph> XML Web service method.</source>
          <target state="translated">内で、<ph id="ph1">`EndAdd`</ph>プロキシ クラスのメソッド、<ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph>メソッドの非同期呼び出しを開始する、 <ph id="ph3">`Add`</ph> XML Web サービス メソッドです。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the above proxy class was created.</source>
          <target state="translated">次のコード例は、<ph id="ph1">`Math`</ph>上記のプロキシ クラスの作成元の XML Web サービスです。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is not the return value from the <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> が <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> メソッドからの戻り値ではありません。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>The name of the XML Web service method in the derived class that is invoking the <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" /&gt;</ph> メソッドを呼び出している、派生クラス内の XML Web サービス メソッドの名前。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>The URL of the XML Web service method that the client is requesting.</source>
          <target state="translated">クライアントが要求している XML Web サービス メソッドの URL。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>An array of objects containing the parameters to pass to the remote XML Web service.</source>
          <target state="translated">リモート XML Web サービスに渡すパラメーターを格納しているオブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</source>
          <target state="translated">配列内の値の順序は、呼び出し元の派生クラス メソッドに渡されたパラメーターの順序に対応しています。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>Invokes an XML Web service method using HTTP.</source>
          <target state="translated">HTTP を使用して XML Web サービス メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>An array of objects containing the return value and any by-reference or <ph id="ph1">&lt;paramref name="out" /&gt;</ph> parameters of the derived class method.</source>
          <target state="translated">派生クラス メソッドの戻り値と、参照渡しパラメーターまたは <ph id="ph1">&lt;paramref name="out" /&gt;</ph> パラメーターを格納しているオブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>The <ph id="ph1">`methodName`</ph> parameter is used to find the types of the parameters and return values of the method that is invoking the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`methodName`</ph>パラメーターの型を検索しを呼び出しているメソッドの戻り値パラメーターが使用される、<ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>It is also used to find custom attributes which may have been added to the method.</source>
          <target state="translated">メソッドに追加されたカスタム属性を見つけるにも使用されます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> provide additional information on the derived method that is required for the SOAP protocol.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute&gt;</ph> および<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>SOAP プロトコルを必要とされる派生メソッドの追加情報を提供します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>The following code example is an ASP.NET Web Form, which calls an XML Web service named <ph id="ph1">`Math`</ph>.</source>
          <target state="translated">次のコード例は、名前付き XML Web サービスを呼び出して、ASP.NET Web フォーム<ph id="ph1">`Math`</ph>です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>Within the <ph id="ph1">`EnterBtn_Click`</ph> function, the Web Form synchronously invokes the <ph id="ph2">`Add`</ph> XML Web service method.</source>
          <target state="translated">内で、<ph id="ph1">`EnterBtn_Click`</ph>関数の場合、Web フォームを同期的に呼び出す、 <ph id="ph2">`Add`</ph> XML Web サービス メソッドです。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the <ph id="ph1">`Math`</ph> XML Web service below.</source>
          <target state="translated">次のコード例は、Web サービス記述言語ツール (Wsdl.exe) によって生成されたプロキシ クラス、<ph id="ph1">`Math`</ph>次の XML Web サービスです。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>Within the <ph id="ph1">`Add`</ph> method of the proxy class, the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph> method synchronously invokes the <ph id="ph3">`Add`</ph> Web Service method.</source>
          <target state="translated">内で、<ph id="ph1">`Add`</ph>プロキシ クラスのメソッド、<ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph>メソッドが同期的に呼び出す、 <ph id="ph3">`Add`</ph> Web サービスのメソッドです。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the above proxy class was created.</source>
          <target state="translated">次のコード例は、<ph id="ph1">`Math`</ph>上記のプロキシ クラスの作成元の XML Web サービスです。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>The request reached the server computer, but was not processed successfully.</source>
          <target state="translated">要求はサーバー コンピューターに到達しましたが、正常に処理されませんでした。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>Invokes the specified method asynchronously.</source>
          <target state="translated">指定されたメソッドを非同期で呼び出します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>The name of the method to invoke.</source>
          <target state="translated">呼び出すメソッドの名前。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>The request URL of the invoked web service.</source>
          <target state="translated">呼び出された Web サービスの要求 URL。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>The parameters to pass to the method.</source>
          <target state="translated">メソッドに渡すパラメーター。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>The delegate called when the method invocation has completed.</source>
          <target state="translated">メソッド呼び出しの完了時に呼び出されたデリゲート。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>Invokes the specified method asynchronously.</source>
          <target state="translated">指定されたメソッドを非同期で呼び出します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>The name of the method to invoke.</source>
          <target state="translated">呼び出すメソッドの名前。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>The request URL of the invoked web service.</source>
          <target state="translated">呼び出された Web サービスの要求 URL。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>The parameters to pass to the method.</source>
          <target state="translated">メソッドに渡すパラメーター。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>The delegate called when the method invocation has completed.</source>
          <target state="translated">メソッド呼び出しの完了時に呼び出されたデリゲート。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>An object containing associated state information that is passed to the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> delegate when the method has completed.</source>
          <target state="translated">メソッドの完了時に <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> デリゲートに渡される、関連付けられている状態の情報を格納しているオブジェクト。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>Invokes the specified method asynchronously while maintaining an associated state.</source>
          <target state="translated">関連付けられている状態を保持したまま、指定されたメソッドを非同期で呼び出します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>