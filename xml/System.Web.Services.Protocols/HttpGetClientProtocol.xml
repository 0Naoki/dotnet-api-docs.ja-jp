<Type Name="HttpGetClientProtocol" FullName="System.Web.Services.Protocols.HttpGetClientProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e4b0c80a6a08e75e6c0b8d0f9d68d73067f6c408" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51920917" /></Metadata><TypeSignature Language="C#" Value="public class HttpGetClientProtocol : System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpGetClientProtocol extends System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.HttpGetClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpGetClientProtocol&#xA;Inherits HttpSimpleClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpGetClientProtocol : System::Web::Services::Protocols::HttpSimpleClientProtocol" />
  <TypeSignature Language="F#" Value="type HttpGetClientProtocol = class&#xA;    inherit HttpSimpleClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpSimpleClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>HTTP-GET プロトコルを使用する XML Web サービス クライアント プロキシの基本クラス。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML Web サービス クライアントは、HTTP GET プロトコルを使用する場合は、パラメーターは、URL 内でエンコードされ、プレーンな XML で、応答が返されます。  
  
 XML Web サービス クライアント、ASP.NET を使用して直接派生するプロキシ クラスを作成する場合、またはから直接<xref:System.Web.Services.Protocols.WebClientProtocol>呼び出そうとする XML Web サービス用に作成する必要があります。 XML Web サービス クライアントが HTTP を使用して XML Web サービスを呼び出すときにからプロキシ クラスを派生させる<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>、さらにから派生する<xref:System.Web.Services.Protocols.WebClientProtocol>します。  
  
 <xref:System.Web.Services.Protocols.HttpGetClientProtocol> <xref:System.Web.Services.Protocols.HttpPostClientProtocol>から派生<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>、HTTP-GET および HTTP-POST プロトコルをそれぞれ使用して XML Web サービス メソッドを呼び出すためのサポートを提供することです。 SOAP を使用して XML Web サービスを呼び出すクライアントがから派生する必要があります<xref:System.Web.Services.Protocols.SoapHttpClientProtocol>します。  
  
 プロキシ クラスの構築について詳しくは、次を参照してください。 [ &#91; \<topic://cpconcreatingwebserviceproxy >&#93;](https://msdn.microsoft.com/library/142d91f5-3249-4cfc-a431-1f3acb76d756)します。  
  
   
  
## Examples  
 次の例の Wsdl.exe によって生成されたプロキシ クラスは、`Math`以下の XML Web サービス。 プロキシ クラスの派生元<xref:System.Web.Services.Protocols.HttpGetClientProtocol>、抽象から派生した<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>クラス。  
  
 [!code-cpp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpGetClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/VB/source.vb#1)]  
  
 次の例は、`Math`上記のプロキシ クラスの作成元の XML Web サービス。  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.HttpPostClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpGetClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpGetClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpGetClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Services.Protocols.HttpGetClientProtocol" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[HttpGetClientProtocol_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpGetClientProtocol_Constructor/CPP/httpgetclientprotocol_constructor.cpp#1)]
 [!code-csharp[HttpGetClientProtocol_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpGetClientProtocol_Constructor/CS/httpgetclientprotocol_constructor.cs#1)]
 [!code-vb[HttpGetClientProtocol_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpGetClientProtocol_Constructor/VB/httpgetclientprotocol_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected override System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpGetClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="httpGetClientProtocol.GetWebRequest uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><see cref="T:System.Uri" /> の作成時に使用する <see cref="T:System.Net.WebRequest" />。</param>
        <summary>指定した URI に対する <see cref="T:System.Net.WebRequest" /> インスタンスを作成します。</summary>
        <returns><see cref="T:System.Net.WebRequest" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドのオーバーライドの基本バージョン<xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A>HTTP-GET を使用して XML Web サービスに HTTP 要求が行われることを指定します。 このメソッドをオーバーライドして追加のカスタマイズが可能、<xref:System.Net.WebRequest>オブジェクトの XML Web サービス要求が行われる前にします。 たとえば、要求にカスタム ヘッダーを追加できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="uri" /> パラメーターが null か、長さが 0 です。</exception>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
  </Members>
</Type>