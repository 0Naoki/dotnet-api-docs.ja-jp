<Type Name="SoapExtension" FullName="System.Web.Services.Protocols.SoapExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ddbecf0fb6f86cf2309eb940f31b0df1734172db" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70564083" /></Metadata><TypeSignature Language="C#" Value="public abstract class SoapExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapExtension abstract" />
  <TypeSignature Language="F#" Value="type SoapExtension = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ASP.NET で作成された XML Web サービスの SOAP 拡張機能のための基本クラス。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET を使用すると、拡張メカニズムによって SOAP 関連のインフラストラクチャを構築できます。 ASP.NET SOAP 拡張機能のアーキテクチャでは、クライアントまたはサーバーでメッセージ処理の特定の段階でメッセージを検査または変更できる拡張機能を中心にしています。  
  
 ASP.NET SOAP 拡張機能は<xref:System.Web.Services.Protocols.SoapExtension>クラスから派生します。 メソッド<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> と <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> メソッドは、SOAP 拡張機能を初期化してパフォーマンスを向上させるための代替メカニズムを提供します。 <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>は、メソッドがで<xref:System.Web.Services.Protocols.SoapMessageStage>定義されている各ステージで呼び出されるため、ほとんどの soap 拡張機能の中核です。これにより、soap 拡張機能は、その特定の soap 拡張機能の目的の動作を実行できます。 Soap 要求または soap 応答を変更する必要がある soap 拡張<xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>機能では、は、ネットワーク経由で送信されるように提案されたデータを受信する機会を提供します。  
  
   
  
## Examples  
 次`TraceExtension`の soap 拡張機能は、XML Web サービスメソッドに適用されるときに、指定されたファイルに soap 要求と soap 応答を出力します。 XML Web サービスで実行するために次の SOAP 拡張機能がインストールされている場合、ASPNET ユーザーアカウントは、ログファイルが書き込まれるディレクトリへの書き込み権限を持っている必要があります。  
  
 [!code-cpp[Classic SoapExtension Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapMessageStage" />
    <altmember cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoapExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoapExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Services.Protocols.SoapExtension" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChainStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream ChainStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream ChainStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.ChainStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ ChainStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member ChainStream : System.IO.Stream -&gt; System.IO.Stream&#xA;override this.ChainStream : System.IO.Stream -&gt; System.IO.Stream" Usage="soapExtension.ChainStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">SOAP 要求または応答を格納しているメモリ バッファー。</param>
        <summary>派生クラスでオーバーライドされると、SOAP 要求または応答を格納しているメモリ バッファーに SOAP 拡張機能からアクセスできます。</summary>
        <returns>この SOAP 拡張機能により変更できる新しいメモリ バッファーを表す <see cref="T:System.IO.Stream" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>最も優先順位の高い SOAP 拡張機能が、ネットワーク経由で送受信される SOAP メッセージに最も近い実際のデータを変更できることを保証します。  
  
 SOAP 拡張<xref:System.IO.Stream>機能では、 <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>渡されたの参照<xref:System.IO.Stream>とから<xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>返されたが保存されます。 SOAP 拡張機能が XML Web サービスメソッドを使用して実行するように<xref:System.IO.Stream>構成さ<xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>れている場合、に渡さ<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize>れるには、 <xref:System.Web.Services.Protocols.SoapMessageStage>でシリアル化された SOAP 要求が格納されます。 同様に、から<xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>返された<xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize> <xref:System.Web.Services.Protocols.SoapMessageStage>参照は、シリアル化が発生したときにに書き込まれます。そのために、シリアル化された SOAP 応答がに格納 <xref:System.IO.Stream> されます。  
  
   
  
## Examples  
 次の例では、 <xref:System.IO.Stream>に<xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>渡されると<xref:System.IO.Stream> 、メンバー <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>変数`oldStream`と`newStream`のから返されるをそれぞれ保存します。  
  
 [!code-cpp[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>派生クラスでオーバーライドされると、SOAP 拡張機能は XML Web サービス メソッドに固有のデータを 1 回の動作で初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : Type -&gt; obj" Usage="soapExtension.GetInitializer serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">SOAP 拡張機能の適用対象である XML Web サービスを実装しているクラスの型。</param>
        <summary>派生クラスでオーバーライドされると、SOAP 拡張機能は XML Web サービスを実装しているクラスに固有のデータを 1 回の動作で初期化します。</summary>
        <returns>SOAP 拡張機能でキャッシングのために初期化する <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET によっ<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>て呼び出されるのオーバーロードは、SOAP 拡張機能がどのように指定されたかによって異なります。 SOAP 拡張機能を指定するには、次の2つの方法があります。  
  
-   から<xref:System.Web.Services.Protocols.SoapExtensionAttribute>派生したカスタム属性を個々の XML Web サービスメソッドに適用します。  
  
-   Web.config または app.config 構成ファイルに参照を追加します。  
  
 構成ファイルの1つに参照を追加すると、その構成ファイルのスコープ内のすべての XML Web サービスに対して SOAP 拡張機能が実行されます。 構成ファイルを参照することによって SOAP 拡張機能を指定する<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>と、ASP.NET はを<xref:System.Type>渡すオーバーロードを呼び出します。 カスタム属性を適用して拡張機能を指定すると、 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> ASP.NET は<xref:System.Web.Services.Protocols.LogicalMethodInfo>と<xref:System.Web.Services.Protocols.SoapExtensionAttribute>を渡すを呼び出します。  
  
 構成ファイルに SOAP 拡張機能を追加する方法の詳細については、「 [ASP.NET を使用して作成された XML Web サービスの構成オプション](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/b2c0ew36(v=vs.100))」を参照してください。  
  
   
  
## Examples  
 次のコードは、XML Web サービスごとに SOAP 拡張機能固有のデータを保存する方法を示しています。 Soap 拡張機能が属性ではなく構成ファイルを使用して構成されている場合、soap 拡張機能は、SOAP 拡張機能が適用される各クラスのデータを格納できます。 この例では、xml web サービスを実装するクラスの名前に基づいて、XML Web サービスメソッドとの間で送受信される SOAP メッセージのログを記録するファイルの名前を保存します。 このコード例は、 <xref:System.Web.Services.Protocols.SoapExtension>クラスの概要に記載されている traceextension SOAP 拡張機能の完全なコード例の一部です。  
  
 [!code-cpp[SoapExtension.GetInitializer-Type#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/CPP/traceextension.cpp#1)]
 [!code-csharp[SoapExtension.GetInitializer-Type#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/CS/traceextension.cs#1)]
 [!code-vb[SoapExtension.GetInitializer-Type#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/VB/traceextension.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo, System.Web.Services.Protocols.SoapExtensionAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo, class System.Web.Services.Protocols.SoapExtensionAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo, attribute As SoapExtensionAttribute) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo, System::Web::Services::Protocols::SoapExtensionAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : System.Web.Services.Protocols.LogicalMethodInfo * System.Web.Services.Protocols.SoapExtensionAttribute -&gt; obj" Usage="soapExtension.GetInitializer (methodInfo, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
        <Parameter Name="attribute" Type="System.Web.Services.Protocols.SoapExtensionAttribute" />
      </Parameters>
      <Docs>
        <param name="methodInfo">SOAP 拡張機能が適用される XML Web サービス メソッドの固有の関数プロトタイプを表す <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />。</param>
        <param name="attribute">XML Web サービス メソッドに適用される <see cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" />。</param>
        <summary>派生クラスでオーバーライドされると、SOAP 拡張機能は XML Web サービス メソッドに適用された属性を使用して、XML Web サービス メソッドに固有のデータを 1 回の動作で初期化します。</summary>
        <returns>SOAP 拡張機能でキャッシングのために初期化する <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SOAP 拡張機能が構成ファイルを使用して構成さ<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>れている場合<xref:System.Type>は、を受け入れるオーバーロードを参照してください。  
  
 SOAP 拡張機能には、データを初期化するための3つの機会があり、すべての目的は異なります。  
  
-   クラスコンストラクター-クラスコンストラクターは、SOAP 拡張機能がインスタンス化されるたびに呼び出され、通常はメンバー変数を初期化するために使用されます。  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> - <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>ただし、は、XML Web サービスメソッドに SOAP 要求が初めて行われるときに1回だけ呼び出されます。 カスタム属性が XML Web サービスメソッドに適用されて<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>いる場合は、メソッドが呼び出されます。 これにより、SOAP 拡張機能は<xref:System.Web.Services.Protocols.LogicalMethodInfo> 、XML Web サービスメソッドのプロトタイプ情報を問い合わせることができます。また、から<xref:System.Web.Services.Protocols.SoapExtensionAttribute>派生したクラスによって渡される拡張機能固有のデータにアクセスすることもできます。 戻り値は ASP.NET によってキャッシュされ、 <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>後続のメソッドに渡されます。 したがって、で<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>実行される初期化は、基本的に1回限りのパフォーマンスヒットにカプセル化されます。  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> - <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>は、XML Web サービスメソッドに対して SOAP 要求が行われる<xref:System.Object>たびに呼び出されますが、クラスコンストラクターよりも利点があります。では、で<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>初期化されたが渡されます。  
  
   
  
## Examples  
 次のコードは、から<xref:System.Web.Services.Protocols.SoapExtensionAttribute>派生したクラスを使用して渡された SOAP 拡張機能固有のデータを取得し、そのデータをに<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>キャッシュする方法を示しています。 このコード例は、 `TraceExtension` <xref:System.Web.Services.Protocols.SoapExtension>クラスの概要に記載されている SOAP 拡張機能の完全なコード例の一部です。 このコード例は、 `TraceExtensionAttribute` `attribute`パラメーターに渡されるに依存しています。 完全なコード例では`TraceExtensionAttribute` 、は<xref:System.Web.Services.Protocols.SoapExtensionAttribute>から派生し`Filename` 、プロパティを追加し<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>ます。このプロパティはキャッシュに格納されます。  
  
 [!code-cpp[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)" />
        <altmember cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />
        <altmember cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : obj -&gt; unit" Usage="soapExtension.Initialize initializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer">ASP.NET によりキャッシュされる <see cref="T:System.Object" /> から返された <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" />。</param>
        <summary>派生クラスでオーバーライドされると、SOAP 拡張機能は <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" /> メソッドにキャッシュされているデータを使用して自らを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SOAP 拡張機能には、データを初期化するための3つの機会があり、すべての目的は異なります。  
  
-   クラスコンストラクター-クラスコンストラクターは、SOAP 拡張機能がインスタンス化されるたびに呼び出され、通常はメンバー変数を初期化するために使用されます。  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>-このメソッドは、XML Web サービスメソッドに対して SOAP 要求が初めて行われるときに1回だけ呼び出されます。 カスタム属性が XML Web サービスメソッドに適用されて<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>いる場合は、メソッドが呼び出されます。 これにより、SOAP 拡張機能は<xref:System.Web.Services.Protocols.LogicalMethodInfo> 、XML Web サービスメソッドのプロトタイプ情報を問い合わせることができます。また、から<xref:System.Web.Services.Protocols.SoapExtensionAttribute>派生したクラスによって渡される拡張機能固有のデータにアクセスすることもできます。 戻り値は ASP.NET によってキャッシュされ、 <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>後続のメソッドに渡されます。 したがって、で<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>実行される初期化は、基本的に1回限りのパフォーマンスヒットにカプセル化されます。  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>-このメソッドは、XML Web サービスメソッドに対して SOAP 要求が行われるたびに呼び出されますが、クラスコンストラクターよりも優れてい<xref:System.Object>ます。 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>では、で初期化されたが渡されます。
  
> [!NOTE]
>  構成ファイルの[ \<soapextensiontypes > 要素](https://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c)を使用<xref:System.Web.Services.Protocols.SoapExtensionAttribute>して、から派生させずに SOAP 拡張機能を追加することもできます。 詳細については、「 [ \<soapextensiontypes > 要素](https://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c)」と「soap[拡張機能を使用した soap メッセージの変更](https://msdn.microsoft.com/library/97d81ace-95e7-4acc-ae39-9692a0021e95)」を参照してください。  
  
## Examples  
 次の例は、 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>メソッド中にキャッシュされたデータを使用する方法を示しています。  
  
 [!code-cpp[Classic SoapExtension.Initialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.Initialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.Initialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessMessage">
      <MemberSignature Language="C#" Value="public abstract void ProcessMessage (System.Web.Services.Protocols.SoapMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessMessage(class System.Web.Services.Protocols.SoapMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ProcessMessage (message As SoapMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ProcessMessage(System::Web::Services::Protocols::SoapMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMessage : System.Web.Services.Protocols.SoapMessage -&gt; unit" Usage="soapExtension.ProcessMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapMessage" />
      </Parameters>
      <Docs>
        <param name="message">処理対象の <see cref="T:System.Web.Services.Protocols.SoapMessage" />。</param>
        <summary>派生クラスでオーバーライドされると、SOAP 拡張機能は <see cref="T:System.Web.Services.Protocols.SoapMessage" /> を受け取ってそれぞれの <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> で処理できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>は、ASP.NET と<xref:System.Web.Services.Protocols.SoapMessageStage>そのクライアントを使用して作成された XML Web サービスの両方に適用される SOAP 拡張機能のすべての段階で呼び出されます。 各<xref:System.Web.Services.Protocols.SoapMessageStage>では、から<xref:System.Web.Services.Protocols.SoapMessage>派生したクラスのインスタンスがに<xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>渡されます。 SOAP 拡張機能が XML Web サービスクライアント<xref:System.Web.Services.Protocols.SoapClientMessage>で実行されている場合は、オブジェクトがに<xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>渡され<xref:System.Web.Services.Protocols.SoapServerMessage>ます。それ以外の場合は、オブジェクトが渡されます。  
  
   
  
## Examples  
 次の例は、 <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> soap 要求と soap 応答をログに記録する soap 拡張機能の一部です。 でをログ<xref:System.Web.Services.Protocols.SoapMessage>に記録<xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize> <xref:System.Web.Services.Protocols.SoapMessageStage> <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A>することで、SOAP 拡張機能はネットワーク経由で送信されるにアクセスします。 ASP.NET を使用して作成された xml web サービスメソッドに soap 拡張機能が<xref:System.Web.Services.Protocols.SoapMessage.Stream%2A>適用されている場合、には、xml web サービスメソッドからの soap 応答が含まれます。 Soap 拡張機能が xml web サービスクライアントに適用される場合、 <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A>には、xml web サービスメソッドに対する soap 要求が含まれます。  
  
 Classic SoapExtension. "メッセージの例 # 1  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
