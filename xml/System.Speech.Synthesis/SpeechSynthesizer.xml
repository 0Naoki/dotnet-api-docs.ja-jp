<Type Name="SpeechSynthesizer" FullName="System.Speech.Synthesis.SpeechSynthesizer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4329c11770d18ef355913e673d7aab098f71b2dc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SpeechSynthesizer : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SpeechSynthesizer extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.SpeechSynthesizer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SpeechSynthesizer&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeechSynthesizer sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="3939c-101">インストール済みの音声合成エンジン機能へのアクセスを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3939c-101">Provides access to the functionality of an installed speech synthesis engine.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-102">新規に作成するときに<xref:System.Speech.Synthesis.SpeechSynthesizer>オブジェクトの既定のシステムの音声を使用します。</span><span class="sxs-lookup"><span data-stu-id="3939c-102">When you create a new <xref:System.Speech.Synthesis.SpeechSynthesizer> object, it uses the default system voice.</span></span> <span data-ttu-id="3939c-103">構成するのには<xref:System.Speech.Synthesis.SpeechSynthesizer>使用するにはインストールされている音声合成 (音声合成) 声のいずれかを使用して、<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>または<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-103">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="3939c-104">音声のインストールに関する情報を取得する、<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>メソッドおよび<xref:System.Speech.Synthesis.VoiceInfo>クラスです。</span><span class="sxs-lookup"><span data-stu-id="3939c-104">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 <span data-ttu-id="3939c-105">このクラスには、音声合成の次の側面を制御も提供されます。</span><span class="sxs-lookup"><span data-stu-id="3939c-105">This class also provides control over the following aspects of speech synthesis:</span></span>  
  
-   <span data-ttu-id="3939c-106">出力を構成する、<xref:System.Speech.Synthesis.SpeechSynthesizer>オブジェクトを使用して、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>、および<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-106">To configure the output for the <xref:System.Speech.Synthesis.SpeechSynthesizer> object, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
-   <span data-ttu-id="3939c-107">音声を生成するには、使用、 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>、または<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-107">To generate speech, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="3939c-108"><xref:System.Speech.Synthesis.SpeechSynthesizer> 、テキストから音声を生成することができます、<xref:System.Speech.Synthesis.Prompt>または<xref:System.Speech.Synthesis.PromptBuilder>オブジェクト、またはから[音声合成マークアップ言語 (SSML) バージョン 1.0](http://go.microsoft.com/fwlink/?LinkId=201763)です。</span><span class="sxs-lookup"><span data-stu-id="3939c-108">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can produce speech from text, a <xref:System.Speech.Synthesis.Prompt> or <xref:System.Speech.Synthesis.PromptBuilder> object, or from [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span>  
  
-   <span data-ttu-id="3939c-109">一時停止し、音声合成の再開を使用して、<xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A>と<xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-109">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
-   <span data-ttu-id="3939c-110">を追加または削除の辞書を使用して、<xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>と<xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-110">To add or remove lexicons, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> methods.</span></span> <span data-ttu-id="3939c-111"><xref:System.Speech.Synthesis.SpeechSynthesizer>単語、発音のガイドに 1 つまたは複数の辞書を使用することができます。</span><span class="sxs-lookup"><span data-stu-id="3939c-111">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can use one or more lexicons to guide its pronunciation of words.</span></span>  
  
-   <span data-ttu-id="3939c-112">音声出力の配信を変更するには、使用、<xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A>と<xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3939c-112">To modify the delivery of speech output, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> properties.</span></span>  
  
 <span data-ttu-id="3939c-113"><xref:System.Speech.Synthesis.SpeechSynthesizer>プロンプトの特定の機能を検出したときにイベントを発生させます。 (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>、 <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>、 <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>、および<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>)。</span><span class="sxs-lookup"><span data-stu-id="3939c-113">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises events when it encounters certain features in prompts: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>).</span></span> <span data-ttu-id="3939c-114">開始を報告するイベントを発生させます (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) と終了 (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) の操作を話すとでは、声の変更 (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>)。</span><span class="sxs-lookup"><span data-stu-id="3939c-114">It also raises events that report on the start (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) and end (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) of speak operations and on the change of the speaking voice (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3939c-115"><xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> への最後の参照を解放する前に、必ず <xref:System.Speech.Synthesis.SpeechSynthesizer> を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="3939c-115">Always call <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> before you release your last reference to the <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span> <span data-ttu-id="3939c-116">そうしないと、ガベージ コレクターが <xref:System.Speech.Synthesis.SpeechSynthesizer> オブジェクトの <xref:System.Object.Finalize%2A> メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="3939c-116">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Speech.Synthesis.SpeechSynthesizer> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3939c-117">次の例を初期化するコンソール アプリケーションの一部である、<xref:System.Speech.Synthesis.SpeechSynthesizer>オブジェクト、文字列を読みます。</span><span class="sxs-lookup"><span data-stu-id="3939c-117">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and speaks a string.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string.  
      synth.Speak("This example demonstrates a basic use of Speech Synthesizer");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
    <altmember cref="T:System.Speech.Synthesis.Prompt" />
    <altmember cref="T:System.Speech.Synthesis.PromptBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpeechSynthesizer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3939c-118">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-118">Initializes a new instance of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-119">初期化するとき、新しい<xref:System.Speech.Synthesis.SpeechSynthesizer>インスタンス、既定のシステムの音声を使用します。</span><span class="sxs-lookup"><span data-stu-id="3939c-119">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer> instance, it uses the default system voice.</span></span> <span data-ttu-id="3939c-120">構成するのには<xref:System.Speech.Synthesis.SpeechSynthesizer>使用するにはインストールされている音声合成 (音声合成) 声のいずれかを使用して、<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>または<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-120">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="3939c-121">音声のインストールに関する情報を取得する、<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>メソッドおよび<xref:System.Speech.Synthesis.VoiceInfo>クラスです。</span><span class="sxs-lookup"><span data-stu-id="3939c-121">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      </Docs>
    </Member>
    <Member MemberName="AddLexicon">
      <MemberSignature Language="C#" Value="public void AddLexicon (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLexicon(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLexicon(Uri ^ uri, System::String ^ mediaType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="3939c-122">辞書情報の場所。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-122">The location of the lexicon information.</span>
          </span>
        </param>
        <param name="mediaType">
          <span data-ttu-id="3939c-123">辞書のメディア タイプ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-123">The media type of the lexicon.</span>
          </span>
          <span data-ttu-id="3939c-124">メディアの種類の値では大文字と小文字は区別されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-124">Media type values are not case sensitive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3939c-125">用語集を <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-125">Adds a lexicon to the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-126">発音辞書は、単語または語句とその発音では、文字およびサポートされている音標文字からの文字で構成のコレクションです。</span><span class="sxs-lookup"><span data-stu-id="3939c-126">A pronunciation lexicon is a collection of words or phrases together with their pronunciations, which consist of letters and characters from a supported phonetic alphabet.</span></span> <span data-ttu-id="3939c-127">辞書を使用すると、アプリケーションで特殊なボキャブラリのカスタムの発音を指定します。</span><span class="sxs-lookup"><span data-stu-id="3939c-127">You can use a lexicon to specify custom pronunciations for specialized vocabulary in your application.</span></span>  
  
 <span data-ttu-id="3939c-128">外部の辞書ファイルで指定された発音スピーチ シンセサイザーの内部辞書またはディクショナリの発音よりも優先されます。</span><span class="sxs-lookup"><span data-stu-id="3939c-128">Pronunciations specified in an external lexicon file take precedence over the pronunciations of the speech synthesizer's internal lexicon or dictionary.</span></span> <span data-ttu-id="3939c-129">ただし、発音がインラインを指定のいずれかで作成されるプロンプトで、 <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>、 <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>、または<xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>メソッドの辞書で指定された発音よりも優先します。</span><span class="sxs-lookup"><span data-stu-id="3939c-129">However, pronunciations specified inline in prompts created with any of the <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> methods take precedence over pronunciations specified in any lexicon.</span></span> <span data-ttu-id="3939c-130">インライン発音単語の 1 つのみに適用されます。</span><span class="sxs-lookup"><span data-stu-id="3939c-130">Inline pronunciations apply only to a single occurrence of a word.</span></span> <span data-ttu-id="3939c-131">参照してください[辞書と音声のアルファベット](http://msdn.microsoft.com/library/435e3c6f-6834-4e5a-b0f6-c17b2275dc51)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="3939c-131">See [Lexicons and Phonetic Alphabets](http://msdn.microsoft.com/library/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) for more information.</span></span>  
  
 <span data-ttu-id="3939c-132">複数の辞書を追加することができます、<xref:System.Speech.Synthesis.SpeechSynthesizer>オブジェクト。2 つの値が現在サポートされている、`mediaType`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="3939c-132">You can add multiple lexicons to a <xref:System.Speech.Synthesis.SpeechSynthesizer> object.Two values are currently supported for the `mediaType` parameter:</span></span>  
  
-   <span data-ttu-id="3939c-133">値`application/pls+xml`に、辞書が準拠していることを示します、[発音辞書の仕様 (PL) バージョン 1.0](http://go.microsoft.com/fwlink/?LinkId=201766)です。</span><span class="sxs-lookup"><span data-stu-id="3939c-133">The value `application/pls+xml` indicates that the lexicon conforms to the [Pronunciation Lexicon Specification (PLS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201766).</span></span> <span data-ttu-id="3939c-134">これは、使用する優先形式です。</span><span class="sxs-lookup"><span data-stu-id="3939c-134">This is the preferred format to use.</span></span>  
  
-   <span data-ttu-id="3939c-135">値`application/vdn.ms-sapi-lex`辞書形式が圧縮されていない辞書に独自の Microsoft 形式であることを示します。</span><span class="sxs-lookup"><span data-stu-id="3939c-135">The value `application/vdn.ms-sapi-lex` indicates that the lexicon format is Uncompressed Lexicon, which is a Microsoft-proprietary format.</span></span> <span data-ttu-id="3939c-136">これは、従来の形式と、上記の PLS フォーマットを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="3939c-136">This is a legacy format and we recommend that you use the PLS format described above.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3939c-137">次の例では、追加と削除を含むカスタムの発音"blue"という単語を辞書の効果を示します。</span><span class="sxs-lookup"><span data-stu-id="3939c-137">The following example demonstrates the effect of adding and removing a lexicon that contains a custom pronunciation for the word "blue".</span></span> <span data-ttu-id="3939c-138">辞書は、"bleep"のような音声に"blue"の発音を定義します。</span><span class="sxs-lookup"><span data-stu-id="3939c-138">The lexicon defines the pronunciation of "blue" to sound like "bleep".</span></span> <span data-ttu-id="3939c-139">辞書が読み込まれているスピーチ シンセサイザーは辞書で定義されている発音を使用します。</span><span class="sxs-lookup"><span data-stu-id="3939c-139">While the lexicon is loaded, the speech synthesizer uses the pronunciation defined in the lexicon.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Add a lexicon that changes the pronunciation of "blue".  
        synth.AddLexicon(new Uri("C:\\test\\Blue.pls"), "application/pls+xml");  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Remove the lexicon.  
        synth.RemoveLexicon(new Uri("C:\\test\\Blue.pls"));  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 <span data-ttu-id="3939c-140">Blue.pls 辞書ファイルの内容を次に示します。</span><span class="sxs-lookup"><span data-stu-id="3939c-140">Following are the contents of the lexicon file Blue.pls:</span></span>  
  
```xml  
<?xml version="1.0" encoding="UTF-8"?>  
  
<lexicon version="1.0"   
      xmlns="http://www.w3.org/2005/01/pronunciation-lexicon"  
      alphabet="x-microsoft-ups" xml:lang="en-US">  
  
  <lexeme>  
    <grapheme> blue </grapheme>  
    <phoneme> B L I P </phoneme>  
  </lexeme>  
  
</lexicon>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="BookmarkReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BookmarkReached As EventHandler(Of BookmarkReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::BookmarkReachedEventArgs ^&gt; ^ BookmarkReached;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3939c-141">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> がプロンプトのブックマークを検出したときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-141">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> encounters a bookmark in a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-142"><xref:System.Speech.Synthesis.SpeechSynthesizer>のいずれかの処理中にこのイベントを発生させる、 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>、または<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-142">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="3939c-143">イベントに関連付けられているデータについては、次を参照してください。<xref:System.Speech.Synthesis.BookmarkReachedEventArgs>です。</span><span class="sxs-lookup"><span data-stu-id="3939c-143">For information about data associated with the event, see <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</span></span>  
  
 <span data-ttu-id="3939c-144">使用してブックマークを追加することができます、<xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-144">You can add bookmarks using the <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3939c-145">次の例では、2 つのブックマークが含まれていて、WAV ファイル再生のために、出力を送信するメッセージを作成します。</span><span class="sxs-lookup"><span data-stu-id="3939c-145">The following example creates a prompt that includes two bookmarks and sends the output to a WAV file for playback.</span></span> <span data-ttu-id="3939c-146">ハンドラーを<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>イベントがコンソールにイベントが発生したときに、オーディオのストリーム内での位置およびブックマークの名前を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3939c-146">The handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event writes the name of the bookmark and its position in the audio stream when the event was raised to the console.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt and append bookmarks.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
        builder.AppendBookmark("Daytime forecast");  
        builder.AppendText(  
          "Tonight's weather will be cloudy with a 30% chance of showers.");  
        builder.AppendBookmark("Nightime forecast");  
  
        // Add a handler for the BookmarkReached event.  
        synth.BookmarkReached +=  
          new EventHandler<BookmarkReachedEventArgs>(synth_BookmarkReached);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write the name and position of the bookmark to the console.  
    static void synth_BookmarkReached(object sender, BookmarkReachedEventArgs e)  
    {  
      Console.WriteLine("Bookmark ({0}) reached at: {1} ",  
        e.Bookmark, e.AudioPosition);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3939c-147">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトを破棄し、セッション中に使用するリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-147">Disposes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object and releases resources used during the session.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SpeechSynthesizer ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3939c-148">
            <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> メソッドが呼び出されなかった場合にリソースをクリーンアップするための安全装置として動作します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-148">Acts as a safeguard to clean up resources in the event that the <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> method is not called.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentlySpokenPrompt">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentlySpokenPrompt () As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ GetCurrentlySpokenPrompt();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3939c-149">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> が読み上げているプロンプトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-149">Gets the prompt that the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> is speaking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3939c-150">現在読み上げられているプロンプト オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-150">Returns the prompt object that is currently being spoken.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
  
```csharp  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstalledVoices">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3939c-151">現在システムにインストールされている音声合成 (音声変換) の音声のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-151">Returns the collection of speech synthesis (text-to-speech) voices that are currently installed on the system.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-152">アプリケーションを呼び出すと<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>メソッドは、音声 (音声合成エンジン) のそれぞれが検出されるでレジストリを満たしている特定の最小の条件を確認します。</span><span class="sxs-lookup"><span data-stu-id="3939c-152">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices (engines for text-to-speech) it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="3939c-153">検証に失敗したすべての音声の<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>設定、<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>プロパティを`False`です。</span><span class="sxs-lookup"><span data-stu-id="3939c-153">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="3939c-154">アプリケーションが、音声を選択できない持つ<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>プロパティは`False`します。</span><span class="sxs-lookup"><span data-stu-id="3939c-154">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="3939c-155">通常、アプリケーションは、音声のない設定<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3939c-155">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices () As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3939c-156">インストール済みの音声合成 (音声変換) の音声を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-156">Returns all of the installed speech synthesis (text-to-speech) voices.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3939c-157">システムに現在インストールされている、音声の読み取り専用のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-157">Returns a read-only collection of the voices currently installed on the system.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-158">音声とは、システムにインストールされている音声合成音声合成 (TTS) のエンジンです。</span><span class="sxs-lookup"><span data-stu-id="3939c-158">A voice is an engine for speech synthesis (text-to-speech or TTS) that is installed on the system.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3939c-159">次の例を初期化するコンソール アプリケーションの一部である、<xref:System.Speech.Synthesis.SpeechSynthesizer>オブジェクトおよびインストールされている音声 (音声合成エンジン) の一覧をコンソールに出力を各音声で利用可能な情報を示します。</span><span class="sxs-lookup"><span data-stu-id="3939c-159">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices (engines for speech synthesis) and demonstrates the information that is available for each voice.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices.   
        Console.WriteLine("Installed voices -");  
        foreach (InstalledVoice voice in synth.GetInstalledVoices())  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          string AudioFormats = "";  
          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  
          {  
            AudioFormats += String.Format("{0}\n",  
            fmt.EncodingFormat.ToString());  
          }  
  
          Console.WriteLine(" Name:          " + info.Name);  
          Console.WriteLine(" Culture:       " + info.Culture);  
          Console.WriteLine(" Age:           " + info.Age);  
          Console.WriteLine(" Gender:        " + info.Gender);  
          Console.WriteLine(" Description:   " + info.Description);  
          Console.WriteLine(" ID:            " + info.Id);  
          Console.WriteLine(" Enabled:       " + voice.Enabled);  
          if (info.SupportedAudioFormats.Count != 0)  
          {  
            Console.WriteLine( " Audio formats: " + AudioFormats);  
          }  
          else  
          {  
            Console.WriteLine(" No supported audio formats found");  
          }  
  
          string AdditionalInfo = "";  
          foreach (string key in info.AdditionalInfo.Keys)  
          {  
            AdditionalInfo += String.Format("  {0}: {1}\n", key, info.AdditionalInfo[key]);  
          }  
  
          Console.WriteLine(" Additional Info - " + AdditionalInfo);  
          Console.WriteLine();  
        }  
      }  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints" />
        <altmember cref="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      </Docs>
    </Member>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices (culture As CultureInfo) As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="3939c-160">音声がサポートする必要があるロケール。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-160">The locale that the voice must support.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3939c-161">特定のロケールをサポートする、インストール済みの音声合成 (音声変換) の音声を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-161">Returns all of the installed speech synthesis  (text-to-speech) voices that support a specific locale.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3939c-162">指定のロケールをサポートするシステムに現在インストールされている、音声の読み取り専用のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-162">Returns a read-only collection of the voices currently installed on the system that support the specified locale.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-163">インストールされている音声サポート指定されたロケールにない場合、このメソッドは空のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="3939c-163">If none of the installed voices support the specified locale, this method returns an empty collection.</span></span>  
  
 <span data-ttu-id="3939c-164">Microsoft Windows および System.Speech API は、すべての有効な言語-国コードを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="3939c-164">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="3939c-165">カルチャ プロパティで指定された言語を使用して音声合成を実行するには、言語-国コードをサポートする音声合成エンジンをインストールする必要があります。</span><span class="sxs-lookup"><span data-stu-id="3939c-165">To perform text-to-speech using the language specified in the Culture property, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="3939c-166">Microsoft Windows 7 に付属の音声合成エンジンは、次の言語、国コードと協力します。</span><span class="sxs-lookup"><span data-stu-id="3939c-166">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="3939c-167">EN-US です。</span><span class="sxs-lookup"><span data-stu-id="3939c-167">en-US.</span></span> <span data-ttu-id="3939c-168">英語 (米国)</span><span class="sxs-lookup"><span data-stu-id="3939c-168">English (United States)</span></span>  
  
-   <span data-ttu-id="3939c-169">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="3939c-169">zh-CN.</span></span> <span data-ttu-id="3939c-170">中国語 (中国)</span><span class="sxs-lookup"><span data-stu-id="3939c-170">Chinese (China)</span></span>  
  
-   <span data-ttu-id="3939c-171">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="3939c-171">zh-TW.</span></span> <span data-ttu-id="3939c-172">中国語 (台湾)</span><span class="sxs-lookup"><span data-stu-id="3939c-172">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="3939c-173">"En"などの 2 文字の言語コードも許可されています。</span><span class="sxs-lookup"><span data-stu-id="3939c-173">Two-letter language codes such as "en" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3939c-174">次の例を初期化するコンソール アプリケーションの一部である、<xref:System.Speech.Synthesis.SpeechSynthesizer>オブジェクトを EN-US ロケールをサポートしているインストール済みの音声の一覧をコンソールに出力します。</span><span class="sxs-lookup"><span data-stu-id="3939c-174">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices that support the en-US locale.</span></span>  
  
```csharp  
using System;  
using System.Globalization;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synthesizer = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices that  
        // support the en-US locacale.   
        Console.WriteLine("Installed voices for the en-US locale:");  
        foreach (InstalledVoice voice in  
          synthesizer.GetInstalledVoices(new CultureInfo("en-US")))  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          OutputVoiceInfo(info);  
        }  
  
        // Output information about the current voice.  
        Console.WriteLine();  
        Console.WriteLine("Current voice:");  
        OutputVoiceInfo(synthesizer.Voice);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Display information about a synthesizer voice.  
    private static void OutputVoiceInfo(VoiceInfo info)  
    {  
      Console.WriteLine("  Name: {0}, culture: {1}, gender: {2}, age: {3}.",  
        info.Name, info.Culture, info.Gender, info.Age);  
      Console.WriteLine("    Description: {0}", info.Description);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3939c-175">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトを一時停止します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-175">Pauses the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="PhonemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PhonemeReached As EventHandler(Of PhonemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::PhonemeReachedEventArgs ^&gt; ^ PhonemeReached;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3939c-176">音素に到達したときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-176">Raised when a phoneme is reached.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-177">音素は、記述された言語の基本コンポーネント、通常のアルファベット (または 2 文字の組み合わせ) を 1 つまたは複数の個別のサウンドを表す文字です。</span><span class="sxs-lookup"><span data-stu-id="3939c-177">A phoneme is a basic component of written language, typically a letter of an alphabet (or the combination of two letters) that represents one or more distinct sounds.</span></span> <span data-ttu-id="3939c-178">たとえば、文字"c"は「シンダー」の"s"のように、または"catch"に"k"のように思えるかもしれませんの音素です。</span><span class="sxs-lookup"><span data-stu-id="3939c-178">For example, the letter "c" is a phoneme that may sound like "s" in "cinder", or like "k" in "catch".</span></span> <span data-ttu-id="3939c-179">書き込まれた単語とは、音素の集合体です。</span><span class="sxs-lookup"><span data-stu-id="3939c-179">A written word is an assemblage of phonemes.</span></span> <span data-ttu-id="3939c-180">音素を単語内で変更すると、そのスペルが変更されます。</span><span class="sxs-lookup"><span data-stu-id="3939c-180">Changing a phoneme in a word will alter its spelling.</span></span>  
  
 <span data-ttu-id="3939c-181">A<xref:System.Speech.Synthesis.SpeechSynthesizer>インスタンスの生成、<xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>音素のときに使用する単語の各部分のイベントです。</span><span class="sxs-lookup"><span data-stu-id="3939c-181">A <xref:System.Speech.Synthesis.SpeechSynthesizer> instance generates a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event for each portion of a word that constitutes a phoneme.</span></span> <span data-ttu-id="3939c-182">たとえば、単語の「テーマ」は生成 3<xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>イベント;"th"サウンド、"e"音を出すと 1 つの"m"のサウンド (me) 用の 1 つです。</span><span class="sxs-lookup"><span data-stu-id="3939c-182">For example, for the word "theme" would generate three <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> events; one for the "th" sound, one for the "e" sound, and one for the "m" sound (me).</span></span>  
  
 <span data-ttu-id="3939c-183">例と、イベントに関連付けられているデータに関する情報については、次を参照してください。<xref:System.Speech.Synthesis.PhonemeReachedEventArgs>です。</span><span class="sxs-lookup"><span data-stu-id="3939c-183">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public int Rate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rate" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Rate" />
      <MemberSignature Language="VB.NET" Value="Public Property Rate As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rate { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3939c-184">現在の <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトの読み上げ速度を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-184">Gets or sets the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3939c-185">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトの読み上げ速度を -10 ～ 10 の範囲で返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-185">Returns the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object, from -10 through 10.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3939c-186">次の例は、文字列を-2 に設定する話し速度で話します。</span><span class="sxs-lookup"><span data-stu-id="3939c-186">The following example speaks a string with the speaking rate set to -2.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Set a value for the speaking rate.  
      synth.Rate = -2;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a text string synchronously.  
      synth.Speak("This example speaks a string with the speaking rate set to -2.");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }     
  }    
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.PromptStyle" />
        <altmember cref="T:System.Speech.Synthesis.PromptRate" />
      </Docs>
    </Member>
    <Member MemberName="RemoveLexicon">
      <MemberSignature Language="C#" Value="public void RemoveLexicon (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveLexicon(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveLexicon(Uri ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="3939c-187">辞書文書の場所。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-187">The location of the lexicon document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3939c-188">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトから辞書を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-188">Removes a lexicon from the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-189">例については、「<xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3939c-189">See <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3939c-190">一時停止した後、<see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトを再開します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-190">Resumes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object after it has been paused.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoice">
      <MemberSignature Language="C#" Value="public void SelectVoice (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoice(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoice (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoice(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="3939c-191">選択する音声の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-191">The name of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3939c-192">特定の音声を名前で選択します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-192">Selects a specific voice by name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-193">使用して、<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>メソッドおよび<xref:System.Speech.Synthesis.VoiceInfo>クラスの名前を取得するには、選択可能な音声合成 (TTS) 音声がインストールされています。</span><span class="sxs-lookup"><span data-stu-id="3939c-193">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="3939c-194">選択するには、音声の内容全体を渡す、<xref:System.Speech.Synthesis.VoiceInfo.Name%2A>プロパティの引数として、<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-194">To select a voice, pass the entire contents of the <xref:System.Speech.Synthesis.VoiceInfo.Name%2A> property as the argument for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span> <span data-ttu-id="3939c-195"><xref:System.Speech.Synthesis.SpeechSynthesizer>オブジェクトの選択を含む最初のインストール済みの音声`name`で音声の<xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3939c-195">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that contains `name` in the voice's <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="3939c-196"><xref:System.Speech.Synthesis.SpeechSynthesizer>音声と一致するかどうかを決定する、大文字小文字を区別部分文字列比較を実行、`name`です。</span><span class="sxs-lookup"><span data-stu-id="3939c-196">The <xref:System.Speech.Synthesis.SpeechSynthesizer> performs a case-sensitive, substring comparison to determine if the voice matches the `name`.</span></span>  
  
 <span data-ttu-id="3939c-197">アプリケーションを呼び出すと<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>メソッドは、最低限の条件を満たして、レジストリ内で見つかった声のことを確認します。</span><span class="sxs-lookup"><span data-stu-id="3939c-197">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="3939c-198">検証に失敗したすべての音声の<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>設定、<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>プロパティを`False`です。</span><span class="sxs-lookup"><span data-stu-id="3939c-198">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="3939c-199">アプリケーションが、音声を選択できない持つ<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>プロパティは`False`します。</span><span class="sxs-lookup"><span data-stu-id="3939c-199">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="3939c-200">通常、アプリケーションは、音声のない設定<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3939c-200">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="3939c-201">性別、年齢、またはロケールによって、音声を選択するには、いずれかの操作を使用して、<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-201">To select a voice by gender, age, or locale, use one of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectVoiceByHints">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3939c-202">特定の特徴を持つ音声を選択します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-202">Selects a voice with specific characteristics.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-203">使用して、<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>メソッドおよび<xref:System.Speech.Synthesis.VoiceInfo>クラスの名前を取得するには、選択可能な音声合成 (TTS) 音声がインストールされています。</span><span class="sxs-lookup"><span data-stu-id="3939c-203">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="3939c-204"><xref:System.Speech.Synthesis.SpeechSynthesizer>オブジェクトが指定された特性に一致する最初のインストール済みの音声を選択します。</span><span class="sxs-lookup"><span data-stu-id="3939c-204">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that matches the specified characteristics.</span></span>  
  
 <span data-ttu-id="3939c-205">アプリケーションを呼び出すと<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>メソッドは、最低限の条件を満たして、レジストリ内で見つかった声のことを確認します。</span><span class="sxs-lookup"><span data-stu-id="3939c-205">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="3939c-206">検証に失敗したすべての音声の<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>設定、<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>プロパティを`False`です。</span><span class="sxs-lookup"><span data-stu-id="3939c-206">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="3939c-207">アプリケーションが、音声を選択できない持つ<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>プロパティは`False`します。</span><span class="sxs-lookup"><span data-stu-id="3939c-207">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="3939c-208">通常、アプリケーションは、音声のない設定<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3939c-208">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="3939c-209">名前で、音声を選択するには、<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>メソッド</span><span class="sxs-lookup"><span data-stu-id="3939c-209">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="3939c-210">選択する音声の性別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-210">The gender of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3939c-211">特定の性別の音声を選択します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-211">Selects a voice with a specific gender.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-212">使用して、<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>メソッドおよび<xref:System.Speech.Synthesis.VoiceInfo>クラスの名前を取得するには、選択可能な音声合成 (TTS) 音声がインストールされています。</span><span class="sxs-lookup"><span data-stu-id="3939c-212">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="3939c-213"><xref:System.Speech.Synthesis.SpeechSynthesizer>オブジェクト選択の最初のインストール済みの音声が<xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>プロパティと一致する、`gender`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="3939c-213">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> property matches the `gender` parameter.</span></span>  
  
 <span data-ttu-id="3939c-214">アプリケーションを呼び出すと<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>メソッドは、最低限の条件を満たして、レジストリ内で見つかった声のことを確認します。</span><span class="sxs-lookup"><span data-stu-id="3939c-214">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="3939c-215">検証に失敗したすべての音声の<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>設定、<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>プロパティを`False`です。</span><span class="sxs-lookup"><span data-stu-id="3939c-215">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="3939c-216">アプリケーションが、音声を選択できない持つ<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>プロパティは`False`します。</span><span class="sxs-lookup"><span data-stu-id="3939c-216">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="3939c-217">通常、アプリケーションは、音声のない設定<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3939c-217">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="3939c-218">その他の特性に基づいて、音声を選択するを参照してください、他の<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-218">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="3939c-219">名前で、音声を選択するには、<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-219">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="3939c-220">選択する音声の性別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-220">The gender of the voice to select.</span>
          </span>
        </param>
        <param name="age">
          <span data-ttu-id="3939c-221">選択する音声の期間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-221">The age of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3939c-222">特定の性別と年齢の音声を選択します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-222">Selects a voice with a specific gender and age.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-223">使用して、<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>メソッドおよび<xref:System.Speech.Synthesis.VoiceInfo>クラスの名前を取得するには、選択可能な音声合成 (TTS) 音声がインストールされています。</span><span class="sxs-lookup"><span data-stu-id="3939c-223">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="3939c-224"><xref:System.Speech.Synthesis.SpeechSynthesizer>オブジェクトが最初のインストール済みの音声を選択が<xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>と<xref:System.Speech.Synthesis.VoiceInfo.Age%2A>プロパティ一致、`gender`と`age`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="3939c-224">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span>  
  
 <span data-ttu-id="3939c-225">アプリケーションを呼び出すと<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>メソッドは、最低限の条件を満たして、レジストリ内で見つかった声のことを確認します。</span><span class="sxs-lookup"><span data-stu-id="3939c-225">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="3939c-226">検証に失敗したすべての音声の<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>設定、<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>プロパティを`False`です。</span><span class="sxs-lookup"><span data-stu-id="3939c-226">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="3939c-227">アプリケーションが、音声を選択できない持つ<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>プロパティは`False`します。</span><span class="sxs-lookup"><span data-stu-id="3939c-227">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="3939c-228">通常、アプリケーションは、音声のない設定<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3939c-228">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="3939c-229">その他の特性に基づいて、音声を選択するを参照してください、他の<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-229">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="3939c-230">名前で、音声を選択するには、<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-230">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="3939c-231">選択する音声の性別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-231">The gender of the voice to select.</span>
          </span>
        </param>
        <param name="age">
          <span data-ttu-id="3939c-232">選択する音声の期間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-232">The age of the voice to select.</span>
          </span>
        </param>
        <param name="voiceAlternate">
          <span data-ttu-id="3939c-233">選択する音声の場所。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-233">The position of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3939c-234">音声が並べられる位置に基づき、特定の性別や年齢の音声を選択します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-234">Selects a voice with a specific gender and age, based on the position in which the voices are ordered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-235">使用して、<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>メソッドおよび<xref:System.Speech.Synthesis.VoiceInfo>クラスの名前を取得するには、選択可能な音声合成 (TTS) 音声がインストールされています。</span><span class="sxs-lookup"><span data-stu-id="3939c-235">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="3939c-236"><xref:System.Speech.Synthesis.SpeechSynthesizer>オブジェクトの検索がインストールされている意見を持つ<xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>と<xref:System.Speech.Synthesis.VoiceInfo.Age%2A>プロパティ一致、`gender`と`age`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="3939c-236">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds installed voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span> <span data-ttu-id="3939c-237"><xref:System.Speech.Synthesis.SpeechSynthesizer>一致が見つかると、しに等しくなると、音声を返しますのカウント、`voiceAlternate`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="3939c-237">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="3939c-238">アプリケーションを呼び出すと<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>メソッドは、最低限の条件を満たして、レジストリ内で見つかった声のことを確認します。</span><span class="sxs-lookup"><span data-stu-id="3939c-238">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="3939c-239">検証に失敗したすべての音声の<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>設定、<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>プロパティを`False`です。</span><span class="sxs-lookup"><span data-stu-id="3939c-239">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="3939c-240">アプリケーションが、音声を選択できない持つ<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>プロパティは`False`します。</span><span class="sxs-lookup"><span data-stu-id="3939c-240">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="3939c-241">通常、アプリケーションは、音声のない設定<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3939c-241">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="3939c-242">その他の特性に基づいて、音声を選択するを参照してください、他の<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="3939c-242">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="3939c-243">名前で、音声を選択するには、<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-243">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="3939c-244">選択する音声の性別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-244">The gender of the voice to select.</span>
          </span>
        </param>
        <param name="age">
          <span data-ttu-id="3939c-245">選択する音声の期間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-245">The age of the voice to select.</span>
          </span>
        </param>
        <param name="voiceAlternate">
          <span data-ttu-id="3939c-246">選択する音声の場所。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-246">The position of the voice to select.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="3939c-247">選択する音声のロケール。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-247">The locale of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3939c-248">音声が並べられる位置に基づき、特定の性別、年齢、ロケールの音声を選択します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-248">Selects a voice with a specific gender, age, and locale, based on the position in which the voices are ordered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-249"><xref:System.Speech.Synthesis.SpeechSynthesizer>検索意見を持つオブジェクト<xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>、 <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>、および<xref:System.Speech.Synthesis.VoiceInfo.Culture%2A>プロパティ一致、 `gender`、 `age`、および`culture`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="3939c-249">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, and <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> properties match the `gender`, `age`, and `culture` parameters.</span></span> <span data-ttu-id="3939c-250"><xref:System.Speech.Synthesis.SpeechSynthesizer>一致が見つかると、しに等しくなると、音声を返しますのカウント、`voiceAlternate`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="3939c-250">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="3939c-251">Microsoft Windows および System.Speech API は、すべての有効な言語-国コードを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="3939c-251">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="3939c-252">指定された言語を使用して音声合成を実行する、`culture`パラメーターでは、言語、国コードをインストールする必要があるをサポートする音声合成エンジンです。</span><span class="sxs-lookup"><span data-stu-id="3939c-252">To perform text-to-speech using the language specified in the `culture` parameter, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="3939c-253">Microsoft Windows 7 に付属の音声合成エンジンは、次の言語、国コードと協力します。</span><span class="sxs-lookup"><span data-stu-id="3939c-253">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="3939c-254">EN-US です。</span><span class="sxs-lookup"><span data-stu-id="3939c-254">en-US.</span></span> <span data-ttu-id="3939c-255">英語 (米国)</span><span class="sxs-lookup"><span data-stu-id="3939c-255">English (United States)</span></span>  
  
-   <span data-ttu-id="3939c-256">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="3939c-256">zh-CN.</span></span> <span data-ttu-id="3939c-257">中国語 (中国)</span><span class="sxs-lookup"><span data-stu-id="3939c-257">Chinese (China)</span></span>  
  
-   <span data-ttu-id="3939c-258">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="3939c-258">zh-TW.</span></span> <span data-ttu-id="3939c-259">中国語 (台湾)</span><span class="sxs-lookup"><span data-stu-id="3939c-259">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="3939c-260">"En"などの 2 文字の言語コードも許可されています。</span><span class="sxs-lookup"><span data-stu-id="3939c-260">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 <span data-ttu-id="3939c-261">アプリケーションを呼び出すと<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>メソッドは、最低限の条件を満たして、レジストリ内で見つかった声のことを確認します。</span><span class="sxs-lookup"><span data-stu-id="3939c-261">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="3939c-262">検証に失敗したすべての音声の<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>設定、<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>プロパティを`False`です。</span><span class="sxs-lookup"><span data-stu-id="3939c-262">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="3939c-263">アプリケーションが、音声を選択できない持つ<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>プロパティは`False`します。</span><span class="sxs-lookup"><span data-stu-id="3939c-263">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="3939c-264">通常、アプリケーションは、音声のない設定<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3939c-264">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="3939c-265">その他の特性に基づいて、音声を選択するを参照してください、他の<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="3939c-265">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="3939c-266">名前で、音声を選択するには、<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-266">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToAudioStream">
      <MemberSignature Language="C#" Value="public void SetOutputToAudioStream (System.IO.Stream audioDestination, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToAudioStream(class System.IO.Stream audioDestination, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToAudioStream (audioDestination As Stream, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToAudioStream(System::IO::Stream ^ audioDestination, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="audioDestination">
          <span data-ttu-id="3939c-267">合成出力を追加するストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-267">The stream to which to append synthesis output.</span>
          </span>
        </param>
        <param name="formatInfo">
          <span data-ttu-id="3939c-268">合成出力に使用する形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-268">The format to use for the synthesis output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3939c-269">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトを、オーディオ ストリームへの出力を追加するように構成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-269">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to an audio stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-270">呼び出す<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>を解放する、<xref:System.Speech.Synthesis.SpeechSynthesizer>のストリームへの参照。</span><span class="sxs-lookup"><span data-stu-id="3939c-270">Call <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> to release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s  reference to the stream.</span></span>  
  
 <span data-ttu-id="3939c-271">その他の出力の構成オプションを参照してください、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>、および<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-271">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToDefaultAudioDevice">
      <MemberSignature Language="C#" Value="public void SetOutputToDefaultAudioDevice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToDefaultAudioDevice() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToDefaultAudioDevice ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToDefaultAudioDevice();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3939c-272">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトを、既定のオーディオ デバイスへの出力を送信するように構成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-272">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to send output to the default audio device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-273">使用することができます、**サウンド**、Windows のウィンドウ**コントロール パネルの **コンピューターの既定のオーディオ デバイスを構成します。</span><span class="sxs-lookup"><span data-stu-id="3939c-273">You can use the  **Sound** window in the Windows **Control Panel** to configure the default audio device for the computer.</span></span>  
  
 <span data-ttu-id="3939c-274">その他の出力の構成オプションを参照してください、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>、および<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-274">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3939c-275">次の例では、シンセサイザーを使用して、既定のオーディオ出力に語句を話します。</span><span class="sxs-lookup"><span data-stu-id="3939c-275">The following example uses the synthesizer to speak a phrase to the default audio output.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the synthesizer to send output to the default audio device.  
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToNull">
      <MemberSignature Language="C#" Value="public void SetOutputToNull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToNull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToNull();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3939c-276">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトを、合成操作からの出力をデバイス、ファイル、またはストリームに送信しないように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-276">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to not send output from synthesis operations to a device, file, or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-277">このメソッドを使用して、リリース、<xref:System.Speech.Synthesis.SpeechSynthesizer>のファイルまたはストリームへの参照。</span><span class="sxs-lookup"><span data-stu-id="3939c-277">Use this method to release the <xref:System.Speech.Synthesis.SpeechSynthesizer> ‘s reference to a file or stream.</span></span> <span data-ttu-id="3939c-278">例については、「<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3939c-278">See <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> for an example.</span></span>  
  
 <span data-ttu-id="3939c-279">その他の出力の構成オプションを参照してください、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>、および<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-279">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputToWaveFile">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3939c-280">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトを、WAVE 形式のオーディオ形式ファイルに出力を追加するように構成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-280">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-281">解放する、<xref:System.Speech.Synthesis.SpeechSynthesizer>の参照、ファイルを再構成、<xref:System.Speech.Synthesis.SpeechSynthesizer>の出力、たとえば、呼び出すことによって<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3939c-281">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s  reference to the file, reconfigure the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="3939c-282">その他の出力の構成オプションを参照してください、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>、および<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-282">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="3939c-283">ファイルへのパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-283">The path to the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3939c-284">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトを、WAVE 形式のオーディオを含むファイルに出力を追加するように構成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-284">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a file that contains Waveform format audio.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-285">出力を構成して、オーディオ形式を指定してを使用して、<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-285">To configure the output and specify the audio format, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3939c-286">次の例のインスタンスを使用して<xref:System.Media.SoundPlayer>.wav ファイルに出力されているプロンプトを再生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-286">The following example uses an instance of <xref:System.Media.SoundPlayer> to play a prompt that has been output to a .wav file.</span></span> <span data-ttu-id="3939c-287"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>呼び出しが非同期で、<xref:System.Media.SoundPlayer>インスタンスが作成される (および<xref:System.Media.SoundPlayer.Play%2A>呼び出されるメソッド) のハンドラーで、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>イベント。</span><span class="sxs-lookup"><span data-stu-id="3939c-287">Because the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> call is asynchronous, the <xref:System.Media.SoundPlayer> instance is created (and the <xref:System.Media.SoundPlayer.Play%2A> method invoked) in the handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToWaveFile(@"C:\Test\Sample.wav");  
  
      // Register for the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Build a prompt.  
      PromptBuilder builder = new PromptBuilder();  
      builder.AppendText("This sample asynchronously speaks a prompt to a WAVE file.");  
  
      // Speak the string asynchronously.  
      synth.SpeakAsync(builder);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Handle the SpeakCompleted event.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
  
      // Create a SoundPlayer instance to play the output audio file.  
      System.Media.SoundPlayer m_SoundPlayer =  
        new System.Media.SoundPlayer(@"C:\Test\Sample.wav");  
  
      //  Play the output file.  
      m_SoundPlayer.Play();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="3939c-288">ファイルへのパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-288">The path to the file.</span>
          </span>
        </param>
        <param name="formatInfo">
          <span data-ttu-id="3939c-289">オーディオ形式の情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-289">The audio format information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3939c-290">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> のオブジェクトを、指定された形式で WAVE 形式のオーディオ形式ファイルに出力を追加するように構成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-290">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file in a specified format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3939c-291">次の例では、音声合成の出力の形式を指定し、WAV ファイルを送信します。</span><span class="sxs-lookup"><span data-stu-id="3939c-291">The following example specifies the format of the output of speech synthesis and sends it to a WAV file.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\temp\test.wav",   
          new SpeechAudioFormatInfo(32000, AudioBitsPerSample.Sixteen, AudioChannel.Mono));  
  
        // Create a SoundPlayer instance to play output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =   
          new System.Media.SoundPlayer(@"C:\temp\test.wav");  
  
        // Build a prompt.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("This is sample output to a WAVE file.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveStream">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveStream (System.IO.Stream audioDestination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveStream(class System.IO.Stream audioDestination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveStream (audioDestination As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveStream(System::IO::Stream ^ audioDestination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioDestination">
          <span data-ttu-id="3939c-292">合成出力を追加するストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-292">The stream to which to append synthesis output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3939c-293">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトを、WAVE 形式のオーディオを含むストリームに出力を追加するように構成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-293">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a stream that contains Waveform format audio.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-294">解放する、<xref:System.Speech.Synthesis.SpeechSynthesizer>の参照に、ストリーム reconfigure シンセサイザーの出力、たとえば、呼び出すことによって<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3939c-294">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s reference to the stream, reconfigure the synthesizer's output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="3939c-295">その他の出力の構成オプションを参照してください、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>、および<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-295">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3939c-296">次の例では、WAV ストリームに語句を出力します。</span><span class="sxs-lookup"><span data-stu-id="3939c-296">The following example outputs a phrase to a WAV stream.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      using (MemoryStream stream = new MemoryStream())  
      {  
  
        // Create a SoundPlayer instance to play the output audio file.  
        MemoryStream streamAudio = new MemoryStream();  
        System.Media.SoundPlayer m_SoundPlayer = new System.Media.SoundPlayer();  
  
        // Configure the synthesizer to output to an audio stream.  
        synth.SetOutputToWaveStream(streamAudio);  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
        streamAudio.Position = 0;  
        m_SoundPlayer.Stream = streamAudio;  
        m_SoundPlayer.Play();  
  
        // Set the synthesizer output to null to release the stream.   
        synth.SetOutputToNull();  
  
        // Insert code to persist or process the stream contents here.  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Speak">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3939c-297">文字列、<see cref="T:System.Speech.Synthesis.Prompt" /> オブジェクト、または <see cref="T:System.Speech.Synthesis.PromptBuilder" /> オブジェクトから同期で出力される音声を生成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-297">Generates speech output synchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-298"><xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>メソッドが同期的に音声を生成します。</span><span class="sxs-lookup"><span data-stu-id="3939c-298">The <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods generate speech synchronously.</span></span> <span data-ttu-id="3939c-299">コンテンツまでメソッドを返さない、<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>インスタンスが完全に読み上げられます。</span><span class="sxs-lookup"><span data-stu-id="3939c-299">The methods do not return until the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> instance has been completely spoken.</span></span> <span data-ttu-id="3939c-300">これは、音声を生成する最も簡単な方法です。</span><span class="sxs-lookup"><span data-stu-id="3939c-300">This is the simplest way to generate speech.</span></span> <span data-ttu-id="3939c-301">ただし場合は、アプリケーションは、話すときにタスクを実行する必要があります、たとえば強調表示テキスト、ペイント アニメーション、モニター コントロール、またはその他のタスクを使用して、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>メソッドまたは<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>音声を非同期に生成する方法です。</span><span class="sxs-lookup"><span data-stu-id="3939c-301">However, if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method to generate speech asynchronously.</span></span>  
  
 <span data-ttu-id="3939c-302">このメソッドの呼び出し中に、<xref:System.Speech.Synthesis.SpeechSynthesizer>次のイベントを発生させることができます。</span><span class="sxs-lookup"><span data-stu-id="3939c-302">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="3939c-303"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>。</span><span class="sxs-lookup"><span data-stu-id="3939c-303"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="3939c-304">シンセサイザーの話し方の状態が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-304">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="3939c-305"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>。</span><span class="sxs-lookup"><span data-stu-id="3939c-305"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="3939c-306">シンセサイザーが音声の生成を開始するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-306">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="3939c-307"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>。</span><span class="sxs-lookup"><span data-stu-id="3939c-307"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="3939c-308">シンセサイザーは文字または音声の言語で音を慎重に構成する文字の組み合わせに達するたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-308">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="3939c-309"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>。</span><span class="sxs-lookup"><span data-stu-id="3939c-309"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="3939c-310">シンセサイザーたびに発生する単語を話す完了します。</span><span class="sxs-lookup"><span data-stu-id="3939c-310">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="3939c-311"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>。</span><span class="sxs-lookup"><span data-stu-id="3939c-311"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="3939c-312">音声出力口または音声の生成に使用される顔筋肉の位置の変更を必要とするたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-312">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="3939c-313"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>。</span><span class="sxs-lookup"><span data-stu-id="3939c-313"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="3939c-314">シンセサイザーがメッセージ内のブックマークを検出したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-314">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="3939c-315"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>。</span><span class="sxs-lookup"><span data-stu-id="3939c-315"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="3939c-316">シンセサイザーの声が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-316">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="3939c-317"><xref:System.Speech.Synthesis.SpeechSynthesizer>は発生しません、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>イベントのいずれかの処理中に、<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-317">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt">
          <span data-ttu-id="3939c-318">話すコンテンツ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-318">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3939c-319">非同期的に <see cref="T:System.Speech.Synthesis.Prompt" /> オブジェクトのコンテンツを指示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-319">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-320">内容を非同期的に読み上げるために、<xref:System.Speech.Synthesis.Prompt>オブジェクトを使用して<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3939c-320">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3939c-321">次の例を作成、<xref:System.Speech.Synthesis.Prompt>文字列からオブジェクトへの引数として、オブジェクトを渡すと、<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-321">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a prompt from a string.  
        Prompt color = new Prompt("What is your favorite color?");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(color);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder">
          <span data-ttu-id="3939c-322">話すコンテンツ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-322">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3939c-323">非同期的に <see cref="T:System.Speech.Synthesis.PromptBuilder" /> オブジェクトのコンテンツを指示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-323">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-324">内容を非同期的に読み上げるために、<xref:System.Speech.Synthesis.PromptBuilder>オブジェクトを使用して<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3939c-324">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3939c-325">次の例を作成、<xref:System.Speech.Synthesis.PromptBuilder>文字列からオブジェクトへの引数として、オブジェクトを渡すと、<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-325">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a text string.  
        PromptBuilder song = new PromptBuilder();  
        song.AppendText("Say the name of the song you want to hear");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(song);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="3939c-326">読み上げるテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-326">The text to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3939c-327">同期的に文字列のコンテンツを指示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-327">Synchronously speaks the contents of a string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-328">SSML マークアップを含む文字列を話す同期的を使用して、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-328">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="3939c-329">文字列の内容を話す非同期的を使用して、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-329">To asynchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3939c-330">次の例のように、<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>メソッドの音声が同期的に出力を生成する最も簡単な手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="3939c-330">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method provides the simplest means to generate speech output synchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a string synchronously.  
        synth.Speak("What is your favorite color?");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SpeakAsync">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3939c-331">文字列、<see cref="T:System.Speech.Synthesis.Prompt" /> オブジェクト、または <see cref="T:System.Speech.Synthesis.PromptBuilder" /> オブジェクトから非同期で出力される音声を生成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-331">Generates speech output asynchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-332"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>メソッドが非同期的に音声を生成します。</span><span class="sxs-lookup"><span data-stu-id="3939c-332">The <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods generate speech asynchronously.</span></span> <span data-ttu-id="3939c-333">コンテンツを待機することがなく、メソッドがすぐに返す、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>話すを終了するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3939c-333">The methods return immediately without waiting for the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> object to finish speaking.</span></span> <span data-ttu-id="3939c-334">使用して<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>場合は、アプリケーションは、話すときにタスクを実行、たとえばテキストを強調表示する必要があります、アニメーション、モニター コントロール、またはその他のタスクを描画します。</span><span class="sxs-lookup"><span data-stu-id="3939c-334">Use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks.</span></span>  
  
 <span data-ttu-id="3939c-335">このメソッドの呼び出し中に、<xref:System.Speech.Synthesis.SpeechSynthesizer>次のイベントを発生させることができます。</span><span class="sxs-lookup"><span data-stu-id="3939c-335">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="3939c-336"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>。</span><span class="sxs-lookup"><span data-stu-id="3939c-336"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="3939c-337">シンセサイザーの話し方の状態が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-337">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="3939c-338"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>。</span><span class="sxs-lookup"><span data-stu-id="3939c-338"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="3939c-339">シンセサイザーが音声の生成を開始するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-339">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="3939c-340"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>。</span><span class="sxs-lookup"><span data-stu-id="3939c-340"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="3939c-341">シンセサイザーは文字または音声の言語で音を慎重に構成する文字の組み合わせに達するたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-341">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="3939c-342"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>。</span><span class="sxs-lookup"><span data-stu-id="3939c-342"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="3939c-343">シンセサイザーたびに発生する単語を話す完了します。</span><span class="sxs-lookup"><span data-stu-id="3939c-343">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="3939c-344"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>。</span><span class="sxs-lookup"><span data-stu-id="3939c-344"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="3939c-345">音声出力口または音声の生成に使用される顔筋肉の位置の変更を必要とするたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-345">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="3939c-346"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>。</span><span class="sxs-lookup"><span data-stu-id="3939c-346"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="3939c-347">シンセサイザーがメッセージ内のブックマークを検出したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-347">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="3939c-348"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>。</span><span class="sxs-lookup"><span data-stu-id="3939c-348"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="3939c-349">シンセサイザーの声が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-349">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="3939c-350"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>。</span><span class="sxs-lookup"><span data-stu-id="3939c-350"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="3939c-351">シンセサイザーが終了するときに発生する、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>操作します。</span><span class="sxs-lookup"><span data-stu-id="3939c-351">Raised when the synthesizer finishes a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="3939c-352">使用することができます、アプリケーションが話すときにタスクを実行する必要がない場合、<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>メソッドまたは<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>音声を同期的に生成する方法です。</span><span class="sxs-lookup"><span data-stu-id="3939c-352">If your application does not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public void SpeakAsync (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsync(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsync(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt">
          <span data-ttu-id="3939c-353">話すコンテンツ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-353">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3939c-354">非同期的に <see cref="T:System.Speech.Synthesis.Prompt" /> のオブジェクトのコンテンツを指示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-354">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-355">使用して、プロンプトの非同期話すを取り消すことができます、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A>または<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-355">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
 <span data-ttu-id="3939c-356">内容を同期的に読み上げるために、<xref:System.Speech.Synthesis.Prompt>オブジェクトを使用して<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3939c-356">To synchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3939c-357">次の例を作成、<xref:System.Speech.Synthesis.Prompt>文字列からオブジェクトへの引数として、オブジェクトを渡すと、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-357">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a prompt from a string.  
      Prompt color = new Prompt("What is your favorite color?");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(color);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder">
          <span data-ttu-id="3939c-358">話すコンテンツ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-358">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3939c-359">非同期的に <see cref="T:System.Speech.Synthesis.PromptBuilder" /> のオブジェクトのコンテンツを指示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-359">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3939c-360">発話するコンテンツを格納するオブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-360">Returns the object that contains the content to speak.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-361">内容を同期的に読み上げるために、<xref:System.Speech.Synthesis.PromptBuilder>オブジェクトを使用して<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3939c-361">To synchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3939c-362">次の例を作成、<xref:System.Speech.Synthesis.PromptBuilder>文字列からオブジェクトへの引数として、オブジェクトを渡すと、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-362">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a PromptBuilder object and append a text string.  
      PromptBuilder song = new PromptBuilder();  
      song.AppendText("Say the name of the song you want to hear");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(song);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="3939c-363">読み上げるテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-363">The text to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3939c-364">非同期的に文字列のコンテンツを指示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-364">Asynchronously speaks the contents of a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3939c-365">発話するコンテンツを格納するオブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-365">Returns the object that contains the content to speak.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-366">SSML マークアップを含む文字列を話す非同期的を使用して、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-366">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="3939c-367">文字列の内容を話す同期的を使用して、<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-367">To synchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span> <span data-ttu-id="3939c-368">使用して、プロンプトの非同期話すを取り消すことができます、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A>または<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-368">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3939c-369">次の例のように、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>メソッドを音声に非同期的に出力を生成する最も簡単な方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="3939c-369">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method provides the simplest means to generate speech output asynchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancel">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancel (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancel(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancel(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt">
          <span data-ttu-id="3939c-370">読み上げ操作を取り消すコンテンツ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-370">The content for which to cancel a speak operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3939c-371">キューに挿入されたプロンプトの非同期合成操作をキャンセルします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-371">Cancels the asynchronous synthesis operation for a queued prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-372">非同期のキャンセルにこのメソッドを使用することもできます。 次の操作を話します。</span><span class="sxs-lookup"><span data-stu-id="3939c-372">You can also use this method to cancel an asynchronous speak operation for the following:</span></span>  
  
-   <span data-ttu-id="3939c-373">内容、<xref:System.String>によって指定された、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-373">The contents of a <xref:System.String> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="3939c-374">内容、<xref:System.Speech.Synthesis.PromptBuilder>によって指定された、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-374">The contents of a <xref:System.Speech.Synthesis.PromptBuilder> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="3939c-375">内容、 <xref:System.String> SSML で指定されたを含む、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-375">The contents of a <xref:System.String> containing SSML specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span>  
  
 <span data-ttu-id="3939c-376">呼び出すと<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>、または<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>、System.Speech を作成、<xref:System.Speech.Synthesis.Prompt>オブジェクトしメソッドのパラメーターの内容の設定を返します、<xref:System.Speech.Synthesis.Prompt>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3939c-376">When you call <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, System.Speech creates a <xref:System.Speech.Synthesis.Prompt> object and populates it with the contents of the method's parameter, and returns the <xref:System.Speech.Synthesis.Prompt> object.</span></span> <span data-ttu-id="3939c-377">返されたのコピーを保持する場合<xref:System.Speech.Synthesis.Prompt>を渡すことができます<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A>で指定された話し方の内容をキャンセルする、<xref:System.String>または<xref:System.Speech.Synthesis.PromptBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3939c-377">If you retain a copy of the returned <xref:System.Speech.Synthesis.Prompt>, you can pass it into <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> to cancel speaking content specified in a <xref:System.String> or a <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancelAll">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancelAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancelAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakAsyncCancelAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancelAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3939c-378">すべてのキュー操作、非同期操作、音声合成操作をキャンセルします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-378">Cancels all queued, asynchronous, speech synthesis operations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3939c-379">次の例を使用して<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A>新しいプロンプトを読み上げることができるように、プロンプトでの非同期話すをキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="3939c-379">The following example show a use of <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> to cancel the asynchronous speaking of a prompt, so that a new prompt can be spoken.</span></span> <span data-ttu-id="3939c-380">なお、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>イベントが発生したときに、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>操作が取り消されました。</span><span class="sxs-lookup"><span data-stu-id="3939c-380">Note that the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event fires when a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation is cancelled.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Threading;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the StateChanged event.  
      synth.StateChanged += new EventHandler<StateChangedEventArgs>(synth_StateChanged);  
  
      // Subscribe to the SpeakProgress event.  
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Subscribe to the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Begin speaking a text string asynchronously.  
      synth.SpeakAsync("Speech is an effective and natural way for people to interact with applications, " +  
        "complementing or even replacing the use of mice, keyboards, controllers, and gestures.");  
  
      // Speak for four seconds.  
      Thread.Sleep(4000);  
  
      // Cancel the SpeakAsync operation and wait one second.  
      synth.SpeakAsyncCancelAll();  
      Thread.Sleep(1000);  
  
      // Speak a new text string.  
      synth.Speak("An urgent email message has arrived. Do you want to hear it?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write to the console when the SpeakAsync operation has been cancelled.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
      Console.WriteLine("\nThe SpeakAsync operation was cancelled!!");  
    }  
  
    // When it changes, write the state of the SpeechSynthesizer to the console.  
    static void synth_StateChanged(object sender, StateChangedEventArgs e)  
    {  
      Console.WriteLine("\nSynthesizer State: {0}    Previous State: {1}\n", e.State, e.PreviousState);  
    }  
  
    // Write the text being spoken by the SpeechSynthesizer to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }      
  }    
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakCompleted As EventHandler(Of SpeakCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakCompletedEventArgs ^&gt; ^ SpeakCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3939c-381">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> がプロンプトの読み上げを完了するときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-381">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> completes the speaking of a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-382"><xref:System.Speech.Synthesis.SpeechSynthesizer>を生成、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>イベントのいずれかの完了時に、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>または<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-382">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event at the completion of any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> or  <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="3939c-383"><xref:System.Speech.Synthesis.SpeakCompletedEventArgs>クラスのプロパティを持たないし、からのデータを返さない、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>イベント。</span><span class="sxs-lookup"><span data-stu-id="3939c-383">The <xref:System.Speech.Synthesis.SpeakCompletedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span> <span data-ttu-id="3939c-384">アプリケーションの作成者のイベント ハンドラーを記述するために用意されたこと、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>イベント。</span><span class="sxs-lookup"><span data-stu-id="3939c-384">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.SpeakCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SpeakProgress">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakProgress As EventHandler(Of SpeakProgressEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakProgressEventArgs ^&gt; ^ SpeakProgress;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3939c-385">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> がプロンプトの個々の各単語を読み上げた後に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-385">Raised after the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> speaks each individual word of a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-386"><xref:System.Speech.Synthesis.SpeechSynthesizer>の新しい各単語内のいずれかを使用して、プロンプトで、これは、このイベントを発生させる、 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>、または<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-386">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event for each new word that it speaks in a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="3939c-387">例と、イベントに関連付けられているデータの詳細については、次を参照してください。<xref:System.Speech.Synthesis.SpeakProgressEventArgs>です。</span><span class="sxs-lookup"><span data-stu-id="3939c-387">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakSsml">
      <MemberSignature Language="C#" Value="public void SpeakSsml (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakSsml(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakSsml (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakSsml(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="3939c-388">読み上げる SSML 文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-388">The SSML string to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3939c-389">同期的に SSML マークアップを含む <see cref="T:System.String" /> を指示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-389">Synchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-390">内容、`textToSpeak`パラメーターを含める必要があります、`speak`要素に従っている必要があります、[音声合成マークアップ言語 (SSML) バージョン 1.0](http://go.microsoft.com/fwlink/?LinkId=201763)です。</span><span class="sxs-lookup"><span data-stu-id="3939c-390">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="3939c-391">詳細については、次を参照してください。[音声合成マークアップ言語リファレンス](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94)です。</span><span class="sxs-lookup"><span data-stu-id="3939c-391">For more information, see [Speech Synthesis Markup Language Reference](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="3939c-392">SSML マークアップを含む文字列を話す非同期的を使用して、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-392">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="3939c-393">使用することができます<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>を同期と言えば SSML マークアップを含まない文字列を開始します。</span><span class="sxs-lookup"><span data-stu-id="3939c-393">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> to initiate the synchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="3939c-394">このメソッドの呼び出し中に、<xref:System.Speech.Synthesis.SpeechSynthesizer>次のイベントを発生させることができます。</span><span class="sxs-lookup"><span data-stu-id="3939c-394">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="3939c-395"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>。</span><span class="sxs-lookup"><span data-stu-id="3939c-395"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="3939c-396">シンセサイザーの話し方の状態が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-396">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="3939c-397"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>。</span><span class="sxs-lookup"><span data-stu-id="3939c-397"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="3939c-398">シンセサイザーが音声の生成を開始するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-398">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="3939c-399"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>。</span><span class="sxs-lookup"><span data-stu-id="3939c-399"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="3939c-400">シンセサイザーは文字または音声の言語で音を慎重に構成する文字の組み合わせに達するたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-400">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="3939c-401"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>。</span><span class="sxs-lookup"><span data-stu-id="3939c-401"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="3939c-402">シンセサイザーたびに発生する単語を話す完了します。</span><span class="sxs-lookup"><span data-stu-id="3939c-402">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="3939c-403"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>。</span><span class="sxs-lookup"><span data-stu-id="3939c-403"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="3939c-404">音声出力口または音声の生成に使用される顔筋肉の位置の変更を必要とするたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-404">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="3939c-405"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>。</span><span class="sxs-lookup"><span data-stu-id="3939c-405"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="3939c-406">シンセサイザーがメッセージ内のブックマークを検出したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-406">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="3939c-407"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>。</span><span class="sxs-lookup"><span data-stu-id="3939c-407"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="3939c-408">シンセサイザーの声が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-408">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="3939c-409"><xref:System.Speech.Synthesis.SpeechSynthesizer>は発生しません、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>イベントを処理中に、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-409">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3939c-410">次の例では、日付を表示します。 1/29/2009 を日付、月、日、年の順にします。</span><span class="sxs-lookup"><span data-stu-id="3939c-410">The following example renders the date 1/29/2009 as a date, in month, day, year order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakSsml(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakSsmlAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakSsmlAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakSsmlAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakSsmlAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakSsmlAsync(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="3939c-411">読み上げるための SMML のマークアップ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-411">The SMML markup to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3939c-412">非同期的に SSML マークアップを含む <see cref="T:System.String" /> を指示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-412">Asynchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-413">内容、`textToSpeak`パラメーターを含める必要があります、`speak`要素に従っている必要があります、[音声合成マークアップ言語 (SSML) バージョン 1.0](http://go.microsoft.com/fwlink/?LinkId=201763)です。</span><span class="sxs-lookup"><span data-stu-id="3939c-413">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="3939c-414">詳細については、次を参照してください。[音声合成マークアップ言語リファレンス](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94)です。</span><span class="sxs-lookup"><span data-stu-id="3939c-414">For more information, see [Speech Synthesis Markup Language Reference](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="3939c-415">SSML マークアップを含む文字列を話す同期的を使用して、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-415">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="3939c-416">使用することができます<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>SSML マークアップを含まない文字列の非同期話すを開始します。</span><span class="sxs-lookup"><span data-stu-id="3939c-416">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> to initiate the asynchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="3939c-417">このメソッドの呼び出し中に、<xref:System.Speech.Synthesis.SpeechSynthesizer>次のイベントを発生させることができます。</span><span class="sxs-lookup"><span data-stu-id="3939c-417">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="3939c-418"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>。</span><span class="sxs-lookup"><span data-stu-id="3939c-418"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="3939c-419">シンセサイザーの話し方の状態が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-419">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="3939c-420"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>。</span><span class="sxs-lookup"><span data-stu-id="3939c-420"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="3939c-421">シンセサイザーが音声の生成を開始するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-421">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="3939c-422"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>。</span><span class="sxs-lookup"><span data-stu-id="3939c-422"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="3939c-423">シンセサイザーは文字または音声の言語で音を慎重に構成する文字の組み合わせに達するたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-423">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="3939c-424"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>。</span><span class="sxs-lookup"><span data-stu-id="3939c-424"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="3939c-425">シンセサイザーたびに発生する単語を話す完了します。</span><span class="sxs-lookup"><span data-stu-id="3939c-425">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="3939c-426"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>。</span><span class="sxs-lookup"><span data-stu-id="3939c-426"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="3939c-427">音声出力口または音声の生成に使用される顔筋肉の位置の変更を必要とするたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-427">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="3939c-428"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>。</span><span class="sxs-lookup"><span data-stu-id="3939c-428"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="3939c-429">シンセサイザーがメッセージ内のブックマークを検出したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-429">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="3939c-430"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>。</span><span class="sxs-lookup"><span data-stu-id="3939c-430"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="3939c-431">シンセサイザーの声が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-431">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="3939c-432"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>。</span><span class="sxs-lookup"><span data-stu-id="3939c-432"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="3939c-433">シンセサイザーが処理を終了するときに発生する、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>操作します。</span><span class="sxs-lookup"><span data-stu-id="3939c-433">Raised when the synthesizer finishes processing a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="3939c-434">使用することができます、アプリケーション dos 話すときにタスクを実行する必要がない場合、<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>または<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>音声を同期的に生成する方法です。</span><span class="sxs-lookup"><span data-stu-id="3939c-434">If your application dos not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
   
  
## Examples  
  
```  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakSsmlAsync(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakStarted As EventHandler(Of SpeakStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakStartedEventArgs ^&gt; ^ SpeakStarted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3939c-435">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> がプロンプトの読み上げを開始するときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-435">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> begins the speaking of a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-436"><xref:System.Speech.Synthesis.SpeechSynthesizer>のいずれかを使用して、プロンプトの処理が開始したときに、このイベントを発生させる、 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>、または<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-436">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when it begins processing a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="3939c-437"><xref:System.Speech.Synthesis.SpeakStartedEventArgs>クラスのプロパティを持たないし、からのデータを返さない、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>イベント。</span><span class="sxs-lookup"><span data-stu-id="3939c-437">The <xref:System.Speech.Synthesis.SpeakStartedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span> <span data-ttu-id="3939c-438">アプリケーションの作成者のイベント ハンドラーを記述するために用意されたこと、<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>イベント。</span><span class="sxs-lookup"><span data-stu-id="3939c-438">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.SynthesizerState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.SynthesizerState State" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As SynthesizerState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::SynthesizerState State { System::Speech::Synthesis::SynthesizerState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.SynthesizerState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3939c-439">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトの現在の音声読み上げの状態を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-439">Gets the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3939c-440">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトの現在の音声読み上げの状態を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-440">Returns the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-441">新しい状態を取得する、 <xref:System.Speech.Synthesis.SpeechSynthesizer> 、変更後を使用して、<xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A>のプロパティ、<xref:System.Speech.Synthesis.StateChangedEventArgs>クラスです。</span><span class="sxs-lookup"><span data-stu-id="3939c-441">To get the new state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> after it changes, use the <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> property of the <xref:System.Speech.Synthesis.StateChangedEventArgs> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3939c-442">次の例の状態を示しています、 <xref:System.Speech.Synthesis.SpeechSynthesizer> 、実行時に、前後に、プロンプトで話しします。</span><span class="sxs-lookup"><span data-stu-id="3939c-442">The following example illustrates the state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> before, during, and after speaking a prompt.</span></span>  
  
```csharp  
using System;  
using System.Threading;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer() ;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the SpeakProgress event.         
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Write the state of the SpeechSynthesizer to the console.  
      Console.WriteLine("Current Synthesizer state: " + synth.State + "\n");  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      // Write the state of the SpeechSynthesizer to the console while it is speaking.  
      Thread.Sleep(1000);  
      Console.WriteLine("\n - Current Synthesizer state: " + synth.State + " - \n");  
  
      // Write the state of the SpeechSynthesizer to the console after it is done speaking.  
      Thread.Sleep(2000);  
      Console.WriteLine("\nCurrent Synthesizer state: " + synth.State);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChanged As EventHandler(Of StateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::StateChangedEventArgs ^&gt; ^ StateChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3939c-443">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> の状態が変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-443">Raised when the state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-444"><xref:System.Speech.Synthesis.SpeechSynthesizer>このイベントを発生させるときに、話す<xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A>変更します。</span><span class="sxs-lookup"><span data-stu-id="3939c-444">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when its speaking <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> changes.</span></span> <span data-ttu-id="3939c-445">例と、イベントに関連付けられているデータの詳細については、次を参照してください。<xref:System.Speech.Synthesis.StateChangedEventArgs>です。</span><span class="sxs-lookup"><span data-stu-id="3939c-445">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.StateChangedEventArgs>.</span></span>  
  
 <span data-ttu-id="3939c-446">一時停止し、音声合成の再開を使用して、<xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A>と<xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-446">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="VisemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VisemeReached As EventHandler(Of VisemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VisemeReachedEventArgs ^&gt; ^ VisemeReached;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3939c-447">viseme に到達したときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-447">Raised when a viseme is reached.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-448">Viseme は、音素の発音口とフェイスの基本的な位置です。</span><span class="sxs-lookup"><span data-stu-id="3939c-448">A viseme is the basic position of the mouth and face when pronouncing a phoneme.</span></span> <span data-ttu-id="3939c-449">Visemes は、音素のビジュアル表現です。</span><span class="sxs-lookup"><span data-stu-id="3939c-449">Visemes are visual representations of phonemes.</span></span>  
  
 <span data-ttu-id="3939c-450">System.Speech では、英語 (米国)、対応する 1 つまたは複数の音素を 21 visemes をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="3939c-450">System.Speech supports 21 visemes for US English, each of which corresponds to one or more phonemes.</span></span>  <span data-ttu-id="3939c-451"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> 達すると新しい音素がある別の対応する viseme に達する前音素よりときにイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-451"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> events are raised when a new phoneme reached has a different corresponding viseme than the previous phoneme reached.</span></span> <span data-ttu-id="3939c-452">いくつか visemes が 1 つ以上の音素を表すため、<xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>音素の前と同じ viseme に対応する次の音素に達した場合、イベントは生成されません。</span><span class="sxs-lookup"><span data-stu-id="3939c-452">Since some visemes represent more than one phoneme, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not generated if the next phoneme reached corresponds to the same viseme as the previous phoneme.</span></span> <span data-ttu-id="3939c-453">たとえば、話された単語「このゾーン」を<xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>"this"で"s"と「ゾーン」で"z"のイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="3939c-453">For example, for the spoken words "this zone", a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event is raised for the "s" in "this" and the "z" in "zone".</span></span> <span data-ttu-id="3939c-454">ただし、 <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> "this"で"s"として同じ viseme に対応しているため、"z"で「ゾーン」のイベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="3939c-454">However, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not raised for the "z" in "zone" because it corresponds to the same viseme as the "s" in "this".</span></span>  
  
 <span data-ttu-id="3939c-455">21 SAPI 音素と英語 (米国) で viseme に対応する音素グループの一覧を次に示します。</span><span class="sxs-lookup"><span data-stu-id="3939c-455">The following is a list of the 21 SAPI phonemes and phoneme groups that correspond to a viseme in US English.</span></span>  
  
|<span data-ttu-id="3939c-456">Viseme</span><span class="sxs-lookup"><span data-stu-id="3939c-456">Viseme</span></span>|<span data-ttu-id="3939c-457">Phoneme(s)</span><span class="sxs-lookup"><span data-stu-id="3939c-457">Phoneme(s)</span></span>|  
|------------|------------------|  
|<span data-ttu-id="3939c-458">0</span><span class="sxs-lookup"><span data-stu-id="3939c-458">0</span></span>|<span data-ttu-id="3939c-459">サイレント状態</span><span class="sxs-lookup"><span data-stu-id="3939c-459">silence</span></span>|  
|<span data-ttu-id="3939c-460">1</span><span class="sxs-lookup"><span data-stu-id="3939c-460">1</span></span>|<span data-ttu-id="3939c-461">ae、ax、ah</span><span class="sxs-lookup"><span data-stu-id="3939c-461">ae, ax, ah</span></span>|  
|<span data-ttu-id="3939c-462">2</span><span class="sxs-lookup"><span data-stu-id="3939c-462">2</span></span>|<span data-ttu-id="3939c-463">aa</span><span class="sxs-lookup"><span data-stu-id="3939c-463">aa</span></span>|  
|<span data-ttu-id="3939c-464">3</span><span class="sxs-lookup"><span data-stu-id="3939c-464">3</span></span>|<span data-ttu-id="3939c-465">ao</span><span class="sxs-lookup"><span data-stu-id="3939c-465">ao</span></span>|  
|<span data-ttu-id="3939c-466">4</span><span class="sxs-lookup"><span data-stu-id="3939c-466">4</span></span>|<span data-ttu-id="3939c-467">欄、eh、しかし</span><span class="sxs-lookup"><span data-stu-id="3939c-467">ey, eh, uh</span></span>|  
|<span data-ttu-id="3939c-468">5</span><span class="sxs-lookup"><span data-stu-id="3939c-468">5</span></span>|<span data-ttu-id="3939c-469">er</span><span class="sxs-lookup"><span data-stu-id="3939c-469">er</span></span>|  
|<span data-ttu-id="3939c-470">6</span><span class="sxs-lookup"><span data-stu-id="3939c-470">6</span></span>|<span data-ttu-id="3939c-471">ix、y、iy、組み込み</span><span class="sxs-lookup"><span data-stu-id="3939c-471">y, iy, ih, ix</span></span>|  
|<span data-ttu-id="3939c-472">7</span><span class="sxs-lookup"><span data-stu-id="3939c-472">7</span></span>|<span data-ttu-id="3939c-473">ワシントン、w</span><span class="sxs-lookup"><span data-stu-id="3939c-473">w, uw</span></span>|  
|<span data-ttu-id="3939c-474">8</span><span class="sxs-lookup"><span data-stu-id="3939c-474">8</span></span>|<span data-ttu-id="3939c-475">ow</span><span class="sxs-lookup"><span data-stu-id="3939c-475">ow</span></span>|  
|<span data-ttu-id="3939c-476">9</span><span class="sxs-lookup"><span data-stu-id="3939c-476">9</span></span>|<span data-ttu-id="3939c-477">aw</span><span class="sxs-lookup"><span data-stu-id="3939c-477">aw</span></span>|  
|<span data-ttu-id="3939c-478">10</span><span class="sxs-lookup"><span data-stu-id="3939c-478">10</span></span>|<span data-ttu-id="3939c-479">oy</span><span class="sxs-lookup"><span data-stu-id="3939c-479">oy</span></span>|  
|<span data-ttu-id="3939c-480">11</span><span class="sxs-lookup"><span data-stu-id="3939c-480">11</span></span>|<span data-ttu-id="3939c-481">ay</span><span class="sxs-lookup"><span data-stu-id="3939c-481">ay</span></span>|  
|<span data-ttu-id="3939c-482">12</span><span class="sxs-lookup"><span data-stu-id="3939c-482">12</span></span>|<span data-ttu-id="3939c-483">h</span><span class="sxs-lookup"><span data-stu-id="3939c-483">h</span></span>|  
|<span data-ttu-id="3939c-484">13</span><span class="sxs-lookup"><span data-stu-id="3939c-484">13</span></span>|<span data-ttu-id="3939c-485">r</span><span class="sxs-lookup"><span data-stu-id="3939c-485">r</span></span>|  
|<span data-ttu-id="3939c-486">14</span><span class="sxs-lookup"><span data-stu-id="3939c-486">14</span></span>|<span data-ttu-id="3939c-487">l</span><span class="sxs-lookup"><span data-stu-id="3939c-487">l</span></span>|  
|<span data-ttu-id="3939c-488">16</span><span class="sxs-lookup"><span data-stu-id="3939c-488">15</span></span>|<span data-ttu-id="3939c-489">s, z</span><span class="sxs-lookup"><span data-stu-id="3939c-489">s, z</span></span>|  
|<span data-ttu-id="3939c-490">16</span><span class="sxs-lookup"><span data-stu-id="3939c-490">16</span></span>|<span data-ttu-id="3939c-491">sh、ch、jh、zh</span><span class="sxs-lookup"><span data-stu-id="3939c-491">sh, ch, jh, zh</span></span>|  
|<span data-ttu-id="3939c-492">17</span><span class="sxs-lookup"><span data-stu-id="3939c-492">17</span></span>|<span data-ttu-id="3939c-493">th、dh</span><span class="sxs-lookup"><span data-stu-id="3939c-493">th, dh</span></span>|  
|<span data-ttu-id="3939c-494">18</span><span class="sxs-lookup"><span data-stu-id="3939c-494">18</span></span>|<span data-ttu-id="3939c-495">f、v</span><span class="sxs-lookup"><span data-stu-id="3939c-495">f, v</span></span>|  
|<span data-ttu-id="3939c-496">19</span><span class="sxs-lookup"><span data-stu-id="3939c-496">19</span></span>|<span data-ttu-id="3939c-497">d、t、n</span><span class="sxs-lookup"><span data-stu-id="3939c-497">d, t, n</span></span>|  
|<span data-ttu-id="3939c-498">20</span><span class="sxs-lookup"><span data-stu-id="3939c-498">20</span></span>|<span data-ttu-id="3939c-499">k、g、ng</span><span class="sxs-lookup"><span data-stu-id="3939c-499">k, g, ng</span></span>|  
|<span data-ttu-id="3939c-500">21</span><span class="sxs-lookup"><span data-stu-id="3939c-500">21</span></span>|<span data-ttu-id="3939c-501">p、b、m</span><span class="sxs-lookup"><span data-stu-id="3939c-501">p, b, m</span></span>|  
  
 <span data-ttu-id="3939c-502">関連付けられているデータについては、`VisemeReached`イベントを参照してください<xref:System.Speech.Synthesis.VisemeReachedEventArgs>です。</span><span class="sxs-lookup"><span data-stu-id="3939c-502">For information about data associated with the `VisemeReached` event, see <xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Voice">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.VoiceInfo Voice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Synthesis.VoiceInfo Voice" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Voice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Voice As VoiceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::VoiceInfo ^ Voice { System::Speech::Synthesis::VoiceInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3939c-503">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトの現在の音声に関する情報を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-503">Gets information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3939c-504">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトの現在の音声に関する情報を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-504">Returns information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-505">初期化するとき、新しい<xref:System.Speech.Synthesis.SpeechSynthesizer>既定のシステムの音声を使用します。</span><span class="sxs-lookup"><span data-stu-id="3939c-505">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer>, it uses the default system voice.</span></span> <span data-ttu-id="3939c-506">構成するのには<xref:System.Speech.Synthesis.SpeechSynthesizer>オブジェクトがインストールされている音声合成の音声のいずれかを使用して、使用して、<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>または<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-506">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> object to use one of the installed speech synthesis voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="3939c-507">音声のインストールに関する情報を取得する、<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>メソッドおよび<xref:System.Speech.Synthesis.VoiceInfo>クラスです。</span><span class="sxs-lookup"><span data-stu-id="3939c-507">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3939c-508">次の例のインスタンスを初期化する<xref:System.Speech.Synthesis.SpeechSynthesizer>し、現在の音声に関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="3939c-508">The following example initializes an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer> and gets information about the current voice.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Get information about supported audio formats.  
        string AudioFormats = "";  
        foreach (SpeechAudioFormatInfo fmt in synth.Voice.SupportedAudioFormats)  
        {  
          AudioFormats += String.Format("{0}\n",  
          fmt.EncodingFormat.ToString());  
        }  
  
        // Write information about the voice to the console.  
        Console.WriteLine(" Name:          " + synth.Voice.Name);  
        Console.WriteLine(" Culture:       " + synth.Voice.Culture);  
        Console.WriteLine(" Age:           " + synth.Voice.Age);  
        Console.WriteLine(" Gender:        " + synth.Voice.Gender);  
        Console.WriteLine(" Description:   " + synth.Voice.Description);  
        Console.WriteLine(" ID:            " + synth.Voice.Id);  
        if (synth.Voice.SupportedAudioFormats.Count != 0)  
        {  
          Console.WriteLine(" Audio formats: " + AudioFormats);  
        }  
        else  
        {  
          Console.WriteLine(" No supported audio formats found");  
        }  
  
        // Get additional information about the voice.  
        string AdditionalInfo = "";  
        foreach (string key in synth.Voice.AdditionalInfo.Keys)  
        {  
          AdditionalInfo += String.Format("  {0}: {1}\n",  
            key, synth.Voice.AdditionalInfo[key]);  
        }  
  
        Console.WriteLine(" Additional Info - " + AdditionalInfo);  
        Console.WriteLine();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </Member>
    <Member MemberName="VoiceChange">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VoiceChange As EventHandler(Of VoiceChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VoiceChangeEventArgs ^&gt; ^ VoiceChange;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3939c-509">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> の音声が変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-509">Raised when the voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3939c-510">例と、イベントに関連付けられているデータに関する情報については、次を参照してください。<xref:System.Speech.Synthesis.VoiceChangeEventArgs>です。</span><span class="sxs-lookup"><span data-stu-id="3939c-510">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</span></span>  
  
 <span data-ttu-id="3939c-511">音声を変更することができますを<xref:System.Speech.Synthesis.SpeechSynthesizer>のいずれかを使用して、<xref:System.Speech.Synthesis.PromptBuilder>の<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>メソッドまたは<xref:System.Speech.Synthesis.SpeechSynthesizer>の<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>または<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3939c-511">You can change the voice that the <xref:System.Speech.Synthesis.SpeechSynthesizer> uses with any of the <xref:System.Speech.Synthesis.PromptBuilder>'s <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public int Volume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Volume" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      <MemberSignature Language="VB.NET" Value="Public Property Volume As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Volume { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3939c-512">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> オブジェクトの出力ボリュームを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-512">Get or sets the output volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3939c-513">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> の音量を 0 から 100 までの値で返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3939c-513">Returns the volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, from 0 through 100.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3939c-514">次の例のボリュームの設定、<xref:System.Speech.Synthesis.SpeechSynthesizer>のオーディオ出力での合成の音声および WAV ファイル。</span><span class="sxs-lookup"><span data-stu-id="3939c-514">The following example sets the volume of the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s audio output for the synthesized voice and the WAV file.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Set the volume of the SpeechSynthesizer's ouput.  
        synth.Volume = 60;  
  
        // Build a prompt containing recorded audio and synthesized speech.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendAudio("C:\\Test\\WelcomeToContosoRadio.wav");  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>