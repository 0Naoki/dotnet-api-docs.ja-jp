<Type Name="SpeakProgressEventArgs" FullName="System.Speech.Synthesis.SpeakProgressEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="14a63a784adf4b871867f9253662cb34de5e6479" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69145624" /></Metadata><TypeSignature Language="C#" Value="public class SpeakProgressEventArgs : System.Speech.Synthesis.PromptEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SpeakProgressEventArgs extends System.Speech.Synthesis.PromptEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.SpeakProgressEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SpeakProgressEventArgs&#xA;Inherits PromptEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeakProgressEventArgs : System::Speech::Synthesis::PromptEventArgs" />
  <TypeSignature Language="F#" Value="type SpeakProgressEventArgs = class&#xA;    inherit PromptEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Speech.Synthesis.PromptEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="698cf-101"><see cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" /> イベントからのデータを返します。</span><span class="sxs-lookup"><span data-stu-id="698cf-101">Returns data from the <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="698cf-102">の<xref:System.Speech.Synthesis.SpeakProgressEventArgs>インスタンスは、 <xref:System.Speech.Synthesis.SpeechSynthesizer>オブジェクトがイベントを<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>発生させたときに作成されます。</span><span class="sxs-lookup"><span data-stu-id="698cf-102">An instance of <xref:System.Speech.Synthesis.SpeakProgressEventArgs> is created when the <xref:System.Speech.Synthesis.SpeechSynthesizer> object raises the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> event.</span></span> <span data-ttu-id="698cf-103">は<xref:System.Speech.Synthesis.SpeechSynthesizer> 、、、 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>、 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>のいずれ<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>かのメソッドを使用してプロンプトで読み上げる新しい単語ごとに、このイベントを発生させます。<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A></span><span class="sxs-lookup"><span data-stu-id="698cf-103">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event for each new word that it speaks in a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="698cf-104">返されるデータは、コードが生成する Speech 合成マークアップ言語 (SSML) に基づいています。</span><span class="sxs-lookup"><span data-stu-id="698cf-104">The returned data is based on the Speech Synthesis Markup Language (SSML) that the code generates.</span></span> <span data-ttu-id="698cf-105">に対し<xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A>て返される値には、コードによって生成される SSML タグのスペースと文字およびコンテンツが含まれます。</span><span class="sxs-lookup"><span data-stu-id="698cf-105">The values returned for <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A> include spaces and the characters and contents of the SSML tags generated by the code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="698cf-106">次の例は、から<xref:System.Speech.Synthesis.SpeakProgressEventArgs>使用できる情報を示しています。</span><span class="sxs-lookup"><span data-stu-id="698cf-106">The following example demonstrates the information that is available from <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span></span> <span data-ttu-id="698cf-107"><xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A> <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A>  **\<**、 、、および<xref:System.Speech.Synthesis.PromptBuilder.EndSentence%2A>の各メソッドが、p > **、 /p>、\<** **s > の追加によってに与える影響に注意してください。 \<** <xref:System.Speech.Synthesis.PromptBuilder.EndParagraph%2A> <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>/s 生成された SSML にタグを > します。  **\<**</span><span class="sxs-lookup"><span data-stu-id="698cf-107">Note how the <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>, <xref:System.Speech.Synthesis.PromptBuilder.EndParagraph%2A>, <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>, and <xref:System.Speech.Synthesis.PromptBuilder.EndSentence%2A> methods affect the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A> by their addition of **\<p>**, **\</p>**, **\<s>**, and **\</s>** tags to the generated SSML.</span></span> <span data-ttu-id="698cf-108">また、出力には "30%" という2つのエントリがあり、各単語がこの数値文字列を読み上げます (30%)。</span><span class="sxs-lookup"><span data-stu-id="698cf-108">Also, there are two entries in the output for "30%", one for each word to speak this number string (thirty percent).</span></span> <span data-ttu-id="698cf-109"><xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A> と<xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A>は、各エントリで同じであり、"30%" という文字を表します。</span><span class="sxs-lookup"><span data-stu-id="698cf-109">The <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A> and <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> are the same for each entry and represent the characters "30%.</span></span> <span data-ttu-id="698cf-110">ただし、では、に<xref:System.Speech.Synthesis.SpeechSynthesizer>よって "30" と "percent" という単語の発音が反映されています。 <xref:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition%2A></span><span class="sxs-lookup"><span data-stu-id="698cf-110">However, the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition%2A> changes to reflect the speaking of the words "thirty" and "percent" by the <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt containing a paragraph and two sentences.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.StartParagraph();  
        builder.StartSentence();  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
        builder.EndSentence();  
        builder.StartSentence();  
        builder.AppendText(  
          "Tonight's weather will be cloudy with a 30% chance of showers.");  
        builder.EndSentence();  
        builder.EndParagraph();  
  
        // Add a handler for the SpeakProgress event.  
        synth.SpeakProgress +=  
          new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write each word and its character position to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine("CharPos: {0}   CharCount: {1}   AudioPos: {2}    \"{3}\"",  
        e.CharacterPosition, e.CharacterCount, e.AudioPosition, e.Text);  
    }  
  }  
}  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AudioPosition">
      <MemberSignature Language="C#" Value="public TimeSpan AudioPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan AudioPosition" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AudioPosition As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan AudioPosition { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.AudioPosition : TimeSpan" Usage="System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="698cf-111">イベントのオーディオの位置を取得します。</span><span class="sxs-lookup"><span data-stu-id="698cf-111">Gets the audio position of the event.</span></span></summary>
        <value><span data-ttu-id="698cf-112">オーディオ出力ストリームのイベントの位置を返します。</span><span class="sxs-lookup"><span data-stu-id="698cf-112">Returns the position of the event in the audio output stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="698cf-113">数値<xref:System.Speech.Synthesis.SpeechSynthesizer>は、数値の読み上げ方法に対応する単語に正規化されます。</span><span class="sxs-lookup"><span data-stu-id="698cf-113">The <xref:System.Speech.Synthesis.SpeechSynthesizer> normalizes numbers to the words that correspond to how the number will be spoken.</span></span> <span data-ttu-id="698cf-114">たとえば、シンセサイザーは数値 "4003" を "4003" と読み上げます。</span><span class="sxs-lookup"><span data-stu-id="698cf-114">For example, the synthesizer speaks the number "4003" as "four thousand three".</span></span> <span data-ttu-id="698cf-115">このメソッドは<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> 、読み上げられた単語ごとにイベントを発生<xref:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition%2A>させ、各単語のを返します。</span><span class="sxs-lookup"><span data-stu-id="698cf-115">It raises a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> event for each of the spoken words, and returns the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition%2A> for each word.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterCount">
      <MemberSignature Language="C#" Value="public int CharacterCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CharacterCount" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CharacterCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CharacterCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CharacterCount : int" Usage="System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="698cf-116">イベントが発生した直前に読み上げられた単語の文字数を取得します。</span><span class="sxs-lookup"><span data-stu-id="698cf-116">Gets the number of characters in the word that was spoken just before the event was raised.</span></span></summary>
        <value><span data-ttu-id="698cf-117">イベントが発生した直前に読み上げられた単語の文字数を返します。</span><span class="sxs-lookup"><span data-stu-id="698cf-117">Returns the number of characters in the word that was spoken just before the event was raised.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="698cf-118">数値<xref:System.Speech.Synthesis.SpeechSynthesizer>は、数値の読み上げ方法に対応する単語に正規化されます。</span><span class="sxs-lookup"><span data-stu-id="698cf-118">The <xref:System.Speech.Synthesis.SpeechSynthesizer> normalizes numbers to the words that correspond to how the number will be spoken.</span></span> <span data-ttu-id="698cf-119">たとえば、シンセサイザーは数値 "4003" を "4003" と読み上げます。</span><span class="sxs-lookup"><span data-stu-id="698cf-119">For example, the synthesizer speaks the number "4003" as "four thousand three".</span></span> <span data-ttu-id="698cf-120">このメソッドは<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> 、読み上げられた単語ごとにイベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="698cf-120">It raises a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> event for each of the spoken words.</span></span> <span data-ttu-id="698cf-121">ただし、3つの単語のそれぞれのプロパティは同じです。<xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A></span><span class="sxs-lookup"><span data-stu-id="698cf-121">However, the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A> property for each of the three words is the same.</span></span> <span data-ttu-id="698cf-122">これは、プロンプトのテキスト (この場合は 4) の数値 "4003" の文字数です。</span><span class="sxs-lookup"><span data-stu-id="698cf-122">It is the count of the characters in the number "4003" in the text of the prompt, in this case, four.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterPosition">
      <MemberSignature Language="C#" Value="public int CharacterPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CharacterPosition" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CharacterPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CharacterPosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CharacterPosition : int" Usage="System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="698cf-123">プロンプトの最初から、たったいま読み上げられた単語の最初の文字の前の位置までの、文字とスペースの数を取得します。</span><span class="sxs-lookup"><span data-stu-id="698cf-123">Gets the number of characters and spaces from the beginning of the prompt to the position before the first letter of the word that was just spoken.</span></span></summary>
        <value><span data-ttu-id="698cf-124">プロンプトの最初から、たったいま読み上げられた単語の最初の文字の前の位置までの、文字とスペースの数を返します。</span><span class="sxs-lookup"><span data-stu-id="698cf-124">Returns the number of characters and spaces from the beginning of the prompt to the position before the first letter of the word that was just spoken.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="698cf-125">に<xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A>は、XML タグ内の文字の数 (囲んでいるかっこを含む) が含まれます。</span><span class="sxs-lookup"><span data-stu-id="698cf-125">The <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> includes the count for characters in XML tags, including their enclosing brackets.</span></span> <span data-ttu-id="698cf-126"><xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> 、<xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>、 、<xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>、また`speak`はのいずれかのメソッドを使用する場合、コンテンツは、開始要素と終了要素を含むSSMLプロンプトに追加されます。<xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A> <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A></span><span class="sxs-lookup"><span data-stu-id="698cf-126">When using any of the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A> methods, the contents are added to an SSML prompt that includes the opening and closing `speak` elements.</span></span> <span data-ttu-id="698cf-127">開始`speak`要素は、プロンプト内のすべて<xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A>の単語と文字のに82文字と空白のオフセットを追加します。</span><span class="sxs-lookup"><span data-stu-id="698cf-127">The opening `speak` element adds an offset of 82 characters and spaces to the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> of the all the words and letters in the prompt.</span></span> <span data-ttu-id="698cf-128">たとえば、次のスニペット<xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A>では、最初の単語 "this" のは82です。</span><span class="sxs-lookup"><span data-stu-id="698cf-128">For example, in the following snippet, the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> of the first word, "this", is 82.</span></span>  
  
```csharp  
builder.AppendText("This is a test");  
Synthesizer.Speak(builder);  
```  
  
 <span data-ttu-id="698cf-129">上の例では<xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> 、"test" という語のは92です。</span><span class="sxs-lookup"><span data-stu-id="698cf-129">In the above example the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> of the word "test" is 92.</span></span> <span data-ttu-id="698cf-130">次のスニペットでは<xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> 、"test" という単語の先頭に23文字があります (115)。これは、その前にある "  **\<high" >** タグに23文字と\\スペース (2 つのエスケープ文字) が含まれているためです。"はカウントされません)。</span><span class="sxs-lookup"><span data-stu-id="698cf-130">In the following snippet the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> of the word "test" is 23 characters higher (115) because the opening **\<prosody pitch="high">**  tag that precedes it contains 23 characters and spaces (the two escape characters "\\" are not counted).</span></span>  
  
```csharp  
builder.AppendSsmlMarkup("This is a <prosody pitch=\"high\"> test </prosody>.");   
Synthesizer.Speak(builder);  
```  
  
 <span data-ttu-id="698cf-131"><xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>メソッドを使用して、ファイルを指定してプロンプトにコンテンツを追加する場合`xml` 、ファイル`speak`内の開いている宣言および要素は使用されません。</span><span class="sxs-lookup"><span data-stu-id="698cf-131">If you use the <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> methods to add content to a prompt by specifying a file, the opening `xml` declaration and `speak` elements in the file are not used or counted.</span></span> <span data-ttu-id="698cf-132">開始`speak`タグの後のファイルの最初の文字が、プロンプトの最初のコンテンツである場合は、82の位置に配置されます。</span><span class="sxs-lookup"><span data-stu-id="698cf-132">The first character in the file after the opening `speak` tag will be at position 82 if it is the first content in the prompt.</span></span>  
  
 <span data-ttu-id="698cf-133">これに対し、 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>メソッドの文字列パラメーターは、読み上げられる前に SSML プロンプトに追加されません。</span><span class="sxs-lookup"><span data-stu-id="698cf-133">By contrast, the string parameter of a <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method does not get added to an SSML prompt before being spoken.</span></span> <span data-ttu-id="698cf-134">したがって、次のスニペットでは、最初の単語"this"のが0になります。<xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A></span><span class="sxs-lookup"><span data-stu-id="698cf-134">Therefore, the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> of the first word, "this", in the following snippet is zero.</span></span>  
  
```csharp  
Synthesizer.Speak("This is a test.");  
```  
  
 <span data-ttu-id="698cf-135">数値<xref:System.Speech.Synthesis.SpeechSynthesizer>は、数値の読み上げ方法に対応する単語に正規化されます。</span><span class="sxs-lookup"><span data-stu-id="698cf-135">The <xref:System.Speech.Synthesis.SpeechSynthesizer> normalizes numbers to the words that correspond to how the number will be spoken.</span></span> <span data-ttu-id="698cf-136">たとえば、シンセサイザーは数値 "4003" を "4003" と読み上げます。</span><span class="sxs-lookup"><span data-stu-id="698cf-136">For example, the synthesizer speaks the number "4003" as "four thousand three".</span></span> <span data-ttu-id="698cf-137">このメソッドは<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> 、3つの話された単語のそれぞれに対してイベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="698cf-137">It raises a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> event for each of the three spoken words.</span></span> <span data-ttu-id="698cf-138">ただし、3つの単語のそれぞれのプロパティは同じです。<xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A></span><span class="sxs-lookup"><span data-stu-id="698cf-138">However, the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> property for each of the three words is the same.</span></span> <span data-ttu-id="698cf-139">これは、プロンプトのテキスト内の数字 "4003" の最初の文字の前の位置です。</span><span class="sxs-lookup"><span data-stu-id="698cf-139">It is the position before the first character of the number "4003" in the text of the prompt.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="698cf-140">次の例では<xref:System.Speech.Synthesis.PromptBuilder> 、を作成し、を使用して<xref:System.Xml.XmlReader>XML ファイルの SSML コンテンツを追加します。</span><span class="sxs-lookup"><span data-stu-id="698cf-140">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> and appends the SSML contents of an XML file using <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="698cf-141">この例では、再生のために音声を WAV ファイルに出力します。</span><span class="sxs-lookup"><span data-stu-id="698cf-141">The example outputs speech to a WAV file for playback.</span></span> <span data-ttu-id="698cf-142">SSML を含む XML ファイルの内容は、コード例の下に表示されます。</span><span class="sxs-lookup"><span data-stu-id="698cf-142">The contents of the XML file containing the SSML appear below the code example.</span></span>  
  
```csharp  
using System;  
using System.Xml;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a path to the file that contains SSML.  
        string weatherFile = Path.GetFullPath("c:\\test\\Weather.ssml");  
  
        // Create an XML Reader from the file, create a PromptBuilder and   
        // append the XmlReader.  
        PromptBuilder builder = new PromptBuilder();  
  
        if (File.Exists(weatherFile))  
        {  
          XmlReader reader = XmlReader.Create(weatherFile);  
          builder.AppendSsml(reader);  
          reader.Close();  
        }  
  
        // Add a handler for the SpeakProgress event.  
        synth.SpeakProgress +=  
          new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write each word and its character position to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine("Speak progress: {0} {1}",  
        e.CharacterPosition, e.Text);  
    }  
  }  
}  
  
```  
  
```xml  
<!-- The following are the contents of the file Weather.ssml.   
Note that because of the <p> tag and the space that follows it,   
that the character position of the first word "The" will be 86. -->  
  
<?xml version="1.0" encoding="ISO-8859-1"?>  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis"  
 xml:lang="en-US">  
  
  <p> The weather forecast for today is partly cloudy with   
some sun breaks. </p>  
  
  <break strength="medium" />  
  
  <p> Tonight's weather will be cloudy with a 30% chance of   
showers. </p>  
  
</speak>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeakProgressEventArgs.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="System.Speech.Synthesis.SpeakProgressEventArgs.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="698cf-143">イベントの発生時に発音されたテキスト。</span><span class="sxs-lookup"><span data-stu-id="698cf-143">The text that was just spoken when the event was raised.</span></span></summary>
        <value><span data-ttu-id="698cf-144">イベントの発生時に読み上げられたテキストを返します。</span><span class="sxs-lookup"><span data-stu-id="698cf-144">Returns the text that was just spoken when the event was raised.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="698cf-145">数値<xref:System.Speech.Synthesis.SpeechSynthesizer>は、数値の読み上げ方法に対応する単語に正規化されます。</span><span class="sxs-lookup"><span data-stu-id="698cf-145">The <xref:System.Speech.Synthesis.SpeechSynthesizer> normalizes numbers to the words that correspond to how the number will be spoken.</span></span> <span data-ttu-id="698cf-146">たとえば、シンセサイザーは数値 "4003" を "4003" と読み上げます。</span><span class="sxs-lookup"><span data-stu-id="698cf-146">For example, the synthesizer speaks the number "4003" as "four thousand three".</span></span> <span data-ttu-id="698cf-147">このメソッドは<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> 、読み上げられた単語ごとにイベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="698cf-147">It raises a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> event for each of the spoken words.</span></span> <span data-ttu-id="698cf-148">ただし、3つの単語のそれぞれのプロパティは同じです。<xref:System.Speech.Synthesis.SpeakProgressEventArgs.Text%2A></span><span class="sxs-lookup"><span data-stu-id="698cf-148">However, the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.Text%2A> property for each of the three words is the same.</span></span> <span data-ttu-id="698cf-149">プロンプトから "4003" というテキストが表示されます。</span><span class="sxs-lookup"><span data-stu-id="698cf-149">It is the text "4003" from the prompt.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="698cf-150">次の例は、イベントが<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>数値を含む<xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A>文字列<xref:System.Speech.Synthesis.SpeakProgressEventArgs.Text%2A>のプロパティとプロパティを報告する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="698cf-150">The following example illustrates the how the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> event reports the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> and <xref:System.Speech.Synthesis.SpeakProgressEventArgs.Text%2A> properties for strings that contain numbers.</span></span>  
  
```csharp  
using System;  
using System.Xml;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create an XML Reader from the file, create a PromptBuilder and   
        // append the XmlReader.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("4003");  
  
        // Add a handler for the SpeakProgress event.  
        synth.SpeakProgress +=  
          new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write each word and its character position to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine("Speak progress -    Character position:  {0}    Text:  {1}",  
        e.CharacterPosition, e.Text);  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
