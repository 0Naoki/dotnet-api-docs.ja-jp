<Type Name="XmlReader" FullName="System.Xml.XmlReader">
  <TypeSignature Language="C#" Value="public abstract class XmlReader : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlReader extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlReader&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlReader abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{debuggerDisplayProxy}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{debuggerDisplayProxy}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3bb28-101">XML データへの高速で非キャッシュの前方向アクセスを提供するリーダーを表します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-101">Represents a reader that provides fast, noncached, forward-only access to XML data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-102"><xref:System.Xml.XmlReader> ドキュメントまたはストリームに XML データへの前方参照専用、読み取り専用のアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-102"><xref:System.Xml.XmlReader> provides forward-only, read-only access to XML data in a document or stream.</span></span> <span data-ttu-id="3bb28-103">このクラスは、W3C に準拠している[拡張マークアップ言語 (XML) 1.0 (第 4 版)](https://www.w3.org/TR/2006/REC-xml-20060816/)と[XML 1.0 の名前空間 (第 3 版)](https://www.w3.org/TR/REC-xml-names/)の推奨事項です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-103">This class conforms to the W3C [Extensible Markup Language (XML) 1.0 (fourth edition)](https://www.w3.org/TR/2006/REC-xml-20060816/) and the [Namespaces in XML 1.0 (third edition)](https://www.w3.org/TR/REC-xml-names/) recommendations.</span></span>  
  
 <span data-ttu-id="3bb28-104"><xref:System.Xml.XmlReader> メソッドを使用して、XML データを移動し、ノードの内容を読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-104"><xref:System.Xml.XmlReader> methods let you move through XML data and read the contents of a node.</span></span> <span data-ttu-id="3bb28-105">クラスのプロパティは、リーダーが配置されているは、現在のノードの値を反映します。<xref:System.Xml.XmlReader.ReadState%2A>プロパティの値は、XML リーダーの現在の状態を示します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-105">The properties of the class reflect the value of the current node, which is where the reader is positioned.The <xref:System.Xml.XmlReader.ReadState%2A> property value indicates the current state of the XML reader.</span></span> <span data-ttu-id="3bb28-106">プロパティを設定するなど、<xref:System.Xml.ReadState.Initial?displayProperty=nameWithType>によって、<xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType>メソッドおよび<xref:System.Xml.ReadState.Closed?displayProperty=nameWithType>によって、<xref:System.Xml.XmlReader.Close%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-106">For example, the property is set to <xref:System.Xml.ReadState.Initial?displayProperty=nameWithType> by the <xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType> method and <xref:System.Xml.ReadState.Closed?displayProperty=nameWithType> by the <xref:System.Xml.XmlReader.Close%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3bb28-107"><xref:System.Xml.XmlReader> データへの準拠の確認と、DTD またはスキーマに対する検証も提供します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-107"><xref:System.Xml.XmlReader> also provides data conformance checks and validation against a DTD or schema.</span></span>  
  
 <span data-ttu-id="3bb28-108"><xref:System.Xml.XmlReader> プル モデルを使用して、データを取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-108"><xref:System.Xml.XmlReader> uses a pull model to retrieve data.</span></span> <span data-ttu-id="3bb28-109">このモデルでは:</span><span class="sxs-lookup"><span data-stu-id="3bb28-109">This model:</span></span>  
  
-   <span data-ttu-id="3bb28-110">自然な上から下の手順に関する洗練化では、状態管理を簡略化されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-110">Simplifies state management by a natural, top-down procedural refinement.</span></span>  
  
-   <span data-ttu-id="3bb28-111">複数の入力ストリームと重ね順をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-111">Supports multiple input streams and layering.</span></span>  
  
-   <span data-ttu-id="3bb28-112">クライアントで、バッファーに文字列が直接書き込まれるため、追加の文字列のコピーの必要があるパーサーに渡すことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-112">Enables the client to give the parser a buffer into which the string is directly written, and thus avoids the necessity of an extra string copy.</span></span>  
  
-   <span data-ttu-id="3bb28-113">選択的な処理をサポートします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-113">Supports selective processing.</span></span> <span data-ttu-id="3bb28-114">クライアントは、項目をスキップし、アプリケーションに関心のあるものを処理します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-114">The client can skip items and process those that are of interest to the application.</span></span> <span data-ttu-id="3bb28-115">(たとえば、正規化)、XML ストリームを処理する方法を管理するには、事前にプロパティを設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-115">You can also set properties in advance to manage how the XML stream is processed (for example, normalization).</span></span>  
  
 <span data-ttu-id="3bb28-116">このセクションの内容:</span><span class="sxs-lookup"><span data-stu-id="3bb28-116">In this section:</span></span>  
  
 <span data-ttu-id="3bb28-117">[XML リーダーの作成](#xmlreader_create) </span><span class="sxs-lookup"><span data-stu-id="3bb28-117">[Creating an XML reader](#xmlreader_create) </span></span>  
 <span data-ttu-id="3bb28-118">[XML データの検証](#xmlreader_validate) </span><span class="sxs-lookup"><span data-stu-id="3bb28-118">[Validating XML data](#xmlreader_validate) </span></span>  
 <span data-ttu-id="3bb28-119">[データの一致](#xmlreader_data) </span><span class="sxs-lookup"><span data-stu-id="3bb28-119">[Data conformance](#xmlreader_data) </span></span>  
 <span data-ttu-id="3bb28-120">[ノードを移動します。](#xmlreader_nodes) </span><span class="sxs-lookup"><span data-stu-id="3bb28-120">[Navigating through nodes](#xmlreader_nodes) </span></span>  
 <span data-ttu-id="3bb28-121">[読み取る XML 要素](#xmlreader_elements) </span><span class="sxs-lookup"><span data-stu-id="3bb28-121">[Reading XML elements](#xmlreader_elements) </span></span>  
 <span data-ttu-id="3bb28-122">[読み取る XML 属性](#xmlreader_attributes) </span><span class="sxs-lookup"><span data-stu-id="3bb28-122">[Reading XML attributes](#xmlreader_attributes) </span></span>  
 <span data-ttu-id="3bb28-123">[読み取る XML コンテンツ](#xmlreader_content) </span><span class="sxs-lookup"><span data-stu-id="3bb28-123">[Reading XML content](#xmlreader_content) </span></span>  
 <span data-ttu-id="3bb28-124">[CLR 型に変換します。](#xmlreader_clr) </span><span class="sxs-lookup"><span data-stu-id="3bb28-124">[Converting to CLR types](#xmlreader_clr) </span></span>  
 <span data-ttu-id="3bb28-125">[非同期プログラミング](#xmlreader_async) </span><span class="sxs-lookup"><span data-stu-id="3bb28-125">[Asynchronous programming](#xmlreader_async) </span></span>  
 [<span data-ttu-id="3bb28-126">セキュリティに関する考慮事項</span><span class="sxs-lookup"><span data-stu-id="3bb28-126">Security considerations</span></span>](#xmlreader_security)  
  
<a name="xmlreader_create"></a>   
## <a name="creating-an-xml-reader"></a><span data-ttu-id="3bb28-127">XML リーダーの作成</span><span class="sxs-lookup"><span data-stu-id="3bb28-127">Creating an XML reader</span></span>  
 <span data-ttu-id="3bb28-128">使用して、<xref:System.Xml.XmlReader.Create%2A>メソッドを作成、<xref:System.Xml.XmlReader>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="3bb28-128">Use the <xref:System.Xml.XmlReader.Create%2A> method to create an <xref:System.Xml.XmlReader> instance.</span></span>  
  
 <span data-ttu-id="3bb28-129">具象実装を提供しますが、.NET Framework、<xref:System.Xml.XmlReader>クラスなど、 <xref:System.Xml.XmlTextReader>、 <xref:System.Xml.XmlNodeReader>、および<xref:System.Xml.XmlValidatingReader>クラス、お勧めこのようなシナリオでのみ特化されたクラスを使用すること。</span><span class="sxs-lookup"><span data-stu-id="3bb28-129">Although the .NET Framework provides concrete implementations of the <xref:System.Xml.XmlReader> class, such as the <xref:System.Xml.XmlTextReader>, <xref:System.Xml.XmlNodeReader>, and the <xref:System.Xml.XmlValidatingReader> classes, we recommend that you use the specialized classes only in these scenarios:</span></span>  
  
-   <span data-ttu-id="3bb28-130">XML DOM のサブツリーを読みたいときに、<xref:System.Xml.XmlNode>オブジェクトを使用して、<xref:System.Xml.XmlNodeReader>クラスです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-130">When you want to read an XML DOM subtree from an <xref:System.Xml.XmlNode> object, use the <xref:System.Xml.XmlNodeReader> class.</span></span> <span data-ttu-id="3bb28-131">(ただし、このクラスはサポート DTD またはスキーマの検証)。</span><span class="sxs-lookup"><span data-stu-id="3bb28-131">(However, this class doesn't support DTD or schema validation.)</span></span>  
  
-   <span data-ttu-id="3bb28-132">要求のエンティティを展開する必要があります、たくない、テキスト コンテンツ正規化、または既定の返される属性を使用したくない場合、<xref:System.Xml.XmlTextReader>クラスです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-132">If you must expand entities on request, you don't want your text content normalized, or you don't want default attributes returned, use the <xref:System.Xml.XmlTextReader> class.</span></span>  
  
 <span data-ttu-id="3bb28-133">XML リーダーに有効に機能のセットを指定するには、渡す、<xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType>オブジェクトを<xref:System.Xml.XmlReader.Create%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-133">To specify the set of features you want to enable on the XML reader, pass an <xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType> object to the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="3bb28-134">1 つを使用する<xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType>オブジェクトを同じ機能を持つ複数のリーダーを作成または変更、<xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType>さまざまな機能セットを新しいリーダーを作成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-134">You can use a single <xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType> object to create multiple readers with the same functionality, or modify the <xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType> object to create a new reader with a different set of features.</span></span> <span data-ttu-id="3bb28-135">既存のリーダーに機能を追加することも簡単にできます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-135">You can also easily add features to an existing reader.</span></span>  
  
 <span data-ttu-id="3bb28-136">使用しない場合、<xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType>オブジェクトの既定の設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-136">If you don't use a <xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType> object, default settings are used.</span></span> <span data-ttu-id="3bb28-137">参照してください、<xref:System.Xml.XmlReader.Create%2A>詳細ページを参照します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-137">See the <xref:System.Xml.XmlReader.Create%2A> reference page for details.</span></span>  
  
 <span data-ttu-id="3bb28-138"><xref:System.Xml.XmlReader> スロー、 <xref:System.Xml.XmlException> XML の解析エラーです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-138"><xref:System.Xml.XmlReader> throws an <xref:System.Xml.XmlException> on XML parse errors.</span></span> <span data-ttu-id="3bb28-139">例外がスローされると、リーダーの状態は予測できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-139">After an exception is thrown, the state of the reader is not predictable.</span></span> <span data-ttu-id="3bb28-140">たとえば、報告されたノード型は、現在のノードの実際のノード型から異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-140">For example, the reported node type may be different from the actual node type of the current node.</span></span> <span data-ttu-id="3bb28-141">使用して、<xref:System.Xml.XmlReader.ReadState%2A>リーダーがエラー状態にするかどうかを確認するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-141">Use the <xref:System.Xml.XmlReader.ReadState%2A> property to check whether the reader is in error state.</span></span>  
  
<a name="xmlreader_validate"></a>   
## <a name="validating-xml-data"></a><span data-ttu-id="3bb28-142">XML データの検証</span><span class="sxs-lookup"><span data-stu-id="3bb28-142">Validating XML data</span></span>  
 <span data-ttu-id="3bb28-143">XML ドキュメント要素の関係、データ型、およびその内容の制約の構造を定義するのには、ドキュメント型定義 (DTD) または XML スキーマ定義言語 (XSD) スキーマを使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-143">To define the structure of an XML document and its element relationships, data types, and content constraints, you use a document type definition (DTD) or XML Schema definition language (XSD) schema.</span></span> <span data-ttu-id="3bb28-144">XML ドキュメントがによって定義されたすべての構文要件を満たしている場合は、適切な形式と見なされます、 [w3c 勧告 『 XML 1.0 』](https://www.w3.org/TR/2006/REC-xml-20060816/)です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-144">An XML document is considered to be well formed if it meets all the syntactical requirements defined by the [W3C XML 1.0 Recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/).</span></span> <span data-ttu-id="3bb28-145">整形式では、DTD またはスキーマで定義された制約にも準拠している場合は有効になっています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-145">It's considered valid if it's well formed and also conforms to the constraints defined by its DTD or schema.</span></span> <span data-ttu-id="3bb28-146">(を参照してください、 [W3C XML Schema Part 1: 構造体](https://www.w3.org/TR/xmlschema-1/)と[W3C XML Schema Part 2: データ型](https://www.w3.org/TR/xmlschema-2/)の推奨事項です)。したがって、有効な XML ドキュメントはすべて整形式ですが、整形式の XML ドキュメントがすべて有効であるとは限りません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-146">(See the [W3C XML Schema Part 1: Structures](https://www.w3.org/TR/xmlschema-1/) and the [W3C XML Schema Part 2: Datatypes](https://www.w3.org/TR/xmlschema-2/)recommendations.) Therefore, although all valid XML documents are well formed, not all well-formed XML documents are valid.</span></span>  
  
 <span data-ttu-id="3bb28-147">DTD、インライン XSD スキーマに対してデータを検証するかに格納されている XSD スキーマ、<xref:System.Xml.Schema.XmlSchemaSet>オブジェクト (キャッシュ) です。 これらのシナリオは、記載されて、<xref:System.Xml.XmlReader.Create%2A>リファレンス ページ。</span><span class="sxs-lookup"><span data-stu-id="3bb28-147">You can validate the data against a DTD, an inline XSD Schema, or an XSD Schema stored in an <xref:System.Xml.Schema.XmlSchemaSet> object (a cache); these scenarios are described on the <xref:System.Xml.XmlReader.Create%2A> reference page.</span></span> <span data-ttu-id="3bb28-148"><xref:System.Xml.XmlReader> Xml-data Reduced (XDR) スキーマ検証をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-148"><xref:System.Xml.XmlReader> doesn't support XML-Data Reduced (XDR) schema validation.</span></span>  
  
 <span data-ttu-id="3bb28-149">次の設定を使用する、<xref:System.Xml.XmlReaderSettings>クラスが存在する場合、検証の種類を指定、<xref:System.Xml.XmlReader>インスタンス化をサポートします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-149">You use the following settings on the <xref:System.Xml.XmlReaderSettings> class to specify what type of validation, if any, the <xref:System.Xml.XmlReader> instance supports.</span></span>  
  
|<span data-ttu-id="3bb28-150">これを使用して<xref:System.Xml.XmlReaderSettings>メンバー</span><span class="sxs-lookup"><span data-stu-id="3bb28-150">Use this <xref:System.Xml.XmlReaderSettings> member</span></span>|<span data-ttu-id="3bb28-151">指定する型</span><span class="sxs-lookup"><span data-stu-id="3bb28-151">To specify</span></span>|  
|-----------------------------------------------------------------------------------------------------------------------------------------------------------|----------------|  
|<span data-ttu-id="3bb28-152"><xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bb28-152"><xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> property</span></span>|<span data-ttu-id="3bb28-153">DTD 処理を許可するかどうか。</span><span class="sxs-lookup"><span data-stu-id="3bb28-153">Whether to allow DTD processing.</span></span> <span data-ttu-id="3bb28-154">既定では、DTD 処理は許可されません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-154">The default is to disallow DTD processing.</span></span>|  
|<span data-ttu-id="3bb28-155"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bb28-155"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> property</span></span>|<span data-ttu-id="3bb28-156">リーダーが、データを検証するかどうかと DTD (スキーマ) を実行する検証の種類。</span><span class="sxs-lookup"><span data-stu-id="3bb28-156">Whether the reader should validate data, and what type of validation to perform (DTD or schema).</span></span> <span data-ttu-id="3bb28-157">既定では、データ検証は実行されません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-157">The default is no data validation.</span></span>|  
|<span data-ttu-id="3bb28-158"><xref:System.Xml.XmlReaderSettings.ValidationEventHandler> イベント</span><span class="sxs-lookup"><span data-stu-id="3bb28-158"><xref:System.Xml.XmlReaderSettings.ValidationEventHandler> event</span></span>|<span data-ttu-id="3bb28-159">検証イベントに関する情報を受信するためのイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="3bb28-159">An event handler for receiving information about validation events.</span></span> <span data-ttu-id="3bb28-160">イベント ハンドラーが提供されていない場合は、最初の検証エラーに対して <xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-160">If an event handler is not provided, an <xref:System.Xml.XmlException> is thrown on the first validation error.</span></span>|  
|<span data-ttu-id="3bb28-161"><xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bb28-161"><xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> property</span></span>|<span data-ttu-id="3bb28-162">追加の検証オプション で、<xref:System.Xml.Schema.XmlSchemaValidationFlags>列挙型のメンバー。</span><span class="sxs-lookup"><span data-stu-id="3bb28-162">Additional validation options through the <xref:System.Xml.Schema.XmlSchemaValidationFlags> enumeration members:</span></span><br /><br /> <span data-ttu-id="3bb28-163">-   `AllowXmlAttributes`--XML 属性を許可する (`xml:*`) しているスキーマで定義されていない場合でも、インスタンス ドキュメントでします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-163">-   `AllowXmlAttributes`-- Allow XML attributes (`xml:*`) in instance documents even when they're not defined in the schema.</span></span> <span data-ttu-id="3bb28-164">これらの属性は、それらのデータ型に基づいて検証されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-164">The attributes are validated based on their data type.</span></span> <span data-ttu-id="3bb28-165">参照してください、<xref:System.Xml.Schema.XmlSchemaValidationFlags>特定のシナリオで使用する設定のリファレンス ページ。</span><span class="sxs-lookup"><span data-stu-id="3bb28-165">See the <xref:System.Xml.Schema.XmlSchemaValidationFlags> reference page for  the setting to use in specific scenarios.</span></span> <span data-ttu-id="3bb28-166">(既定では無効です。)</span><span class="sxs-lookup"><span data-stu-id="3bb28-166">(Disabled by default.)</span></span><br /><span data-ttu-id="3bb28-167">-   `ProcessIdentityConstraints` --Id 制約を処理する (`xs:ID`、 `xs:IDREF`、 `xs:key`、 `xs:keyref`、 `xs:unique`) の検証中に発生します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-167">-   `ProcessIdentityConstraints` --Process identity constraints (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, `xs:unique`) encountered during validation.</span></span> <span data-ttu-id="3bb28-168">(既定で有効にします。)</span><span class="sxs-lookup"><span data-stu-id="3bb28-168">(Enabled by default.)</span></span><br /><span data-ttu-id="3bb28-169">-   `ProcessSchemaLocation` --で指定されたスキーマを処理する、`xsi:schemaLocation`または`xsi:noNamespaceSchemaLocation`属性。</span><span class="sxs-lookup"><span data-stu-id="3bb28-169">-   `ProcessSchemaLocation` --Process schemas specified by the `xsi:schemaLocation` or `xsi:noNamespaceSchemaLocation` attribute.</span></span> <span data-ttu-id="3bb28-170">(既定で有効にします。)</span><span class="sxs-lookup"><span data-stu-id="3bb28-170">(Enabled by default.)</span></span><br /><span data-ttu-id="3bb28-171">-   `ProcessInlineSchema`--検証中にインライン XML スキーマを処理します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-171">-   `ProcessInlineSchema`-- Process inline XML Schemas during validation.</span></span> <span data-ttu-id="3bb28-172">(既定では無効です。)</span><span class="sxs-lookup"><span data-stu-id="3bb28-172">(Disabled by default.)</span></span><br /><span data-ttu-id="3bb28-173">-   `ReportValidationWarnings`--、検証の警告が発生した場合は、イベントを報告します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-173">-   `ReportValidationWarnings`--Report events if a validation warning occurs.</span></span> <span data-ttu-id="3bb28-174">警告は通常、特定の要素または属性を検証するための DTD または XML スキーマがない場合に発行されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-174">A warning is typically issued when there is no DTD or XML Schema to validate a particular element or attribute against.</span></span> <span data-ttu-id="3bb28-175">通知には <xref:System.Xml.XmlReaderSettings.ValidationEventHandler> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-175">The <xref:System.Xml.XmlReaderSettings.ValidationEventHandler> is used for notification.</span></span> <span data-ttu-id="3bb28-176">(既定では無効です。)</span><span class="sxs-lookup"><span data-stu-id="3bb28-176">(Disabled by default.)</span></span>|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|<span data-ttu-id="3bb28-177">検証に使用する <xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="3bb28-177">The <xref:System.Xml.Schema.XmlSchemaSet> to use for validation.</span></span>|  
|<span data-ttu-id="3bb28-178"><xref:System.Xml.XmlReaderSettings.XmlResolver%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bb28-178"><xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property</span></span>|<span data-ttu-id="3bb28-179"><xref:System.Xml.XmlResolver>を解決して、外部のリソースにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-179">The <xref:System.Xml.XmlResolver> for resolving and accessing external resources.</span></span> <span data-ttu-id="3bb28-180">DTD とスキーマなど、任意の外部のエンティティを含めることができますこの`xs:include`または`xs:import`XML スキーマに含まれる要素です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-180">This can include external entities such as DTD and schemas, and any `xs:include` or `xs:import` elements contained in the XML Schema.</span></span> <span data-ttu-id="3bb28-181">指定しない場合は、 <xref:System.Xml.XmlResolver>、 <xref:System.Xml.XmlReader> 、既定値を使用して<xref:System.Xml.XmlUrlResolver>ユーザー資格情報を持たない。</span><span class="sxs-lookup"><span data-stu-id="3bb28-181">If you don't specify an <xref:System.Xml.XmlResolver>, the <xref:System.Xml.XmlReader> uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span>|  
  
<a name="xmlreader_data"></a>   
## <a name="data-conformance"></a><span data-ttu-id="3bb28-182">データの一致</span><span class="sxs-lookup"><span data-stu-id="3bb28-182">Data conformance</span></span>  
 <span data-ttu-id="3bb28-183">XML リーダーによって作成される、<xref:System.Xml.XmlReader.Create%2A>メソッドは、既定では、次のコンプライアンス要件を満たしています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-183">XML readers that are created by the <xref:System.Xml.XmlReader.Create%2A> method meet the following compliance requirements by default:</span></span>  
  
-   <span data-ttu-id="3bb28-184">新しい行と属性値は、W3C に従って正規化[XML 1.0 勧告](https://www.w3.org/TR/2006/REC-xml-20060816/)です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-184">New lines and attribute value are normalized according to the W3C [XML 1.0 Recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/).</span></span>  
  
-   <span data-ttu-id="3bb28-185">すべてのエンティティは自動的に展開します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-185">All entities are automatically expanded.</span></span>  
  
-   <span data-ttu-id="3bb28-186">文書型定義で宣言されている既定の属性は、リーダーを検証しない場合でも常に追加します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-186">Default attributes declared in the document type definition are always added even when the reader doesn't validate.</span></span>  
  
-   <span data-ttu-id="3bb28-187">正しい XML 名前空間 URI にマップされている XML プレフィックスの宣言が許可されています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-187">Declaration of XML prefix mapped to the correct XML namespace URI is allowed.</span></span>  
  
-   <span data-ttu-id="3bb28-188">1 つの記法名`NotationType`属性の宣言と`NmTokens`1 つの`Enumeration`属性の宣言は異なります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-188">The notation names in a single `NotationType` attribute declaration and `NmTokens` in a single `Enumeration` attribute declaration are distinct.</span></span>  
  
 <span data-ttu-id="3bb28-189">これらを使用して<xref:System.Xml.XmlReaderSettings>準拠の型をチェックするように指定するプロパティが有効にします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-189">Use these <xref:System.Xml.XmlReaderSettings> properties to specify the type of conformance checks you want to enable:</span></span>  
  
|<span data-ttu-id="3bb28-190">これを使用して<xref:System.Xml.XmlReaderSettings>プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bb28-190">Use this <xref:System.Xml.XmlReaderSettings> property</span></span>|<span data-ttu-id="3bb28-191">終了</span><span class="sxs-lookup"><span data-stu-id="3bb28-191">To</span></span>|<span data-ttu-id="3bb28-192">既定値</span><span class="sxs-lookup"><span data-stu-id="3bb28-192">Default</span></span>|  
|-------------------------------------------------------------------------------------------------------------------------------------------------------------|--------|-------------|  
|<span data-ttu-id="3bb28-193"><xref:System.Xml.XmlReaderSettings.CheckCharacters%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bb28-193"><xref:System.Xml.XmlReaderSettings.CheckCharacters%2A> property</span></span>|<span data-ttu-id="3bb28-194">有効または無効には、次を確認します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-194">Enable or disable checks for the following:</span></span><br /><br /> <span data-ttu-id="3bb28-195">定義されている文字が有効な XML 文字の範囲内では、 [2.2 文字](https://www.w3.org/TR/2006/REC-xml-20060816/#charsets)W3C XML 1.0 』 勧告のセクションです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-195">-   Characters are within the range of legal XML characters, as defined by the [2.2 Characters](https://www.w3.org/TR/2006/REC-xml-20060816/#charsets) section of the W3C XML 1.0 Recommendation.</span></span><br /><span data-ttu-id="3bb28-196">、定義されているすべての XML 名が有効で、 [2.3 Common Syntactic Constructs](https://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name) W3C XML 1.0 』 勧告のセクションです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-196">-   All XML names are valid, as defined by the [2.3 Common Syntactic Constructs](https://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name) section of the W3C XML 1.0 Recommendation.</span></span><br /><br /> <span data-ttu-id="3bb28-197">このプロパティを設定すると`true`(既定)、 <xref:System.Xml.XmlException> XML ファイルには、無効な文字または無効な XML 名が含まれている場合、例外がスローされます (たとえば、要素名は、開始を数字で)。</span><span class="sxs-lookup"><span data-stu-id="3bb28-197">When this property is set to `true` (default), an <xref:System.Xml.XmlException> exception is thrown if the XML file contains illegal characters or invalid XML names (for example, an element name starts with a number).</span></span>|<span data-ttu-id="3bb28-198">文字と名前の確認が有効にします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-198">Character and name checking is enabled.</span></span><br /><br /> <span data-ttu-id="3bb28-199"><xref:System.Xml.XmlReaderSettings.CheckCharacters%2A> を `false` に設定すると、文字エンティティ参照に対する文字のチェック機能がオフになります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-199">Setting <xref:System.Xml.XmlReaderSettings.CheckCharacters%2A> to `false` turns off character checking for character entity references.</span></span> <span data-ttu-id="3bb28-200">リーダーがテキスト データを処理している場合は、常に XML 名ではこの設定に関係なく、有効なことを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-200">If the reader is processing text data, it always checks that XML names are valid, regardless of this setting.</span></span> <span data-ttu-id="3bb28-201">**注:** DTD が存在する場合、XML 1.0 勧告にドキュメント レベルの一致が必要です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-201">**Note:**  The XML 1.0 recommendation requires document-level conformance when a DTD is present.</span></span> <span data-ttu-id="3bb28-202">そのため、リーダーがサポートするために構成されている場合<xref:System.Xml.ConformanceLevel.Fragment?displayProperty=nameWithType>、XML データには、ドキュメント型定義 (DTD) が含まれていますが、<xref:System.Xml.XmlException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-202">Therefore, if the reader is configured to support <xref:System.Xml.ConformanceLevel.Fragment?displayProperty=nameWithType>, but the XML data contains a document type definition (DTD), an <xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="3bb28-203"><xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bb28-203"><xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> property</span></span>|<span data-ttu-id="3bb28-204">適用する準拠のレベルを選択します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-204">Choose the level of conformance to enforce:</span></span><br /><br /> <span data-ttu-id="3bb28-205">-   <xref:System.Xml.ConformanceLevel.Document>.</span><span class="sxs-lookup"><span data-stu-id="3bb28-205">-   <xref:System.Xml.ConformanceLevel.Document>.</span></span> <span data-ttu-id="3bb28-206">規則に準拠している、[整形式 XML 1.0 ドキュメント](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed)です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-206">Conforms to the rules for a [well-formed XML 1.0 document](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed).</span></span><br /><span data-ttu-id="3bb28-207">-   <xref:System.Xml.ConformanceLevel.Fragment>.</span><span class="sxs-lookup"><span data-stu-id="3bb28-207">-   <xref:System.Xml.ConformanceLevel.Fragment>.</span></span> <span data-ttu-id="3bb28-208">適切な形式のドキュメントの一部として使用できるの規則に準拠している、[外部解析エンティティ](https://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities)です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-208">Conforms to the rules for a well-formed document fragment that can be consumed as an [external parsed entity](https://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities).</span></span><br /><span data-ttu-id="3bb28-209">-   <xref:System.Xml.ConformanceLevel.Auto>.</span><span class="sxs-lookup"><span data-stu-id="3bb28-209">-   <xref:System.Xml.ConformanceLevel.Auto>.</span></span> <span data-ttu-id="3bb28-210">リーダーによって決まりますレベルに準拠しています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-210">Conforms to the level decided by the reader.</span></span><br /><br /> <span data-ttu-id="3bb28-211">データに準拠していない場合は、<xref:System.Xml.XmlException>例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-211">If the data isn't in conformance, an <xref:System.Xml.XmlException> exception is thrown.</span></span>|<xref:System.Xml.ConformanceLevel.Document>|  
  
<a name="xmlreader_nodes"></a>   
## <a name="navigating-through-nodes"></a><span data-ttu-id="3bb28-212">ノードを移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-212">Navigating through nodes</span></span>  
 <span data-ttu-id="3bb28-213">現在のノードは、XML リーダーが現在配置されている XML ノードです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-213">The current node is the XML node on which the XML reader is currently positioned.</span></span> <span data-ttu-id="3bb28-214">すべて<xref:System.Xml.XmlReader>メソッドは、このノードおよびすべて関連の操作を実行<xref:System.Xml.XmlReader>プロパティは、現在のノードの値を反映します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-214">All <xref:System.Xml.XmlReader> methods perform operations in relation to this node, and all <xref:System.Xml.XmlReader> properties reflect the value of the current node.</span></span>  
  
 <span data-ttu-id="3bb28-215">次の方法しやすいようにノードに移動し、データを解析します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-215">The following methods make it easy to navigate through nodes and parse data.</span></span>  
  
|<span data-ttu-id="3bb28-216">これを使用して<xref:System.Xml.XmlReaderSettings>メソッド</span><span class="sxs-lookup"><span data-stu-id="3bb28-216">Use this <xref:System.Xml.XmlReaderSettings> method</span></span>|<span data-ttu-id="3bb28-217">終了</span><span class="sxs-lookup"><span data-stu-id="3bb28-217">To</span></span>|  
|-----------------------------------------------------------------------------------------------------------------------------------------------------------|--------|  
|<xref:System.Xml.XmlReader.Read%2A>|<span data-ttu-id="3bb28-218">最初のノードを読み取るし、一度に 1 つのノードをストリームに進みます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-218">Read the first node, and advance through the stream one node at a time.</span></span> <span data-ttu-id="3bb28-219">このような呼び出しは内部で実行される通常、`while`ループします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-219">Such calls are typically performed inside a `while` loop.</span></span><br /><br /> <span data-ttu-id="3bb28-220">使用して、<xref:System.Xml.XmlReader.NodeType%2A>プロパティの現在のノードの種類 (たとえば、属性、コメント、要素、およびなど) を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-220">Use the <xref:System.Xml.XmlReader.NodeType%2A> property to get the type (for example, attribute, comment, element, and so on) of the current node.</span></span>|  
|<xref:System.Xml.XmlReader.Skip%2A>|<span data-ttu-id="3bb28-221">現在のノードの子をスキップし、次のノードに移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-221">Skip the children of the current node and move to the next node.</span></span>|  
|<span data-ttu-id="3bb28-222"><xref:System.Xml.XmlReader.MoveToContent%2A> および <xref:System.Xml.XmlReader.MoveToContentAsync%2A></span><span class="sxs-lookup"><span data-stu-id="3bb28-222"><xref:System.Xml.XmlReader.MoveToContent%2A> and <xref:System.Xml.XmlReader.MoveToContentAsync%2A></span></span>|<span data-ttu-id="3bb28-223">非コンテンツ ノードをスキップし、次のコンテンツ ノードまたはファイルの末尾に移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-223">Skip non-content nodes and move to the next content node or to the end of the file.</span></span><br /><br /> <span data-ttu-id="3bb28-224">非コンテンツ ノードが含まれて<xref:System.Xml.XmlNodeType.ProcessingInstruction>、 <xref:System.Xml.XmlNodeType.DocumentType>、 <xref:System.Xml.XmlNodeType.Comment>、 <xref:System.Xml.XmlNodeType.Whitespace>、および<xref:System.Xml.XmlNodeType.SignificantWhitespace>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-224">Non-content nodes include <xref:System.Xml.XmlNodeType.ProcessingInstruction>, <xref:System.Xml.XmlNodeType.DocumentType>, <xref:System.Xml.XmlNodeType.Comment>, <xref:System.Xml.XmlNodeType.Whitespace>, and <xref:System.Xml.XmlNodeType.SignificantWhitespace>.</span></span><br /><br /> <span data-ttu-id="3bb28-225">ノードは、空白文字以外のテキスト コンテンツ<xref:System.Xml.XmlNodeType.CDATA>、 <xref:System.Xml.XmlNodeType.EntityReference> 、および<xref:System.Xml.XmlNodeType.EndEntity>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-225">Content nodes include non-white space text, <xref:System.Xml.XmlNodeType.CDATA>, <xref:System.Xml.XmlNodeType.EntityReference> , and <xref:System.Xml.XmlNodeType.EndEntity>.</span></span>|  
|<xref:System.Xml.XmlReader.ReadSubtree%2A>|<span data-ttu-id="3bb28-226">要素とそのすべての子要素を読み取り、返す新しい<xref:System.Xml.XmlReader>に設定インスタンス<xref:System.Xml.ReadState.Initial?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-226">Read an element and all its children, and return a new <xref:System.Xml.XmlReader> instance set to <xref:System.Xml.ReadState.Initial?displayProperty=nameWithType>.</span></span><br /><br /> <span data-ttu-id="3bb28-227">このメソッドは XML 要素の周囲に境界線を作成するために役立ちますたとえば、処理のための別のコンポーネントにデータを渡すし、データの量を制限する場合は、コンポーネントがアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-227">This method is useful for creating boundaries around XML elements; for example, if you want to pass data to another component for processing and you want to limit how much of your data the component can access.</span></span>|  
  
 <span data-ttu-id="3bb28-228">参照してください、<xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType>リファレンス ページの一度にテキスト ストリームの 1 つのノードを移動して、各ノードの型を表示する例についてはします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-228">See the <xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType> reference page for an example of navigating through a text stream one node at a time and displaying the type of each node.</span></span>  
  
 <span data-ttu-id="3bb28-229">以降のセクションでは、特定の要素、属性などのデータ型の読み取り方法について説明し、型指定されたデータ。</span><span class="sxs-lookup"><span data-stu-id="3bb28-229">The following sections describe how you can read specific types of data, such as elements, attributes, and typed data.</span></span>  
  
<a name="xmlreader_elements"></a>   
## <a name="reading-xml-elements"></a><span data-ttu-id="3bb28-230">読み取る XML 要素</span><span class="sxs-lookup"><span data-stu-id="3bb28-230">Reading XML elements</span></span>  
 <span data-ttu-id="3bb28-231">次の表は、メソッドとプロパティを<xref:System.Xml.XmlReader>要素を処理するクラスを提供します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-231">The following table lists the methods and properties that the <xref:System.Xml.XmlReader> class provides for processing elements.</span></span> <span data-ttu-id="3bb28-232"><xref:System.Xml.XmlReader> が 1 つの要素上に位置した後、<xref:System.Xml.XmlReader.Name%2A> などのノードのプロパティには要素の値が反映されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-232">After the <xref:System.Xml.XmlReader> is positioned on an element, the node properties, such as <xref:System.Xml.XmlReader.Name%2A>, reflect the element values.</span></span> <span data-ttu-id="3bb28-233">下に説明するメンバーに加えて、<xref:System.Xml.XmlReader> クラスの任意の一般メソッドとプロパティも要素の処理に使用できます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-233">In addition to the members described below, any of the general methods and properties of the <xref:System.Xml.XmlReader> class can also be used to process elements.</span></span> <span data-ttu-id="3bb28-234">たとえば、<xref:System.Xml.XmlReader.ReadInnerXml%2A> メソッドを使用して要素のコンテンツを読むことができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-234">For example, you can use the <xref:System.Xml.XmlReader.ReadInnerXml%2A> method to read the contents of an element.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3bb28-235">3.1 章を参照、 [w3c 勧告 『 XML 1.0 』](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-starttags)の開始タグの定義、タグ、および空要素タグを終了します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-235">See section 3.1 of the [W3C XML 1.0 Recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-starttags) for definitions of start tags, end tags, and empty element tags.</span></span>  
  
|<span data-ttu-id="3bb28-236">これを使用して<xref:System.Xml.XmlReader>メンバー</span><span class="sxs-lookup"><span data-stu-id="3bb28-236">Use this <xref:System.Xml.XmlReader> member</span></span>|<span data-ttu-id="3bb28-237">終了</span><span class="sxs-lookup"><span data-stu-id="3bb28-237">To</span></span>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------|--------|  
|<span data-ttu-id="3bb28-238"><xref:System.Xml.XmlReader.IsStartElement%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="3bb28-238"><xref:System.Xml.XmlReader.IsStartElement%2A> method</span></span>|<span data-ttu-id="3bb28-239">かどうか、現在のノードは開始タグまたは空要素タグを確認してください。</span><span class="sxs-lookup"><span data-stu-id="3bb28-239">Check if the current node is a start tag or an empty element tag.</span></span>|  
|<span data-ttu-id="3bb28-240"><xref:System.Xml.XmlReader.ReadStartElement%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="3bb28-240"><xref:System.Xml.XmlReader.ReadStartElement%2A> method</span></span>|<span data-ttu-id="3bb28-241">現在のノードが要素であることを確認し、次のノードにリーダーを進めます (呼び出し<xref:System.Xml.XmlReader.IsStartElement%2A>続く<xref:System.Xml.XmlReader.Read%2A>)。</span><span class="sxs-lookup"><span data-stu-id="3bb28-241">Check that the current node is an element and advance the reader to the next node (calls <xref:System.Xml.XmlReader.IsStartElement%2A> followed by <xref:System.Xml.XmlReader.Read%2A>).</span></span>|  
|<span data-ttu-id="3bb28-242"><xref:System.Xml.XmlReader.ReadEndElement%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="3bb28-242"><xref:System.Xml.XmlReader.ReadEndElement%2A> method</span></span>|<span data-ttu-id="3bb28-243">現在のノードが終了タグであることを確認し、次のノードにリーダーを進めます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-243">Check that the current node is an end tag and advance the reader to the next node.</span></span>|  
|<span data-ttu-id="3bb28-244"><xref:System.Xml.XmlReader.ReadElementString%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="3bb28-244"><xref:System.Xml.XmlReader.ReadElementString%2A> method</span></span>|<span data-ttu-id="3bb28-245">テキストのみの要素を読み取る。</span><span class="sxs-lookup"><span data-stu-id="3bb28-245">Read a text-only element.</span></span>|  
|<span data-ttu-id="3bb28-246"><xref:System.Xml.XmlReader.ReadToDescendant%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="3bb28-246"><xref:System.Xml.XmlReader.ReadToDescendant%2A> method</span></span>|<span data-ttu-id="3bb28-247">指定の名前を持つ [次へ] の子孫 (子) 要素に XML リーダーを進めます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-247">Advance the XML reader to the next descendant (child) element that has the specified name.</span></span>|  
|<span data-ttu-id="3bb28-248"><xref:System.Xml.XmlReader.ReadToNextSibling%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="3bb28-248"><xref:System.Xml.XmlReader.ReadToNextSibling%2A> method</span></span>|<span data-ttu-id="3bb28-249">XML リーダーを次の兄弟要素を指定した名前を持つに進みます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-249">Advance the XML reader to the next sibling element that has the specified name.</span></span>|  
|<span data-ttu-id="3bb28-250"><xref:System.Xml.XmlReader.IsEmptyElement%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bb28-250"><xref:System.Xml.XmlReader.IsEmptyElement%2A> property</span></span>|<span data-ttu-id="3bb28-251">現在の要素に終了要素タグされていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-251">Check if the current element has an end element tag.</span></span> <span data-ttu-id="3bb28-252">例:</span><span class="sxs-lookup"><span data-stu-id="3bb28-252">For example:</span></span><br /><br /> <span data-ttu-id="3bb28-253">-   `<item num="123"/>` (<xref:System.Xml.XmlReader.IsEmptyElement%2A>は`true`)。</span><span class="sxs-lookup"><span data-stu-id="3bb28-253">-   `<item num="123"/>` (<xref:System.Xml.XmlReader.IsEmptyElement%2A> is `true`.)</span></span><br /><span data-ttu-id="3bb28-254">-   `<item num="123"> </item>` (<xref:System.Xml.XmlReader.IsEmptyElement%2A>は`false`要素の内容が空です)。</span><span class="sxs-lookup"><span data-stu-id="3bb28-254">-   `<item num="123"> </item>` (<xref:System.Xml.XmlReader.IsEmptyElement%2A> is `false`, although the element's content is empty.)</span></span>|  
  
 <span data-ttu-id="3bb28-255">要素のテキストの内容を読み取り中の例は、次を参照してください。、<xref:System.Xml.XmlReader.ReadString%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-255">For an example of reading the text content of elements, see the <xref:System.Xml.XmlReader.ReadString%2A> method.</span></span> <span data-ttu-id="3bb28-256">次の例では、要素を処理を使用して、`while`ループします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-256">The following example processes elements by using a `while` loop.</span></span>  
  
 [!code-csharp[XmlReaderBasic#10](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#10)]
 [!code-vb[XmlReaderBasic#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#10)]  
  
<a name="xmlreader_attributes"></a>   
## <a name="reading-xml-attributes"></a><span data-ttu-id="3bb28-257">読み取る XML 属性</span><span class="sxs-lookup"><span data-stu-id="3bb28-257">Reading XML attributes</span></span>  
 <span data-ttu-id="3bb28-258">XML 属性は、要素で最も一般的に見られるが、XML 宣言とドキュメントの種類のノードにも可能です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-258">XML attributes are most commonly found on elements, but they're also allowed on XML declaration and document type nodes.</span></span>  
  
 <span data-ttu-id="3bb28-259">要素ノードに配置されているときに、<xref:System.Xml.XmlReader.MoveToAttribute%2A>メソッドを使用して、要素の属性リストを移動できます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-259">When positioned on an element node, the <xref:System.Xml.XmlReader.MoveToAttribute%2A> method lets you go through the attribute list of the element.</span></span> <span data-ttu-id="3bb28-260">注意してください<xref:System.Xml.XmlReader.MoveToAttribute%2A>が呼び出されると、ノードのプロパティなど<xref:System.Xml.XmlReader.Name%2A>、 <xref:System.Xml.XmlReader.NamespaceURI%2A>、および<xref:System.Xml.XmlReader.Prefix%2A>その属性のプロパティを反映して、要素、属性のプロパティではなくが属するです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-260">Note that after <xref:System.Xml.XmlReader.MoveToAttribute%2A> has been called, node properties such as <xref:System.Xml.XmlReader.Name%2A>, <xref:System.Xml.XmlReader.NamespaceURI%2A>, and <xref:System.Xml.XmlReader.Prefix%2A> reflect the properties of that attribute, not the properties of the element the attribute belongs to.</span></span>  
  
 <span data-ttu-id="3bb28-261"><xref:System.Xml.XmlReader>クラスは、これらのメソッドとプロパティの読み込みし、要素の属性の処理を提供します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-261">The <xref:System.Xml.XmlReader> class provides these methods and properties to read and process attributes on elements.</span></span>  
  
|<span data-ttu-id="3bb28-262">これを使用して<xref:System.Xml.XmlReader>メンバー</span><span class="sxs-lookup"><span data-stu-id="3bb28-262">Use this <xref:System.Xml.XmlReader> member</span></span>|<span data-ttu-id="3bb28-263">終了</span><span class="sxs-lookup"><span data-stu-id="3bb28-263">To</span></span>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------|--------|  
|<span data-ttu-id="3bb28-264"><xref:System.Xml.XmlReader.HasAttributes%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bb28-264"><xref:System.Xml.XmlReader.HasAttributes%2A> property</span></span>|<span data-ttu-id="3bb28-265">現在のノードが属性を持っているかどうかを確認してください。</span><span class="sxs-lookup"><span data-stu-id="3bb28-265">Check whether the current node has any attributes.</span></span>|  
|<span data-ttu-id="3bb28-266"><xref:System.Xml.XmlReader.AttributeCount%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bb28-266"><xref:System.Xml.XmlReader.AttributeCount%2A> property</span></span>|<span data-ttu-id="3bb28-267">現在の要素に属性の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-267">Get the number of attributes on the current element.</span></span>|  
|<span data-ttu-id="3bb28-268"><xref:System.Xml.XmlReader.MoveToFirstAttribute%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="3bb28-268"><xref:System.Xml.XmlReader.MoveToFirstAttribute%2A> method</span></span>|<span data-ttu-id="3bb28-269">要素内の最初の属性に移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-269">Move to the first attribute in an element.</span></span>|  
|<span data-ttu-id="3bb28-270"><xref:System.Xml.XmlReader.MoveToNextAttribute%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="3bb28-270"><xref:System.Xml.XmlReader.MoveToNextAttribute%2A> method</span></span>|<span data-ttu-id="3bb28-271">要素に次の属性に移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-271">Move to the next attribute in an element.</span></span>|  
|<span data-ttu-id="3bb28-272"><xref:System.Xml.XmlReader.MoveToAttribute%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="3bb28-272"><xref:System.Xml.XmlReader.MoveToAttribute%2A> method</span></span>|<span data-ttu-id="3bb28-273">指定した属性に移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-273">Move to a specified attribute.</span></span>|  
|<span data-ttu-id="3bb28-274"><xref:System.Xml.XmlReader.GetAttribute%2A> メソッドまたは<xref:System.Xml.XmlReader.Item%2A>プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bb28-274"><xref:System.Xml.XmlReader.GetAttribute%2A> method or <xref:System.Xml.XmlReader.Item%2A> property</span></span>|<span data-ttu-id="3bb28-275">指定した属性の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-275">Get the value of a specified attribute.</span></span>|  
|<span data-ttu-id="3bb28-276"><xref:System.Xml.XmlReader.IsDefault%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bb28-276"><xref:System.Xml.XmlReader.IsDefault%2A> property</span></span>|<span data-ttu-id="3bb28-277">現在のノードが DTD またはスキーマで定義された既定値から生成された属性であるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-277">Check whether the current node is an attribute that was generated from the default value defined in the DTD or schema.</span></span>|  
|<span data-ttu-id="3bb28-278"><xref:System.Xml.XmlReader.MoveToElement%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="3bb28-278"><xref:System.Xml.XmlReader.MoveToElement%2A> method</span></span>|<span data-ttu-id="3bb28-279">現在の属性を所有する要素に移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-279">Move to the element that owns the current attribute.</span></span> <span data-ttu-id="3bb28-280">このメソッドを使用すると、その属性間を移動した後はその要素に戻ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-280">Use this method to return to an element after navigating through its attributes.</span></span>|  
|<span data-ttu-id="3bb28-281"><xref:System.Xml.XmlReader.ReadAttributeValue%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="3bb28-281"><xref:System.Xml.XmlReader.ReadAttributeValue%2A> method</span></span>|<span data-ttu-id="3bb28-282">1 つまたは複数に属性値を解析`Text`、 `EntityReference`、または`EndEntity`ノード。</span><span class="sxs-lookup"><span data-stu-id="3bb28-282">Parse the attribute value into one or more `Text`, `EntityReference`, or `EndEntity` nodes.</span></span>|  
  
 <span data-ttu-id="3bb28-283">一般の <xref:System.Xml.XmlReader> のメソッドとプロパティもすべて属性の処理に使用できます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-283">Any of the general <xref:System.Xml.XmlReader> methods and properties can also be used to process attributes.</span></span> <span data-ttu-id="3bb28-284">たとえば、<xref:System.Xml.XmlReader> が属性上に位置した後、<xref:System.Xml.XmlReader.Name%2A> および <xref:System.Xml.XmlReader.Value%2A> のプロパティは、その属性の値を反映します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-284">For example, after the <xref:System.Xml.XmlReader> is positioned on an attribute, the <xref:System.Xml.XmlReader.Name%2A> and <xref:System.Xml.XmlReader.Value%2A> properties reflect the values of the attribute.</span></span> <span data-ttu-id="3bb28-285">コンテンツの `Read` メソッドも属性の値を取得するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-285">You can also use any of the content `Read` methods to get the value of the attribute.</span></span>  
  
 <span data-ttu-id="3bb28-286">この例では、<xref:System.Xml.XmlReader.AttributeCount%2A>要素のすべての属性間を移動するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-286">This example uses the <xref:System.Xml.XmlReader.AttributeCount%2A> property to navigate through all the attributes on an element.</span></span>  
  
 [!code-csharp[XmlReaderBasic#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#1)]
 [!code-vb[XmlReaderBasic#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#1)]  
  
 <span data-ttu-id="3bb28-287">この例では、<xref:System.Xml.XmlReader.MoveToNextAttribute%2A>メソッドで、`while`ループを使用して、属性間を移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-287">This example uses the <xref:System.Xml.XmlReader.MoveToNextAttribute%2A> method in a `while` loop to navigate through the attributes.</span></span>  
  
 [!code-csharp[XmlReaderBasic#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#6)]
 [!code-vb[XmlReaderBasic#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#6)]  
  
 <span data-ttu-id="3bb28-288">**XML 宣言ノードの属性の読み取り**</span><span class="sxs-lookup"><span data-stu-id="3bb28-288">**Reading attributes on XML declaration nodes**</span></span>  
  
 <span data-ttu-id="3bb28-289">XML 宣言ノードで、XML リーダーが配置されているときに、<xref:System.Xml.XmlReader.Value%2A>プロパティは、バージョン、スタンドアロン、および 1 つの文字列としてエンコード情報を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-289">When the XML reader is positioned on an XML declaration node, the <xref:System.Xml.XmlReader.Value%2A> property returns the version, standalone, and encoding information as a single string.</span></span> <span data-ttu-id="3bb28-290"><xref:System.Xml.XmlReader> によって作成されたオブジェクト、 <xref:System.Xml.XmlReader.Create%2A> 、メソッド、<xref:System.Xml.XmlTextReader>クラス、および<xref:System.Xml.XmlValidatingReader>クラスは、バージョン、スタンドアロン、および属性としてエンコードの項目を公開します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-290"><xref:System.Xml.XmlReader> objects created by the <xref:System.Xml.XmlReader.Create%2A> method, the <xref:System.Xml.XmlTextReader> class, and the <xref:System.Xml.XmlValidatingReader> class expose the version, standalone, and encoding items as attributes.</span></span>  
  
 <span data-ttu-id="3bb28-291">**ドキュメント型ノードの属性の読み取り**</span><span class="sxs-lookup"><span data-stu-id="3bb28-291">**Reading attributes on document type nodes**</span></span>  
  
 <span data-ttu-id="3bb28-292">XML リーダーの位置は、ドキュメント型ノードにある場合、<xref:System.Xml.XmlReader.GetAttribute%2A>メソッドと<xref:System.Xml.XmlReader.Item%2A>システムとパブリックのリテラルの値を返すプロパティを使用できます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-292">When the XML reader is positioned on a document type node, the <xref:System.Xml.XmlReader.GetAttribute%2A> method and <xref:System.Xml.XmlReader.Item%2A> property can be used to return the values for the SYSTEM and PUBLIC literals.</span></span> <span data-ttu-id="3bb28-293">たとえば、`reader.GetAttribute("PUBLIC")` は PUBLIC の値を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-293">For example, calling `reader.GetAttribute("PUBLIC")` returns the PUBLIC value.</span></span>  
  
 <span data-ttu-id="3bb28-294">**処理命令ノードの属性の読み取り**</span><span class="sxs-lookup"><span data-stu-id="3bb28-294">**Reading attributes on processing instruction nodes**</span></span>  
  
 <span data-ttu-id="3bb28-295"><xref:System.Xml.XmlReader> が処理命令ノード上に位置しているとき、<xref:System.Xml.XmlReader.Value%2A> プロパティはテキストの内容全体を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-295">When the <xref:System.Xml.XmlReader> is positioned on a processing instruction node, the <xref:System.Xml.XmlReader.Value%2A> property returns the entire text content.</span></span> <span data-ttu-id="3bb28-296">処理命令ノード内の項目は、属性として扱われます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-296">Items in the processing instruction node aren't treated as attributes.</span></span> <span data-ttu-id="3bb28-297">読み取ることができませんが、<xref:System.Xml.XmlReader.GetAttribute%2A>または<xref:System.Xml.XmlReader.MoveToAttribute%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-297">They can't be read with the <xref:System.Xml.XmlReader.GetAttribute%2A> or <xref:System.Xml.XmlReader.MoveToAttribute%2A> method.</span></span>  
  
<a name="xmlreader_content"></a>   
## <a name="reading-xml-content"></a><span data-ttu-id="3bb28-298">読み取る XML コンテンツ</span><span class="sxs-lookup"><span data-stu-id="3bb28-298">Reading XML content</span></span>  
 <span data-ttu-id="3bb28-299">XMLReader クラスには、XML ファイルからコンテンツを読み取るし、文字列値として内容を取得する次のメンバーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-299">The XMLReader class includes the following members that read content from an XML file and return the content as string values.</span></span> <span data-ttu-id="3bb28-300">(CLR 型を返すを参照してください、[次のセクション](#xmlreader_clr))。</span><span class="sxs-lookup"><span data-stu-id="3bb28-300">(To return CLR types, see the [next section](#xmlreader_clr).)</span></span>  
  
|<span data-ttu-id="3bb28-301">これを使用して<xref:System.Xml.XmlReader>メンバー</span><span class="sxs-lookup"><span data-stu-id="3bb28-301">Use this <xref:System.Xml.XmlReader> member</span></span>|<span data-ttu-id="3bb28-302">終了</span><span class="sxs-lookup"><span data-stu-id="3bb28-302">To</span></span>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------|--------|  
|<span data-ttu-id="3bb28-303"><xref:System.Xml.XmlReader.Value%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="3bb28-303"><xref:System.Xml.XmlReader.Value%2A> property</span></span>|<span data-ttu-id="3bb28-304">現在のノードのテキスト コンテンツを取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-304">Get the text content of the current node.</span></span> <span data-ttu-id="3bb28-305">返される値は、ノードの種類によって異なります。参照してください、<xref:System.Xml.XmlReader.Value%2A>詳細ページを参照します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-305">The value returned depends on the node type; see the <xref:System.Xml.XmlReader.Value%2A> reference page for details.</span></span>|  
|<span data-ttu-id="3bb28-306"><xref:System.Xml.XmlReader.ReadString%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="3bb28-306"><xref:System.Xml.XmlReader.ReadString%2A> method</span></span>|<span data-ttu-id="3bb28-307">文字列として、要素ノードまたはテキスト ノードのコンテンツを取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-307">Get the content of an element or text node as a string.</span></span> <span data-ttu-id="3bb28-308">このメソッドは、処理命令とコメントを停止します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-308">This method stops on processing instructions and comments.</span></span><br /><br /> <span data-ttu-id="3bb28-309">このメソッドが特定のノード型でどのように処理する方法の詳細については、次を参照してください。、<xref:System.Xml.XmlReader.ReadString%2A>リファレンス ページ。</span><span class="sxs-lookup"><span data-stu-id="3bb28-309">For details on how this method handles specific node types, see the <xref:System.Xml.XmlReader.ReadString%2A> reference page.</span></span>|  
|<span data-ttu-id="3bb28-310"><xref:System.Xml.XmlReader.ReadInnerXml%2A> メソッドおよび <xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="3bb28-310"><xref:System.Xml.XmlReader.ReadInnerXml%2A> and <xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A> methods</span></span>|<span data-ttu-id="3bb28-311">開始タグと終了タグを除く、マークアップを含む、現在のノードのすべてのコンテンツを取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-311">Get all the content of the current node, including the markup, but excluding start and end tags.</span></span> <span data-ttu-id="3bb28-312">たとえばの場合。</span><span class="sxs-lookup"><span data-stu-id="3bb28-312">For example, for:</span></span><br /><br /> `<node>this<child id="123"/></node>`<br /><br /> <span data-ttu-id="3bb28-313"><xref:System.Xml.XmlReader.ReadInnerXml%2A> 返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-313"><xref:System.Xml.XmlReader.ReadInnerXml%2A> returns:</span></span><br /><br /> `this<child id="123"/>`|  
|<span data-ttu-id="3bb28-314"><xref:System.Xml.XmlReader.ReadOuterXml%2A> メソッドおよび <xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="3bb28-314"><xref:System.Xml.XmlReader.ReadOuterXml%2A> and <xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A> methods</span></span>|<span data-ttu-id="3bb28-315">現在のノードとその子は、マークアップと開始/終了タグを含むすべてのコンテンツを取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-315">Get all the content of the current node and its children, including markup and start/end tags.</span></span> <span data-ttu-id="3bb28-316">たとえばの場合。</span><span class="sxs-lookup"><span data-stu-id="3bb28-316">For example, for:</span></span><br /><br /> `<node>this<child id="123"/></node>`<br /><br /> <span data-ttu-id="3bb28-317"><xref:System.Xml.XmlReader.ReadOuterXml%2A> 返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-317"><xref:System.Xml.XmlReader.ReadOuterXml%2A> returns:</span></span><br /><br /> `<node>this<child id="123"/></node>`|  
  
<a name="xmlreader_clr"></a>   
## <a name="converting-to-clr-types"></a><span data-ttu-id="3bb28-318">CLR 型に変換します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-318">Converting to CLR types</span></span>  
 <span data-ttu-id="3bb28-319">メンバーを使用することができます、 <xref:System.Xml.XmlReader> (次の表に表示される) クラスを XML データを読み取り、文字列ではなくランタイム (CLR) 型の共通言語として値を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-319">You can use the members of the <xref:System.Xml.XmlReader> class (listed in the following table) to read XML data and return values as common language runtime (CLR) types instead of strings.</span></span> <span data-ttu-id="3bb28-320">これらのメンバーでは、手動で解析または文字列値を変換することがなく、コーディングのタスクに最適な形式で値を取得できます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-320">These members enable you to get values in the representation that is most appropriate for your coding task without having to manually parse or convert string values.</span></span>  
  
-   <span data-ttu-id="3bb28-321">**ReadElementContentAs**メソッドは、要素ノードの型に対してのみ呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-321">The **ReadElementContentAs** methods can only be called on element node types.</span></span> <span data-ttu-id="3bb28-322">これらのメソッドは、子要素または混合コンテンツを含む要素では使用できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-322">These methods cannot be used on elements that contain child elements or mixed content.</span></span> <span data-ttu-id="3bb28-323">呼ばれると、<xref:System.Xml.XmlReader> オブジェクトは開始タグと要素コンテンツと読み、その後、終了要素タグを越えて移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-323">When called, the <xref:System.Xml.XmlReader> object reads the start tag, reads the element content, and then moves past the end element tag.</span></span> <span data-ttu-id="3bb28-324">処理命令とコメントは無視され、エンティティは展開されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-324">Processing instructions and comments are ignored and entities are expanded.</span></span>  
  
-   <span data-ttu-id="3bb28-325">**ReadContentAs**メソッドは、現在のリーダーの位置でテキストの内容を読み取るし、XML データには、任意のスキーマまたはデータ型に関連付けられている情報を持っていない場合は、テキストの内容を要求された戻り値の型に変換します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-325">The **ReadContentAs** methods read the text content at the current reader position, and if the XML data doesn't have any schema or data type information associated with it, convert the text content to the requested return type.</span></span> <span data-ttu-id="3bb28-326">テキスト、空白、有意の空白、および CDATA セクションは連結されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-326">Text, white space, significant white space and CDATA sections are concatenated.</span></span> <span data-ttu-id="3bb28-327">コメントおよび処理命令はスキップされ、エンティティ参照は自動的に解決されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-327">Comments and processing instructions are skipped, and entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="3bb28-328"><xref:System.Xml.XmlReader>クラスによって定義されたルールを使用して、 [W3C XML Schema Part 2: Datatypes](https://www.w3.org/TR/xmlschema-2/)推奨設定です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-328">The <xref:System.Xml.XmlReader> class uses the rules defined by the [W3C XML Schema Part 2: Datatypes](https://www.w3.org/TR/xmlschema-2/)recommendation.</span></span>  
  
|<span data-ttu-id="3bb28-329">これを使用して<xref:System.Xml.XmlReader>メソッド</span><span class="sxs-lookup"><span data-stu-id="3bb28-329">Use this <xref:System.Xml.XmlReader> method</span></span>|<span data-ttu-id="3bb28-330">この CLR 型を取得するには</span><span class="sxs-lookup"><span data-stu-id="3bb28-330">To return this CLR type</span></span>|  
|--------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|  
|<span data-ttu-id="3bb28-331"><xref:System.Xml.XmlReader.ReadContentAsBoolean%2A> および <xref:System.Xml.XmlReader.ReadElementContentAsBoolean%2A></span><span class="sxs-lookup"><span data-stu-id="3bb28-331"><xref:System.Xml.XmlReader.ReadContentAsBoolean%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsBoolean%2A></span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="3bb28-332"><xref:System.Xml.XmlReader.ReadContentAsDateTime%2A> および <xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A></span><span class="sxs-lookup"><span data-stu-id="3bb28-332"><xref:System.Xml.XmlReader.ReadContentAsDateTime%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A></span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="3bb28-333"><xref:System.Xml.XmlReader.ReadContentAsDouble%2A> および <xref:System.Xml.XmlReader.ReadElementContentAsDouble%2A></span><span class="sxs-lookup"><span data-stu-id="3bb28-333"><xref:System.Xml.XmlReader.ReadContentAsDouble%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsDouble%2A></span></span>|<xref:System.Double>|  
|<span data-ttu-id="3bb28-334"><xref:System.Xml.XmlReader.ReadContentAsLong%2A> および <xref:System.Xml.XmlReader.ReadElementContentAsLong%2A></span><span class="sxs-lookup"><span data-stu-id="3bb28-334"><xref:System.Xml.XmlReader.ReadContentAsLong%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsLong%2A></span></span>|<xref:System.Int64>|  
|<span data-ttu-id="3bb28-335"><xref:System.Xml.XmlReader.ReadContentAsInt%2A> および <xref:System.Xml.XmlReader.ReadElementContentAsInt%2A></span><span class="sxs-lookup"><span data-stu-id="3bb28-335"><xref:System.Xml.XmlReader.ReadContentAsInt%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsInt%2A></span></span>|<xref:System.Int32>|  
|<span data-ttu-id="3bb28-336"><xref:System.Xml.XmlReader.ReadContentAsString%2A> および <xref:System.Xml.XmlReader.ReadElementContentAsString%2A></span><span class="sxs-lookup"><span data-stu-id="3bb28-336"><xref:System.Xml.XmlReader.ReadContentAsString%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsString%2A></span></span>|<xref:System.String>|  
|<span data-ttu-id="3bb28-337"><xref:System.Xml.XmlReader.ReadContentAs%2A> および <xref:System.Xml.XmlReader.ReadElementContentAs%2A></span><span class="sxs-lookup"><span data-stu-id="3bb28-337"><xref:System.Xml.XmlReader.ReadContentAs%2A> and <xref:System.Xml.XmlReader.ReadElementContentAs%2A></span></span>|<span data-ttu-id="3bb28-338">指定した種類の`returnType`パラメーター</span><span class="sxs-lookup"><span data-stu-id="3bb28-338">The type you specify with the `returnType` parameter</span></span>|  
|<span data-ttu-id="3bb28-339"><xref:System.Xml.XmlReader.ReadContentAsObject%2A> および <xref:System.Xml.XmlReader.ReadElementContentAsObject%2A></span><span class="sxs-lookup"><span data-stu-id="3bb28-339"><xref:System.Xml.XmlReader.ReadContentAsObject%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsObject%2A></span></span>|<span data-ttu-id="3bb28-340">指定された、最も適切な型、<xref:System.Xml.XmlReader.ValueType%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-340">The most appropriate type, as specified by the <xref:System.Xml.XmlReader.ValueType%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="3bb28-341">参照してください[System.Xml クラスで型のサポート](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)のマッピング情報です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-341">See [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md) for mapping information.</span></span>|  
  
 <span data-ttu-id="3bb28-342">要素は、の形式のため、CLR 型に簡単に変換できない場合、は、変換に成功したことを確認するスキーマのマッピングを使用できます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-342">If an element can't easily be converted to a CLR type because of its format, you can use a schema mapping to ensure a successful conversion.</span></span> <span data-ttu-id="3bb28-343">次の例では、.xsd ファイルを使用して、変換、`hire-date`要素を`xs:date`型、および、使用、<xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A>として要素を返すメソッドを<xref:System.DateTime>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-343">The following example uses an .xsd file to convert the `hire-date` element to the `xs:date` type, and then uses the <xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A> method to return the element as a <xref:System.DateTime> object.</span></span>  
  
 <span data-ttu-id="3bb28-344">**入力 (hireDate.xml):**</span><span class="sxs-lookup"><span data-stu-id="3bb28-344">**Input (hireDate.xml):**</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#9](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/hireDate.xml#9)]  
  
 <span data-ttu-id="3bb28-345">**スキーマ (hireDate.xsd):**</span><span class="sxs-lookup"><span data-stu-id="3bb28-345">**Schema (hireDate.xsd):**</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#10](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/hireDate.xsd#10)]  
  
 <span data-ttu-id="3bb28-346">**コードに示します。**</span><span class="sxs-lookup"><span data-stu-id="3bb28-346">**Code:**</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#13](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#13)]
 [!code-vb[XmlReader.ReadElementContentAs#13](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#13)]  
  
 <span data-ttu-id="3bb28-347">**出力:**</span><span class="sxs-lookup"><span data-stu-id="3bb28-347">**Output:**</span></span>  
  
```  
Six Month Review Date:  7/8/2003 12:00:00 AM  
```  
  
<a name="xmlreader_async"></a>   
## <a name="asynchronous-programming"></a><span data-ttu-id="3bb28-348">非同期プログラミング</span><span class="sxs-lookup"><span data-stu-id="3bb28-348">Asynchronous programming</span></span>  
 <span data-ttu-id="3bb28-349">ほとんどの<xref:System.Xml.XmlReader>メソッドをメソッド名の末尾に"Async"を持つ非同期の対応があります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-349">Most of the <xref:System.Xml.XmlReader> methods have asynchronous counterparts that have "Async" at the end of their method names.</span></span> <span data-ttu-id="3bb28-350">たとえば、非同期に相当<xref:System.Xml.XmlReader.ReadContentAsObject%2A>は<xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-350">For example, the asynchronous equivalent of <xref:System.Xml.XmlReader.ReadContentAsObject%2A> is <xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A>.</span></span>  
  
 <span data-ttu-id="3bb28-351">次のメソッドは、非同期メソッドの呼び出しで使用できます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-351">The following methods can be used with asynchronous method calls:</span></span>  
  
-   <xref:System.Xml.XmlReader.GetAttribute%2A>  
  
-   <xref:System.Xml.XmlReader.MoveToAttribute%2A>  
  
-   <xref:System.Xml.XmlReader.MoveToFirstAttribute%2A>  
  
-   <xref:System.Xml.XmlReader.MoveToNextAttribute%2A>  
  
-   <xref:System.Xml.XmlReader.MoveToElement%2A>  
  
-   <xref:System.Xml.XmlReader.ReadAttributeValue%2A>  
  
-   <xref:System.Xml.XmlReader.ReadSubtree%2A>  
  
-   <xref:System.Xml.XmlReader.ResolveEntity%2A>  
  
 <span data-ttu-id="3bb28-352">次のセクションでは、対応する非同期がないメソッドの非同期の使用状況について説明します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-352">The following sections describe asynchronous usage for methods that don't have asynchronous counterparts.</span></span>  
  
 <span data-ttu-id="3bb28-353">**ReadStartElement メソッド**</span><span class="sxs-lookup"><span data-stu-id="3bb28-353">**ReadStartElement method**</span></span>  
  
 [!code-csharp[System.Xml.XmlReader.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#1)]
 [!code-vb[System.Xml.XmlReader.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#1)]  
  
 <span data-ttu-id="3bb28-354">**ReadEndElement メソッド**</span><span class="sxs-lookup"><span data-stu-id="3bb28-354">**ReadEndElement method**</span></span>  
  
 [!code-csharp[System.Xml.XmlReader.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#2)]
 [!code-vb[System.Xml.XmlReader.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#2)]  
  
 <span data-ttu-id="3bb28-355">**ReadToNextSibling メソッド**</span><span class="sxs-lookup"><span data-stu-id="3bb28-355">**ReadToNextSibling method**</span></span>  
  
 [!code-csharp[System.Xml.XmlReader.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#3)]
 [!code-vb[System.Xml.XmlReader.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#3)]  
  
 <span data-ttu-id="3bb28-356">**ReadToFollowing メソッド**</span><span class="sxs-lookup"><span data-stu-id="3bb28-356">**ReadToFollowing method**</span></span>  
  
 [!code-csharp[System.Xml.XmlReader.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#4)]
 [!code-vb[System.Xml.XmlReader.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#4)]  
  
 <span data-ttu-id="3bb28-357">**ReadToDescendant メソッド**</span><span class="sxs-lookup"><span data-stu-id="3bb28-357">**ReadToDescendant method**</span></span>  
  
 [!code-csharp[System.Xml.XmlReader.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#5)]
 [!code-vb[System.Xml.XmlReader.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#5)]  
  
<a name="xmlreader_security"></a>   
## <a name="security-considerations"></a><span data-ttu-id="3bb28-358">セキュリティの考慮事項</span><span class="sxs-lookup"><span data-stu-id="3bb28-358">Security considerations</span></span>  
 <span data-ttu-id="3bb28-359">使用する場合は、次を検討してください、<xref:System.Xml.XmlReader>クラス。</span><span class="sxs-lookup"><span data-stu-id="3bb28-359">Consider the following when working with the <xref:System.Xml.XmlReader> class:</span></span>  
  
-   <span data-ttu-id="3bb28-360">スローされた例外、<xref:System.Xml.XmlReader>したくないパス情報に送られ、アプリを公開することができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-360">Exceptions thrown from the <xref:System.Xml.XmlReader> can disclose path information that you might not want bubbled up to your app.</span></span> <span data-ttu-id="3bb28-361">アプリは、例外をキャッチして適切に処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-361">Your app must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="3bb28-362">サービス拒否攻撃の心配がある場合、または信頼されていないソースを扱う場合は、DTD 処理を有効にしません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-362">Do not enable DTD processing if you're concerned about denial of service issues or if you're dealing with untrusted sources.</span></span> <span data-ttu-id="3bb28-363">既定では DTD の処理が無効になっている<xref:System.Xml.XmlReader>によって作成されたオブジェクト、<xref:System.Xml.XmlReader.Create%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-363">DTD processing is disabled by default for <xref:System.Xml.XmlReader> objects created by the <xref:System.Xml.XmlReader.Create%2A> method.</span></span>  
  
     <span data-ttu-id="3bb28-364">DTD 処理を有効にした場合、<xref:System.Xml.XmlSecureResolver> を使用して <xref:System.Xml.XmlReader> でアクセス可能なリソースを制限できます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-364">If you have DTD processing enabled, you can use the <xref:System.Xml.XmlSecureResolver> to restrict the resources that the <xref:System.Xml.XmlReader> can access.</span></span> <span data-ttu-id="3bb28-365">XML 処理に対するメモリと時間制限できるようにアプリを設計することもできます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-365">You can also design your app so that the XML processing is memory and time constrained.</span></span> <span data-ttu-id="3bb28-366">たとえば、ASP.NET アプリケーションでタイムアウト制限を構成できます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-366">For example, you can configure time-out limits in your ASP.NET app.</span></span>  
  
-   <span data-ttu-id="3bb28-367">XML データには、スキーマ ファイルなど、外部リソースへの参照が含まれることがあります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-367">XML data can include references to external resources such as a schema file.</span></span> <span data-ttu-id="3bb28-368">使用して既定では、外部リソースの解決、<xref:System.Xml.XmlUrlResolver>ユーザー資格情報を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-368">By default, external resources are resolved by using an <xref:System.Xml.XmlUrlResolver> object with no user credentials.</span></span> <span data-ttu-id="3bb28-369">この点については、次のいずれかの方法でセキュリティを強化できます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-369">You can secure this further by doing one of the following:</span></span>  
  
    -   <span data-ttu-id="3bb28-370"><xref:System.Xml.XmlReader> プロパティを <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> オブジェクトに設定することによって、<xref:System.Xml.XmlSecureResolver> がアクセスできるリソースを制限します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-370">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
  
    -   <span data-ttu-id="3bb28-371"><xref:System.Xml.XmlReader> プロパティを <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> に設定することにより、`null` が外部リソースを開けないようにする。</span><span class="sxs-lookup"><span data-stu-id="3bb28-371">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to `null`.</span></span>  
  
-   <span data-ttu-id="3bb28-372"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>と<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation>の検証フラグ、<xref:System.Xml.XmlReaderSettings>オブジェクトは、既定で設定されていません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-372">The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags of an <xref:System.Xml.XmlReaderSettings> object aren't set by default.</span></span> <span data-ttu-id="3bb28-373">このことは、信頼できないソースからの XML データを処理する際に、スキーマ ベースの攻撃から <xref:System.Xml.XmlReader> を保護するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-373">This helps to protect the <xref:System.Xml.XmlReader> against schema-based attacks when it is processing XML data from an untrusted source.</span></span> <span data-ttu-id="3bb28-374">これらのフラグが設定されていると、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A> オブジェクトの <xref:System.Xml.XmlReaderSettings> が <xref:System.Xml.XmlReader> のインスタンス ドキュメント中に出現したスキーマの場所を解決するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-374">When these flags are set, the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> of the <xref:System.Xml.XmlReaderSettings> object is used to resolve schema locations encountered in the instance document in the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="3bb28-375">場合、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>プロパティに設定されている`null`、スキーマの場所が解決されない場合でも、<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>と<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation>検証フラグを設定します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-375">If the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property is set to `null`, schema locations aren't resolved even if the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags are set.</span></span>  
  
     <span data-ttu-id="3bb28-376">検証を実行しているときにスキーマを追加すると新しい型が追加されるため、検証しているドキュメントの検証結果を変えることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-376">Schemas added during validation add new types and can change the validation outcome of the document being validated.</span></span> <span data-ttu-id="3bb28-377">結果として、信頼できるソースからの外部スキーマだけが解決されるようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-377">As a result, external schemas should only be resolved from trusted sources.</span></span>  
  
     <span data-ttu-id="3bb28-378">無効にすることをお勧め、 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> id 制約は、ドキュメントの大部分に、スキーマに対する高可用性のシナリオでの信頼されていない、大規模な XML ドキュメントを検証するときにフラグを設定します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-378">We recommend disabling the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> flag when validating untrusted, large XML documents in high availability scenarios against a schema that has identity constraints over a large part of the document.</span></span> <span data-ttu-id="3bb28-379">このフラグは、既定で有効にします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-379">This flag is enabled by default.</span></span>  
  
-   <span data-ttu-id="3bb28-380">XML データには、処理に長時間を要する大量の属性、名前空間宣言、入れ子になった要素などが含まれることがあります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-380">XML data can contain a large number of attributes, namespace declarations, nested elements and so on that require a substantial amount of time to process.</span></span> <span data-ttu-id="3bb28-381">送信される入力のサイズを制限する、 <xref:System.Xml.XmlReader>、することができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-381">To limit the size of the input that is sent to the <xref:System.Xml.XmlReader>, you can:</span></span>  
  
    -   <span data-ttu-id="3bb28-382">設定して、ドキュメントのサイズを制限、<xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-382">Limit the size of the document by setting the <xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A> property.</span></span>  
  
    -   <span data-ttu-id="3bb28-383">エンティティの展開の設定により生成される文字の数を制限、<xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-383">Limit the number of characters that result from expanding entities by setting the <xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A> property.</span></span>  
  
    -   <span data-ttu-id="3bb28-384">カスタム作成`IStream`の実装、<xref:System.Xml.XmlReader>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-384">Create a custom `IStream` implementation for the <xref:System.Xml.XmlReader>.</span></span>  
  
-   <span data-ttu-id="3bb28-385"><xref:System.Xml.XmlReader.ReadValueChunk%2A>大量のデータ ストリームを処理するメソッドを使用できます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-385">The <xref:System.Xml.XmlReader.ReadValueChunk%2A> method can be used to handle large streams of data.</span></span> <span data-ttu-id="3bb28-386">このメソッドは、値全体に 1 つの文字列を割り当てる代わりに、一度に少数の文字を読みます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-386">This method reads a small number of characters at a time instead of allocating a single string for the whole value.</span></span>  
  
-   <span data-ttu-id="3bb28-387">一意のローカル名、名前空間、またはプレフィックスの数が多い XML ドキュメントを読み取るときに問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-387">When reading an XML document with a large number of unique local names, namespaces, or prefixes, a problem can occur.</span></span> <span data-ttu-id="3bb28-388">派生するクラスを使用している場合<xref:System.Xml.XmlReader>を呼び出すと、 <xref:System.Xml.XmlReader.LocalName%2A>、 <xref:System.Xml.XmlReader.Prefix%2A>、または<xref:System.Xml.XmlReader.NamespaceURI%2A>各項目のプロパティは、返される文字列に表示されます、<xref:System.Xml.NameTable>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-388">If you are using a class that derives from <xref:System.Xml.XmlReader>, and you call the <xref:System.Xml.XmlReader.LocalName%2A>, <xref:System.Xml.XmlReader.Prefix%2A>, or <xref:System.Xml.XmlReader.NamespaceURI%2A> property for each item, the returned string is added to a <xref:System.Xml.NameTable>.</span></span> <span data-ttu-id="3bb28-389">保持するコレクション、<xref:System.Xml.NameTable>サイズは、文字列ハンドルの仮想メモリ リークを作成することはありませんが減少します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-389">The collection held by the <xref:System.Xml.NameTable> never decreases in size, creating a virtual memory leak of the string handles.</span></span> <span data-ttu-id="3bb28-390">これはから派生する、<xref:System.Xml.NameTable>クラスおよび最大サイズ クォータを適用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-390">One mitigation for this is to derive from the <xref:System.Xml.NameTable> class and enforce a maximum size quota.</span></span> <span data-ttu-id="3bb28-391">(の使用を防止する方法はありません、<xref:System.Xml.NameTable>を切り替えたり、<xref:System.Xml.NameTable>それがいっぱいのとき)。</span><span class="sxs-lookup"><span data-stu-id="3bb28-391">(There is no way to prevent the use of a <xref:System.Xml.NameTable>, or to switch the <xref:System.Xml.NameTable> when it is full).</span></span> <span data-ttu-id="3bb28-392">別の軽減策が前述のプロパティを使用しないで、代わりに使用するには、<xref:System.Xml.XmlReader.MoveToAttribute%2A>メソッドを<xref:System.Xml.XmlReader.IsStartElement%2A>メソッドです。 可能な限りこれらのメソッドは文字列を返すおらず、あふれて問題を回避、<xref:System.Xml.NameTable>コレクション。</span><span class="sxs-lookup"><span data-stu-id="3bb28-392">Another mitigation is to avoid using the properties mentioned and instead use the <xref:System.Xml.XmlReader.MoveToAttribute%2A> method with the <xref:System.Xml.XmlReader.IsStartElement%2A> method where possible; those methods don't return strings and thus avoid the problem of overfilling the <xref:System.Xml.NameTable> collection.</span></span>  
  
-   <span data-ttu-id="3bb28-393"><xref:System.Xml.XmlReaderSettings> オブジェクトはユーザー資格情報など、重要な情報を含むことがあります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-393"><xref:System.Xml.XmlReaderSettings> objects can contain sensitive information such as user credentials.</span></span> <span data-ttu-id="3bb28-394">信頼できないコンポーネントが <xref:System.Xml.XmlReaderSettings> オブジェクトとそのユーザー資格情報を使用して、<xref:System.Xml.XmlReader> オブジェクトを作成し、データを読む可能性があります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-394">An untrusted component could use the <xref:System.Xml.XmlReaderSettings> object and its user credentials to create <xref:System.Xml.XmlReader> objects to read data.</span></span> <span data-ttu-id="3bb28-395">キャッシュする際は注意<xref:System.Xml.XmlReaderSettings>、オブジェクトを渡すときや、 <xref:System.Xml.XmlReaderSettings> 1 つのコンポーネントからを別のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-395">Be careful when caching <xref:System.Xml.XmlReaderSettings> objects, or when passing the <xref:System.Xml.XmlReaderSettings> object from one component to another.</span></span>  
  
-   <span data-ttu-id="3bb28-396">信頼できないソースからの <xref:System.Xml.NameTable>、<xref:System.Xml.XmlNamespaceManager>、および <xref:System.Xml.XmlResolver> オブジェクトなどのサポート コンポーネントは受け入れないようにします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-396">Do not accept supporting components, such as <xref:System.Xml.NameTable>, <xref:System.Xml.XmlNamespaceManager>, and <xref:System.Xml.XmlResolver> objects, from an untrusted source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-397">次のコード例は、非同期 API を使用して XML を解析する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-397">The following example code shows how to use the asynchronous API to parse XML.</span></span>  
  
 [!code-csharp[System.Xml.XmlReader.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#6)]
 [!code-vb[System.Xml.XmlReader.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-398"><see langword="XmlReader" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-398">Initializes a new instance of the <see langword="XmlReader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-399">このコンス トラクターは、この型の状態を初期化するために、派生クラスのコンス トラクターによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-399">This constructor is called by derived class constructors to initialize state in this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeCount">
      <MemberSignature Language="C#" Value="public abstract int AttributeCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AttributeCount" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.AttributeCount" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property AttributeCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int AttributeCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bb28-400">派生クラスでオーバーライドされると、現在のノードの属性数を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-400">When overridden in a derived class, gets the number of attributes on the current node.</span></span></summary>
        <value><span data-ttu-id="3bb28-401">現在のノードにある属性の数。</span><span class="sxs-lookup"><span data-stu-id="3bb28-401">The number of attributes on the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-402">このプロパティは`Element`、`DocumentType`と`XmlDeclaration`ノードのみです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-402">This property is relevant to `Element`, `DocumentType` and `XmlDeclaration` nodes only.</span></span> <span data-ttu-id="3bb28-403">(他のノード型属性がありません。)</span><span class="sxs-lookup"><span data-stu-id="3bb28-403">(Other node types do not have attributes.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-404">次の例では、現在のノードにすべての属性を表示します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-404">The following example displays all attributes on the current node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#1)]
 [!code-vb[XmlReaderBasic#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-405">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-405">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-406">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-406">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public abstract string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bb28-407">派生クラスでオーバーライドされると、現在のノードのベース URI を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-407">When overridden in a derived class, gets the base URI of the current node.</span></span></summary>
        <value><span data-ttu-id="3bb28-408">現在のノードのベース URI。</span><span class="sxs-lookup"><span data-stu-id="3bb28-408">The base URI of the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-409">ネットワークに接続された XML ドキュメントでは、さまざまな W3C 標準包含メカニズムを使用して集計データのチャンクで構成され、したがって各所に由来するノードが含まれます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-409">A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="3bb28-410">DTD エンティティが、この例が、これは Dtd に限定されません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-410">DTD entities are an example of this, but this is not limited to DTDs.</span></span> <span data-ttu-id="3bb28-411">ベース URI を示しますからこれらのノードの入手先。</span><span class="sxs-lookup"><span data-stu-id="3bb28-411">The base URI tells you where these nodes came from.</span></span> <span data-ttu-id="3bb28-412">返されるノードのベース URI がないかどうか (たとえば、解析されたメモリ内の文字列から)、`String.Empty`が返されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-412">If there is no base URI for the nodes being returned (for example, they were parsed from an in-memory string), `String.Empty` is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-413">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-413">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-414">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-414">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadBinaryContent">
      <MemberSignature Language="C#" Value="public virtual bool CanReadBinaryContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadBinaryContent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.CanReadBinaryContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanReadBinaryContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadBinaryContent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bb28-415"><see cref="T:System.Xml.XmlReader" /> がバイナリ コンテンツ用の読み取りメソッドを実装するかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-415">Gets a value indicating whether the <see cref="T:System.Xml.XmlReader" /> implements the binary content read methods.</span></span></summary>
        <value>
          <span data-ttu-id="3bb28-416">バイナリ コンテンツ用の読み取りメソッドを実装する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-416"><see langword="true" /> if the binary content read methods are implemented; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-417">バイナリ コンテンツを読み取る方法を示します、 <xref:System.Xml.XmlReader.ReadContentAsBase64%2A>、 <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A>、 <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A>、および<xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-417">The binary content read methods include the <xref:System.Xml.XmlReader.ReadContentAsBase64%2A>, <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A>, <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A>, and <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A> methods.</span></span> <span data-ttu-id="3bb28-418">このプロパティを返す場合`false`、<xref:System.NotSupportedException>バイナリのいずれかを読み取るときに返されるメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-418">If this property returns `false` a <xref:System.NotSupportedException> is returned when any of the binary read methods is called.</span></span>  
  
 <span data-ttu-id="3bb28-419">すべての Microsoft .NET Framework の実装、<xref:System.Xml.XmlReader>クラスの戻り値`true`このプロパティにします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-419">All Microsoft .NET Framework implementations of the <xref:System.Xml.XmlReader> class return `true` for this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-420">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-420">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-421">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-421">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadValueChunk">
      <MemberSignature Language="C#" Value="public virtual bool CanReadValueChunk { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadValueChunk" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.CanReadValueChunk" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanReadValueChunk As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadValueChunk { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bb28-422"><see cref="T:System.Xml.XmlReader" /> が <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> メソッドを実装しているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-422">Gets a value indicating whether the <see cref="T:System.Xml.XmlReader" /> implements the <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> method.</span></span></summary>
        <value>
          <span data-ttu-id="3bb28-423"><see cref="T:System.Xml.XmlReader" /> が <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> メソッドを実装している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-423"><see langword="true" /> if the <see cref="T:System.Xml.XmlReader" /> implements the <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> method; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-424">テキストの解析<xref:System.Xml.XmlReader>静的から作成されたオブジェクトを<xref:System.Xml.XmlReader.Create%2A>メソッドの戻り値を常に`true`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-424">Text parsing <xref:System.Xml.XmlReader> objects that were created from the static <xref:System.Xml.XmlReader.Create%2A> method always return `true`.</span></span> <span data-ttu-id="3bb28-425">その他のすべての Microsoft .NET Framework 実装、<xref:System.Xml.XmlReader>クラスを含む、<xref:System.Xml.XmlTextReader>クラス、返す`false`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-425">All other Microsoft .NET Framework implementations of the <xref:System.Xml.XmlReader> class, including the <xref:System.Xml.XmlTextReader> class, return `false`.</span></span>  
  
 <span data-ttu-id="3bb28-426">このプロパティを返す場合`false`、<xref:System.NotSupportedException>ときに返される、<xref:System.Xml.XmlReader.ReadValueChunk%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-426">If this property returns `false` a <xref:System.NotSupportedException> is returned when the <xref:System.Xml.XmlReader.ReadValueChunk%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-427">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-427">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-428">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-428">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanResolveEntity">
      <MemberSignature Language="C#" Value="public virtual bool CanResolveEntity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResolveEntity" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.CanResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanResolveEntity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanResolveEntity { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bb28-429">このリーダーがエンティティを解析および解決できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-429">Gets a value indicating whether this reader can parse and resolve entities.</span></span></summary>
        <value>
          <span data-ttu-id="3bb28-430">リーダーがエンティティを解析および解決できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-430"><see langword="true" /> if the reader can parse and resolve entities; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-431">このプロパティは常に返します`false`の実装のため<xref:System.Xml.XmlReader>DTD 情報をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-431">This property always returns `false` for implementations of <xref:System.Xml.XmlReader> that do not support DTD information.</span></span> <span data-ttu-id="3bb28-432">この例では、呼び出す<xref:System.Xml.XmlReader.ResolveEntity%2A>例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-432">In this case, calling <xref:System.Xml.XmlReader.ResolveEntity%2A> throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-433">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-433">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-434">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-434">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-435">派生クラスでオーバーライドされると、<see cref="P:System.Xml.XmlReader.ReadState" /> を <see cref="F:System.Xml.ReadState.Closed" /> に変更します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-435">When overridden in a derived class, changes the <see cref="P:System.Xml.XmlReader.ReadState" /> to <see cref="F:System.Xml.ReadState.Closed" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-436">このメソッドは、読み取り中に保持されているすべてのリソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-436">This method also releases any resources held during reading.</span></span> <span data-ttu-id="3bb28-437">場合<xref:System.Xml.XmlReader.Close%2A>は既に呼び出されると、アクションは実行されません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-437">If <xref:System.Xml.XmlReader.Close%2A> has already been called, no action is performed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-438">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-438">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-439">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-439">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3bb28-440">新しい <see cref="T:System.Xml.XmlReader" /> のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-440">Creates a new <see cref="T:System.Xml.XmlReader" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-441">ほとんどの<xref:System.Xml.XmlReader.Create%2A>オーバー ロードが含まれて、`settings`を受け取るパラメーター、<xref:System.Xml.XmlReaderSettings>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-441">Most of the <xref:System.Xml.XmlReader.Create%2A> overloads include a `settings` parameter that accepts an <xref:System.Xml.XmlReaderSettings> object.</span></span> <span data-ttu-id="3bb28-442">このオブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-442">You can use this object to:</span></span>  
  
-   <span data-ttu-id="3bb28-443">サポートする機能を指定、<xref:System.Xml.XmlReader>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-443">Specify which features you want supported on the <xref:System.Xml.XmlReader> object.</span></span>  
  
-   <span data-ttu-id="3bb28-444">再利用、<xref:System.Xml.XmlReaderSettings>を複数のリーダーを作成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-444">Reuse the <xref:System.Xml.XmlReaderSettings> object to create multiple readers.</span></span> <span data-ttu-id="3bb28-445">同じ機能を持つ複数のリーダーの作成に、同じ設定を使用できます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-445">You can use the same settings to create multiple readers with the same functionality.</span></span> <span data-ttu-id="3bb28-446">または、設定を変更することができます、<xref:System.Xml.XmlReaderSettings>インスタンスし、別の機能セットと、新しいリーダーを作成します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-446">Or, you can modify the settings on an <xref:System.Xml.XmlReaderSettings> instance and create a new reader with a different set of features.</span></span>  
  
-   <span data-ttu-id="3bb28-447">既存の XML リーダーに機能を追加します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-447">Add features to an existing XML reader.</span></span> <span data-ttu-id="3bb28-448"><xref:System.Xml.XmlReader.Create%2A> メソッドは別の <xref:System.Xml.XmlReader> オブジェクトを受け取ることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-448">The <xref:System.Xml.XmlReader.Create%2A> method can accept another <xref:System.Xml.XmlReader> object.</span></span> <span data-ttu-id="3bb28-449">基になる<xref:System.Xml.XmlReader>オブジェクトをユーザー定義のリーダーは、<xref:System.Xml.XmlTextReader>オブジェクト、または別<xref:System.Xml.XmlReader>する他の機能を追加するインスタンス。</span><span class="sxs-lookup"><span data-stu-id="3bb28-449">The underlying <xref:System.Xml.XmlReader> object can be a user-defined reader, a <xref:System.Xml.XmlTextReader> object, or another <xref:System.Xml.XmlReader> instance that you want to add additional features to.</span></span>  
  
-   <span data-ttu-id="3bb28-450">優れた一致チェックやへの準拠などの機能をフル活用、 [XML 1.0 (第 4 版)](https://www.w3.org/TR/2006/REC-xml-20060816/)でのみ使用可能な推奨事項<xref:System.Xml.XmlReader>静的によって作成されたオブジェクト<xref:System.Xml.XmlReader.Create%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-450">Take full advantage of features such as better conformance checking and compliance to the [XML 1.0 (fourth edition)](https://www.w3.org/TR/2006/REC-xml-20060816/)recommendation that are available only on <xref:System.Xml.XmlReader> objects created by the static <xref:System.Xml.XmlReader.Create%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3bb28-451">.NET Framework には具体的な実装が含まれています、<xref:System.Xml.XmlReader>クラスなど、 <xref:System.Xml.XmlTextReader>、 <xref:System.Xml.XmlNodeReader>、および<xref:System.Xml.XmlValidatingReader>クラス、お勧めを作成すること<xref:System.Xml.XmlReader>インスタンスを使用して、 <xref:System.Xml.XmlReader.Create%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3bb28-451">Although the .NET Framework includes concrete implementations of the <xref:System.Xml.XmlReader> class, such as the <xref:System.Xml.XmlTextReader>, <xref:System.Xml.XmlNodeReader>, and the <xref:System.Xml.XmlValidatingReader> classes, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A> method.</span></span>  
  
## <a name="default-settings"></a><span data-ttu-id="3bb28-452">既定の設定</span><span class="sxs-lookup"><span data-stu-id="3bb28-452">Default settings</span></span>  
 <span data-ttu-id="3bb28-453">使用する場合、<xref:System.Xml.XmlReader.Create%2A>を受け取らないオーバー ロード、<xref:System.Xml.XmlReaderSettings>オブジェクトの次の既定のリーダーの設定が使用されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-453">If you use a <xref:System.Xml.XmlReader.Create%2A> overload that doesn't accept a <xref:System.Xml.XmlReaderSettings> object, the following default reader settings are used:</span></span>  
  
|<span data-ttu-id="3bb28-454">設定</span><span class="sxs-lookup"><span data-stu-id="3bb28-454">Setting</span></span>|<span data-ttu-id="3bb28-455">既定値</span><span class="sxs-lookup"><span data-stu-id="3bb28-455">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlReaderSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlReaderSettings.IgnoreComments%2A>|`false`|  
|<xref:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions%2A>|`false`|  
|<xref:System.Xml.XmlReaderSettings.IgnoreWhitespace%2A>|`false`|  
|<xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A>|<span data-ttu-id="3bb28-456">0</span><span class="sxs-lookup"><span data-stu-id="3bb28-456">0</span></span>|  
|<xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A>|<span data-ttu-id="3bb28-457">0</span><span class="sxs-lookup"><span data-stu-id="3bb28-457">0</span></span>|  
|<xref:System.Xml.XmlReaderSettings.NameTable%2A>|`null`|  
|<xref:System.Xml.XmlReaderSettings.DtdProcessing%2A>|<xref:System.Xml.DtdProcessing.Prohibit>|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|<span data-ttu-id="3bb28-458">空の <xref:System.Xml.Schema.XmlSchemaSet> オブジェクト</span><span class="sxs-lookup"><span data-stu-id="3bb28-458">An empty <xref:System.Xml.Schema.XmlSchemaSet> object</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>|<span data-ttu-id="3bb28-459"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> 有効になっています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-459"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> enabled</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ValidationType%2A>|<xref:System.Xml.ValidationType.None>|  
|<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>|<span data-ttu-id="3bb28-460">新しい <xref:System.Xml.XmlUrlResolver> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-460">A new <xref:System.Xml.XmlUrlResolver> object.</span></span>  <span data-ttu-id="3bb28-461">この設定は、既定値は、.NET Framework 4.5.2 以降、`null`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-461">Starting with the .NET Framework 4.5.2, this setting has a default value of `null`.</span></span>|  
  
## <a name="settings-for-common-scenarios"></a><span data-ttu-id="3bb28-462">一般的なシナリオの設定</span><span class="sxs-lookup"><span data-stu-id="3bb28-462">Settings for common scenarios</span></span>  
 <span data-ttu-id="3bb28-463">ここでは、<xref:System.Xml.XmlReaderSettings>プロパティの XML リーダーの一般的なシナリオの一部を設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-463">Here are the <xref:System.Xml.XmlReaderSettings> properties you should set for some of the typical XML reader scenarios.</span></span>  
  
|<span data-ttu-id="3bb28-464">必要条件</span><span class="sxs-lookup"><span data-stu-id="3bb28-464">Requirement</span></span>|<span data-ttu-id="3bb28-465">設定</span><span class="sxs-lookup"><span data-stu-id="3bb28-465">Set</span></span>|  
|-----------------|---------|  
|<span data-ttu-id="3bb28-466">データは、整形式 XML ドキュメントである必要があります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-466">Data must be a well-formed XML document.</span></span>|<span data-ttu-id="3bb28-467"><xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> <xref:System.Xml.ConformanceLevel.Document>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-467"><xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> to <xref:System.Xml.ConformanceLevel.Document>.</span></span>|  
|<span data-ttu-id="3bb28-468">データは、整形式 XML の解析対象エンティティである必要があります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-468">Data must be a well-formed XML parsed entity.</span></span>|<span data-ttu-id="3bb28-469"><xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> <xref:System.Xml.ConformanceLevel.Fragment>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-469"><xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> to <xref:System.Xml.ConformanceLevel.Fragment>.</span></span>|  
|<span data-ttu-id="3bb28-470">データは、DTD に対して検証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-470">Data must be validated against a DTD.</span></span>|<span data-ttu-id="3bb28-471"><xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> ～ <xref:System.Xml.DtdProcessing.Parse></span><span class="sxs-lookup"><span data-stu-id="3bb28-471"><xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> to <xref:System.Xml.DtdProcessing.Parse></span></span><br /><span data-ttu-id="3bb28-472"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> <xref:System.Xml.ValidationType.DTD>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-472"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> to <xref:System.Xml.ValidationType.DTD>.</span></span>|  
|<span data-ttu-id="3bb28-473">データは、XML スキーマに対して検証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-473">Data must be validated against an XML schema.</span></span>|<span data-ttu-id="3bb28-474"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> ～ <xref:System.Xml.ValidationType.Schema></span><span class="sxs-lookup"><span data-stu-id="3bb28-474"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> to <xref:System.Xml.ValidationType.Schema></span></span><br /><span data-ttu-id="3bb28-475"><xref:System.Xml.XmlReaderSettings.Schemas%2A> <xref:System.Xml.Schema.XmlSchemaSet>検証に使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-475"><xref:System.Xml.XmlReaderSettings.Schemas%2A> to the <xref:System.Xml.Schema.XmlSchemaSet> to use for validation.</span></span> <span data-ttu-id="3bb28-476">なお<xref:System.Xml.XmlReader>Xml-data Reduced (XDR) スキーマ検証をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-476">Note that <xref:System.Xml.XmlReader> doesn't support XML-Data Reduced (XDR) schema validation.</span></span>|  
|<span data-ttu-id="3bb28-477">データは、インライン XML スキーマに対して検証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-477">Data must be validated against an inline XML schema.</span></span>|<span data-ttu-id="3bb28-478"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> ～ <xref:System.Xml.ValidationType.Schema></span><span class="sxs-lookup"><span data-stu-id="3bb28-478"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> to <xref:System.Xml.ValidationType.Schema></span></span><br /><span data-ttu-id="3bb28-479"><xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-479"><xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> to <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>.</span></span>|  
|<span data-ttu-id="3bb28-480">サポートを入力します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-480">Type support.</span></span>|<span data-ttu-id="3bb28-481"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> ～ <xref:System.Xml.ValidationType.Schema></span><span class="sxs-lookup"><span data-stu-id="3bb28-481"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> to <xref:System.Xml.ValidationType.Schema></span></span><br /><span data-ttu-id="3bb28-482"><xref:System.Xml.XmlReaderSettings.Schemas%2A> <xref:System.Xml.Schema.XmlSchemaSet>を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-482"><xref:System.Xml.XmlReaderSettings.Schemas%2A> to the <xref:System.Xml.Schema.XmlSchemaSet> to use.</span></span>|  
  
 <span data-ttu-id="3bb28-483"><xref:System.Xml.XmlReader> Xml-data Reduced (XDR) スキーマ検証をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-483"><xref:System.Xml.XmlReader> doesn't support XML-Data Reduced (XDR) schema validation.</span></span>  
  
## <a name="asynchronous-programming"></a><span data-ttu-id="3bb28-484">非同期プログラミング</span><span class="sxs-lookup"><span data-stu-id="3bb28-484">Asynchronous programming</span></span>  
 <span data-ttu-id="3bb28-485">同期モードで、<xref:System.Xml.XmlReader.Create%2A>メソッドは、ファイル、ストリーム、またはテキスト リーダーのバッファーからのデータの先頭のチャンクを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-485">In synchronous mode, the <xref:System.Xml.XmlReader.Create%2A> method reads the first chunk of data from the buffer of the file, stream, or text reader.</span></span> <span data-ttu-id="3bb28-486">I/O 操作が失敗した場合は、例外がスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-486">This may throw an exception if an I/O operation fails.</span></span> <span data-ttu-id="3bb28-487">非同期モードでは、ため、読み取り操作が発生したときに発生する例外がスローされますも、最初の I/O 操作は、読み取り操作で発生します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-487">In asynchronous mode, the first I/O operation occurs with a read operation, so exceptions that arise will be thrown when the read operation occurs.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="3bb28-488">セキュリティの考慮事項</span><span class="sxs-lookup"><span data-stu-id="3bb28-488">Security considerations</span></span>  
 <span data-ttu-id="3bb28-489">既定では、<xref:System.Xml.XmlReader>を使用して、<xref:System.Xml.XmlUrlResolver>を開くにはリソース ユーザー資格情報を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-489">By default, the <xref:System.Xml.XmlReader> uses an <xref:System.Xml.XmlUrlResolver> object with no user credentials to open resources.</span></span> <span data-ttu-id="3bb28-490">つまり、既定では、XML リーダーをアクセス資格情報を必要としない任意の場所。</span><span class="sxs-lookup"><span data-stu-id="3bb28-490">This means that, by default, the XML reader can access any location that doesn't require credentials.</span></span> <span data-ttu-id="3bb28-491">使用して、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>リソースへのアクセスを制御するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="3bb28-491">Use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to control access to resources:</span></span>  
  
-   <span data-ttu-id="3bb28-492">設定<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>を<xref:System.Xml.XmlSecureResolver>XML リーダーにアクセスできるリソースを制限するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-492">Set <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> to an <xref:System.Xml.XmlSecureResolver> object to restrict the resources that the XML reader can access.</span></span>  
  
 <span data-ttu-id="3bb28-493">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-493">-or-</span></span>  
  
-   <span data-ttu-id="3bb28-494">設定<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>に`null`を XML リーダーが任意の外部リソースを開くことを防ぐためにします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-494">Set <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> to `null` to prevent the XML reader from opening any external resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-495">この例では、意味のない空白を削除、コメントを削除してフラグメント レベルの一致チェックを実行する XML リーダーを作成します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-495">This example creates an XML reader that strips insignificant white space, strips comments, and performs fragment-level conformance checking.</span></span>  
  
 [!code-csharp[XmlReader.Create#11](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#11)]
 [!code-vb[XmlReader.Create#11](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#11)]  
  
 <span data-ttu-id="3bb28-496">次の例では、<xref:System.Xml.XmlUrlResolver>ファイルにアクセスする既定の資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-496">The following example uses an <xref:System.Xml.XmlUrlResolver> with default credentials to access a file.</span></span>  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 [!code-cpp[XmlReaderSettings.cctor#2](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#2)]
 [!code-csharp[XmlReaderSettings.cctor#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#2)]
 [!code-vb[XmlReaderSettings.cctor#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#2)]  
  
 <span data-ttu-id="3bb28-497">次のコードでは、別のリーダー内のリーダー インスタンスをラップします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-497">The following code wraps a reader instance within another reader.</span></span>  
  
 [!code-csharp[XmlReader.Create#13](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#13)]
 [!code-vb[XmlReader.Create#13](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#13)]  
  
 <span data-ttu-id="3bb28-498">この例では、DTD および XML スキーマの検証を追加するリーダーをチェインします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-498">This example chains readers to add DTD and XML schema validation.</span></span>  
  
 [!code-csharp[XmlReader.Create#12](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#12)]
 [!code-vb[XmlReader.Create#12](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.Stream input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.Stream input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As Stream) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::Stream ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="3bb28-499">XML データを格納しているストリーム。</span><span class="sxs-lookup"><span data-stu-id="3bb28-499">The stream that contains the XML data.</span></span>  
  
 <span data-ttu-id="3bb28-500"><see cref="T:System.Xml.XmlReader" /> は、バイト オーダー マークや、エンコードに関するその他の記号を探すため、ストリームの先頭バイトをスキャンします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-500">The <see cref="T:System.Xml.XmlReader" /> scans the first bytes of the stream looking for a byte order mark or other sign of encoding.</span></span> <span data-ttu-id="3bb28-501">エンコーディングが確認された場合、そのエンコーディングを使用してストリームの読み込みを続行し、入力を (Unicode) 文字のストリームとして解析する処理を継続します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-501">When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</span></span></param>
        <summary><span data-ttu-id="3bb28-502">既定の設定で指定されたストリームを使用して新しい <see cref="T:System.Xml.XmlReader" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-502">Creates a new <see cref="T:System.Xml.XmlReader" /> instance using the specified stream with default settings.</span></span></summary>
        <returns><span data-ttu-id="3bb28-503">ストリーム内の XML データの読み取りに使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-503">An object that is used to read the XML data in the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-504"><xref:System.Xml.XmlReaderSettings>既定の設定を持つオブジェクトは、リーダーの作成に使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-504">An <xref:System.Xml.XmlReaderSettings> object with default settings is used to create the reader.</span></span> <span data-ttu-id="3bb28-505">作成されるリーダーでサポートする機能を指定する場合は、使用するオーバー ロードを<xref:System.Xml.XmlReaderSettings>、引数の 1 つとしてオブジェクトを渡して、<xref:System.Xml.XmlReaderSettings>正しい設定を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-505">If you wish to specify the features to support on the created reader, use the overload that takes an <xref:System.Xml.XmlReaderSettings> object as one of its arguments, and pass in an <xref:System.Xml.XmlReaderSettings> object with the correct settings.</span></span>  
  
 <span data-ttu-id="3bb28-506">既定の<xref:System.Xml.XmlUrlResolver>資格情報を持たないのドキュメント型定義 (DTD)、エンティティ、スキーマなどの外部リソースにアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-506">A default <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3bb28-507">.NET Framework 4.5.2 では、既定値はありません以降の<xref:System.Xml.XmlUrlResolver>が指定されています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-507">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="3bb28-508">指定する場合は、ソリューションが .NET Framework 4.5.2 またはそれ以降のバージョンを対象に<xref:System.Xml.XmlResolver>を使用して、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-508">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3bb28-509">認証が必要なネットワーク リソースには、外部のリソースが存在する場合は、指定、 <xref:System.Xml.XmlResolver> 、必要な資格情報を使用して、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-509">If the external resource is located on a network resource that requires authentication, specify an <xref:System.Xml.XmlResolver> with the necessary credentials using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3bb28-510">作成された<xref:System.Xml.XmlReader>オブジェクトは、エンティティ参照を拡張し、改行文字の XML 正規化を実行します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-510">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-511">次の例を作成、<xref:System.Xml.XmlReader>オブジェクトから読み取る、<xref:System.IO.FileStream>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-511">The following example creates an <xref:System.Xml.XmlReader> object that reads from a <xref:System.IO.FileStream>.</span></span>  
  
 [!code-csharp[XmlReader.Create#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#8)]
 [!code-vb[XmlReader.Create#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-512"><paramref name="input" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-512">The <paramref name="input" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3bb28-513"><see cref="T:System.Xml.XmlReader" /> には、XML データの場所にアクセスするための十分なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-513">The <see cref="T:System.Xml.XmlReader" /> does not have sufficient permissions to access the location of the XML data.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.TextReader input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.TextReader input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As TextReader) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::TextReader ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="3bb28-514">XML データの読み出し元のテキスト リーダー。</span><span class="sxs-lookup"><span data-stu-id="3bb28-514">The text reader from which to read the XML data.</span></span> <span data-ttu-id="3bb28-515">テキスト リーダーは Unicode 文字のストリームを返すため、XML リーダーはデータ ストリームのデコードに XML 宣言に指定されたエンコーディングを使用しません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-515">A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration is not used by the XML reader to decode the data stream.</span></span></param>
        <summary><span data-ttu-id="3bb28-516">指定されたテキスト リーダーを使用して新しい <see cref="T:System.Xml.XmlReader" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-516">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified text reader.</span></span></summary>
        <returns><span data-ttu-id="3bb28-517">ストリーム内の XML データの読み取りに使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-517">An object that is used to read the XML data in the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-518"><xref:System.Xml.XmlReaderSettings>既定の設定を持つオブジェクトは、リーダーの作成に使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-518">An <xref:System.Xml.XmlReaderSettings> object with default settings is used to create the reader.</span></span> <span data-ttu-id="3bb28-519">作成されるリーダーでサポートする機能を指定する場合は、使用するオーバー ロードを<xref:System.Xml.XmlReaderSettings>、引数の 1 つとしてオブジェクトを渡して、<xref:System.Xml.XmlReaderSettings>正しい設定を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-519">If you wish to specify the features to support on the created reader, use the overload that takes an <xref:System.Xml.XmlReaderSettings> object as one of its arguments, and pass in an <xref:System.Xml.XmlReaderSettings> object with the correct settings.</span></span>  
  
 <span data-ttu-id="3bb28-520">既定の<xref:System.Xml.XmlUrlResolver>資格情報を持たないのドキュメント型定義 (DTD)、エンティティ、スキーマなどの外部リソースにアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-520">A default <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3bb28-521">.NET Framework 4.5.2 では、既定値はありません以降の<xref:System.Xml.XmlUrlResolver>が指定されています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-521">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="3bb28-522">指定する場合は、ソリューションが .NET Framework 4.5.2 またはそれ以降のバージョンを対象に<xref:System.Xml.XmlResolver>を使用して、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-522">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3bb28-523">認証が必要なネットワーク リソースには、外部のリソースが存在する場合は、指定、 <xref:System.Xml.XmlResolver> 、必要な資格情報を使用して、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-523">If the external resource is located on a network resource that requires authentication, specify an <xref:System.Xml.XmlResolver> with the necessary credentials using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3bb28-524">作成された<xref:System.Xml.XmlReader>オブジェクトは、エンティティ参照を拡張し、改行文字の XML 正規化を実行します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-524">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-525">次の例では、 <xref:System.IO.StringReader> XML 文字列を読み取るクラスです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-525">The following example uses the <xref:System.IO.StringReader> class to read an XML string.</span></span>  
  
 [!code-csharp[XmlReader.Create#7](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#7)]
 [!code-vb[XmlReader.Create#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-526"><paramref name="input" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-526">The <paramref name="input" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (string inputUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(string inputUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (inputUri As String) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::String ^ inputUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputUri"><span data-ttu-id="3bb28-527">XML データを格納しているファイルの URI。</span><span class="sxs-lookup"><span data-stu-id="3bb28-527">The URI for the file that contains the XML data.</span></span> <span data-ttu-id="3bb28-528"><see cref="T:System.Xml.XmlUrlResolver" /> クラスは、パスを正規データ形式に変換するときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-528">The <see cref="T:System.Xml.XmlUrlResolver" /> class is used to convert the path to a canonical data representation.</span></span></param>
        <summary><span data-ttu-id="3bb28-529">指定された URI で新しい <see cref="T:System.Xml.XmlReader" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-529">Creates a new <see cref="T:System.Xml.XmlReader" /> instance with specified URI.</span></span></summary>
        <returns><span data-ttu-id="3bb28-530">ストリーム内の XML データの読み取りに使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-530">An object that is used to read the XML data in the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-531"><xref:System.Xml.XmlReaderSettings>既定の設定を持つオブジェクトは、リーダーの作成に使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-531">An <xref:System.Xml.XmlReaderSettings> object with default settings is used to create the reader.</span></span> <span data-ttu-id="3bb28-532">作成されるリーダーでサポートする機能を指定する場合は、使用するオーバー ロードを<xref:System.Xml.XmlReaderSettings>、引数の 1 つとしてオブジェクトを渡して、<xref:System.Xml.XmlReaderSettings>正しい設定を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-532">If you wish to specify the features to support on the created reader, use the overload that takes an <xref:System.Xml.XmlReaderSettings> object as one of its arguments, and pass in an <xref:System.Xml.XmlReaderSettings> object with the correct settings.</span></span>  
  
 <span data-ttu-id="3bb28-533">既定の<xref:System.Xml.XmlUrlResolver>資格情報を持たないのドキュメント型定義 (DTD)、エンティティ、スキーマなどの外部リソースにアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-533">A default <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3bb28-534">.NET Framework 4.5.2 では、既定値はありません以降の<xref:System.Xml.XmlUrlResolver>が指定されています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-534">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="3bb28-535">指定する場合は、ソリューションが .NET Framework 4.5.2 またはそれ以降のバージョンを対象に<xref:System.Xml.XmlResolver>を使用して、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-535">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3bb28-536">認証が必要なネットワーク リソースには、外部のリソースが存在する場合は、指定、 <xref:System.Xml.XmlResolver> 、必要な資格情報を使用して、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-536">If the external resource is located on a network resource that requires authentication, specify an <xref:System.Xml.XmlResolver> with the necessary credentials using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3bb28-537">作成された<xref:System.Xml.XmlReader>オブジェクトは、エンティティ参照を拡張し、改行文字の XML 正規化を実行します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-537">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-538">次の例を作成、<xref:System.Xml.XmlReader>を URI で指定された XML データ ファイルを読み込むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-538">The following example creates an <xref:System.Xml.XmlReader> object that reads XML data file specified by the URI.</span></span>  
  
 [!code-csharp[XmlReader.Create#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#6)]
 [!code-vb[XmlReader.Create#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-539"><paramref name="inputUri" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-539">The <paramref name="inputUri" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3bb28-540"><see cref="T:System.Xml.XmlReader" /> には、XML データの場所にアクセスするための十分なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-540">The <see cref="T:System.Xml.XmlReader" /> does not have sufficient permissions to access the location of the XML data.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="3bb28-541">URI によって識別されるファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-541">The file identified by the URI does not exist.</span></span></exception>
        <exception cref="T:System.UriFormatException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="3bb28-542">[Windows ストア アプリ用 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) または[ポータブル クラス ライブラリ](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)では、基本クラスの例外である <see cref="T:System.FormatException" /> を代わりにキャッチします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-542">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.FormatException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="3bb28-543">URI の形式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-543">The URI format is not correct.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.Stream input, System.Xml.XmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.Stream input, class System.Xml.XmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As Stream, settings As XmlReaderSettings) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::Stream ^ input, System::Xml::XmlReaderSettings ^ settings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="3bb28-544">XML データを格納しているストリーム。</span><span class="sxs-lookup"><span data-stu-id="3bb28-544">The stream that contains the XML data.</span></span>  
  
 <span data-ttu-id="3bb28-545"><see cref="T:System.Xml.XmlReader" /> は、バイト オーダー マークや、エンコードに関するその他の記号を探すため、ストリームの先頭バイトをスキャンします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-545">The <see cref="T:System.Xml.XmlReader" /> scans the first bytes of the stream looking for a byte order mark or other sign of encoding.</span></span> <span data-ttu-id="3bb28-546">エンコーディングが確認された場合、そのエンコーディングを使用してストリームの読み込みを続行し、入力を (Unicode) 文字のストリームとして解析する処理を継続します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-546">When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</span></span></param>
        <param name="settings"><span data-ttu-id="3bb28-547">新しい <see cref="T:System.Xml.XmlReader" /> インスタンスの設定。</span><span class="sxs-lookup"><span data-stu-id="3bb28-547">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span></span> <span data-ttu-id="3bb28-548">この値は、<see langword="null" /> の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-548">This value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="3bb28-549">指定されたストリームと設定で、新しい <see cref="T:System.Xml.XmlReader" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-549">Creates a new <see cref="T:System.Xml.XmlReader" /> instance with the specified stream and settings.</span></span></summary>
        <returns><span data-ttu-id="3bb28-550">ストリーム内の XML データの読み取りに使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-550">An object that is used to read the XML data in the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-551">既定では、<xref:System.Xml.XmlUrlResolver>資格情報を持たないのドキュメント型定義 (DTD)、エンティティ、スキーマなどの外部リソースにアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-551">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3bb28-552">.NET Framework 4.5.2 では、既定値はありません以降の<xref:System.Xml.XmlUrlResolver>が指定されています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-552">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="3bb28-553">指定する場合は、ソリューションが .NET Framework 4.5.2 またはそれ以降のバージョンを対象に<xref:System.Xml.XmlResolver>を使用して、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-553">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3bb28-554">外部のリソースがある場合、認証が必要なネットワーク リソースを使用して、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>プロパティを指定する、<xref:System.Xml.XmlResolver>必要な資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-554">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3bb28-555">次のいずれかを使用して、どのリソースを制御することができます、<xref:System.Xml.XmlReader>にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-555">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="3bb28-556"><xref:System.Xml.XmlReader> プロパティを <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> オブジェクトに設定することによって、<xref:System.Xml.XmlSecureResolver> がアクセスできるリソースを制限します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-556">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="3bb28-557">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-557">-or-</span></span>  
>   
>  -   <span data-ttu-id="3bb28-558"><xref:System.Xml.XmlReader> プロパティを <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> に設定することにより、`null` が外部リソースを開けないようにする。</span><span class="sxs-lookup"><span data-stu-id="3bb28-558">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="3bb28-559">作成された<xref:System.Xml.XmlReader>オブジェクトは、エンティティ参照を拡張し、改行文字の XML 正規化を実行します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-559">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-560"><paramref name="input" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-560">The <paramref name="input" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.TextReader input, System.Xml.XmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.TextReader input, class System.Xml.XmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As TextReader, settings As XmlReaderSettings) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::TextReader ^ input, System::Xml::XmlReaderSettings ^ settings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="3bb28-561">XML データの読み出し元のテキスト リーダー。</span><span class="sxs-lookup"><span data-stu-id="3bb28-561">The text reader from which to read the XML data.</span></span> <span data-ttu-id="3bb28-562">テキスト リーダーは Unicode 文字のストリームを返すため、XML リーダーはデータ ストリームのデコードに XML 宣言に指定されたエンコーディングを使用しません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-562">A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.</span></span></param>
        <param name="settings"><span data-ttu-id="3bb28-563">新しい <see cref="T:System.Xml.XmlReader" /> の設定。</span><span class="sxs-lookup"><span data-stu-id="3bb28-563">The settings for the new <see cref="T:System.Xml.XmlReader" />.</span></span> <span data-ttu-id="3bb28-564">この値は、<see langword="null" /> の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-564">This value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="3bb28-565">指定されたテキスト リーダーと設定を使用して新しい <see cref="T:System.Xml.XmlReader" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-565">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified text reader and settings.</span></span></summary>
        <returns><span data-ttu-id="3bb28-566">ストリーム内の XML データの読み取りに使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-566">An object that is used to read the XML data in the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-567">既定では、<xref:System.Xml.XmlUrlResolver>資格情報を持たないのドキュメント型定義 (DTD)、エンティティ、スキーマなどの外部リソースにアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-567">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3bb28-568">.NET Framework 4.5.2 では、既定値はありません以降の<xref:System.Xml.XmlUrlResolver>が指定されています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-568">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="3bb28-569">指定する場合は、ソリューションが .NET Framework 4.5.2 またはそれ以降のバージョンを対象に<xref:System.Xml.XmlResolver>を使用して、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-569">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3bb28-570">外部のリソースがある場合、認証が必要なネットワーク リソースを使用して、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>プロパティを指定する、<xref:System.Xml.XmlResolver>必要な資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-570">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3bb28-571">次のいずれかを使用して、どのリソースを制御することができます、<xref:System.Xml.XmlReader>にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-571">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="3bb28-572"><xref:System.Xml.XmlReader> プロパティを <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> オブジェクトに設定することによって、<xref:System.Xml.XmlSecureResolver> がアクセスできるリソースを制限します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-572">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="3bb28-573">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-573">-or-</span></span>  
>   
>  -   <span data-ttu-id="3bb28-574"><xref:System.Xml.XmlReader> プロパティを <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> に設定することにより、`null` が外部リソースを開けないようにする。</span><span class="sxs-lookup"><span data-stu-id="3bb28-574">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="3bb28-575">作成された<xref:System.Xml.XmlReader>オブジェクトは、エンティティ参照を拡張し、改行文字の XML 正規化を実行します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-575">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-576"><paramref name="input" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-576">The <paramref name="input" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (string inputUri, System.Xml.XmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(string inputUri, class System.Xml.XmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (inputUri As String, settings As XmlReaderSettings) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::String ^ inputUri, System::Xml::XmlReaderSettings ^ settings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="inputUri"><span data-ttu-id="3bb28-577">XML データを格納しているファイルの URI。</span><span class="sxs-lookup"><span data-stu-id="3bb28-577">The URI for the file containing the XML data.</span></span> <span data-ttu-id="3bb28-578"><see cref="T:System.Xml.XmlReaderSettings" /> オブジェクト上の <see cref="T:System.Xml.XmlResolver" /> オブジェクトは、パスを正規データ形式に変換するときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-578">The <see cref="T:System.Xml.XmlResolver" /> object on the <see cref="T:System.Xml.XmlReaderSettings" /> object is used to convert the path to a canonical data representation.</span></span> <span data-ttu-id="3bb28-579"><see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> が <see langword="null" /> の場合は、新しい <see cref="T:System.Xml.XmlUrlResolver" /> オブジェクトが使用されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-579">If <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> is <see langword="null" />, a new <see cref="T:System.Xml.XmlUrlResolver" /> object is used.</span></span></param>
        <param name="settings"><span data-ttu-id="3bb28-580">新しい <see cref="T:System.Xml.XmlReader" /> インスタンスの設定。</span><span class="sxs-lookup"><span data-stu-id="3bb28-580">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span></span> <span data-ttu-id="3bb28-581">この値は、<see langword="null" /> の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-581">This value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="3bb28-582">指定された URI と設定を使用して新しい <see cref="T:System.Xml.XmlReader" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-582">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified URI and settings.</span></span></summary>
        <returns><span data-ttu-id="3bb28-583">ストリーム内の XML データの読み取りに使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-583">An object that is used to read the XML data in the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-584">既定では、<xref:System.Xml.XmlUrlResolver>資格情報を持たないのドキュメント型定義 (DTD)、エンティティ、スキーマなどの外部リソースにアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-584">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3bb28-585">.NET Framework 4.5.2 では、既定値はありません以降の<xref:System.Xml.XmlUrlResolver>が指定されています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-585">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="3bb28-586">指定する場合は、ソリューションが .NET Framework 4.5.2 またはそれ以降のバージョンを対象に<xref:System.Xml.XmlResolver>を使用して、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-586">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3bb28-587">つまり、<xref:System.Xml.XmlReader>認証が不要な任意の場所にアクセスすることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-587">This means that the <xref:System.Xml.XmlReader> can access any locations that does not require authentication.</span></span> <span data-ttu-id="3bb28-588">外部のリソースがある場合、認証が必要なネットワーク リソースを使用して、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>プロパティを指定する、<xref:System.Xml.XmlResolver>必要な資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-588">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3bb28-589">リソースを制限することができますを<xref:System.Xml.XmlReader>を設定してアクセスできる、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>プロパティを<xref:System.Xml.XmlSecureResolver>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-589">You can restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
  
 <span data-ttu-id="3bb28-590">作成された<xref:System.Xml.XmlReader>オブジェクトは、エンティティ参照を拡張し、改行文字の XML 正規化を実行します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-590">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-591">次の例を作成、<xref:System.Xml.XmlReader>ドキュメント型定義 (DTD) の検証をサポートするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-591">The following example creates an <xref:System.Xml.XmlReader> object that supports document type definition (DTD) validation.</span></span>  
  
 [!code-csharp[XmlReader.Create#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#3)]
 [!code-vb[XmlReader.Create#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-592"><paramref name="inputUri" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-592">The <paramref name="inputUri" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="3bb28-593">URI で指定したファイルが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-593">The file specified by the URI cannot be found.</span></span></exception>
        <exception cref="T:System.UriFormatException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="3bb28-594">[Windows ストア アプリ用 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) または[ポータブル クラス ライブラリ](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)では、基本クラスの例外である <see cref="T:System.FormatException" /> を代わりにキャッチします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-594">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.FormatException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="3bb28-595">URI の形式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-595">The URI format is not correct.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.Xml.XmlReader reader, System.Xml.XmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.Xml.XmlReader reader, class System.Xml.XmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (reader As XmlReader, settings As XmlReaderSettings) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::Xml::XmlReader ^ reader, System::Xml::XmlReaderSettings ^ settings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="3bb28-596">基になる XML リーダーとして使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-596">The object that you want to use as the underlying XML reader.</span></span></param>
        <param name="settings"><span data-ttu-id="3bb28-597">新しい <see cref="T:System.Xml.XmlReader" /> インスタンスの設定。</span><span class="sxs-lookup"><span data-stu-id="3bb28-597">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span></span>  
  
 <span data-ttu-id="3bb28-598"><see cref="T:System.Xml.XmlReaderSettings" /> オブジェクトの準拠レベルは、基になるリーダーの準拠レベルと一致するか、<see cref="F:System.Xml.ConformanceLevel.Auto" /> に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-598">The conformance level of the <see cref="T:System.Xml.XmlReaderSettings" /> object must either match the conformance level of the underlying reader, or it must be set to <see cref="F:System.Xml.ConformanceLevel.Auto" />.</span></span></param>
        <summary><span data-ttu-id="3bb28-599">指定された XML リーダーと設定を使用して新しい <see cref="T:System.Xml.XmlReader" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-599">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified XML reader and settings.</span></span></summary>
        <returns><span data-ttu-id="3bb28-600">指定された <see cref="T:System.Xml.XmlReader" /> オブジェクトをラップするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-600">An object that is wrapped around the specified <see cref="T:System.Xml.XmlReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-601">このメソッドを使用する、基になる追加機能を追加する<xref:System.Xml.XmlReader>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-601">This method allows you add additional features to an underlying <xref:System.Xml.XmlReader> object.</span></span> <span data-ttu-id="3bb28-602">基になる<xref:System.Xml.XmlReader>オブジェクトは別にすることができます<xref:System.Xml.XmlReader>によって作成されたオブジェクト、<xref:System.Xml.XmlReader.Create%2A>メソッド、または<xref:System.Xml.XmlReader>、具象型のいずれかを使用して作成されたオブジェクト<xref:System.Xml.XmlReader>実装します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-602">The underlying <xref:System.Xml.XmlReader> object can be another <xref:System.Xml.XmlReader> object created by the <xref:System.Xml.XmlReader.Create%2A> method, or an <xref:System.Xml.XmlReader> object created using one of the concrete <xref:System.Xml.XmlReader> implementations.</span></span>  
  
 <span data-ttu-id="3bb28-603">既定の<xref:System.Xml.XmlUrlResolver>資格情報を持たないのスキーマなどの外部リソースにアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-603">A default <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a schema.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3bb28-604">.NET Framework 4.5.2 では、既定値はありません以降の<xref:System.Xml.XmlUrlResolver>が指定されています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-604">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="3bb28-605">指定する場合は、ソリューションが .NET Framework 4.5.2 またはそれ以降のバージョンを対象に<xref:System.Xml.XmlResolver>を使用して、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-605">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3bb28-606">認証が必要なネットワーク リソースには、外部のリソースが存在する場合は、指定、 <xref:System.Xml.XmlResolver> 、必要な資格情報を使用して、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-606">If the external resource is located on a network resource that requires authentication, specify an <xref:System.Xml.XmlResolver> with the necessary credentials using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3bb28-607">次のいずれかを使用して、どのリソースを制御することができます、<xref:System.Xml.XmlReader>にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-607">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="3bb28-608"><xref:System.Xml.XmlReader> プロパティを <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> オブジェクトに設定することによって、<xref:System.Xml.XmlSecureResolver> がアクセスできるリソースを制限します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-608">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="3bb28-609">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-609">-or-</span></span>  
>   
>  -   <span data-ttu-id="3bb28-610"><xref:System.Xml.XmlReader> プロパティを <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> に設定することにより、`null` が外部リソースを開けないようにする。</span><span class="sxs-lookup"><span data-stu-id="3bb28-610">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="3bb28-611">作成された<xref:System.Xml.XmlReader>オブジェクトは、エンティティ参照を拡張し、改行文字の XML 正規化を実行します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-611">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-612">次の例の作成、検証型<xref:System.Xml.XmlReader>を囲むオブジェクト、<xref:System.Xml.XmlNodeReader>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-612">The following example creates a validating <xref:System.Xml.XmlReader> object that is wrapped around an <xref:System.Xml.XmlNodeReader> object.</span></span>  
  
 [!code-csharp[XmlReader.Create#5](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#5)]
 [!code-vb[XmlReader.Create#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-613"><paramref name="reader" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-613">The <paramref name="reader" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-614"><see cref="T:System.Xml.XmlReaderSettings" /> オブジェクトが、基になるリーダーの準拠レベルと一致しない準拠レベルを指定した場合。</span><span class="sxs-lookup"><span data-stu-id="3bb28-614">If the <see cref="T:System.Xml.XmlReaderSettings" /> object specifies a conformance level that is not consistent with conformance level of the underlying reader.</span></span>  
  
 <span data-ttu-id="3bb28-615">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-615">-or-</span></span>  
  
 <span data-ttu-id="3bb28-616">基になる <see cref="T:System.Xml.XmlReader" /> が <see cref="F:System.Xml.ReadState.Error" /> 状態か <see cref="F:System.Xml.ReadState.Closed" /> 状態。</span><span class="sxs-lookup"><span data-stu-id="3bb28-616">The underlying <see cref="T:System.Xml.XmlReader" /> is in an <see cref="F:System.Xml.ReadState.Error" /> or <see cref="F:System.Xml.ReadState.Closed" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.Stream input, System.Xml.XmlReaderSettings settings, string baseUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.Stream input, class System.Xml.XmlReaderSettings settings, string baseUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As Stream, settings As XmlReaderSettings, baseUri As String) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::Stream ^ input, System::Xml::XmlReaderSettings ^ settings, System::String ^ baseUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
        <Parameter Name="baseUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="3bb28-617">XML データを格納しているストリーム。</span><span class="sxs-lookup"><span data-stu-id="3bb28-617">The stream that contains the XML data.</span></span>  
  
 <span data-ttu-id="3bb28-618"><see cref="T:System.Xml.XmlReader" /> は、バイト オーダー マークや、エンコードに関するその他の記号を探すため、ストリームの先頭バイトをスキャンします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-618">The <see cref="T:System.Xml.XmlReader" /> scans the first bytes of the stream looking for a byte order mark or other sign of encoding.</span></span> <span data-ttu-id="3bb28-619">エンコーディングが確認された場合、そのエンコーディングを使用してストリームの読み込みを続行し、入力を (Unicode) 文字のストリームとして解析する処理を継続します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-619">When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</span></span></param>
        <param name="settings"><span data-ttu-id="3bb28-620">新しい <see cref="T:System.Xml.XmlReader" /> インスタンスの設定。</span><span class="sxs-lookup"><span data-stu-id="3bb28-620">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span></span> <span data-ttu-id="3bb28-621">この値は、<see langword="null" /> の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-621">This value can be <see langword="null" />.</span></span></param>
        <param name="baseUri"><span data-ttu-id="3bb28-622">読み取るエンティティまたはドキュメントのベース URI。</span><span class="sxs-lookup"><span data-stu-id="3bb28-622">The base URI for the entity or document being read.</span></span> <span data-ttu-id="3bb28-623">この値は、<see langword="null" /> の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-623">This value can be <see langword="null" />.</span></span>  
  
 <span data-ttu-id="3bb28-624">**セキュリティに関するメモ** ベース URI は、XML ドキュメントの相対 URI を解決するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-624">**Security Note** The base URI is used to resolve the relative URI of the XML document.</span></span> <span data-ttu-id="3bb28-625">信頼関係のないソースからベース URI を使用することは避けてください。</span><span class="sxs-lookup"><span data-stu-id="3bb28-625">Do not use a base URI from an untrusted source.</span></span></param>
        <summary><span data-ttu-id="3bb28-626">指定されたストリーム、ベース URI、設定を使用して、新しい <see cref="T:System.Xml.XmlReader" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-626">Creates a new <see cref="T:System.Xml.XmlReader" /> instance using the specified stream, base URI, and settings.</span></span></summary>
        <returns><span data-ttu-id="3bb28-627">ストリーム内の XML データの読み取りに使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-627">An object that is used to read the XML data in the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-628">既定では、<xref:System.Xml.XmlUrlResolver>資格情報を持たないのドキュメント型定義 (DTD)、エンティティ、スキーマなどの外部リソースにアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-628">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3bb28-629">.NET Framework 4.5.2 では、既定値はありません以降の<xref:System.Xml.XmlUrlResolver>が指定されています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-629">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="3bb28-630">指定する場合は、ソリューションが .NET Framework 4.5.2 またはそれ以降のバージョンを対象に<xref:System.Xml.XmlResolver>を使用して、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-630">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3bb28-631">外部のリソースがある場合、認証が必要なネットワーク リソースを使用して、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>プロパティを指定する、<xref:System.Xml.XmlResolver>必要な資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-631">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3bb28-632">次のいずれかを使用して、どのリソースを制御することができます、<xref:System.Xml.XmlReader>にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-632">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="3bb28-633"><xref:System.Xml.XmlReader> プロパティを <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> オブジェクトに設定することによって、<xref:System.Xml.XmlSecureResolver> がアクセスできるリソースを制限します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-633">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="3bb28-634">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-634">-or-</span></span>  
>   
>  -   <span data-ttu-id="3bb28-635"><xref:System.Xml.XmlReader> プロパティを <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> に設定することにより、`null` が外部リソースを開けないようにする。</span><span class="sxs-lookup"><span data-stu-id="3bb28-635">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="3bb28-636">作成された<xref:System.Xml.XmlReader>オブジェクトは、エンティティ参照を拡張し、改行文字の XML 正規化を実行します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-636">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-637"><paramref name="input" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-637">The <paramref name="input" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.Stream input, System.Xml.XmlReaderSettings settings, System.Xml.XmlParserContext inputContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.Stream input, class System.Xml.XmlReaderSettings settings, class System.Xml.XmlParserContext inputContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As Stream, settings As XmlReaderSettings, inputContext As XmlParserContext) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::Stream ^ input, System::Xml::XmlReaderSettings ^ settings, System::Xml::XmlParserContext ^ inputContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
        <Parameter Name="inputContext" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="3bb28-638">XML データを格納しているストリーム。</span><span class="sxs-lookup"><span data-stu-id="3bb28-638">The stream that contains the XML data.</span></span>  
  
 <span data-ttu-id="3bb28-639"><see cref="T:System.Xml.XmlReader" /> は、バイト オーダー マークや、エンコードに関するその他の記号を探すため、ストリームの先頭バイトをスキャンします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-639">The <see cref="T:System.Xml.XmlReader" /> scans the first bytes of the stream looking for a byte order mark or other sign of encoding.</span></span> <span data-ttu-id="3bb28-640">エンコーディングが確認された場合、そのエンコーディングを使用してストリームの読み込みを続行し、入力を (Unicode) 文字のストリームとして解析する処理を継続します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-640">When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</span></span></param>
        <param name="settings"><span data-ttu-id="3bb28-641">新しい <see cref="T:System.Xml.XmlReader" /> インスタンスの設定。</span><span class="sxs-lookup"><span data-stu-id="3bb28-641">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span></span> <span data-ttu-id="3bb28-642">この値は、<see langword="null" /> の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-642">This value can be <see langword="null" />.</span></span></param>
        <param name="inputContext"><span data-ttu-id="3bb28-643">XML フラグメントの解析に必要なコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="3bb28-643">The context information required to parse the XML fragment.</span></span> <span data-ttu-id="3bb28-644">コンテキスト情報には、使用する <see cref="T:System.Xml.XmlNameTable" />、エンコーディング、名前空間スコープ、現在の <c>xml:lang</c> と <c>xml:space</c> のスコープ、ベース URI、およびドキュメント型定義を格納できます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-644">The context information can include the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c> and <c>xml:space</c> scope, base URI, and document type definition.</span></span>  
  
 <span data-ttu-id="3bb28-645">この値は、<see langword="null" /> の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-645">This value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="3bb28-646">解析のために指定されたストリーム、設定、およびコンテキスト情報を使用して、新しい <see cref="T:System.Xml.XmlReader" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-646">Creates a new <see cref="T:System.Xml.XmlReader" /> instance using the specified stream, settings, and context information for parsing.</span></span></summary>
        <returns><span data-ttu-id="3bb28-647">ストリーム内の XML データの読み取りに使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-647">An object that is used to read the XML data in the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-648">既定では、<xref:System.Xml.XmlUrlResolver>資格情報を持たないのドキュメント型定義 (DTD)、エンティティ、スキーマなどの外部リソースにアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-648">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3bb28-649">.NET Framework 4.5.2 では、既定値はありません以降の<xref:System.Xml.XmlUrlResolver>が指定されています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-649">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="3bb28-650">指定する場合は、ソリューションが .NET Framework 4.5.2 またはそれ以降のバージョンを対象に<xref:System.Xml.XmlResolver>を使用して、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-650">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3bb28-651">外部のリソースがある場合、認証が必要なネットワーク リソースを使用して、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>プロパティを指定する、<xref:System.Xml.XmlResolver>必要な資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-651">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3bb28-652">次のいずれかを使用して、どのリソースを制御することができます、<xref:System.Xml.XmlReader>にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-652">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="3bb28-653"><xref:System.Xml.XmlReader> プロパティを <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> オブジェクトに設定することによって、<xref:System.Xml.XmlSecureResolver> がアクセスできるリソースを制限します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-653">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="3bb28-654">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-654">-or-</span></span>  
>   
>  -   <span data-ttu-id="3bb28-655"><xref:System.Xml.XmlReader> プロパティを <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> に設定することにより、`null` が外部リソースを開けないようにする。</span><span class="sxs-lookup"><span data-stu-id="3bb28-655">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="3bb28-656">作成された<xref:System.Xml.XmlReader>オブジェクトは、エンティティ参照を拡張し、改行文字の XML 正規化を実行します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-656">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-657"><paramref name="input" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-657">The <paramref name="input" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.TextReader input, System.Xml.XmlReaderSettings settings, string baseUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.TextReader input, class System.Xml.XmlReaderSettings settings, string baseUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As TextReader, settings As XmlReaderSettings, baseUri As String) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::TextReader ^ input, System::Xml::XmlReaderSettings ^ settings, System::String ^ baseUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
        <Parameter Name="baseUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="3bb28-658">XML データの読み出し元のテキスト リーダー。</span><span class="sxs-lookup"><span data-stu-id="3bb28-658">The text reader from which to read the XML data.</span></span> <span data-ttu-id="3bb28-659">テキスト リーダーは Unicode 文字のストリームを返すため、<see cref="T:System.Xml.XmlReader" /> は XML 宣言に指定されたエンコーディングをデータ ストリームのデコードに使用しません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-659">A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the <see cref="T:System.Xml.XmlReader" /> to decode the data stream.</span></span></param>
        <param name="settings"><span data-ttu-id="3bb28-660">新しい <see cref="T:System.Xml.XmlReader" /> インスタンスの設定。</span><span class="sxs-lookup"><span data-stu-id="3bb28-660">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span></span> <span data-ttu-id="3bb28-661">この値は、<see langword="null" /> の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-661">This value can be <see langword="null" />.</span></span></param>
        <param name="baseUri"><span data-ttu-id="3bb28-662">読み取るエンティティまたはドキュメントのベース URI。</span><span class="sxs-lookup"><span data-stu-id="3bb28-662">The base URI for the entity or document being read.</span></span> <span data-ttu-id="3bb28-663">この値は、<see langword="null" /> の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-663">This value can be <see langword="null" />.</span></span>  
  
 <span data-ttu-id="3bb28-664">**セキュリティに関するメモ** ベース URI は、XML ドキュメントの相対 URI を解決するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-664">**Security Note** The base URI is used to resolve the relative URI of the XML document.</span></span> <span data-ttu-id="3bb28-665">信頼関係のないソースからベース URI を使用することは避けてください。</span><span class="sxs-lookup"><span data-stu-id="3bb28-665">Do not use a base URI from an untrusted source.</span></span></param>
        <summary><span data-ttu-id="3bb28-666">指定されたテキスト リーダー、設定、およびベース URI を使用して、新しい <see cref="T:System.Xml.XmlReader" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-666">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified text reader, settings, and base URI.</span></span></summary>
        <returns><span data-ttu-id="3bb28-667">ストリーム内の XML データの読み取りに使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-667">An object that is used to read the XML data in the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-668">既定では、<xref:System.Xml.XmlUrlResolver>資格情報を持たないのドキュメント型定義 (DTD)、エンティティ、スキーマなどの外部リソースにアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-668">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3bb28-669">.NET Framework 4.5.2 では、既定値はありません以降の<xref:System.Xml.XmlUrlResolver>が指定されています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-669">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="3bb28-670">指定する場合は、ソリューションが .NET Framework 4.5.2 またはそれ以降のバージョンを対象に<xref:System.Xml.XmlResolver>を使用して、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-670">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3bb28-671">外部のリソースがある場合、認証が必要なネットワーク リソースを使用して、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>プロパティを指定する、<xref:System.Xml.XmlResolver>必要な資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-671">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3bb28-672">次のいずれかを使用して、どのリソースを制御することができます、<xref:System.Xml.XmlReader>にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-672">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="3bb28-673"><xref:System.Xml.XmlReader> プロパティを <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> オブジェクトに設定することによって、<xref:System.Xml.XmlSecureResolver> がアクセスできるリソースを制限します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-673">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="3bb28-674">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-674">-or-</span></span>  
>   
>  -   <span data-ttu-id="3bb28-675"><xref:System.Xml.XmlReader> プロパティを <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> に設定することにより、`null` が外部リソースを開けないようにする。</span><span class="sxs-lookup"><span data-stu-id="3bb28-675">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="3bb28-676">作成された<xref:System.Xml.XmlReader>オブジェクトは、エンティティ参照を拡張し、改行文字の XML 正規化を実行します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-676">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-677"><paramref name="input" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-677">The <paramref name="input" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.TextReader input, System.Xml.XmlReaderSettings settings, System.Xml.XmlParserContext inputContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.TextReader input, class System.Xml.XmlReaderSettings settings, class System.Xml.XmlParserContext inputContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As TextReader, settings As XmlReaderSettings, inputContext As XmlParserContext) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::TextReader ^ input, System::Xml::XmlReaderSettings ^ settings, System::Xml::XmlParserContext ^ inputContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
        <Parameter Name="inputContext" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="3bb28-678">XML データの読み出し元のテキスト リーダー。</span><span class="sxs-lookup"><span data-stu-id="3bb28-678">The text reader from which to read the XML data.</span></span> <span data-ttu-id="3bb28-679">テキスト リーダーは Unicode 文字のストリームを返すため、XML リーダーはデータ ストリームのデコードに XML 宣言に指定されたエンコーディングを使用しません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-679">A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.</span></span></param>
        <param name="settings"><span data-ttu-id="3bb28-680">新しい <see cref="T:System.Xml.XmlReader" /> インスタンスの設定。</span><span class="sxs-lookup"><span data-stu-id="3bb28-680">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span></span> <span data-ttu-id="3bb28-681">この値は、<see langword="null" /> の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-681">This value can be <see langword="null" />.</span></span></param>
        <param name="inputContext"><span data-ttu-id="3bb28-682">XML フラグメントの解析に必要なコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="3bb28-682">The context information required to parse the XML fragment.</span></span> <span data-ttu-id="3bb28-683">コンテキスト情報には、使用する <see cref="T:System.Xml.XmlNameTable" />、エンコーディング、名前空間スコープ、現在の <c>xml:lang</c> と <c>xml:space</c> のスコープ、ベース URI、およびドキュメント型定義を格納できます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-683">The context information can include the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c> and <c>xml:space</c> scope, base URI, and document type definition.</span></span>  
  
 <span data-ttu-id="3bb28-684">この値は、<see langword="null" /> の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-684">This value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="3bb28-685">指定したテキスト リーダー、設定、および解析するためのコンテキスト情報を使用して、新しい <see cref="T:System.Xml.XmlReader" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-685">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified text reader, settings, and context information for parsing.</span></span></summary>
        <returns><span data-ttu-id="3bb28-686">ストリーム内の XML データの読み取りに使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-686">An object that is used to read the XML data in the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-687">既定では、<xref:System.Xml.XmlUrlResolver>資格情報を持たないのドキュメント型定義 (DTD)、エンティティ、スキーマなどの外部リソースにアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-687">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3bb28-688">.NET Framework 4.5.2 では、既定値はありません以降の<xref:System.Xml.XmlUrlResolver>が指定されています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-688">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="3bb28-689">指定する場合は、ソリューションが .NET Framework 4.5.2 またはそれ以降のバージョンを対象に<xref:System.Xml.XmlResolver>を使用して、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-689">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3bb28-690">外部のリソースがある場合、認証が必要なネットワーク リソースを使用して、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>プロパティを指定する、<xref:System.Xml.XmlResolver>必要な資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-690">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3bb28-691">次のいずれかを使用して、どのリソースを制御することができます、<xref:System.Xml.XmlReader>にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-691">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="3bb28-692"><xref:System.Xml.XmlReader> プロパティを <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> オブジェクトに設定することによって、<xref:System.Xml.XmlSecureResolver> がアクセスできるリソースを制限します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-692">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="3bb28-693">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-693">-or-</span></span>  
>   
>  -   <span data-ttu-id="3bb28-694"><xref:System.Xml.XmlReader> プロパティを <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> に設定することにより、`null` が外部リソースを開けないようにする。</span><span class="sxs-lookup"><span data-stu-id="3bb28-694">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="3bb28-695">作成された<xref:System.Xml.XmlReader>オブジェクトは、エンティティ参照を拡張し、改行文字の XML 正規化を実行します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-695">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-696">次の例を作成、<xref:System.Xml.XmlReader>を XML フラグメントを読み込むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-696">The following example creates an <xref:System.Xml.XmlReader> object that reads an XML fragment.</span></span>  
  
 [!code-csharp[XmlReader.Create#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#1)]
 [!code-vb[XmlReader.Create#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-697"><paramref name="input" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-697">The <paramref name="input" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3bb28-698"><see cref="P:System.Xml.XmlReaderSettings.NameTable" /> プロパティと <see cref="P:System.Xml.XmlParserContext.NameTable" /> プロパティの両方に値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-698">The <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> and <see cref="P:System.Xml.XmlParserContext.NameTable" /> properties both contain values.</span></span> <span data-ttu-id="3bb28-699">(これらの <see langword="NameTable" /> プロパティの 1 つのみを設定して使用できます。)</span><span class="sxs-lookup"><span data-stu-id="3bb28-699">(Only one of these <see langword="NameTable" /> properties can be set and used).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (string inputUri, System.Xml.XmlReaderSettings settings, System.Xml.XmlParserContext inputContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(string inputUri, class System.Xml.XmlReaderSettings settings, class System.Xml.XmlParserContext inputContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (inputUri As String, settings As XmlReaderSettings, inputContext As XmlParserContext) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::String ^ inputUri, System::Xml::XmlReaderSettings ^ settings, System::Xml::XmlParserContext ^ inputContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
        <Parameter Name="inputContext" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="inputUri"><span data-ttu-id="3bb28-700">XML データを格納しているファイルの URI。</span><span class="sxs-lookup"><span data-stu-id="3bb28-700">The URI for the file containing the XML data.</span></span> <span data-ttu-id="3bb28-701"><see cref="T:System.Xml.XmlReaderSettings" /> オブジェクト上の <see cref="T:System.Xml.XmlResolver" /> オブジェクトは、パスを正規データ形式に変換するときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-701">The <see cref="T:System.Xml.XmlResolver" /> object on the <see cref="T:System.Xml.XmlReaderSettings" /> object is used to convert the path to a canonical data representation.</span></span> <span data-ttu-id="3bb28-702"><see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> が <see langword="null" /> の場合は、新しい <see cref="T:System.Xml.XmlUrlResolver" /> オブジェクトが使用されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-702">If <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> is <see langword="null" />, a new <see cref="T:System.Xml.XmlUrlResolver" /> object is used.</span></span></param>
        <param name="settings"><span data-ttu-id="3bb28-703">新しい <see cref="T:System.Xml.XmlReader" /> インスタンスの設定。</span><span class="sxs-lookup"><span data-stu-id="3bb28-703">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span></span> <span data-ttu-id="3bb28-704">この値は、<see langword="null" /> の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-704">This value can be <see langword="null" />.</span></span></param>
        <param name="inputContext"><span data-ttu-id="3bb28-705">XML フラグメントの解析に必要なコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="3bb28-705">The context information required to parse the XML fragment.</span></span> <span data-ttu-id="3bb28-706">コンテキスト情報には、使用する <see cref="T:System.Xml.XmlNameTable" />、エンコーディング、名前空間スコープ、現在の <c>xml:lang</c> と <c>xml:space</c> のスコープ、ベース URI、およびドキュメント型定義を格納できます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-706">The context information can include the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c> and <c>xml:space</c> scope, base URI, and document type definition.</span></span>  
  
 <span data-ttu-id="3bb28-707">この値は、<see langword="null" /> の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-707">This value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="3bb28-708">指定された URI、設定、解析するためのコンテキスト情報を使用して、新しい <see cref="T:System.Xml.XmlReader" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-708">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified URI, settings, and context information for parsing.</span></span></summary>
        <returns><span data-ttu-id="3bb28-709">ストリーム内の XML データの読み取りに使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-709">An object that is used to read the XML data in the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-710">既定では、<xref:System.Xml.XmlUrlResolver>資格情報を持たないのドキュメント型定義 (DTD)、エンティティ、スキーマなどの外部リソースにアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-710">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3bb28-711">.NET Framework 4.5.2 では、既定値はありません以降の<xref:System.Xml.XmlUrlResolver>が指定されています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-711">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="3bb28-712">指定する場合は、ソリューションが .NET Framework 4.5.2 またはそれ以降のバージョンを対象に<xref:System.Xml.XmlResolver>を使用して、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-712">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3bb28-713">つまり、<xref:System.Xml.XmlReader>認証が不要な任意の場所にアクセスすることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-713">This means that the <xref:System.Xml.XmlReader> can access any locations that does not require authentication.</span></span> <span data-ttu-id="3bb28-714">外部のリソースがある場合、認証が必要なネットワーク リソースを使用して、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>プロパティを指定する、<xref:System.Xml.XmlResolver>必要な資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-714">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3bb28-715">リソースを制限することができますを<xref:System.Xml.XmlReader>を設定してアクセスできる、<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>プロパティを<xref:System.Xml.XmlSecureResolver>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-715">You can restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
  
 <span data-ttu-id="3bb28-716">作成された<xref:System.Xml.XmlReader>オブジェクトは、エンティティ参照を拡張し、改行文字の XML 正規化を実行します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-716">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-717"><see langword="inputUri" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-717">The <see langword="inputUri" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3bb28-718"><see cref="T:System.Xml.XmlReader" /> には、XML データの場所にアクセスするための十分なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-718">The <see cref="T:System.Xml.XmlReader" /> does not have sufficient permissions to access the location of the XML data.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3bb28-719"><see cref="P:System.Xml.XmlReaderSettings.NameTable" /> プロパティと <see cref="P:System.Xml.XmlParserContext.NameTable" /> プロパティの両方に値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-719">The <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> and <see cref="P:System.Xml.XmlParserContext.NameTable" /> properties both contain values.</span></span> <span data-ttu-id="3bb28-720">(これらの <see langword="NameTable" /> プロパティの 1 つのみを設定して使用できます。)</span><span class="sxs-lookup"><span data-stu-id="3bb28-720">(Only one of these <see langword="NameTable" /> properties can be set and used).</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="3bb28-721">URI で指定したファイルが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-721">The file specified by the URI cannot be found.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="3bb28-722">URI の形式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-722">The URI format is not correct.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public abstract int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Depth { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bb28-723">派生クラスでオーバーライドされると、XML ドキュメント内の現在のノードの深さを取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-723">When overridden in a derived class, gets the depth of the current node in the XML document.</span></span></summary>
        <value><span data-ttu-id="3bb28-724">XML ドキュメント内の現在のノードの深さ。</span><span class="sxs-lookup"><span data-stu-id="3bb28-724">The depth of the current node in the XML document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3bb28-725">参照してください<xref:System.Xml.XmlTextReader.Depth%2A>(で、`XmlTextReader`クラス)、たとえば、このプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-725">See <xref:System.Xml.XmlTextReader.Depth%2A> (in the `XmlTextReader` class) for an example using this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-726">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-726">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-727">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-727">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-728">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-728">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-729">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-729">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span></span></exception>
        <summary><span data-ttu-id="3bb28-730"><see cref="T:System.Xml.XmlReader" /> クラスによって使用されているリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-730">Releases the resources used by the <see cref="T:System.Xml.XmlReader" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-731"><see cref="T:System.Xml.XmlReader" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-731">Releases all resources used by the current instance of the <see cref="T:System.Xml.XmlReader" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-732">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-732">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-733">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-733">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="3bb28-734">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-734"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="3bb28-735"><see cref="T:System.Xml.XmlReader" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-735">Releases the unmanaged resources used by the <see cref="T:System.Xml.XmlReader" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-736">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-736">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-737">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-737">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public abstract bool EOF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EOF" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.EOF" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property EOF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool EOF { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bb28-738">派生クラスでオーバーライドされると、リーダーがストリームの末尾に配置されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-738">When overridden in a derived class, gets a value indicating whether the reader is positioned at the end of the stream.</span></span></summary>
        <value>
          <span data-ttu-id="3bb28-739">ストリームの末尾にリーダーが配置されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-739"><see langword="true" /> if the reader is positioned at the end of the stream; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-740">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-740">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-741">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-741">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-742">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-742">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-743">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-743">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span></span></exception>
        <summary><span data-ttu-id="3bb28-744">派生クラスでオーバーライドされると、属性の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-744">When overridden in a derived class, gets the value of an attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public abstract string GetAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.GetAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAttribute (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetAttribute(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="3bb28-745">属性のインデックス。</span><span class="sxs-lookup"><span data-stu-id="3bb28-745">The index of the attribute.</span></span> <span data-ttu-id="3bb28-746">インデックスの値は、0 から始まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-746">The index is zero-based.</span></span> <span data-ttu-id="3bb28-747">最初の属性のインデックスは 0 です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-747">(The first attribute has index 0.)</span></span></param>
        <summary><span data-ttu-id="3bb28-748">派生クラスでオーバーライドされると、指定したインデックスの属性の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-748">When overridden in a derived class, gets the value of the attribute with the specified index.</span></span></summary>
        <returns><span data-ttu-id="3bb28-749">指定した属性の値。</span><span class="sxs-lookup"><span data-stu-id="3bb28-749">The value of the specified attribute.</span></span> <span data-ttu-id="3bb28-750">このメソッドは、リーダーを移動しません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-750">This method does not move the reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3bb28-751">次の例では、3 番目の属性の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-751">The following example gets the value of the third attribute.</span></span>  
  
 [!code-csharp[XmlReaderBasic#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#2)]
 [!code-vb[XmlReaderBasic#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3bb28-752"><paramref name="i" /> が範囲外です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-752"><paramref name="i" /> is out of range.</span></span> <span data-ttu-id="3bb28-753">負の値以外で、属性コレクションのサイズよりも小さくなければなりません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-753">It must be non-negative and less than the size of the attribute collection.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-754">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-754">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-755">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-755">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public abstract string GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAttribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetAttribute(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3bb28-756">属性の限定名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-756">The qualified name of the attribute.</span></span></param>
        <summary><span data-ttu-id="3bb28-757">派生クラスでオーバーライドされると、指定した <see cref="P:System.Xml.XmlReader.Name" /> の属性の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-757">When overridden in a derived class, gets the value of the attribute with the specified <see cref="P:System.Xml.XmlReader.Name" />.</span></span></summary>
        <returns><span data-ttu-id="3bb28-758">指定した属性の値。</span><span class="sxs-lookup"><span data-stu-id="3bb28-758">The value of the specified attribute.</span></span> <span data-ttu-id="3bb28-759">属性が見つからないか、値が <see langword="String.Empty" /> の場合、<see langword="null" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-759">If the attribute is not found or the value is <see langword="String.Empty" />, <see langword="null" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-760">このメソッドは、リーダーを移動しません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-760">This method does not move the reader.</span></span>  
  
 <span data-ttu-id="3bb28-761">リーダーが配置されている場合、 `DocumentType`  ノードを取得、公開キーとシステム リテラル、たとえば、このメソッドを使用できます `reader.GetAttribute("PUBLIC")`</span><span class="sxs-lookup"><span data-stu-id="3bb28-761">If the reader is positioned on a `DocumentType` node, this method can be used to get the PUBLIC and SYSTEM literals, for example, `reader.GetAttribute("PUBLIC")`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-762">次の例では、ISBN 属性の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-762">The following example gets the value of the ISBN attribute.</span></span>  
  
 [!code-csharp[XmlReaderBasic#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#3)]
 [!code-vb[XmlReaderBasic#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3bb28-763"><paramref name="name" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-763"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-764">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-764">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-765">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-765">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public abstract string GetAttribute (string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAttribute (name As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetAttribute(System::String ^ name, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3bb28-766">属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-766">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="3bb28-767">属性の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="3bb28-767">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="3bb28-768">派生クラスでオーバーライドされると、指定した <see cref="P:System.Xml.XmlReader.LocalName" /> および <see cref="P:System.Xml.XmlReader.NamespaceURI" /> の属性の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-768">When overridden in a derived class, gets the value of the attribute with the specified <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" />.</span></span></summary>
        <returns><span data-ttu-id="3bb28-769">指定した属性の値。</span><span class="sxs-lookup"><span data-stu-id="3bb28-769">The value of the specified attribute.</span></span> <span data-ttu-id="3bb28-770">属性が見つからないか、値が <see langword="String.Empty" /> の場合、<see langword="null" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-770">If the attribute is not found or the value is <see langword="String.Empty" />, <see langword="null" /> is returned.</span></span> <span data-ttu-id="3bb28-771">このメソッドは、リーダーを移動しません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-771">This method does not move the reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-772">次の XML には、特定の名前空間内の属性が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-772">The following XML contains an attribute in a specific namespace:</span></span>  
  
```xml  
<test xmlns:dt="urn:datatypes" dt:type="int"/>  
```  
  
 <span data-ttu-id="3bb28-773">検索することができます、`dt:type`属性の 1 つの引数 (プレフィックスとローカル名) または 2 つの引数 (ローカル名と名前空間 URI) を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-773">You can lookup the `dt:type` attribute using one argument (prefix and local name) or two arguments (local name and namespace URI):</span></span>  
  
```csharp  
String dt = reader.GetAttribute("dt:type");  
String dt2 = reader.GetAttribute("type","urn:datatypes");  
```  
  
 <span data-ttu-id="3bb28-774">参照する、`xmlns:dt`属性は、次の引数のいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-774">To lookup the `xmlns:dt` attribute, use one of the following arguments:</span></span>  
  
```csharp  
String dt3 = reader.GetAttribute("xmlns:dt");  
String dt4 = reader.GetAttribute("dt",http://www.w3.org/2000/xmlns/);  
```  
  
 <span data-ttu-id="3bb28-775">使用してこの情報を取得することも、<xref:System.Xml.XmlReader.Prefix%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-775">You can also get this information using the <xref:System.Xml.XmlReader.Prefix%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3bb28-776"><paramref name="name" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-776"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-777">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-777">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-778">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-778">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; GetValueAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GetValueAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.GetValueAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValueAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ GetValueAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-779">現在のノードのテキスト値を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-779">Asynchronously gets the value of the current node.</span></span></summary>
        <returns><span data-ttu-id="3bb28-780">現在のノードの値。</span><span class="sxs-lookup"><span data-stu-id="3bb28-780">The value of the current node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-781">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlReaderSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-781">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-782"><see cref="P:System.Xml.XmlReaderSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlReader" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-782">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="3bb28-783">この場合、「非同期メソッドを使用する場合、XmlReaderSettings.Async を True に設定します」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-783">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasAttributes">
      <MemberSignature Language="C#" Value="public virtual bool HasAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.HasAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasAttributes { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bb28-784">現在のノードに属性があるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-784">Gets a value indicating whether the current node has any attributes.</span></span></summary>
        <value>
          <span data-ttu-id="3bb28-785">現在のノードが属性を持っている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-785"><see langword="true" /> if the current node has attributes; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3bb28-786">次の例では、現在のノードにすべての属性を表示します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-786">The following example displays all attributes on the current node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#6)]
 [!code-vb[XmlReaderBasic#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-787">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-787">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-788">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-788">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public virtual bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasValue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bb28-789">派生クラスでオーバーライドされると、現在のノードが <see cref="P:System.Xml.XmlReader.Value" /> を持つことができるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-789">When overridden in a derived class, gets a value indicating whether the current node can have a <see cref="P:System.Xml.XmlReader.Value" />.</span></span></summary>
        <value>
          <span data-ttu-id="3bb28-790">リーダーが現在配置されているノードが <see langword="Value" /> を持つことができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-790"><see langword="true" /> if the node on which the reader is currently positioned can have a <see langword="Value" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3bb28-791"><see langword="false" /> の場合、ノードは <see langword="String.Empty" /> の値を持ちます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-791">If <see langword="false" />, the node has a value of <see langword="String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-792">返す値を持つノード型の一覧を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-792">The following table lists node types that have a value to return.</span></span>  
  
|<span data-ttu-id="3bb28-793">ノード型</span><span class="sxs-lookup"><span data-stu-id="3bb28-793">Node Type</span></span>|<span data-ttu-id="3bb28-794">[値]</span><span class="sxs-lookup"><span data-stu-id="3bb28-794">Value</span></span>|  
|---------------|-----------|  
|`Attribute`|<span data-ttu-id="3bb28-795">属性の値。</span><span class="sxs-lookup"><span data-stu-id="3bb28-795">The value of the attribute.</span></span>|  
|`CDATA`|<span data-ttu-id="3bb28-796">CDATA セクションの内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-796">The content of the CDATA section.</span></span>|  
|`Comment`|<span data-ttu-id="3bb28-797">コメントの内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-797">The content of the comment.</span></span>|  
|`DocumentType`|<span data-ttu-id="3bb28-798">内部サブセット。</span><span class="sxs-lookup"><span data-stu-id="3bb28-798">The internal subset.</span></span>|  
|`ProcessingInstruction`|<span data-ttu-id="3bb28-799">ターゲットを除く全内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-799">The entire content, excluding the target.</span></span>|  
|`SignificantWhitespace`|<span data-ttu-id="3bb28-800">混合コンテンツ モデル内のマークアップ間の空白。</span><span class="sxs-lookup"><span data-stu-id="3bb28-800">The white space between markup in a mixed content model.</span></span>|  
|`Text`|<span data-ttu-id="3bb28-801">テキスト ノードの内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-801">The content of the text node.</span></span>|  
|`Whitespace`|<span data-ttu-id="3bb28-802">マークアップ間の空白。</span><span class="sxs-lookup"><span data-stu-id="3bb28-802">The white space between markup.</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="3bb28-803">宣言の内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-803">The content of the declaration.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-804">参照してください<xref:System.Xml.XmlTextReader.HasValue%2A>(で、`XmlTextReader`クラス) のこのメソッドを使用してサンプルです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-804">See <xref:System.Xml.XmlTextReader.HasValue%2A> (in the `XmlTextReader` class) for a sample using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-805">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-805">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-806">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-806">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public virtual bool IsDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDefault { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bb28-807">派生クラスでオーバーライドされると、現在のノードが DTD またはスキーマで定義された既定値から生成された属性かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-807">When overridden in a derived class, gets a value indicating whether the current node is an attribute that was generated from the default value defined in the DTD or schema.</span></span></summary>
        <value>
          <span data-ttu-id="3bb28-808">現在のノードが、DTD またはスキーマで定義された既定値から生成された値を持つ属性である場合は <see langword="true" />。属性値が明示的に設定された場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-808"><see langword="true" /> if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; <see langword="false" /> if the attribute value was explicitly set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-809">`IsDefault` 常に返します`false`の実装のため`XmlReader`スキーマまたは DTD 情報をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-809">`IsDefault` always returns `false` for implementations of `XmlReader` that do not support schema or DTD information.</span></span> <span data-ttu-id="3bb28-810">このプロパティは、属性ノードにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-810">This property applies only to an attribute node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-811">次の例では、ルート要素のすべての属性を表示します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-811">The following example displays all attributes on the root element.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Xml;  
  
public class Sample   
{  
  public static void Main(){  
  
    // Create the reader.  
    XmlReader reader = XmlReader.Create("book4.xml");  
  
    reader.MoveToContent();  
  
    // Display each of the attribute nodes, including default attributes.  
    while (reader.MoveToNextAttribute()){  
        if (reader.IsDefault)  
          Console.Write("(default attribute) ");  
        Console.WriteLine("{0} = {1}", reader.Name, reader.Value);    
    }             
  
    //Close the reader.  
    reader.Close();       
  
  }  
} // End class  
```  
  
 <span data-ttu-id="3bb28-812">例では、入力として、次のファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-812">The example uses the following files as input.</span></span>  
  
 `book4.xml`  
  
```xml  
<!DOCTYPE book SYSTEM 'book.dtd'>  
<book ISBN = '1-861001-57-5'>  
  <title>Pride And Prejudice</title>  
  <price>19.95</price>  
</book>  
```  
  
 `book.dtd`  
  
```  
<!ELEMENT book (title,price)>   
<!ATTLIST book   
   genre CDATA "novel"  
   ISBN CDATA #REQUIRED>  
<!ELEMENT title (#PCDATA)>  
<!ELEMENT price (#PCDATA)>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-813">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-813">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-814">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-814">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEmptyElement">
      <MemberSignature Language="C#" Value="public abstract bool IsEmptyElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.IsEmptyElement" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsEmptyElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsEmptyElement { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bb28-815">派生クラスでオーバーライドされると、現在のノードが空の要素 (<c>&lt;MyElement/&gt;</c> など) かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-815">When overridden in a derived class, gets a value indicating whether the current node is an empty element (for example, <c>&lt;MyElement/&gt;</c>).</span></span></summary>
        <value>
          <span data-ttu-id="3bb28-816"><see langword="true" /> 現在のノードが要素の場合 (<see cref="P:System.Xml.XmlReader.NodeType" /> equals <see langword="XmlNodeType.Element" />) で終わるを<c> / &gt; </c>、それ以外の<see langword="false" />します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-816"><see langword="true" /> if the current node is an element (<see cref="P:System.Xml.XmlReader.NodeType" /> equals <see langword="XmlNodeType.Element" />) that ends with <c>/&gt;</c>; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-817">このプロパティにより、次のことが区別できます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-817">This property enables you to determine the difference between the following:</span></span>  
  
 <span data-ttu-id="3bb28-818">`<item num="123"/>` (`IsEmptyElement`は`true`)。</span><span class="sxs-lookup"><span data-stu-id="3bb28-818">`<item num="123"/>` (`IsEmptyElement` is `true`).</span></span>  
  
 <span data-ttu-id="3bb28-819">`<item num="123"></item>` (`IsEmptyElement`は`false`要素の内容が空ですが、)。</span><span class="sxs-lookup"><span data-stu-id="3bb28-819">`<item num="123"></item>` (`IsEmptyElement` is `false`, although element content is empty).</span></span>  
  
 <span data-ttu-id="3bb28-820">対応する`EndElement`空の要素のノードは生成されません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-820">A corresponding `EndElement` node is not generated for empty elements.</span></span>  
  
 <span data-ttu-id="3bb28-821">既定のコンテンツがスキーマ検証のための要素に追加された場合`IsEmptyElement`が返されます`true`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-821">If default content has been added to an element due to schema validation, `IsEmptyElement` still returns `true`.</span></span> <span data-ttu-id="3bb28-822">要素が既定値を持つかどうかに影響を与えません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-822">It has no bearing on whether or not the element has a default value.</span></span> <span data-ttu-id="3bb28-823">つまり、`IsEmptyElement`だけで、ソース ドキュメント内の要素がある終了要素タグかどうかを報告します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-823">In other words, `IsEmptyElement` simply reports whether or not the element in the source document had an end element tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-824">次の例では、各要素のテキストの内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-824">The following example displays the text content of each element.</span></span>  
  
 [!code-csharp[XmlReaderBasic#10](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#10)]
 [!code-vb[XmlReaderBasic#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#10)]  
  
 <span data-ttu-id="3bb28-825">この例では、`elems.xml`の入力として、します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-825">The example uses the file, `elems.xml`, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#3](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/elems.xml#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-826">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-826">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-827">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-827">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsName">
      <MemberSignature Language="C#" Value="public static bool IsName (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsName(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.IsName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsName (str As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsName(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="3bb28-828">検証対象の名前。</span><span class="sxs-lookup"><span data-stu-id="3bb28-828">The name to validate.</span></span></param>
        <summary><span data-ttu-id="3bb28-829">文字列引数が有効な XML 名かどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-829">Returns a value indicating whether the string argument is a valid XML name.</span></span></summary>
        <returns>
          <span data-ttu-id="3bb28-830">名前が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-830"><see langword="true" /> if the name is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-831">このメソッドを使用して、 [w3c 勧告 『 XML 1.0 』](http://go.microsoft.com/fwlink/?LinkId=49863)に名前が有効かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-831">This method uses the [W3C XML 1.0 Recommendation](http://go.microsoft.com/fwlink/?LinkId=49863) to determine whether the name is valid.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-832"><paramref name="str" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-832">The <paramref name="str" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsNameToken">
      <MemberSignature Language="C#" Value="public static bool IsNameToken (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNameToken(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.IsNameToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNameToken (str As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNameToken(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="3bb28-833">検証対象の名前トークン。</span><span class="sxs-lookup"><span data-stu-id="3bb28-833">The name token to validate.</span></span></param>
        <summary><span data-ttu-id="3bb28-834">文字列引数が有効な XML 名トークンかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-834">Returns a value indicating whether or not the string argument is a valid XML name token.</span></span></summary>
        <returns>
          <span data-ttu-id="3bb28-835">有効な名前トークンの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-835"><see langword="true" /> if it is a valid name token; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-836">このメソッドを使用して、 [w3c 勧告 『 XML 1.0 』](http://go.microsoft.com/fwlink/?LinkId=49863)名前トークンが有効かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-836">This method uses the [W3C XML 1.0 Recommendation](http://go.microsoft.com/fwlink/?LinkId=49863) to determine whether the name token is valid.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-837"><paramref name="str" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-837">The <paramref name="str" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-838">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-838">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-839">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-839">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span></span></exception>
        <summary><span data-ttu-id="3bb28-840">現在のコンテンツ ノードが開始タグかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-840">Tests if the current content node is a start tag.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartElement">
      <MemberSignature Language="C#" Value="public virtual bool IsStartElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsStartElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.IsStartElement" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsStartElement () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsStartElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-841"><see cref="M:System.Xml.XmlReader.MoveToContent" /> を呼び出し、現在のコンテンツ ノードが開始タグまたは空の要素タグかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-841">Calls <see cref="M:System.Xml.XmlReader.MoveToContent" /> and tests if the current content node is a start tag or empty element tag.</span></span></summary>
        <returns>
          <span data-ttu-id="3bb28-842"><see cref="M:System.Xml.XmlReader.MoveToContent" /> が開始タグまたは空の要素タグを見つけた場合は <see langword="true" />。<see langword="XmlNodeType.Element" /> 以外のノード型が見つかった場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-842"><see langword="true" /> if <see cref="M:System.Xml.XmlReader.MoveToContent" /> finds a start tag or empty element tag; <see langword="false" /> if a node type other than <see langword="XmlNodeType.Element" /> was found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-843">このメソッドは、コンテンツのノードにリーダーが配置されるまで、空白文字、コメント、および処理命令をスキップします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-843">This method skips white space, comments, and processing instructions until the reader is positioned on a content node.</span></span> <span data-ttu-id="3bb28-844">メソッドは、現在のノードが要素の場合、テストします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-844">The method then tests if the current node is an element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-845">次の例では、各要素のテキストの内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-845">The following example displays the text content of each element.</span></span>  
  
 [!code-csharp[XmlReaderBasic#10](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#10)]
 [!code-vb[XmlReaderBasic#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#10)]  
  
 <span data-ttu-id="3bb28-846">この例では、`elems.xml`の入力として、します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-846">The example uses the file, `elems.xml`, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#3](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/elems.xml#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-847">入力ストリームで、正しくない XML が検出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-847">Incorrect XML is encountered in the input stream.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-848">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-848">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-849">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-849">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.MoveToContent" />
      </Docs>
    </Member>
    <Member MemberName="IsStartElement">
      <MemberSignature Language="C#" Value="public virtual bool IsStartElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsStartElement(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.IsStartElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsStartElement (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsStartElement(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3bb28-850">見つかった要素の <see langword="Name" /> プロパティと一致する文字列。</span><span class="sxs-lookup"><span data-stu-id="3bb28-850">The string matched against the <see langword="Name" /> property of the element found.</span></span></param>
        <summary><span data-ttu-id="3bb28-851"><see cref="M:System.Xml.XmlReader.MoveToContent" /> を呼び出し、現在のコンテンツ ノードが開始タグまたは空の要素タグかどうか、また、見つかった要素の <see cref="P:System.Xml.XmlReader.Name" /> プロパティが、指定した引数と一致するかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-851">Calls <see cref="M:System.Xml.XmlReader.MoveToContent" /> and tests if the current content node is a start tag or empty element tag and if the <see cref="P:System.Xml.XmlReader.Name" /> property of the element found matches the given argument.</span></span></summary>
        <returns>
          <span data-ttu-id="3bb28-852">見つかったノードが要素であり、<see langword="Name" /> プロパティが指定した文字列と一致する場合は <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-852"><see langword="true" /> if the resulting node is an element and the <see langword="Name" /> property matches the specified string.</span></span> <span data-ttu-id="3bb28-853"><see langword="XmlNodeType.Element" /> 以外のノード型が見つかった場合、または要素の <see langword="Name" /> プロパティが指定した文字列と一致しない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-853"><see langword="false" /> if a node type other than <see langword="XmlNodeType.Element" /> was found or if the element <see langword="Name" /> property does not match the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-854">このメソッドは、コンテンツのノードにリーダーが配置されるまで、空白文字、コメント、および処理命令をスキップします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-854">This method skips white space, comments, and processing instructions until the reader is positioned on a content node.</span></span> <span data-ttu-id="3bb28-855">メソッドは、現在のノードが要素の場合、テストします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-855">The method then tests if the current node is an element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-856">次の例では、価格の各要素を表示します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-856">The following example displays each price element.</span></span>  
  
 [!code-csharp[XmlReaderBasic#17](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#17)]
 [!code-vb[XmlReaderBasic#17](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-857">入力ストリームで、正しくない XML が検出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-857">Incorrect XML is encountered in the input stream.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-858">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-858">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-859">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-859">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.MoveToContent" />
      </Docs>
    </Member>
    <Member MemberName="IsStartElement">
      <MemberSignature Language="C#" Value="public virtual bool IsStartElement (string localname, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsStartElement(string localname, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsStartElement (localname As String, ns As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsStartElement(System::String ^ localname, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localname" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localname"><span data-ttu-id="3bb28-860">見つかった要素の <see langword="LocalName" /> プロパティと一致する文字列。</span><span class="sxs-lookup"><span data-stu-id="3bb28-860">The string to match against the <see langword="LocalName" /> property of the element found.</span></span></param>
        <param name="ns"><span data-ttu-id="3bb28-861">見つかった要素の <see langword="NamespaceURI" /> プロパティと一致する文字列。</span><span class="sxs-lookup"><span data-stu-id="3bb28-861">The string to match against the <see langword="NamespaceURI" /> property of the element found.</span></span></param>
        <summary><span data-ttu-id="3bb28-862"><see cref="M:System.Xml.XmlReader.MoveToContent" /> を呼び出し、現在のコンテンツ ノードが開始タグまたは空の要素タグかどうか、また、見つかった要素の <see cref="P:System.Xml.XmlReader.LocalName" /> プロパティと <see cref="P:System.Xml.XmlReader.NamespaceURI" /> プロパティが、指定した文字列と一致するかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-862">Calls <see cref="M:System.Xml.XmlReader.MoveToContent" /> and tests if the current content node is a start tag or empty element tag and if the <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> properties of the element found match the given strings.</span></span></summary>
        <returns>
          <span data-ttu-id="3bb28-863">見つかったノードが要素の場合は <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-863"><see langword="true" /> if the resulting node is an element.</span></span> <span data-ttu-id="3bb28-864"><see langword="XmlNodeType.Element" /> 以外のノード型が見つかった場合、または要素の <see langword="LocalName" /> および <see langword="NamespaceURI" /> プロパティが指定した文字列と一致しない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-864"><see langword="false" /> if a node type other than <see langword="XmlNodeType.Element" /> was found or if the <see langword="LocalName" /> and <see langword="NamespaceURI" /> properties of the element do not match the specified strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-865">このメソッドは、コンテンツのノードにリーダーが配置されるまで、空白文字、コメント、および処理命令をスキップします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-865">This method skips white space, comments, and processing instructions until the reader is positioned on a content node.</span></span> <span data-ttu-id="3bb28-866">メソッドは、現在のノードが要素の場合、テストします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-866">The method then tests if the current node is an element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-867">入力ストリームで、正しくない XML が検出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-867">Incorrect XML is encountered in the input stream.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-868">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-868">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-869">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-869">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.MoveToContent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-870">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-870">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-871">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-871">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span></span></exception>
        <summary><span data-ttu-id="3bb28-872">派生クラスでオーバーライドされると、属性の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-872">When overridden in a derived class, gets the value of the attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[int] { System::String ^ get(int i); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="3bb28-873">属性のインデックス。</span><span class="sxs-lookup"><span data-stu-id="3bb28-873">The index of the attribute.</span></span></param>
        <summary><span data-ttu-id="3bb28-874">派生クラスでオーバーライドされると、指定したインデックスの属性の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-874">When overridden in a derived class, gets the value of the attribute with the specified index.</span></span></summary>
        <value><span data-ttu-id="3bb28-875">指定した属性の値。</span><span class="sxs-lookup"><span data-stu-id="3bb28-875">The value of the specified attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-876">このプロパティは、リーダーを移動しません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-876">This property does not move the reader.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-877">次の例では、現在のノードにすべての属性を表示します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-877">The following example displays all attributes on the current node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#1)]
 [!code-vb[XmlReaderBasic#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-878">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-878">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-879">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-879">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.GetAttribute(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ name); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3bb28-880">属性の限定名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-880">The qualified name of the attribute.</span></span></param>
        <summary><span data-ttu-id="3bb28-881">派生クラスでオーバーライドされると、指定した <see cref="P:System.Xml.XmlReader.Name" /> の属性の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-881">When overridden in a derived class, gets the value of the attribute with the specified <see cref="P:System.Xml.XmlReader.Name" />.</span></span></summary>
        <value><span data-ttu-id="3bb28-882">指定した属性の値。</span><span class="sxs-lookup"><span data-stu-id="3bb28-882">The value of the specified attribute.</span></span> <span data-ttu-id="3bb28-883">指定した属性が見つからない場合は <see langword="null" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-883">If the attribute is not found, <see langword="null" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-884">このプロパティは、リーダーを移動しません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-884">This property does not move the reader.</span></span>  
  
 <span data-ttu-id="3bb28-885">リーダーが配置されている場合、 `DocumentType`  ノードを取得、公開キーとシステム リテラル、たとえば、このメソッドを使用できます `reader["PUBLIC"]`</span><span class="sxs-lookup"><span data-stu-id="3bb28-885">If the reader is positioned on a `DocumentType` node, this method can be used to get the PUBLIC and SYSTEM literals, for example, `reader["PUBLIC"]`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-886">次の例では、ISBN 属性の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-886">The following example gets the value of the ISBN attribute.</span></span>  
  
 [!code-csharp[XmlReaderBasic#7](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#7)]
 [!code-vb[XmlReaderBasic#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-887">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-887">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-888">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-888">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.GetAttribute(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[string name, string namespaceURI] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Item(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(name As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^, System::String ^] { System::String ^ get(System::String ^ name, System::String ^ namespaceURI); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3bb28-889">属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-889">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="3bb28-890">属性の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="3bb28-890">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="3bb28-891">派生クラスでオーバーライドされると、指定した <see cref="P:System.Xml.XmlReader.LocalName" /> および <see cref="P:System.Xml.XmlReader.NamespaceURI" /> の属性の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-891">When overridden in a derived class, gets the value of the attribute with the specified <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" />.</span></span></summary>
        <value><span data-ttu-id="3bb28-892">指定した属性の値。</span><span class="sxs-lookup"><span data-stu-id="3bb28-892">The value of the specified attribute.</span></span> <span data-ttu-id="3bb28-893">指定した属性が見つからない場合は <see langword="null" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-893">If the attribute is not found, <see langword="null" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-894">このプロパティは、リーダーを移動しません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-894">This property does not move the reader.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-895">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-895">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-896">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-896">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public abstract string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bb28-897">派生クラスでオーバーライドされると、現在のノードのローカル名を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-897">When overridden in a derived class, gets the local name of the current node.</span></span></summary>
        <value><span data-ttu-id="3bb28-898">プリフィックスを削除した現在のノードの名前。</span><span class="sxs-lookup"><span data-stu-id="3bb28-898">The name of the current node with the prefix removed.</span></span> <span data-ttu-id="3bb28-899">たとえば、<see langword="LocalName" />は<see langword="book" />要素の<c> &lt;bk:book&gt;</c>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-899">For example, <see langword="LocalName" /> is <see langword="book" /> for the element <c>&lt;bk:book&gt;</c>.</span></span>  
  
 <span data-ttu-id="3bb28-900">名前を持たないノード型 (<see langword="Text" />、<see langword="Comment" /> など) の場合、このプロパティは <see langword="String.Empty" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-900">For node types that do not have a name (like <see langword="Text" />, <see langword="Comment" />, and so on), this property returns <see langword="String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3bb28-901">次の例は、各ノードのローカル名を表示し、プレフィックスと名前空間 URI、存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="3bb28-901">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-csharp[XmlReaderBasic#9](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#9)]
 [!code-vb[XmlReaderBasic#9](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#9)]  
  
 <span data-ttu-id="3bb28-902">例では、入力として book2.xml というファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-902">The example uses the file, book2.xml, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#5](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/book2.xml#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-903">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-903">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-904">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-904">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="P:System.Xml.XmlReader.Name" />
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public abstract string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="3bb28-905">解決する対象となる名前空間 URI のプレフィックス。</span><span class="sxs-lookup"><span data-stu-id="3bb28-905">The prefix whose namespace URI you want to resolve.</span></span> <span data-ttu-id="3bb28-906">既定の名前空間と一致させるには、空の文字列を渡します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-906">To match the default namespace, pass an empty string.</span></span></param>
        <summary><span data-ttu-id="3bb28-907">派生クラスでオーバーライドされると、現在の要素のスコープの名前空間プリフィックスを解決します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-907">When overridden in a derived class, resolves a namespace prefix in the current element's scope.</span></span></summary>
        <returns><span data-ttu-id="3bb28-908">プレフィックスの割り当て先の名前空間 URI。条件に合うプレフィックスが見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-908">The namespace URI to which the prefix maps or <see langword="null" /> if no matching prefix is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-909">リーダーが配置されている場合は次の XML 文字列で、`href`属性をプレフィックス`a`は呼び出すことによって解決`reader.LookupNamespace("a")`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-909">In the following XML string, if the reader is positioned on the `href` attribute, the prefix `a` is resolved by calling `reader.LookupNamespace("a")`.</span></span> <span data-ttu-id="3bb28-910">返される文字列は`urn:456`します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-910">The returned string is `urn:456`.</span></span>  
  
```xml  
<root xmlns:a="urn:456">  
  <item>  
  <ref href="a:b"/>  
  </item>  
 </root>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-911">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-911">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-912">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-912">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-913">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-913">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-914">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-914">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span></span></exception>
        <summary><span data-ttu-id="3bb28-915">派生クラスでオーバーライドされると、指定した属性に移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-915">When overridden in a derived class, moves to the specified attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public virtual void MoveToAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveToAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub MoveToAttribute (i As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MoveToAttribute(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="3bb28-916">属性のインデックス。</span><span class="sxs-lookup"><span data-stu-id="3bb28-916">The index of the attribute.</span></span></param>
        <summary><span data-ttu-id="3bb28-917">派生クラスでオーバーライドされると、指定したインデックスの属性に移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-917">When overridden in a derived class, moves to the attribute with the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3bb28-918">次の例では、現在のノードにすべての属性を表示します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-918">The following example displays all attributes on the current node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#4)]
 [!code-vb[XmlReaderBasic#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-919">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-919">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-920">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-920">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3bb28-921">パラメーターの値が負数です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-921">The parameter has a negative value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public abstract bool MoveToAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToAttribute (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToAttribute(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3bb28-922">属性の限定名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-922">The qualified name of the attribute.</span></span></param>
        <summary><span data-ttu-id="3bb28-923">派生クラスでオーバーライドされると、指定した <see cref="P:System.Xml.XmlReader.Name" /> の属性に移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-923">When overridden in a derived class, moves to the attribute with the specified <see cref="P:System.Xml.XmlReader.Name" />.</span></span></summary>
        <returns>
          <span data-ttu-id="3bb28-924">属性が見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-924"><see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3bb28-925"><see langword="false" /> の場合、リーダーの位置は変更されません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-925">If <see langword="false" />, the reader's position does not change.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-926">呼び出した後`MoveToAttribute`、 <xref:System.Xml.XmlReader.Name%2A>、 <xref:System.Xml.XmlReader.NamespaceURI%2A>、および<xref:System.Xml.XmlReader.Prefix%2A>プロパティは、その属性のプロパティを反映します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-926">After calling `MoveToAttribute`, the <xref:System.Xml.XmlReader.Name%2A>, <xref:System.Xml.XmlReader.NamespaceURI%2A>, and <xref:System.Xml.XmlReader.Prefix%2A> properties reflect the properties of that attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-927">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-927">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-928">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-928">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3bb28-929">パラメーターは空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-929">The parameter is an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public abstract bool MoveToAttribute (string name, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToAttribute(string name, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToAttribute (name As String, ns As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToAttribute(System::String ^ name, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3bb28-930">属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-930">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="3bb28-931">属性の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="3bb28-931">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="3bb28-932">派生クラスでオーバーライドされると、指定した <see cref="P:System.Xml.XmlReader.LocalName" /> および <see cref="P:System.Xml.XmlReader.NamespaceURI" /> の属性に移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-932">When overridden in a derived class, moves to the attribute with the specified <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" />.</span></span></summary>
        <returns>
          <span data-ttu-id="3bb28-933">属性が見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-933"><see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3bb28-934"><see langword="false" /> の場合、リーダーの位置は変更されません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-934">If <see langword="false" />, the reader's position does not change.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-935">呼び出した後`MoveToAttribute`、 <xref:System.Xml.XmlReader.Name%2A>、 <xref:System.Xml.XmlReader.NamespaceURI%2A>、および<xref:System.Xml.XmlReader.Prefix%2A>プロパティは、その属性のプロパティを反映します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-935">After calling `MoveToAttribute`, the <xref:System.Xml.XmlReader.Name%2A>, <xref:System.Xml.XmlReader.NamespaceURI%2A>, and <xref:System.Xml.XmlReader.Prefix%2A> properties reflect the properties of that attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-936">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-936">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-937">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-937">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-938">両方のパラメーター値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-938">Both parameter values are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToContent">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeType MoveToContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Xml.XmlNodeType MoveToContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToContent () As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeType MoveToContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-939">現在のノードがコンテンツ (空白でないテキスト、<see langword="CDATA" />、<see langword="Element" />、<see langword="EndElement" />、<see langword="EntityReference" />、または <see langword="EndEntity" />) ノードかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-939">Checks whether the current node is a content (non-white space text, <see langword="CDATA" />, <see langword="Element" />, <see langword="EndElement" />, <see langword="EntityReference" />, or <see langword="EndEntity" />) node.</span></span> <span data-ttu-id="3bb28-940">ノードがコンテンツ ノードでない場合、リーダーは、次のコンテンツ ノードまたはファイルの末尾までスキップします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-940">If the node is not a content node, the reader skips ahead to the next content node or end of file.</span></span> <span data-ttu-id="3bb28-941"><see langword="ProcessingInstruction" />、<see langword="DocumentType" />、<see langword="Comment" />、<see langword="Whitespace" />、または <see langword="SignificantWhitespace" /> に該当するノードはスキップされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-941">It skips over nodes of the following type: <see langword="ProcessingInstruction" />, <see langword="DocumentType" />, <see langword="Comment" />, <see langword="Whitespace" />, or <see langword="SignificantWhitespace" />.</span></span></summary>
        <returns><span data-ttu-id="3bb28-942">メソッドが見つけた現在のノードの <see cref="P:System.Xml.XmlReader.NodeType" />。リーダーが入力ストリームの末尾に到達した場合は <see langword="XmlNodeType.None" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-942">The <see cref="P:System.Xml.XmlReader.NodeType" /> of the current node found by the method or <see langword="XmlNodeType.None" /> if the reader has reached the end of the input stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-943">現在のノードが属性ノードの場合は、このメソッドに移動し、リーダー戻る属性を所有する要素。</span><span class="sxs-lookup"><span data-stu-id="3bb28-943">If the current node is an attribute node, this method moves the reader back to the element that owns the attribute.</span></span>  
  
 <span data-ttu-id="3bb28-944">このメソッドの非同期バージョンは、<xref:System.Xml.XmlReader.MoveToContentAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-944">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.MoveToContentAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-945">これは、互換性に影響することがなくランダムな XML マークアップをスキップできるコードを記述するときに便利です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-945">This is useful when you want to write code that can skip over random XML markup without breaking.</span></span> <span data-ttu-id="3bb28-946">たとえば、次のコードがあるとします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-946">For example, suppose you have the following code:</span></span>  
  
 [!code-cpp[Classic WebData XmlReader.MoveToContent Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlReader.MoveToContent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlReader.MoveToContent Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlReader.MoveToContent Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlReader.MoveToContent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlReader.MoveToContent Example/VB/source.vb#1)]  
  
 <span data-ttu-id="3bb28-947">このコードは、互換性に影響することがなく、次の入力を処理できます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-947">This code can handle the following inputs without breaking:</span></span>  
  
```xml  
<price>123.4</price>  
```  
  
 <span data-ttu-id="3bb28-948">と、呼び出し</span><span class="sxs-lookup"><span data-stu-id="3bb28-948">and</span></span>  
  
```xml  
<?xml version="1.0"><!DOCTYPE price SYSTEM  
  "abc"><price>123.4</price>  
```  
  
 <span data-ttu-id="3bb28-949">と、呼び出し</span><span class="sxs-lookup"><span data-stu-id="3bb28-949">and</span></span>  
  
```xml  
<?xml version="1.0"><!DOCTYPE price SYSTEM "abc"  
  [<!ENTTIY p  
  "123.4">]><price>&p;</price>  
```  
  
 <span data-ttu-id="3bb28-950">と、呼び出し</span><span class="sxs-lookup"><span data-stu-id="3bb28-950">and</span></span>  
  
```xml  
<!-- some test comment --><?processing  
  instruction?><price>123.4</price>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-951">入力ストリームで、正しくない XML が検出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-951">Incorrect XML encountered in the input stream.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-952">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-952">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-953">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-953">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToContentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Xml.XmlNodeType&gt; MoveToContentAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype System.Xml.XmlNodeType&gt; MoveToContentAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToContentAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToContentAsync () As Task(Of XmlNodeType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Xml::XmlNodeType&gt; ^ MoveToContentAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlReader/&lt;MoveToContentAsync&gt;c__async5))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Xml.XmlNodeType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-954">現在のノードがコンテンツ ノードであるかどうかを非同期的に確認します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-954">Asynchronously checks whether the current node is a content node.</span></span> <span data-ttu-id="3bb28-955">ノードがコンテンツ ノードでない場合、リーダーは、次のコンテンツ ノードまたはファイルの末尾までスキップします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-955">If the node is not a content node, the reader skips ahead to the next content node or end of file.</span></span></summary>
        <returns><span data-ttu-id="3bb28-956">メソッドが見つけた現在のノードの <see cref="P:System.Xml.XmlReader.NodeType" />。リーダーが入力ストリームの末尾に到達した場合は <see langword="XmlNodeType.None" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-956">The <see cref="P:System.Xml.XmlReader.NodeType" /> of the current node found by the method or <see langword="XmlNodeType.None" /> if the reader has reached the end of the input stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-957">これは、非同期バージョンの<xref:System.Xml.XmlReader.MoveToContent%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-957">This is the asynchronous version of <xref:System.Xml.XmlReader.MoveToContent%2A>, with the same functionality.</span></span> <span data-ttu-id="3bb28-958">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlReaderSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-958">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-959"><see cref="P:System.Xml.XmlReaderSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlReader" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-959">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="3bb28-960">この場合、「非同期メソッドを使用する場合、XmlReaderSettings.Async を True に設定します」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-960">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToElement">
      <MemberSignature Language="C#" Value="public abstract bool MoveToElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToElement" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToElement () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-961">派生クラスでオーバーライドされると、現在の属性ノードを含む要素に移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-961">When overridden in a derived class, moves to the element that contains the current attribute node.</span></span></summary>
        <returns>
          <span data-ttu-id="3bb28-962">リーダーが属性の位置に配置されている場合は <see langword="true" /> で、属性を所有している要素の位置にリーダーが移動します。リーダーが属性の位置に配置されていない場合は <see langword="false" /> で、リーダーの位置が変更されません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-962"><see langword="true" /> if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); <see langword="false" /> if the reader is not positioned on an attribute (the position of the reader does not change).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-963">このメソッドを使用すると、その属性間を移動した後はその要素に戻ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-963">Use this method to return to an element after navigating through its attributes.</span></span> <span data-ttu-id="3bb28-964">このメソッドでは、リーダーを移動し、次のノード型のいずれかに: `Element`、 `DocumentType`、または`XmlDeclaration`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-964">This method moves the reader to one of the following node types: `Element`, `DocumentType`, or `XmlDeclaration`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-965">次の例では、現在のノードにすべての属性を表示します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-965">The following example displays all attributes on the current node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#4)]
 [!code-vb[XmlReaderBasic#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-966">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-966">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-967">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-967">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstAttribute">
      <MemberSignature Language="C#" Value="public abstract bool MoveToFirstAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFirstAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToFirstAttribute" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToFirstAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToFirstAttribute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-968">派生クラスでオーバーライドされると、最初の属性に移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-968">When overridden in a derived class, moves to the first attribute.</span></span></summary>
        <returns>
          <span data-ttu-id="3bb28-969">属性が存在する場合は <see langword="true" /> で、リーダーが最初の属性へ移動します。それ以外の場合は <see langword="false" /> で、リーダーの位置が変更されません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-969"><see langword="true" /> if an attribute exists (the reader moves to the first attribute); otherwise, <see langword="false" /> (the position of the reader does not change).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3bb28-970">次の例では、最初の属性の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-970">The following example gets the value of the first attribute.</span></span>  
  
 [!code-csharp[XmlReaderBasic#5](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#5)]
 [!code-vb[XmlReaderBasic#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-971">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-971">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-972">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-972">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToNextAttribute">
      <MemberSignature Language="C#" Value="public abstract bool MoveToNextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToNextAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToNextAttribute" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToNextAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToNextAttribute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-973">派生クラスでオーバーライドされると、次の属性に移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-973">When overridden in a derived class, moves to the next attribute.</span></span></summary>
        <returns>
          <span data-ttu-id="3bb28-974">次の属性が存在する場合は <see langword="true" />。それ以上、属性が存在しない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-974"><see langword="true" /> if there is a next attribute; <see langword="false" /> if there are no more attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-975">現在のノードが要素ノードの場合は、このメソッドは<xref:System.Xml.XmlReader.MoveToFirstAttribute%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-975">If the current node is an element node, this method is equivalent to <xref:System.Xml.XmlReader.MoveToFirstAttribute%2A>.</span></span> <span data-ttu-id="3bb28-976">場合`MoveToNextAttribute`返します`true`、[次へ] の属性にリーダーを移動です。 それ以外の場合、リーダーの位置は変更されません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-976">If `MoveToNextAttribute` returns `true`, the reader moves to the next attribute; otherwise, the position of the reader does not change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-977">次の例では、現在のノードにすべての属性を表示します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-977">The following example displays all attributes on the current node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#6)]
 [!code-vb[XmlReaderBasic#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-978">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-978">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-979">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-979">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bb28-980">派生クラスでオーバーライドされると、現在のノードの限定名を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-980">When overridden in a derived class, gets the qualified name of the current node.</span></span></summary>
        <value><span data-ttu-id="3bb28-981">現在のノードの限定名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-981">The qualified name of the current node.</span></span> <span data-ttu-id="3bb28-982">たとえば、<see langword="Name" />は<see langword="bk:book" />要素の<c> &lt;bk:book&gt;</c>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-982">For example, <see langword="Name" /> is <see langword="bk:book" /> for the element <c>&lt;bk:book&gt;</c>.</span></span>  
  
 <span data-ttu-id="3bb28-983">返される名前は、ノードの <see cref="P:System.Xml.XmlReader.NodeType" /> によって異なります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-983">The name returned is dependent on the <see cref="P:System.Xml.XmlReader.NodeType" /> of the node.</span></span> <span data-ttu-id="3bb28-984">リストされた値を返すノード型を次に示します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-984">The following node types return the listed values.</span></span> <span data-ttu-id="3bb28-985">その他のすべてのノード型は、空の文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-985">All other node types return an empty string.</span></span>  
  
 <span data-ttu-id="3bb28-986"><list type="table"><listheader><term> ノード型</span><span class="sxs-lookup"><span data-stu-id="3bb28-986"><list type="table"><listheader><term> Node type</span></span>  
  
 <span data-ttu-id="3bb28-987"></term><description> 名</span><span class="sxs-lookup"><span data-stu-id="3bb28-987"></term><description> Name</span></span>  
  
 <span data-ttu-id="3bb28-988"></description></listheader><item><term><see langword="Attribute" /></term><description> 属性の名前です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-988"></description></listheader><item><term><see langword="Attribute" /></term><description> The name of the attribute.</span></span>  
  
 <span data-ttu-id="3bb28-989"></description></item><item><term><see langword="DocumentType" /></term><description> ドキュメント型の名前。</span><span class="sxs-lookup"><span data-stu-id="3bb28-989"></description></item><item><term><see langword="DocumentType" /></term><description> The document type name.</span></span>  
  
 <span data-ttu-id="3bb28-990"></description></item><item><term><see langword="Element" /></term><description> タグ名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-990"></description></item><item><term><see langword="Element" /></term><description> The tag name.</span></span>  
  
 <span data-ttu-id="3bb28-991"></description></item><item><term><see langword="EntityReference" /></term><description> 参照されたエンティティの名前。</span><span class="sxs-lookup"><span data-stu-id="3bb28-991"></description></item><item><term><see langword="EntityReference" /></term><description> The name of the entity referenced.</span></span>  
  
 <span data-ttu-id="3bb28-992"></description></item><item><term><see langword="ProcessingInstruction" /></term><description> 処理命令の対象。</span><span class="sxs-lookup"><span data-stu-id="3bb28-992"></description></item><item><term><see langword="ProcessingInstruction" /></term><description> The target of the processing instruction.</span></span>  
  
 <span data-ttu-id="3bb28-993"></description></item><item><term><see langword="XmlDeclaration" /></term><description> リテラル文字列<see langword="xml" />です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-993"></description></item><item><term><see langword="XmlDeclaration" /></term><description> The literal string <see langword="xml" />.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3bb28-994">次の例では、XML ファイルを読み取るし、各ノードを表示します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-994">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-csharp[XmlReaderBasic#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#8)]
 [!code-vb[XmlReaderBasic#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#8)]  
  
 <span data-ttu-id="3bb28-995">このサンプルでは、`items.xml`ファイル。</span><span class="sxs-lookup"><span data-stu-id="3bb28-995">The sample uses the `items.xml` file.</span></span>  
  
 [!code-xml[XML_Core_Files#2](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/items.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-996">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-996">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-997">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-997">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="P:System.Xml.XmlReader.LocalName" />
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public abstract string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bb28-998">派生クラスでオーバーライドされると、リーダーが配置されているノードの名前空間 URI (W3C の名前空間の仕様における定義に準拠) を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-998">When overridden in a derived class, gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.</span></span></summary>
        <value><span data-ttu-id="3bb28-999">現在のノードの名前空間 URI。それ以外の場合は空の文字列。</span><span class="sxs-lookup"><span data-stu-id="3bb28-999">The namespace URI of the current node; otherwise an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1000">このプロパティは`Element`と`Attribute`ノードのみです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1000">This property is relevant to `Element` and `Attribute` nodes only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-1001">次の例は、各ノードのローカル名を表示し、プレフィックスと名前空間 URI、存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1001">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-csharp[XmlReaderBasic#9](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#9)]
 [!code-vb[XmlReaderBasic#9](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#9)]  
  
 <span data-ttu-id="3bb28-1002">例では、入力として book2.xml というファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1002">The example uses the file, book2.xml, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#5](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/book2.xml#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1003">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1003">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1004">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1004">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bb28-1005">派生クラスでオーバーライドされると、この実装に関連付けられている <see cref="T:System.Xml.XmlNameTable" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1005">When overridden in a derived class, gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this implementation.</span></span></summary>
        <value><span data-ttu-id="3bb28-1006">ノード内の最小単位に分割された文字列を取得できる <see langword="XmlNameTable" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1006">The <see langword="XmlNameTable" /> enabling you to get the atomized version of a string within the node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1007">すべてのノードと属性名が返される<xref:System.Xml.XmlReader>を使用して最小単位に分割されて、`NameTable`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1007">All node and attribute names returned from <xref:System.Xml.XmlReader> are atomized using the `NameTable`.</span></span> <span data-ttu-id="3bb28-1008">同じ名前が複数回を返される場合 (たとえば、 `Customer`)、し、同じ`String`名に対応するオブジェクトが返されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1008">When the same name is returned multiple times (for example, `Customer`), then the same `String` object will be returned for that name.</span></span> <span data-ttu-id="3bb28-1009">これによりオブジェクト負荷の高い文字列比較ではなく、これらの文字列で比較する効率的なコードを記述します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1009">This makes it possible for you to write efficient code that does object comparisons on these strings instead of expensive string comparisons.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1010">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1010">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1011">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1011">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bb28-1012">派生クラスでオーバーライドされると、現在のノードの型を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1012">When overridden in a derived class, gets the type of the current node.</span></span></summary>
        <value><span data-ttu-id="3bb28-1013">現在のノードの型を指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1013">One of the enumeration values that specify the type of the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3bb28-1014">次の例では、XML ファイルを読み取るし、各ノードを表示します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1014">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-csharp[XmlReaderBasic#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#8)]
 [!code-vb[XmlReaderBasic#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#8)]  
  
 <span data-ttu-id="3bb28-1015">このサンプルでは、`items.xml`ファイル。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1015">The sample uses the `items.xml` file.</span></span>  
  
 [!code-xml[XML_Core_Files#2](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/items.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1016">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1016">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1017">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1017">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public abstract string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bb28-1018">派生クラスでオーバーライドされると、現在のノードに関連付けられている名前空間プレフィックスを取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1018">When overridden in a derived class, gets the namespace prefix associated with the current node.</span></span></summary>
        <value><span data-ttu-id="3bb28-1019">現在のノードに関連付けられた名前空間プリフィックス。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1019">The namespace prefix associated with the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3bb28-1020">次の例は、各ノードのローカル名を表示し、プレフィックスと名前空間 URI、存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1020">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-csharp[XmlReaderBasic#9](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#9)]
 [!code-vb[XmlReaderBasic#9](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#9)]  
  
 <span data-ttu-id="3bb28-1021">例では、入力として book2.xml というファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1021">The example uses the file, book2.xml, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#5](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/book2.xml#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1022">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1022">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1023">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1023">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public virtual char QuoteChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property char QuoteChar { char get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bb28-1024">派生クラスでオーバーライドされると、属性ノードの値を囲むために使用する引用符文字を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1024">When overridden in a derived class, gets the quotation mark character used to enclose the value of an attribute node.</span></span></summary>
        <value><span data-ttu-id="3bb28-1025">属性ノードの値を囲むために使用されている引用符 (" または ')。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1025">The quotation mark character (" or ') used to enclose the value of an attribute node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1026">このプロパティは、属性ノードにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1026">This property applies only to an attribute node.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1027">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1027">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1028">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1028">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public abstract bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Read();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1029">派生クラスでオーバーライドされると、ストリームから次のノードを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1029">When overridden in a derived class, reads the next node from the stream.</span></span></summary>
        <returns>
          <span data-ttu-id="3bb28-1030">次のノードが正常に読み取られた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1030"><see langword="true" /> if the next node was read successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1031">ときに、<xref:System.Xml.XmlReader>最初を作成および初期化は、利用可能な情報はありません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1031">When an <xref:System.Xml.XmlReader> is first created and initialized, there is no information available.</span></span> <span data-ttu-id="3bb28-1032">呼び出す必要があります<xref:System.Xml.XmlReader.Read%2A>を最初のノードを読み取る。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1032">You must call <xref:System.Xml.XmlReader.Read%2A> to read the first node.</span></span> <span data-ttu-id="3bb28-1033"><xref:System.Xml.XmlReader.Read%2A>メソッドを開始する XML リーダーの状態を設定<xref:System.Xml.ReadState>この時点で、メソッドに値を返します、ファイルの末尾に達するまで、XML ファイルを順番に移動`false`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1033">The <xref:System.Xml.XmlReader.Read%2A> method sets the state of the XML reader to initiate <xref:System.Xml.ReadState> and moves through the XML file sequentially until it reaches the end of the file, at which point the method returns a value of `false`.</span></span>  
  
 <span data-ttu-id="3bb28-1034">このメソッドでは、解析を開始するのには、データ ストリームから 4 バイト以上が必要です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1034">This method requires at least four bytes from the data stream in order to begin parsing.</span></span> <span data-ttu-id="3bb28-1035">メソッドが返す 4 バイトよりも少ないが返され、ストリームに複数のデータはありませんが、`false`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1035">If fewer than four bytes are returned and there is no more data in the stream, the method returns `false`.</span></span> <span data-ttu-id="3bb28-1036">ストリーム内のより多くのデータの場合は、4 番目のバイトを受信するまで解析メソッドをブロックします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1036">If there is more data in the stream, the method will block parsing until receipt of the fourth byte.</span></span>  
  
 <span data-ttu-id="3bb28-1037">このメソッドの非同期バージョンは、<xref:System.Xml.XmlReader.ReadAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1037">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-1038">次の例では、XML ファイルを読み取るし、各ノードを表示します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1038">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-csharp[XmlReaderBasic#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#8)]
 [!code-vb[XmlReaderBasic#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#8)]  
  
 <span data-ttu-id="3bb28-1039">このサンプルでは、`items.xml`ファイル。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1039">The sample uses the `items.xml` file.</span></span>  
  
 [!code-xml[XML_Core_Files#2](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/items.xml#2)]  
  
 <span data-ttu-id="3bb28-1040">**出力:**</span><span class="sxs-lookup"><span data-stu-id="3bb28-1040">**Output:**</span></span>  
  
```  
<Item>Test with an entity: 123</Item><Item>Test with a child element <more> stuff</Item><Item>Test with a CDATA section <![CDATA[<456>]]]><![CDATA[]> def</Item><Item>Test with a char entity: A</Item><!-- Fourteen chars in this element.--><Item>1234567890ABCD</Item></Items>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1041">XML の解析中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1041">An error occurred while parsing the XML.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1042">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1042">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1043">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1043">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; ReadAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; ReadAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadAsync () As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;bool&gt; ^ ReadAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1044">ストリームから次のノードを非同期に読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1044">Asynchronously reads the next node from the stream.</span></span></summary>
        <returns>
          <span data-ttu-id="3bb28-1045">次のノードが正常に読み取られた場合は <see langword="true" />。それ以上読み取る対象となるノードが存在しない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1045"><see langword="true" /> if the next node was read successfully; <see langword="false" /> if there are no more nodes to read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1046">これは、非同期バージョンの<xref:System.Xml.XmlReader.Read%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1046">This is the asynchronous version of <xref:System.Xml.XmlReader.Read%2A>, with the same functionality.</span></span> <span data-ttu-id="3bb28-1047">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlReaderSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1047">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1048"><see cref="P:System.Xml.XmlReaderSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlReader" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1048">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="3bb28-1049">この場合、「非同期メソッドを使用する場合、XmlReaderSettings.Async を True に設定します」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1049">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAttributeValue">
      <MemberSignature Language="C#" Value="public abstract bool ReadAttributeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadAttributeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadAttributeValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ReadAttributeValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ReadAttributeValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1050">派生クラスでオーバーライドされると、属性値を解析して、1 つ以上の <see langword="Text" />、<see langword="EntityReference" />、または <see langword="EndEntity" /> の各ノードに格納します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1050">When overridden in a derived class, parses the attribute value into one or more <see langword="Text" />, <see langword="EntityReference" />, or <see langword="EndEntity" /> nodes.</span></span></summary>
        <returns>
          <span data-ttu-id="3bb28-1051">返すノードがある場合は <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1051"><see langword="true" /> if there are nodes to return.</span></span>  
  
 <span data-ttu-id="3bb28-1052">初めて呼び出すときにリーダーの位置が属性ノード上にない場合、またはすべての属性値が読み込まれている場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1052"><see langword="false" /> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</span></span>  
  
 <span data-ttu-id="3bb28-1053"><c>misc=""</c> などの空の属性は、値 <see langword="String.Empty" /> を持つ単一のノードと一緒に <see langword="true" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1053">An empty attribute, such as, <c>misc=""</c>, returns <see langword="true" /> with a single node with a value of <see langword="String.Empty" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1054">呼び出した後にこのメソッドを使用して<xref:System.Xml.XmlReader.MoveToAttribute%2A>を属性値を構成するテキストまたはエンティティ参照ノードを読み取る。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1054">Use this method after calling <xref:System.Xml.XmlReader.MoveToAttribute%2A> to read through the text or entity reference nodes that make up the attribute value.</span></span> <span data-ttu-id="3bb28-1055"><xref:System.Xml.XmlReader.Depth%2A>属性値のノードのいずれかと、属性ノードの深さです。 増加および一般エンティティ参照に出入りしたときに 1 つデクリメントします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1055">The <xref:System.Xml.XmlReader.Depth%2A> of the attribute value nodes is one plus the depth of the attribute node; it increments and decrements by one when you step into and out of general entity references.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1056">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1056">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1057">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1057">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAs">
      <MemberSignature Language="C#" Value="public virtual object ReadContentAs (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadContentAs(class System.Type returnType, class System.Xml.IXmlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAs (returnType As Type, namespaceResolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadContentAs(Type ^ returnType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="returnType"><span data-ttu-id="3bb28-1058">返される値の型。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1058">The type of the value to be returned.</span></span>  
  
 <span data-ttu-id="3bb28-1059">**メモ** .NET Framework 3.5 のリリースでは、<c>returnType</c> パラメーターの値に <see cref="T:System.DateTimeOffset" /> 型を指定できるようになりました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1059">**Note** With the release of the .NET Framework 3.5, the value of the <c>returnType</c> parameter can now be the <see cref="T:System.DateTimeOffset" /> type.</span></span></param>
        <param name="namespaceResolver"><span data-ttu-id="3bb28-1060">型変換に関連する名前空間プレフィックスの解決に使用される <see cref="T:System.Xml.IXmlNamespaceResolver" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1060">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> object that is used to resolve any namespace prefixes related to type conversion.</span></span> <span data-ttu-id="3bb28-1061">たとえば、<see cref="T:System.Xml.XmlQualifiedName" /> オブジェクトを <c>xs:string</c> に変換するときにこれを使用できます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1061">For example, this can be used when converting an <see cref="T:System.Xml.XmlQualifiedName" /> object to an <c>xs:string</c>.</span></span>  
  
 <span data-ttu-id="3bb28-1062">この値は、<see langword="null" /> の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1062">This value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="3bb28-1063">指定された型のオブジェクトとして内容を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1063">Reads the content as an object of the type specified.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1064">要求された型に変換された、連結されたテキストの内容または属性値。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1064">The concatenated text content or attribute value converted to the requested type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1065">このメソッドは、現在のリーダーの位置でテキストの内容を読み取り、要求された戻り値の型に変換します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1065">This method reads the text content at the current reader position and converts it to the requested return type.</span></span> <span data-ttu-id="3bb28-1066">テキスト、空白、有意の空白、および CDATA セクションは連結されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1066">Text, white space, significant white space and CDATA sections are concatenated.</span></span> <span data-ttu-id="3bb28-1067">コメントと処理命令はスキップされ、エンティティ参照は自動的に解決されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1067">Comments and processing instructions are skipped and entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="3bb28-1068">このメソッドは、読み取り、必要に応じて、変換、およびコンテンツの現在のノードからアトミック値の項目を返すに使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1068">This method is used to read, convert if necessary, and return atomic value items from the current node content.</span></span> <span data-ttu-id="3bb28-1069">入力の型が現在のノードの値を含むターゲット型のインスタンスでは、現在のノードの型のマッピングが有効な場合が返されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1069">If the input type is a valid mappings for the type of the current node then an instance of the target type containing the value of the current node is returned.</span></span> <span data-ttu-id="3bb28-1070">「解説」を参照してください、 <xref:System.Xml.XmlReader> referencepage 既定マッピングの一覧についてはします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1070">See the Remarks section in the <xref:System.Xml.XmlReader> referencepage for a list of the default mappings.</span></span>  
  
 <span data-ttu-id="3bb28-1071">たとえば、次の XML テキストがあった場合。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1071">For example, if you had the following XML text:</span></span>  
  
```xml  
<elem>123 <!-- comment --> <?pi my_text?> 456 <?pi another_pi?></elem>  
```  
  
 <span data-ttu-id="3bb28-1072">かどうか、データが入力され、する文字列の配列が指定されて、<xref:System.Xml.XmlReader.ReadContentAs%2A>メソッドの呼び出し、整数値が有効な CLR 型のマッピングの一覧に従って文字列から変換されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1072">If the data is typed and a string array is supplied to the <xref:System.Xml.XmlReader.ReadContentAs%2A> method call, then the integer values are converted from strings according to the list of valid CLR type mappings.</span></span>  
  
 <span data-ttu-id="3bb28-1073">型指定されたデータは、する文字列の配列が指定されて、<xref:System.Xml.XmlReader.ReadContentAs%2A>メソッドの呼び出し、コンテンツが個別の文字列に解析結果。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1073">If the data is untyped and a string array is supplied to the <xref:System.Xml.XmlReader.ReadContentAs%2A> method call, then the content is parsed into separate strings.</span></span> <span data-ttu-id="3bb28-1074">2 つの文字列を格納する配列には、「123」と「456」の値が返されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1074">An array containing two strings is returned with the values "123" and "456".</span></span> <span data-ttu-id="3bb28-1075">コンテンツからは、スペースは保持されません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1075">The spaces are not preserved from the content.</span></span>  
  
 <span data-ttu-id="3bb28-1076">一般に型指定されていないデータを読み取るとき、コンテンツは指定された型に従って解析されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1076">In general when reading untyped data the content is parsed according to the supplied type.</span></span> <span data-ttu-id="3bb28-1077">整数の配列が指定された場合など、<xref:System.Xml.XmlReader.ReadContentAs%2A>メソッドの呼び出し、整数の配列に文字列を解析し、{123,456}です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1077">For example, if an integer array is supplied to the <xref:System.Xml.XmlReader.ReadContentAs%2A> method call then the string is parsed into an array of integers {123,456}.</span></span>  
  
 <span data-ttu-id="3bb28-1078">次の例では、XML テキストに分離されていないスペースで</span><span class="sxs-lookup"><span data-stu-id="3bb28-1078">In the following example the XML text is not separated by spaces</span></span>  
  
```xml  
<elem>123<!-- comment --><?pi my_text?>456789<?pi another_pi?></elem>  
```  
  
 <span data-ttu-id="3bb28-1079">コンテンツが型指定ありに文字列の配列が指定されたかどうか、<xref:System.Xml.XmlReader.ReadContentAs%2A>メソッドを呼び出すし、連結された文字列が「123456789」の値と共に返される 1 つを含む配列。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1079">If the content is untyped and a string array is supplied to the <xref:System.Xml.XmlReader.ReadContentAs%2A> method call then an array containing one concatenated string is returned with the value "123456789".</span></span>  
  
 <span data-ttu-id="3bb28-1080">次の表では、このメソッドが各ノードの種類を処理する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1080">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="3bb28-1081">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="3bb28-1081">XmlNodeType</span></span>|<span data-ttu-id="3bb28-1082">戻り値</span><span class="sxs-lookup"><span data-stu-id="3bb28-1082">Return value</span></span>|<span data-ttu-id="3bb28-1083">リーダーの動作</span><span class="sxs-lookup"><span data-stu-id="3bb28-1083">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="3bb28-1084">テキストの連結されたコンテンツ、CDATA、空白、および有意の空白のノードが指定された型に変換されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1084">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="3bb28-1085">次の要素開始タグまたは要素終了タグに移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1085">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3bb28-1086">エンティティ参照は自動的に展開されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1086">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="3bb28-1087">呼び出すことと同じ`XmlConvert.ToXxx`属性値にします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1087">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="3bb28-1088">リーダは現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1088">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="3bb28-1089">処理命令 (PI) またはコメントは無視し、PI またはコメントに続く連結されたテキスト コンテンツを読みます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1089">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="3bb28-1090">次の要素開始タグまたは要素終了タグに移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1090">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3bb28-1091">エンティティ参照は自動的に展開されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1091">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="3bb28-1092">空の文字列。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1092">An empty string.</span></span>|<span data-ttu-id="3bb28-1093">リーダは現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1093">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="3bb28-1094"><xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1094">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="3bb28-1095">未定義。ただし、リーダーは通常、現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1095">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="3bb28-1096">詳細については、の「解説」セクションを参照してください、<xref:System.Xml.XmlReader>リファレンス ページと[W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1096">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3bb28-1097">このメソッドの非同期バージョンは、<xref:System.Xml.XmlReader.ReadContentAsAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1097">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadContentAsAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-1098">次の例では、<xref:System.Xml.XmlReader.ReadContentAs%2A>文字列オブジェクトの配列に色要素の内容を返すメソッド。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1098">The following example uses the <xref:System.Xml.XmlReader.ReadContentAs%2A> method to return the contents of the colors element into an array of string objects.</span></span>  
  
 [!code-csharp[XmlReader.ReadContentAs#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadContentAs/CS/readContentAs.cs#2)]
 [!code-vb[XmlReader.ReadContentAs#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadContentAs/VB/readContentAs.vb#2)]  
  
 <span data-ttu-id="3bb28-1099">この例は、`dataFile_2.xml` ファイルを入力として使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1099">The example uses the `dataFile_2.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadContentAs#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadContentAs/XML/dataFile_2.xml#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3bb28-1100">コンテンツが、指定した型の正しい形式になっていません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1100">The content is not in the correct format for the target type.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="3bb28-1101">試行されたキャストが無効です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1101">The attempted cast is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-1102"><paramref name="returnType" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1102">The <paramref name="returnType" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1103">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1103">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1104">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1104">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="3bb28-1105"><see langword="Decimal.MaxValue" /> を読み取りました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1105">Read <see langword="Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;object&gt; ReadContentAsAsync (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ReadContentAsAsync(class System.Type returnType, class System.Xml.IXmlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsAsync (returnType As Type, namespaceResolver As IXmlNamespaceResolver) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ ReadContentAsAsync(Type ^ returnType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlReader/&lt;ReadContentAsAsync&gt;c__async1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="returnType"><span data-ttu-id="3bb28-1106">返される値の型。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1106">The type of the value to be returned.</span></span></param>
        <param name="namespaceResolver"><span data-ttu-id="3bb28-1107">型変換に関連する名前空間プレフィックスの解決に使用される <see cref="T:System.Xml.IXmlNamespaceResolver" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1107">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> object that is used to resolve any namespace prefixes related to type conversion.</span></span></param>
        <summary><span data-ttu-id="3bb28-1108">指定された型のオブジェクトとして内容を非同期に読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1108">Asynchronously reads the content as an object of the type specified.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1109">要求された型に変換された、連結されたテキストの内容または属性値。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1109">The concatenated text content or attribute value converted to the requested type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1110">これは、非同期バージョンの<xref:System.Xml.XmlReader.ReadContentAs%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1110">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadContentAs%2A>, with the same functionality.</span></span> <span data-ttu-id="3bb28-1111">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlReaderSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1111">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1112"><see cref="P:System.Xml.XmlReaderSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlReader" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1112">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="3bb28-1113">この場合、「非同期メソッドを使用する場合、XmlReaderSettings.Async を True に設定します」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1113">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBase64">
      <MemberSignature Language="C#" Value="public virtual int ReadContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="3bb28-1114">結果として得られるテキストのコピー先のバッファー。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1114">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="3bb28-1115">この値を <see langword="null" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1115">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="3bb28-1116">バッファー内の結果のコピー開始位置を示すオフセット。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1116">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="3bb28-1117">バッファーにコピーする最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1117">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="3bb28-1118">コピーされた実際のバイト数は、このメソッドから返されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1118">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="3bb28-1119">コンテンツを読み取り、Base64 でデコードされたバイナリ バイトを返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1119">Reads the content and returns the Base64 decoded binary bytes.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1120">バッファーに書き込まれたバイト数。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1120">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1121">このメソッドは、コンテンツをストリームをデコード、`Base64`コンテンツ、およびデコードされたバイナリ バイトを返します (たとえば、インライン`Base64`エンコードされる GIF イメージ) バッファーにします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1121">This method streams the content, decodes the `Base64` content, and returns the decoded binary bytes (for example, an inline `Base64` encoded GIF image) into the buffer.</span></span> <span data-ttu-id="3bb28-1122">このメソッドは、埋め込みのテキストの大量のストリームを読み取るに連続して呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1122">This method can be called successively to read large streams of embedded text.</span></span> <span data-ttu-id="3bb28-1123">詳細については、RFC 1521 を参照してください。"MIME (Multipurpose Internet Mail Extensions) パート 1: を指定すると、Internet Message Bodies の形式を記述するためのメカニズム"です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1123">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="3bb28-1124">Rfc を取得することができます、[コメント Web サイトの要求](http://go.microsoft.com/fwlink/?LinkId=37119)です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1124">You can obtain RFCs from the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkId=37119).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3bb28-1125">呼び出しの間のリーダーのプロパティのいずれかにアクセスする必要がありますできません、<xref:System.Xml.XmlReader.ReadContentAsBase64%2A>メソッド、メソッドが値を返すまで`0`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1125">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlReader.ReadContentAsBase64%2A> method until the method returns the value `0`.</span></span>  
  
 <span data-ttu-id="3bb28-1126">このメソッドには、次の動作があります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1126">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="3bb28-1127"><xref:System.Xml.XmlReader.ReadContentAsBase64%2A> 値を返します`0`操作バイト ストリームの末尾に到達したときにします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1127"><xref:System.Xml.XmlReader.ReadContentAsBase64%2A> returns the value `0` when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="3bb28-1128">最初の非コンテンツ ノードでは、リーダーが配置します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1128">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="3bb28-1129">要求した場合、またはより、リーダーは現在の位置に留まりますストリーム内に残っているバイトの正確な数です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1129">If you ask for fewer, or the exact number of, bytes than are left in the stream the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="3bb28-1130"><xref:System.Xml.XmlReader.ReadContentAsBase64%2A> 次の XML ノード型でサポートされていません: `Element`、 `XmlDeclaration`、 `None`、 `Document`、 `DocumentType`、 `Notation`、 `Entity`、`DocumentFragment`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1130"><xref:System.Xml.XmlReader.ReadContentAsBase64%2A> is not supported on the following XML node types: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation`, `Entity`, `DocumentFragment`.</span></span>  
  
 <span data-ttu-id="3bb28-1131">このメソッドの非同期バージョンは、<xref:System.Xml.XmlReader.ReadContentAsBase64Async%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1131">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadContentAsBase64Async%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-1132"><paramref name="buffer" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1132">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1133">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1133">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1134">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1134">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3bb28-1135">バッファー内のインデックス、またはインデックスとカウントの合計値が、割り当てられているバッファー サイズを超えています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1135">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3bb28-1136"><see cref="T:System.Xml.XmlReader" /> 実装が、このメソッドをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1136">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBase64Async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadContentAsBase64Async (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadContentAsBase64Async(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsBase64Async (buffer As Byte(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadContentAsBase64Async(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="3bb28-1137">結果として得られるテキストのコピー先のバッファー。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1137">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="3bb28-1138">この値を <see langword="null" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1138">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="3bb28-1139">バッファー内の結果のコピー開始位置を示すオフセット。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1139">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="3bb28-1140">バッファーにコピーする最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1140">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="3bb28-1141">コピーされた実際のバイト数は、このメソッドから返されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1141">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="3bb28-1142">コンテンツを非同期に読み取り、Base64 でデコードされたバイナリ バイトを返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1142">Asynchronously reads the content and returns the Base64 decoded binary bytes.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1143">バッファーに書き込まれたバイト数。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1143">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1144">これは、非同期バージョンの<xref:System.Xml.XmlReader.ReadContentAsBase64%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1144">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadContentAsBase64%2A>, with the same functionality.</span></span> <span data-ttu-id="3bb28-1145">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlReaderSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1145">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1146"><see cref="P:System.Xml.XmlReaderSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlReader" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1146">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="3bb28-1147">この場合、「非同期メソッドを使用する場合、XmlReaderSettings.Async を True に設定します」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1147">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBinHex">
      <MemberSignature Language="C#" Value="public virtual int ReadContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="3bb28-1148">結果として得られるテキストのコピー先のバッファー。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1148">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="3bb28-1149">この値を <see langword="null" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1149">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="3bb28-1150">バッファー内の結果のコピー開始位置を示すオフセット。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1150">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="3bb28-1151">バッファーにコピーする最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1151">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="3bb28-1152">コピーされた実際のバイト数は、このメソッドから返されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1152">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="3bb28-1153">コンテンツを読み取り、<see langword="BinHex" /> でデコードされたバイナリ バイトを返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1153">Reads the content and returns the <see langword="BinHex" /> decoded binary bytes.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1154">バッファーに書き込まれたバイト数。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1154">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1155">このメソッドは、コンテンツをストリームをデコード、`BinHex`コンテンツ、およびデコードされたバイナリ バイトを返します (たとえば、インライン`BinHex`エンコードされる GIF イメージ) バッファーにします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1155">This method streams the content, decodes the `BinHex` content, and returns the decoded binary bytes (for example, an inline `BinHex` encoded GIF image) into the buffer.</span></span> <span data-ttu-id="3bb28-1156">このメソッドは、埋め込みのテキストの大量のストリームを読み取るに連続して呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1156">This method can be called successively to read large streams of embedded text.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3bb28-1157">呼び出しの間のリーダーのプロパティのいずれかにアクセスする必要がありますできません、<xref:System.Xml.XmlReader.ReadContentAsBinHex%2A>メソッド、メソッドが値を返すまで`0`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1157">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> method until the method returns the value `0`.</span></span>  
  
 <span data-ttu-id="3bb28-1158">このメソッドには、次の動作があります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1158">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="3bb28-1159"><xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> 値を返します`0`操作バイト ストリームの末尾に到達したときにします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1159"><xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> returns the value `0` when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="3bb28-1160">最初の非コンテンツ ノードでは、リーダーが配置します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1160">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="3bb28-1161">以下に問い合わせる必要がまたはのバイト内に残っているストリーム リーダーよりも、正確な数は、現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1161">If you ask for fewer, or the exact number, of bytes than are left in the stream the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="3bb28-1162"><xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> 次の XML ノード型でサポートされていません: `Element`、 `XmlDeclaration`、 `None`、 `Document`、 `DocumentType`、 `Notation, Entity`、`DocumentFragment`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1162"><xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> is not supported on the following XML node types: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation, Entity`, `DocumentFragment`.</span></span>  
  
 <span data-ttu-id="3bb28-1163">このメソッドの非同期バージョンは、<xref:System.Xml.XmlReader.ReadContentAsBinHexAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1163">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadContentAsBinHexAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-1164"><paramref name="buffer" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1164">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1165">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1165">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1166">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1166">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3bb28-1167">バッファー内のインデックス、またはインデックスとカウントの合計値が、割り当てられているバッファー サイズを超えています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1167">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3bb28-1168"><see cref="T:System.Xml.XmlReader" /> 実装が、このメソッドをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1168">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBinHexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadContentAsBinHexAsync (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadContentAsBinHexAsync(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsBinHexAsync (buffer As Byte(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadContentAsBinHexAsync(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="3bb28-1169">結果として得られるテキストのコピー先のバッファー。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1169">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="3bb28-1170">この値を <see langword="null" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1170">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="3bb28-1171">バッファー内の結果のコピー開始位置を示すオフセット。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1171">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="3bb28-1172">バッファーにコピーする最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1172">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="3bb28-1173">コピーされた実際のバイト数は、このメソッドから返されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1173">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="3bb28-1174">コンテンツを非同期に読み取り、<see langword="BinHex" /> でデコードされたバイナリ バイトを返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1174">Asynchronously reads the content and returns the <see langword="BinHex" /> decoded binary bytes.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1175">バッファーに書き込まれたバイト数。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1175">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1176">これは、非同期バージョンの<xref:System.Xml.XmlReader.ReadContentAsBinHex%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1176">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A>, with the same functionality.</span></span> <span data-ttu-id="3bb28-1177">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlReaderSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1177">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1178"><see cref="P:System.Xml.XmlReaderSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlReader" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1178">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="3bb28-1179">この場合、「非同期メソッドを使用する場合、XmlReaderSettings.Async を True に設定します」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1179">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBoolean">
      <MemberSignature Language="C#" Value="public virtual bool ReadContentAsBoolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadContentAsBoolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsBoolean" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsBoolean () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadContentAsBoolean();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1180">現在の位置でテキスト コンテンツを <see langword="Boolean" /> として読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1180">Reads the text content at the current position as a <see langword="Boolean" />.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1181"><see cref="T:System.Boolean" /> オブジェクトとしてのテキスト コンテンツ。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1181">The text content as a <see cref="T:System.Boolean" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1182">このメソッドは、テキスト、空白、有意の空白、および CDATA セクションを連結し、コメントまたは処理命令をスキップします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1182">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="3bb28-1183">エンティティ参照は、自動的に解決されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1183">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="3bb28-1184">コンテンツが入力した場合は`xsd:boolean`、リーダーを返します、ボックス化解除された<xref:System.Boolean>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1184">If the content is typed `xsd:boolean`, the reader returns an unboxed <xref:System.Boolean> object.</span></span> <span data-ttu-id="3bb28-1185">コンテンツの型指定されていない場合`xsd:boolean`、リーダーに変換しようとしました。、<xref:System.Boolean>オブジェクトによって定義されたルールに従って、 [W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1185">If the content is not typed `xsd:boolean`, the reader attempts to convert it to a <xref:System.Boolean> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3bb28-1186">次の表では、このメソッドが各ノードの種類を処理する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1186">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="3bb28-1187">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="3bb28-1187">XmlNodeType</span></span>|<span data-ttu-id="3bb28-1188">戻り値</span><span class="sxs-lookup"><span data-stu-id="3bb28-1188">Return value</span></span>|<span data-ttu-id="3bb28-1189">リーダーの動作</span><span class="sxs-lookup"><span data-stu-id="3bb28-1189">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="3bb28-1190">テキストの連結されたコンテンツ、CDATA、空白、および有意の空白のノードが指定された型に変換されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1190">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="3bb28-1191">次の要素開始タグまたは要素終了タグに移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1191">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3bb28-1192">エンティティ参照は自動的に展開されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1192">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="3bb28-1193">呼び出すことと同じ`XmlConvert.ToXxx`属性値にします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1193">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="3bb28-1194">リーダは現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1194">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="3bb28-1195">処理命令 (PI) またはコメントは無視し、PI またはコメントに続く連結されたテキスト コンテンツを読みます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1195">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="3bb28-1196">次の要素開始タグまたは要素終了タグに移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1196">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3bb28-1197">エンティティ参照は自動的に展開されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1197">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="3bb28-1198">空の文字列。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1198">An empty string.</span></span>|<span data-ttu-id="3bb28-1199">リーダは現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1199">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="3bb28-1200"><xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1200">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="3bb28-1201">未定義。ただし、リーダーは通常、現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1201">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="3bb28-1202">詳細については、次を参照してください。、<xref:System.Xml.XmlReader>リファレンス ページと[W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1202">For more information, see the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-1203">次の例では、 <xref:System.Xml.XmlReader.ReadContentAsBoolean%2A> B として属性を読み取ることメソッド`oolean`値。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1203">The following example uses the <xref:System.Xml.XmlReader.ReadContentAsBoolean%2A> method to read the attribute as a B`oolean` value.</span></span>  
  
 [!code-csharp[XmlReader.ReadContentAs#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadContentAs/CS/readContentAs.cs#1)]
 [!code-vb[XmlReader.ReadContentAs#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadContentAs/VB/readContentAs.vb#1)]  
  
 <span data-ttu-id="3bb28-1204">この例は、`dataFile_2.xml` ファイルを入力として使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1204">The example uses the `dataFile_2.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadContentAs#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadContentAs/XML/dataFile_2.xml#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="3bb28-1205">試行されたキャストが無効です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1205">The attempted cast is not valid.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3bb28-1206">文字列書式が無効です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1206">The string format is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1207">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1207">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1208">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1208">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ReadContentAsDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ReadContentAsDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsDateTime () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ReadContentAsDateTime();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1209">現在の位置でテキスト コンテンツを <see cref="T:System.DateTime" /> オブジェクトとして読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1209">Reads the text content at the current position as a <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1210"><see cref="T:System.DateTime" /> オブジェクトとしてのテキスト コンテンツ。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1210">The text content as a <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1211">このメソッドは、テキスト、空白、有意の空白、および CDATA セクションを連結し、コメントまたは処理命令をスキップします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1211">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="3bb28-1212">エンティティ参照は、自動的に解決されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1212">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="3bb28-1213">コンテンツが入力した場合は`xsd:dateTime`、リーダーを返します、ボックス化解除された<xref:System.DateTime>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1213">If the content is typed `xsd:dateTime`, the reader returns an unboxed <xref:System.DateTime> object.</span></span> <span data-ttu-id="3bb28-1214">コンテンツの型指定されていない場合`xsd:dateTime`、リーダーに変換しようとしました。、<xref:System.DateTime>オブジェクトによって定義されたルールに従って、 [W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1214">If the content is not typed `xsd:dateTime`, the reader attempts to convert it to a <xref:System.DateTime> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3bb28-1215">内容が <xref:System.DateTime.Year%2A?displayProperty=nameWithType> として型指定されている場合は、`xsd:gMonthDay` 値は信頼できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1215">You cannot rely on the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> value when the content is typed as `xsd:gMonthDay`.</span></span> <span data-ttu-id="3bb28-1216"><xref:System.Xml.XmlReader> 常に、 <xref:System.DateTime.Year%2A?displayProperty=nameWithType> 1904年にここでは値です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1216"><xref:System.Xml.XmlReader> always sets the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> value to 1904 in this case.</span></span>  
  
 <span data-ttu-id="3bb28-1217">次の表では、このメソッドが各ノードの種類を処理する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1217">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="3bb28-1218">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="3bb28-1218">XmlNodeType</span></span>|<span data-ttu-id="3bb28-1219">戻り値</span><span class="sxs-lookup"><span data-stu-id="3bb28-1219">Return value</span></span>|<span data-ttu-id="3bb28-1220">リーダーの動作</span><span class="sxs-lookup"><span data-stu-id="3bb28-1220">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="3bb28-1221">テキストの連結されたコンテンツ、CDATA、空白、および有意の空白のノードが指定された型に変換されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1221">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="3bb28-1222">次の要素開始タグまたは要素終了タグに移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1222">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3bb28-1223">エンティティ参照は自動的に展開されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1223">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="3bb28-1224">呼び出すことと同じ`XmlConvert.ToXxx`属性値にします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1224">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="3bb28-1225">リーダは現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1225">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="3bb28-1226">処理命令 (PI) またはコメントは無視し、PI またはコメントに続く連結されたテキスト コンテンツを読みます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1226">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="3bb28-1227">次の要素開始タグまたは要素終了タグに移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1227">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3bb28-1228">エンティティ参照は自動的に展開されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1228">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="3bb28-1229">空の文字列。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1229">An empty string.</span></span>|<span data-ttu-id="3bb28-1230">リーダは現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1230">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="3bb28-1231"><xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1231">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="3bb28-1232">未定義。ただし、リーダーは通常、現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1232">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="3bb28-1233">詳細については、次を参照してください。、<xref:System.Xml.XmlReader>リファレンス ページと[W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1233">For more information, see the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="3bb28-1234">試行されたキャストが無効です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1234">The attempted cast is not valid.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3bb28-1235">文字列書式が無効です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1235">The string format is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1236">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1236">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1237">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1237">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsDateTimeOffset">
      <MemberSignature Language="C#" Value="public virtual DateTimeOffset ReadContentAsDateTimeOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTimeOffset ReadContentAsDateTimeOffset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsDateTimeOffset () As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTimeOffset ReadContentAsDateTimeOffset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1238">現在の位置でテキスト コンテンツを <see cref="T:System.DateTimeOffset" /> オブジェクトとして読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1238">Reads the text content at the current position as a <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1239"><see cref="T:System.DateTimeOffset" /> オブジェクトとしてのテキスト コンテンツ。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1239">The text content as a <see cref="T:System.DateTimeOffset" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1240">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1240">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1241">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1241">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsDecimal">
      <MemberSignature Language="C#" Value="public virtual decimal ReadContentAsDecimal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Decimal ReadContentAsDecimal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsDecimal () As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Decimal ReadContentAsDecimal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1242">現在の位置でテキスト コンテンツを <see cref="T:System.Decimal" /> オブジェクトとして読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1242">Reads the text content at the current position as a <see cref="T:System.Decimal" /> object.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1243">現在の位置における <see cref="T:System.Decimal" /> オブジェクトとしてのテキスト コンテンツ。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1243">The text content at the current position as a <see cref="T:System.Decimal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1244">このメソッドは、テキスト、空白、有意の空白、および CDATA セクションを連結し、コメントまたは処理命令をスキップします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1244">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="3bb28-1245">エンティティ参照は、自動的に解決されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1245">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="3bb28-1246">コンテンツが入力した場合は`xsd:decimal`、リーダーを返します、ボックス化解除された<xref:System.Decimal>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1246">If the content is typed `xsd:decimal`, the reader returns an unboxed <xref:System.Decimal> object.</span></span> <span data-ttu-id="3bb28-1247">コンテンツの型指定されていない場合`xsd:decimal`、リーダーに変換しようとしました。、<xref:System.Decimal>オブジェクトによって定義されたルールに従って、 [W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1247">If the content is not typed `xsd:decimal`, the reader attempts to convert it to a <xref:System.Decimal> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3bb28-1248">次の表では、このメソッドが各ノードの種類を処理する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1248">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="3bb28-1249">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="3bb28-1249">XmlNodeType</span></span>|<span data-ttu-id="3bb28-1250">戻り値</span><span class="sxs-lookup"><span data-stu-id="3bb28-1250">Return value</span></span>|<span data-ttu-id="3bb28-1251">リーダーの動作</span><span class="sxs-lookup"><span data-stu-id="3bb28-1251">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="3bb28-1252">テキストの連結されたコンテンツ、CDATA、空白、および有意の空白のノードが指定された型に変換されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1252">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="3bb28-1253">次の要素開始タグまたは要素終了タグに移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1253">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3bb28-1254">エンティティ参照は自動的に展開されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1254">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="3bb28-1255">呼び出すことと同じ`XmlConvert.ToXxx`属性値にします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1255">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="3bb28-1256">リーダは現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1256">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="3bb28-1257">処理命令 (PI) またはコメントは無視し、PI またはコメントに続く連結されたテキスト コンテンツを読みます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1257">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="3bb28-1258">次の要素開始タグまたは要素終了タグに移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1258">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3bb28-1259">エンティティ参照は自動的に展開されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1259">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="3bb28-1260">空の文字列。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1260">An empty string.</span></span>|<span data-ttu-id="3bb28-1261">リーダは現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1261">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="3bb28-1262"><xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1262">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="3bb28-1263">未定義。ただし、リーダーは通常、現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1263">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="3bb28-1264">詳細については、次を参照してください。、<xref:System.Xml.XmlReader>リファレンス ページと[W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1264">For more information, see the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="3bb28-1265">試行されたキャストが無効です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1265">The attempted cast is not valid.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3bb28-1266">文字列書式が無効です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1266">The string format is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1267">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1267">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1268">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1268">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsDouble">
      <MemberSignature Language="C#" Value="public virtual double ReadContentAsDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ReadContentAsDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsDouble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsDouble () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double ReadContentAsDouble();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1269">現在の位置のテキストの内容を、倍精度浮動小数点数として読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1269">Reads the text content at the current position as a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1270">倍精度浮動小数点数としてのテキストの内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1270">The text content as a double-precision floating-point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1271">このメソッドは、テキスト、空白、有意の空白、および CDATA セクションを連結し、コメントまたは処理命令をスキップします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1271">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="3bb28-1272">エンティティ参照は、自動的に解決されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1272">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="3bb28-1273">コンテンツが入力した場合は`xsd:double`リーダーは、倍精度浮動小数点数を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1273">If the content is typed `xsd:double`, the reader returns a double-precision floating-point number.</span></span> <span data-ttu-id="3bb28-1274">コンテンツの型指定されていない場合`xsd:double`、リーダーが、によって定義されたルールに従って倍精度浮動小数点数に変換しようとしています。、 [W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1274">If the content is not typed `xsd:double`, the reader attempts to convert it to a double-precision floating-point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3bb28-1275">次の表では、このメソッドが各ノードの種類を処理する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1275">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="3bb28-1276">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="3bb28-1276">XmlNodeType</span></span>|<span data-ttu-id="3bb28-1277">戻り値</span><span class="sxs-lookup"><span data-stu-id="3bb28-1277">Return value</span></span>|<span data-ttu-id="3bb28-1278">リーダーの動作</span><span class="sxs-lookup"><span data-stu-id="3bb28-1278">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="3bb28-1279">テキストの連結されたコンテンツ、CDATA、空白、および有意の空白のノードが指定された型に変換されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1279">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="3bb28-1280">次の要素開始タグまたは要素終了タグに移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1280">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3bb28-1281">エンティティ参照は自動的に展開されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1281">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="3bb28-1282">呼び出すことと同じ`XmlConvert.ToXxx`属性値にします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1282">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="3bb28-1283">リーダは現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1283">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="3bb28-1284">処理命令 (PI) またはコメントは無視し、PI またはコメントに続く連結されたテキスト コンテンツを読みます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1284">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="3bb28-1285">次の要素開始タグまたは要素終了タグに移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1285">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3bb28-1286">エンティティ参照は自動的に展開されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1286">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="3bb28-1287">空の文字列。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1287">An empty string.</span></span>|<span data-ttu-id="3bb28-1288">リーダは現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1288">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="3bb28-1289"><xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1289">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="3bb28-1290">未定義。ただし、リーダーは通常、現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1290">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="3bb28-1291">詳細については、次を参照してください。、<xref:System.Xml.XmlReader>リファレンス ページと[W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1291">For more information, see the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="3bb28-1292">試行されたキャストが無効です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1292">The attempted cast is not valid.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3bb28-1293">文字列書式が無効です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1293">The string format is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1294">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1294">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1295">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1295">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsFloat">
      <MemberSignature Language="C#" Value="public virtual float ReadContentAsFloat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 ReadContentAsFloat() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsFloat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsFloat () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float ReadContentAsFloat();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1296">現在の位置のテキストの内容を、単精度浮動小数点数として読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1296">Reads the text content at the current position as a single-precision floating point number.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1297">現在の位置における単精度浮動小数点数としてのテキストの内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1297">The text content at the current position as a single-precision floating point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1298">このメソッドは、テキスト、空白、有意の空白、および CDATA セクションを連結し、コメントまたは処理命令をスキップします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1298">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="3bb28-1299">エンティティ参照は、自動的に解決されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1299">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="3bb28-1300">コンテンツが入力した場合は`xsd:float`リーダーを返します、ボックス化解除を単精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1300">If the content is typed `xsd:float`, the reader returns an unboxed a single-precision floating point number.</span></span> <span data-ttu-id="3bb28-1301">コンテンツの型指定されていない場合`xsd:float`、リーダーが、によって定義されたルールに従って単精度浮動小数点数に変換しようとしています。、 [W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1301">If the content is not typed `xsd:float`, the reader attempts to convert it to a single-precision floating point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3bb28-1302">次の表では、このメソッドが各ノードの種類を処理する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1302">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="3bb28-1303">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="3bb28-1303">XmlNodeType</span></span>|<span data-ttu-id="3bb28-1304">戻り値</span><span class="sxs-lookup"><span data-stu-id="3bb28-1304">Return value</span></span>|<span data-ttu-id="3bb28-1305">リーダーの動作</span><span class="sxs-lookup"><span data-stu-id="3bb28-1305">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="3bb28-1306">テキストの連結されたコンテンツ、CDATA、空白、および有意の空白のノードが指定された型に変換されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1306">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="3bb28-1307">次の要素開始タグまたは要素終了タグに移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1307">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3bb28-1308">エンティティ参照は自動的に展開されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1308">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="3bb28-1309">呼び出すことと同じ`XmlConvert.ToXxx`属性値にします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1309">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="3bb28-1310">リーダは現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1310">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="3bb28-1311">処理命令 (PI) またはコメントは無視し、PI またはコメントに続く連結されたテキスト コンテンツを読みます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1311">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="3bb28-1312">次の要素開始タグまたは要素終了タグに移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1312">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3bb28-1313">エンティティ参照は自動的に展開されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1313">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="3bb28-1314">空の文字列。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1314">An empty string.</span></span>|<span data-ttu-id="3bb28-1315">リーダは現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1315">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="3bb28-1316"><xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1316">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="3bb28-1317">未定義。ただし、リーダーは通常、現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1317">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="3bb28-1318">詳細については、の「解説」セクションを参照してください、<xref:System.Xml.XmlReader>リファレンス ページと[W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1318">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="3bb28-1319">試行されたキャストが無効です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1319">The attempted cast is not valid.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3bb28-1320">文字列書式が無効です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1320">The string format is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1321">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1321">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1322">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1322">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsInt">
      <MemberSignature Language="C#" Value="public virtual int ReadContentAsInt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadContentAsInt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsInt" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsInt () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadContentAsInt();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1323">現在の位置でテキストの内容を 32 ビット符号付き整数として読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1323">Reads the text content at the current position as a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1324">32 ビット符号付き整数としてのテキストの内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1324">The text content as a 32-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1325">このメソッドは、テキスト、空白、有意の空白、および CDATA セクションを連結し、コメントまたは処理命令をスキップします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1325">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="3bb28-1326">エンティティ参照は、自動的に解決されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1326">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="3bb28-1327">コンテンツが入力した場合は`xsd:integer`リーダーは、ボックス化解除された 32 ビット符号付き整数を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1327">If the content is typed `xsd:integer`, the reader returns an unboxed 32-bit signed integer.</span></span> <span data-ttu-id="3bb28-1328">コンテンツの型指定されていない場合`xsd:integer`、リーダーが、によって定義されたルールに従って 32 ビット符号付き整数に変換しようとしています。、 [W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1328">If the content is not typed `xsd:integer`, the reader attempts to convert it to a 32-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3bb28-1329">次の表では、このメソッドが各ノードの種類を処理する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1329">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="3bb28-1330">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="3bb28-1330">XmlNodeType</span></span>|<span data-ttu-id="3bb28-1331">戻り値</span><span class="sxs-lookup"><span data-stu-id="3bb28-1331">Return value</span></span>|<span data-ttu-id="3bb28-1332">リーダーの動作</span><span class="sxs-lookup"><span data-stu-id="3bb28-1332">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="3bb28-1333">テキストの連結されたコンテンツ、CDATA、空白、および有意の空白のノードが指定された型に変換されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1333">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="3bb28-1334">次の要素開始タグまたは要素終了タグに移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1334">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3bb28-1335">エンティティ参照は自動的に展開されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1335">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="3bb28-1336">呼び出すことと同じ`XmlConvert.ToXxx`属性値にします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1336">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="3bb28-1337">リーダは現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1337">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="3bb28-1338">処理命令 (PI) またはコメントは無視し、PI またはコメントに続く連結されたテキスト コンテンツを読みます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1338">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="3bb28-1339">次の要素開始タグまたは要素終了タグに移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1339">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3bb28-1340">エンティティ参照は自動的に展開されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1340">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="3bb28-1341">空の文字列。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1341">An empty string.</span></span>|<span data-ttu-id="3bb28-1342">リーダは現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1342">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="3bb28-1343"><xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1343">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="3bb28-1344">未定義。ただし、リーダーは通常、現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1344">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="3bb28-1345">詳細については、の「解説」セクションを参照してください、<xref:System.Xml.XmlReader>リファレンス ページと[W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1345">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="3bb28-1346">試行されたキャストが無効です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1346">The attempted cast is not valid.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3bb28-1347">文字列書式が無効です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1347">The string format is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1348">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1348">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1349">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1349">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsLong">
      <MemberSignature Language="C#" Value="public virtual long ReadContentAsLong ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ReadContentAsLong() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsLong" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsLong () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long ReadContentAsLong();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1350">現在の位置でテキストの内容を 64 ビット符号付き整数として読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1350">Reads the text content at the current position as a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1351">64 ビット符号付き整数としてのテキストの内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1351">The text content as a 64-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1352">このメソッドは、テキスト、空白、有意の空白、および CDATA セクションを連結し、コメントまたは処理命令をスキップします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1352">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="3bb28-1353">エンティティ参照は、自動的に解決されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1353">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="3bb28-1354">コンテンツが入力した場合は`xsd:long`リーダーは、ボックス化解除された 64 ビット符号付き整数を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1354">If the content is typed `xsd:long`, the reader returns an unboxed 64-bit signed integer.</span></span> <span data-ttu-id="3bb28-1355">コンテンツの型指定されていない場合`xsd:long`、リーダーが、によって定義されたルールに従って 64 ビット符号付き整数に変換しようとしています。、 [W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1355">If the content is not typed `xsd:long`, the reader attempts to convert it to a 64-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3bb28-1356">次の表を示しますこのメソッドは、各ノードの種類をどのように処理します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1356">The following table describes this method treats each node type.</span></span>  
  
|<span data-ttu-id="3bb28-1357">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="3bb28-1357">XmlNodeType</span></span>|<span data-ttu-id="3bb28-1358">戻り値</span><span class="sxs-lookup"><span data-stu-id="3bb28-1358">Return value</span></span>|<span data-ttu-id="3bb28-1359">リーダーの動作</span><span class="sxs-lookup"><span data-stu-id="3bb28-1359">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="3bb28-1360">テキストの連結されたコンテンツ、CDATA、空白、および有意の空白のノードが指定された型に変換されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1360">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="3bb28-1361">次の要素開始タグまたは要素終了タグに移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1361">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3bb28-1362">エンティティ参照は自動的に展開されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1362">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="3bb28-1363">同じ`XmlConvert.ToXxx`属性値にします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1363">Same as `XmlConvert.ToXxx` on attribute value.</span></span>|<span data-ttu-id="3bb28-1364">リーダーは現在の位置に留まります</span><span class="sxs-lookup"><span data-stu-id="3bb28-1364">The reader remains in the current position</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="3bb28-1365">処理命令 (PI) またはコメントは無視し、PI またはコメントに続く連結されたテキスト コンテンツを読みます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1365">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="3bb28-1366">次の要素開始タグまたは要素終了タグに移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1366">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3bb28-1367">エンティティ参照は自動的に展開されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1367">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="3bb28-1368">空の文字列。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1368">An empty string.</span></span>|<span data-ttu-id="3bb28-1369">リーダは現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1369">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="3bb28-1370"><xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1370">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="3bb28-1371">未定義。ただし、リーダーは通常、現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1371">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="3bb28-1372">詳細については、<xref:System.Xml.XmlReader> のリファレンス ページの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1372">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="3bb28-1373">試行されたキャストが無効です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1373">The attempted cast is not valid.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3bb28-1374">文字列書式が無効です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1374">The string format is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1375">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1375">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1376">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1376">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsObject">
      <MemberSignature Language="C#" Value="public virtual object ReadContentAsObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadContentAsObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadContentAsObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1377">現在の位置でテキスト コンテンツを <see cref="T:System.Object" /> として読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1377">Reads the text content at the current position as an <see cref="T:System.Object" />.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1378">最も適切な共通言語ランタイム (CLR) オブジェクトとしてのテキストの内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1378">The text content as the most appropriate common language runtime (CLR) object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1379">このメソッドは、テキスト、空白、有意の空白、および CDATA セクションを連結し、コメントまたは処理命令をスキップします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1379">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="3bb28-1380">エンティティ参照は、自動的に解決されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1380">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="3bb28-1381">リーダーがで指定された、最も適切な型のボックス化された CLR を返します、コンテンツが入力されている場合、<xref:System.Xml.XmlReader.ValueType%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1381">If the content is typed, the reader returns a boxed CLR of the most appropriate type, specified by the <xref:System.Xml.XmlReader.ValueType%2A> property.</span></span> <span data-ttu-id="3bb28-1382">コンテンツがリスト型の場合、リーダーは、適切な型のボックス化されたオブジェクトの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1382">If the content is a list type, the reader returns an array of boxed objects of the appropriate type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3bb28-1383">コンテンツの解析中に検証エラーが発生して、リーダーが配置されている場合、<xref:System.Xml.XmlReader>によって作成されたオブジェクト、<xref:System.Xml.XmlReader.Create%2A>メソッド、リーダーは、コンテンツを文字列として返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1383">If a validation error occurs while parsing the content and the reader is an <xref:System.Xml.XmlReader> object created by the <xref:System.Xml.XmlReader.Create%2A> method, the reader returns the content as a string.</span></span> <span data-ttu-id="3bb28-1384">つまり、検証エラーまたは警告が発生すると、コンテンツができないと見なされるに型指定されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1384">In other words when a validation error or warning occurs, the content is considered to be untyped.</span></span>  
  
 <span data-ttu-id="3bb28-1385">コンテンツが型指定されていない場合、リーダーはコンテンツを文字列として返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1385">If the content is not typed, the reader returns the content as a string.</span></span>  
  
 <span data-ttu-id="3bb28-1386">次の表では、このメソッドが各ノードの種類を処理する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1386">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="3bb28-1387">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="3bb28-1387">XmlNodeType</span></span>|<span data-ttu-id="3bb28-1388">戻り値</span><span class="sxs-lookup"><span data-stu-id="3bb28-1388">Return value</span></span>|<span data-ttu-id="3bb28-1389">リーダーの動作</span><span class="sxs-lookup"><span data-stu-id="3bb28-1389">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="3bb28-1390">テキストの連結されたコンテンツ、CDATA、空白、および有意の空白のノードが指定された型に変換されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1390">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="3bb28-1391">次の要素開始タグまたは要素終了タグに移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1391">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3bb28-1392">エンティティ参照は自動的に展開されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1392">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="3bb28-1393">呼び出すことと同じ`XmlConvert.ToXxx`属性値にします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1393">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="3bb28-1394">リーダーは現在の位置に留まります</span><span class="sxs-lookup"><span data-stu-id="3bb28-1394">The reader remains in the current position</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="3bb28-1395">処理命令 (PI) またはコメントは無視し、PI またはコメントに続く連結されたテキスト コンテンツを読みます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1395">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="3bb28-1396">次の要素開始タグまたは要素終了タグに移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1396">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3bb28-1397">エンティティ参照は自動的に展開されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1397">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="3bb28-1398">リーダーがリーダーを検証するスキーマの場合、要素の値 (<xref:System.Xml.XmlReaderSettings.ValidationType%2A>に設定されている<xref:System.Xml.ValidationType.Schema>) 以外の場合、空の文字列。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1398">The value of the element if the reader is a schema validating reader (<xref:System.Xml.XmlReaderSettings.ValidationType%2A> is set to <xref:System.Xml.ValidationType.Schema>); otherwise an empty string.</span></span>|<span data-ttu-id="3bb28-1399">リーダは現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1399">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="3bb28-1400"><xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1400">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="3bb28-1401">未定義。ただし、リーダーは通常、現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1401">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="3bb28-1402">詳細については、の「解説」セクションを参照してください、<xref:System.Xml.XmlReader>リファレンス ページと[W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1402">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3bb28-1403">このメソッドの非同期バージョンは、<xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1403">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="3bb28-1404">試行されたキャストが無効です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1404">The attempted cast is not valid.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3bb28-1405">文字列書式が無効です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1405">The string format is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1406">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1406">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1407">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1407">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsObjectAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;object&gt; ReadContentAsObjectAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ReadContentAsObjectAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsObjectAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsObjectAsync () As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ ReadContentAsObjectAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlReader/&lt;ReadContentAsObjectAsync&gt;c__async0))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1408">現在の位置でテキスト コンテンツを <see cref="T:System.Object" /> として非同期に読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1408">Asynchronously reads the text content at the current position as an <see cref="T:System.Object" />.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1409">最も適切な共通言語ランタイム (CLR) オブジェクトとしてのテキストの内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1409">The text content as the most appropriate common language runtime (CLR) object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1410">これは、非同期バージョンの<xref:System.Xml.XmlReader.ReadContentAsObject%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1410">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadContentAsObject%2A>, with the same functionality.</span></span> <span data-ttu-id="3bb28-1411">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlReaderSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1411">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1412"><see cref="P:System.Xml.XmlReaderSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlReader" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1412">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="3bb28-1413">この場合、「非同期メソッドを使用する場合、XmlReaderSettings.Async を True に設定します」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1413">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsString">
      <MemberSignature Language="C#" Value="public virtual string ReadContentAsString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadContentAsString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadContentAsString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1414">現在の位置でテキスト コンテンツを <see cref="T:System.String" /> オブジェクトとして読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1414">Reads the text content at the current position as a <see cref="T:System.String" /> object.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1415"><see cref="T:System.String" /> オブジェクトとしてのテキスト コンテンツ。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1415">The text content as a <see cref="T:System.String" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1416">このメソッドは、テキスト、空白、有意の空白、および CDATA セクションを連結し、コメントまたは処理命令をスキップします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1416">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="3bb28-1417">エンティティ参照は、自動的に解決されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1417">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="3bb28-1418">このメソッドを使用する文字列、または中にコメントをスキップし、処理命令テキストの内容を読み取り、型指定された値を変換します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1418">This method can be used convert typed values to a string, or to read the text content while skipping comments and processing instructions.</span></span>  
  
 <span data-ttu-id="3bb28-1419">次の表では、このメソッドが各ノードの種類を処理する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1419">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="3bb28-1420">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="3bb28-1420">XmlNodeType</span></span>|<span data-ttu-id="3bb28-1421">戻り値</span><span class="sxs-lookup"><span data-stu-id="3bb28-1421">Return value</span></span>|<span data-ttu-id="3bb28-1422">リーダーの動作</span><span class="sxs-lookup"><span data-stu-id="3bb28-1422">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="3bb28-1423">テキストの連結されたコンテンツ、CDATA、空白、および有意の空白のノードが指定された型に変換されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1423">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="3bb28-1424">次の要素開始タグまたは要素終了タグに移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1424">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3bb28-1425">エンティティ参照は自動的に展開されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1425">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="3bb28-1426">呼び出すことと同じ`XmlConvert.ToXxx`属性値にします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1426">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="3bb28-1427">リーダは現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1427">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="3bb28-1428">処理命令 (PI) またはコメントは無視し、PI またはコメントに続く連結されたテキスト コンテンツを読みます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1428">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="3bb28-1429">次の要素開始タグまたは要素終了タグに移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1429">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3bb28-1430">エンティティ参照は自動的に展開されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1430">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="3bb28-1431">空の文字列。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1431">An empty string.</span></span>|<span data-ttu-id="3bb28-1432">リーダは現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1432">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="3bb28-1433"><xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1433">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="3bb28-1434">未定義。ただし、リーダーは通常、現在の位置に留まります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1434">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="3bb28-1435">詳細については、の「解説」セクションを参照してください、<xref:System.Xml.XmlReader>リファレンス ページと[W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1435">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3bb28-1436">このメソッドの非同期バージョンは、<xref:System.Xml.XmlReader.ReadContentAsStringAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1436">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadContentAsStringAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="3bb28-1437">試行されたキャストが無効です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1437">The attempted cast is not valid.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3bb28-1438">文字列書式が無効です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1438">The string format is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1439">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1439">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1440">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1440">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsStringAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadContentAsStringAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadContentAsStringAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsStringAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsStringAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadContentAsStringAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1441">現在の位置でテキスト コンテンツを <see cref="T:System.String" /> オブジェクトとして非同期に読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1441">Asynchronously reads the text content at the current position as a <see cref="T:System.String" /> object.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1442"><see cref="T:System.String" /> オブジェクトとしてのテキスト コンテンツ。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1442">The text content as a <see cref="T:System.String" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1443">これは、非同期バージョンの<xref:System.Xml.XmlReader.ReadContentAsString%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1443">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadContentAsString%2A>, with the same functionality.</span></span> <span data-ttu-id="3bb28-1444">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlReaderSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1444">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1445"><see cref="P:System.Xml.XmlReaderSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlReader" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1445">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="3bb28-1446">この場合、「非同期メソッドを使用する場合、XmlReaderSettings.Async を True に設定します」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1446">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAs">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1447">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1447">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1448">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1448">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span></span></exception>
        <summary><span data-ttu-id="3bb28-1449">現在の要素を読み込み、型指定されたオブジェクトとして内容を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1449">Reads the current element and returns the contents as an object of the type specified.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAs">
      <MemberSignature Language="C#" Value="public virtual object ReadElementContentAs (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadElementContentAs(class System.Type returnType, class System.Xml.IXmlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAs (returnType As Type, namespaceResolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadElementContentAs(Type ^ returnType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="returnType"><span data-ttu-id="3bb28-1450">返される値の型。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1450">The type of the value to be returned.</span></span>  
  
 <span data-ttu-id="3bb28-1451">**メモ** .NET Framework 3.5 のリリースでは、<c>returnType</c> パラメーターの値に <see cref="T:System.DateTimeOffset" /> 型を指定できるようになりました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1451">**Note** With the release of the .NET Framework 3.5, the value of the <c>returnType</c> parameter can now be the <see cref="T:System.DateTimeOffset" /> type.</span></span></param>
        <param name="namespaceResolver"><span data-ttu-id="3bb28-1452">型変換に関連する名前空間プレフィックスの解決に使用される <see cref="T:System.Xml.IXmlNamespaceResolver" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1452">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> object that is used to resolve any namespace prefixes related to type conversion.</span></span></param>
        <summary><span data-ttu-id="3bb28-1453">要素の内容を要求された型として返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1453">Reads the element content as the requested type.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1454">要求された型のオブジェクトに変換された要素の内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1454">The element content converted to the requested typed object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1455">このメソッドは、開始タグと要素の内容を読み込んで、リーダーが、終了要素タグを越えて移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1455">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3bb28-1456">エンティティを展開し、処理命令とコメントは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1456">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3bb28-1457">要素には、単純な内容だけを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1457">The element can only contain simple content.</span></span> <span data-ttu-id="3bb28-1458">つまり、子要素を持つそのことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1458">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1459">詳細については、の「解説」セクションを参照してください、<xref:System.Xml.XmlReader>リファレンス ページと[W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1459">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3bb28-1460">このメソッドの非同期バージョンは、<xref:System.Xml.XmlReader.ReadElementContentAsAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1460">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadElementContentAsAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-1461">次の例では、<xref:System.Xml.XmlReader.ReadElementContentAs%2A>の内容を読み取るためのメソッド、`date`ノード。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1461">The following example uses the <xref:System.Xml.XmlReader.ReadElementContentAs%2A> method to read the content of the `date` node.</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#5](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#5)]
 [!code-vb[XmlReader.ReadElementContentAs#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#5)]  
  
 <span data-ttu-id="3bb28-1462">この例は、`dataFile.xml` ファイルを入力として使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1462">The example uses the `dataFile.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1463">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1463">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1464">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1464">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1465">現在の要素には、子要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1465">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1466">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-1466">-or-</span></span>  
  
 <span data-ttu-id="3bb28-1467">要素のコンテンツを要求された型に変換できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1467">The element content cannot be converted to the requested type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-1468">引数に <see langword="null" /> を渡してメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1468">The method is called with <see langword="null" /> arguments.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="3bb28-1469"><see langword="Decimal.MaxValue" /> を読み取りました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1469">Read <see langword="Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAs">
      <MemberSignature Language="C#" Value="public virtual object ReadElementContentAs (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver, string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadElementContentAs(class System.Type returnType, class System.Xml.IXmlNamespaceResolver namespaceResolver, string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAs (returnType As Type, namespaceResolver As IXmlNamespaceResolver, localName As String, namespaceURI As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadElementContentAs(Type ^ returnType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver, System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="returnType"><span data-ttu-id="3bb28-1470">返される値の型。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1470">The type of the value to be returned.</span></span>  
  
 <span data-ttu-id="3bb28-1471">**メモ** .NET Framework 3.5 のリリースでは、<c>returnType</c> パラメーターの値に <see cref="T:System.DateTimeOffset" /> 型を指定できるようになりました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1471">**Note** With the release of the .NET Framework 3.5, the value of the <c>returnType</c> parameter can now be the <see cref="T:System.DateTimeOffset" /> type.</span></span></param>
        <param name="namespaceResolver"><span data-ttu-id="3bb28-1472">型変換に関連する名前空間プレフィックスの解決に使用される <see cref="T:System.Xml.IXmlNamespaceResolver" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1472">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> object that is used to resolve any namespace prefixes related to type conversion.</span></span></param>
        <param name="localName"><span data-ttu-id="3bb28-1473">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1473">The local name of the element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="3bb28-1474">要素の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1474">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="3bb28-1475">指定されたローカル名と名前空間 URI が現在の要素のものと一致することを確認し、要素の内容を要求された型として読み込みます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1475">Checks that the specified local name and namespace URI matches that of the current element, then reads the element content as the requested type.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1476">要求された型のオブジェクトに変換された要素の内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1476">The element content converted to the requested typed object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1477">このメソッドは、開始タグと要素の内容を読み込んで、リーダーが、終了要素タグを越えて移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1477">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3bb28-1478">エンティティを展開し、処理命令とコメントは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1478">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3bb28-1479">要素には、単純な内容だけを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1479">The element can only contain simple content.</span></span> <span data-ttu-id="3bb28-1480">つまり、子要素を持つそのことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1480">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1481">詳細については、の「解説」セクションを参照してください、<xref:System.Xml.XmlReader>リファレンス ページと[W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1481">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1482">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1482">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1483">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1483">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1484">現在の要素には、子要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1484">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1485">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-1485">-or-</span></span>  
  
 <span data-ttu-id="3bb28-1486">要素のコンテンツを要求された型に変換できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1486">The element content cannot be converted to the requested type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-1487">引数に <see langword="null" /> を渡してメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1487">The method is called with <see langword="null" /> arguments.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3bb28-1488">指定されたローカル名と名前空間 URI は、現在読み取り中の要素と一致しません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1488">The specified local name and namespace URI do not match that of the current element being read.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="3bb28-1489"><see langword="Decimal.MaxValue" /> を読み取りました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1489">Read <see langword="Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;object&gt; ReadElementContentAsAsync (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ReadElementContentAsAsync(class System.Type returnType, class System.Xml.IXmlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsAsync (returnType As Type, namespaceResolver As IXmlNamespaceResolver) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ ReadElementContentAsAsync(Type ^ returnType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlReader/&lt;ReadElementContentAsAsync&gt;c__async4))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="returnType"><span data-ttu-id="3bb28-1490">返される値の型。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1490">The type of the value to be returned.</span></span></param>
        <param name="namespaceResolver"><span data-ttu-id="3bb28-1491">型変換に関連する名前空間プレフィックスの解決に使用される <see cref="T:System.Xml.IXmlNamespaceResolver" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1491">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> object that is used to resolve any namespace prefixes related to type conversion.</span></span></param>
        <summary><span data-ttu-id="3bb28-1492">要素の内容を要求された型として非同期に読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1492">Asynchronously reads the element content as the requested type.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1493">要求された型のオブジェクトに変換された要素の内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1493">The element content converted to the requested typed object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1494">これは、非同期バージョンの<xref:System.Xml.XmlReader.ReadElementContentAs%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1494">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadElementContentAs%2A>, with the same functionality.</span></span> <span data-ttu-id="3bb28-1495">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlReaderSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1495">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1496"><see cref="P:System.Xml.XmlReaderSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlReader" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1496">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="3bb28-1497">この場合、「非同期メソッドを使用する場合、XmlReaderSettings.Async を True に設定します」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1497">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBase64">
      <MemberSignature Language="C#" Value="public virtual int ReadElementContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadElementContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadElementContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="3bb28-1498">結果として得られるテキストのコピー先のバッファー。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1498">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="3bb28-1499">この値を <see langword="null" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1499">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="3bb28-1500">バッファー内の結果のコピー開始位置を示すオフセット。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1500">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="3bb28-1501">バッファーにコピーする最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1501">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="3bb28-1502">コピーされた実際のバイト数は、このメソッドから返されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1502">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="3bb28-1503">要素を読み取り、<see langword="Base64" /> の内容をデコードします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1503">Reads the element and decodes the <see langword="Base64" /> content.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1504">バッファーに書き込まれたバイト数。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1504">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1505">このメソッドは要素の内容を使用してデコード`Base64`のエンコードとデコードされたバイナリ バイトを返します (たとえば、インライン`Base64`-エンコードされる GIF イメージ) バッファーにします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1505">This method reads the element content, decodes it using `Base64` encoding, and returns the decoded binary bytes (for example, an inline `Base64`-encoded GIF image) into the buffer.</span></span> <span data-ttu-id="3bb28-1506">詳細については、RFC 1521 を参照してください。"MIME (Multipurpose Internet Mail Extensions) パート 1: を指定すると、Internet Message Bodies の形式を記述するためのメカニズム"です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1506">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="3bb28-1507">Rfc を取得することができます、[コメント Web サイトの要求](http://go.microsoft.com/fwlink/?LinkId=37119)です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1507">You can obtain RFCs from the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkId=37119).</span></span>  
  
 <span data-ttu-id="3bb28-1508"><xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A> 単純なコンテンツ要素を読み取るだけことができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1508"><xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A> can only read simple-content elements.</span></span> <span data-ttu-id="3bb28-1509">要素には、テキスト、空白、有意の空白、CDATA セクション、コメントおよび処理命令を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1509">The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</span></span> <span data-ttu-id="3bb28-1510">または自動的に展開されるエンティティ参照を含めることもできます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1510">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="3bb28-1511">要素は、子要素を持つことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1511">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1512">このメソッドとよく似ています、<xref:System.Xml.XmlReader.ReadContentAsBase64%2A>点を除けばメソッドは、要素ノードの型でのみ呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1512">This method is very similar to the <xref:System.Xml.XmlReader.ReadContentAsBase64%2A> method except that it can only be called on element node types.</span></span>  
  
 <span data-ttu-id="3bb28-1513">場合、`count`値は、ドキュメント内のバイト数よりも大きく、ドキュメント内のバイト数と等しい場合、または、<xref:System.Xml.XmlReader>ドキュメント内の残りのすべてのバイトを読み取り、読み取ったバイト数を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1513">If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="3bb28-1514">次<xref:System.Xml.XmlReader>メソッドの呼び出しが、ゼロが返され、ノード、次に、リーダーを移動、`EndElement`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1514">The next <xref:System.Xml.XmlReader> method call returns a zero and moves the reader to the node following the `EndElement`.</span></span>  
  
 <span data-ttu-id="3bb28-1515">呼び出す場合<xref:System.Xml.XmlReader.Read%2A>リーダーが最初のコンテンツに使用された場合の動作のすべての要素の内容を使用すると、前にし、<xref:System.Xml.XmlReader.Read%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1515">If you call <xref:System.Xml.XmlReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlReader.Read%2A> method was called.</span></span> <span data-ttu-id="3bb28-1516">これは、終了要素が出現するまでにリーダーがすべてのテキストを読み取ることを意味します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1516">This means that the reader will read all the text until the end element is encountered.</span></span> <span data-ttu-id="3bb28-1517">終了タグのノード、次のノードを読み取るして後続のノード上にそれ自体を配置します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1517">It will then read the end tag node, read the next node, and then position itself on the next subsequent node.</span></span>  
  
 <span data-ttu-id="3bb28-1518">このメソッドの非同期バージョンは、<xref:System.Xml.XmlReader.ReadElementContentAsBase64Async%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1518">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadElementContentAsBase64Async%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-1519">次の例は、インラインを読み取って`Base64`でエンコードされたイメージ。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1519">The following example reads an inline `Base64` encoded image.</span></span> <span data-ttu-id="3bb28-1520">`Base64`内でデータが埋め込まれて、`<image>`要素。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1520">The `Base64` data is embedded within the `<image>` element.</span></span> <span data-ttu-id="3bb28-1521">A<xref:System.IO.BinaryWriter>新しいバイナリ データ ファイルを作成するために使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1521">A <xref:System.IO.BinaryWriter> is used to create a new binary data file.</span></span>  
  
 [!code-csharp[XmlReader_Read_Write_Binary#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Read_Write_Binary/CS/readBinary.cs#4)]
 [!code-vb[XmlReader_Read_Write_Binary#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Read_Write_Binary/VB/readBinary.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-1522"><paramref name="buffer" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1522">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1523">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1523">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1524">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1524">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3bb28-1525">バッファー内のインデックス、またはインデックスとカウントの合計値が、割り当てられているバッファー サイズを超えています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1525">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3bb28-1526"><see cref="T:System.Xml.XmlReader" /> 実装が、このメソッドをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1526">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1527">要素には混合コンテンツが含まれます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1527">The element contains mixed-content.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3bb28-1528">コンテンツを要求された型に変換できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1528">The content cannot be converted to the requested type.</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBase64Async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadElementContentAsBase64Async (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadElementContentAsBase64Async(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsBase64Async (buffer As Byte(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadElementContentAsBase64Async(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="3bb28-1529">結果として得られるテキストのコピー先のバッファー。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1529">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="3bb28-1530">この値を <see langword="null" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1530">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="3bb28-1531">バッファー内の結果のコピー開始位置を示すオフセット。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1531">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="3bb28-1532">バッファーにコピーする最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1532">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="3bb28-1533">コピーされた実際のバイト数は、このメソッドから返されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1533">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="3bb28-1534">要素を非同期に読み取り、<see langword="Base64" /> の内容をデコードします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1534">Asynchronously reads the element and decodes the <see langword="Base64" /> content.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1535">バッファーに書き込まれたバイト数。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1535">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1536">これは、非同期バージョンの<xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1536">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A>, with the same functionality.</span></span> <span data-ttu-id="3bb28-1537">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlReaderSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1537">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1538"><see cref="P:System.Xml.XmlReaderSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlReader" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1538">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="3bb28-1539">この場合、「非同期メソッドを使用する場合、XmlReaderSettings.Async を True に設定します」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1539">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBinHex">
      <MemberSignature Language="C#" Value="public virtual int ReadElementContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadElementContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadElementContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="3bb28-1540">結果として得られるテキストのコピー先のバッファー。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1540">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="3bb28-1541">この値を <see langword="null" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1541">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="3bb28-1542">バッファー内の結果のコピー開始位置を示すオフセット。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1542">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="3bb28-1543">バッファーにコピーする最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1543">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="3bb28-1544">コピーされた実際のバイト数は、このメソッドから返されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1544">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="3bb28-1545">要素を読み取り、<see langword="BinHex" /> の内容をデコードします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1545">Reads the element and decodes the <see langword="BinHex" /> content.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1546">バッファーに書き込まれたバイト数。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1546">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1547">このメソッドは要素の内容を使用してデコード`BinHex`のエンコードとデコードされたバイナリ バイトを返します (たとえば、インライン`BinHex`-エンコードされる GIF イメージ) バッファーにします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1547">This method reads the element content, decodes it using `BinHex` encoding, and returns the decoded binary bytes (for example, an inline `BinHex`-encoded GIF image) into the buffer.</span></span>  
  
 <span data-ttu-id="3bb28-1548">このメソッドは、単純なコンテンツ要素のみを読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1548">This method can only read simple-content elements.</span></span> <span data-ttu-id="3bb28-1549">要素には、テキスト、空白、有意の空白、CDATA セクション、コメントおよび処理命令を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1549">The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</span></span> <span data-ttu-id="3bb28-1550">または自動的に展開されるエンティティ参照を含めることもできます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1550">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="3bb28-1551">要素は、子要素を持つことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1551">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1552">このメソッドとよく似ています、<xref:System.Xml.XmlReader.ReadContentAsBinHex%2A>点を除けばメソッドは、要素ノードの型でのみ呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1552">This method is very similar to the <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> method except that it can only be called on element node types.</span></span>  
  
 <span data-ttu-id="3bb28-1553">場合、`count`値は、ドキュメント内のバイト数よりも大きく、ドキュメント内のバイト数と等しい場合、または、<xref:System.Xml.XmlReader>ドキュメント内の残りのすべてのバイトを読み取り、読み取ったバイト数を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1553">If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="3bb28-1554">次<xref:System.Xml.XmlReader>メソッドの呼び出しが、ゼロが返され、ノード、次に、リーダーを移動、`EndElement`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1554">The next <xref:System.Xml.XmlReader> method call returns a zero and moves the reader to the node following the `EndElement`.</span></span>  
  
 <span data-ttu-id="3bb28-1555">呼び出す場合<xref:System.Xml.XmlReader.Read%2A>リーダーが最初のコンテンツに使用された場合の動作のすべての要素の内容を使用すると、前にし、<xref:System.Xml.XmlReader.Read%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1555">If you call <xref:System.Xml.XmlReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlReader.Read%2A> method was called.</span></span> <span data-ttu-id="3bb28-1556">これは、終了要素が出現するまでにリーダーがすべてのテキストを読み取ることを意味します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1556">This means that the reader will read all the text until the end element is encountered.</span></span> <span data-ttu-id="3bb28-1557">終了タグのノード、次のノードを読み取るして後続のノード上にそれ自体を配置します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1557">It will then read the end tag node, read the next node, and then position itself on the next subsequent node.</span></span>  
  
 <span data-ttu-id="3bb28-1558">このメソッドの非同期バージョンは、<xref:System.Xml.XmlReader.ReadElementContentAsBinHexAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1558">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadElementContentAsBinHexAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-1559">次の例は、インラインを読み取って`BinHex`でエンコードされたイメージ。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1559">The following example reads an inline `BinHex` encoded image.</span></span> <span data-ttu-id="3bb28-1560">`BinHex`内でデータが埋め込まれて、`<image>`要素。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1560">The `BinHex` data is embedded within the `<image>` element.</span></span> <span data-ttu-id="3bb28-1561">A<xref:System.IO.BinaryWriter>新しいバイナリ データ ファイルを作成するために使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1561">A <xref:System.IO.BinaryWriter> is used to create a new binary data file.</span></span>  
  
 [!code-csharp[XmlReader_Read_Write_Binary#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Read_Write_Binary/CS/readBinary.cs#2)]
 [!code-vb[XmlReader_Read_Write_Binary#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Read_Write_Binary/VB/readBinary.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-1562"><paramref name="buffer" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1562">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1563">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1563">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1564">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1564">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3bb28-1565">バッファー内のインデックス、またはインデックスとカウントの合計値が、割り当てられているバッファー サイズを超えています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1565">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3bb28-1566"><see cref="T:System.Xml.XmlReader" /> 実装が、このメソッドをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1566">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1567">要素には混合コンテンツが含まれます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1567">The element contains mixed-content.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3bb28-1568">コンテンツを要求された型に変換できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1568">The content cannot be converted to the requested type.</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBinHexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadElementContentAsBinHexAsync (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadElementContentAsBinHexAsync(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsBinHexAsync (buffer As Byte(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadElementContentAsBinHexAsync(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="3bb28-1569">結果として得られるテキストのコピー先のバッファー。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1569">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="3bb28-1570">この値を <see langword="null" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1570">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="3bb28-1571">バッファー内の結果のコピー開始位置を示すオフセット。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1571">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="3bb28-1572">バッファーにコピーする最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1572">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="3bb28-1573">コピーされた実際のバイト数は、このメソッドから返されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1573">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="3bb28-1574">要素を非同期に読み取り、<see langword="BinHex" /> の内容をデコードします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1574">Asynchronously reads the element and decodes the <see langword="BinHex" /> content.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1575">バッファーに書き込まれたバイト数。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1575">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1576">これは、非同期バージョンの<xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1576">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A>, with the same functionality.</span></span> <span data-ttu-id="3bb28-1577">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlReaderSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1577">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1578"><see cref="P:System.Xml.XmlReaderSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlReader" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1578">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="3bb28-1579">この場合、「非同期メソッドを使用する場合、XmlReaderSettings.Async を True に設定します」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1579">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsBoolean">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1580">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1580">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1581">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1581">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span></span></exception>
        <summary><span data-ttu-id="3bb28-1582">現在の要素の値を <see cref="T:System.Boolean" /> オブジェクトとして読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1582">Reads the current element value as a <see cref="T:System.Boolean" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsBoolean">
      <MemberSignature Language="C#" Value="public virtual bool ReadElementContentAsBoolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadElementContentAsBoolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsBoolean" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsBoolean () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadElementContentAsBoolean();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1583">現在の要素を読み取り、そのコンテンツを <see cref="T:System.Boolean" /> オブジェクトとして返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1583">Reads the current element and returns the contents as a <see cref="T:System.Boolean" /> object.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1584">コンテンツの要素、<see cref="T:System.Boolean" />オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1584">The element content as a <see cref="T:System.Boolean" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1585">このメソッドは、開始タグと要素の内容を読み込んで、リーダーが、終了要素タグを越えて移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1585">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3bb28-1586">エンティティを展開し、処理命令とコメントは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1586">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3bb28-1587">要素には、単純な内容だけを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1587">The element can only contain simple content.</span></span> <span data-ttu-id="3bb28-1588">つまり、子要素を持つそのことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1588">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1589">要素の内容が入力した場合は`xsd:boolean`、リーダーを返します、ボックス化解除された<xref:System.Boolean>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1589">If the element content is typed `xsd:boolean`, the reader returns an unboxed <xref:System.Boolean> object.</span></span> <span data-ttu-id="3bb28-1590">コンテンツの型指定されていない場合`xsd:boolean`、リーダーに変換しようとしました。、<xref:System.Boolean>オブジェクトによって定義されたルールに従って、 [W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1590">If the content is not typed `xsd:boolean`, the reader attempts to convert it to a <xref:System.Boolean> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3bb28-1591">詳細については、<xref:System.Xml.XmlReader> のリファレンス ページの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1591">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1592">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1592">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1593">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1593">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1594">現在の要素には、子要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1594">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1595">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-1595">-or-</span></span>  
  
 <span data-ttu-id="3bb28-1596">要素のコンテンツを <see cref="T:System.Boolean" /> オブジェクトに変換できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1596">The element content cannot be converted to a <see cref="T:System.Boolean" /> object.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-1597">引数に <see langword="null" /> を渡してメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1597">The method is called with <see langword="null" /> arguments.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBoolean">
      <MemberSignature Language="C#" Value="public virtual bool ReadElementContentAsBoolean (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadElementContentAsBoolean(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsBoolean (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadElementContentAsBoolean(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="3bb28-1598">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1598">The local name of the element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="3bb28-1599">要素の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1599">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="3bb28-1600">指定されたローカル名と名前空間 URI が現在の要素のものと一致することを確認し、現在の要素を読み取って、コンテンツを <see cref="T:System.Boolean" /> オブジェクトとして返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1600">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <see cref="T:System.Boolean" /> object.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1601">コンテンツの要素、<see cref="T:System.Boolean" />オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1601">The element content as a <see cref="T:System.Boolean" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1602">このメソッドは、開始タグと要素の内容を読み込んで、リーダーが、終了要素タグを越えて移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1602">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3bb28-1603">エンティティを展開し、処理命令とコメントは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1603">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3bb28-1604">要素には、単純な内容だけを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1604">The element can only contain simple content.</span></span> <span data-ttu-id="3bb28-1605">つまり、子要素を持つそのことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1605">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1606">コンテンツが入力した場合は`xsd:boolean`、リーダーを返します、ボックス化解除された<xref:System.Boolean>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1606">If the content is typed `xsd:boolean`, the reader returns an unboxed <xref:System.Boolean> object.</span></span> <span data-ttu-id="3bb28-1607">コンテンツの型指定されていない場合`xsd:boolean`、リーダーに変換しようとしました。、<xref:System.Boolean>オブジェクトによって定義されたルールに従って、 [W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1607">If the content is not typed `xsd:boolean`, the reader attempts to convert it to a <xref:System.Boolean> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3bb28-1608">詳細については、<xref:System.Xml.XmlReader> のリファレンス ページの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1608">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1609">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1609">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1610">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1610">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1611">現在の要素には、子要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1611">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1612">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-1612">-or-</span></span>  
  
 <span data-ttu-id="3bb28-1613">要素のコンテンツを要求された型に変換できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1613">The element content cannot be converted to the requested type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-1614">引数に <see langword="null" /> を渡してメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1614">The method is called with <see langword="null" /> arguments.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3bb28-1615">指定されたローカル名と名前空間 URI は、現在読み取り中の要素と一致しません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1615">The specified local name and namespace URI do not match that of the current element being read.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsDateTime">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1616">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1616">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1617">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1617">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span></span></exception>
        <summary><span data-ttu-id="3bb28-1618">現在の要素を読み取り、そのコンテンツを <see cref="T:System.DateTime" /> オブジェクトとして返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1618">Reads the current element and returns the contents as a <see cref="T:System.DateTime" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ReadElementContentAsDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ReadElementContentAsDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsDateTime () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ReadElementContentAsDateTime();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1619">現在の要素を読み取り、そのコンテンツを <see cref="T:System.DateTime" /> オブジェクトとして返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1619">Reads the current element and returns the contents as a <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1620">コンテンツの要素、<see cref="T:System.DateTime" />オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1620">The element content as a <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1621">このメソッドは、開始タグと要素の内容を読み込んで、リーダーが、終了要素タグを越えて移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1621">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3bb28-1622">エンティティを展開し、処理命令とコメントは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1622">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3bb28-1623">要素には、単純な内容だけを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1623">The element can only contain simple content.</span></span> <span data-ttu-id="3bb28-1624">つまり、子要素を持つそのことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1624">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1625">コンテンツが入力した場合は`xsd:dateTime`、リーダーを返します、ボックス化解除された<xref:System.DateTime>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1625">If the content is typed `xsd:dateTime`, the reader returns an unboxed <xref:System.DateTime> object.</span></span> <span data-ttu-id="3bb28-1626">コンテンツの型指定されていない場合`xsd:dateTime`、リーダーに変換しようとしました。、<xref:System.DateTime>オブジェクトによって定義されたルールに従って、 [W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1626">If the content is not typed `xsd:dateTime`, the reader attempts to convert it to a <xref:System.DateTime> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3bb28-1627">内容が <xref:System.DateTime.Year%2A?displayProperty=nameWithType> として型指定されている場合は、`xsd:gMonthDay` 値は信頼できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1627">You cannot rely on the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> value when the content is typed as `xsd:gMonthDay`.</span></span> <span data-ttu-id="3bb28-1628"><xref:System.Xml.XmlReader> 常に、 <xref:System.DateTime.Year%2A?displayProperty=nameWithType> 1904年にここでは値です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1628"><xref:System.Xml.XmlReader> always sets the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> value to 1904 in this case.</span></span>  
  
 <span data-ttu-id="3bb28-1629">詳細については、<xref:System.Xml.XmlReader> のリファレンス ページの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1629">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-1630">次の例では、<xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A>の内容を読み取るためのメソッド、`date`要素。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1630">The following example uses the <xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A> method to read the content of the `date` element.</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#4)]
 [!code-vb[XmlReader.ReadElementContentAs#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#4)]  
  
 <span data-ttu-id="3bb28-1631">この例は、`dataFile.xml` ファイルを入力として使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1631">The example uses the `dataFile.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1632">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1632">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1633">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1633">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1634">現在の要素には、子要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1634">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1635">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-1635">-or-</span></span>  
  
 <span data-ttu-id="3bb28-1636">要素のコンテンツを <see cref="T:System.DateTime" /> オブジェクトに変換できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1636">The element content cannot be converted to a <see cref="T:System.DateTime" /> object.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-1637">引数に <see langword="null" /> を渡してメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1637">The method is called with <see langword="null" /> arguments.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ReadElementContentAsDateTime (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ReadElementContentAsDateTime(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsDateTime (localName As String, namespaceURI As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ReadElementContentAsDateTime(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="3bb28-1638">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1638">The local name of the element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="3bb28-1639">要素の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1639">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="3bb28-1640">指定されたローカル名と名前空間 URI が現在の要素のものと一致することを確認し、現在の要素を読み取って、コンテンツを <see cref="T:System.DateTime" /> オブジェクトとして返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1640">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1641"><see cref="T:System.DateTime" /> オブジェクトとしての要素のコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1641">The element contents as a <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1642">このメソッドは、開始タグと要素の内容を読み込んで、リーダーが、終了要素タグを越えて移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1642">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3bb28-1643">エンティティを展開し、処理命令とコメントは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1643">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3bb28-1644">要素には、単純な内容だけを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1644">The element can only contain simple content.</span></span> <span data-ttu-id="3bb28-1645">つまり、子要素を持つそのことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1645">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1646">コンテンツが入力した場合は`xsd:dateTime`、リーダーを返します、ボックス化解除された<xref:System.DateTime>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1646">If the content is typed `xsd:dateTime`, the reader returns an unboxed <xref:System.DateTime> object.</span></span> <span data-ttu-id="3bb28-1647">コンテンツの型指定されていない場合`xsd:dateTime`、リーダーに変換しようとしました。、<xref:System.DateTime>オブジェクトによって定義されたルールに従って、 [W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1647">If the content is not typed `xsd:dateTime`, the reader attempts to convert it to a <xref:System.DateTime> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3bb28-1648">内容が <xref:System.DateTime.Year%2A?displayProperty=nameWithType> として型指定されている場合は、`xsd:gMonthDay` 値は信頼できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1648">You cannot rely on the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> value when the content is typed as `xsd:gMonthDay`.</span></span> <span data-ttu-id="3bb28-1649"><xref:System.Xml.XmlReader> 常に、 <xref:System.DateTime.Year%2A?displayProperty=nameWithType> 1904年にここでは値です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1649"><xref:System.Xml.XmlReader> always sets the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> value to 1904 in this case.</span></span>  
  
 <span data-ttu-id="3bb28-1650">詳細については、<xref:System.Xml.XmlReader> のリファレンス ページの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1650">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1651">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1651">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1652">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1652">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1653">現在の要素には、子要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1653">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1654">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-1654">-or-</span></span>  
  
 <span data-ttu-id="3bb28-1655">要素のコンテンツを要求された型に変換できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1655">The element content cannot be converted to the requested type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-1656">引数に <see langword="null" /> を渡してメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1656">The method is called with <see langword="null" /> arguments.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3bb28-1657">指定されたローカル名と名前空間 URI は、現在読み取り中の要素と一致しません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1657">The specified local name and namespace URI do not match that of the current element being read.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsDecimal">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1658">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1658">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1659">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1659">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span></span></exception>
        <summary><span data-ttu-id="3bb28-1660">現在の要素の値を <see cref="T:System.Decimal" /> オブジェクトとして読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1660">Reads the current element value as a <see cref="T:System.Decimal" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsDecimal">
      <MemberSignature Language="C#" Value="public virtual decimal ReadElementContentAsDecimal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Decimal ReadElementContentAsDecimal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsDecimal () As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Decimal ReadElementContentAsDecimal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1661">現在の要素を読み取り、そのコンテンツを <see cref="T:System.Decimal" /> オブジェクトとして返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1661">Reads the current element and returns the contents as a <see cref="T:System.Decimal" /> object.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1662">コンテンツの要素、<see cref="T:System.Decimal" />オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1662">The element content as a <see cref="T:System.Decimal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1663">このメソッドは、開始タグと要素の内容を読み込んで、リーダーが、終了要素タグを越えて移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1663">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3bb28-1664">エンティティを展開し、処理命令とコメントは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1664">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3bb28-1665">要素には、単純な内容だけを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1665">The element can only contain simple content.</span></span> <span data-ttu-id="3bb28-1666">つまり、子要素を持つそのことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1666">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1667">リーダーが要素へのコンテンツを変換しようとした場合、<xref:System.Decimal>オブジェクトによって定義されたルールに従って、 [W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨設定です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1667">The reader attempts to convert the element content to an <xref:System.Decimal> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3bb28-1668">詳細については、<xref:System.Xml.XmlReader> のリファレンス ページの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1668">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1669">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1669">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1670">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1670">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1671">現在の要素には、子要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1671">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1672">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-1672">-or-</span></span>  
  
 <span data-ttu-id="3bb28-1673">要素のコンテンツを <see cref="T:System.Decimal" /> に変換できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1673">The element content cannot be converted to a <see cref="T:System.Decimal" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-1674">引数に <see langword="null" /> を渡してメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1674">The method is called with <see langword="null" /> arguments.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsDecimal">
      <MemberSignature Language="C#" Value="public virtual decimal ReadElementContentAsDecimal (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Decimal ReadElementContentAsDecimal(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsDecimal (localName As String, namespaceURI As String) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Decimal ReadElementContentAsDecimal(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="3bb28-1675">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1675">The local name of the element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="3bb28-1676">要素の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1676">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="3bb28-1677">指定されたローカル名と名前空間 URI が現在の要素のものと一致することを確認し、現在の要素を読み取って、コンテンツを <see cref="T:System.Decimal" /> オブジェクトとして返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1677">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <see cref="T:System.Decimal" /> object.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1678">コンテンツの要素、<see cref="T:System.Decimal" />オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1678">The element content as a <see cref="T:System.Decimal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1679">このメソッドは、開始タグと要素の内容を読み込んで、リーダーが、終了要素タグを越えて移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1679">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3bb28-1680">エンティティを展開し、処理命令とコメントは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1680">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3bb28-1681">要素には、単純な内容だけを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1681">The element can only contain simple content.</span></span> <span data-ttu-id="3bb28-1682">つまり、子要素を持つそのことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1682">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1683">リーダーが要素へのコンテンツを変換しようとした場合、<xref:System.Decimal>オブジェクトによって定義されたルールに従って、 [W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨設定です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1683">The reader attempts to convert the element content to an <xref:System.Decimal> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3bb28-1684">詳細については、<xref:System.Xml.XmlReader> のリファレンス ページの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1684">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1685">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1685">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1686">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1686">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1687">現在の要素には、子要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1687">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1688">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-1688">-or-</span></span>  
  
 <span data-ttu-id="3bb28-1689">要素のコンテンツを <see cref="T:System.Decimal" /> に変換できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1689">The element content cannot be converted to a <see cref="T:System.Decimal" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-1690">引数に <see langword="null" /> を渡してメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1690">The method is called with <see langword="null" /> arguments.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3bb28-1691">指定されたローカル名と名前空間 URI は、現在読み取り中の要素と一致しません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1691">The specified local name and namespace URI do not match that of the current element being read.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsDouble">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1692">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1692">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1693">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1693">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span></span></exception>
        <summary><span data-ttu-id="3bb28-1694">現在の要素を読み込み、その内容を倍精度浮動小数点数として返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1694">Reads the current element and returns the contents as a double-precision floating-point number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsDouble">
      <MemberSignature Language="C#" Value="public virtual double ReadElementContentAsDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ReadElementContentAsDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsDouble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsDouble () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double ReadElementContentAsDouble();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1695">現在の要素を読み込み、その内容を倍精度浮動小数点数として返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1695">Reads the current element and returns the contents as a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1696">倍精度浮動小数点数としての要素の内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1696">The element content as a double-precision floating-point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1697">このメソッドは、開始タグと要素の内容を読み込んで、リーダーが、終了要素タグを越えて移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1697">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3bb28-1698">エンティティを展開し、処理命令とコメントは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1698">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3bb28-1699">要素には、単純な内容だけを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1699">The element can only contain simple content.</span></span> <span data-ttu-id="3bb28-1700">つまり、子要素を持つそのことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1700">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1701">コンテンツが入力した場合は`xsd:double`リーダーは、倍精度浮動小数点数を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1701">If the content is typed `xsd:double`, the reader returns a double-precision floating-point number.</span></span> <span data-ttu-id="3bb28-1702">コンテンツの型指定されていない場合`xsd:double`、リーダーが、によって定義されたルールに従って倍精度浮動小数点数に変換しようとしています。、 [W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1702">If the content is not typed `xsd:double`, the reader attempts to convert it to a double-precision floating-point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3bb28-1703">詳細については、<xref:System.Xml.XmlReader> のリファレンス ページの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1703">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-1704">次の例では、メソッドを使用して、倍精度浮動小数点数としての要素の内容を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1704">The following example uses the method to return the element content as a double-precision floating-point number.</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#7](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#7)]
 [!code-vb[XmlReader.ReadElementContentAs#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#7)]  
  
 <span data-ttu-id="3bb28-1705">この例は、`dataFile.xml` ファイルを入力として使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1705">The example uses the `dataFile.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1706">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1706">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1707">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1707">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1708">現在の要素には、子要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1708">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1709">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-1709">-or-</span></span>  
  
 <span data-ttu-id="3bb28-1710">要素のコンテンツを倍精度浮動小数点数に変換できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1710">The element content cannot be converted to a double-precision floating-point number.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-1711">引数に <see langword="null" /> を渡してメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1711">The method is called with <see langword="null" /> arguments.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsDouble">
      <MemberSignature Language="C#" Value="public virtual double ReadElementContentAsDouble (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ReadElementContentAsDouble(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsDouble (localName As String, namespaceURI As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double ReadElementContentAsDouble(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="3bb28-1712">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1712">The local name of the element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="3bb28-1713">要素の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1713">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="3bb28-1714">指定されたローカル名と名前空間 URI が現在の要素のものと一致することを確認し、現在の要素を読み込んで内容を倍精度浮動小数点数として返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1714">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1715">倍精度浮動小数点数としての要素の内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1715">The element content as a double-precision floating-point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1716">このメソッドは、開始タグと要素の内容を読み込んで、リーダーが、終了要素タグを越えて移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1716">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3bb28-1717">エンティティを展開し、処理命令とコメントは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1717">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3bb28-1718">要素には、単純な内容だけを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1718">The element can only contain simple content.</span></span> <span data-ttu-id="3bb28-1719">つまり、子要素を持つそのことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1719">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1720">コンテンツが入力した場合は`xsd:double`リーダーは、倍精度浮動小数点数を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1720">If the content is typed `xsd:double`, the reader returns a double-precision floating-point number.</span></span> <span data-ttu-id="3bb28-1721">コンテンツの型指定されていない場合`xsd:double`、リーダーが、によって定義されたルールに従って倍精度浮動小数点数に変換しようとしています。、 [W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1721">If the content is not typed `xsd:double`, the reader attempts to convert it to a double-precision floating-point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3bb28-1722">詳細については、<xref:System.Xml.XmlReader> のリファレンス ページの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1722">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1723">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1723">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1724">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1724">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1725">現在の要素には、子要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1725">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1726">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-1726">-or-</span></span>  
  
 <span data-ttu-id="3bb28-1727">要素のコンテンツを要求された型に変換できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1727">The element content cannot be converted to the requested type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-1728">引数に <see langword="null" /> を渡してメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1728">The method is called with <see langword="null" /> arguments.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3bb28-1729">指定されたローカル名と名前空間 URI は、現在読み取り中の要素と一致しません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1729">The specified local name and namespace URI do not match that of the current element being read.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsFloat">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1730">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1730">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1731">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1731">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span></span></exception>
        <summary><span data-ttu-id="3bb28-1732">現在の要素の値を単精度浮動小数点数として読み込みます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1732">Reads the current element value as a single-precision floating-point number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsFloat">
      <MemberSignature Language="C#" Value="public virtual float ReadElementContentAsFloat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 ReadElementContentAsFloat() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsFloat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsFloat () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float ReadElementContentAsFloat();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1733">現在の要素を読み込み、その内容を単精度浮動小数点数として返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1733">Reads the current element and returns the contents as single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1734">単精度浮動小数点数としての要素の内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1734">The element content as a single-precision floating point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1735">このメソッドは、開始タグと要素の内容を読み込んで、リーダーが、終了要素タグを越えて移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1735">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3bb28-1736">エンティティを展開し、処理命令とコメントは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1736">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3bb28-1737">要素には、単純な内容だけを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1737">The element can only contain simple content.</span></span> <span data-ttu-id="3bb28-1738">つまり、子要素を持つそのことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1738">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1739">リーダーが、によって定義されたルールに従って単精度浮動小数点数の要素の内容を変換しようとしています。、 [W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1739">The reader attempts to convert the element content to a single-precision floating point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3bb28-1740">詳細については、<xref:System.Xml.XmlReader> のリファレンス ページの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1740">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1741">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1741">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1742">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1742">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1743">現在の要素には、子要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1743">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1744">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-1744">-or-</span></span>  
  
 <span data-ttu-id="3bb28-1745">要素のコンテンツを単精度浮動小数点数に変換できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1745">The element content cannot be converted to a single-precision floating-point number.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-1746">引数に <see langword="null" /> を渡してメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1746">The method is called with <see langword="null" /> arguments.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsFloat">
      <MemberSignature Language="C#" Value="public virtual float ReadElementContentAsFloat (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 ReadElementContentAsFloat(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsFloat (localName As String, namespaceURI As String) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float ReadElementContentAsFloat(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="3bb28-1747">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1747">The local name of the element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="3bb28-1748">要素の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1748">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="3bb28-1749">指定されたローカル名と名前空間 URI が現在の要素のものと一致することを確認し、現在の要素を読み込んで内容を単精度浮動小数点数として返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1749">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1750">単精度浮動小数点数としての要素の内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1750">The element content as a single-precision floating point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1751">このメソッドは、開始タグと要素の内容を読み込んで、リーダーが、終了要素タグを越えて移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1751">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3bb28-1752">エンティティを展開し、処理命令とコメントは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1752">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3bb28-1753">要素には、単純な内容だけを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1753">The element can only contain simple content.</span></span> <span data-ttu-id="3bb28-1754">つまり、子要素を持つそのことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1754">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1755">リーダーが、によって定義されたルールに従って単精度浮動小数点数の要素の内容を変換しようとしています。、 [W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1755">The reader attempts to convert the element content to a single-precision floating point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3bb28-1756">詳細については、<xref:System.Xml.XmlReader> のリファレンス ページの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1756">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1757">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1757">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1758">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1758">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1759">現在の要素には、子要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1759">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1760">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-1760">-or-</span></span>  
  
 <span data-ttu-id="3bb28-1761">要素のコンテンツを単精度浮動小数点数に変換できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1761">The element content cannot be converted to a single-precision floating-point number.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-1762">引数に <see langword="null" /> を渡してメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1762">The method is called with <see langword="null" /> arguments.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3bb28-1763">指定されたローカル名と名前空間 URI は、現在読み取り中の要素と一致しません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1763">The specified local name and namespace URI do not match that of the current element being read.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsInt">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1764">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1764">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1765">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1765">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span></span></exception>
        <summary><span data-ttu-id="3bb28-1766">現在の要素を読み取り、その内容を 32 ビット符号付き整数として返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1766">Reads the current element and returns the contents as a 32-bit signed integer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsInt">
      <MemberSignature Language="C#" Value="public virtual int ReadElementContentAsInt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadElementContentAsInt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsInt" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsInt () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadElementContentAsInt();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1767">現在の要素を読み取り、その内容を 32 ビット符号付き整数として返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1767">Reads the current element and returns the contents as a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1768">32 ビット符号付き整数としての要素の内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1768">The element content as a 32-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1769">このメソッドは、開始タグと要素の内容を読み込んで、リーダーが、終了要素タグを越えて移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1769">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3bb28-1770">エンティティを展開し、処理命令とコメントは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1770">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3bb28-1771">要素には、単純な内容だけを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1771">The element can only contain simple content.</span></span> <span data-ttu-id="3bb28-1772">つまり、子要素を持つそのことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1772">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1773">コンテンツが入力した場合は`xsd:integer`リーダーは、ボックス化解除された 32 ビット符号付き整数を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1773">If the content is typed `xsd:integer`, the reader returns an unboxed 32-bit signed integer.</span></span> <span data-ttu-id="3bb28-1774">コンテンツの型指定されていない場合`xsd:integer`、リーダーが、によって定義されたルールに従って 32 ビット符号付き整数に変換しようとしています。、 [W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1774">If the content is not typed `xsd:integer`, the reader attempts to convert it to a 32-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3bb28-1775">詳細については、<xref:System.Xml.XmlReader> のリファレンス ページの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1775">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1776">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1776">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1777">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1777">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1778">現在の要素には、子要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1778">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1779">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-1779">-or-</span></span>  
  
 <span data-ttu-id="3bb28-1780">要素のコンテンツを 32 ビット符号付き整数に変換できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1780">The element content cannot be converted to a 32-bit signed integer.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-1781">引数に <see langword="null" /> を渡してメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1781">The method is called with <see langword="null" /> arguments.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsInt">
      <MemberSignature Language="C#" Value="public virtual int ReadElementContentAsInt (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadElementContentAsInt(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsInt (localName As String, namespaceURI As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadElementContentAsInt(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="3bb28-1782">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1782">The local name of the element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="3bb28-1783">要素の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1783">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="3bb28-1784">指定されたローカル名と名前空間 URI が現在の要素のものと一致することを確認し、現在の要素を読み込んで内容を 32 ビット符号付き整数として返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1784">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1785">32 ビット符号付き整数としての要素の内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1785">The element content as a 32-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1786">このメソッドは、開始タグと要素の内容を読み込んで、リーダーが、終了要素タグを越えて移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1786">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3bb28-1787">エンティティを展開し、処理命令とコメントは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1787">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3bb28-1788">要素には、単純な内容だけを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1788">The element can only contain simple content.</span></span> <span data-ttu-id="3bb28-1789">つまり、子要素を持つそのことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1789">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1790">コンテンツが入力した場合は`xsd:integer`リーダーは、ボックス化解除された 32 ビット符号付き整数を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1790">If the content is typed `xsd:integer`, the reader returns an unboxed 32-bit signed integer.</span></span> <span data-ttu-id="3bb28-1791">コンテンツの型指定されていない場合`xsd:integer`、リーダーが、によって定義されたルールに従って 32 ビット符号付き整数に変換しようとしています。、 [W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1791">If the content is not typed `xsd:integer`, the reader attempts to convert it to a 32-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3bb28-1792">詳細については、<xref:System.Xml.XmlReader> のリファレンス ページの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1792">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1793">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1793">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1794">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1794">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1795">現在の要素には、子要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1795">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1796">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-1796">-or-</span></span>  
  
 <span data-ttu-id="3bb28-1797">要素のコンテンツを 32 ビット符号付き整数に変換できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1797">The element content cannot be converted to a 32-bit signed integer.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-1798">引数に <see langword="null" /> を渡してメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1798">The method is called with <see langword="null" /> arguments.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3bb28-1799">指定されたローカル名と名前空間 URI は、現在読み取り中の要素と一致しません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1799">The specified local name and namespace URI do not match that of the current element being read.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsLong">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1800">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1800">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1801">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1801">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span></span></exception>
        <summary><span data-ttu-id="3bb28-1802">現在の要素を読み取り、その内容を 64 ビット符号付き整数として返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1802">Reads the current element and returns the contents as a 64-bit signed integer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsLong">
      <MemberSignature Language="C#" Value="public virtual long ReadElementContentAsLong ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ReadElementContentAsLong() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsLong" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsLong () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long ReadElementContentAsLong();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1803">現在の要素を読み取り、その内容を 64 ビット符号付き整数として返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1803">Reads the current element and returns the contents as a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1804">64 ビット符号付き整数としての要素の内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1804">The element content as a 64-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1805">このメソッドは、開始タグと要素の内容を読み込んで、リーダーが、終了要素タグを越えて移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1805">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3bb28-1806">エンティティを展開し、処理命令とコメントは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1806">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3bb28-1807">要素には、単純な内容だけを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1807">The element can only contain simple content.</span></span> <span data-ttu-id="3bb28-1808">つまり、子要素を持つそのことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1808">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1809">コンテンツが入力した場合は`xsd:long`リーダーは、ボックス化解除された 64 ビット符号付き整数を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1809">If the content is typed `xsd:long`, the reader returns an unboxed 64-bit signed integer.</span></span> <span data-ttu-id="3bb28-1810">コンテンツの型指定されていない場合`xsd:long`、リーダーが、によって定義されたルールに従って 64 ビット符号付き整数に変換しようとしています。、 [W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1810">If the content is not typed `xsd:long`, the reader attempts to convert it to a 64-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3bb28-1811">詳細については、<xref:System.Xml.XmlReader> のリファレンス ページの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1811">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-1812">次の例では、<xref:System.Xml.XmlReader.ReadElementContentAsLong%2A>の内容を読み取るためのメソッド、`longValue`要素。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1812">The following example uses the <xref:System.Xml.XmlReader.ReadElementContentAsLong%2A> method to read the content of the `longValue` element.</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#3)]
 [!code-vb[XmlReader.ReadElementContentAs#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#3)]  
  
 <span data-ttu-id="3bb28-1813">この例は、`dataFile.xml` ファイルを入力として使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1813">The example uses the `dataFile.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1814">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1814">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1815">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1815">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1816">現在の要素には、子要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1816">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1817">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-1817">-or-</span></span>  
  
 <span data-ttu-id="3bb28-1818">要素の内容を 64 ビット符号付き整数に変換できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1818">The element content cannot be converted to a 64-bit signed integer.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-1819">引数に <see langword="null" /> を渡してメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1819">The method is called with <see langword="null" /> arguments.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsLong">
      <MemberSignature Language="C#" Value="public virtual long ReadElementContentAsLong (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ReadElementContentAsLong(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsLong (localName As String, namespaceURI As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long ReadElementContentAsLong(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="3bb28-1820">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1820">The local name of the element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="3bb28-1821">要素の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1821">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="3bb28-1822">指定されたローカル名と名前空間 URI が現在の要素のものと一致することを確認し、現在の要素を読み込んで内容を 64 ビット符号付き整数として返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1822">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1823">64 ビット符号付き整数としての要素の内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1823">The element content as a 64-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1824">このメソッドは、開始タグと要素の内容を読み込んで、リーダーが、終了要素タグを越えて移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1824">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3bb28-1825">エンティティを展開し、処理命令とコメントは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1825">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3bb28-1826">要素には、単純な内容だけを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1826">The element can only contain simple content.</span></span> <span data-ttu-id="3bb28-1827">つまり、子要素を持つそのことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1827">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1828">コンテンツが入力した場合は`xsd:long`リーダーは、ボックス化解除された 64 ビット符号付き整数を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1828">If the content is typed `xsd:long`, the reader returns an unboxed 64-bit signed integer.</span></span> <span data-ttu-id="3bb28-1829">コンテンツの型指定されていない場合`xsd:long`、リーダーが、によって定義されたルールに従って 64 ビット符号付き整数に変換しようとしています。、 [W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1829">If the content is not typed `xsd:long`, the reader attempts to convert it to a 64-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3bb28-1830">詳細については、<xref:System.Xml.XmlReader> のリファレンス ページの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1830">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1831">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1831">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1832">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1832">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1833">現在の要素には、子要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1833">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1834">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-1834">-or-</span></span>  
  
 <span data-ttu-id="3bb28-1835">要素の内容を 64 ビット符号付き整数に変換できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1835">The element content cannot be converted to a 64-bit signed integer.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-1836">引数に <see langword="null" /> を渡してメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1836">The method is called with <see langword="null" /> arguments.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3bb28-1837">指定されたローカル名と名前空間 URI は、現在読み取り中の要素と一致しません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1837">The specified local name and namespace URI do not match that of the current element being read.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsObject">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1838">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1838">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1839">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1839">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span></span></exception>
        <summary><span data-ttu-id="3bb28-1840">現在の要素を読み取り、そのコンテンツを <see cref="T:System.Object" /> として返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1840">Reads the current element and returns the contents as an <see cref="T:System.Object" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsObject">
      <MemberSignature Language="C#" Value="public virtual object ReadElementContentAsObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadElementContentAsObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadElementContentAsObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1841">現在の要素を読み取り、そのコンテンツを <see cref="T:System.Object" /> として返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1841">Reads the current element and returns the contents as an <see cref="T:System.Object" />.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1842">最も適切な型のボックス化された共通言語ランタイム (CLR) オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1842">A boxed common language runtime (CLR) object of the most appropriate type.</span></span> <span data-ttu-id="3bb28-1843"><see cref="P:System.Xml.XmlReader.ValueType" /> プロパティは、適切な CLR 型を判断します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1843">The <see cref="P:System.Xml.XmlReader.ValueType" /> property determines the appropriate CLR type.</span></span> <span data-ttu-id="3bb28-1844">内容がリスト型として型指定されている場合、このメソッドは適切な型のボックス化されたオブジェクトの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1844">If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1845">このメソッドは、開始タグと要素の内容を読み込んで、リーダーが、終了要素タグを越えて移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1845">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3bb28-1846">エンティティを展開し、処理命令とコメントは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1846">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3bb28-1847">要素には、単純な内容だけを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1847">The element can only contain simple content.</span></span> <span data-ttu-id="3bb28-1848">つまり、子要素を持つそのことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1848">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1849">詳細については、の「解説」セクションを参照してください、<xref:System.Xml.XmlReader>リファレンス ページと[W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1849">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3bb28-1850">このメソッドの非同期バージョンは、<xref:System.Xml.XmlReader.ReadElementContentAsObjectAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1850">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadElementContentAsObjectAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-1851">次の例の内容を読み取るメソッドを使用して、`price`ノード。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1851">The following example uses the method to read the content of the `price` node.</span></span> <span data-ttu-id="3bb28-1852">リーダーは、スキーマ内の情報を使用して、コンテンツを正しいデータ型にマップします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1852">The reader uses the information in the schema to map the content to the correct data type.</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#6)]
 [!code-vb[XmlReader.ReadElementContentAs#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#6)]  
  
 <span data-ttu-id="3bb28-1853">この例では、入力として次の 2 つのファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1853">The example uses the following two files as input.</span></span>  
  
 `item.xml`  
  
 [!code-xml[XmlReader.ReadElementContentAs#11](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/item.xml#11)]  
  
 `item.xsd`  
  
 [!code-xml[XmlReader.ReadElementContentAs#12](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/item.xsd#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1854">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1854">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1855">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1855">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1856">現在の要素には、子要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1856">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1857">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-1857">-or-</span></span>  
  
 <span data-ttu-id="3bb28-1858">要素のコンテンツを要求された型に変換できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1858">The element content cannot be converted to the requested type</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-1859">引数に <see langword="null" /> を渡してメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1859">The method is called with <see langword="null" /> arguments.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsObject">
      <MemberSignature Language="C#" Value="public virtual object ReadElementContentAsObject (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadElementContentAsObject(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsObject (localName As String, namespaceURI As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadElementContentAsObject(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="3bb28-1860">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1860">The local name of the element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="3bb28-1861">要素の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1861">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="3bb28-1862">指定されたローカル名と名前空間 URI が現在の要素のものと一致することを確認し、現在の要素を読み取って、コンテンツを <see cref="T:System.Object" /> として返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1862">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as an <see cref="T:System.Object" />.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1863">最も適切な型のボックス化された共通言語ランタイム (CLR) オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1863">A boxed common language runtime (CLR) object of the most appropriate type.</span></span> <span data-ttu-id="3bb28-1864"><see cref="P:System.Xml.XmlReader.ValueType" /> プロパティは、適切な CLR 型を判断します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1864">The <see cref="P:System.Xml.XmlReader.ValueType" /> property determines the appropriate CLR type.</span></span> <span data-ttu-id="3bb28-1865">内容がリスト型として型指定されている場合、このメソッドは適切な型のボックス化されたオブジェクトの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1865">If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1866">このメソッドは、開始タグと要素の内容を読み込んで、リーダーが、終了要素タグを越えて移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1866">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3bb28-1867">エンティティを展開し、処理命令とコメントは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1867">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3bb28-1868">要素には、単純な内容だけを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1868">The element can only contain simple content.</span></span> <span data-ttu-id="3bb28-1869">つまり、子要素を持つそのことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1869">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1870">詳細については、の「解説」セクションを参照してください、<xref:System.Xml.XmlReader>リファレンス ページと[W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1870">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1871">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1871">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1872">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1872">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1873">現在の要素には、子要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1873">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1874">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-1874">-or-</span></span>  
  
 <span data-ttu-id="3bb28-1875">要素のコンテンツを要求された型に変換できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1875">The element content cannot be converted to the requested type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-1876">引数に <see langword="null" /> を渡してメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1876">The method is called with <see langword="null" /> arguments.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3bb28-1877">指定されたローカル名と名前空間 URI は、現在読み取り中の要素と一致しません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1877">The specified local name and namespace URI do not match that of the current element being read.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsObjectAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;object&gt; ReadElementContentAsObjectAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ReadElementContentAsObjectAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsObjectAsync () As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ ReadElementContentAsObjectAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlReader/&lt;ReadElementContentAsObjectAsync&gt;c__async2))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1878">現在の要素を非同期に読み取り、そのコンテンツを <see cref="T:System.Object" /> として返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1878">Asynchronously reads the current element and returns the contents as an <see cref="T:System.Object" />.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1879">最も適切な型のボックス化された共通言語ランタイム (CLR) オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1879">A boxed common language runtime (CLR) object of the most appropriate type.</span></span> <span data-ttu-id="3bb28-1880"><see cref="P:System.Xml.XmlReader.ValueType" /> プロパティは、適切な CLR 型を判断します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1880">The <see cref="P:System.Xml.XmlReader.ValueType" /> property determines the appropriate CLR type.</span></span> <span data-ttu-id="3bb28-1881">内容がリスト型として型指定されている場合、このメソッドは適切な型のボックス化されたオブジェクトの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1881">If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1882">これは、非同期バージョンの<xref:System.Xml.XmlReader.ReadElementContentAsObject%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1882">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadElementContentAsObject%2A>, with the same functionality.</span></span> <span data-ttu-id="3bb28-1883">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlReaderSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1883">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1884"><see cref="P:System.Xml.XmlReaderSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlReader" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1884">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="3bb28-1885">この場合、「非同期メソッドを使用する場合、XmlReaderSettings.Async を True に設定します」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1885">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsString">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1886">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1886">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1887">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1887">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span></span></exception>
        <summary><span data-ttu-id="3bb28-1888">現在の要素を読み取り、そのコンテンツを <see cref="T:System.String" /> オブジェクトとして返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1888">Reads the current element and returns the contents as a <see cref="T:System.String" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsString">
      <MemberSignature Language="C#" Value="public virtual string ReadElementContentAsString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadElementContentAsString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadElementContentAsString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1889">現在の要素を読み取り、そのコンテンツを <see cref="T:System.String" /> オブジェクトとして返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1889">Reads the current element and returns the contents as a <see cref="T:System.String" /> object.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1890">コンテンツの要素、<see cref="T:System.String" />オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1890">The element content as a <see cref="T:System.String" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1891">このメソッドは、開始タグと要素の内容を読み込んで、リーダーが、終了要素タグを越えて移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1891">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3bb28-1892">エンティティを展開し、処理命令とコメントは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1892">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3bb28-1893">要素には、単純な内容だけを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1893">The element can only contain simple content.</span></span> <span data-ttu-id="3bb28-1894">つまり、子要素を持つそのことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1894">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1895">詳細については、の「解説」セクションを参照してください、<xref:System.Xml.XmlReader>リファレンス ページと[W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1895">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3bb28-1896">このメソッドの非同期バージョンは、<xref:System.Xml.XmlReader.ReadElementContentAsStringAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1896">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadElementContentAsStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-1897">次の例を読み取り、`stringValue`要素 (コメントを無視し、処理命令) テキストの内容を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1897">The following example reads the `stringValue` element and returns the text content (ignoring the comment and processing instruction).</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#1)]
 [!code-vb[XmlReader.ReadElementContentAs#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#1)]  
  
 <span data-ttu-id="3bb28-1898">この例は、`dataFile.xml` ファイルを入力として使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1898">The example uses the `dataFile.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1899">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1899">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1900">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1900">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1901">現在の要素には、子要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1901">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1902">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-1902">-or-</span></span>  
  
 <span data-ttu-id="3bb28-1903">要素のコンテンツを <see cref="T:System.String" /> オブジェクトに変換できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1903">The element content cannot be converted to a <see cref="T:System.String" /> object.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-1904">引数に <see langword="null" /> を渡してメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1904">The method is called with <see langword="null" /> arguments.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsString">
      <MemberSignature Language="C#" Value="public virtual string ReadElementContentAsString (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadElementContentAsString(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsString (localName As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadElementContentAsString(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="3bb28-1905">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1905">The local name of the element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="3bb28-1906">要素の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1906">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="3bb28-1907">指定されたローカル名と名前空間 URI が現在の要素のものと一致することを確認し、現在の要素を読み取って、コンテンツを <see cref="T:System.String" /> オブジェクトとして返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1907">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <see cref="T:System.String" /> object.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1908">コンテンツの要素、<see cref="T:System.String" />オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1908">The element content as a <see cref="T:System.String" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1909">このメソッドは、開始タグと要素の内容を読み込んで、リーダーが、終了要素タグを越えて移動します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1909">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3bb28-1910">エンティティを展開し、処理命令とコメントは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1910">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3bb28-1911">要素には、単純な内容だけを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1911">The element can only contain simple content.</span></span> <span data-ttu-id="3bb28-1912">つまり、子要素を持つそのことはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1912">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1913">詳細については、の「解説」セクションを参照してください、<xref:System.Xml.XmlReader>リファレンス ページと[W3C XML Schema Part 2: データ型](http://go.microsoft.com/fwlink/?LinkId=4871)推奨します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1913">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-1914">次の例を読み取り、`stringValue`要素 (コメントを無視し、処理命令) テキストの内容を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1914">The following example reads the `stringValue` element and returns the text content (ignoring the comment and processing instruction).</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#2)]
 [!code-vb[XmlReader.ReadElementContentAs#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#2)]  
  
 <span data-ttu-id="3bb28-1915">この例は、`dataFile.xml` ファイルを入力として使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1915">The example uses the `dataFile.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1916">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1916">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1917">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1917">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1918">現在の要素には、子要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1918">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="3bb28-1919">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-1919">-or-</span></span>  
  
 <span data-ttu-id="3bb28-1920">要素のコンテンツを <see cref="T:System.String" /> オブジェクトに変換できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1920">The element content cannot be converted to a <see cref="T:System.String" /> object.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-1921">引数に <see langword="null" /> を渡してメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1921">The method is called with <see langword="null" /> arguments.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3bb28-1922">指定されたローカル名と名前空間 URI は、現在読み取り中の要素と一致しません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1922">The specified local name and namespace URI do not match that of the current element being read.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsStringAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadElementContentAsStringAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadElementContentAsStringAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsStringAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsStringAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadElementContentAsStringAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlReader/&lt;ReadElementContentAsStringAsync&gt;c__async3))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1923">現在の要素を非同期に読み取り、そのコンテンツを <see cref="T:System.String" /> オブジェクトとして返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1923">Asynchronously reads the current element and returns the contents as a <see cref="T:System.String" /> object.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1924">コンテンツの要素、<see cref="T:System.String" />オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1924">The element content as a <see cref="T:System.String" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1925">これは、非同期バージョンの<xref:System.Xml.XmlReader.ReadElementContentAsString%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1925">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadElementContentAsString%2A>, with the same functionality.</span></span> <span data-ttu-id="3bb28-1926">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlReaderSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1926">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1927"><see cref="P:System.Xml.XmlReaderSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlReader" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1927">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="3bb28-1928">この場合、「非同期メソッドを使用する場合、XmlReaderSettings.Async を True に設定します」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1928">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementString">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1929">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1929">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1930">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1930">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="3bb28-1931">単純なテキストのみの要素を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1931">Reads the simple text-only elements.</span></span> <span data-ttu-id="3bb28-1932">ただし、<see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /> メソッドを代わりに使用するほうが、この操作を簡単に処理できるため、こちらの方法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1932">However, we recommend that you use the <see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /> method instead, because it provides a more straightforward way to handle this operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1933">使用することをお勧め、<xref:System.Xml.XmlReader.ReadElementContentAsString%2A>テキスト要素を読み取る方法です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1933">We recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString%2A> method to read a text element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementString">
      <MemberSignature Language="C#" Value="public virtual string ReadElementString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadElementString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadElementString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1934">テキストのみの要素を読みます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1934">Reads a text-only element.</span></span> <span data-ttu-id="3bb28-1935">ただし、<see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /> メソッドを代わりに使用するほうが、この操作を簡単に処理できるため、こちらの方法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1935">However, we recommend that you use the <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /> method instead, because it provides a more straightforward way to handle this operation.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1936">読み取られた要素内に格納されているテキスト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1936">The text contained in the element that was read.</span></span> <span data-ttu-id="3bb28-1937">要素が空の場合は、空の文字列。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1937">An empty string if the element is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1938">使用することをお勧め、<xref:System.Xml.XmlReader.ReadElementContentAsString>テキスト要素を読み取る方法です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1938">We recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString> method to read a text element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1939">次のコンテンツ ノードが開始タグでないか、見つかった要素に単純なテキスト値が格納されていません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1939">The next content node is not a start tag; or the element found does not contain a simple text value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1940">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1940">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1941">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1941">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementString">
      <MemberSignature Language="C#" Value="public virtual string ReadElementString (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadElementString(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementString (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadElementString(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3bb28-1942">確認対象の名前。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1942">The name to check.</span></span></param>
        <summary><span data-ttu-id="3bb28-1943">テキストだけの要素を読み取る前に、見つかった要素の <see cref="P:System.Xml.XmlReader.Name" /> プロパティが、指定した文字列と一致することを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1943">Checks that the <see cref="P:System.Xml.XmlReader.Name" /> property of the element found matches the given string before reading a text-only element.</span></span> <span data-ttu-id="3bb28-1944">ただし、<see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /> メソッドを代わりに使用するほうが、この操作を簡単に処理できるため、こちらの方法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1944">However, we recommend that you use the <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /> method instead, because it provides a more straightforward way to handle this operation.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1945">読み取られた要素内に格納されているテキスト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1945">The text contained in the element that was read.</span></span> <span data-ttu-id="3bb28-1946">要素が空の場合は、空の文字列。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1946">An empty string if the element is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1947">使用することをお勧め、<xref:System.Xml.XmlReader.ReadElementContentAsString>テキスト要素を読み取る方法です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1947">We recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString> method to read a text element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1948">次のコンテンツ ノードが開始タグでない、要素 <see langword="Name" /> が指定した引数と一致しない、または見つかった要素に単純なテキスト値が含まれていない場合。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1948">If the next content node is not a start tag; if the element <see langword="Name" /> does not match the given argument; or if the element found does not contain a simple text value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1949">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1949">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1950">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1950">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementString">
      <MemberSignature Language="C#" Value="public virtual string ReadElementString (string localname, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadElementString(string localname, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementString (localname As String, ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadElementString(System::String ^ localname, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localname" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localname"><span data-ttu-id="3bb28-1951">確認対象のローカル名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1951">The local name to check.</span></span></param>
        <param name="ns"><span data-ttu-id="3bb28-1952">確認対象の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1952">The namespace URI to check.</span></span></param>
        <summary><span data-ttu-id="3bb28-1953">テキストだけの要素を読み取る前に、見つかった要素の <see cref="P:System.Xml.XmlReader.LocalName" /> プロパティと <see cref="P:System.Xml.XmlReader.NamespaceURI" /> プロパティが、指定した文字列と一致することを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1953">Checks that the <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> properties of the element found matches the given strings before reading a text-only element.</span></span> <span data-ttu-id="3bb28-1954">ただし、<see cref="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" /> メソッドを代わりに使用するほうが、この操作を簡単に処理できるため、こちらの方法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1954">However, we recommend that you use the <see cref="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" /> method instead, because it provides a more straightforward way to handle this operation.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1955">読み取られた要素内に格納されているテキスト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1955">The text contained in the element that was read.</span></span> <span data-ttu-id="3bb28-1956">要素が空の場合は、空の文字列。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1956">An empty string if the element is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1957">使用することをお勧め、<xref:System.Xml.XmlReader.ReadElementContentAsString%28System.String%2CSystem.String%29>テキスト要素を読み取る方法です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1957">We recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString%28System.String%2CSystem.String%29> method to read a text element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1958">次のコンテンツ ノードが開始タグでない、要素 <see langword="LocalName" /> または <see langword="NamespaceURI" /> が指定した引数と一致しない、または見つかった要素に単純なテキスト値が含まれていない場合。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1958">If the next content node is not a start tag; if the element <see langword="LocalName" /> or <see langword="NamespaceURI" /> do not match the given arguments; or if the element found does not contain a simple text value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1959">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1959">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1960">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1960">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadEndElement">
      <MemberSignature Language="C#" Value="public virtual void ReadEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReadEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadEndElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1961">現在のコンテンツ ノードが終了タグで、リーダーを次のノードに進めることを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1961">Checks that the current content node is an end tag and advances the reader to the next node.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3bb28-1962">次の例では、各要素のテキストの内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1962">The following example displays the text content of each element.</span></span>  
  
 [!code-csharp[XmlReaderBasic#11](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#11)]
 [!code-vb[XmlReaderBasic#11](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#11)]  
  
 <span data-ttu-id="3bb28-1963">この例では、`book3.xml`ファイル。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1963">The example uses the `book3.xml` file.</span></span>  
  
 [!code-xml[XML_Core_Files#6](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/book3.xml#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1964">現在のノードが終了タグでないか、入力ストリームで正しくない XML が検出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1964">The current node is not an end tag or if incorrect XML is encountered in the input stream.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1965">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1965">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1966">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1966">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.ReadStartElement" />
      </Docs>
    </Member>
    <Member MemberName="ReadInnerXml">
      <MemberSignature Language="C#" Value="public virtual string ReadInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadInnerXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadInnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadInnerXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadInnerXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-1967">派生クラスでオーバーライドされると、マークアップを含むすべての内容を文字列として読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1967">When overridden in a derived class, reads all the content, including markup, as a string.</span></span></summary>
        <returns><span data-ttu-id="3bb28-1968">現在のノード内の、マークアップを含むすべての XML の内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1968">All the XML content, including markup, in the current node.</span></span> <span data-ttu-id="3bb28-1969">現在のノードが子を持っていない場合は、空の文字列が返されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1969">If the current node has no children, an empty string is returned.</span></span>  
  
 <span data-ttu-id="3bb28-1970">現在のノードが要素でも属性でもない場合は、空の文字列が返されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1970">If the current node is neither an element nor attribute, an empty string is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-1971">このメソッドは、マークアップを含め、現在のノードのすべてのコンテンツを返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1971">This method returns all the content of the current node including the markup.</span></span> <span data-ttu-id="3bb28-1972">現在のノード (開始タグ) と対応する終了ノード (終了タグ) は返されません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1972">The current node (start tag) and corresponding end node (end tag) are not returned.</span></span> <span data-ttu-id="3bb28-1973">たとえば、次のように、次があった場合。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1973">For example, if you had the following:</span></span>  
  
```xml  
<node>  
 this <child id="123"/>  
</node>  
```  
  
 <span data-ttu-id="3bb28-1974">`ReadInnerXml` の場合、`this <child id="123"/>` が返されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1974">`ReadInnerXml` returns `this <child id="123"/>`</span></span>  
  
 <span data-ttu-id="3bb28-1975">このメソッドは、次のように要素および属性ノードを処理します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1975">This method handles element and attribute nodes in the following manner:</span></span>  
  
|<span data-ttu-id="3bb28-1976">ノード型</span><span class="sxs-lookup"><span data-stu-id="3bb28-1976">Node type</span></span>|<span data-ttu-id="3bb28-1977">呼び出し前に、の位置</span><span class="sxs-lookup"><span data-stu-id="3bb28-1977">Position before the call</span></span>|<span data-ttu-id="3bb28-1978">XML フラグメント</span><span class="sxs-lookup"><span data-stu-id="3bb28-1978">XML fragment</span></span>|<span data-ttu-id="3bb28-1979">戻り値</span><span class="sxs-lookup"><span data-stu-id="3bb28-1979">Return value</span></span>|<span data-ttu-id="3bb28-1980">呼び出し後の位置</span><span class="sxs-lookup"><span data-stu-id="3bb28-1980">Position after the call</span></span>|  
|---------------|------------------------------|------------------|------------------|-----------------------------|  
|`Element`|<span data-ttu-id="3bb28-1981">`item1` 開始タグ上。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1981">On the `item1` start tag.</span></span>|<span data-ttu-id="3bb28-1982">\<item1>text1\</item1>\<item2>text2\</item2></span><span class="sxs-lookup"><span data-stu-id="3bb28-1982">\<item1>text1\</item1>\<item2>text2\</item2></span></span>|<span data-ttu-id="3bb28-1983">text1</span><span class="sxs-lookup"><span data-stu-id="3bb28-1983">text1</span></span>|<span data-ttu-id="3bb28-1984">`item2` 開始タグ上。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1984">On the `item2` start tag.</span></span>|  
|`Attribute`|<span data-ttu-id="3bb28-1985">`attr1` 属性ノード上。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1985">On the `attr1` attribute node.</span></span>|<span data-ttu-id="3bb28-1986">\<項目 attr1"val1"attr2 を = ="val2"> テキスト\<項目/></span><span class="sxs-lookup"><span data-stu-id="3bb28-1986">\<item attr1="val1" attr2="val2">text\</item></span></span>|<span data-ttu-id="3bb28-1987">val1</span><span class="sxs-lookup"><span data-stu-id="3bb28-1987">val1</span></span>|<span data-ttu-id="3bb28-1988">`attr1` 属性ノード上に留まる。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1988">Remains on the `attr1` attribute node.</span></span>|  
  
 <span data-ttu-id="3bb28-1989">リーダーがリーフ ノード上にある場合、`ReadInnerXml` の呼び出しは <xref:System.Xml.XmlReader.Read%2A> と同じです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1989">If the reader is positioned on a leaf node, calling `ReadInnerXml` is equivalent to calling <xref:System.Xml.XmlReader.Read%2A>.</span></span> <span data-ttu-id="3bb28-1990">このメソッドを返します`String.Empty`(の場合を除く属性ノード、属性の値が返される場合)。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1990">The method returns `String.Empty` (except for attribute nodes, in which case the value of the attribute is returned).</span></span>  
  
 <span data-ttu-id="3bb28-1991">このメソッドは、整形式の XML を確認します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1991">This method checks for well-formed XML.</span></span> <span data-ttu-id="3bb28-1992">場合`ReadInnerXml`から呼び出される、 <xref:System.Xml.XmlValidatingReader>、また、このメソッドが返されるコンテンツを検証します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1992">If `ReadInnerXml` is called from an <xref:System.Xml.XmlValidatingReader>, this method also validates the content returned.</span></span>  
  
 <span data-ttu-id="3bb28-1993">実装されている、 <xref:System.Xml.XmlNodeReader>、<xref:System.Xml.XmlTextReader>と`XmlValidatingReader`クラス、`ReadOuterXml`メソッドは名前空間を認識します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1993">As implemented in the <xref:System.Xml.XmlNodeReader>, <xref:System.Xml.XmlTextReader> and `XmlValidatingReader` classes the `ReadOuterXml` method is namespace aware.</span></span>  
  
 <span data-ttu-id="3bb28-1994">このメソッドの非同期バージョンは、<xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1994">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-1995">次の例を比較して、`ReadInnerXml`と<xref:System.Xml.XmlReader.ReadOuterXml%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1995">The following example compares the `ReadInnerXml` and <xref:System.Xml.XmlReader.ReadOuterXml%2A> methods.</span></span>  
  
 [!code-csharp[XmlReaderBasic#12](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#12)]
 [!code-vb[XmlReaderBasic#12](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#12)]  
  
 <span data-ttu-id="3bb28-1996">この例では`2books.xml`ファイルを入力として。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1996">The example uses `2books.xml` file as input.</span></span>  
  
 [!code-xml[XML_Core_Files#7](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/2books.xml#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-1997">XML が整形式ではありませんでした。または、XML の解析中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1997">The XML was not well-formed, or an error occurred while parsing the XML.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-1998">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1998">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-1999">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-1999">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadInnerXmlAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadInnerXmlAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadInnerXmlAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadInnerXmlAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadInnerXmlAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadInnerXmlAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlReader/&lt;ReadInnerXmlAsync&gt;c__async6))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-2000">マークアップを含むすべてのコンテンツを文字列として非同期に読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2000">Asynchronously reads all the content, including markup, as a string.</span></span></summary>
        <returns><span data-ttu-id="3bb28-2001">現在のノード内の、マークアップを含むすべての XML の内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2001">All the XML content, including markup, in the current node.</span></span> <span data-ttu-id="3bb28-2002">現在のノードが子を持っていない場合は、空の文字列が返されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2002">If the current node has no children, an empty string is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-2003">これは、非同期バージョンの<xref:System.Xml.XmlReader.ReadInnerXml%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2003">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadInnerXml%2A>, with the same functionality.</span></span> <span data-ttu-id="3bb28-2004">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlReaderSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2004">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2005"><see cref="P:System.Xml.XmlReaderSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlReader" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2005">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="3bb28-2006">この場合、「非同期メソッドを使用する場合、XmlReaderSettings.Async を True に設定します」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2006">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadOuterXml">
      <MemberSignature Language="C#" Value="public virtual string ReadOuterXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadOuterXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadOuterXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadOuterXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadOuterXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-2007">派生クラスでオーバーライドされると、このノードとそのすべての子を表す内容 (マークアップを含む) を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2007">When overridden in a derived class, reads the content, including markup, representing this node and all its children.</span></span></summary>
        <returns><span data-ttu-id="3bb28-2008">リーダーが要素ノードまたは属性ノードに配置されている場合、このメソッドは、現在のノードおよびそのすべての子の、マークアップを含む、XML の内容をすべて返します。それ以外の場合は、空の文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2008">If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-2009">このメソッドはのような<xref:System.Xml.XmlReader.ReadInnerXml%2A>点を除いて、開始タグと終了タグも返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2009">This method is similar to <xref:System.Xml.XmlReader.ReadInnerXml%2A> except it also returns the start and end tags.</span></span>  
  
 <span data-ttu-id="3bb28-2010">このメソッドは、次のように要素および属性ノードを処理します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2010">This method handles element and attribute nodes in the following manner:</span></span>  
  
|<span data-ttu-id="3bb28-2011">ノード型</span><span class="sxs-lookup"><span data-stu-id="3bb28-2011">Node type</span></span>|<span data-ttu-id="3bb28-2012">呼び出し前に、の位置</span><span class="sxs-lookup"><span data-stu-id="3bb28-2012">Position before the call</span></span>|<span data-ttu-id="3bb28-2013">XML フラグメント</span><span class="sxs-lookup"><span data-stu-id="3bb28-2013">XML fragment</span></span>|<span data-ttu-id="3bb28-2014">戻り値</span><span class="sxs-lookup"><span data-stu-id="3bb28-2014">Return value</span></span>|<span data-ttu-id="3bb28-2015">呼び出し後の位置</span><span class="sxs-lookup"><span data-stu-id="3bb28-2015">Position After the Call</span></span>|  
|---------------|------------------------------|------------------|------------------|-----------------------------|  
|`Element`|<span data-ttu-id="3bb28-2016">`item1` 開始タグ上。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2016">On the `item1` start tag.</span></span>|<span data-ttu-id="3bb28-2017">\<item1>text1\</item1>\<item2>text2\</item2></span><span class="sxs-lookup"><span data-stu-id="3bb28-2017">\<item1>text1\</item1>\<item2>text2\</item2></span></span>|<span data-ttu-id="3bb28-2018">\<item1>text1\</item1></span><span class="sxs-lookup"><span data-stu-id="3bb28-2018">\<item1>text1\</item1></span></span>|<span data-ttu-id="3bb28-2019">`item2` 開始タグ上。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2019">On the `item2` start tag.</span></span>|  
|`Attribute`|<span data-ttu-id="3bb28-2020">`attr1` 属性ノード上。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2020">On the `attr1` attribute node.</span></span>|<span data-ttu-id="3bb28-2021">\<項目 attr1"val1"attr2 を = ="val2"> テキスト\<項目/></span><span class="sxs-lookup"><span data-stu-id="3bb28-2021">\<item attr1="val1" attr2="val2">text\</item></span></span>|<span data-ttu-id="3bb28-2022">attr1"val1"を =</span><span class="sxs-lookup"><span data-stu-id="3bb28-2022">attr1="val1"</span></span>|<span data-ttu-id="3bb28-2023">`attr1` 属性ノード上に留まる。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2023">Remains on the `attr1` attribute node.</span></span>|  
  
 <span data-ttu-id="3bb28-2024">リーダーがリーフ ノード上にある場合、`ReadOuterXml` の呼び出しは <xref:System.Xml.XmlReader.Read%2A> と同じです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2024">If the reader is positioned on a leaf node, calling `ReadOuterXml` is equivalent to calling <xref:System.Xml.XmlReader.Read%2A>.</span></span> <span data-ttu-id="3bb28-2025">このメソッドを返します`String.Empty`(の場合を除く属性ノード、属性のマークアップが返される場合)。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2025">The method returns `String.Empty` (except for attribute nodes, in which case the attribute markup is returned).</span></span>  
  
 <span data-ttu-id="3bb28-2026">このメソッドは、整形式の XML を確認します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2026">This method checks for well-formed XML.</span></span> <span data-ttu-id="3bb28-2027">場合`ReadOuterXml`から呼び出される、 <xref:System.Xml.XmlValidatingReader>、このメソッドも返されるコンテンツの検証</span><span class="sxs-lookup"><span data-stu-id="3bb28-2027">If `ReadOuterXml` is called from an <xref:System.Xml.XmlValidatingReader>, this method also validates the content returned</span></span>  
  
 <span data-ttu-id="3bb28-2028">実装されている、 <xref:System.Xml.XmlNodeReader>、<xref:System.Xml.XmlTextReader>と`XmlValidatingReader`クラス、`ReadOuterXml`メソッドは名前空間を認識します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2028">As implemented in the <xref:System.Xml.XmlNodeReader>, <xref:System.Xml.XmlTextReader> and `XmlValidatingReader` classes the `ReadOuterXml` method is namespace aware.</span></span> <span data-ttu-id="3bb28-2029">次の XML テキストを指定された`<A xmlns:S="urn:1"><S:B>hello</S:B></A>`にリーダーが配置されている場合は、`S:B`開始タグ、`ReadOuterXml`返します`<S:B xmlns:S="urn:1">hello<S:B/>`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2029">Given the following XML text `<A xmlns:S="urn:1"><S:B>hello</S:B></A>`, if the reader were positioned on the `S:B` start tag, `ReadOuterXml` returns `<S:B xmlns:S="urn:1">hello<S:B/>`.</span></span>  
  
 <span data-ttu-id="3bb28-2030">このメソッドの非同期バージョンは、<xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2030">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-2031">次の例を比較して、`ReadInnerXml`と`ReadOuterXml`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2031">The following example compares the `ReadInnerXml` and `ReadOuterXml` methods.</span></span>  
  
 [!code-csharp[XmlReaderBasic#12](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#12)]
 [!code-vb[XmlReaderBasic#12](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#12)]  
  
 <span data-ttu-id="3bb28-2032">この例では`2books.xml`ファイルを入力として。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2032">The example uses `2books.xml` file as input.</span></span>  
  
 [!code-xml[XML_Core_Files#7](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/2books.xml#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-2033">XML が整形式ではありませんでした。または、XML の解析中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2033">The XML was not well-formed, or an error occurred while parsing the XML.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2034">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2034">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2035">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2035">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadOuterXmlAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadOuterXmlAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadOuterXmlAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadOuterXmlAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadOuterXmlAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadOuterXmlAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlReader/&lt;ReadOuterXmlAsync&gt;c__async8))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-2036">このノードとその子を表すコンテンツをマークアップを含めて非同期に読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2036">Asynchronously reads the content, including markup, representing this node and all its children.</span></span></summary>
        <returns><span data-ttu-id="3bb28-2037">リーダーが要素ノードまたは属性ノードに配置されている場合、このメソッドは、現在のノードおよびそのすべての子の、マークアップを含む、XML の内容をすべて返します。それ以外の場合は、空の文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2037">If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-2038">これは、非同期バージョンの<xref:System.Xml.XmlReader.ReadOuterXml%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2038">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadOuterXml%2A>, with the same functionality.</span></span> <span data-ttu-id="3bb28-2039">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlReaderSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2039">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2040"><see cref="P:System.Xml.XmlReaderSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlReader" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2040">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="3bb28-2041">この場合、「非同期メソッドを使用する場合、XmlReaderSettings.Async を True に設定します」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2041">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadStartElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2042">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2042">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2043">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2043">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span></span></exception>
        <summary><span data-ttu-id="3bb28-2044">現在のノードが要素であるか調べ、リーダーを次のノードに進めます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2044">Checks that the current node is an element and advances the reader to the next node.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadStartElement">
      <MemberSignature Language="C#" Value="public virtual void ReadStartElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadStartElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadStartElement" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReadStartElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadStartElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-2045">現在のノードが要素であるか調べ、リーダーを次のノードに進めます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2045">Checks that the current node is an element and advances the reader to the next node.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-2046">このメソッドを呼び出す<xref:System.Xml.XmlReader.IsStartElement%2A>続く<xref:System.Xml.XmlReader.Read%2A>する入力ストリームにその要素のコンテンツの位置。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2046">This method calls <xref:System.Xml.XmlReader.IsStartElement%2A> followed by <xref:System.Xml.XmlReader.Read%2A> to position you on the content of that element found in the input stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-2047">入力ストリームで、正しくない XML が検出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2047">Incorrect XML was encountered in the input stream.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2048">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2048">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2049">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2049">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.ReadEndElement" />
      </Docs>
    </Member>
    <Member MemberName="ReadStartElement">
      <MemberSignature Language="C#" Value="public virtual void ReadStartElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadStartElement(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadStartElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReadStartElement (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadStartElement(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3bb28-2050">要素の限定名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2050">The qualified name of the element.</span></span></param>
        <summary><span data-ttu-id="3bb28-2051">現在のコンテンツ ノードが、指定した <see cref="P:System.Xml.XmlReader.Name" /> を持つ要素で、リーダーを次のノードに進めることを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2051">Checks that the current content node is an element with the given <see cref="P:System.Xml.XmlReader.Name" /> and advances the reader to the next node.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-2052">このメソッドの呼び出しがへの呼び出しに対応<xref:System.Xml.XmlReader.IsStartElement%2A>への呼び出しを続けて<xref:System.Xml.XmlReader.Read%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2052">A call to this method corresponds to a call to <xref:System.Xml.XmlReader.IsStartElement%2A> followed by a call to <xref:System.Xml.XmlReader.Read%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-2053">次の例では、各要素のテキストの内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2053">The following example displays the text content of each element.</span></span>  
  
 [!code-csharp[XmlReaderBasic#11](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#11)]
 [!code-vb[XmlReaderBasic#11](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#11)]  
  
 <span data-ttu-id="3bb28-2054">この例では、`book3.xml`ファイル。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2054">The example uses the `book3.xml` file.</span></span>  
  
 [!code-xml[XML_Core_Files#6](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/book3.xml#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-2055">入力ストリームで、正しくない XML が検出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2055">Incorrect XML was encountered in the input stream.</span></span>  
  
 <span data-ttu-id="3bb28-2056">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-2056">-or-</span></span>  
  
 <span data-ttu-id="3bb28-2057">要素の <see cref="P:System.Xml.XmlReader.Name" /> が指定した <paramref name="name" /> と一致しません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2057">The <see cref="P:System.Xml.XmlReader.Name" /> of the element does not match the given <paramref name="name" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2058">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2058">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2059">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2059">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.ReadEndElement" />
      </Docs>
    </Member>
    <Member MemberName="ReadStartElement">
      <MemberSignature Language="C#" Value="public virtual void ReadStartElement (string localname, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadStartElement(string localname, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReadStartElement (localname As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadStartElement(System::String ^ localname, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localname" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localname"><span data-ttu-id="3bb28-2060">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2060">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="3bb28-2061">要素の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2061">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="3bb28-2062">現在のコンテンツ ノードが、指定した <see cref="P:System.Xml.XmlReader.LocalName" /> と <see cref="P:System.Xml.XmlReader.NamespaceURI" /> を持つ要素で、リーダーを次のノードに進めることを確認します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2062">Checks that the current content node is an element with the given <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> and advances the reader to the next node.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-2063">このメソッドの呼び出しがへの呼び出しに対応<xref:System.Xml.XmlReader.IsStartElement%2A>への呼び出しを続けて<xref:System.Xml.XmlReader.Read%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2063">A call to this method corresponds to a call to <xref:System.Xml.XmlReader.IsStartElement%2A> followed by a call to <xref:System.Xml.XmlReader.Read%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-2064">入力ストリームで、正しくない XML が検出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2064">Incorrect XML was encountered in the input stream.</span></span>  
  
 <span data-ttu-id="3bb28-2065">- または -</span><span class="sxs-lookup"><span data-stu-id="3bb28-2065">-or-</span></span>  
  
 <span data-ttu-id="3bb28-2066">見つかった要素の <see cref="P:System.Xml.XmlReader.LocalName" /> プロパティと <see cref="P:System.Xml.XmlReader.NamespaceURI" /> プロパティが指定した引数と一致しません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2066">The <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> properties of the element found do not match the given arguments.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2067">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2067">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2068">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2068">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.ReadEndElement" />
      </Docs>
    </Member>
    <Member MemberName="ReadState">
      <MemberSignature Language="C#" Value="public abstract System.Xml.ReadState ReadState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ReadState ReadState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.ReadState" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ReadState As ReadState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::ReadState ReadState { System::Xml::ReadState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ReadState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bb28-2069">派生クラスでオーバーライドされると、リーダーの状態を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2069">When overridden in a derived class, gets the state of the reader.</span></span></summary>
        <value><span data-ttu-id="3bb28-2070">リーダーの状態を指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2070">One of the enumeration values that specifies the state of the reader.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-2071"><xref:System.Xml.XmlReader.ReadState%2A>プロパティは、次の値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2071">The <xref:System.Xml.XmlReader.ReadState%2A> property has one of the following values:</span></span>  
  
-   <span data-ttu-id="3bb28-2072"><xref:System.Xml.ReadState.Initial>、ときに、<xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2072"><xref:System.Xml.ReadState.Initial>, when the <xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType> method is called.</span></span>  
  
-   <span data-ttu-id="3bb28-2073"><xref:System.Xml.ReadState.Interactive>、ときに、<xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType>メソッドが呼び出されて、リーダーの追加のメソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2073"><xref:System.Xml.ReadState.Interactive>, when the <xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType> method has been called, and additional methods may be called on the reader.</span></span>  
  
-   <span data-ttu-id="3bb28-2074"><xref:System.Xml.ReadState.EndOfFile>、ときに、XML ドキュメントの末尾に達しているが正常にします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2074"><xref:System.Xml.ReadState.EndOfFile>, when the end of the XML document has been reached successfully.</span></span>  
  
-   <span data-ttu-id="3bb28-2075"><xref:System.Xml.ReadState.Closed>、ときに、<xref:System.Xml.XmlReader.Close%2A?displayProperty=nameWithType>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2075"><xref:System.Xml.ReadState.Closed>, when the <xref:System.Xml.XmlReader.Close%2A?displayProperty=nameWithType> method is called.</span></span>  
  
-   <span data-ttu-id="3bb28-2076"><xref:System.Xml.ReadState.Error>、ときにエラーが原因で読み取り操作を続行します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2076"><xref:System.Xml.ReadState.Error>, when an error is preventing the read operation from continuing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2077">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2077">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2078">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2078">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadString">
      <MemberSignature Language="C#" Value="public virtual string ReadString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-2079">派生クラスでオーバーライドされると、要素ノードまたはテキスト ノードの内容を文字列として読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2079">When overridden in a derived class, reads the contents of an element or text node as a string.</span></span> <span data-ttu-id="3bb28-2080">ただし、<see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /> メソッドを代わりに使用するほうが、この操作を簡単に処理できるため、こちらの方法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2080">However, we recommend that you use the <see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /> method instead, because it provides a more straightforward way to handle this operation.</span></span></summary>
        <returns><span data-ttu-id="3bb28-2081">要素の内容または空の文字列。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2081">The contents of the element or an empty string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-2082">使用することをお勧め、<xref:System.Xml.XmlReader.ReadElementContentAsString%2A>を文字列としての要素またはテキスト ノードの内容を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2082">We recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString%2A> method to read the contents of an element or text node as a string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-2083">XML の解析中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2083">An error occurred while parsing the XML.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2084">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2084">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2085">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2085">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadSubtree">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlReader ReadSubtree ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlReader ReadSubtree() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadSubtree" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadSubtree () As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlReader ^ ReadSubtree();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-2086">現在のノードおよびそのすべての子孫ノードを読み取るために使用できる、新しい <see langword="XmlReader" /> インスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2086">Returns a new <see langword="XmlReader" /> instance that can be used to read the current node, and all its descendants.</span></span></summary>
        <returns><span data-ttu-id="3bb28-2087"><see cref="F:System.Xml.ReadState.Initial" /> に設定された新しい XML リーダーのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2087">A new XML reader instance set to <see cref="F:System.Xml.ReadState.Initial" />.</span></span> <span data-ttu-id="3bb28-2088"><see cref="M:System.Xml.XmlReader.Read" /> メソッドを呼び出すと、<see cref="M:System.Xml.XmlReader.ReadSubtree" /> メソッドを呼び出す前に処理対象だったノードに新しいリーダーが配置されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2088">Calling the <see cref="M:System.Xml.XmlReader.Read" /> method positions the new reader on the node that was current before the call to the <see cref="M:System.Xml.XmlReader.ReadSubtree" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-2089"><xref:System.Xml.XmlReader.ReadSubtree%2A> 要素ノードでのみ呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2089"><xref:System.Xml.XmlReader.ReadSubtree%2A> can be called only on element nodes.</span></span> <span data-ttu-id="3bb28-2090">サブツリー全体が読み取られると、呼び出し、<xref:System.Xml.XmlReader.Read%2A>メソッドを返します。`false`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2090">When the entire sub-tree has been read, calls to the <xref:System.Xml.XmlReader.Read%2A> method returns `false`.</span></span> <span data-ttu-id="3bb28-2091">新しい XML リーダーが閉じられた時点に配置されている元の readeris、`EndElement`サブツリーのノードです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2091">When the new XML reader has been closed, the original readeris positioned on the `EndElement` node of the sub-tree.</span></span> <span data-ttu-id="3bb28-2092">したがって、呼び出した場合、<xref:System.Xml.XmlReader.ReadSubtree%2A>サブツリーは読み取りと、新しい XML リーダーにされた後、書籍要素の開始タグ上のメソッドは閉じられて、書籍要素の終了タグに元の XML リーダーが配置されています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2092">Thus, if you called the <xref:System.Xml.XmlReader.ReadSubtree%2A> method on the start tag of the book element, after the sub-tree has been read and the new XML reader has been closed, the original XML reader is positioned on the end tag of the book element.</span></span>  
  
 <span data-ttu-id="3bb28-2093">新しいリーダーが閉じられるまで、元のリーダーの操作はしないようにします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2093">You should not perform any operations on the original reader until the new reader has been closed.</span></span> <span data-ttu-id="3bb28-2094">元のリーダーの操作はサポートされず、その動作は予見できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2094">This action is not supported and can result in unpredictable behavior.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3bb28-2095"><xref:System.Xml.XmlReader.ReadSubtree%2A> Creatingcopies 扱えるいない個別に XML データのためのメソッドはありません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2095">The <xref:System.Xml.XmlReader.ReadSubtree%2A> method isn't intended for creatingcopies of the XML data that you can work with independently.</span></span> <span data-ttu-id="3bb28-2096">たまたまのでは、XML 要素を囲む境界を作成します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2096">It's designedto create a boundary around an XML element.</span></span> <span data-ttu-id="3bb28-2097">これは、処理のための別のコンポーネントにデータを渡すし、コンポーネントにアクセスできるデータの量を制限したい場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2097">This is useful if you want to pass data to another component for processing and you wish to limit how much of your data the component can access.</span></span> <span data-ttu-id="3bb28-2098">返された XML リーダーを渡す場合、<xref:System.Xml.XmlReader.ReadSubtree%2A>別のアプリケーション、アプリケーションにメソッドには、その XML 要素のみ、されません、XML ドキュメント全体がアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2098">When you pass an XML reader returned by the <xref:System.Xml.XmlReader.ReadSubtree%2A> method to another application, the application can access only that XML element, not the entire XML document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-2099"><xref:System.Xml.XmlReader.ReadSubtree%2A> メソッドを使用する方法の例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2099">The following example shows how to use the <xref:System.Xml.XmlReader.ReadSubtree%2A> method.</span></span>  
  
 [!code-csharp[XmlReaderBasic#13](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#13)]
 [!code-vb[XmlReaderBasic#13](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#13)]  
  
 <span data-ttu-id="3bb28-2100">このトピックの例を実行するのにには、次の XML データを使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2100">Use the following XML data to run the examples in this topic:</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<Books>  
  <Book>  
    <Title>A Brief History of Time</Title>  
  </Book>  
  <Book>  
    <Title>Principle Of Relativity</Title>  
  </Book>  
  <Book>  
    <Title>Victory of Reason</Title>  
  </Book>  
  <Book>  
    <Title>The Unicorn that did not Fail</Title>  
  </Book>  
  <Book>  
    <Title>Rational Ontology</Title>  
  </Book>  
  <Book>  
    <Title>The Meaning of Pizza</Title>  
  </Book>  
</Books>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2101">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2101">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2102">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2102">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToDescendant">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2103">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2103">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2104">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2104">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span></span></exception>
        <summary><span data-ttu-id="3bb28-2105"><see cref="T:System.Xml.XmlReader" /> を次に一致する子孫要素に進めます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2105">Advances the <see cref="T:System.Xml.XmlReader" /> to the next matching descendant element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToDescendant">
      <MemberSignature Language="C#" Value="public virtual bool ReadToDescendant (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadToDescendant(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadToDescendant(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToDescendant (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadToDescendant(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3bb28-2106">移動先となる要素の修飾名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2106">The qualified name of the element you wish to move to.</span></span></param>
        <summary><span data-ttu-id="3bb28-2107">指定された修飾名を使用して <see cref="T:System.Xml.XmlReader" /> を次の子孫要素に進めます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2107">Advances the <see cref="T:System.Xml.XmlReader" /> to the next descendant element with the specified qualified name.</span></span></summary>
        <returns>
          <span data-ttu-id="3bb28-2108">一致する子孫要素が見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2108"><see langword="true" /> if a matching descendant element is found; otherwise <see langword="false" />.</span></span> <span data-ttu-id="3bb28-2109">一致する子要素が見つからない場合、要素の終了タグ (<see cref="P:System.Xml.XmlReader.NodeType" /> が <see langword="XmlNodeType.EndElement" />) に <see cref="T:System.Xml.XmlReader" /> が配置されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2109">If a matching child element is not found, the <see cref="T:System.Xml.XmlReader" /> is positioned on the end tag (<see cref="P:System.Xml.XmlReader.NodeType" /> is <see langword="XmlNodeType.EndElement" />) of the element.</span></span>  
  
 <span data-ttu-id="3bb28-2110"><see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String)" /> が呼び出されたときに <see cref="T:System.Xml.XmlReader" /> が要素に配置されていない場合、このメソッドは <see langword="false" /> を返し、<see cref="T:System.Xml.XmlReader" /> の位置を変更しません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2110">If the <see cref="T:System.Xml.XmlReader" /> is not positioned on an element when <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String)" /> was called, this method returns <see langword="false" /> and the position of the <see cref="T:System.Xml.XmlReader" /> is not changed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3bb28-2111">次の例では、2 番目の book ノードを解析します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2111">The following example parses the second book node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#14](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#14)]
 [!code-vb[XmlReaderBasic#14](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#14)]  
  
 <span data-ttu-id="3bb28-2112">この例では、`2books.xml`の入力として、します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2112">The example uses the file, `2books.xml`, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#7](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/2books.xml#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2113">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2113">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2114">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2114">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3bb28-2115">パラメーターは空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2115">The parameter is an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToDescendant">
      <MemberSignature Language="C#" Value="public virtual bool ReadToDescendant (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadToDescendant(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToDescendant (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadToDescendant(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="3bb28-2116">移動先となる要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2116">The local name of the element you wish to move to.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="3bb28-2117">移動先となる要素の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2117">The namespace URI of the element you wish to move to.</span></span></param>
        <summary><span data-ttu-id="3bb28-2118">指定されたローカル名と名前空間 URI を使用して <see cref="T:System.Xml.XmlReader" /> を次の子孫要素に進めます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2118">Advances the <see cref="T:System.Xml.XmlReader" /> to the next descendant element with the specified local name and namespace URI.</span></span></summary>
        <returns>
          <span data-ttu-id="3bb28-2119">一致する子孫要素が見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2119"><see langword="true" /> if a matching descendant element is found; otherwise <see langword="false" />.</span></span> <span data-ttu-id="3bb28-2120">一致する子要素が見つからない場合、要素の終了タグ (<see cref="P:System.Xml.XmlReader.NodeType" /> が <see langword="XmlNodeType.EndElement" />) に <see cref="T:System.Xml.XmlReader" /> が配置されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2120">If a matching child element is not found, the <see cref="T:System.Xml.XmlReader" /> is positioned on the end tag (<see cref="P:System.Xml.XmlReader.NodeType" /> is <see langword="XmlNodeType.EndElement" />) of the element.</span></span>  
  
 <span data-ttu-id="3bb28-2121"><see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" /> が呼び出されたときに <see cref="T:System.Xml.XmlReader" /> が要素に配置されていない場合、このメソッドは <see langword="false" /> を返し、<see cref="T:System.Xml.XmlReader" /> の位置を変更しません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2121">If the <see cref="T:System.Xml.XmlReader" /> is not positioned on an element when <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" /> was called, this method returns <see langword="false" /> and the position of the <see cref="T:System.Xml.XmlReader" /> is not changed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2122">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2122">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2123">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2123">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-2124">両方のパラメーター値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2124">Both parameter values are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToFollowing">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2125">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2125">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2126">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2126">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span></span></exception>
        <summary><span data-ttu-id="3bb28-2127">指定された要素が見つかるまで読み込みます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2127">Reads until the named element is found.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToFollowing">
      <MemberSignature Language="C#" Value="public virtual bool ReadToFollowing (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadToFollowing(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadToFollowing(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToFollowing (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadToFollowing(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3bb28-2128">要素の限定名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2128">The qualified name of the element.</span></span></param>
        <summary><span data-ttu-id="3bb28-2129">指定された修飾名の要素が見つかるまで読み込みます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2129">Reads until an element with the specified qualified name is found.</span></span></summary>
        <returns>
          <span data-ttu-id="3bb28-2130">一致する要素が見つかる場合は <see langword="true" />。それ以外の場合は <see langword="false" /> になり、<see cref="T:System.Xml.XmlReader" /> がファイルの末尾に置かれます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2130"><see langword="true" /> if a matching element is found; otherwise <see langword="false" /> and the <see cref="T:System.Xml.XmlReader" /> is in an end of file state.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-2131">このメソッドは、機能的に同等の実行、`following::name`現在のノードからの XPath 式。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2131">This method is functionally equivalent executing the `following::name` XPath expression from the current node.</span></span> <span data-ttu-id="3bb28-2132">XML ドキュメントの名前を持つ要素を検索する簡単な方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2132">It provides a quick way to find a named element in the XML document.</span></span> <span data-ttu-id="3bb28-2133">指定した名前の一致する次の次の要素にリーダーを進めます`true`一致する要素が見つかった場合。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2133">It advances the reader to the next following element that matches the specified name and returns `true` if a matching element is found.</span></span> <span data-ttu-id="3bb28-2134">次の例を使用して、リーダーを読み取る、指定した要素の最初のインスタンスに転送の読み取り中にします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2134">Using the example below, the reader would read to the first instance of the specified element while reading forward.</span></span>  
  
```xml  
<!--"sample.xml"-->  
<?xmlversion="1.0">  
   <items>  
      <item xmls="urn:1"/>  
   </items>  
</xml>  
  
```  
  
```csharp  
XmlTextReader reader = newXmlTextReader("sample.xml");  
  
reader.ReadToFollowing("item");  
  
```  
  
 <span data-ttu-id="3bb28-2135">このメソッドは、すべてのノード型で呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2135">This method can be called on all node types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2136">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2136">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2137">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2137">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3bb28-2138">パラメーターは空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2138">The parameter is an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToFollowing">
      <MemberSignature Language="C#" Value="public virtual bool ReadToFollowing (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadToFollowing(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToFollowing (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadToFollowing(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="3bb28-2139">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2139">The local name of the element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="3bb28-2140">要素の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2140">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="3bb28-2141">指定されたローカル名と名前空間 URI が見つかるまで要素を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2141">Reads until an element with the specified local name and namespace URI is found.</span></span></summary>
        <returns>
          <span data-ttu-id="3bb28-2142">一致する要素が見つかる場合は <see langword="true" />。それ以外の場合は <see langword="false" /> になり、<see cref="T:System.Xml.XmlReader" /> がファイルの末尾に置かれます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2142"><see langword="true" /> if a matching element is found; otherwise <see langword="false" /> and the <see cref="T:System.Xml.XmlReader" /> is in an end of file state.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-2143">このメソッドは、機能的に同等の実行、`following::name`現在のノードからの XPath 式。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2143">This method is functionally equivalent executing the `following::name` XPath expression from the current node.</span></span> <span data-ttu-id="3bb28-2144">XML ドキュメントの名前を持つ要素を検索する簡単な方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2144">It provides a quick way to find a named element in the XML document.</span></span> <span data-ttu-id="3bb28-2145">指定した名前の一致する次の次の要素にリーダーを進めます`true`一致する要素が見つかった場合。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2145">It advances the reader to the next following element that matches the specified name and returns `true` if a matching element is found.</span></span>  
  
```xml  
<!--"sample.xml"-->  
<?xmlversion="1.0">  
   <items>  
      <item xmls="urn:1"/>  
   </items>  
</xml>  
  
```  
  
```csharp  
XmlTextReader reader = newXmlTextReader("sample.xml");  
  
reader.ReadToFollowing("item", "urn:1");  
  
```  
  
 <span data-ttu-id="3bb28-2146">このメソッドは、すべてのノード型で呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2146">This method can be called on all node types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2147">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2147">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2148">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2148">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-2149">両方のパラメーター値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2149">Both parameter values are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToNextSibling">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2150">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2150">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2151">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2151">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span></span></exception>
        <summary><span data-ttu-id="3bb28-2152"><see langword="XmlReader" /> を次に一致する兄弟要素に進めます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2152">Advances the <see langword="XmlReader" /> to the next matching sibling element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToNextSibling">
      <MemberSignature Language="C#" Value="public virtual bool ReadToNextSibling (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadToNextSibling(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadToNextSibling(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToNextSibling (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadToNextSibling(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3bb28-2153">移動先となる兄弟要素の修飾名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2153">The qualified name of the sibling element you wish to move to.</span></span></param>
        <summary><span data-ttu-id="3bb28-2154">指定された修飾名を使用して <see langword="XmlReader" /> を次の兄弟要素に進めます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2154">Advances the <see langword="XmlReader" /> to the next sibling element with the specified qualified name.</span></span></summary>
        <returns>
          <span data-ttu-id="3bb28-2155">一致する兄弟要素が見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2155"><see langword="true" /> if a matching sibling element is found; otherwise <see langword="false" />.</span></span> <span data-ttu-id="3bb28-2156">一致する兄弟要素が見つからない場合、<see langword="XmlReader" /> が親要素の終了タグ (<see cref="P:System.Xml.XmlReader.NodeType" /> が <see langword="XmlNodeType.EndElement" />) に配置されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2156">If a matching sibling element is not found, the <see langword="XmlReader" /> is positioned on the end tag (<see cref="P:System.Xml.XmlReader.NodeType" /> is <see langword="XmlNodeType.EndElement" />) of the parent element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3bb28-2157">呼び出す必要はありません<xref:System.Xml.XmlReader.ReadToNextSibling%2A>ときに、`XmlReader`初期状態です (<xref:System.Xml.XmlReader.ReadState%2A>は<xref:System.Xml.ReadState.Initial>)。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2157">Do not call <xref:System.Xml.XmlReader.ReadToNextSibling%2A> when the `XmlReader` is an initial state (<xref:System.Xml.XmlReader.ReadState%2A> is <xref:System.Xml.ReadState.Initial>).</span></span> <span data-ttu-id="3bb28-2158">呼び出すことができます<xref:System.Xml.XmlReader.Read%2A>を上げ、`XmlReader`を呼び出すと、<xref:System.Xml.XmlReader.ReadToNextSibling%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2158">You can call <xref:System.Xml.XmlReader.Read%2A> to advance the `XmlReader` and then call the <xref:System.Xml.XmlReader.ReadToNextSibling%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-2159">次の例では、各 book ノードの ISBN 属性を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2159">The following example reads the ISBN attribute on each book node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#15](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#15)]
 [!code-vb[XmlReaderBasic#15](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2160">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2160">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2161">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2161">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3bb28-2162">パラメーターは空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2162">The parameter is an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToNextSibling">
      <MemberSignature Language="C#" Value="public virtual bool ReadToNextSibling (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadToNextSibling(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToNextSibling (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadToNextSibling(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="3bb28-2163">移動先となる兄弟要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2163">The local name of the sibling element you wish to move to.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="3bb28-2164">移動先となる兄弟要素の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2164">The namespace URI of the sibling element you wish to move to.</span></span></param>
        <summary><span data-ttu-id="3bb28-2165">指定されたローカル名と名前空間 URI を使用して、<see langword="XmlReader" /> を次の兄弟要素に進めます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2165">Advances the <see langword="XmlReader" /> to the next sibling element with the specified local name and namespace URI.</span></span></summary>
        <returns>
          <span data-ttu-id="3bb28-2166">一致する兄弟要素が見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2166"><see langword="true" /> if a matching sibling element is found; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3bb28-2167">一致する兄弟要素が見つからない場合、<see langword="XmlReader" /> が親要素の終了タグ (<see cref="P:System.Xml.XmlReader.NodeType" /> が <see langword="XmlNodeType.EndElement" />) に配置されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2167">If a matching sibling element is not found, the <see langword="XmlReader" /> is positioned on the end tag (<see cref="P:System.Xml.XmlReader.NodeType" /> is <see langword="XmlNodeType.EndElement" />) of the parent element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3bb28-2168">呼び出す必要はありません<xref:System.Xml.XmlReader.ReadToNextSibling%2A>ときに、`XmlReader`初期状態です (<xref:System.Xml.XmlReader.ReadState%2A>は<xref:System.Xml.ReadState.Initial>)。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2168">Do not call <xref:System.Xml.XmlReader.ReadToNextSibling%2A> when the `XmlReader` is an initial state (<xref:System.Xml.XmlReader.ReadState%2A> is <xref:System.Xml.ReadState.Initial>).</span></span> <span data-ttu-id="3bb28-2169">呼び出すことができます<xref:System.Xml.XmlReader.Read%2A>を上げ、`XmlReader`を呼び出すと、<xref:System.Xml.XmlReader.ReadToNextSibling%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2169">You can call <xref:System.Xml.XmlReader.Read%2A> to advance the `XmlReader` and then call the <xref:System.Xml.XmlReader.ReadToNextSibling%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2170">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2170">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2171">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2171">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-2172">両方のパラメーター値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2172">Both parameter values are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadValueChunk">
      <MemberSignature Language="C#" Value="public virtual int ReadValueChunk (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadValueChunk(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadValueChunk (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadValueChunk(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="3bb28-2173">テキストの内容が書き込まれるバッファーとして機能する文字の配列。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2173">The array of characters that serves as the buffer to which the text contents are written.</span></span> <span data-ttu-id="3bb28-2174">この値を <see langword="null" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2174">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="3bb28-2175"><see cref="T:System.Xml.XmlReader" /> が結果のコピーを開始できる、バッファー内のオフセット。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2175">The offset within the buffer where the <see cref="T:System.Xml.XmlReader" /> can start to copy the results.</span></span></param>
        <param name="count"><span data-ttu-id="3bb28-2176">バッファーにコピーする最大文字数。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2176">The maximum number of characters to copy into the buffer.</span></span> <span data-ttu-id="3bb28-2177">コピーされた実際の文字数は、このメソッドから返されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2177">The actual number of characters copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="3bb28-2178">XML ドキュメントに埋め込まれたテキストの大量のストリームを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2178">Reads large streams of text embedded in an XML document.</span></span></summary>
        <returns><span data-ttu-id="3bb28-2179">バッファー内へ読み取られた文字数。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2179">The number of characters read into the buffer.</span></span> <span data-ttu-id="3bb28-2180">それ以上テキストの内容がない場合は、値として 0 が返されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2180">The value zero is returned when there is no more text content.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-2181">このメソッドは、値全体に対して 1 つの文字列を割り当てる代わりに、一度に文字の数が少ないのは、ストリーミング方式で XML ドキュメントに埋め込まれたテキストの非常に大量のストリームの読み取りを使用できます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2181">This method enables reading of very large streams of text embedded in an XML document in a streaming fashion, that is, a small number of characters at a time instead of allocating a single string for the whole value.</span></span> <span data-ttu-id="3bb28-2182">値を持つ任意のノードでこのメソッドを呼び出すことができる (<xref:System.Xml.XmlReader.HasValue%2A>は`true`)、ノードの値の実際のストリーミング、テキスト、空白および有意の空白のノードで呼び出された場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2182">This method can be called on any node that has a value (<xref:System.Xml.XmlReader.HasValue%2A> is `true`), however actual streaming of the node value only occurs when called on a text, white space and significant white space nodes.</span></span> <span data-ttu-id="3bb28-2183">属性と CDATA のノードを含むその他のノード型の値がキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2183">Other node type values are cached, including attributes and CDATA nodes.</span></span>  
  
 <span data-ttu-id="3bb28-2184">このメソッドの内容のみを返します、<xref:System.Xml.XmlReader.Value%2A>プロパティは移動されませんし、<xref:System.Xml.XmlReader>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2184">This method returns only the content of the <xref:System.Xml.XmlReader.Value%2A> property and does not move the <xref:System.Xml.XmlReader>.</span></span>  
  
 <span data-ttu-id="3bb28-2185">このメソッドは、指定した文字数を読み取ります (`count`) を文字バッファーにノードの値の (`buffer`) 指定されたオフセット位置 (`index`) し、バッファーに書き込まれた文字数を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2185">This method reads the specified number of characters (`count`) of the node value into a character buffer (`buffer`) at a specified offset (`index`) and returns the number of characters written to the buffer.</span></span> <span data-ttu-id="3bb28-2186">返します、`0`値の末尾に到達したときにします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2186">It returns the `0` when it has reached the end of the value.</span></span> <span data-ttu-id="3bb28-2187">値を使用して再度読み取りを再開できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2187">It cannot be restarted to read through the value again.</span></span>  
  
 <span data-ttu-id="3bb28-2188">呼び出しの間に<xref:System.Xml.XmlReader.ReadValueChunk%2A>、<xref:System.Xml.XmlReader>プロパティは使用しないで変更を除き、<xref:System.Xml.XmlReader.Value%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2188">In between calls to <xref:System.Xml.XmlReader.ReadValueChunk%2A> the <xref:System.Xml.XmlReader> properties do no change except for the <xref:System.Xml.XmlReader.Value%2A> property.</span></span> <span data-ttu-id="3bb28-2189">ときに、<xref:System.Xml.XmlReader.Value%2A>プロパティへのアクセス部分の値を返すか、(によって返されるされていない文字を含む<xref:System.Xml.XmlReader.ReadValueChunk%2A>) または実装によって完全な値です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2189">When the <xref:System.Xml.XmlReader.Value%2A> property is accessed it may either return a partial value (with characters not yet returned by <xref:System.Xml.XmlReader.ReadValueChunk%2A>) or a full value depending on the implementation.</span></span> <span data-ttu-id="3bb28-2190">すべての<xref:System.Xml.XmlReader>での実装、<xref:System.Xml>名前空間での部分的な値を返す、<xref:System.Xml.XmlReader.Value%2A>プロパティの実装です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2190">All the <xref:System.Xml.XmlReader> implementations in the <xref:System.Xml> namespace return a partial value for the <xref:System.Xml.XmlReader.Value%2A> property implementation.</span></span>  
  
 <span data-ttu-id="3bb28-2191">すべての読み取りメソッドを呼び出しの間に呼び出すことができる<xref:System.Xml.XmlReader.ReadValueChunk%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2191">Any Read method can be called in between calls to <xref:System.Xml.XmlReader.ReadValueChunk%2A>.</span></span> <span data-ttu-id="3bb28-2192">このような場合、<xref:System.Xml.XmlReader>へ移動<xref:System.Xml.XmlNodeType>ストリームで返されるされていない任意の文字はスキップされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2192">If this occurs, the <xref:System.Xml.XmlReader> moves to the next <xref:System.Xml.XmlNodeType> in the stream and any characters not yet returned are skipped.</span></span>  
  
 <span data-ttu-id="3bb28-2193">ケースがある可能性がありますと<xref:System.Xml.XmlReader.ReadValueChunk%2A>要求された文字数よりも小さいを返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2193">There may be a case when <xref:System.Xml.XmlReader.ReadValueChunk%2A> returns less than the requested number of characters.</span></span> <span data-ttu-id="3bb28-2194">たとえば、サロゲート ペアの 200 文字長値を持っていた 127 と 128 の位置にあるを呼び出した場合<xref:System.Xml.XmlReader.ReadValueChunk%2A>128 文字バッファーでメソッドの呼び出しは、要求された 128 ではなく 127 文字を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2194">For example, if you had a 200-character long value with a surrogate pair at positions 127 and 128 and you called <xref:System.Xml.XmlReader.ReadValueChunk%2A> with a 128-character buffer, the method call would return 127 characters instead of the requested 128.</span></span> <span data-ttu-id="3bb28-2195">次のサロゲート ペアが返されます、<xref:System.Xml.XmlReader.ReadValueChunk%2A>呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2195">The surrogate pair would then be returned in the next <xref:System.Xml.XmlReader.ReadValueChunk%2A> call.</span></span> <span data-ttu-id="3bb28-2196">この場合、<xref:System.Xml.XmlReader.ReadValueChunk%2A>実行のため発生した、バッファーの末尾に不完全なサロゲート ペアがあるため、要求された 128 文字が返されませんでした。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2196">In this case, <xref:System.Xml.XmlReader.ReadValueChunk%2A> did not return the requested 128 characters because doing so would have resulted in an incomplete surrogate pair at the end of the buffer.</span></span>  
  
 <span data-ttu-id="3bb28-2197">このメソッドの非同期バージョンは、<xref:System.Xml.XmlReader.ReadValueChunkAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2197">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadValueChunkAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2198">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2198">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2199">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2199">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bb28-2200"><paramref name="buffer" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2200">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3bb28-2201">バッファー内のインデックス、またはインデックスとカウントの合計値が、割り当てられているバッファー サイズを超えています。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2201">The index into the buffer, or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3bb28-2202"><see cref="T:System.Xml.XmlReader" /> 実装が、このメソッドをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2202">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3bb28-2203">XML データは、整形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2203">The XML data is not well-formed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadValueChunkAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadValueChunkAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadValueChunkAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadValueChunkAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadValueChunkAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="3bb28-2204">テキストの内容が書き込まれるバッファーとして機能する文字の配列。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2204">The array of characters that serves as the buffer to which the text contents are written.</span></span> <span data-ttu-id="3bb28-2205">この値を <see langword="null" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2205">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="3bb28-2206"><see cref="T:System.Xml.XmlReader" /> が結果のコピーを開始できる、バッファー内のオフセット。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2206">The offset within the buffer where the <see cref="T:System.Xml.XmlReader" /> can start to copy the results.</span></span></param>
        <param name="count"><span data-ttu-id="3bb28-2207">バッファーにコピーする最大文字数。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2207">The maximum number of characters to copy into the buffer.</span></span> <span data-ttu-id="3bb28-2208">コピーされた実際の文字数は、このメソッドから返されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2208">The actual number of characters copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="3bb28-2209">XML ドキュメントに埋め込まれたテキストの大量のストリームを非同期に読み取ります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2209">Asynchronously reads large streams of text embedded in an XML document.</span></span></summary>
        <returns><span data-ttu-id="3bb28-2210">バッファー内へ読み取られた文字数。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2210">The number of characters read into the buffer.</span></span> <span data-ttu-id="3bb28-2211">それ以上テキストの内容がない場合は、値として 0 が返されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2211">The value zero is returned when there is no more text content.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-2212">これは、非同期バージョンの<xref:System.Xml.XmlReader.ReadValueChunk%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2212">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadValueChunk%2A>, with the same functionality.</span></span> <span data-ttu-id="3bb28-2213">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlReaderSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2213">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2214"><see cref="P:System.Xml.XmlReaderSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlReader" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2214">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="3bb28-2215">この場合、「非同期メソッドを使用する場合、XmlReaderSettings.Async を True に設定します」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2215">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveEntity">
      <MemberSignature Language="C#" Value="public abstract void ResolveEntity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResolveEntity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResolveEntity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResolveEntity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-2216">派生クラスでオーバーライドされると、<see langword="EntityReference" /> ノードのエンティティ参照を解決します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2216">When overridden in a derived class, resolves the entity reference for <see langword="EntityReference" /> nodes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-2217">リーダーが配置されている場合、`EntityReference`ノード (`XmlNodeType.EntityReference`) 場合は、<xref:System.Xml.XmlReader.Read%2A>呼び出し元がこのメソッドでは、エンティティ置換テキストは解析後に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2217">If the reader is positioned on an `EntityReference` node (`XmlNodeType.EntityReference`), if <xref:System.Xml.XmlReader.Read%2A> is called after calling this method, the entity replacement text is parsed.</span></span> <span data-ttu-id="3bb28-2218">エンティティ置換テキストが完了すると、`EndEntity`エンティティ参照のスコープを閉じるノードが返されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2218">When the entity replacement text is finished, an `EndEntity` node is returned to close the entity reference scope.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3bb28-2219">このメソッドを呼び出した後、エンティティ、属性値の一部である必要がありますを呼び出した場合<xref:System.Xml.XmlReader.ReadAttributeValue%2A>エンティティにステップ インします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2219">After calling this method, if the entity is part of an attribute value, you must call <xref:System.Xml.XmlReader.ReadAttributeValue%2A> to step into the entity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2220">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2220">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2221">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2221">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="T:System.Xml.EntityHandling" />
        <altmember cref="P:System.Xml.XmlReader.CanResolveEntity" />
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bb28-2222">スキーマ検証の結果、現在のノードに割り当てられているスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2222">Gets the schema information that has been assigned to the current node as a result of schema validation.</span></span></summary>
        <value><span data-ttu-id="3bb28-2223">現在のノードのスキーマ情報を含む <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2223">An <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> object containing the schema information for the current node.</span></span> <span data-ttu-id="3bb28-2224">スキーマ情報は、非 null <see cref="P:System.Xml.XmlReader.ValueType" /> (型指定された値) で、要素、属性、またはテキスト ノードに設定できます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2224">Schema information can be set on elements, attributes, or on text nodes with a non-null <see cref="P:System.Xml.XmlReader.ValueType" /> (typed values).</span></span>  
  
 <span data-ttu-id="3bb28-2225">現在のノードがこれらのノード型以外の場合、または <see langword="XmlReader" /> インスタンスがスキーマ情報を報告しない場合、このプロパティは <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2225">If the current node is not one of the above node types, or if the <see langword="XmlReader" /> instance does not report schema information, this property returns <see langword="null" />.</span></span>  
  
 <span data-ttu-id="3bb28-2226">このプロパティが <see cref="T:System.Xml.XmlTextReader" /> オブジェクトまたは <see cref="T:System.Xml.XmlValidatingReader" /> オブジェクトから呼び出された場合は、常に <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2226">If this property is called from an <see cref="T:System.Xml.XmlTextReader" /> or an <see cref="T:System.Xml.XmlValidatingReader" /> object, this property always returns <see langword="null" />.</span></span> <span data-ttu-id="3bb28-2227">これらの <see langword="XmlReader" /> 実装は、<see langword="SchemaInfo" /> プロパティによるスキーマ情報の公開を行いません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2227">These <see langword="XmlReader" /> implementations do not expose schema information through the <see langword="SchemaInfo" /> property.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="3bb28-2228">要素のスキーマ検証後の情報セット (PSVI) を取得する必要がある場合は要素の終了タグにリーダーを配置し、それ以外の場合は開始タグに配置します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2228">If you have to get the post-schema-validation information set (PSVI) for an element, position the reader on the end tag of the element, rather than on the start tag.</span></span> <span data-ttu-id="3bb28-2229">PSVI は、リーダーの <see langword="SchemaInfo" /> プロパティから取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2229">You get the PSVI through the <see langword="SchemaInfo" /> property of a reader.</span></span> <span data-ttu-id="3bb28-2230"><see cref="Overload:System.Xml.XmlReader.Create" /> プロパティが <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> に設定された <see cref="F:System.Xml.ValidationType.Schema" /> で作成された検証リーダーが、要素の終了タグに配置されている場合にのみ、要素の完全な PSVI が存在します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2230">The validating reader that is created through <see cref="Overload:System.Xml.XmlReader.Create" /> with the <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> property set to <see cref="F:System.Xml.ValidationType.Schema" /> has complete PSVI for an element only when the reader is positioned on the end tag of an element.</span></span>  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-2231"><xref:System.Xml.Schema.IXmlSchemaInfo>インターフェイスは、のスキーマ検証後の情報セット (PSVI)、XML ノードに関連付けられているサブセットを公開します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2231">The <xref:System.Xml.Schema.IXmlSchemaInfo> interface exposes a subset of the Post Schema Validation Infoset (PSVI) associated with an XML node.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2232">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2232">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2233">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2233">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlReaderSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlReaderSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Settings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Settings As XmlReaderSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlReaderSettings ^ Settings { System::Xml::XmlReaderSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReaderSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bb28-2234">この <see cref="T:System.Xml.XmlReader" /> インスタンスを作成するために使用された <see cref="T:System.Xml.XmlReaderSettings" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2234">Gets the <see cref="T:System.Xml.XmlReaderSettings" /> object used to create this <see cref="T:System.Xml.XmlReader" /> instance.</span></span></summary>
        <value><span data-ttu-id="3bb28-2235">このリーダーのインスタンスを作成するために使用した <see cref="T:System.Xml.XmlReaderSettings" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2235">The <see cref="T:System.Xml.XmlReaderSettings" /> object used to create this reader instance.</span></span> <span data-ttu-id="3bb28-2236"><see cref="Overload:System.Xml.XmlReader.Create" /> メソッドを使用しないでこのリーダーを作成した場合、このプロパティは <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2236">If this reader was not created using the <see cref="Overload:System.Xml.XmlReader.Create" /> method, this property returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3bb28-2237"><xref:System.Xml.XmlReaderSettings>オブジェクトは、ユーザーの資格情報などの機密情報を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2237">The <xref:System.Xml.XmlReaderSettings> object can contain sensitive information such as user credentials.</span></span> <span data-ttu-id="3bb28-2238">アプリケーション必要がある場合にこのオブジェクトをキャッシュまたは別のコンポーネントに渡します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2238">Applications must be careful when caching this object or passing it to another component.</span></span>  
  
 <span data-ttu-id="3bb28-2239"><xref:System.Xml.XmlReaderSettings>リーダーが作成されたインスタンスでサポートする機能のセットを指定するクラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2239">The <xref:System.Xml.XmlReaderSettings> class is used to specify the set of features to support on the created reader instance.</span></span> <span data-ttu-id="3bb28-2240"><xref:System.Xml.XmlReaderSettings>このプロパティによって返されるオブジェクトは変更できません。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2240">The <xref:System.Xml.XmlReaderSettings> object returned by this property cannot be modified.</span></span> <span data-ttu-id="3bb28-2241">スローされた例外の個々 の設定の結果を変更しようとします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2241">Any attempt to change individual settings results in an exception being thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2242">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2242">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2243">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2243">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public virtual void Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Skip ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Skip();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-2244">現在のノードの子をスキップします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2244">Skips the children of the current node.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-2245">次の XML の入力にリーダーが配置されているかどうか、`<a>`ノードまたはその属性、呼び出しのいずれか`Skip`、リーダーを`<b>`ノード。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2245">In the following XML input if the reader is positioned on the `<a>` node or any of its attributes, calling `Skip` positions the reader to the `<b>` node.</span></span>  
  
 <span data-ttu-id="3bb28-2246">リーダーがリーフ ノードに既に配置されているかどうか (など、`<x>`ノードまたはテキスト ノード`abc`) を呼び出す`Skip`は呼び出すことと同じ<xref:System.Xml.XmlReader.Read%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2246">If the reader is positioned on a leaf node already (such as the `<x>` node or the text node `abc`), calling `Skip` is the same as calling <xref:System.Xml.XmlReader.Read%2A>.</span></span>  
  
```xml  
<a name="bob" age="123">  
 <x/>abc<y/>  
</a>  
<b>  
...  
</b>  
```  
  
 <span data-ttu-id="3bb28-2247">このメソッドは、整形式の XML を確認します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2247">This method checks for well-formed XML.</span></span>  
  
 <span data-ttu-id="3bb28-2248">リーダーが配置されている場合、 <xref:System.Xml.XmlValidatingReader>、また、このメソッドは、スキップしたコンテンツを検証します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2248">If the reader is an <xref:System.Xml.XmlValidatingReader>, this method also validates the skipped content.</span></span>  
  
 <span data-ttu-id="3bb28-2249">`XmlReader`実装を決定するかどうか、`Skip`メソッドが外部エンティティを展開します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2249">The `XmlReader` implementation determines whether or not the `Skip` method will expand external entities.</span></span> <span data-ttu-id="3bb28-2250">次の表は、さまざまな種類の外部のエンティティが展開されているかどうかを示します`XmlReader`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2250">The following table describes whether the external entities are expanded for the various types of `XmlReader` objects.</span></span>  
  
|<span data-ttu-id="3bb28-2251">XmlReader の種類</span><span class="sxs-lookup"><span data-stu-id="3bb28-2251">Type of XmlReader</span></span>|<span data-ttu-id="3bb28-2252">外部エンティティを展開します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2252">Expands external entities</span></span>|  
|-----------------------|-------------------------------|  
|<xref:System.Xml.XmlTextReader>|<span data-ttu-id="3bb28-2253">いいえ。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2253">No.</span></span>|  
|<span data-ttu-id="3bb28-2254"><xref:System.Xml.XmlReader> によって作成されたインスタンス、<xref:System.Xml.XmlReader.Create%2A>テキスト データを読み取る。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2254"><xref:System.Xml.XmlReader> instance created by the <xref:System.Xml.XmlReader.Create%2A> method that is reading text data.</span></span>|<span data-ttu-id="3bb28-2255">いいえ。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2255">No.</span></span>|  
|<span data-ttu-id="3bb28-2256"><xref:System.Xml.XmlReader> によって作成されたインスタンス、<xref:System.Xml.XmlReader.Create%2A>バイナリ データを読み取る。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2256"><xref:System.Xml.XmlReader> instance created by the <xref:System.Xml.XmlReader.Create%2A> method that is reading binary data.</span></span>|<span data-ttu-id="3bb28-2257">該当なし。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2257">Not applicable.</span></span>|  
|<span data-ttu-id="3bb28-2258">スキーマ検証<xref:System.Xml.XmlReader>によって作成されたインスタンス、<xref:System.Xml.XmlReader.Create%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2258">A schema validating <xref:System.Xml.XmlReader> instance created by the <xref:System.Xml.XmlReader.Create%2A> method.</span></span>|<span data-ttu-id="3bb28-2259">はい。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2259">Yes.</span></span>|  
|<xref:System.Xml.XmlValidatingReader>|<span data-ttu-id="3bb28-2260">はい。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2260">Yes.</span></span>|  
|<span data-ttu-id="3bb28-2261"><xref:System.Xml.XmlReader> によって返されるインスタンス、<xref:System.Xml.XPath.XPathNavigator>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2261"><xref:System.Xml.XmlReader> instance returned by a <xref:System.Xml.XPath.XPathNavigator> object.</span></span>|<span data-ttu-id="3bb28-2262">該当なし。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2262">Not applicable.</span></span>|  
|<xref:System.Xml.XmlNodeReader>|<span data-ttu-id="3bb28-2263">いいえ。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2263">No.</span></span>|  
|<span data-ttu-id="3bb28-2264"><xref:System.Xml.XmlReader> ラップされた別のインスタンス<xref:System.Xml.XmlReader>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2264"><xref:System.Xml.XmlReader> instance wrapped around another <xref:System.Xml.XmlReader> instance.</span></span>|<span data-ttu-id="3bb28-2265">基になるの実装に依存<xref:System.Xml.XmlReader>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2265">Depends on the implementation of the underlying <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="3bb28-2266">(、`Skip`メソッドを基になる<xref:System.Xml.XmlReader>と呼びます)。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2266">(The `Skip` method on the underlying <xref:System.Xml.XmlReader> is called).</span></span>|  
  
 <span data-ttu-id="3bb28-2267">このメソッドの非同期バージョンは、<xref:System.Xml.XmlReader.SkipAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2267">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.SkipAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-2268">次の例では、2 番目の book ノードから XML ファイルを解析します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2268">The following example parses an XML file starting on the second book node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#14](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#14)]
 [!code-vb[XmlReaderBasic#14](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#14)]  
  
 <span data-ttu-id="3bb28-2269">この例では、`2books.xml`の入力として、します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2269">The example uses the file, `2books.xml`, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#7](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/2books.xml#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2270">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2270">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2271">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2271">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SkipAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SkipAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SkipAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.SkipAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SkipAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SkipAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bb28-2272">現在のノードの子を非同期にスキップします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2272">Asynchronously skips the children of the current node.</span></span></summary>
        <returns><span data-ttu-id="3bb28-2273">現在のノード。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2273">The current node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-2274">これは、非同期バージョンの<xref:System.Xml.XmlReader.Skip%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2274">This is the asynchronous version of <xref:System.Xml.XmlReader.Skip%2A>, with the same functionality.</span></span> <span data-ttu-id="3bb28-2275">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlReaderSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2275">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2276"><see cref="P:System.Xml.XmlReaderSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlReader" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2276">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="3bb28-2277">この場合、「非同期メソッドを使用する場合、XmlReaderSettings.Async を True に設定します」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2277">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public abstract string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Value { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bb28-2278">派生クラスでオーバーライドされると、現在のノードのテキスト値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2278">When overridden in a derived class, gets the text value of the current node.</span></span></summary>
        <value><span data-ttu-id="3bb28-2279">返される値は、ノードの <see cref="P:System.Xml.XmlReader.NodeType" /> によって異なります。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2279">The value returned depends on the <see cref="P:System.Xml.XmlReader.NodeType" /> of the node.</span></span> <span data-ttu-id="3bb28-2280">返す値を持つノード型の一覧を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2280">The following table lists node types that have a value to return.</span></span> <span data-ttu-id="3bb28-2281">これ以外のノード型はすべて <see langword="String.Empty" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2281">All other node types return <see langword="String.Empty" />.</span></span>  
  
 <span data-ttu-id="3bb28-2282"><list type="table"><listheader><term> ノード型</span><span class="sxs-lookup"><span data-stu-id="3bb28-2282"><list type="table"><listheader><term> Node type</span></span>  
  
 <span data-ttu-id="3bb28-2283"></term><description> 値</span><span class="sxs-lookup"><span data-stu-id="3bb28-2283"></term><description> Value</span></span>  
  
 <span data-ttu-id="3bb28-2284"></description></listheader><item><term><see langword="Attribute" /></term><description> 属性の値です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2284"></description></listheader><item><term><see langword="Attribute" /></term><description> The value of the attribute.</span></span>  
  
 <span data-ttu-id="3bb28-2285"></description></item><item><term><see langword="CDATA" /></term><description> CDATA セクションの内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2285"></description></item><item><term><see langword="CDATA" /></term><description> The content of the CDATA section.</span></span>  
  
 <span data-ttu-id="3bb28-2286"></description></item><item><term><see langword="Comment" /></term><description> コメントの内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2286"></description></item><item><term><see langword="Comment" /></term><description> The content of the comment.</span></span>  
  
 <span data-ttu-id="3bb28-2287"></description></item><item><term><see langword="DocumentType" /></term><description> 内部サブセット。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2287"></description></item><item><term><see langword="DocumentType" /></term><description> The internal subset.</span></span>  
  
 <span data-ttu-id="3bb28-2288"></description></item><item><term><see langword="ProcessingInstruction" /></term><description> 全体のコンテンツ、ターゲットを除外します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2288"></description></item><item><term><see langword="ProcessingInstruction" /></term><description> The entire content, excluding the target.</span></span>  
  
 <span data-ttu-id="3bb28-2289"></description></item><item><term><see langword="SignificantWhitespace" /></term><description> 混合コンテンツ モデル内でのマークアップ間に空白文字。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2289"></description></item><item><term><see langword="SignificantWhitespace" /></term><description> The white space between markup in a mixed content model.</span></span>  
  
 <span data-ttu-id="3bb28-2290"></description></item><item><term><see langword="Text" /></term><description> テキスト ノードのコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2290"></description></item><item><term><see langword="Text" /></term><description> The content of the text node.</span></span>  
  
 <span data-ttu-id="3bb28-2291"></description></item><item><term><see langword="Whitespace" /></term><description> マークアップ間に空白文字。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2291"></description></item><item><term><see langword="Whitespace" /></term><description> The white space between markup.</span></span>  
  
 <span data-ttu-id="3bb28-2292"></description></item><item><term><see langword="XmlDeclaration" /></term><description> 宣言の内容。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2292"></description></item><item><term><see langword="XmlDeclaration" /></term><description> The content of the declaration.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-2293">このプロパティの非同期バージョンを参照してください、<xref:System.Xml.XmlReader.GetValueAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2293">For the asynchronous version of this property, see the <xref:System.Xml.XmlReader.GetValueAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-2294">次の例では、XML ファイルを読み取るし、各ノードを表示します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2294">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-csharp[XmlReaderBasic#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#8)]
 [!code-vb[XmlReaderBasic#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#8)]  
  
 <span data-ttu-id="3bb28-2295">このサンプルでは、`items.xml`ファイル。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2295">The sample uses the `items.xml` file.</span></span>  
  
 [!code-xml[XML_Core_Files#2](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/items.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2296">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2296">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2297">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2297">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public virtual Type ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ValueType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bb28-2298">現在のノードの共通言語ランタイム (CLR) 型を取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2298">Gets The Common Language Runtime (CLR) type for the current node.</span></span></summary>
        <value><span data-ttu-id="3bb28-2299">ノードの型指定された値に対応する CLR 型。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2299">The CLR type that corresponds to the typed value of the node.</span></span> <span data-ttu-id="3bb28-2300">既定値は、<see langword="System.String" /> です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2300">The default is <see langword="System.String" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-2301">参照してください[System.Xml クラスで型のサポート](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)既定のマッピングの一覧についてはします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2301">See [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md) for a list of the default mappings.</span></span>  
  
 <span data-ttu-id="3bb28-2302">型の要素`xs:int`が、`ValueType`の`System.Int32`既定です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2302">An element of type `xs:int` has a `ValueType` of `System.Int32` by default.</span></span> <span data-ttu-id="3bb28-2303">ただし、`ValueType`にマップできる有効な型のいずれかになります`xs:int`など`System.Int16`または`System.Double`です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2303">However, the `ValueType` could be one of the valid types that can be mapped to `xs:int`, such as `System.Int16` or `System.Double`.</span></span>  
  
 <span data-ttu-id="3bb28-2304">ノードが指定されていないか、またはノードの値にマップされているノードが混在したコンテンツを格納する要素の場合、`System.String`型です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2304">If a node is un-typed, or if the node is an element that contains mixed content, the node value is mapped to the `System.String` type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2305">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2305">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2306">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2306">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="3bb28-2307">実装を提供する必要があります、<see langword="ValueType" />のみである場合でも、各ノードに対して、<see langword="System.String" />型です。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2307">Implementers must provide a <see langword="ValueType" /> for every node, even if it is only the <see langword="System.String" /> type.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public virtual string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bb28-2308">派生クラスでオーバーライドされると、現在の <see langword="xml:lang" /> スコープを取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2308">When overridden in a derived class, gets the current <see langword="xml:lang" /> scope.</span></span></summary>
        <value><span data-ttu-id="3bb28-2309">現在の <see langword="xml:lang" /> スコープ。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2309">The current <see langword="xml:lang" /> scope.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb28-2310">このプロパティを表す、`xml:lang`スコープ内で、現在のノードが存在します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2310">This property represents the `xml:lang` scope within which the current node resides.</span></span> <span data-ttu-id="3bb28-2311">たとえばと XML フラグメントを次に示します`xml:lang`ルート要素に英語 (米国) に設定します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2311">For example, here is an XML fragment with `xml:lang` set to US English in the root element:</span></span>  
  
```xml  
<root xml:lang="en-us">   
<name>Fred</name>   
</root>   
```  
  
 <span data-ttu-id="3bb28-2312">リーダーが配置されている場合、`name`要素を英語 (米国) のスコープ内にあることを検索するこのプロパティを使用することができます`xml:lang`属性。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2312">When the reader is positioned on the `name` element, you can use this property to find that it is in the scope of a US English `xml:lang` attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb28-2313">参照してください<xref:System.Xml.XmlTextReader.XmlLang%2A?displayProperty=nameWithType>をこのプロパティを使用する例についてはします。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2313">See <xref:System.Xml.XmlTextReader.XmlLang%2A?displayProperty=nameWithType> for an example of using this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2314">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2314">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2315">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2315">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="P:System.Xml.XmlReader.XmlSpace" />
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bb28-2316">派生クラスでオーバーライドされると、現在の <see langword="xml:space" /> スコープを取得します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2316">When overridden in a derived class, gets the current <see langword="xml:space" /> scope.</span></span></summary>
        <value><span data-ttu-id="3bb28-2317"><see cref="T:System.Xml.XmlSpace" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2317">One of the <see cref="T:System.Xml.XmlSpace" /> values.</span></span> <span data-ttu-id="3bb28-2318"><see langword="xml:space" /> スコープが存在しない場合、このプロパティは既定の <see langword="XmlSpace.None" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2318">If no <see langword="xml:space" /> scope exists, this property defaults to <see langword="XmlSpace.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3bb28-2319">参照してください<xref:System.Xml.XmlTextReader.XmlSpace%2A>(で、`XmlTextReader`クラス)、たとえば、このプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2319">See <xref:System.Xml.XmlTextReader.XmlSpace%2A> (in the `XmlTextReader` class) for an example using this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3bb28-2320">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlReader" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2320">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="3bb28-2321">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3bb28-2321">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="P:System.Xml.XmlReader.XmlLang" />
      </Docs>
    </Member>
  </Members>
</Type>