<Type Name="XmlWriter" FullName="System.Xml.XmlWriter">
  <TypeSignature Language="C#" Value="public abstract class XmlWriter : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlWriter extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlWriter&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriter abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f94a1-101">XML データが格納されたストリームまたはファイルを、高速かつ非キャッシュで前方のみに生成する方法を提供するライターを表します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-101">Represents a writer that provides a fast, non-cached, forward-only way to generate streams or files that contain XML data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-102"><xref:System.Xml.XmlWriter>クラスに XML データ ストリーム、ファイル、テキスト リーダー、または文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-102">The <xref:System.Xml.XmlWriter> class writes XML data to a stream, file, text reader, or string.</span></span> <span data-ttu-id="f94a1-103">W3C をサポートしている[拡張マークアップ言語 (XML) 1.0 (第 4 版)](http://www.w3.org/TR/2006/REC-xml-20060816/)と[XML 1.0 の名前空間 (第 3 版)](http://www.w3.org/TR/REC-xml-names/)の推奨事項です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-103">It supports the W3C [Extensible Markup Language (XML) 1.0 (fourth edition)](http://www.w3.org/TR/2006/REC-xml-20060816/) and [Namespaces in XML 1.0 (third edition)](http://www.w3.org/TR/REC-xml-names/) recommendations.</span></span>  
  
 <span data-ttu-id="f94a1-104">メンバー、<xref:System.Xml.XmlWriter>クラスを有効にします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-104">The members of the <xref:System.Xml.XmlWriter> class enable you to:</span></span>  
  
-   <span data-ttu-id="f94a1-105">文字が有効な XML 文字かどうか、要素名と属性名が有効な XML 名かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-105">Verify that the characters are legal XML characters and that element and attribute names are valid XML names.</span></span>  
  
-   <span data-ttu-id="f94a1-106">XML ドキュメントが整形式かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-106">Verify that the XML document is well-formed.</span></span>  
  
-   <span data-ttu-id="f94a1-107">バイナリ バイトを Base64 または BinHex としてエンコードし、生成されるテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-107">Encode binary bytes as Base64 or BinHex, and write out the resulting text.</span></span>  
  
-   <span data-ttu-id="f94a1-108">値の変換を手動で実行しなくて済むように、文字列の代わりに共通言語ランタイム型を使用して値を渡します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-108">Pass values by using common language runtime types instead of strings, to avoid having to manually perform value conversions.</span></span>  
  
-   <span data-ttu-id="f94a1-109">複数のドキュメントを 1 つの出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-109">Write multiple documents to one output stream.</span></span>  
  
-   <span data-ttu-id="f94a1-110">有効な名前、修飾された名前、および名前トークンを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-110">Write valid names, qualified names, and name tokens.</span></span>  
  
 <span data-ttu-id="f94a1-111">このセクションの内容:</span><span class="sxs-lookup"><span data-stu-id="f94a1-111">In this section:</span></span>  
  
 <span data-ttu-id="f94a1-112">[XML ライターを作成します。](#create) </span><span class="sxs-lookup"><span data-stu-id="f94a1-112">[Creating an XML writer](#create) </span></span>  
 <span data-ttu-id="f94a1-113">[出力形式の指定](#output) </span><span class="sxs-lookup"><span data-stu-id="f94a1-113">[Specifying the output format](#output) </span></span>  
 <span data-ttu-id="f94a1-114">[データの一致](#conformance) </span><span class="sxs-lookup"><span data-stu-id="f94a1-114">[Data conformance](#conformance) </span></span>  
 <span data-ttu-id="f94a1-115">[書き込み要素](#writing_elements) </span><span class="sxs-lookup"><span data-stu-id="f94a1-115">[Writing elements](#writing_elements) </span></span>  
 <span data-ttu-id="f94a1-116">[属性の記述](#writing_attributes) </span><span class="sxs-lookup"><span data-stu-id="f94a1-116">[Writing attributes](#writing_attributes) </span></span>  
 <span data-ttu-id="f94a1-117">[名前空間の処理](#handling_ns) </span><span class="sxs-lookup"><span data-stu-id="f94a1-117">[Handling namespaces](#handling_ns) </span></span>  
 <span data-ttu-id="f94a1-118">[型指定されたデータの書き込み](#writing_types) </span><span class="sxs-lookup"><span data-stu-id="f94a1-118">[Writing typed data](#writing_types) </span></span>  
 <span data-ttu-id="f94a1-119">[XML ライターを閉じる](#close) </span><span class="sxs-lookup"><span data-stu-id="f94a1-119">[Closing the XML writer](#close) </span></span>  
 <span data-ttu-id="f94a1-120">[非同期プログラミング](#async) </span><span class="sxs-lookup"><span data-stu-id="f94a1-120">[Asynchronous programming](#async) </span></span>  
 [<span data-ttu-id="f94a1-121">セキュリティに関する考慮事項</span><span class="sxs-lookup"><span data-stu-id="f94a1-121">Security considerations</span></span>](#security)  
  
<a name="create"></a>   
## <a name="creating-an-xml-writer"></a><span data-ttu-id="f94a1-122">XML ライターを作成します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-122">Creating an XML writer</span></span>  
 <span data-ttu-id="f94a1-123">作成する、<xref:System.Xml.XmlWriter>インスタンスを使用して、<xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-123">To create an <xref:System.Xml.XmlWriter> instance, use the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="f94a1-124">XML ライターを有効にする機能のセットを指定するには、渡す、<xref:System.Xml.XmlWriterSettings>を<xref:System.Xml.XmlWriter.Create%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-124">To specify the set of features you want to enable on the XML writer, pass an <xref:System.Xml.XmlWriterSettings> to the <xref:System.Xml.XmlWriter.Create%2A> method.</span></span> <span data-ttu-id="f94a1-125">それ以外の場合、既定の設定が使用されます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-125">Otherwise, default settings are used.</span></span> <span data-ttu-id="f94a1-126">参照してください、<xref:System.Xml.XmlWriter.Create%2A>詳細ページを参照します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-126">See the <xref:System.Xml.XmlWriter.Create%2A> reference pages for details.</span></span>  
  
<a name="output"></a>   
## <a name="specifying-the-output-format"></a><span data-ttu-id="f94a1-127">出力形式の指定</span><span class="sxs-lookup"><span data-stu-id="f94a1-127">Specifying the output format</span></span>  
 <span data-ttu-id="f94a1-128"><xref:System.Xml.XmlWriterSettings>クラスには、いくつかを制御するプロパティが含まれています。 どの<xref:System.Xml.XmlWriter>形式で出力されます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-128">The <xref:System.Xml.XmlWriterSettings> class includes several properties that control how <xref:System.Xml.XmlWriter> output is formatted:</span></span>  
  
|<span data-ttu-id="f94a1-129">プロパティ</span><span class="sxs-lookup"><span data-stu-id="f94a1-129">Property</span></span>|<span data-ttu-id="f94a1-130">説明</span><span class="sxs-lookup"><span data-stu-id="f94a1-130">Description</span></span>|  
|--------------|-----------------|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<span data-ttu-id="f94a1-131">使用するテキスト エンコーディングを指定します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-131">Specifies the text encoding to use.</span></span> <span data-ttu-id="f94a1-132">既定値は、`Encoding.UTF8` です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-132">The default is `Encoding.UTF8`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|<span data-ttu-id="f94a1-133">要素をインデントするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-133">Indicates whether to indent elements.</span></span> <span data-ttu-id="f94a1-134">既定値は`false`(インデントなし)。</span><span class="sxs-lookup"><span data-stu-id="f94a1-134">The default is `false` (no indentation).</span></span>|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="f94a1-135">インデントに使用する文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-135">Specifies the character string to use when indenting.</span></span> <span data-ttu-id="f94a1-136">既定値は 2 つのスペースです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-136">The default is two spaces.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="f94a1-137">改行に使用する文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-137">Specifies the character string to use for line breaks.</span></span> <span data-ttu-id="f94a1-138">既定値は `\r\n` (キャリッジ リターン、ライン フィード) です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-138">The default is `\r\n` (carriage return, line feed).</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<span data-ttu-id="f94a1-139">改行文字を処理する方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-139">Specifies how to handle newline characters.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|<span data-ttu-id="f94a1-140">新しい行に属性を書き込むかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-140">Indicates whether to write attributes on a new line.</span></span> <span data-ttu-id="f94a1-141">このプロパティを使用するときは、<xref:System.Xml.XmlWriterSettings.Indent%2A> を `true` に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-141"><xref:System.Xml.XmlWriterSettings.Indent%2A> should be set to `true` when using this property.</span></span> <span data-ttu-id="f94a1-142">既定値は、`false` です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-142">The default is `false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|<span data-ttu-id="f94a1-143">XML 宣言を書き込むかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-143">Indicates whether to write an XML declaration.</span></span> <span data-ttu-id="f94a1-144">既定値は、`false` です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-144">The default is `false`.</span></span>|  
  
 <span data-ttu-id="f94a1-145"><xref:System.Xml.XmlWriterSettings.Indent%2A> および <xref:System.Xml.XmlWriterSettings.IndentChars%2A> プロパティによって、意味のない空白の書式設定方法が制御されます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-145">The <xref:System.Xml.XmlWriterSettings.Indent%2A> and <xref:System.Xml.XmlWriterSettings.IndentChars%2A> properties control how insignificant white space is formatted.</span></span> <span data-ttu-id="f94a1-146">たとえば、要素ノードのインデントを設定するには、します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-146">For example, to indent element nodes:</span></span>  
  
 [!code-csharp[XmlWriter_v2#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#8)]
 [!code-vb[XmlWriter_v2#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#8)]  
  
 <span data-ttu-id="f94a1-147">使用して、<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>インデントの追加レベルが 1 つの新しい行の各属性に書き込めません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-147">Use the <xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A> to write each attribute on a new line with one extra level of indentation:</span></span>  
  
 [!code-csharp[XmlWriter_v2#9](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#9)]
 [!code-vb[XmlWriter_v2#9](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#9)]  
  
<a name="conformance"></a>   
## <a name="data-conformance"></a><span data-ttu-id="f94a1-148">データの一致</span><span class="sxs-lookup"><span data-stu-id="f94a1-148">Data conformance</span></span>  
 <span data-ttu-id="f94a1-149">XML ライターから 2 つのプロパティを使用して、<xref:System.Xml.XmlWriterSettings>データへの準拠を確認するクラス。</span><span class="sxs-lookup"><span data-stu-id="f94a1-149">An XML writer uses two properties from the <xref:System.Xml.XmlWriterSettings> class to check for data conformance:</span></span>  
  
-   <span data-ttu-id="f94a1-150"><xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>プロパティの文字をチェックし、スローする XML ライターに指示する<xref:System.Xml.XmlException>任意の文字は、有効な範囲外、W3C で定義されている場合に例外です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-150">The <xref:System.Xml.XmlWriterSettings.CheckCharacters%2A> property instructs the XML writer to check characters and throw an <xref:System.Xml.XmlException> exception if any characters are outside the legal range, as defined by the W3C.</span></span>  
  
-   <span data-ttu-id="f94a1-151"><xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>プロパティは、W3C で定義されているに書き込まれるストリームが整形式 XML 1.0 ドキュメントまたはドキュメント フラグメントの規則に準拠していることを確認する XML ライターを構成します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-151">The <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> property configures the XML writer to check that the stream being written complies with the rules for a well-formed XML 1.0 document or document fragment, as defined by the W3C.</span></span> <span data-ttu-id="f94a1-152">次の 3 つの準拠レベルは、次の表に説明します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-152">The three conformance levels are described in the following table.</span></span> <span data-ttu-id="f94a1-153">既定値は、<xref:System.Xml.ConformanceLevel.Document> です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-153">The default is <xref:System.Xml.ConformanceLevel.Document>.</span></span> <span data-ttu-id="f94a1-154">詳細については、次を参照してください。、<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType>プロパティおよび<xref:System.Xml.ConformanceLevel?displayProperty=nameWithType>列挙します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-154">For details, see the <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> property and the <xref:System.Xml.ConformanceLevel?displayProperty=nameWithType> enumeration.</span></span>  
  
    |<span data-ttu-id="f94a1-155">レベル</span><span class="sxs-lookup"><span data-stu-id="f94a1-155">Level</span></span>|<span data-ttu-id="f94a1-156">説明</span><span class="sxs-lookup"><span data-stu-id="f94a1-156">Description</span></span>|  
    |-----------|-----------------|  
    |<xref:System.Xml.ConformanceLevel.Document>|<span data-ttu-id="f94a1-157">XML 出力は、整形式 XML 1.0 のドキュメントの規則に準拠しているし、準拠のプロセッサで処理することができます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-157">The XML output conforms to the rules for a well-formed XML 1.0 document and can be processed by any conforming processor.</span></span>|  
    |<xref:System.Xml.ConformanceLevel.Fragment>|<span data-ttu-id="f94a1-158">XML 出力は、整形式 XML 1.0 ドキュメント フラグメントの規則に準拠しています。</span><span class="sxs-lookup"><span data-stu-id="f94a1-158">The XML output conforms to the rules for a well-formed XML 1.0 document fragment.</span></span>|  
    |<xref:System.Xml.ConformanceLevel.Auto>|<span data-ttu-id="f94a1-159">XML ライターでは、確認を適用するチェック (ドキュメントまたはフラグメント)、受信データに基づくのレベルを決定します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-159">The XML writer determines which level of conformation checking to apply (document or fragment) based on the incoming data.</span></span>|  
  
<a name="writing_elements"></a>   
## <a name="writing-elements"></a><span data-ttu-id="f94a1-160">書き込み要素</span><span class="sxs-lookup"><span data-stu-id="f94a1-160">Writing elements</span></span>  
 <span data-ttu-id="f94a1-161">以下を使用することができます<xref:System.Xml.XmlWriter>要素ノードを書き込む方法です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-161">You can use the following <xref:System.Xml.XmlWriter> methods to write element nodes.</span></span> <span data-ttu-id="f94a1-162">例については、示されているメソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="f94a1-162">For examples, see the methods listed.</span></span>  
  
|<span data-ttu-id="f94a1-163">使用</span><span class="sxs-lookup"><span data-stu-id="f94a1-163">Use</span></span>|<span data-ttu-id="f94a1-164">終了</span><span class="sxs-lookup"><span data-stu-id="f94a1-164">To</span></span>|  
|---------|--------|  
|<xref:System.Xml.XmlWriter.WriteElementString%2A>|<span data-ttu-id="f94a1-165">文字列値を含む、全体の要素ノードを記述します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-165">Write an entire element  node, including a string value.</span></span>|  
|<xref:System.Xml.XmlWriter.WriteStartElement%2A>|<span data-ttu-id="f94a1-166">複数のメソッドを使用して要素の値を書き込むために呼び出します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-166">To write an element value by using multiple method calls.</span></span>  <span data-ttu-id="f94a1-167">たとえば、<xref:System.Xml.XmlWriter.WriteValue%2A> を呼び出して、型指定された値を書き込んだり、<xref:System.Xml.XmlWriter.WriteCharEntity%2A> を呼び出して文字エンティティを書き込んだり、<xref:System.Xml.XmlWriter.WriteAttributeString%2A> を呼び出して 1 つの属性を書き込んだり、子要素を書き込んだりすることができます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-167">For example, you can call <xref:System.Xml.XmlWriter.WriteValue%2A> to write a typed value, <xref:System.Xml.XmlWriter.WriteCharEntity%2A> to write a character entity, <xref:System.Xml.XmlWriter.WriteAttributeString%2A> to write an attribute, or you can write a child element.</span></span> <span data-ttu-id="f94a1-168">これより高度なバージョンの<xref:System.Xml.XmlWriter.WriteElementString%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-168">This is a more sophisticated version of the <xref:System.Xml.XmlWriter.WriteElementString%2A> method.</span></span><br /><br /> <span data-ttu-id="f94a1-169">要素を閉じるを呼び出す、<xref:System.Xml.XmlWriter.WriteEndElement%2A>または<xref:System.Xml.XmlWriter.WriteFullEndElement%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-169">To close the element, you call the <xref:System.Xml.XmlWriter.WriteEndElement%2A> or <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> method.</span></span>|  
|<xref:System.Xml.XmlWriter.WriteNode%2A>|<span data-ttu-id="f94a1-170">現在位置にある検出された要素ノードをコピーする、<xref:System.Xml.XmlReader>または<xref:System.Xml.XPath.XPathNavigator>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-170">To copy an element node found at the current position of an <xref:System.Xml.XmlReader> or <xref:System.Xml.XPath.XPathNavigator> object.</span></span> <span data-ttu-id="f94a1-171">呼び出されると、ソース オブジェクトからすべてを <xref:System.Xml.XmlWriter> インスタンスにコピーします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-171">When called, it copies everything from the source object to the <xref:System.Xml.XmlWriter> instance.</span></span>|  
  
<a name="writing_attributes"></a>   
## <a name="writing-attributes"></a><span data-ttu-id="f94a1-172">属性の記述</span><span class="sxs-lookup"><span data-stu-id="f94a1-172">Writing attributes</span></span>  
 <span data-ttu-id="f94a1-173">以下を使用することができます<xref:System.Xml.XmlWriter>要素ノードに属性を書き込む方法です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-173">You can use the following <xref:System.Xml.XmlWriter> methods to write attributes on element nodes.</span></span> <span data-ttu-id="f94a1-174">次のセクションで説明したように、これらのメソッドを要素の名前空間の宣言を作成する使用もできます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-174">These methods can also be used to create namespace declarations on an element, as discussed in the next section.</span></span>  
  
|<span data-ttu-id="f94a1-175">使用</span><span class="sxs-lookup"><span data-stu-id="f94a1-175">Use</span></span>|<span data-ttu-id="f94a1-176">終了</span><span class="sxs-lookup"><span data-stu-id="f94a1-176">To</span></span>|  
|---------|--------|  
|<xref:System.Xml.XmlWriter.WriteAttributeString%2A>|<span data-ttu-id="f94a1-177">書き込む文字列の値を含む、全体の属性ノード。</span><span class="sxs-lookup"><span data-stu-id="f94a1-177">To write an entire attribute node, including a string value.</span></span>|  
|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A>|<span data-ttu-id="f94a1-178">複数のメソッドを使用して属性値の書き込みに次のように呼び出します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-178">To write the attribute value using multiple method calls.</span></span> <span data-ttu-id="f94a1-179">たとえば、呼び出す<xref:System.Xml.XmlWriter.WriteValue%2A>に型指定された値を書き込むことです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-179">For example, you can call <xref:System.Xml.XmlWriter.WriteValue%2A> to write a typed value.</span></span> <span data-ttu-id="f94a1-180">これより高度なバージョンの<xref:System.Xml.XmlWriter.WriteElementString%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-180">This is a more sophisticated version of the <xref:System.Xml.XmlWriter.WriteElementString%2A> method.</span></span><br /><br /> <span data-ttu-id="f94a1-181">要素を閉じるを呼び出す、<xref:System.Xml.XmlWriter.WriteEndAttribute%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-181">To close the element, you call the <xref:System.Xml.XmlWriter.WriteEndAttribute%2A> method.</span></span>|  
|<xref:System.Xml.XmlWriter.WriteAttributes%2A>|<span data-ttu-id="f94a1-182">現在位置にあるすべての属性をコピーする、<xref:System.Xml.XmlReader>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-182">To copy all the attributes found at the current position of an <xref:System.Xml.XmlReader> object.</span></span> <span data-ttu-id="f94a1-183">書き込まれる属性は、リーダーの現在位置にノードの種類によって異なります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-183">The attributes that are written depend on the type of node the reader is currently positioned on:</span></span><br /><br /> <span data-ttu-id="f94a1-184">-属性ノードを書き込みます、現在の属性とし、残りの属性要素の終了タグまでです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-184">-   For an attribute node, it writes the current attribute, and then the rest of the attributes until the element closing tag.</span></span><br /><span data-ttu-id="f94a1-185">要素ノードの要素が含まれているすべての属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-185">-   For an element node, it writes all attributes contained by the element.</span></span><br /><span data-ttu-id="f94a1-186">-XML 宣言ノードに対しては、宣言内のすべての属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-186">-   For an XML declaration node, it writes all the attributes in the declaration.</span></span><br /><span data-ttu-id="f94a1-187">-その他のすべてのノード型のメソッドは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-187">-   For all other node types, the method throws an exception.</span></span>|  
  
<a name="handling_ns"></a>   
## <a name="handling-namespaces"></a><span data-ttu-id="f94a1-188">名前空間の処理</span><span class="sxs-lookup"><span data-stu-id="f94a1-188">Handling namespaces</span></span>  
 <span data-ttu-id="f94a1-189">名前空間は、XML ドキュメント内の要素名と属性名を修飾するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-189">Namespaces are used to qualify element and attribute names in an XML document.</span></span> <span data-ttu-id="f94a1-190">Namespace プレフィックスは、さらに、URI 参照に関連付けられた名前空間を持つ要素と属性を関連付けます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-190">Namespace prefixes associate elements and attributes with namespaces, which are in turn associated with URI references.</span></span> <span data-ttu-id="f94a1-191">名前空間は、XML ドキュメントの中の要素名と属性名を一意にします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-191">Namespaces create element and attribute name uniqueness in an XML document.</span></span>  
  
 <span data-ttu-id="f94a1-192"><xref:System.Xml.XmlWriter>現在の名前空間スコープで定義されているすべての名前空間に対応する名前空間スタックを保持します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-192">The <xref:System.Xml.XmlWriter> maintains a namespace stack that corresponds to all the namespaces defined in the current namespace scope.</span></span> <span data-ttu-id="f94a1-193">要素および属性の書き込み時には、次の方法で名前空間を使用できます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-193">When writing elements and attributes you can utilize namespaces in the following ways:</span></span>  
  
-   <span data-ttu-id="f94a1-194">使用して手動で名前空間を宣言、<xref:System.Xml.XmlWriter.WriteAttributeString%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-194">Declare namespaces manually by using the <xref:System.Xml.XmlWriter.WriteAttributeString%2A> method.</span></span> <span data-ttu-id="f94a1-195">これは、名前空間宣言の個数を最適化する方法がわかっているときに役立つ場合があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-195">This can be useful when you know how to best optimize the number of namespace declarations.</span></span> <span data-ttu-id="f94a1-196">例については、次を参照してください。、<xref:System.Xml.XmlWriter.WriteAttributeString%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-196">For an example, see the <xref:System.Xml.XmlWriter.WriteAttributeString%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29> method.</span></span>  
  
-   <span data-ttu-id="f94a1-197">現在の名前空間宣言を新しい名前空間でオーバーライドする。</span><span class="sxs-lookup"><span data-stu-id="f94a1-197">Override the current namespace declaration with a new namespace.</span></span> <span data-ttu-id="f94a1-198">次のコードで、<xref:System.Xml.XmlWriter.WriteAttributeString%2A>メソッドは、名前空間 URI を変更の`"x"`からプレフィックス`"123"`に`"abc"`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-198">In the following code, the <xref:System.Xml.XmlWriter.WriteAttributeString%2A> method changes the namespace URI for the `"x"` prefix from `"123"` to `"abc"`.</span></span>  
  
     [!code-csharp[XmlWriter_v2#18](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#18)]
     [!code-vb[XmlWriter_v2#18](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#18)]  
  
     <span data-ttu-id="f94a1-199">このコードは、次の XML 文字列を生成します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-199">The code generates the following XML string:</span></span>  
  
    ```  
    <x:root xmlns:x="123">  
      <item xmlns:x="abc" />  
    </x:root>  
    ```  
  
-   <span data-ttu-id="f94a1-200">属性または要素の書き込み時に名前空間プレフィックスを指定する。</span><span class="sxs-lookup"><span data-stu-id="f94a1-200">Specify a namespace prefix when writing attributes or elements.</span></span> <span data-ttu-id="f94a1-201">これを行う多くの要素と属性を書き込むために使用するメソッドができます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-201">Many of the methods used to write element and attributes enable you to do this.</span></span> <span data-ttu-id="f94a1-202">たとえば、<xref:System.Xml.XmlWriter.WriteStartElement%28System.String%2CSystem.String%2CSystem.String%29>メソッド、開始タグを書き込み、指定した名前空間とプレフィックスに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-202">For example, the <xref:System.Xml.XmlWriter.WriteStartElement%28System.String%2CSystem.String%2CSystem.String%29> method writes a start tag and associates it with a specified namespace and prefix.</span></span>  
  
<a name="writing_types"></a>   
## <a name="writing-typed-data"></a><span data-ttu-id="f94a1-203">型指定されたデータの書き込み</span><span class="sxs-lookup"><span data-stu-id="f94a1-203">Writing typed data</span></span>  
 <span data-ttu-id="f94a1-204"><xref:System.Xml.XmlWriter.WriteValue%2A>メソッドは、共通言語ランタイム (CLR) オブジェクトを受け取ります、XML スキーマ定義言語 (XSD) のデータ型変換規則に従って、その文字列形式を入力値を変換しを使用して out 書き込みます、<xref:System.Xml.XmlWriter.WriteString%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-204">The <xref:System.Xml.XmlWriter.WriteValue%2A> method accepts a common language runtime (CLR) object, converts the input value to its string representation according to XML schema definition language (XSD) data type conversion rules, and writes it out by using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span> <span data-ttu-id="f94a1-205">これは、メソッドを使用するよりも簡単です、<xref:System.Xml.XmlConvert>書き込む前に、文字列値に型指定されたデータを変換するクラス。</span><span class="sxs-lookup"><span data-stu-id="f94a1-205">This is easier than using the methods in the <xref:System.Xml.XmlConvert> class to convert the typed data to a string value before writing it out.</span></span>  
  
 <span data-ttu-id="f94a1-206">使用して、型指定された値がテキストにシリアル化をテキストに記述する場合、<xref:System.Xml.XmlConvert>スキーマの種類の規則。</span><span class="sxs-lookup"><span data-stu-id="f94a1-206">When writing to text, the typed value is serialized to text by using the <xref:System.Xml.XmlConvert> rules for that schema type.</span></span>  
  
 <span data-ttu-id="f94a1-207">CLR 型に対応する既定の XSD データ型を参照してください、<xref:System.Xml.XmlWriter.WriteValue%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-207">For default XSD data types that correspond to CLR types, see the <xref:System.Xml.XmlWriter.WriteValue%2A> method.</span></span>  
  
 <span data-ttu-id="f94a1-208"><xref:System.Xml.XmlWriter> XML データ ストアへの書き込みにも使用できます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-208">The <xref:System.Xml.XmlWriter> can also be used to write to an XML data store.</span></span> <span data-ttu-id="f94a1-209">たとえば、<xref:System.Xml.XPath.XPathNavigator> クラスは <xref:System.Xml.XmlWriter> オブジェクトを作成して、<xref:System.Xml.XmlDocument> オブジェクト用のノードを作成できます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-209">For example, the <xref:System.Xml.XPath.XPathNavigator> class can create an <xref:System.Xml.XmlWriter> object to create nodes for an <xref:System.Xml.XmlDocument> object.</span></span> <span data-ttu-id="f94a1-210">データ ストアがあるあります。 スキーマ情報を、使用可能な場合、<xref:System.Xml.XmlWriter.WriteValue%2A>を許可されていない型に変換しようとする場合、メソッドが例外をスローします。データ ストアは、利用可能なスキーマ情報を持っていない場合、<xref:System.Xml.XmlWriter.WriteValue%2A>メソッドはすべての値として処理、`xsd:anySimpleType`型です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-210">If the data store has schema information available to it, the <xref:System.Xml.XmlWriter.WriteValue%2A> method throws an exception if you try to convert to a type that is not allowed.If the data store does not have schema information available to it, the <xref:System.Xml.XmlWriter.WriteValue%2A> method treats all values as an `xsd:anySimpleType` type.</span></span>  
  
<a name="close"></a>   
## <a name="closing-the-xml-writer"></a><span data-ttu-id="f94a1-211">XML ライターを閉じる</span><span class="sxs-lookup"><span data-stu-id="f94a1-211">Closing the XML writer</span></span>  
 <span data-ttu-id="f94a1-212">使用すると<xref:System.Xml.XmlWriter>XML 要素や属性を出力するメソッドが呼び出されるまでに書き込まれていない、<xref:System.Xml.XmlWriter.Close%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-212">When you use <xref:System.Xml.XmlWriter> methods to output XML, the elements and attributes are not written until you call the <xref:System.Xml.XmlWriter.Close%2A> method.</span></span> <span data-ttu-id="f94a1-213">使用している場合など、<xref:System.Xml.XmlWriter>を設定する、<xref:System.Xml.XmlDocument>オブジェクトを終了するまでに書き込まれる要素とターゲット ドキュメントに属性を表示することはできません、<xref:System.Xml.XmlWriter>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="f94a1-213">For example, if you are using <xref:System.Xml.XmlWriter> to populate an <xref:System.Xml.XmlDocument> object, you won't be able to see the written elements and attributes in the target document until you close the <xref:System.Xml.XmlWriter> instance.</span></span>  
  
<a name="async"></a>   
## <a name="asynchronous-programming"></a><span data-ttu-id="f94a1-214">非同期プログラミング</span><span class="sxs-lookup"><span data-stu-id="f94a1-214">Asynchronous programming</span></span>  
 <span data-ttu-id="f94a1-215">ほとんどの<xref:System.Xml.XmlWriter>メソッドをメソッド名の末尾に"Async"を持つ非同期の対応があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-215">Most of the <xref:System.Xml.XmlWriter> methods have asynchronous counterparts that have "Async" at the end of their method names.</span></span> <span data-ttu-id="f94a1-216">たとえば、非同期に相当<xref:System.Xml.XmlWriter.WriteAttributeString%2A>は<xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-216">For example, the asynchronous equivalent of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> is <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.</span></span>  
  
 <span data-ttu-id="f94a1-217"><xref:System.Xml.XmlWriter.WriteValue%2A>メソッドは、いない対応する非同期がある、戻り値を文字列に変換を使用して、<xref:System.Xml.XmlWriter.WriteStringAsync%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-217">For the <xref:System.Xml.XmlWriter.WriteValue%2A> method, which doesn't have an asynchronous counterpart, convert the return value to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method instead.</span></span>  
  
<a name="security"></a>   
## <a name="security-considerations"></a><span data-ttu-id="f94a1-218">セキュリティの考慮事項</span><span class="sxs-lookup"><span data-stu-id="f94a1-218">Security considerations</span></span>  
 <span data-ttu-id="f94a1-219">使用する場合は、次を検討してください、<xref:System.Xml.XmlWriter>クラス。</span><span class="sxs-lookup"><span data-stu-id="f94a1-219">Consider the following when working with the <xref:System.Xml.XmlWriter> class:</span></span>  
  
-   <span data-ttu-id="f94a1-220">によってスローされた例外、<xref:System.Xml.XmlWriter>たくないパス情報に送られ、アプリを公開することができます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-220">Exceptions thrown by the <xref:System.Xml.XmlWriter> can disclose path information that you do not want bubbled up to the app.</span></span> <span data-ttu-id="f94a1-221">アプリは、例外をキャッチして適切に処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-221">Your app must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="f94a1-222"><xref:System.Xml.XmlWriter> 渡されるすべてのデータを検証しません、<xref:System.Xml.XmlWriter.WriteDocType%2A>または<xref:System.Xml.XmlWriter.WriteRaw%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-222"><xref:System.Xml.XmlWriter> does not validate any data that is passed to the <xref:System.Xml.XmlWriter.WriteDocType%2A> or <xref:System.Xml.XmlWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="f94a1-223">これらのメソッドを任意のデータを渡さないでください。</span><span class="sxs-lookup"><span data-stu-id="f94a1-223">You should not pass arbitrary data to these methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-224">次のコード例は、非同期 API を使用して XML を生成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f94a1-224">The following example code shows how to use the asynchronous API to generate XML.</span></span>  
  
```  
async Task TestWriter(Stream stream)   
{  
    XmlWriterSettings settings = new XmlWriterSettings();  
    settings.Async = true;  
  
    using (XmlWriter writer = XmlWriter.Create(stream, settings)) {  
        await writer.WriteStartElementAsync("pf", "root", "http://ns");  
        await writer.WriteStartElementAsync(null, "sub", null);  
        await writer.WriteAttributeStringAsync(null, "att", null, "val");  
        await writer.WriteStringAsync("text");  
        await writer.WriteEndElementAsync();  
        await writer.WriteProcessingInstructionAsync("pName", "pValue");  
        await writer.WriteCommentAsync("cValue");  
        await writer.WriteCDataAsync("cdata value");  
        await writer.WriteEndElementAsync();  
        await writer.FlushAsync();  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f94a1-225"><see cref="T:System.Xml.XmlWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-225">Initializes a new instance of the <see cref="T:System.Xml.XmlWriter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f94a1-226">派生クラスでオーバーライドされると、このストリームと基になるストリームを閉じます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-226">When overridden in a derived class, closes this stream and the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-227">すべての要素や属性が開いたままになり自動的に閉じられます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-227">Any elements or attributes left open are automatically closed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f94a1-228">使用すると、 <xref:System.Xml.XmlWriter> XML 要素や属性を出力する方法は書き込まれませんが呼び出されるまで、<xref:System.Xml.XmlWriter.Close%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-228">When you use the <xref:System.Xml.XmlWriter> methods to output XML, the elements and attributes will not be written until you call the <xref:System.Xml.XmlWriter.Close%2A> method.</span></span> <span data-ttu-id="f94a1-229">XmlWriter を使用して設定する場合など、<xref:System.Xml.XmlDocument>を終了するまで、 <xref:System.Xml.XmlWriter>、書き込まれる要素とターゲット ドキュメントに属性を確認することはできません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-229">For example, if you are using the XmlWriter to populate an <xref:System.Xml.XmlDocument>, until you close the <xref:System.Xml.XmlWriter>, you will not be able to observe the written elements and attributes in the target document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-230">次の例では、XML ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-230">The following example writes an XML node.</span></span>  
  
 [!code-cpp[XmlWriter.Close#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Close/CPP/XmlWriter.Close.cpp#1)]
 [!code-csharp[XmlWriter.Close#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Close/CS/writeelems.cs#1)]
 [!code-vb[XmlWriter.Close#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Close/VB/writeelems.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-231">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-231">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-232">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-232">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f94a1-233">新しい <see cref="T:System.Xml.XmlWriter" /> のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-233">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-234">一部の<xref:System.Xml.XmlWriter.Create%2A>オーバー ロードが含まれて、`settings`を受け取るパラメーター、<xref:System.Xml.XmlWriterSettings>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-234">Some of the <xref:System.Xml.XmlWriter.Create%2A> overloads include a `settings` parameter that accepts an <xref:System.Xml.XmlWriterSettings> object.</span></span> <span data-ttu-id="f94a1-235">このオブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-235">You can use this object to:</span></span>  
  
-   <span data-ttu-id="f94a1-236">指定する機能、作成されたサポートされている<xref:System.Xml.XmlWriter>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-236">Specify which features you want supported on the created <xref:System.Xml.XmlWriter> object.</span></span>  
  
-   <span data-ttu-id="f94a1-237">再利用、<xref:System.Xml.XmlWriterSettings>ライターの複数のオブジェクトを作成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-237">Reuse the <xref:System.Xml.XmlWriterSettings> object to create multiple writer objects.</span></span> <span data-ttu-id="f94a1-238">作成されるライターそれぞれについて、<xref:System.Xml.XmlWriterSettings> オブジェクトがコピーされ、読み取り専用とマークされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-238">The <xref:System.Xml.XmlWriterSettings> object is copied and marked read-only for each created writer.</span></span> <span data-ttu-id="f94a1-239"><xref:System.Xml.XmlWriterSettings> インスタンスの設定が変更されても、同じ設定を使用している既存のライターには影響しません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-239">Changes to the settings on an <xref:System.Xml.XmlWriterSettings> instance do not affect existing writers with the same settings.</span></span> <span data-ttu-id="f94a1-240">したがって、同じ機能を持つ複数のライターの作成に、同じ設定を使用できます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-240">Thus, you can use the same settings to create multiple writers with the same functionality.</span></span> <span data-ttu-id="f94a1-241">または、<xref:System.Xml.XmlWriterSettings> インスタンスの設定を変更して、別の機能セットを持つ新しいライターを作成できます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-241">Or, you can modify the settings on an <xref:System.Xml.XmlWriterSettings> instance and create a new writer with a different set of features.</span></span>  
  
-   <span data-ttu-id="f94a1-242">既存の XML ライターに機能を追加します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-242">Add features to an existing XML writer.</span></span> <span data-ttu-id="f94a1-243"><xref:System.Xml.XmlWriter.Create%2A> メソッドは別の <xref:System.Xml.XmlWriter> オブジェクトを受け取ることができます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-243">The <xref:System.Xml.XmlWriter.Create%2A> method can accept another <xref:System.Xml.XmlWriter> object.</span></span> <span data-ttu-id="f94a1-244">基になる<xref:System.Xml.XmlWriter>オブジェクトに、静的なによって作成された XML ライターにない<xref:System.Xml.XmlWriter.Create%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-244">The underlying <xref:System.Xml.XmlWriter> object does not have to be an XML writer created by the static <xref:System.Xml.XmlWriter.Create%2A> method.</span></span> <span data-ttu-id="f94a1-245">たとえば、追加の機能を追加するユーザー定義の XML ライターを指定できます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-245">For example, you can specify a user-defined XML writer to add additional features to.</span></span>  
  
-   <span data-ttu-id="f94a1-246">優れた一致チェックやへの準拠などの機能をフル活用、 [XML 1.0 勧告](http://www.w3.org/TR/2006/REC-xml-20060816/)でのみ利用可能な<xref:System.Xml.XmlWriter>静的によって作成されたオブジェクト<xref:System.Xml.XmlWriter.Create%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-246">Take full advantage of features such as better conformance checking and compliance to the [XML 1.0 recommendation](http://www.w3.org/TR/2006/REC-xml-20060816/) that are available only on <xref:System.Xml.XmlWriter> objects created by the static <xref:System.Xml.XmlWriter.Create%2A> method.</span></span>  
  
 <span data-ttu-id="f94a1-247">使用する場合、<xref:System.Xml.XmlWriter.Create%2A>を受け取らないオーバー ロード、<xref:System.Xml.XmlWriterSettings>オブジェクトの次の既定のライターの設定が使用されます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-247">If you use a <xref:System.Xml.XmlWriter.Create%2A> overload that doesn't accept an <xref:System.Xml.XmlWriterSettings> object, the following default writer settings are used:</span></span>  
  
|<span data-ttu-id="f94a1-248">設定</span><span class="sxs-lookup"><span data-stu-id="f94a1-248">Setting</span></span>|<span data-ttu-id="f94a1-249">既定値</span><span class="sxs-lookup"><span data-stu-id="f94a1-249">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="f94a1-250">2 つのスペース</span><span class="sxs-lookup"><span data-stu-id="f94a1-250">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="f94a1-251"><xref:System.Xml.NamespaceHandling.Default> (削除ではありません)</span><span class="sxs-lookup"><span data-stu-id="f94a1-251"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="f94a1-252">`\r\n` (キャリッジ リターン、改行)</span><span class="sxs-lookup"><span data-stu-id="f94a1-252">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
> [!NOTE]
>  <span data-ttu-id="f94a1-253">.NET Framework に含まれていますが、<xref:System.Xml.XmlTextWriter>クラスを具象実装ですの<xref:System.Xml.XmlWriter>クラス、お勧めを作成すること<xref:System.Xml.XmlWriter>インスタンスを使用して、<xref:System.Xml.XmlWriter.Create%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-253">Although the .NET Framework includes the <xref:System.Xml.XmlTextWriter> class, which is a concrete implementation of the <xref:System.Xml.XmlWriter> class, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As Stream) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::Stream ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="f94a1-254">書き込み先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="f94a1-254">The stream to which you want to write.</span></span> <span data-ttu-id="f94a1-255"><see cref="T:System.Xml.XmlWriter" /> は、XML 1.0 テキスト構文を書き込み、指定されたストリームにそれを付加します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-255">The <see cref="T:System.Xml.XmlWriter" /> writes XML 1.0 text syntax and appends it to the specified stream.</span></span></param>
        <summary><span data-ttu-id="f94a1-256">指定されたストリームを使用して新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-256">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified stream.</span></span></summary>
        <returns><span data-ttu-id="f94a1-257"><see cref="T:System.Xml.XmlWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-257">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-258">このオーバー ロードを使用すると、 <xref:System.Xml.XmlWriterSettings> XML ライターを作成する次の既定の設定を持つオブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-258">When you use this overload, an <xref:System.Xml.XmlWriterSettings> object with the following default settings is used to create the XML writer:</span></span>  
  
|<span data-ttu-id="f94a1-259">設定</span><span class="sxs-lookup"><span data-stu-id="f94a1-259">Setting</span></span>|<span data-ttu-id="f94a1-260">既定値</span><span class="sxs-lookup"><span data-stu-id="f94a1-260">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="f94a1-261">2 つのスペース</span><span class="sxs-lookup"><span data-stu-id="f94a1-261">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="f94a1-262"><xref:System.Xml.NamespaceHandling.Default> (削除ではありません)</span><span class="sxs-lookup"><span data-stu-id="f94a1-262"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="f94a1-263">`\r\n` (キャリッジ リターン、改行)</span><span class="sxs-lookup"><span data-stu-id="f94a1-263">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 <span data-ttu-id="f94a1-264">作成されたライターをサポートする機能を指定する場合を受け取るオーバー ロードを使用して、 <xref:System.Xml.XmlWriterSettings> 、引数の 1 つとしてオブジェクトを渡して、<xref:System.Xml.XmlWriterSettings>カスタム設定を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-264">If you want to specify the features to support on the created writer, use an overload that takes an <xref:System.Xml.XmlWriterSettings> object as one of its arguments, and pass in an <xref:System.Xml.XmlWriterSettings> object with your custom settings.</span></span>  
  
 <span data-ttu-id="f94a1-265">また、XmlWriter 常にバイト オーダー マーク (BOM)、基になるデータをストリームに書き込みます。ただし、一部のストリームでは、BOM は許可されません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-265">Also, XmlWriter always writes a Byte Order Mark (BOM) to the underlying data stream; however, some streams must not have a BOM.</span></span> <span data-ttu-id="f94a1-266">BOM を省略する場合は、新規作成<xref:System.Xml.XmlWriterSettings>オブジェクトおよび新しいするエンコード プロパティを設定する<xref:System.Text.UTF8Encoding>を false に設定するコンス トラクターでブール値を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-266">To omit the BOM, create a new <xref:System.Xml.XmlWriterSettings> object and set the Encoding property to be a new <xref:System.Text.UTF8Encoding> object with the Boolean value in the constructor set to false.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-267">次の例は、XML フラグメントをメモリ ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-267">The following example writes an XML fragment to a memory stream.</span></span> <span data-ttu-id="f94a1-268">(を使用して、<xref:System.Xml.XmlWriter.Create%28System.IO.Stream%2CSystem.Xml.XmlWriterSettings%29>過負荷、また、新しい XML ライター インスタンスで、設定を構成する)。</span><span class="sxs-lookup"><span data-stu-id="f94a1-268">(It uses the <xref:System.Xml.XmlWriter.Create%28System.IO.Stream%2CSystem.Xml.XmlWriterSettings%29> overload, which also configures the settings on the new XML writer instance.)</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f94a1-269"><paramref name="stream" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-269">The <paramref name="stream" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As TextWriter) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="f94a1-270">書き込み先の <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="f94a1-270">The <see cref="T:System.IO.TextWriter" /> to which you want to write.</span></span> <span data-ttu-id="f94a1-271"><see cref="T:System.Xml.XmlWriter" /> は、XML 1.0 テキスト構文を書き込み、指定された <see cref="T:System.IO.TextWriter" /> にそれを付加します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-271">The <see cref="T:System.Xml.XmlWriter" /> writes XML 1.0 text syntax and appends it to the specified <see cref="T:System.IO.TextWriter" />.</span></span></param>
        <summary><span data-ttu-id="f94a1-272">指定された <see cref="T:System.IO.TextWriter" /> を使用して新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-272">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <returns><span data-ttu-id="f94a1-273"><see cref="T:System.Xml.XmlWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-273">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-274">このオーバー ロードを使用すると、 <xref:System.Xml.XmlWriterSettings> XML ライターを作成する既定の設定を持つオブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-274">When you use this overload, an <xref:System.Xml.XmlWriterSettings> object with default settings is used to create the XML writer.</span></span>  
  
|<span data-ttu-id="f94a1-275">設定</span><span class="sxs-lookup"><span data-stu-id="f94a1-275">Setting</span></span>|<span data-ttu-id="f94a1-276">既定値</span><span class="sxs-lookup"><span data-stu-id="f94a1-276">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="f94a1-277">2 つのスペース</span><span class="sxs-lookup"><span data-stu-id="f94a1-277">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="f94a1-278"><xref:System.Xml.NamespaceHandling.Default> (削除ではありません)</span><span class="sxs-lookup"><span data-stu-id="f94a1-278"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="f94a1-279">`\r\n` (キャリッジ リターン、改行)</span><span class="sxs-lookup"><span data-stu-id="f94a1-279">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 <span data-ttu-id="f94a1-280">作成されたライターをサポートする機能を指定する場合を受け取るオーバー ロードを使用して、 <xref:System.Xml.XmlWriterSettings> 、引数の 1 つとしてオブジェクトを渡して、<xref:System.Xml.XmlWriterSettings>カスタム設定を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-280">If you want to specify the features to support on the created writer, use an overload that takes an <xref:System.Xml.XmlWriterSettings> object as one of its arguments, and pass in an <xref:System.Xml.XmlWriterSettings> object with your custom settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-281">次の例では、コンソールに出力するライターを作成します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-281">The following example creates a writer that outputs to the console.</span></span>  
  
 [!code-csharp[XmlWriter_v2#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#3)]
 [!code-vb[XmlWriter_v2#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f94a1-282"><paramref name="text" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-282">The <paramref name="text" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (string outputFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(string outputFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (outputFileName As String) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::String ^ outputFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outputFileName"><span data-ttu-id="f94a1-283">書き込み先のファイル。</span><span class="sxs-lookup"><span data-stu-id="f94a1-283">The file to which you want to write.</span></span> <span data-ttu-id="f94a1-284"><see cref="T:System.Xml.XmlWriter" /> は、指定されたパスにファイルを作成し、XML 1.0 テキスト構文でファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-284">The <see cref="T:System.Xml.XmlWriter" /> creates a file at the specified path and writes to it in XML 1.0 text syntax.</span></span> <span data-ttu-id="f94a1-285"><c>outputFileName</c> はファイル システム パスにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-285">The <c>outputFileName</c> must be a file system path.</span></span></param>
        <summary><span data-ttu-id="f94a1-286">指定されたファイル名を使用して新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-286">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified filename.</span></span></summary>
        <returns><span data-ttu-id="f94a1-287"><see cref="T:System.Xml.XmlWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-287">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-288">このオーバー ロードを使用すると、 <xref:System.Xml.XmlWriterSettings> XML ライターを作成する既定の設定を持つオブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-288">When you use this overload, an <xref:System.Xml.XmlWriterSettings> object with default settings is used to create the XML writer.</span></span>  
  
|<span data-ttu-id="f94a1-289">設定</span><span class="sxs-lookup"><span data-stu-id="f94a1-289">Setting</span></span>|<span data-ttu-id="f94a1-290">既定値</span><span class="sxs-lookup"><span data-stu-id="f94a1-290">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="f94a1-291">2 つのスペース</span><span class="sxs-lookup"><span data-stu-id="f94a1-291">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="f94a1-292"><xref:System.Xml.NamespaceHandling.Default> (削除ではありません)</span><span class="sxs-lookup"><span data-stu-id="f94a1-292"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="f94a1-293">`\r\n` (キャリッジ リターン、改行)</span><span class="sxs-lookup"><span data-stu-id="f94a1-293">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 <span data-ttu-id="f94a1-294">作成された XML ライターをサポートする機能を指定する場合を受け取るオーバー ロードを使用して、 <xref:System.Xml.XmlWriterSettings> 、引数の 1 つとしてオブジェクトを渡して、<xref:System.Xml.XmlWriterSettings>カスタム設定を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-294">If you want to specify the features to support on the created XML writer, use an overload that takes an <xref:System.Xml.XmlWriterSettings> object as one of its arguments, and pass in a <xref:System.Xml.XmlWriterSettings> object with your custom settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-295">次の例を作成、<xref:System.Xml.XmlWriter>オブジェクトを book ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-295">The following example creates an <xref:System.Xml.XmlWriter> object and writes a book node.</span></span>  
  
 [!code-csharp[XmlWriter_v2#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#2)]
 [!code-vb[XmlWriter_v2#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f94a1-296"><paramref name="url" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-296">The <paramref name="url" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Text.StringBuilder output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Text.StringBuilder output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As StringBuilder) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Text::StringBuilder ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="f94a1-297">書き込み先の <see cref="T:System.Text.StringBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="f94a1-297">The <see cref="T:System.Text.StringBuilder" /> to which to write to.</span></span> <span data-ttu-id="f94a1-298"><see cref="T:System.Xml.XmlWriter" /> で書き込まれたコンテンツが、<see cref="T:System.Text.StringBuilder" /> に付加されます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-298">Content written by the <see cref="T:System.Xml.XmlWriter" /> is appended to the <see cref="T:System.Text.StringBuilder" />.</span></span></param>
        <summary><span data-ttu-id="f94a1-299">指定された <see cref="T:System.Text.StringBuilder" /> を使用して新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-299">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified <see cref="T:System.Text.StringBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="f94a1-300"><see cref="T:System.Xml.XmlWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-300">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-301">このオーバー ロードを使用すると、 <xref:System.Xml.XmlWriterSettings> XML ライターを作成する既定の設定を持つオブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-301">When you use this overload, an <xref:System.Xml.XmlWriterSettings> object with default settings is used to create the XML writer.</span></span>  
  
|<span data-ttu-id="f94a1-302">設定</span><span class="sxs-lookup"><span data-stu-id="f94a1-302">Setting</span></span>|<span data-ttu-id="f94a1-303">既定値</span><span class="sxs-lookup"><span data-stu-id="f94a1-303">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="f94a1-304">2 つのスペース</span><span class="sxs-lookup"><span data-stu-id="f94a1-304">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="f94a1-305"><xref:System.Xml.NamespaceHandling.Default> (削除ではありません)</span><span class="sxs-lookup"><span data-stu-id="f94a1-305"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="f94a1-306">`\r\n` (キャリッジ リターン、改行)</span><span class="sxs-lookup"><span data-stu-id="f94a1-306">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 <span data-ttu-id="f94a1-307">作成された XML ライターをサポートする機能を指定する場合を受け取るオーバー ロードを使用して、 <xref:System.Xml.XmlWriterSettings> 、引数の 1 つとしてオブジェクトを渡して、<xref:System.Xml.XmlWriterSettings>カスタム設定を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-307">If you want to specify the features to support on the created XML writer, use an overload that takes an <xref:System.Xml.XmlWriterSettings> object as one of its arguments, and pass in a <xref:System.Xml.XmlWriterSettings> object with your custom settings.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f94a1-308"><paramref name="builder" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-308">The <paramref name="builder" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As XmlWriter) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Xml::XmlWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="f94a1-309">基になるライターとして使用する <see cref="T:System.Xml.XmlWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-309">The <see cref="T:System.Xml.XmlWriter" /> object that you want to use as the underlying writer.</span></span></param>
        <summary><span data-ttu-id="f94a1-310">指定された <see cref="T:System.Xml.XmlWriter" /> オブジェクトを使用して新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-310">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified <see cref="T:System.Xml.XmlWriter" /> object.</span></span></summary>
        <returns><span data-ttu-id="f94a1-311">指定された <see cref="T:System.Xml.XmlWriter" /> オブジェクトをラップする <see cref="T:System.Xml.XmlWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-311">An <see cref="T:System.Xml.XmlWriter" /> object that is wrapped around the specified <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-312">このメソッドにより、機能を追加する、基になる<xref:System.Xml.XmlWriter>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-312">This method allows you add features to an underlying <xref:System.Xml.XmlWriter> object.</span></span> <span data-ttu-id="f94a1-313">基になる<xref:System.Xml.XmlWriter>オブジェクトによって作成されたオブジェクトには、<xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>メソッド、またはを使用して作成されたオブジェクト、<xref:System.Xml.XmlTextWriter>実装します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-313">The underlying <xref:System.Xml.XmlWriter> object can be an object created by the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method, or an object created using the <xref:System.Xml.XmlTextWriter> implementation.</span></span>  
  
 <span data-ttu-id="f94a1-314">このオーバー ロードを使用すると、 <xref:System.Xml.XmlWriterSettings> XML ライターを作成する既定の設定を持つオブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-314">When you use this overload, an <xref:System.Xml.XmlWriterSettings> object with default settings is used to create the XML writer.</span></span>  
  
|<span data-ttu-id="f94a1-315">設定</span><span class="sxs-lookup"><span data-stu-id="f94a1-315">Setting</span></span>|<span data-ttu-id="f94a1-316">既定値</span><span class="sxs-lookup"><span data-stu-id="f94a1-316">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="f94a1-317">2 つのスペース</span><span class="sxs-lookup"><span data-stu-id="f94a1-317">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="f94a1-318"><xref:System.Xml.NamespaceHandling.Default> (削除ではありません)</span><span class="sxs-lookup"><span data-stu-id="f94a1-318"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="f94a1-319">`\r\n` (キャリッジ リターン、改行)</span><span class="sxs-lookup"><span data-stu-id="f94a1-319">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 <span data-ttu-id="f94a1-320">作成された XML ライターをサポートする機能を指定する場合を受け取るオーバー ロードを使用して、 <xref:System.Xml.XmlWriterSettings> 、引数の 1 つとしてオブジェクトを渡して、<xref:System.Xml.XmlWriterSettings>カスタム設定を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-320">If you want to specify the features to support on the created XML writer, use an overload that takes an <xref:System.Xml.XmlWriterSettings> object as one of its arguments, and pass in a <xref:System.Xml.XmlWriterSettings> object with your custom settings.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f94a1-321"><paramref name="writer" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-321">The <paramref name="writer" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.Stream output, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.Stream output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As Stream, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::Stream ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="f94a1-322">書き込み先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="f94a1-322">The stream to which you want to write.</span></span> <span data-ttu-id="f94a1-323"><see cref="T:System.Xml.XmlWriter" /> は、XML 1.0 テキスト構文を書き込み、指定されたストリームにそれを付加します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-323">The <see cref="T:System.Xml.XmlWriter" /> writes XML 1.0 text syntax and appends it to the specified stream.</span></span></param>
        <param name="settings"><span data-ttu-id="f94a1-324">新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを構成するために使用される <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-324">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to configure the new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span> <span data-ttu-id="f94a1-325">これが <see langword="null" /> である場合は、既定の設定で <see cref="T:System.Xml.XmlWriterSettings" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-325">If this is <see langword="null" />, a <see cref="T:System.Xml.XmlWriterSettings" /> with default settings is used.</span></span>  
  
 <span data-ttu-id="f94a1-326"><see cref="T:System.Xml.XmlWriter" /> を <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> メソッドと組み合わせて使用する場合は、<see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> プロパティを使って、正しい設定の割り当てられた <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-326">If the <see cref="T:System.Xml.XmlWriter" /> is being used with the <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> method, you should use the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property to obtain an <see cref="T:System.Xml.XmlWriterSettings" /> object with the correct settings.</span></span> <span data-ttu-id="f94a1-327">これにより、作成された <see cref="T:System.Xml.XmlWriter" /> オブジェクトに正しい出力設定が適用されます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-327">This ensures that the created <see cref="T:System.Xml.XmlWriter" /> object has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="f94a1-328">ストリームと <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを使用して新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-328">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the stream and <see cref="T:System.Xml.XmlWriterSettings" /> object.</span></span></summary>
        <returns><span data-ttu-id="f94a1-329"><see cref="T:System.Xml.XmlWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-329">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-330">XmlWriter が常にバイト オーダー マーク (BOM) を基になるデータ ストリームに書き込みますただし、一部のストリームでは、BOM は許可されません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-330">XmlWriter always writes a Byte Order Mark (BOM) to the underlying data stream; however, some streams must not have a BOM.</span></span> <span data-ttu-id="f94a1-331">BOM を省略する場合は、新規作成<xref:System.Xml.XmlWriterSettings>オブジェクトおよび新しいするエンコード プロパティを設定する<xref:System.Text.UTF8Encoding>を false に設定するコンス トラクターでブール値を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-331">To omit the BOM, create a new <xref:System.Xml.XmlWriterSettings> object and set the Encoding property to be a new <xref:System.Text.UTF8Encoding> object with the Boolean value in the constructor set to false.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-332">次の例は、XML フラグメントをメモリ ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-332">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f94a1-333"><paramref name="stream" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-333">The <paramref name="stream" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.TextWriter output, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.TextWriter output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As TextWriter, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::TextWriter ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="f94a1-334">書き込み先の <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="f94a1-334">The <see cref="T:System.IO.TextWriter" /> to which you want to write.</span></span> <span data-ttu-id="f94a1-335"><see cref="T:System.Xml.XmlWriter" /> は、XML 1.0 テキスト構文を書き込み、指定された <see cref="T:System.IO.TextWriter" /> にそれを付加します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-335">The <see cref="T:System.Xml.XmlWriter" /> writes XML 1.0 text syntax and appends it to the specified <see cref="T:System.IO.TextWriter" />.</span></span></param>
        <param name="settings"><span data-ttu-id="f94a1-336">新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを構成するために使用される <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-336">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to configure the new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span> <span data-ttu-id="f94a1-337">これが <see langword="null" /> である場合は、既定の設定で <see cref="T:System.Xml.XmlWriterSettings" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-337">If this is <see langword="null" />, a <see cref="T:System.Xml.XmlWriterSettings" /> with default settings is used.</span></span>  
  
 <span data-ttu-id="f94a1-338"><see cref="T:System.Xml.XmlWriter" /> を <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> メソッドと組み合わせて使用する場合は、<see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> プロパティを使って、正しい設定の割り当てられた <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-338">If the <see cref="T:System.Xml.XmlWriter" /> is being used with the <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> method, you should use the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property to obtain an <see cref="T:System.Xml.XmlWriterSettings" /> object with the correct settings.</span></span> <span data-ttu-id="f94a1-339">これにより、作成された <see cref="T:System.Xml.XmlWriter" /> オブジェクトに正しい出力設定が適用されます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-339">This ensures that the created <see cref="T:System.Xml.XmlWriter" /> object has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="f94a1-340"><see cref="T:System.IO.TextWriter" /> オブジェクトと <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを使用して新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-340">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the <see cref="T:System.IO.TextWriter" /> and <see cref="T:System.Xml.XmlWriterSettings" /> objects.</span></span></summary>
        <returns><span data-ttu-id="f94a1-341"><see cref="T:System.Xml.XmlWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-341">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f94a1-342">次の例は、XML 文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-342">The following example writes out an XML string.</span></span>  
  
 [!code-csharp[XmlWriter_v2#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#4)]
 [!code-vb[XmlWriter_v2#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f94a1-343"><paramref name="text" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-343">The <paramref name="text" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (string outputFileName, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(string outputFileName, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (outputFileName As String, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::String ^ outputFileName, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileName" Type="System.String" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="outputFileName"><span data-ttu-id="f94a1-344">書き込み先のファイル。</span><span class="sxs-lookup"><span data-stu-id="f94a1-344">The file to which you want to write.</span></span> <span data-ttu-id="f94a1-345"><see cref="T:System.Xml.XmlWriter" /> は、指定されたパスにファイルを作成し、XML 1.0 テキスト構文でファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-345">The <see cref="T:System.Xml.XmlWriter" /> creates a file at the specified path and writes to it in XML 1.0 text syntax.</span></span> <span data-ttu-id="f94a1-346"><c>outputFileName</c> はファイル システム パスにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-346">The <c>outputFileName</c> must be a file system path.</span></span></param>
        <param name="settings"><span data-ttu-id="f94a1-347">新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを構成するために使用される <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-347">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to configure the new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span> <span data-ttu-id="f94a1-348">これが <see langword="null" /> である場合は、既定の設定で <see cref="T:System.Xml.XmlWriterSettings" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-348">If this is <see langword="null" />, a <see cref="T:System.Xml.XmlWriterSettings" /> with default settings is used.</span></span>  
  
 <span data-ttu-id="f94a1-349"><see cref="T:System.Xml.XmlWriter" /> を <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> メソッドと組み合わせて使用する場合は、<see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> プロパティを使って、正しい設定の割り当てられた <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-349">If the <see cref="T:System.Xml.XmlWriter" /> is being used with the <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> method, you should use the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property to obtain an <see cref="T:System.Xml.XmlWriterSettings" /> object with the correct settings.</span></span> <span data-ttu-id="f94a1-350">これにより、作成された <see cref="T:System.Xml.XmlWriter" /> オブジェクトに正しい出力設定が適用されます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-350">This ensures that the created <see cref="T:System.Xml.XmlWriter" /> object has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="f94a1-351">ファイル名と <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを使用して新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-351">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the filename and <see cref="T:System.Xml.XmlWriterSettings" /> object.</span></span></summary>
        <returns><span data-ttu-id="f94a1-352"><see cref="T:System.Xml.XmlWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-352">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f94a1-353">次の例を作成、<xref:System.Xml.XmlWriter>定義された設定を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-353">The following example creates an <xref:System.Xml.XmlWriter> object with the defined settings.</span></span>  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f94a1-354"><paramref name="url" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-354">The <paramref name="url" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Text.StringBuilder output, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Text.StringBuilder output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As StringBuilder, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Text::StringBuilder ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Text.StringBuilder" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="f94a1-355">書き込み先の <see cref="T:System.Text.StringBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="f94a1-355">The <see cref="T:System.Text.StringBuilder" /> to which to write to.</span></span> <span data-ttu-id="f94a1-356"><see cref="T:System.Xml.XmlWriter" /> で書き込まれたコンテンツが、<see cref="T:System.Text.StringBuilder" /> に付加されます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-356">Content written by the <see cref="T:System.Xml.XmlWriter" /> is appended to the <see cref="T:System.Text.StringBuilder" />.</span></span></param>
        <param name="settings"><span data-ttu-id="f94a1-357">新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを構成するために使用される <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-357">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to configure the new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span> <span data-ttu-id="f94a1-358">これが <see langword="null" /> である場合は、既定の設定で <see cref="T:System.Xml.XmlWriterSettings" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-358">If this is <see langword="null" />, a <see cref="T:System.Xml.XmlWriterSettings" /> with default settings is used.</span></span>  
  
 <span data-ttu-id="f94a1-359"><see cref="T:System.Xml.XmlWriter" /> を <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> メソッドと組み合わせて使用する場合は、<see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> プロパティを使って、正しい設定の割り当てられた <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-359">If the <see cref="T:System.Xml.XmlWriter" /> is being used with the <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> method, you should use the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property to obtain an <see cref="T:System.Xml.XmlWriterSettings" /> object with the correct settings.</span></span> <span data-ttu-id="f94a1-360">これにより、作成された <see cref="T:System.Xml.XmlWriter" /> オブジェクトに正しい出力設定が適用されます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-360">This ensures that the created <see cref="T:System.Xml.XmlWriter" /> object has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="f94a1-361"><see cref="T:System.Text.StringBuilder" /> オブジェクトと <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを使用して新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-361">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the <see cref="T:System.Text.StringBuilder" /> and <see cref="T:System.Xml.XmlWriterSettings" /> objects.</span></span></summary>
        <returns><span data-ttu-id="f94a1-362"><see cref="T:System.Xml.XmlWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-362">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f94a1-363"><paramref name="builder" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-363">The <paramref name="builder" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Xml.XmlWriter output, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Xml.XmlWriter output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As XmlWriter, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Xml::XmlWriter ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="f94a1-364">基になるライターとして使用する <see cref="T:System.Xml.XmlWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-364">The <see cref="T:System.Xml.XmlWriter" /> object that you want to use as the underlying writer.</span></span></param>
        <param name="settings"><span data-ttu-id="f94a1-365">新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを構成するために使用される <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-365">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to configure the new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span> <span data-ttu-id="f94a1-366">これが <see langword="null" /> である場合は、既定の設定で <see cref="T:System.Xml.XmlWriterSettings" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-366">If this is <see langword="null" />, a <see cref="T:System.Xml.XmlWriterSettings" /> with default settings is used.</span></span>  
  
 <span data-ttu-id="f94a1-367"><see cref="T:System.Xml.XmlWriter" /> を <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> メソッドと組み合わせて使用する場合は、<see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> プロパティを使って、正しい設定の割り当てられた <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-367">If the <see cref="T:System.Xml.XmlWriter" /> is being used with the <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> method, you should use the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property to obtain an <see cref="T:System.Xml.XmlWriterSettings" /> object with the correct settings.</span></span> <span data-ttu-id="f94a1-368">これにより、作成された <see cref="T:System.Xml.XmlWriter" /> オブジェクトに正しい出力設定が適用されます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-368">This ensures that the created <see cref="T:System.Xml.XmlWriter" /> object has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="f94a1-369">指定された <see cref="T:System.Xml.XmlWriter" /> オブジェクトと <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを使用して新しい <see cref="T:System.Xml.XmlWriter" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-369">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified <see cref="T:System.Xml.XmlWriter" /> and <see cref="T:System.Xml.XmlWriterSettings" /> objects.</span></span></summary>
        <returns><span data-ttu-id="f94a1-370">指定された <see cref="T:System.Xml.XmlWriter" /> オブジェクトをラップする <see cref="T:System.Xml.XmlWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-370">An <see cref="T:System.Xml.XmlWriter" /> object that is wrapped around the specified <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-371">このメソッドを使用する、基になる追加機能を追加する<xref:System.Xml.XmlWriter>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-371">This method allows you add additional features to an underlying <xref:System.Xml.XmlWriter> object.</span></span> <span data-ttu-id="f94a1-372">基になる<xref:System.Xml.XmlWriter>オブジェクトによって作成されたオブジェクトには、<xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>メソッド、またはを使用して作成されたオブジェクト、<xref:System.Xml.XmlTextWriter>実装します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-372">The underlying <xref:System.Xml.XmlWriter> object can be an object created by the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method, or an object created using the <xref:System.Xml.XmlTextWriter> implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f94a1-373"><paramref name="writer" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-373">The <paramref name="writer" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-374">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-374">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-375">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-375">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span></span></exception>
        <summary><span data-ttu-id="f94a1-376"><see cref="T:System.Xml.XmlWriter" /> クラスによって使用されているリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-376">Releases the resources used by the <see cref="T:System.Xml.XmlWriter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f94a1-377"><see cref="T:System.Xml.XmlWriter" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-377">Releases all resources used by the current instance of the <see cref="T:System.Xml.XmlWriter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-378">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-378">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-379">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-379">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="f94a1-380">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f94a1-380"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="f94a1-381"><see cref="T:System.Xml.XmlWriter" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-381">Releases the unmanaged resources used by the <see cref="T:System.Xml.XmlWriter" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-382">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-382">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-383">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-383">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public abstract void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f94a1-384">派生クラスでオーバーライドされると、バッファー内のデータをすべて基になるストリームにフラッシュし、基になるストリームもフラッシュします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-384">When overridden in a derived class, flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-385">代わりにこれと呼びます<xref:System.Xml.XmlWriter.Close%2A>バッファーでは新機能を失うことがなく、基になるストリームに書き込みを行う場合します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-385">This is called instead of <xref:System.Xml.XmlWriter.Close%2A> when you want to write more to the underlying stream without losing what is still in the buffer.</span></span>  
  
 <span data-ttu-id="f94a1-386">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.FlushAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-386">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.FlushAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-387">次の例では、2 つの XML フラグメントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-387">The following example writes two XML fragments.</span></span>  
  
 [!code-cpp[XmlWriter.Flush#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Flush/CPP/write2docs_v2.cpp#1)]
 [!code-csharp[XmlWriter.Flush#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Flush/CS/write2docs_v2.cs#1)]
 [!code-vb[XmlWriter.Flush#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Flush/VB/write2docs_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-388">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-388">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-389">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-389">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f94a1-390">バッファー内のデータをすべて基になるストリームに非同期にフラッシュし、基になるストリームもフラッシュします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-390">Asynchronously flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span></span></summary>
        <returns><span data-ttu-id="f94a1-391">非同期の <see langword="Flush" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-391">The task that represents the asynchronous <see langword="Flush" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-392">これは、非同期バージョンの<xref:System.Xml.XmlWriter.Flush%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-392">This is the asynchronous version of <xref:System.Xml.XmlWriter.Flush%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-393">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-393">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-394"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-394">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-395">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-395">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public abstract string LookupPrefix (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupPrefix(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function LookupPrefix (ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ LookupPrefix(System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns"><span data-ttu-id="f94a1-396">検索対象のプリフィックスを持つ名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="f94a1-396">The namespace URI whose prefix you want to find.</span></span></param>
        <summary><span data-ttu-id="f94a1-397">派生クラスでオーバーライドされると、名前空間 URI の現在の名前空間スコープで定義された最も近いプリフィックスを返します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-397">When overridden in a derived class, returns the closest prefix defined in the current namespace scope for the namespace URI.</span></span></summary>
        <returns><span data-ttu-id="f94a1-398">一致するプリフィックス。現在のスコープに一致する名前空間 URI が見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f94a1-398">The matching prefix or <see langword="null" /> if no matching namespace URI is found in the current scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f94a1-399">次の例は、ブックを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-399">The following example writes out a book.</span></span>  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f94a1-400"><paramref name="ns" /> が <see langword="null" /> または <see langword="String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-400"><paramref name="ns" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-401">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-401">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-402">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-402">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriterSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlWriterSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.Settings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Settings As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlWriterSettings ^ Settings { System::Xml::XmlWriterSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f94a1-403">この <see cref="T:System.Xml.XmlWriter" /> インスタンスを作成するために使用された <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-403">Gets the <see cref="T:System.Xml.XmlWriterSettings" /> object used to create this <see cref="T:System.Xml.XmlWriter" /> instance.</span></span></summary>
        <value><span data-ttu-id="f94a1-404">このライターのインスタンスを作成するために使用した <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-404">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to create this writer instance.</span></span> <span data-ttu-id="f94a1-405">このライターが <see cref="Overload:System.Xml.XmlWriter.Create" /> メソッドを使用して作成されなかった場合、このプロパティは <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-405">If this writer was not created using the <see cref="Overload:System.Xml.XmlWriter.Create" /> method, this property returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-406"><xref:System.Xml.XmlWriterSettings>作成されたライターのインスタンスでサポートする機能のセットを指定するクラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-406">The <xref:System.Xml.XmlWriterSettings> class is used to specify the set of features to support on the created writer instance.</span></span> <span data-ttu-id="f94a1-407"><xref:System.Xml.XmlWriterSettings>によって返されるオブジェクト、<xref:System.Xml.XmlWriter.Settings%2A>プロパティを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-407">The <xref:System.Xml.XmlWriterSettings> object returned by the <xref:System.Xml.XmlWriter.Settings%2A> property cannot be modified.</span></span> <span data-ttu-id="f94a1-408">スローされた例外の個々 の設定の結果を変更しようとします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-408">Any attempt to change individual settings results in an exception being thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-409">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-409">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-410">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-410">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributes">
      <MemberSignature Language="C#" Value="public virtual void WriteAttributes (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttributes(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttributes (reader As XmlReader, defattr As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttributes(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="f94a1-411">属性のコピー元の <see langword="XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="f94a1-411">The <see langword="XmlReader" /> from which to copy the attributes.</span></span></param>
        <param name="defattr">
          <span data-ttu-id="f94a1-412"><see langword="XmlReader" /> の既定の属性をコピーする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f94a1-412"><see langword="true" /> to copy the default attributes from the <see langword="XmlReader" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f94a1-413">派生クラスでオーバーライドされると、<see cref="T:System.Xml.XmlReader" /> の現在の位置で見つかったすべての属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-413">When overridden in a derived class, writes out all the attributes found at the current position in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-414">リーダーが配置されている場合、`element`ノード`WriteAttributes`含まれているすべての属性をコピーします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-414">If the reader is positioned on an `element` node `WriteAttributes` copies all the contained attributes.</span></span> <span data-ttu-id="f94a1-415">リーダーが配置されている場合、`attribute`ノード、このメソッドは書き込みます現在の属性では、次に残り、属性の要素の終了タグまでです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-415">If the reader is positioned on an `attribute` node, this method writes the current attribute, then the rest of the attributes until the element closing tag.</span></span> <span data-ttu-id="f94a1-416">リーダーが配置されている場合、`XmlDeclaration`ノード、このメソッドのすべての属性の宣言でします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-416">If the reader is positioned on an `XmlDeclaration` node, this method writes all the attributes in the declaration.</span></span> <span data-ttu-id="f94a1-417">他のノード型で、リーダーが配置されている場合に、このメソッドがスロー、<xref:System.Xml.XmlException>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-417">If the reader is positioned on any other node type this method throws an <xref:System.Xml.XmlException>.</span></span>  
  
 <span data-ttu-id="f94a1-418">使用して、このメソッドが呼び出された場合<xref:System.Xml.XmlValidatingReader>、整形式 xml が書き込まれるときに、無効なドキュメントになる可能性があります (これは、エンティティから展開されています) コンテンツが置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-418">If this method is called using <xref:System.Xml.XmlValidatingReader>, to ensure well-formed XML any content (which has been expanded from the entities) that could result in an invalid document is replaced when written.</span></span> <span data-ttu-id="f94a1-419">たとえば、属性が含まれている場合、`&gt;`整形式のドキュメントを展開したことを確認する、展開されているエンティティ > に書き出さ時に置き換えられます`&gt;`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-419">For example, if an attribute includes an `&gt;` entity that has been expanded, to ensure a well-formed document the expanded > is replaced when written out with `&gt;`.</span></span>  
  
 <span data-ttu-id="f94a1-420">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteAttributesAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-420">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteAttributesAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-421">次の例は、出力にすべての要素をコピー、タグ名を大文字に変更し、変更されていないすべての属性をコピーします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-421">The following example copies all the elements to the output, changes the tag names to upper case, and copies all the attributes unchanged.</span></span>  
  
 [!code-cpp[XmlWriter.WriteAttributes#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteAttributes/CPP/writeattrs_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteAttributes/CS/writeattrs_v2.cs#1)]
 [!code-vb[XmlWriter.WriteAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteAttributes/VB/writeattrs_v2.vb#1)]  
  
 <span data-ttu-id="f94a1-422">この例では、`test1.xml`の入力として、します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-422">The example uses the file, `test1.xml`, as input.</span></span>  
  
 [!code-xml[XmlWriter.WriteAttributes#2](~/samples/snippets/xml/VS_Snippets_Data/XmlWriter.WriteAttributes/XML/test1.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f94a1-423"><paramref name="reader" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-423"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="f94a1-424">リーダーが <see langword="element" /> ノード、<see langword="attribute" /> ノード、または <see langword="XmlDeclaration" /> ノードに配置されていません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-424">The reader is not positioned on an <see langword="element" />, <see langword="attribute" /> or <see langword="XmlDeclaration" /> node.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-425">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-425">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-426">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-426">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAttributesAsync (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAttributesAsync(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteAttributesAsync (reader As XmlReader, defattr As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAttributesAsync(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlWriter/&lt;WriteAttributesAsync&gt;c__async2))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="f94a1-427">属性のコピー元の <see langword="XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="f94a1-427">The <see langword="XmlReader" /> from which to copy the attributes.</span></span></param>
        <param name="defattr">
          <span data-ttu-id="f94a1-428"><see langword="XmlReader" /> の既定の属性をコピーする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f94a1-428"><see langword="true" /> to copy the default attributes from the <see langword="XmlReader" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f94a1-429"><see cref="T:System.Xml.XmlReader" /> の現在の位置で見つかったすべての属性を非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-429">Asynchronously writes out all the attributes found at the current position in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="f94a1-430">非同期の <see langword="WriteAttributes" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-430">The task that represents the asynchronous <see langword="WriteAttributes" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-431">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteAttributes%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-431">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteAttributes%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-432">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-432">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-433"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-433">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-434">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-434">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAttributeString">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-435">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-435">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-436">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-436">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="f94a1-437">派生クラスでオーバーライドされると、指定した値の属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-437">When overridden in a derived class, writes an attribute with the specified value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-438">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-438">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAttributeString">
      <MemberSignature Language="C#" Value="public void WriteAttributeString (string localName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAttributeString(string localName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAttributeString (localName As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAttributeString(System::String ^ localName, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="f94a1-439">属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="f94a1-439">The local name of the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="f94a1-440">属性の値。</span><span class="sxs-lookup"><span data-stu-id="f94a1-440">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="f94a1-441">派生クラスでオーバーライドされると、指定したローカル名と値の属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-441">When overridden in a derived class, writes out the attribute with the specified local name and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-442">`WriteAttributeString` では次の処理が行われます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-442">`WriteAttributeString` does the following:</span></span>  
  
-   <span data-ttu-id="f94a1-443">属性の値には、二重引用符または一重の引用符が含まれている場合に置き換えられます`&quot;`と`&apos;`それぞれします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-443">If the attribute value includes double or single quotes, they are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
-   <span data-ttu-id="f94a1-444">書き込む場合、`xml:space`属性、ライターの検証属性値が有効です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-444">If writing an `xml:space` attribute, the writer verifies the attribute value is valid.</span></span> <span data-ttu-id="f94a1-445">(有効な値は`preserve`または`default`)。</span><span class="sxs-lookup"><span data-stu-id="f94a1-445">(Valid values are `preserve` or `default`.)</span></span>  
  
-   <span data-ttu-id="f94a1-446">書き込む場合、`xml:lang`属性で、ライターは検証されません属性値が、w3c 勧告 『 XML 1.0 勧告に沿って有効であります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-446">If writing an `xml:lang` attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.</span></span>  
  
 <span data-ttu-id="f94a1-447">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-447">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-448">次の例は、ブックを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-448">The following example writes out a book.</span></span>  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-449">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-449">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-450">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-450">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f94a1-451"><see langword="xml:space" /> 属性値または <see langword="xml:lang" /> 属性値が無効です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-451">The <see langword="xml:space" /> or <see langword="xml:lang" /> attribute value is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeString">
      <MemberSignature Language="C#" Value="public void WriteAttributeString (string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAttributeString(string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAttributeString (localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAttributeString(System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="f94a1-452">属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="f94a1-452">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="f94a1-453">属性に関連付ける名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="f94a1-453">The namespace URI to associate with the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="f94a1-454">属性の値。</span><span class="sxs-lookup"><span data-stu-id="f94a1-454">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="f94a1-455">派生クラスでオーバーライドされると、指定したローカル名、名前空間 URI、および値の属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-455">When overridden in a derived class, writes an attribute with the specified local name, namespace URI, and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-456">このメソッドは、ユーザー定義の名前空間プレフィックスを持つ属性を書き込み、指定した名前空間に関連付けます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-456">This method writes out the attribute with a user defined namespace prefix and associates it with the given namespace.</span></span> <span data-ttu-id="f94a1-457">場合`localName`"xmlns"は、このメソッドもこのとして扱います名前空間の宣言。</span><span class="sxs-lookup"><span data-stu-id="f94a1-457">If `localName` is "xmlns" then this method also treats this as a namespace declaration.</span></span> <span data-ttu-id="f94a1-458">ここで、`ns`引数を指定できます`null`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-458">In this case, the `ns` argument can be `null`.</span></span>  
  
 <span data-ttu-id="f94a1-459">`WriteAttributeString` では次の処理が行われます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-459">`WriteAttributeString` does the following:</span></span>  
  
-   <span data-ttu-id="f94a1-460">属性の値には、二重引用符または一重の引用符が含まれている場合に置き換えられます`&quot;`と`&apos;`それぞれします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-460">If the attribute value includes double or single quotes, they are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
-   <span data-ttu-id="f94a1-461">書き込む場合、`xml:space`属性、ライターの検証属性値が有効です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-461">If writing an `xml:space` attribute, the writer verifies the attribute value is valid.</span></span> <span data-ttu-id="f94a1-462">(有効な値は`preserve`または`default`)。</span><span class="sxs-lookup"><span data-stu-id="f94a1-462">(Valid values are `preserve` or `default`.)</span></span>  
  
-   <span data-ttu-id="f94a1-463">書き込む場合、`xml:lang`属性で、ライターは検証されません属性値が、w3c 勧告 『 XML 1.0 勧告に沿って有効であります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-463">If writing an `xml:lang` attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.</span></span>  
  
 <span data-ttu-id="f94a1-464">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-464">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-465">次の例では、<xref:System.Xml.XmlWriter.WriteAttributeString%2A>名前空間の宣言を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-465">The following example uses the <xref:System.Xml.XmlWriter.WriteAttributeString%2A> method to write a namespace declaration.</span></span>  
  
 [!code-cpp[XmlWriter.WriteAttributeString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CPP/writeattrstring.cpp#1)]
 [!code-csharp[XmlWriter.WriteAttributeString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CS/writeattrstring.cs#1)]
 [!code-vb[XmlWriter.WriteAttributeString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteAttributeString/VB/writeattrstring.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-466">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-466">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-467">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-467">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f94a1-468"><see langword="xml:space" /> 属性値または <see langword="xml:lang" /> 属性値が無効です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-468">The <see langword="xml:space" /> or <see langword="xml:lang" /> attribute value is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeString">
      <MemberSignature Language="C#" Value="public void WriteAttributeString (string prefix, string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAttributeString(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAttributeString (prefix As String, localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAttributeString(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="f94a1-469">属性の名前空間プレフィックス。</span><span class="sxs-lookup"><span data-stu-id="f94a1-469">The namespace prefix of the attribute.</span></span></param>
        <param name="localName"><span data-ttu-id="f94a1-470">属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="f94a1-470">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="f94a1-471">属性の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="f94a1-471">The namespace URI of the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="f94a1-472">属性の値。</span><span class="sxs-lookup"><span data-stu-id="f94a1-472">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="f94a1-473">派生クラスでオーバーライドされると、指定したプリフィックス、ローカル名、名前空間 URI、および値の属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-473">When overridden in a derived class, writes out the attribute with the specified prefix, local name, namespace URI, and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-474">このメソッドは、ユーザー定義の名前空間プレフィックスを持つ属性を書き込み、指定した名前空間に関連付けます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-474">This method writes out the attribute with a user defined namespace prefix and associates it with the given namespace.</span></span> <span data-ttu-id="f94a1-475">プレフィックスが"xmlns"である場合、このメソッドも、名前空間宣言として扱われます、URI が指定された属性の値で提供される名前空間で宣言済みのプレフィックスに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-475">If the prefix is "xmlns" then this method also treats this as a namespace declaration and associates the declared prefix with the namespace URI provided in the given attribute value.</span></span> <span data-ttu-id="f94a1-476">この場合、`ns`引数を指定できます`null`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-476">In this case the `ns` argument can be `null`.</span></span>  
  
 <span data-ttu-id="f94a1-477">`WriteAttributeString` では次の処理が行われます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-477">`WriteAttributeString` does the following:</span></span>  
  
-   <span data-ttu-id="f94a1-478">属性の値には、二重引用符または一重の引用符が含まれている場合に置き換えられます`&quot;`と`&apos;`それぞれします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-478">If the attribute value includes double or single quotes, they are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
-   <span data-ttu-id="f94a1-479">書き込む場合、`xml:space`属性、ライターの検証属性値が有効です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-479">If writing an `xml:space` attribute, the writer verifies the attribute value is valid.</span></span> <span data-ttu-id="f94a1-480">(有効な値は`preserve`または`default`)。</span><span class="sxs-lookup"><span data-stu-id="f94a1-480">(Valid values are `preserve` or `default`.)</span></span>  
  
-   <span data-ttu-id="f94a1-481">書き込む場合、`xml:lang`属性で、ライターは検証されません属性値が、w3c 勧告 『 XML 1.0 勧告に沿って有効であります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-481">If writing an `xml:lang` attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.</span></span>  
  
 <span data-ttu-id="f94a1-482">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-482">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-483">次の例では、<xref:System.Xml.XmlWriter.WriteAttributeString%2A>名前空間の宣言を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-483">The following example uses the <xref:System.Xml.XmlWriter.WriteAttributeString%2A> method to write a namespace declaration.</span></span>  
  
 [!code-cpp[XmlWriter.WriteAttributeString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CPP/writeattrstring.cpp#1)]
 [!code-csharp[XmlWriter.WriteAttributeString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CS/writeattrstring.cs#1)]
 [!code-vb[XmlWriter.WriteAttributeString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteAttributeString/VB/writeattrstring.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-484">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-484">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-485">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-485">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f94a1-486"><see langword="xml:space" /> 属性値または <see langword="xml:lang" /> 属性値が無効です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-486">The <see langword="xml:space" /> or <see langword="xml:lang" /> attribute value is invalid.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="f94a1-487"><paramref name="localName" /> または <paramref name="ns" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-487">The <paramref name="localName" /> or <paramref name="ns" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteAttributeStringAsync (string prefix, string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteAttributeStringAsync(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteAttributeStringAsync (prefix As String, localName As String, ns As String, value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteAttributeStringAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="f94a1-488">属性の名前空間プレフィックス。</span><span class="sxs-lookup"><span data-stu-id="f94a1-488">The namespace prefix of the attribute.</span></span></param>
        <param name="localName"><span data-ttu-id="f94a1-489">属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="f94a1-489">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="f94a1-490">属性の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="f94a1-490">The namespace URI of the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="f94a1-491">属性の値。</span><span class="sxs-lookup"><span data-stu-id="f94a1-491">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="f94a1-492">指定されたプレフィックス、ローカル名、名前空間 URI、および値を使用して属性を非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-492">Asynchronously writes out the attribute with the specified prefix, local name, namespace URI, and value.</span></span></summary>
        <returns><span data-ttu-id="f94a1-493">非同期の <see langword="WriteAttributeString" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-493">The task that represents the asynchronous <see langword="WriteAttributeString" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-494">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteAttributeString%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-494">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-495">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-495">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-496"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-496">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-497">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-497">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64">
      <MemberSignature Language="C#" Value="public abstract void WriteBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteBase64 (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="f94a1-498">エンコードするバイト配列。</span><span class="sxs-lookup"><span data-stu-id="f94a1-498">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="f94a1-499">書き込むバイトの開始を示すバッファー内の位置。</span><span class="sxs-lookup"><span data-stu-id="f94a1-499">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="f94a1-500">書き込むバイト数。</span><span class="sxs-lookup"><span data-stu-id="f94a1-500">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="f94a1-501">派生クラスでオーバーライドされると、指定したバイナリ バイトを Base64 としてエンコードし、その結果生成されるテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-501">When overridden in a derived class, encodes the specified binary bytes as Base64 and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-502">たとえば、バイト バッファーは GIF 画像のバイナリ コンテンツを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-502">For example, the byte buffer may contain the binary contents of a GIF image.</span></span> <span data-ttu-id="f94a1-503">有効な XML は言えません明確にします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-503">This clearly would not be valid XML.</span></span> <span data-ttu-id="f94a1-504">`Base64` 65 の US-ASCII 文字で構成されるテキスト形式で任意のバイト シーケンスを表すように設計されたエンコード ([z0 9 + =]) の各文字が 6 のビットのバイナリ データをエンコードします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-504">The `Base64` encoding is designed to represent arbitrary byte sequences in a text form comprised of the 65 US-ASCII characters ([A-Za-z0-9+/=]) where each character encodes 6 bits of the binary data.</span></span> <span data-ttu-id="f94a1-505">詳細については、要求を確認 for Comments (RFC)、要求コメント Web サイトの上にある 1521http://www.rfc-editor.org/です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-505">For more information, see Requests for Comments (RFC) 1521 located on the Request for Comments Web site at http://www.rfc-editor.org/.</span></span>  
  
 <span data-ttu-id="f94a1-506">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteBase64Async%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-506">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteBase64Async%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-507">次の例では、<xref:System.Xml.XmlWriter.WriteBase64%2A>書き込みます`Base64`データ。</span><span class="sxs-lookup"><span data-stu-id="f94a1-507">The following example uses the <xref:System.Xml.XmlWriter.WriteBase64%2A> method to write `Base64` data.</span></span> <span data-ttu-id="f94a1-508">`Base64`内でデータが埋め込まれて、`<image>`要素。</span><span class="sxs-lookup"><span data-stu-id="f94a1-508">The `Base64` data is embedded within an `<image>` element.</span></span>  
  
 [!code-csharp[XmlReader_Read_Write_Binary#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Read_Write_Binary/CS/readBinary.cs#3)]
 [!code-vb[XmlReader_Read_Write_Binary#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Read_Write_Binary/VB/readBinary.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f94a1-509"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-509"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f94a1-510"><paramref name="index" /> または <paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-510"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="f94a1-511">- または -</span><span class="sxs-lookup"><span data-stu-id="f94a1-511">-or-</span></span>  
  
 <span data-ttu-id="f94a1-512">バッファーの長さから <paramref name="index" /> を引いた値が <paramref name="count" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-512">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-513">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-513">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-514">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-514">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64Async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteBase64Async (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteBase64Async(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteBase64Async (buffer As Byte(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteBase64Async(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="f94a1-515">エンコードするバイト配列。</span><span class="sxs-lookup"><span data-stu-id="f94a1-515">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="f94a1-516">書き込むバイトの開始を示すバッファー内の位置。</span><span class="sxs-lookup"><span data-stu-id="f94a1-516">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="f94a1-517">書き込むバイト数。</span><span class="sxs-lookup"><span data-stu-id="f94a1-517">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="f94a1-518">指定したバイナリ バイトを base64 として非同期にエンコードし、その結果生成されるテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-518">Asynchronously encodes the specified binary bytes as Base64 and writes out the resulting text.</span></span></summary>
        <returns><span data-ttu-id="f94a1-519">非同期の <see langword="WriteBase64" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-519">The task that represents the asynchronous <see langword="WriteBase64" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-520">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteBase64%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-520">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteBase64%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-521">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-521">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-522"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-522">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-523">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-523">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHex">
      <MemberSignature Language="C#" Value="public virtual void WriteBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBinHex (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="f94a1-524">エンコードするバイト配列。</span><span class="sxs-lookup"><span data-stu-id="f94a1-524">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="f94a1-525">書き込むバイトの開始を示すバッファー内の位置。</span><span class="sxs-lookup"><span data-stu-id="f94a1-525">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="f94a1-526">書き込むバイト数。</span><span class="sxs-lookup"><span data-stu-id="f94a1-526">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="f94a1-527">派生クラスでオーバーライドされると、指定されたバイナリ バイトを <see langword="BinHex" /> としてエンコードし、その結果生成されるテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-527">When overridden in a derived class, encodes the specified binary bytes as <see langword="BinHex" /> and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-528">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteBinHexAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-528">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteBinHexAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-529">次の例では、<xref:System.Xml.XmlWriter.WriteBinHex%2A>書き込みます`BinHex`データ。</span><span class="sxs-lookup"><span data-stu-id="f94a1-529">The following example uses the <xref:System.Xml.XmlWriter.WriteBinHex%2A> method to write `BinHex` data.</span></span> <span data-ttu-id="f94a1-530">`BinHex`内でデータが埋め込まれて、`<image>`要素。</span><span class="sxs-lookup"><span data-stu-id="f94a1-530">The `BinHex` data is embedded within an `<image>` element.</span></span>  
  
 [!code-csharp[XmlReader_Read_Write_Binary#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Read_Write_Binary/CS/readBinary.cs#1)]
 [!code-vb[XmlReader_Read_Write_Binary#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Read_Write_Binary/VB/readBinary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f94a1-531"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-531"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-532">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-532">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-533">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-533">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f94a1-534"><paramref name="index" /> または <paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-534"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="f94a1-535">- または -</span><span class="sxs-lookup"><span data-stu-id="f94a1-535">-or-</span></span>  
  
 <span data-ttu-id="f94a1-536">バッファーの長さから <paramref name="index" /> を引いた値が <paramref name="count" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-536">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteBinHexAsync (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteBinHexAsync(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteBinHexAsync (buffer As Byte(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteBinHexAsync(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="f94a1-537">エンコードするバイト配列。</span><span class="sxs-lookup"><span data-stu-id="f94a1-537">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="f94a1-538">書き込むバイトの開始を示すバッファー内の位置。</span><span class="sxs-lookup"><span data-stu-id="f94a1-538">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="f94a1-539">書き込むバイト数。</span><span class="sxs-lookup"><span data-stu-id="f94a1-539">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="f94a1-540">指定したバイナリ バイトを <see langword="BinHex" /> として非同期にエンコードし、その結果生成されるテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-540">Asynchronously encodes the specified binary bytes as <see langword="BinHex" /> and writes out the resulting text.</span></span></summary>
        <returns><span data-ttu-id="f94a1-541">非同期の <see langword="WriteBinHex" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-541">The task that represents the asynchronous <see langword="WriteBinHex" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-542">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteBinHex%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-542">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteBinHex%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-543">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-543">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-544"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-544">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-545">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-545">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCData">
      <MemberSignature Language="C#" Value="public abstract void WriteCData (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteCData(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteCData (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteCData(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="f94a1-546">CDATA ブロック内に配置するテキスト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-546">The text to place inside the CDATA block.</span></span></param>
        <summary><span data-ttu-id="f94a1-547">派生クラスでオーバーライドされると、指定したテキストを含む &lt;![CDATA[...]]&gt; ブロックを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-547">When overridden in a derived class, writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-548">場合`text`か`null`または`String.Empty`、このメソッドは空の CDATA ブロック、たとえば書き込みます\<! [CDATA []] ><![Cdata[] >。</span><span class="sxs-lookup"><span data-stu-id="f94a1-548">If `text` is either `null` or `String.Empty`, this method writes an empty CDATA block, for example \<![CDATA[]]]><![CDATA[]>.</span></span>  
  
 <span data-ttu-id="f94a1-549">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteCDataAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-549">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteCDataAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-550">次の例では、ブックを表す XML ファイルを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-550">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f94a1-551">テキストは、非整形式の XML ドキュメントになります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-551">The text would result in a non-well formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-552">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-552">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-553">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-553">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCDataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCDataAsync (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCDataAsync(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCDataAsync (text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCDataAsync(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="f94a1-554">CDATA ブロック内に配置するテキスト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-554">The text to place inside the CDATA block.</span></span></param>
        <summary><span data-ttu-id="f94a1-555">指定したテキストを格納する &lt;![CDATA[...]]&gt; ブロックを非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-555">Asynchronously writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span></span></summary>
        <returns><span data-ttu-id="f94a1-556">非同期の <see langword="WriteCData" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-556">The task that represents the asynchronous <see langword="WriteCData" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-557">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteCData%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-557">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteCData%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-558">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-558">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-559"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-559">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-560">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-560">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntity">
      <MemberSignature Language="C#" Value="public abstract void WriteCharEntity (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteCharEntity(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteCharEntity (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteCharEntity(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="f94a1-561">文字エンティティを生成する Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="f94a1-561">The Unicode character for which to generate a character entity.</span></span></param>
        <summary><span data-ttu-id="f94a1-562">派生クラスでオーバーライドされると、指定した Unicode 文字値の文字エンティティを強制的に生成します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-562">When overridden in a derived class, forces the generation of a character entity for the specified Unicode character value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-563">このメソッドは、16 進数の文字エンティティ参照形式で指定した Unicode 文字を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-563">This method writes the Unicode character in hexadecimal character entity reference format.</span></span>  
  
 <span data-ttu-id="f94a1-564">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteCharEntityAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-564">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteCharEntityAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-565">参照してください<xref:System.Xml.XmlTextWriter.WriteCharEntity%2A?displayProperty=nameWithType>たとえば、このメソッドを使用しています。</span><span class="sxs-lookup"><span data-stu-id="f94a1-565">See <xref:System.Xml.XmlTextWriter.WriteCharEntity%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f94a1-566">文字がサロゲート ペアの文字範囲、つまり <see langword="0xd800" /> - <see langword="0xdfff" /> 内にあります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-566">The character is in the surrogate pair character range, <see langword="0xd800" /> - <see langword="0xdfff" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-567">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-567">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-568">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-568">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCharEntityAsync (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCharEntityAsync(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCharEntityAsync (ch As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCharEntityAsync(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="f94a1-569">文字エンティティを生成する Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="f94a1-569">The Unicode character for which to generate a character entity.</span></span></param>
        <summary><span data-ttu-id="f94a1-570">指定した Unicode 文字値の文字エンティティを非同期に強制的に生成します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-570">Asynchronously forces the generation of a character entity for the specified Unicode character value.</span></span></summary>
        <returns><span data-ttu-id="f94a1-571">非同期の <see langword="WriteCharEntity" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-571">The task that represents the asynchronous <see langword="WriteCharEntity" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-572">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteCharEntity%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-572">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteCharEntity%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-573">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-573">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-574"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-574">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-575">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-575">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public abstract void WriteChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteChars (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="f94a1-576">書き込むテキストを格納している文字配列。</span><span class="sxs-lookup"><span data-stu-id="f94a1-576">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="f94a1-577">書き込むテキストの開始を示すバッファー内の位置。</span><span class="sxs-lookup"><span data-stu-id="f94a1-577">The position in the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="f94a1-578">書き込む文字数。</span><span class="sxs-lookup"><span data-stu-id="f94a1-578">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="f94a1-579">派生クラスでオーバーライドされると、一度に 1 つのバッファーにテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-579">When overridden in a derived class, writes text one buffer at a time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-580">このメソッドは、一度に大量の 1 つのテキスト バッファーを書き込むを使用できます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-580">This method can be used to write large amounts of text one buffer at a time.</span></span>  
  
 <span data-ttu-id="f94a1-581">特別な処理を行うことを確認する必要があります、`WriteChars`メソッドはサロゲート ペア文字バッファーの書き込みを複数に分割されません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-581">Special handling must be done to ensure the `WriteChars` method does not split surrogate pair characters across multiple buffer writes.</span></span> <span data-ttu-id="f94a1-582">XML 仕様では、サロゲート ペアの有効な範囲を定義します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-582">The XML specification defines the valid ranges for surrogate pairs.</span></span>  
  
 <span data-ttu-id="f94a1-583">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteCharsAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-583">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteCharsAsync%2A>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[XmlWriter.WriteChars#1](~/samples/snippets/csharp/VS_Snippets_Data/xmlwriter.writechars/cs/xmlwriterwritecharsexample.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f94a1-584"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-584"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f94a1-585"><paramref name="index" /> または <paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-585"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="f94a1-586">- または -</span><span class="sxs-lookup"><span data-stu-id="f94a1-586">-or-</span></span>  
  
 <span data-ttu-id="f94a1-587">バッファー長から <paramref name="index" /> を差し引いた値が <paramref name="count" /> 未満です。この呼び出しにより、サロゲート ペア文字が分割されるか、無効なサロゲート ペアが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-587">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f94a1-588"><paramref name="buffer" /> パラメーター値が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-588">The <paramref name="buffer" /> parameter value is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-589">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-589">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-590">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-590">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCharsAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCharsAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCharsAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCharsAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="f94a1-591">書き込むテキストを格納している文字配列。</span><span class="sxs-lookup"><span data-stu-id="f94a1-591">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="f94a1-592">書き込むテキストの開始を示すバッファー内の位置。</span><span class="sxs-lookup"><span data-stu-id="f94a1-592">The position in the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="f94a1-593">書き込む文字数。</span><span class="sxs-lookup"><span data-stu-id="f94a1-593">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="f94a1-594">一度に 1 つのバッファーにテキストを非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-594">Asynchronously writes text one buffer at a time.</span></span></summary>
        <returns><span data-ttu-id="f94a1-595">非同期の <see langword="WriteChars" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-595">The task that represents the asynchronous <see langword="WriteChars" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-596">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteChars%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-596">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteChars%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-597">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-597">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-598"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-598">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-599">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-599">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteComment">
      <MemberSignature Language="C#" Value="public abstract void WriteComment (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteComment(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteComment (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteComment(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="f94a1-600">コメント内に配置するテキスト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-600">Text to place inside the comment.</span></span></param>
        <summary><span data-ttu-id="f94a1-601">派生クラスでオーバーライドされると、指定したテキストを格納している &lt;!--...--&gt; コメントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-601">When overridden in a derived class, writes out a comment &lt;!--...--&gt; containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-602">場合`text`か`null`または`String.Empty`、このメソッドは、データ コンテンツのない、付きのコメントをたとえば書き込みます\<!--->。</span><span class="sxs-lookup"><span data-stu-id="f94a1-602">If `text` is either `null` or `String.Empty`, this method writes a comment with no data content, for example \<!---->.</span></span>  
  
 <span data-ttu-id="f94a1-603">場合`text`2 個のダッシュの無効なシーケンスが含まれています"-"、<xref:System.Xml.XmlWriter>か throw ことができます、 <xref:System.ArgumentException> (<xref:System.Xml.XmlTextWriter>オブジェクト) ダッシュの間にスペースを挿入または「- -」テキストが有効な XML コメントになるよう (<xref:System.Xml.XmlWriter>によって作成されたオブジェクト、<xref:System.Xml.XmlWriter.Create%2A>メソッド)。</span><span class="sxs-lookup"><span data-stu-id="f94a1-603">If `text` contains an invalid sequence of two dashes "--" the <xref:System.Xml.XmlWriter> can either throw an <xref:System.ArgumentException> (<xref:System.Xml.XmlTextWriter> objects) or insert a space between the dashes "- -" so that the text is a valid XML comment (<xref:System.Xml.XmlWriter> objects created by the <xref:System.Xml.XmlWriter.Create%2A> method).</span></span>  
  
 <span data-ttu-id="f94a1-604">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteCommentAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-604">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteCommentAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-605">次の例では、ブックを表す XML ファイルを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-605">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f94a1-606">テキストは、非整形式の XML ドキュメントになります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-606">The text would result in a non-well-formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-607">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-607">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-608">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-608">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCommentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCommentAsync (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCommentAsync(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCommentAsync (text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCommentAsync(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="f94a1-609">コメント内に配置するテキスト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-609">Text to place inside the comment.</span></span></param>
        <summary><span data-ttu-id="f94a1-610">指定したテキストを含むコメント &lt;!--...--&gt; を非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-610">Asynchronously writes out a comment &lt;!--...--&gt; containing the specified text.</span></span></summary>
        <returns><span data-ttu-id="f94a1-611">非同期の <see langword="WriteComment" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-611">The task that represents the asynchronous <see langword="WriteComment" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-612">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteComment%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-612">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteComment%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-613">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-613">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-614"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-614">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-615">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-615">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDocType">
      <MemberSignature Language="C#" Value="public abstract void WriteDocType (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteDocType(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteDocType (name As String, pubid As String, sysid As String, subset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteDocType(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f94a1-616">DOCTYPE の名前。</span><span class="sxs-lookup"><span data-stu-id="f94a1-616">The name of the DOCTYPE.</span></span> <span data-ttu-id="f94a1-617">これを空にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-617">This must be non-empty.</span></span></param>
        <param name="pubid"><span data-ttu-id="f94a1-618">null でない場合は、PUBLIC "pubid" "sysid" も書き込みます。<c>pubid</c> と <c>sysid</c> は、指定した引数の値に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-618">If non-null it also writes PUBLIC "pubid" "sysid" where <c>pubid</c> and <c>sysid</c> are replaced with the value of the given arguments.</span></span></param>
        <param name="sysid"><span data-ttu-id="f94a1-619"><c>pubid</c> が <see langword="null" /> で <c>sysid</c> が null でない場合は、SYSTEM "sysid" を書き込みます。<c>sysid</c> は、この引数の値に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-619">If <c>pubid</c> is <see langword="null" /> and <c>sysid</c> is non-null it writes SYSTEM "sysid" where <c>sysid</c> is replaced with the value of this argument.</span></span></param>
        <param name="subset"><span data-ttu-id="f94a1-620">null でない場合は、[subset] を書き込みます。subset は、この引数の値に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-620">If non-null it writes [subset] where subset is replaced with the value of this argument.</span></span></param>
        <summary><span data-ttu-id="f94a1-621">派生クラスでオーバーライドされると、指定した名前とオプションの属性を含む DOCTYPE 宣言を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-621">When overridden in a derived class, writes the DOCTYPE declaration with the specified name and optional attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-622">このメソッドに無効な文字をチェックしません`pubid`、`sysid`または`subset`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-622">This method does not check for invalid characters in `pubid`, `sysid` or `subset`.</span></span> <span data-ttu-id="f94a1-623">または確認しません内部サブセットが整形式であります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-623">It also does not check that the internal subset is well-formed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f94a1-624"><xref:System.Xml.XmlWriter>に渡されるデータを検証しません、<xref:System.Xml.XmlWriter.WriteDocType%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-624">The <xref:System.Xml.XmlWriter> does not validate the data that is passed to the <xref:System.Xml.XmlWriter.WriteDocType%2A> method.</span></span> <span data-ttu-id="f94a1-625">このメソッドに、任意のデータを渡さないでください。</span><span class="sxs-lookup"><span data-stu-id="f94a1-625">You should not pass arbitrary data to this method.</span></span>  
  
 <span data-ttu-id="f94a1-626">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteDocTypeAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-626">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteDocTypeAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-627">次の例では、ブックを表す XML ファイルを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-627">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-628">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-628">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-629">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-629">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f94a1-630"><paramref name="name" /> の値が、無効な XML になることがあります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-630">The value for <paramref name="name" /> would result in invalid XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDocTypeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteDocTypeAsync (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteDocTypeAsync(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteDocTypeAsync (name As String, pubid As String, sysid As String, subset As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteDocTypeAsync(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f94a1-631">DOCTYPE の名前。</span><span class="sxs-lookup"><span data-stu-id="f94a1-631">The name of the DOCTYPE.</span></span> <span data-ttu-id="f94a1-632">これを空にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-632">This must be non-empty.</span></span></param>
        <param name="pubid"><span data-ttu-id="f94a1-633">null でない場合は、PUBLIC "pubid" "sysid" も書き込みます。<c>pubid</c> と <c>sysid</c> は、指定した引数の値に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-633">If non-null it also writes PUBLIC "pubid" "sysid" where <c>pubid</c> and <c>sysid</c> are replaced with the value of the given arguments.</span></span></param>
        <param name="sysid"><span data-ttu-id="f94a1-634"><c>pubid</c> が <see langword="null" /> で <c>sysid</c> が null でない場合は、SYSTEM "sysid" を書き込みます。<c>sysid</c> は、この引数の値に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-634">If <c>pubid</c> is <see langword="null" /> and <c>sysid</c> is non-null it writes SYSTEM "sysid" where <c>sysid</c> is replaced with the value of this argument.</span></span></param>
        <param name="subset"><span data-ttu-id="f94a1-635">null でない場合は、[subset] を書き込みます。subset は、この引数の値に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-635">If non-null it writes [subset] where subset is replaced with the value of this argument.</span></span></param>
        <summary><span data-ttu-id="f94a1-636">指定された名前とオプション属性を使用して DOC 宣言を非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-636">Asynchronously writes the DOCTYPE declaration with the specified name and optional attributes.</span></span></summary>
        <returns><span data-ttu-id="f94a1-637">非同期の <see langword="WriteDocType" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-637">The task that represents the asynchronous <see langword="WriteDocType" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-638">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteDocType%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-638">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteDocType%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-639">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-639">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-640"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-640">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-641">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-641">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteElementString">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-642">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-642">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-643">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-643">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="f94a1-644">文字列値を含む要素を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-644">Writes an element containing a string value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-645">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-645">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteElementString">
      <MemberSignature Language="C#" Value="public void WriteElementString (string localName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteElementString(string localName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteElementString (localName As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteElementString(System::String ^ localName, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="f94a1-646">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="f94a1-646">The local name of the element.</span></span></param>
        <param name="value"><span data-ttu-id="f94a1-647">要素の値。</span><span class="sxs-lookup"><span data-stu-id="f94a1-647">The value of the element.</span></span></param>
        <summary><span data-ttu-id="f94a1-648">指定されたローカル名および値を使用して要素を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-648">Writes an element with the specified local name and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-649">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-649">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-650">次の例では、複数の書き込みメソッドを使用して、XML フラグメントを作成します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-650">The following example uses several write methods to create an XML fragment.</span></span>  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f94a1-651"><paramref name="localName" /> 値が <see langword="null" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-651">The <paramref name="localName" /> value is <see langword="null" /> or an empty string.</span></span>  
  
 <span data-ttu-id="f94a1-652">- または -</span><span class="sxs-lookup"><span data-stu-id="f94a1-652">-or-</span></span>  
  
 <span data-ttu-id="f94a1-653">パラメーターの値が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-653">The parameter values are not valid.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="f94a1-654">有効な XML 文字であるが出力エンコーディングには有効でない文字がバッファー内にあります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-654">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="f94a1-655">たとえば、出力エンコーディングが ASCII の場合、要素名と属性名には 0 ～ 127 の範囲の文字だけを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-655">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="f94a1-656">無効な文字は、このメソッドの引数か、バッファーに書き込んでいた以前のメソッドの引数に含まれている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-656">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="f94a1-657">このような文字は、可能であれば文字エンティティ参照によってエスケープされます (たとえば、テキスト ノード内や属性値内で)。</span><span class="sxs-lookup"><span data-stu-id="f94a1-657">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="f94a1-658">ただし、文字エンティティの参照は、要素名と属性名、コメント、処理命令、または CDATA セクションでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-658">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-659">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-659">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-660">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-660">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteElementString">
      <MemberSignature Language="C#" Value="public void WriteElementString (string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteElementString(string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteElementString (localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteElementString(System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="f94a1-661">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="f94a1-661">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="f94a1-662">要素に関連付ける名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="f94a1-662">The namespace URI to associate with the element.</span></span></param>
        <param name="value"><span data-ttu-id="f94a1-663">要素の値。</span><span class="sxs-lookup"><span data-stu-id="f94a1-663">The value of the element.</span></span></param>
        <summary><span data-ttu-id="f94a1-664">指定されたローカル名、名前空間 URI、および値を使用して要素を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-664">Writes an element with the specified local name, namespace URI, and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-665">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-665">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-666">次の例では、複数の書き込みメソッドを使用して、XML フラグメントを作成します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-666">The following example uses several write methods to create an XML fragment.</span></span>  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f94a1-667"><paramref name="localName" /> 値が <see langword="null" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-667">The <paramref name="localName" /> value is <see langword="null" /> or an empty string.</span></span>  
  
 <span data-ttu-id="f94a1-668">- または -</span><span class="sxs-lookup"><span data-stu-id="f94a1-668">-or-</span></span>  
  
 <span data-ttu-id="f94a1-669">パラメーターの値が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-669">The parameter values are not valid.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="f94a1-670">有効な XML 文字であるが出力エンコーディングには有効でない文字がバッファー内にあります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-670">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="f94a1-671">たとえば、出力エンコーディングが ASCII の場合、要素名と属性名には 0 ～ 127 の範囲の文字だけを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-671">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="f94a1-672">無効な文字は、このメソッドの引数か、バッファーに書き込んでいた以前のメソッドの引数に含まれている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-672">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="f94a1-673">このような文字は、可能であれば文字エンティティ参照によってエスケープされます (たとえば、テキスト ノード内や属性値内で)。</span><span class="sxs-lookup"><span data-stu-id="f94a1-673">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="f94a1-674">ただし、文字エンティティの参照は、要素名と属性名、コメント、処理命令、または CDATA セクションでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-674">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-675">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-675">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-676">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-676">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteElementString">
      <MemberSignature Language="C#" Value="public void WriteElementString (string prefix, string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteElementString(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteElementString (prefix As String, localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteElementString(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="f94a1-677">要素のプレフィックス。</span><span class="sxs-lookup"><span data-stu-id="f94a1-677">The prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="f94a1-678">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="f94a1-678">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="f94a1-679">要素の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="f94a1-679">The namespace URI of the element.</span></span></param>
        <param name="value"><span data-ttu-id="f94a1-680">要素の値。</span><span class="sxs-lookup"><span data-stu-id="f94a1-680">The value of the element.</span></span></param>
        <summary><span data-ttu-id="f94a1-681">指定されたプレフィックス、ローカル名、名前空間 URI、および値を使用して要素を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-681">Writes an element with the specified prefix, local name, namespace URI, and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-682">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-682">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f94a1-683"><paramref name="localName" /> 値が <see langword="null" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-683">The <paramref name="localName" /> value is <see langword="null" /> or an empty string.</span></span>  
  
 <span data-ttu-id="f94a1-684">- または -</span><span class="sxs-lookup"><span data-stu-id="f94a1-684">-or-</span></span>  
  
 <span data-ttu-id="f94a1-685">パラメーターの値が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-685">The parameter values are not valid.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="f94a1-686">有効な XML 文字であるが出力エンコーディングには有効でない文字がバッファー内にあります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-686">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="f94a1-687">たとえば、出力エンコーディングが ASCII の場合、要素名と属性名には 0 ～ 127 の範囲の文字だけを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-687">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="f94a1-688">無効な文字は、このメソッドの引数か、バッファーに書き込んでいた以前のメソッドの引数に含まれている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-688">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="f94a1-689">このような文字は、可能であれば文字エンティティ参照によってエスケープされます (たとえば、テキスト ノード内や属性値内で)。</span><span class="sxs-lookup"><span data-stu-id="f94a1-689">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="f94a1-690">ただし、文字エンティティの参照は、要素名と属性名、コメント、処理命令、または CDATA セクションでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-690">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-691">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-691">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-692">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-692">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteElementStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteElementStringAsync (string prefix, string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteElementStringAsync(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteElementStringAsync (prefix As String, localName As String, ns As String, value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteElementStringAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlWriter/&lt;WriteElementStringAsync&gt;c__async6))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="f94a1-693">要素のプレフィックス。</span><span class="sxs-lookup"><span data-stu-id="f94a1-693">The prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="f94a1-694">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="f94a1-694">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="f94a1-695">要素の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="f94a1-695">The namespace URI of the element.</span></span></param>
        <param name="value"><span data-ttu-id="f94a1-696">要素の値。</span><span class="sxs-lookup"><span data-stu-id="f94a1-696">The value of the element.</span></span></param>
        <summary><span data-ttu-id="f94a1-697">指定されたプレフィックス、ローカル名、名前空間 URI、および値を使用して要素を非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-697">Asynchronously writes an element with the specified prefix, local name, namespace URI, and value.</span></span></summary>
        <returns><span data-ttu-id="f94a1-698">非同期の <see langword="WriteElementString" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-698">The task that represents the asynchronous <see langword="WriteElementString" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-699">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteElementString%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-699">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteElementString%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-700">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-700">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-701"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-701">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-702">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-702">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttribute">
      <MemberSignature Language="C#" Value="public abstract void WriteEndAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndAttribute" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndAttribute ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndAttribute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f94a1-703">派生クラスでオーバーライドされると、前の <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> 呼び出しを閉じます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-703">When overridden in a derived class, closes the previous <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> call.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-704">呼び出す場合`WriteStartAttribute`、このメソッドを使用して、属性を閉じることができます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-704">If you call `WriteStartAttribute`, you can close the attribute with this method.</span></span>  
  
 <span data-ttu-id="f94a1-705">呼び出して属性を終了することもできます`WriteStartAttribute`、もう一度呼び出して<xref:System.Xml.XmlWriter.WriteAttributeString%2A>、または呼び出し<xref:System.Xml.XmlWriter.WriteEndElement%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-705">You can also close the attribute by calling `WriteStartAttribute` again, calling <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, or calling <xref:System.Xml.XmlWriter.WriteEndElement%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f94a1-706">使用すると、 <xref:System.Xml.XmlWriter> XML 要素や属性を出力する方法は書き込まれませんが呼び出されるまで、<xref:System.Xml.XmlWriter.Close%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-706">When you use the <xref:System.Xml.XmlWriter> methods to output XML, the elements and attributes will not be written until you call the <xref:System.Xml.XmlWriter.Close%2A> method.</span></span> <span data-ttu-id="f94a1-707">XmlWriter を使用して設定する場合など、<xref:System.Xml.XmlDocument>を終了するまで、 <xref:System.Xml.XmlWriter>、書き込まれる要素とターゲット ドキュメントに属性を確認することはできません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-707">For example, if you are using the XmlWriter to populate an <xref:System.Xml.XmlDocument>, until you close the <xref:System.Xml.XmlWriter>, you will not be able to observe the written elements and attributes in the target document.</span></span>  
  
 <span data-ttu-id="f94a1-708">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteEndAttributeAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-708">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteEndAttributeAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-709">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-709">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-710">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-710">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttributeAsync">
      <MemberSignature Language="C#" Value="protected internal virtual System.Threading.Tasks.Task WriteEndAttributeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEndAttributeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndAttributeAsync" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function WriteEndAttributeAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEndAttributeAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f94a1-711">前の <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> 呼び出しを非同期に閉じます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-711">Asynchronously closes the previous <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> call.</span></span></summary>
        <returns><span data-ttu-id="f94a1-712">非同期の <see langword="WriteEndAttribute" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-712">The task that represents the asynchronous <see langword="WriteEndAttribute" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-713">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteEndAttribute%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-713">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-714">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-714">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-715"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-715">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-716">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-716">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocument">
      <MemberSignature Language="C#" Value="public abstract void WriteEndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndDocument" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndDocument();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f94a1-717">派生クラスでオーバーライドされると、開いている任意の要素または属性を閉じ、ライターを Start 状態に戻します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-717">When overridden in a derived class, closes any open elements or attributes and puts the writer back in the Start state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f94a1-718">使用すると、 <xref:System.Xml.XmlWriter> XML 要素や属性を出力する方法は書き込まれませんが呼び出されるまで、<xref:System.Xml.XmlWriter.Close%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-718">When you use the <xref:System.Xml.XmlWriter> methods to output XML, the elements and attributes will not be written until you call the <xref:System.Xml.XmlWriter.Close%2A> method.</span></span> <span data-ttu-id="f94a1-719">XmlWriter を使用して設定する場合など、<xref:System.Xml.XmlDocument>を終了するまで、 <xref:System.Xml.XmlWriter>、書き込まれる要素とターゲット ドキュメントに属性を確認することはできません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-719">For example, if you are using the XmlWriter to populate an <xref:System.Xml.XmlDocument>, until you close the <xref:System.Xml.XmlWriter>, you will not be able to observe the written elements and attributes in the target document.</span></span>  
  
 <span data-ttu-id="f94a1-720">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteEndDocumentAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-720">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteEndDocumentAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-721">次の例では、ブックを表す XML ファイルを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-721">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f94a1-722">XML ドキュメントが無効です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-722">The XML document is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-723">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-723">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-724">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-724">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocumentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteEndDocumentAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEndDocumentAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndDocumentAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteEndDocumentAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEndDocumentAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f94a1-725">開いている要素または属性を非同期に閉じ、ライターを Start 状態に戻します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-725">Asynchronously closes any open elements or attributes and puts the writer back in the Start state.</span></span></summary>
        <returns><span data-ttu-id="f94a1-726">非同期の <see langword="WriteEndDocument" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-726">The task that represents the asynchronous <see langword="WriteEndDocument" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-727">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteEndDocument%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-727">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteEndDocument%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-728">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-728">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-729"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-729">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-730">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-730">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElement">
      <MemberSignature Language="C#" Value="public abstract void WriteEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndElement" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f94a1-731">派生クラスでオーバーライドされると、1 つの要素を閉じ、対応する名前空間スコープをポップします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-731">When overridden in a derived class, closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-732">要素にコンテンツが含まれていない場合は、短い終了タグ"/>"が書き込まれます。それ以外の場合、完全な終了タグが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-732">If the element contains no content, a short end tag "/>" is written; otherwise, a full end tag is written.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f94a1-733">使用すると、 <xref:System.Xml.XmlWriter> XML 要素や属性を出力する方法は書き込まれませんが呼び出されるまで、<xref:System.Xml.XmlWriter.Close%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-733">When you use the <xref:System.Xml.XmlWriter> methods to output XML, the elements and attributes will not be written until you call the <xref:System.Xml.XmlWriter.Close%2A> method.</span></span> <span data-ttu-id="f94a1-734">設定する、XmlWwriter を使用している場合など、<xref:System.Xml.XmlDocument>を終了するまで、 <xref:System.Xml.XmlWriter>、書き込まれる要素とターゲット ドキュメントに属性を確認することはできません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-734">For example, if you are using the XmlWwriter to populate an <xref:System.Xml.XmlDocument>, until you close the <xref:System.Xml.XmlWriter>, you will not be able to observe the written elements and attributes in the target document.</span></span>  
  
 <span data-ttu-id="f94a1-735">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteEndElementAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-735">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteEndElementAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-736">次の例では、<xref:System.Xml.XmlWriter.WriteEndElement%2A>と<xref:System.Xml.XmlWriter.WriteFullEndElement%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-736">The following example uses the <xref:System.Xml.XmlWriter.WriteEndElement%2A> and the <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> methods.</span></span>  
  
 [!code-csharp[XmlWriter.WriteFullEndElement#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteFullEndElement/CS/writerfullend_v2.cs#1)]
 [!code-vb[XmlWriter.WriteFullEndElement#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteFullEndElement/VB/writerfullend_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-737">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-737">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-738">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-738">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteEndElementAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEndElementAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndElementAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteEndElementAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEndElementAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f94a1-739">1 つの要素を非同期に閉じ、対応する名前空間スコープをポップします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-739">Asynchronously closes one element and pops the corresponding namespace scope.</span></span></summary>
        <returns><span data-ttu-id="f94a1-740">非同期の <see langword="WriteEndElement" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-740">The task that represents the asynchronous <see langword="WriteEndElement" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-741">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteEndElement%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-741">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteEndElement%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-742">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-742">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-743"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-743">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-744">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-744">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRef">
      <MemberSignature Language="C#" Value="public abstract void WriteEntityRef (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEntityRef(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEntityRef(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEntityRef (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEntityRef(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f94a1-745">エンティティ参照の名前。</span><span class="sxs-lookup"><span data-stu-id="f94a1-745">The name of the entity reference.</span></span></param>
        <summary><span data-ttu-id="f94a1-746">派生クラスでオーバーライドされると、<see langword="&amp;name;" /> などのエンティティ参照を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-746">When overridden in a derived class, writes out an entity reference as <see langword="&amp;name;" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-747">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteEntityRefAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-747">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteEntityRefAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-748">次の例では、ブックを表す XML ファイルを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-748">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f94a1-749"><paramref name="name" /> が <see langword="null" /> または <see langword="String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-749"><paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-750">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-750">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-751">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-751">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRefAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteEntityRefAsync (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEntityRefAsync(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteEntityRefAsync (name As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEntityRefAsync(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f94a1-752">エンティティ参照の名前。</span><span class="sxs-lookup"><span data-stu-id="f94a1-752">The name of the entity reference.</span></span></param>
        <summary><span data-ttu-id="f94a1-753">エンティティ参照を <see langword="&amp;name;" /> として非同期的に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-753">Asynchronously writes out an entity reference as <see langword="&amp;name;" />.</span></span></summary>
        <returns><span data-ttu-id="f94a1-754">非同期の <see langword="WriteEntityRef" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-754">The task that represents the asynchronous <see langword="WriteEntityRef" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-755">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteEntityRef%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-755">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteEntityRef%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-756">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-756">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-757"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-757">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-758">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-758">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElement">
      <MemberSignature Language="C#" Value="public abstract void WriteFullEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFullEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteFullEndElement" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteFullEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteFullEndElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f94a1-759">派生クラスでオーバーライドされると、1 つの要素を閉じ、対応する名前空間スコープをポップします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-759">When overridden in a derived class, closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-760">このメソッドは、常に完全な終了タグを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-760">This method always writes the full end tag.</span></span> <span data-ttu-id="f94a1-761">これは、機能は、完全な終了タグを含める必要のある要素を処理するときに便利です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-761">This is useful when dealing with elements that must include a full end tag.</span></span> <span data-ttu-id="f94a1-762">たとえば、ブラウザーが HTML スクリプト ブロックを終了するを想定"\</script >"です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-762">For example, browsers expect HTML script blocks to be closed with "\</script>".</span></span>  
  
 <span data-ttu-id="f94a1-763">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteFullEndElementAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-763">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteFullEndElementAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-764">次の例では、<xref:System.Xml.XmlWriter.WriteEndElement%2A>と<xref:System.Xml.XmlWriter.WriteFullEndElement%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-764">The following example uses the <xref:System.Xml.XmlWriter.WriteEndElement%2A> and the <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> methods.</span></span>  
  
 [!code-csharp[XmlWriter.WriteFullEndElement#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteFullEndElement/CS/writerfullend_v2.cs#1)]
 [!code-vb[XmlWriter.WriteFullEndElement#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteFullEndElement/VB/writerfullend_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-765">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-765">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-766">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-766">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteFullEndElementAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteFullEndElementAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteFullEndElementAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteFullEndElementAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteFullEndElementAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f94a1-767">1 つの要素を非同期に閉じ、対応する名前空間スコープをポップします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-767">Asynchronously closes one element and pops the corresponding namespace scope.</span></span></summary>
        <returns><span data-ttu-id="f94a1-768">非同期の <see langword="WriteFullEndElement" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-768">The task that represents the asynchronous <see langword="WriteFullEndElement" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-769">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteFullEndElement%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-769">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteFullEndElement%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-770">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-770">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-771"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-771">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-772">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-772">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteName">
      <MemberSignature Language="C#" Value="public virtual void WriteName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f94a1-773">書き込む名前。</span><span class="sxs-lookup"><span data-stu-id="f94a1-773">The name to write.</span></span></param>
        <summary><span data-ttu-id="f94a1-774">派生クラスでオーバーライドされると、指定した名前を書き込み、その名前が W3C 勧告『XML 1.0』(http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)) に準拠した有効な名前であるようにします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-774">When overridden in a derived class, writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-775">場合<xref:System.Xml.XmlTextWriter.Namespaces%2A>に設定されている`true`、`WriteName`また、XML の推奨設定では、W3C 名前空間に従って有効なも、名前を確認します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-775">If <xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`, `WriteName` also checks that the name is also valid according to the W3C Namespaces in XML recommendation.</span></span>  
  
 <span data-ttu-id="f94a1-776">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteNameAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-776">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteNameAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f94a1-777"><paramref name="name" /> が有効な XML 名ではありません。または、<paramref name="name" /> が <see langword="null" /> または <see langword="String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-777"><paramref name="name" /> is not a valid XML name; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-778">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-778">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-779">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-779">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNameAsync (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNameAsync(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNameAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNameAsync (name As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNameAsync(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f94a1-780">書き込む名前。</span><span class="sxs-lookup"><span data-stu-id="f94a1-780">The name to write.</span></span></param>
        <summary><span data-ttu-id="f94a1-781">指定した名前が W3C 勧告『XML 1.0』(http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)) に準拠した有効な名前であることを確認し、それを非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-781">Asynchronously writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <returns><span data-ttu-id="f94a1-782">非同期の <see langword="WriteName" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-782">The task that represents the asynchronous <see langword="WriteName" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-783">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteName%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-783">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteName%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-784">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-784">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-785"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-785">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-786">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-786">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNmToken">
      <MemberSignature Language="C#" Value="public virtual void WriteNmToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteNmToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNmToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteNmToken (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteNmToken(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f94a1-787">書き込む名前。</span><span class="sxs-lookup"><span data-stu-id="f94a1-787">The name to write.</span></span></param>
        <summary><span data-ttu-id="f94a1-788">派生クラスでオーバーライドされると、指定した名前を書き込み、その名前が W3C 勧告『XML 1.0』(http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)) に準拠した有効な NmToken であるようにします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-788">When overridden in a derived class, writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-789">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteNmTokenAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-789">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteNmTokenAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f94a1-790"><paramref name="name" /> が有効な NmToken ではありません。または、<paramref name="name" /> が <see langword="null" /> または <see langword="String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-790"><paramref name="name" /> is not a valid NmToken; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-791">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-791">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-792">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-792">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNmTokenAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNmTokenAsync (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNmTokenAsync(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNmTokenAsync (name As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNmTokenAsync(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f94a1-793">書き込む名前。</span><span class="sxs-lookup"><span data-stu-id="f94a1-793">The name to write.</span></span></param>
        <summary><span data-ttu-id="f94a1-794">指定した名前が W3C 勧告『XML 1.0』(http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)) に準拠した有効な NmToken であることを確認し、それを非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-794">Asynchronously writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <returns><span data-ttu-id="f94a1-795">非同期の <see langword="WriteNmToken" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-795">The task that represents the asynchronous <see langword="WriteNmToken" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-796">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteNmToken%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-796">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteNmToken%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-797">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-797">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-798"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-798">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-799">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-799">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-800">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-800">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-801">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-801">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="f94a1-802">ソース オブジェクトから現在のライターのインスタンスにすべてをコピーします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-802">Copies everything from the source object to the current writer instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-803">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteNodeAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-803">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteNodeAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteNode">
      <MemberSignature Language="C#" Value="public virtual void WriteNode (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteNode(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteNode (reader As XmlReader, defattr As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteNode(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="f94a1-804">読み取り元の <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="f94a1-804">The <see cref="T:System.Xml.XmlReader" /> to read from.</span></span></param>
        <param name="defattr">
          <span data-ttu-id="f94a1-805"><see langword="XmlReader" /> の既定の属性をコピーする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f94a1-805"><see langword="true" /> to copy the default attributes from the <see langword="XmlReader" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f94a1-806">派生クラスでオーバーライドされると、リーダーのデータをすべてライターにコピーし、リーダーを次の兄弟の開始位置に移動します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-806">When overridden in a derived class, copies everything from the reader to the writer and moves the reader to the start of the next sibling.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-807">次の表では、このメソッドのサポートされているノード型を示します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-807">The following table shows the supported node types for this method.</span></span>  
  
|<span data-ttu-id="f94a1-808">ノード型</span><span class="sxs-lookup"><span data-stu-id="f94a1-808">NodeType</span></span>|<span data-ttu-id="f94a1-809">WriteNode 動作</span><span class="sxs-lookup"><span data-stu-id="f94a1-809">WriteNode Behavior</span></span>|  
|--------------|------------------------|  
|`None`|<span data-ttu-id="f94a1-810">型に関係なくすべてのノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-810">Writes out all the nodes irrespective of type.</span></span> <span data-ttu-id="f94a1-811">つまり、ライターを使用、<xref:System.Xml.XmlReader>とすべてのノードを書き込みますが、処理命令、コメント、およびなどの属性を含む読み取り。</span><span class="sxs-lookup"><span data-stu-id="f94a1-811">That is, the writer consumes the <xref:System.Xml.XmlReader> and writes out all the nodes read including attributes, processing instructions, comments, and so on.</span></span><br /><br /> <span data-ttu-id="f94a1-812">このような状況が発生したときに、<xref:System.Xml.XmlReader>が初期状態です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-812">This situation occurs when the <xref:System.Xml.XmlReader> is in an initial state.</span></span> <span data-ttu-id="f94a1-813">(、<xref:System.Xml.XmlReader.ReadState%2A?displayProperty=nameWithType>プロパティから返される`ReaderState.Initial`)。</span><span class="sxs-lookup"><span data-stu-id="f94a1-813">(The <xref:System.Xml.XmlReader.ReadState%2A?displayProperty=nameWithType> property returns `ReaderState.Initial`).</span></span>|  
|`Element`|<span data-ttu-id="f94a1-814">要素ノードと任意の属性ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-814">Writes out the element node and any attribute nodes.</span></span>|  
|`Attribute`|<span data-ttu-id="f94a1-815">何も実行しません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-815">No operation.</span></span> <span data-ttu-id="f94a1-816">代わりに、<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> タグまたは <xref:System.Xml.XmlWriter.WriteAttributeString%2A> タグを使用してください。</span><span class="sxs-lookup"><span data-stu-id="f94a1-816">Use <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> or <xref:System.Xml.XmlWriter.WriteAttributeString%2A> instead.</span></span>|  
|`Text`|<span data-ttu-id="f94a1-817">テキスト ノードを書き出します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-817">Writes out the text node.</span></span>|  
|`CDATA`|<span data-ttu-id="f94a1-818">CDATA セクション ノードを書き出します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-818">Writes out the CDATA section node.</span></span>|  
|`EntityReference`|<span data-ttu-id="f94a1-819">エンティティ参照ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-819">Writes out the entity reference node.</span></span>|  
|`ProcessingInstruction`|<span data-ttu-id="f94a1-820">処理命令ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-820">Writes out the processing instruction node.</span></span>|  
|`Comment`|<span data-ttu-id="f94a1-821">コメント ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-821">Writes out the comment node.</span></span>|  
|`DocumentType`|<span data-ttu-id="f94a1-822">ドキュメント型ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-822">Writes out the document type node.</span></span>|  
|`SignificantWhitespace`|<span data-ttu-id="f94a1-823">有意の空白ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-823">Writes out the significant white space node.</span></span>|  
|`Whitespace`|<span data-ttu-id="f94a1-824">空白ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-824">Writes out the white space node.</span></span>|  
|`EndElement`|<span data-ttu-id="f94a1-825">終了要素タグを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-825">Writes out the end element tag.</span></span>|  
|`EndEntity`|<span data-ttu-id="f94a1-826">何も実行しません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-826">No operation.</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="f94a1-827">XML 宣言ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-827">Writes out the XML declaration node.</span></span>|  
  
 <span data-ttu-id="f94a1-828">リーダーが初期状態である場合は、このメソッドは、ファイルの末尾にリーダーを移動します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-828">If the reader is in the initial state, this method moves the reader to the end of file.</span></span> <span data-ttu-id="f94a1-829">リーダーのファイルの末尾、または閉じられた状態で既に場合、このメソッドは操作不可です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-829">If the reader is already at the end of file or in a closed state, this method is non-operational.</span></span>  
  
 <span data-ttu-id="f94a1-830">次の c# コードでは、コンソールに全体の XML 入力ドキュメントをコピーします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-830">The following C# code copies an entire XML input document to the console:</span></span>  
  
```  
XmlReader reader = XmlReader.Create(myfile);  
XmlWriter writer = XmlWriter.Create(Console.Out);  
writer.WriteNode(reader, false);  
```  
  
 <span data-ttu-id="f94a1-831">ルート ノードから移動したし、は、ドキュメントに別の場所に配置する場合、次の c# の例は正しくノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-831">If you have moved off the root node and are positioned elsewhere in the document the following C# example correctly writes out the nodes.</span></span>  
  
```  
XmlReader reader = XmlReader.Create(myfile);  
reader.Read(); // Read PI  
reader.Read(); // Read Comment  
reader.Read(); // Read DOCType  
XmlWriter writer = XmlWriter.Create(Console.Out);  
while (!reader.EOF){  
  writer.WriteNode(reader, false);  
 }  
```  
  
 <span data-ttu-id="f94a1-832">出力にインデントを設定する場合は、リーダーが返すように構成の空白文字と、作成者が構成されている`WriteNode`出力を生成する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-832">If the reader is configured to return white space and the writer has is configured to indent output, `WriteNode` may produce strange output.</span></span> <span data-ttu-id="f94a1-833">本質的に受け取る二重の書式設定します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-833">You will essentially be getting double formatting.</span></span>  
  
 <span data-ttu-id="f94a1-834">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteNodeAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-834">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteNodeAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-835">次の例では、コンソールを最初と最後の book ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-835">The following example writes the first and last book nodes out to the console.</span></span>  
  
 [!code-cpp[XmlWriter.WriteNode#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteNode/CPP/writenode.cpp#1)]
 [!code-csharp[XmlWriter.WriteNode#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteNode/CS/writenode.cs#1)]
 [!code-vb[XmlWriter.WriteNode#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteNode/VB/writenode.vb#1)]  
  
 <span data-ttu-id="f94a1-836">この例では、`books.xml`の入力として、します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-836">The example uses the file, `books.xml`, as input.</span></span>  
  
 [!code-xml[XmlWriter.WriteNode#2](~/samples/snippets/xml/VS_Snippets_Data/XmlWriter.WriteNode/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f94a1-837"><paramref name="reader" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-837"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f94a1-838"><paramref name="reader" /> に無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f94a1-838"><paramref name="reader" /> contains invalid characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-839">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-839">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-840">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-840">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNode">
      <MemberSignature Language="C#" Value="public virtual void WriteNode (System.Xml.XPath.XPathNavigator navigator, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteNode(class System.Xml.XPath.XPathNavigator navigator, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteNode (navigator As XPathNavigator, defattr As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteNode(System::Xml::XPath::XPathNavigator ^ navigator, bool defattr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="navigator"><span data-ttu-id="f94a1-841">コピー元の <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="f94a1-841">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to copy from.</span></span></param>
        <param name="defattr">
          <span data-ttu-id="f94a1-842">既定の属性をコピーする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f94a1-842"><see langword="true" /> to copy the default attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f94a1-843"><see cref="T:System.Xml.XPath.XPathNavigator" /> オブジェクトからライターにすべてをコピーします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-843">Copies everything from the <see cref="T:System.Xml.XPath.XPathNavigator" /> object to the writer.</span></span> <span data-ttu-id="f94a1-844"><see cref="T:System.Xml.XPath.XPathNavigator" /> の位置は変更されません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-844">The position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> remains unchanged.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-845">次の表は、サポートされている`XPath`メソッドのこのノード型。</span><span class="sxs-lookup"><span data-stu-id="f94a1-845">The following table shows the supported `XPath` node types for this method.</span></span>  
  
|<span data-ttu-id="f94a1-846">XPathNodeType</span><span class="sxs-lookup"><span data-stu-id="f94a1-846">XPathNodeType</span></span>|<span data-ttu-id="f94a1-847">WriteNode 動作</span><span class="sxs-lookup"><span data-stu-id="f94a1-847">WriteNode Behavior</span></span>|  
|-------------------|------------------------|  
|`Root`|<span data-ttu-id="f94a1-848">型に関係なくすべてのノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-848">Writes out all the nodes irrespective of type.</span></span> <span data-ttu-id="f94a1-849">つまり、ライターを使用、<xref:System.Xml.XPath.XPathNavigator>し (処理命令、コメントなどの属性を含む) のルート ノードからすべてのノードを書き込みます</span><span class="sxs-lookup"><span data-stu-id="f94a1-849">That is, the writer consumes the <xref:System.Xml.XPath.XPathNavigator> and writes out all the nodes from the root node (including attributes, processing instructions, comments and so on.)</span></span>|  
|`Element`|<span data-ttu-id="f94a1-850">要素ノードと任意の属性ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-850">Writes out the element node and any attribute nodes.</span></span>|  
|`Attribute`|<span data-ttu-id="f94a1-851">何も実行しません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-851">No operation.</span></span> <span data-ttu-id="f94a1-852">代わりに、<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> タグまたは <xref:System.Xml.XmlWriter.WriteAttributeString%2A> タグを使用してください。</span><span class="sxs-lookup"><span data-stu-id="f94a1-852">Use <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> or <xref:System.Xml.XmlWriter.WriteAttributeString%2A> instead.</span></span>|  
|`Text`|<span data-ttu-id="f94a1-853">テキスト ノードを書き出します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-853">Writes out the text node.</span></span>|  
|`Namespace`|<span data-ttu-id="f94a1-854">何も実行しません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-854">No operation.</span></span> <span data-ttu-id="f94a1-855">使用して、<xref:System.Xml.XmlWriter.WriteStartAttribute%2A>または<xref:System.Xml.XmlWriter.WriteAttributeString%2A>名前空間の宣言を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-855">Use the <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> or <xref:System.Xml.XmlWriter.WriteAttributeString%2A> method to write the namespace declaration.</span></span>|  
|`ProcessingInstruction`|<span data-ttu-id="f94a1-856">処理命令ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-856">Writes out the processing instruction node.</span></span>|  
|`Comment`|<span data-ttu-id="f94a1-857">コメント ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-857">Writes out the comment node.</span></span>|  
|`SignificantWhitespace`|<span data-ttu-id="f94a1-858">有意の空白ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-858">Writes out the significant white space node.</span></span>|  
|`Whitespace`|<span data-ttu-id="f94a1-859">空白ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-859">Writes out the white space node.</span></span>|  
  
 <span data-ttu-id="f94a1-860">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteNodeAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-860">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteNodeAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-861">次の例では、<xref:System.Xml.XmlWriter.WriteNode%2A>メソッドは最初の book ノードをドキュメントからコピーをコンソールに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-861">The following example uses the <xref:System.Xml.XmlWriter.WriteNode%2A> method to copy the first book node from a document and write it to the console.</span></span>  
  
 [!code-csharp[XmlWriteNode_nav#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriteNode_nav/CS/XmlWriteNode_nav.cs#1)]
 [!code-vb[XmlWriteNode_nav#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriteNode_nav/VB/XmlWriteNode_nav.vb#1)]  
  
 <span data-ttu-id="f94a1-862">この例では、入力として books.xml ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-862">The example uses the books.xml file as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#1](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/books.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f94a1-863"><paramref name="navigator" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-863"><paramref name="navigator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-864">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-864">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-865">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-865">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteNodeAsync">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-866"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-866">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-867">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-867">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <summary><span data-ttu-id="f94a1-868">ソース オブジェクトから現在のライターのインスタンスにすべてを非同期にコピーします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-868">Asynchronously copies everything from the source object to the current writer instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-869">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteNode%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-869">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteNode%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-870">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-870">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteNodeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNodeAsync (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNodeAsync(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNodeAsync (reader As XmlReader, defattr As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNodeAsync(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="f94a1-871">読み取り元の <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="f94a1-871">The <see cref="T:System.Xml.XmlReader" /> to read from.</span></span></param>
        <param name="defattr">
          <span data-ttu-id="f94a1-872"><see langword="XmlReader" /> の既定の属性をコピーする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f94a1-872"><see langword="true" /> to copy the default attributes from the <see langword="XmlReader" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f94a1-873">派生クラスでオーバーライドされると、リーダーのデータをすべてライターに非同期にコピーし、リーダーを次の兄弟の開始位置に移動します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-873">Asynchronously copies everything from the reader to the writer and moves the reader to the start of the next sibling.</span></span></summary>
        <returns><span data-ttu-id="f94a1-874">非同期の <see langword="WriteNode" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-874">The task that represents the asynchronous <see langword="WriteNode" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-875">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteNode%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-875">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteNode%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-876">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-876">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-877"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-877">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-878">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-878">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNodeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNodeAsync (System.Xml.XPath.XPathNavigator navigator, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNodeAsync(class System.Xml.XPath.XPathNavigator navigator, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNodeAsync (navigator As XPathNavigator, defattr As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNodeAsync(System::Xml::XPath::XPathNavigator ^ navigator, bool defattr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlWriter/&lt;WriteNodeAsync&gt;c__async5))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="navigator"><span data-ttu-id="f94a1-879">コピー元の <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="f94a1-879">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to copy from.</span></span></param>
        <param name="defattr">
          <span data-ttu-id="f94a1-880">既定の属性をコピーする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f94a1-880"><see langword="true" /> to copy the default attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f94a1-881"><see cref="T:System.Xml.XPath.XPathNavigator" /> オブジェクトのすべてをライターに非同期にコピーします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-881">Asynchronously copies everything from the <see cref="T:System.Xml.XPath.XPathNavigator" /> object to the writer.</span></span> <span data-ttu-id="f94a1-882"><see cref="T:System.Xml.XPath.XPathNavigator" /> の位置は変更されません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-882">The position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> remains unchanged.</span></span></summary>
        <returns><span data-ttu-id="f94a1-883">非同期の <see langword="WriteNode" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-883">The task that represents the asynchronous <see langword="WriteNode" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-884">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteNode%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-884">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteNode%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-885">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-885">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-886"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-886">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-887">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-887">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstruction">
      <MemberSignature Language="C#" Value="public abstract void WriteProcessingInstruction (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteProcessingInstruction(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteProcessingInstruction (name As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteProcessingInstruction(System::String ^ name, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f94a1-888">処理命令の名前。</span><span class="sxs-lookup"><span data-stu-id="f94a1-888">The name of the processing instruction.</span></span></param>
        <param name="text"><span data-ttu-id="f94a1-889">処理命令に含めるテキスト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-889">The text to include in the processing instruction.</span></span></param>
        <summary><span data-ttu-id="f94a1-890">派生クラスでオーバーライドされると、名前とテキストの間にスペースがある処理命令を、次のように非同期的に書き込みます: &lt;?name text?&gt;。</span><span class="sxs-lookup"><span data-stu-id="f94a1-890">When overridden in a derived class, writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-891">このメソッドは、XML 宣言を書き込むために使用できます (なく<xref:System.Xml.XmlWriter.WriteStartDocument%2A>)。</span><span class="sxs-lookup"><span data-stu-id="f94a1-891">This method can be used to write the XML declaration (rather than <xref:System.Xml.XmlWriter.WriteStartDocument%2A>).</span></span> <span data-ttu-id="f94a1-892">これは、エンコーディング属性が正しくない書き込まれない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-892">This could result in the encoding attribute being incorrectly written.</span></span> <span data-ttu-id="f94a1-893">たとえば、次の c# コード当たる無効な XML ドキュメントの既定のエンコーディングは utf-8 です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-893">For example, the following C# code would result in an invalid XML document because the default encoding is UTF-8.</span></span>  
  
```  
XmlWriter writer = XmlWriter.Create("output.xml");  
writer.WriteProcessingInstruction("xml", "version='1.0' encoding='UTF-16'");  
writer.WriteStartElement("root");  
writer.Close();  
```  
  
 <span data-ttu-id="f94a1-894">場合`text`いずれかです`null`または`String.Empty`、このメソッドは書き込みます、`ProcessingInstruction`コンテンツ例については、データのない\<? 名前しますか? >。</span><span class="sxs-lookup"><span data-stu-id="f94a1-894">If `text` is either `null` or `String.Empty`, this method writes a `ProcessingInstruction` with no data content, for example \<?name?>.</span></span>  
  
 <span data-ttu-id="f94a1-895">テキストに無効なシーケンスが含まれる場合"? >"では、<xref:System.Xml.XmlWriter>か throw ことができます、 <xref:System.ArgumentException> (<xref:System.Xml.XmlTextWriter>オブジェクト) は空白を挿入または"しますか?</span><span class="sxs-lookup"><span data-stu-id="f94a1-895">If text contains an invalid sequence of "?>", the <xref:System.Xml.XmlWriter> can either throw an <xref:System.ArgumentException> (<xref:System.Xml.XmlTextWriter> objects) or insert a space "?</span></span> <span data-ttu-id="f94a1-896">>"無効な XML が書き込まれないように (<xref:System.Xml.XmlWriter>によって作成されたオブジェクト、<xref:System.Xml.XmlWriter.Create%2A>メソッド)。</span><span class="sxs-lookup"><span data-stu-id="f94a1-896">>" to avoid writing invalid XML (<xref:System.Xml.XmlWriter> objects created by the <xref:System.Xml.XmlWriter.Create%2A> method).</span></span>  
  
 <span data-ttu-id="f94a1-897">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteProcessingInstructionAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-897">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteProcessingInstructionAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-898">次の例では、ブックを表す XML ファイルを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-898">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f94a1-899">テキストは、非整形式の XML ドキュメントになります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-899">The text would result in a non-well formed XML document.</span></span>  
  
 <span data-ttu-id="f94a1-900"><paramref name="name" /> が <see langword="null" /> または <see langword="String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-900"><paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
 <span data-ttu-id="f94a1-901">このメソッドは、<see cref="M:System.Xml.XmlWriter.WriteStartDocument" /> が呼び出された後に XML 宣言を作成するために使用されています。</span><span class="sxs-lookup"><span data-stu-id="f94a1-901">This method is being used to create an XML declaration after <see cref="M:System.Xml.XmlWriter.WriteStartDocument" /> has already been called.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-902">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-902">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-903">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-903">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstructionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteProcessingInstructionAsync (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteProcessingInstructionAsync(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteProcessingInstructionAsync (name As String, text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteProcessingInstructionAsync(System::String ^ name, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f94a1-904">処理命令の名前。</span><span class="sxs-lookup"><span data-stu-id="f94a1-904">The name of the processing instruction.</span></span></param>
        <param name="text"><span data-ttu-id="f94a1-905">処理命令に含めるテキスト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-905">The text to include in the processing instruction.</span></span></param>
        <summary><span data-ttu-id="f94a1-906">名前とテキストの間にスペースがある処理命令を、次のように非同期的に書き込みます: &lt;?name text?&gt;。</span><span class="sxs-lookup"><span data-stu-id="f94a1-906">Asynchronously writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span></span></summary>
        <returns><span data-ttu-id="f94a1-907">非同期の <see langword="WriteProcessingInstruction" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-907">The task that represents the asynchronous <see langword="WriteProcessingInstruction" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-908">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-908">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-909">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-909">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-910"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-910">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-911">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-911">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedName">
      <MemberSignature Language="C#" Value="public virtual void WriteQualifiedName (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteQualifiedName(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteQualifiedName (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteQualifiedName(System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="f94a1-912">書き込むローカル名。</span><span class="sxs-lookup"><span data-stu-id="f94a1-912">The local name to write.</span></span></param>
        <param name="ns"><span data-ttu-id="f94a1-913">名前の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="f94a1-913">The namespace URI for the name.</span></span></param>
        <summary><span data-ttu-id="f94a1-914">派生クラスでオーバーライドされると、名前空間の限定名を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-914">When overridden in a derived class, writes out the namespace-qualified name.</span></span> <span data-ttu-id="f94a1-915">このメソッドは、指定した名前空間のスコープ内にあるプレフィックスを検索します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-915">This method looks up the prefix that is in scope for the given namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-916">場合`ns`現在既定の名前空間、プレフィックスなしのマップを生成します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-916">If `ns` maps to the current default namespace, no prefix is generated.</span></span>  
  
 <span data-ttu-id="f94a1-917">場合属性値を書き込むときにこのメソッドは、プレフィックスを生成`ns`が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-917">When writing attribute values, this method generates a prefix if `ns` is not found.</span></span> <span data-ttu-id="f94a1-918">要素の内容を記述する場合、例外がスロー`ns`が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-918">When writing element content, it throws an exception if `ns` is not found.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f94a1-919">派生したクラスの場合、<xref:System.Xml.XmlWriter>このメソッドをオーバーライドしません`localName`W3C XML 名を有効にするのにはチェックされません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-919">If a class derived from the <xref:System.Xml.XmlWriter> does not override this method `localName` is not checked to be a valid W3C XML name.</span></span> <span data-ttu-id="f94a1-920">このような場合、このメソッドを呼び出す前に、文字列の有効性を確認する<xref:System.Xml.XmlReader.IsName%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-920">In such case, before calling this method, the validity of the string can be checked by <xref:System.Xml.XmlReader.IsName%2A> method.</span></span>  
  
 <span data-ttu-id="f94a1-921">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteQualifiedNameAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-921">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteQualifiedNameAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-922">例では、次の要素を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-922">The example writes the following element:</span></span>  
  
```  
<root xmlns:x="urn:abc">  
  <item href="#x:test"/>  
</root>  
```  
  
 [!code-csharp[XmlWriter_v2#5](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#5)]
 [!code-vb[XmlWriter_v2#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f94a1-923"><paramref name="localName" /> が <see langword="null" /> または <see langword="String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-923"><paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
 <span data-ttu-id="f94a1-924"><paramref name="localName" /> が有効な名前ではありません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-924"><paramref name="localName" /> is not a valid name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-925">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-925">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-926">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-926">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedNameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteQualifiedNameAsync (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteQualifiedNameAsync(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteQualifiedNameAsync (localName As String, ns As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteQualifiedNameAsync(System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlWriter/&lt;WriteQualifiedNameAsync&gt;c__async1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="f94a1-927">書き込むローカル名。</span><span class="sxs-lookup"><span data-stu-id="f94a1-927">The local name to write.</span></span></param>
        <param name="ns"><span data-ttu-id="f94a1-928">名前の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="f94a1-928">The namespace URI for the name.</span></span></param>
        <summary><span data-ttu-id="f94a1-929">名前空間の修飾名を非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-929">Asynchronously writes out the namespace-qualified name.</span></span> <span data-ttu-id="f94a1-930">このメソッドは、指定した名前空間のスコープ内にあるプレフィックスを検索します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-930">This method looks up the prefix that is in scope for the given namespace.</span></span></summary>
        <returns><span data-ttu-id="f94a1-931">非同期の <see langword="WriteQualifiedName" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-931">The task that represents the asynchronous <see langword="WriteQualifiedName" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-932">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteQualifiedName%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-932">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteQualifiedName%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-933">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-933">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-934"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-934">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-935">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-935">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRaw">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-936">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-936">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-937">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-937">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="f94a1-938">派生クラスでオーバーライドされると、生のマークアップを手動で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-938">When overridden in a derived class, writes raw markup manually.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-939">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteRawAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-939">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteRawAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public abstract void WriteRaw (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteRaw(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRaw(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteRaw (data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteRaw(System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="f94a1-940">書き込むテキストを格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="f94a1-940">String containing the text to write.</span></span></param>
        <summary><span data-ttu-id="f94a1-941">派生クラスでオーバーライドされると、手動で文字列から生のマークアップを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-941">When overridden in a derived class, writes raw markup manually from a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-942">このメソッドは、特殊文字をエスケープしません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-942">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f94a1-943"><xref:System.Xml.XmlWriter>に渡されるデータを検証しません、<xref:System.Xml.XmlWriter.WriteRaw%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-943">The <xref:System.Xml.XmlWriter> does not validate the data that is passed to the <xref:System.Xml.XmlWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="f94a1-944">このメソッドに、任意のデータを渡さないでください。</span><span class="sxs-lookup"><span data-stu-id="f94a1-944">You should not pass arbitrary data to this method.</span></span>  
  
 <span data-ttu-id="f94a1-945">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteRawAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-945">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteRawAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-946">参照してください<xref:System.Xml.XmlTextWriter.WriteRaw%2A?displayProperty=nameWithType>たとえば、このメソッドを使用しています。</span><span class="sxs-lookup"><span data-stu-id="f94a1-946">See <xref:System.Xml.XmlTextWriter.WriteRaw%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f94a1-947"><paramref name="data" /> が <see langword="null" /> または <see langword="String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-947"><paramref name="data" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-948">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-948">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-949">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-949">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public abstract void WriteRaw (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteRaw(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteRaw (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteRaw(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="f94a1-950">書き込むテキストを格納している文字配列。</span><span class="sxs-lookup"><span data-stu-id="f94a1-950">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="f94a1-951">書き込むテキストの開始を示すバッファー内の位置。</span><span class="sxs-lookup"><span data-stu-id="f94a1-951">The position within the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="f94a1-952">書き込む文字数。</span><span class="sxs-lookup"><span data-stu-id="f94a1-952">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="f94a1-953">派生クラスでオーバーライドされると、手動で文字バッファーから生のマークアップを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-953">When overridden in a derived class, writes raw markup manually from a character buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-954">このメソッドは、特殊文字をエスケープしません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-954">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f94a1-955"><xref:System.Xml.XmlWriter>に渡されるデータを検証しません、<xref:System.Xml.XmlWriter.WriteRaw%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-955">The <xref:System.Xml.XmlWriter> does not validate the data that is passed to the <xref:System.Xml.XmlWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="f94a1-956">このメソッドに、任意のデータを渡さないでください。</span><span class="sxs-lookup"><span data-stu-id="f94a1-956">You should not pass arbitrary data to this method.</span></span>  
  
 <span data-ttu-id="f94a1-957">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteRawAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-957">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteRawAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f94a1-958"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-958"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f94a1-959"><paramref name="index" /> または <paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-959"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="f94a1-960">- または -</span><span class="sxs-lookup"><span data-stu-id="f94a1-960">-or-</span></span>  
  
 <span data-ttu-id="f94a1-961">バッファーの長さから <paramref name="index" /> を引いた値が <paramref name="count" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-961">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-962">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-962">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-963">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-963">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRawAsync">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-964"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-964">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-965">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-965">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <summary><span data-ttu-id="f94a1-966">生のマークアップを非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-966">Asynchronously writes raw markup manually.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-967">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteRaw%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-967">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteRaw%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-968">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-968">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRawAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteRawAsync (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteRawAsync(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRawAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteRawAsync (data As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteRawAsync(System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="f94a1-969">書き込むテキストを格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="f94a1-969">String containing the text to write.</span></span></param>
        <summary><span data-ttu-id="f94a1-970">文字列から手動で生のマークアップを非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-970">Asynchronously writes raw markup manually from a string.</span></span></summary>
        <returns><span data-ttu-id="f94a1-971">非同期の <see langword="WriteRaw" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-971">The task that represents the asynchronous <see langword="WriteRaw" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-972">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteRaw%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-972">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteRaw%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-973">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-973">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-974"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-974">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-975">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-975">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRawAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteRawAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteRawAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteRawAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteRawAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="f94a1-976">書き込むテキストを格納している文字配列。</span><span class="sxs-lookup"><span data-stu-id="f94a1-976">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="f94a1-977">書き込むテキストの開始を示すバッファー内の位置。</span><span class="sxs-lookup"><span data-stu-id="f94a1-977">The position within the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="f94a1-978">書き込む文字数。</span><span class="sxs-lookup"><span data-stu-id="f94a1-978">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="f94a1-979">文字バッファーから手動で生のマークアップを非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-979">Asynchronously writes raw markup manually from a character buffer.</span></span></summary>
        <returns><span data-ttu-id="f94a1-980">非同期の <see langword="WriteRaw" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-980">The task that represents the asynchronous <see langword="WriteRaw" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-981">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteRaw%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-981">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteRaw%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-982">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-982">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-983"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-983">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-984">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-984">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-985">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-985">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-986">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-986">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="f94a1-987">派生クラスでオーバーライドされると、属性の開始を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-987">When overridden in a derived class, writes the start of an attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-988">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-988">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public void WriteStartAttribute (string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartAttribute(string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartAttribute (localName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartAttribute(System::String ^ localName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="f94a1-989">属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="f94a1-989">The local name of the attribute.</span></span></param>
        <summary><span data-ttu-id="f94a1-990">指定されたローカル名を使用して属性の開始を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-990">Writes the start of an attribute with the specified local name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-991">このメソッドでは、複数の書き込みメソッドを使用して値を記述することができます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-991">This method enables you to write a value using multiple Write methods.</span></span>  
  
 <span data-ttu-id="f94a1-992">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-992">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-993">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-993">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-994">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-994">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="f94a1-995">有効な XML 文字であるが出力エンコーディングには有効でない文字がバッファー内にあります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-995">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="f94a1-996">たとえば、出力エンコーディングが ASCII の場合、要素名と属性名には 0 ～ 127 の範囲の文字だけを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-996">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="f94a1-997">無効な文字は、このメソッドの引数か、バッファーに書き込んでいた以前のメソッドの引数に含まれている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-997">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="f94a1-998">このような文字は、可能であれば文字エンティティ参照によってエスケープされます (たとえば、テキスト ノード内や属性値内で)。</span><span class="sxs-lookup"><span data-stu-id="f94a1-998">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="f94a1-999">ただし、文字エンティティの参照は、要素名と属性名、コメント、処理命令、または CDATA セクションでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-999">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public void WriteStartAttribute (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartAttribute(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartAttribute (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartAttribute(System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="f94a1-1000">属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1000">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="f94a1-1001">属性の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1001">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="f94a1-1002">指定されたローカル名および名前空間 URI を使用して属性の開始を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1002">Writes the start of an attribute with the specified local name and namespace URI.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1003">これより高度なバージョンの<xref:System.Xml.XmlWriter.WriteAttributeString%2A>などの複数の書き込みメソッドを使用して属性値を記述することができます<xref:System.Xml.XmlWriter.WriteString%2A>、<xref:System.Xml.XmlWriter.WriteQualifiedName%2A>のようにします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1003">This is a more advanced version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> that allows you to write an attribute value using multiple write methods, such as <xref:System.Xml.XmlWriter.WriteString%2A>, <xref:System.Xml.XmlWriter.WriteQualifiedName%2A>, and so on.</span></span>  
  
 <span data-ttu-id="f94a1-1004">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1004">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-1005">参照してください<xref:System.Xml.XmlTextWriter.WriteStartAttribute%2A?displayProperty=nameWithType>たとえば、このメソッドを使用しています。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1005">See <xref:System.Xml.XmlTextWriter.WriteStartAttribute%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="f94a1-1006">有効な XML 文字であるが出力エンコーディングには有効でない文字がバッファー内にあります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1006">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="f94a1-1007">たとえば、出力エンコーディングが ASCII の場合、要素名と属性名には 0 ～ 127 の範囲の文字だけを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1007">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="f94a1-1008">無効な文字は、このメソッドの引数か、バッファーに書き込んでいた以前のメソッドの引数に含まれている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1008">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="f94a1-1009">このような文字は、可能であれば文字エンティティ参照によってエスケープされます (たとえば、テキスト ノード内や属性値内で)。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1009">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="f94a1-1010">ただし、文字エンティティの参照は、要素名と属性名、コメント、処理命令、または CDATA セクションでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1010">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1011">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1011">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1012">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1012">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="M:System.Xml.XmlWriter.WriteEndAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public abstract void WriteStartAttribute (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartAttribute(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartAttribute (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="f94a1-1013">属性の名前空間プレフィックス。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1013">The namespace prefix of the attribute.</span></span></param>
        <param name="localName"><span data-ttu-id="f94a1-1014">属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1014">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="f94a1-1015">属性の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1015">The namespace URI for the attribute.</span></span></param>
        <summary><span data-ttu-id="f94a1-1016">派生クラスでオーバーライドされると、指定されたプリフィックス、ローカル名、および名前空間 URI を使用して属性の開始を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1016">When overridden in a derived class, writes the start of an attribute with the specified prefix, local name, and namespace URI.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1017">このメソッドでは、複数の書き込みメソッドを使用して値を記述することができます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1017">This method enables you to write a value using multiple Write methods.</span></span>  
  
 <span data-ttu-id="f94a1-1018">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1018">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="f94a1-1019">有効な XML 文字であるが出力エンコーディングには有効でない文字がバッファー内にあります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1019">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="f94a1-1020">たとえば、出力エンコーディングが ASCII の場合、要素名と属性名には 0 ～ 127 の範囲の文字だけを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1020">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="f94a1-1021">無効な文字は、このメソッドの引数か、バッファーに書き込んでいた以前のメソッドの引数に含まれている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1021">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="f94a1-1022">このような文字は、可能であれば文字エンティティ参照によってエスケープされます (たとえば、テキスト ノード内や属性値内で)。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1022">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="f94a1-1023">ただし、文字エンティティの参照は、要素名と属性名、コメント、処理命令、または CDATA セクションでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1023">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1024">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1024">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1025">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1025">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttributeAsync">
      <MemberSignature Language="C#" Value="protected internal virtual System.Threading.Tasks.Task WriteStartAttributeAsync (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartAttributeAsync(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function WriteStartAttributeAsync (prefix As String, localName As String, ns As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartAttributeAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="f94a1-1026">属性の名前空間プレフィックス。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1026">The namespace prefix of the attribute.</span></span></param>
        <param name="localName"><span data-ttu-id="f94a1-1027">属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1027">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="f94a1-1028">属性の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1028">The namespace URI for the attribute.</span></span></param>
        <summary><span data-ttu-id="f94a1-1029">指定されたプレフィックス、ローカル名、および名前空間 URI を使用して属性の開始を非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1029">Asynchronously writes the start of an attribute with the specified prefix, local name, and namespace URI.</span></span></summary>
        <returns><span data-ttu-id="f94a1-1030">非同期の <see langword="WriteStartAttribute" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1030">The task that represents the asynchronous <see langword="WriteStartAttribute" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1031">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteStartAttribute%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1031">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteStartAttribute%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-1032">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1032">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1033"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1033">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-1034">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1034">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocument">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1035">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1035">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1036">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1036">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="f94a1-1037">派生クラスでオーバーライドされると、XML 宣言を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1037">When overridden in a derived class, writes the XML declaration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1038">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1038">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public abstract void WriteStartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocument" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartDocument();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f94a1-1039">派生クラスでオーバーライドされると、バージョン "1.0" の XML 宣言を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1039">When overridden in a derived class, writes the XML declaration with the version "1.0".</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1040">ドキュメントのエンコーディングのレベルについては、ライターの実装方法によって決まります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1040">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="f94a1-1041">たとえば場合、<xref:System.Text.Encoding>オブジェクトで指定、`XmlTextWriter`コンス トラクター、encoding 属性の値を指定します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1041">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span> <span data-ttu-id="f94a1-1042">このメソッドは、スタンドアロン属性を作成できません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1042">This method does not create a standalone attribute.</span></span>  
  
 <span data-ttu-id="f94a1-1043">ときに`WriteStartDocument`が呼び出されたライターは、書き込み、何が整形式 XML ドキュメントであることを検証します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1043">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="f94a1-1044">たとえば、ことを確認 XML 宣言は、最初のノードはいずれか 1 つだけのルート レベル要素が存在しなどです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1044">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists, and so on.</span></span> <span data-ttu-id="f94a1-1045">このメソッドが呼び出されない場合、ライターでは、XML フラグメントが書き込まれていると、ルート レベルの規則が適用されない前提としています。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1045">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="f94a1-1046">場合`WriteStartDocument`が呼び出されたし、<xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A>メソッドの使用を別の XML 宣言を作成、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1046">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception will be thrown.</span></span>  
  
 <span data-ttu-id="f94a1-1047">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1047">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1048">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1048">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1049">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1049">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public abstract void WriteStartDocument (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartDocument(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartDocument (standalone As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartDocument(bool standalone);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone"><span data-ttu-id="f94a1-1050"><see langword="true" /> の場合は "standalone=yes"、<see langword="false" /> の場合は "standalone=no" を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1050">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span></span></param>
        <summary><span data-ttu-id="f94a1-1051">派生クラスでオーバーライドされると、バージョン "1.0" の XML 宣言とスタンドアロン属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1051">When overridden in a derived class, writes the XML declaration with the version "1.0" and the standalone attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1052">ドキュメントのエンコーディングのレベルについては、ライターの実装方法によって決まります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1052">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="f94a1-1053">たとえば場合、<xref:System.Text.Encoding>オブジェクトで指定、`XmlTextWriter`コンス トラクター、encoding 属性の値を指定します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1053">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span>  
  
 <span data-ttu-id="f94a1-1054">ときに`WriteStartDocument`が呼び出されると、ライターことを検証を記述する整形式 XML ドキュメントです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1054">When `WriteStartDocument` is called, the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="f94a1-1055">たとえば、ことを確認 XML 宣言は、最初のノードはいずれか 1 つだけのルート レベル要素が存在しなどです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1055">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists, and so on.</span></span> <span data-ttu-id="f94a1-1056">このメソッドが呼び出されない場合、ライターでは、XML フラグメントが書き込まれていると、ルート レベルの規則が適用されない前提としています。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1056">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="f94a1-1057">場合`WriteStartDocument`が呼び出されたし、<xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A>メソッドの使用を別の XML 宣言を作成、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1057">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception will be thrown.</span></span>  
  
 <span data-ttu-id="f94a1-1058">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1058">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1059">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1059">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1060">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1060">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocumentAsync">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1061"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1061">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-1062">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1062">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <summary><span data-ttu-id="f94a1-1063">XML 宣言を非同期的に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1063">Asynchronously writes the XML declaration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1064">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteStartDocument%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1064">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteStartDocument%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-1065">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1065">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocumentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStartDocumentAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartDocumentAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocumentAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStartDocumentAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartDocumentAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f94a1-1066">バージョン "1.0" で XML 宣言を非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1066">Asynchronously writes the XML declaration with the version "1.0".</span></span></summary>
        <returns><span data-ttu-id="f94a1-1067">非同期の <see langword="WriteStartDocument" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1067">The task that represents the asynchronous <see langword="WriteStartDocument" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1068">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteStartDocument%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1068">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteStartDocument%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-1069">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1069">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1070"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1070">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-1071">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1071">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocumentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStartDocumentAsync (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartDocumentAsync(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStartDocumentAsync (standalone As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartDocumentAsync(bool standalone);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone"><span data-ttu-id="f94a1-1072"><see langword="true" /> の場合は "standalone=yes"、<see langword="false" /> の場合は "standalone=no" を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1072">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span></span></param>
        <summary><span data-ttu-id="f94a1-1073">バージョン "1.0" とスタントアロン属性を使用して XML 宣言を非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1073">Asynchronously writes the XML declaration with the version "1.0" and the standalone attribute.</span></span></summary>
        <returns><span data-ttu-id="f94a1-1074">非同期の <see langword="WriteStartDocument" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1074">The task that represents the asynchronous <see langword="WriteStartDocument" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1075">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteStartDocument%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1075">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteStartDocument%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-1076">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1076">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1077"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1077">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-1078">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1078">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1079">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1079">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1080">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1080">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="f94a1-1081">派生クラスでオーバーライドされると、指定した開始タグを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1081">When overridden in a derived class, writes the specified start tag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1082">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1082">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public void WriteStartElement (string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartElement(string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartElement (localName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartElement(System::String ^ localName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="f94a1-1083">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1083">The local name of the element.</span></span></param>
        <summary><span data-ttu-id="f94a1-1084">派生クラスでオーバーライドされると、指定したローカル名の開始タグを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1084">When overridden in a derived class, writes out a start tag with the specified local name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1085">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1085">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-1086">次の例では、XML ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1086">The following example writes an XML node.</span></span>  
  
 [!code-cpp[XmlWriter.Close#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Close/CPP/XmlWriter.Close.cpp#1)]
 [!code-csharp[XmlWriter.Close#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Close/CS/writeelems.cs#1)]
 [!code-vb[XmlWriter.Close#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Close/VB/writeelems.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1087">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1087">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1088">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1088">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="f94a1-1089">有効な XML 文字であるが出力エンコーディングには有効でない文字がバッファー内にあります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1089">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="f94a1-1090">たとえば、出力エンコーディングが ASCII の場合、要素名と属性名には 0 ～ 127 の範囲の文字だけを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1090">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="f94a1-1091">無効な文字は、このメソッドの引数か、バッファーに書き込んでいた以前のメソッドの引数に含まれている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1091">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="f94a1-1092">このような文字は、可能であれば文字エンティティ参照によってエスケープされます (たとえば、テキスト ノード内や属性値内で)。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1092">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="f94a1-1093">ただし、文字エンティティの参照は、要素名と属性名、コメント、処理命令、または CDATA セクションでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1093">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public void WriteStartElement (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartElement(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartElement (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartElement(System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="f94a1-1094">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1094">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="f94a1-1095">要素に関連付ける名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1095">The namespace URI to associate with the element.</span></span> <span data-ttu-id="f94a1-1096">この名前空間が既にスコープ内にあり、関連付けられたプリフィックスを持つ場合、ライターは、そのプリフィックスも自動的に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1096">If this namespace is already in scope and has an associated prefix, the writer automatically writes that prefix also.</span></span></param>
        <summary><span data-ttu-id="f94a1-1097">派生クラスでオーバーライドされると、指定した開始タグを書き込み、指定した名前空間に関連付けます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1097">When overridden in a derived class, writes the specified start tag and associates it with the given namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1098">使用して、コンテンツの属性を記述するか、作成は、このメソッドを呼び出した後<xref:System.Xml.XmlWriter.WriteComment%2A>、 <xref:System.Xml.XmlWriter.WriteString%2A>、または`WriteStartElement`の子要素です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1098">After calling this method you can either write attributes, or create content using <xref:System.Xml.XmlWriter.WriteComment%2A>, <xref:System.Xml.XmlWriter.WriteString%2A>, or `WriteStartElement` for child elements.</span></span> <span data-ttu-id="f94a1-1099">いずれかを持つ要素を閉じることができます<xref:System.Xml.XmlWriter.WriteEndElement%2A>または<xref:System.Xml.XmlWriter.WriteFullEndElement%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1099">You can close the element with either <xref:System.Xml.XmlWriter.WriteEndElement%2A> or <xref:System.Xml.XmlWriter.WriteFullEndElement%2A>.</span></span> <span data-ttu-id="f94a1-1100">たとえば、次の c# コード。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1100">For example, the following C# code:</span></span>  
  
```  
writer.WriteStartElement("item",null);  
writer.WriteString("some text");  
writer.WriteEndElement();  
```  
  
 <span data-ttu-id="f94a1-1101">次の出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1101">Generates the following output:</span></span>  
  
```  
<item>some text</item>  
```  
  
 <span data-ttu-id="f94a1-1102">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1102">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1103">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1103">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1104">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1104">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="f94a1-1105">有効な XML 文字であるが出力エンコーディングには有効でない文字がバッファー内にあります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1105">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="f94a1-1106">たとえば、出力エンコーディングが ASCII の場合、要素名と属性名には 0 ～ 127 の範囲の文字だけを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1106">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="f94a1-1107">無効な文字は、このメソッドの引数か、バッファーに書き込んでいた以前のメソッドの引数に含まれている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1107">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="f94a1-1108">このような文字は、可能であれば文字エンティティ参照によってエスケープされます (たとえば、テキスト ノード内や属性値内で)。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1108">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="f94a1-1109">ただし、文字エンティティの参照は、要素名と属性名、コメント、処理命令、または CDATA セクションでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1109">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public abstract void WriteStartElement (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartElement(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartElement (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartElement(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="f94a1-1110">要素の名前空間プリフィックス。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1110">The namespace prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="f94a1-1111">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1111">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="f94a1-1112">要素に関連付ける名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1112">The namespace URI to associate with the element.</span></span></param>
        <summary><span data-ttu-id="f94a1-1113">派生クラスでオーバーライドされると、指定した開始タグを書き込み、指定した名前空間とプリフィックスに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1113">When overridden in a derived class, writes the specified start tag and associates it with the given namespace and prefix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1114">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1114">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-1115">次の例は、XML フラグメントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1115">The following example writes out an XML fragment.</span></span>  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1116">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1116">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1117">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1117">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="f94a1-1118">有効な XML 文字であるが出力エンコーディングには有効でない文字がバッファー内にあります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1118">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="f94a1-1119">たとえば、出力エンコーディングが ASCII の場合、要素名と属性名には 0 ～ 127 の範囲の文字だけを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1119">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="f94a1-1120">無効な文字は、このメソッドの引数か、バッファーに書き込んでいた以前のメソッドの引数に含まれている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1120">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="f94a1-1121">このような文字は、可能であれば文字エンティティ参照によってエスケープされます (たとえば、テキスト ノード内や属性値内で)。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1121">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="f94a1-1122">ただし、文字エンティティの参照は、要素名と属性名、コメント、処理命令、または CDATA セクションでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1122">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStartElementAsync (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartElementAsync(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStartElementAsync (prefix As String, localName As String, ns As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartElementAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="f94a1-1123">要素の名前空間プリフィックス。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1123">The namespace prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="f94a1-1124">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1124">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="f94a1-1125">要素に関連付ける名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1125">The namespace URI to associate with the element.</span></span></param>
        <summary><span data-ttu-id="f94a1-1126">指定した開始タグを非同期に書き込み、指定した名前空間とプレフィックスに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1126">Asynchronously writes the specified start tag and associates it with the given namespace and prefix.</span></span></summary>
        <returns><span data-ttu-id="f94a1-1127">非同期の <see langword="WriteStartElement" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1127">The task that represents the asynchronous <see langword="WriteStartElement" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1128">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteStartElement%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1128">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteStartElement%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-1129">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1129">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1130"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1130">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-1131">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1131">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteState">
      <MemberSignature Language="C#" Value="public abstract System.Xml.WriteState WriteState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WriteState WriteState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.WriteState" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property WriteState As WriteState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::WriteState WriteState { System::Xml::WriteState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WriteState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f94a1-1132">派生クラスでオーバーライドされると、ライターの状態を取得します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1132">When overridden in a derived class, gets the state of the writer.</span></span></summary>
        <value><span data-ttu-id="f94a1-1133"><see cref="T:System.Xml.WriteState" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1133">One of the <see cref="T:System.Xml.WriteState" /> values.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1134">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1134">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1135">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1135">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public abstract void WriteString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteString (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteString(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="f94a1-1136">書き込むテキスト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1136">The text to write.</span></span></param>
        <summary><span data-ttu-id="f94a1-1137">派生クラスでオーバーライドされると、指定したテキスト内容を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1137">When overridden in a derived class, writes the given text content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1138">`WriteString` では次の処理が行われます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1138">`WriteString` does the following:</span></span>  
  
-   <span data-ttu-id="f94a1-1139">文字`&`、 `<`、および`>`に置き換えられます`&amp;`、 `&lt;`、および`&gt;`、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1139">The characters `&`, `<`, and `>` are replaced with `&amp;`, `&lt;`, and `&gt;`, respectively.</span></span>  
  
-   <span data-ttu-id="f94a1-1140">既定の動作、<xref:System.Xml.XmlWriter>を使用して作成<xref:System.Xml.XmlWriter.Create%2A>をスローする、<xref:System.ArgumentException>範囲 0 x-0x1F (除外の空白文字、0x9、0 xa、および 0xD) で文字の値を書き込もうとするとします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1140">The default behavior of an <xref:System.Xml.XmlWriter> created using <xref:System.Xml.XmlWriter.Create%2A> is to throw an <xref:System.ArgumentException> when attempting to write character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD).</span></span> <span data-ttu-id="f94a1-1141">作成することで無効な XML 文字を書き込むことが、<xref:System.Xml.XmlWriter>で、<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>プロパティに設定`false`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1141">These invalid XML characters can be written by creating the <xref:System.Xml.XmlWriter> with the <xref:System.Xml.XmlWriterSettings.CheckCharacters%2A> property set to `false`.</span></span> <span data-ttu-id="f94a1-1142">なります数値エンティティに置き換えるときに文字 ((& a)\#0 から; (& a) #0x1F)。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1142">Doing so will result in the characters being replaced with numeric character entities (&\#0; through &#0x1F).</span></span> <span data-ttu-id="f94a1-1143">さらに、<xref:System.Xml.XmlTextWriter>で作成された、`new`演算子は無効な文字を置き換える数値エンティティ既定でします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1143">Additionally, an <xref:System.Xml.XmlTextWriter> created with the `new` operator will replace the invalid characters with numeric character entities by default.</span></span>  
  
 <span data-ttu-id="f94a1-1144">**注**Microsoft が無効な文字を処理する XML を使用する多くのアプリケーションが設計されていませんために、無効な XML 文字を書き込む方法をお勧めしません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1144">**Note** Microsoft does not encourage the practice of writing invalid XML characters since many applications that consume XML are not designed to handle invalid characters.</span></span>  
  
-   <span data-ttu-id="f94a1-1145">場合`WriteString`が呼び出された属性値のコンテキストでの二重と 1 つの引用符は置き換え`&quot;`と`&apos;`それぞれします。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1145">If `WriteString` is called in the context of an attribute value, double and single quotes are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
 <span data-ttu-id="f94a1-1146">たとえば、この文字列を入力`test<item>test`として書き出さ</span><span class="sxs-lookup"><span data-stu-id="f94a1-1146">For example, this input string `test<item>test` is written out as</span></span>  
  
```  
test&lt;item&gt;test  
```  
  
 <span data-ttu-id="f94a1-1147">場合`text`か`null`または`String.Empty`、このメソッドは、データ コンテンツのないと、テキスト ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1147">If `text` is either `null` or `String.Empty`, this method writes a text node with no data content.</span></span>  
  
 <span data-ttu-id="f94a1-1148">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteStringAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1148">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-1149">次の例では、XML ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1149">The following example writes an XML node.</span></span>  
  
 [!code-cpp[XmlWriter.Close#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Close/CPP/XmlWriter.Close.cpp#1)]
 [!code-csharp[XmlWriter.Close#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Close/CS/writeelems.cs#1)]
 [!code-vb[XmlWriter.Close#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Close/VB/writeelems.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f94a1-1150">テキスト文字列に、無効なサロゲート ペアが含まれています。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1150">The text string contains an invalid surrogate pair.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1151">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1151">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1152">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1152">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStringAsync (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStringAsync(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStringAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStringAsync (text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStringAsync(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="f94a1-1153">書き込むテキスト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1153">The text to write.</span></span></param>
        <summary><span data-ttu-id="f94a1-1154">指定したテキストの内容を非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1154">Asynchronously writes the given text content.</span></span></summary>
        <returns><span data-ttu-id="f94a1-1155">非同期の <see langword="WriteString" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1155">The task that represents the asynchronous <see langword="WriteString" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1156">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteString%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1156">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteString%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-1157">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1157">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1158"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1158">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-1159">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1159">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntity">
      <MemberSignature Language="C#" Value="public abstract void WriteSurrogateCharEntity (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteSurrogateCharEntity(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteSurrogateCharEntity (lowChar As Char, highChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteSurrogateCharEntity(char lowChar, char highChar);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar"><span data-ttu-id="f94a1-1160">下位サロゲート。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1160">The low surrogate.</span></span> <span data-ttu-id="f94a1-1161">この値は、0xDC00 から 0xDFFF の範囲内にある必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1161">This must be a value between 0xDC00 and 0xDFFF.</span></span></param>
        <param name="highChar"><span data-ttu-id="f94a1-1162">上位サロゲート。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1162">The high surrogate.</span></span> <span data-ttu-id="f94a1-1163">この値は、0xD800 から 0xDBFF の範囲内にある必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1163">This must be a value between 0xD800 and 0xDBFF.</span></span></param>
        <summary><span data-ttu-id="f94a1-1164">派生クラスでオーバーライドされると、サロゲート文字ペアのサロゲート文字エンティティを生成し、書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1164">When overridden in a derived class, generates and writes the surrogate character entity for the surrogate character pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1165">このメソッドは、utf-16 エンコードを使用するシステムに該当するだけです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1165">This method is only applicable on systems that use UTF-16 encoding.</span></span>  
  
 <span data-ttu-id="f94a1-1166">サロゲート文字エンティティは、16 進形式で書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1166">The surrogate character entity is written in hexadecimal format.</span></span> <span data-ttu-id="f94a1-1167">サロゲート文字の範囲は、#x&#10000;x10ffff です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1167">The range for surrogate characters is #x10000 to #x10FFFF.</span></span> <span data-ttu-id="f94a1-1168">次の数式は、サロゲート文字エンティティを生成するために使用します (`highChar` -0xD800) \* 0x400 + (`lowChar` -0xDC00) + 0x10000。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1168">The following formula is used to generate the surrogate character entity: (`highChar` -0xD800) \* 0x400 + (`lowChar` -0xDC00) + 0x10000</span></span>  
  
 <span data-ttu-id="f94a1-1169">HTML および XML の両方のドキュメントの文字セット (および、したがって数字参照の表記法) は UCS [ISO 10646] に基づいています。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1169">For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646].</span></span> <span data-ttu-id="f94a1-1170">ソース ドキュメント内の 1 つの数字参照可能性がありますしたがっていくつかの場合に対応 (上位サロゲートおよび下位サロゲート)、文字列内の 2 つの 16 ビット単位です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1170">A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate).</span></span> <span data-ttu-id="f94a1-1171">これらの 16 ビット単位は"サロゲート ペア"と呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1171">These 16-bit units are referred to as a surrogate pair.</span></span>  
  
 <span data-ttu-id="f94a1-1172">サロゲート文字や文字の詳細についてを参照してください 3.7、unicode standard 3.0 または Unicode 2.0 にあるhttp://www.unicode.org、2.2、W3C XML 1.0 』 勧告のセクションにあるまたはhttp://www.w3.org/TR/REC-xml#charsetsです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1172">For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at http://www.unicode.org, or section 2.2 of the W3C XML 1.0 Recommendation located at http://www.w3.org/TR/REC-xml#charsets.</span></span>  
  
 <span data-ttu-id="f94a1-1173">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1173">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f94a1-1174">無効なサロゲート文字ペアが渡されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1174">An invalid surrogate character pair was passed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1175">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1175">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1176">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1176">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteSurrogateCharEntityAsync (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteSurrogateCharEntityAsync(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteSurrogateCharEntityAsync (lowChar As Char, highChar As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteSurrogateCharEntityAsync(char lowChar, char highChar);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar"><span data-ttu-id="f94a1-1177">下位サロゲート。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1177">The low surrogate.</span></span> <span data-ttu-id="f94a1-1178">この値は、0xDC00 から 0xDFFF の範囲内にある必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1178">This must be a value between 0xDC00 and 0xDFFF.</span></span></param>
        <param name="highChar"><span data-ttu-id="f94a1-1179">上位サロゲート。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1179">The high surrogate.</span></span> <span data-ttu-id="f94a1-1180">この値は、0xD800 から 0xDBFF の範囲内にある必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1180">This must be a value between 0xD800 and 0xDBFF.</span></span></param>
        <summary><span data-ttu-id="f94a1-1181">サロゲート文字ペアのサロゲート文字エンティティを非同期に生成して書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1181">Asynchronously generates and writes the surrogate character entity for the surrogate character pair.</span></span></summary>
        <returns><span data-ttu-id="f94a1-1182">非同期の <see langword="WriteSurrogateCharEntity" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1182">The task that represents the asynchronous <see langword="WriteSurrogateCharEntity" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1183">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteSurrogateCharEntity%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1183">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteSurrogateCharEntity%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-1184">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1184">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1185"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1185">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-1186">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1186">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteValue">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1187">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1187">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1188">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1188">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="f94a1-1189">単一の単純型の値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1189">Writes a single simple-typed value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1190"><xref:System.Xml.XmlWriter.WriteValue%2A>メソッドは、共通言語ランタイム (CLR) 単純型の値を指定する、XML スキーマ定義言語 (XSD) データ型の変換の規則に従って、それぞれの文字列表現に変換およびを使用してそれらを書き込みます、 <xref:System.Xml.XmlWriter.WriteString%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1190">The <xref:System.Xml.XmlWriter.WriteValue%2A> method accepts common language runtime (CLR) simple-typed values, converts them to their string representations according to the XML schema definition language (XSD) data type conversion rules, and writes them out by using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span> <span data-ttu-id="f94a1-1191">これにより、パイプラインの単純な型の値の間でデータを渡す場合は、最小解析をオーバーヘッドで<xref:System.Xml.XPath.XPathDocument>、 <xref:System.Xml.XmlReader>、および<xref:System.Xml.XmlWriter>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1191">This enables you to pipeline simple-type values with minimal reparsing overhead when passing data between <xref:System.Xml.XPath.XPathDocument>, <xref:System.Xml.XmlReader>, and <xref:System.Xml.XmlWriter> objects.</span></span> <span data-ttu-id="f94a1-1192">この機能は、CLR の単純型を処理する場合にも役立ちますと<xref:System.Xml.XmlWriter>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1192">This ability is also useful when dealing with CLR simple-types and an <xref:System.Xml.XmlWriter> instance.</span></span> <span data-ttu-id="f94a1-1193">呼び出すことができます、<xref:System.Xml.XmlWriter.WriteValue%2A>内のメソッドを使用する代わりに型指定された値を書き込みます、<xref:System.Xml.XmlConvert>書き込む前に、文字列値に型指定されたデータを変換するクラス。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1193">You can call the <xref:System.Xml.XmlWriter.WriteValue%2A> method to write the typed value instead of using the methods in the <xref:System.Xml.XmlConvert> class to convert the typed data to a string value before writing it out.</span></span>  
  
 <span data-ttu-id="f94a1-1194">非同期の操作の戻り値を変換<xref:System.Xml.XmlWriter.WriteValue%2A>文字列を使用して、<xref:System.Xml.XmlWriter.WriteStringAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1194">For asynchronous operations, convert the return value of <xref:System.Xml.XmlWriter.WriteValue%2A> to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 <span data-ttu-id="f94a1-1195">次の表は、既定の CLR 型に対応する XSD データ型を示します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1195">The following table shows the default XSD data types that correspond to CLR types.</span></span>  
  
 <span data-ttu-id="f94a1-1196">CLR オブジェクトが <xref:System.Collections.IEnumerable>、<xref:System.Collections.IList>、<xref:System.Collections.ICollection> などのリスト型の場合は、値型の配列として扱われます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1196">If the CLR object is a list type, such as <xref:System.Collections.IEnumerable>, <xref:System.Collections.IList>, or <xref:System.Collections.ICollection>, it is treated as an array of the value type.</span></span>  
  
|<span data-ttu-id="f94a1-1197">CLR 型</span><span class="sxs-lookup"><span data-stu-id="f94a1-1197">CLR type</span></span>|<span data-ttu-id="f94a1-1198">既定の XSD データ型</span><span class="sxs-lookup"><span data-stu-id="f94a1-1198">Default XSD data type</span></span>|  
|--------------|---------------------------|  
|<xref:System.Boolean?displayProperty=nameWithType>|<span data-ttu-id="f94a1-1199">xsd:boolean</span><span class="sxs-lookup"><span data-stu-id="f94a1-1199">xsd:boolean</span></span>|  
|<xref:System.Byte?displayProperty=nameWithType>**|<span data-ttu-id="f94a1-1200">xsd:integer</span><span class="sxs-lookup"><span data-stu-id="f94a1-1200">xsd:integer</span></span>|  
|<span data-ttu-id="f94a1-1201"><xref:System.Byte?displayProperty=nameWithType> 配列</span><span class="sxs-lookup"><span data-stu-id="f94a1-1201"><xref:System.Byte?displayProperty=nameWithType> array</span></span>|<span data-ttu-id="f94a1-1202">xsd:base64Binary</span><span class="sxs-lookup"><span data-stu-id="f94a1-1202">xsd:base64Binary</span></span>|  
|<xref:System.Char?displayProperty=nameWithType>**|<span data-ttu-id="f94a1-1203">xsd:string</span><span class="sxs-lookup"><span data-stu-id="f94a1-1203">xsd:string</span></span>|  
|<xref:System.DateTime?displayProperty=nameWithType>|<span data-ttu-id="f94a1-1204">xsd:dateTime</span><span class="sxs-lookup"><span data-stu-id="f94a1-1204">xsd:dateTime</span></span>|  
|<xref:System.Decimal?displayProperty=nameWithType>|<span data-ttu-id="f94a1-1205">xsd:decimal</span><span class="sxs-lookup"><span data-stu-id="f94a1-1205">xsd:decimal</span></span>|  
|<xref:System.Double?displayProperty=nameWithType>|<span data-ttu-id="f94a1-1206">xsd:double</span><span class="sxs-lookup"><span data-stu-id="f94a1-1206">xsd:double</span></span>|  
|<xref:System.Int16?displayProperty=nameWithType>**|<span data-ttu-id="f94a1-1207">xsd:integer</span><span class="sxs-lookup"><span data-stu-id="f94a1-1207">xsd:integer</span></span>|  
|<xref:System.Int32?displayProperty=nameWithType>|<span data-ttu-id="f94a1-1208">xsd:integer</span><span class="sxs-lookup"><span data-stu-id="f94a1-1208">xsd:integer</span></span>|  
|<xref:System.Int64?displayProperty=nameWithType>|<span data-ttu-id="f94a1-1209">xsd:integer</span><span class="sxs-lookup"><span data-stu-id="f94a1-1209">xsd:integer</span></span>|  
|<xref:System.Single?displayProperty=nameWithType>|<span data-ttu-id="f94a1-1210">xsd:float</span><span class="sxs-lookup"><span data-stu-id="f94a1-1210">xsd:float</span></span>|  
|<xref:System.String?displayProperty=nameWithType>|<span data-ttu-id="f94a1-1211">xsd:string</span><span class="sxs-lookup"><span data-stu-id="f94a1-1211">xsd:string</span></span>|  
|<xref:System.IO.TextReader?displayProperty=nameWithType>|<span data-ttu-id="f94a1-1212">xsd:string</span><span class="sxs-lookup"><span data-stu-id="f94a1-1212">xsd:string</span></span>|  
|<xref:System.IO.BinaryReader?displayProperty=nameWithType>|<span data-ttu-id="f94a1-1213">xsd:base64Binary</span><span class="sxs-lookup"><span data-stu-id="f94a1-1213">xsd:base64Binary</span></span>|  
  
 <span data-ttu-id="f94a1-1214">** これらの型は CLS 準拠ではありません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1214">**These types are not CLS-compliant.</span></span> <span data-ttu-id="f94a1-1215">対応がない<xref:System.Xml.XmlWriter.WriteValue%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1215">They do not have corresponding <xref:System.Xml.XmlWriter.WriteValue%2A> methods.</span></span>  
  
 <span data-ttu-id="f94a1-1216"><xref:System.Xml.XmlWriter.WriteValue%2A> を複数回連続して呼び出す場合、値をスペースで区切りません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1216">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="f94a1-1217">スペースを挿入するには、複数回の <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 呼び出しの間に <xref:System.Xml.XmlWriter.WriteValue%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1217">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f94a1-1218">書き込む <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1218">The <see cref="T:System.Boolean" /> value to write.</span></span></param>
        <summary><span data-ttu-id="f94a1-1219"><see cref="T:System.Boolean" /> 値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1219">Writes a <see cref="T:System.Boolean" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1220">このメソッドは、共通言語ランタイム オブジェクトを受け取り、入力値を XML スキーマ定義言語 (XSD) データ型変換規則を使用して、目的の出力の型に変換します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1220">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="f94a1-1221"><xref:System.Xml.XmlWriter.WriteValue%2A> メソッドが呼び出されると、<xref:System.Xml.XmlWriter> が、XML スキーマ (XSD) のデータ型変換規則に従って値をその文字列表現に変換し、<xref:System.Xml.XmlWriter.WriteString%2A> メソッドを使用して書き出します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1221">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="f94a1-1222"><xref:System.Xml.XmlWriter.WriteValue%2A> を複数回連続して呼び出す場合、値をスペースで区切りません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1222">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="f94a1-1223">スペースを挿入するには、複数回の <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 呼び出しの間に <xref:System.Xml.XmlWriter.WriteValue%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1223">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="f94a1-1224">配列型を渡す、<xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType>のオーバー ロードを個別の値の配列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1224">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="f94a1-1225">このメソッドが呼び出された場合、<xref:System.Xml.XmlWriter>テキストのみ、型指定された値がテキストにシリアル化は、その出力をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1225">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="f94a1-1226">非同期操作は、このメソッドの戻り値を文字列に変換しを使用して、<xref:System.Xml.XmlWriter.WriteStringAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1226">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f94a1-1227">無効な値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1227">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1228">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1228">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1229">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1229">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(DateTime value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f94a1-1230">書き込む <see cref="T:System.DateTime" /> 値。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1230">The <see cref="T:System.DateTime" /> value to write.</span></span></param>
        <summary><span data-ttu-id="f94a1-1231"><see cref="T:System.DateTime" /> 値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1231">Writes a <see cref="T:System.DateTime" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1232">このメソッドは、共通言語ランタイム オブジェクトを受け取り、入力値を XML スキーマ定義言語 (XSD) データ型変換規則を使用して、目的の出力の型に変換します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1232">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="f94a1-1233"><xref:System.Xml.XmlWriter.WriteValue%2A> メソッドが呼び出されると、<xref:System.Xml.XmlWriter> が、XML スキーマ (XSD) のデータ型変換規則に従って値をその文字列表現に変換し、<xref:System.Xml.XmlWriter.WriteString%2A> メソッドを使用して書き出します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1233">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="f94a1-1234"><xref:System.Xml.XmlWriter.WriteValue%2A> を複数回連続して呼び出す場合、値をスペースで区切りません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1234">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="f94a1-1235">スペースを挿入するには、複数回の <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 呼び出しの間に <xref:System.Xml.XmlWriter.WriteValue%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1235">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="f94a1-1236">配列型を渡す、<xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType>のオーバー ロードを個別の値の配列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1236">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="f94a1-1237">このメソッドが呼び出された場合、<xref:System.Xml.XmlWriter>テキストのみ、型指定された値がテキストにシリアル化は、その出力をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1237">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="f94a1-1238">非同期操作は、このメソッドの戻り値を文字列に変換しを使用して、<xref:System.Xml.XmlWriter.WriteStringAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1238">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-1239">次の例では、型指定されたデータを使用して book ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1239">The following example writes a book node using typed data.</span></span>  
  
 [!code-csharp[XmlWriter_v2#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#1)]
 [!code-vb[XmlWriter_v2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f94a1-1240">無効な値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1240">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1241">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1241">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1242">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1242">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(DateTimeOffset value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f94a1-1243">書き込む <see cref="T:System.DateTimeOffset" /> 値。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1243">The <see cref="T:System.DateTimeOffset" /> value to write.</span></span></param>
        <summary><span data-ttu-id="f94a1-1244"><see cref="T:System.DateTimeOffset" /> 値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1244">Writes a <see cref="T:System.DateTimeOffset" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1245">非同期操作は、このメソッドの戻り値を文字列に変換しを使用して、<xref:System.Xml.XmlWriter.WriteStringAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1245">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1246">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1246">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1247">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1247">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f94a1-1248">書き込む <see cref="T:System.Decimal" /> 値。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1248">The <see cref="T:System.Decimal" /> value to write.</span></span></param>
        <summary><span data-ttu-id="f94a1-1249"><see cref="T:System.Decimal" /> 値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1249">Writes a <see cref="T:System.Decimal" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1250">このメソッドは、共通言語ランタイム オブジェクトを受け取り、入力値を XML スキーマ定義言語 (XSD) データ型変換規則を使用して、目的の出力の型に変換します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1250">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="f94a1-1251"><xref:System.Xml.XmlWriter.WriteValue%2A> メソッドが呼び出されると、<xref:System.Xml.XmlWriter> が、XML スキーマ (XSD) のデータ型変換規則に従って値をその文字列表現に変換し、<xref:System.Xml.XmlWriter.WriteString%2A> メソッドを使用して書き出します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1251">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="f94a1-1252"><xref:System.Xml.XmlWriter.WriteValue%2A> を複数回連続して呼び出す場合、値をスペースで区切りません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1252">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="f94a1-1253">スペースを挿入するには、複数回の <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 呼び出しの間に <xref:System.Xml.XmlWriter.WriteValue%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1253">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="f94a1-1254">配列型を渡す、<xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType>のオーバー ロードを個別の値の配列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1254">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="f94a1-1255">このメソッドが呼び出された場合、<xref:System.Xml.XmlWriter>テキストのみ、型指定された値がテキストにシリアル化は、その出力をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1255">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="f94a1-1256">非同期操作は、このメソッドの戻り値を文字列に変換しを使用して、<xref:System.Xml.XmlWriter.WriteStringAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1256">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f94a1-1257">無効な値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1257">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1258">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1258">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1259">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1259">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f94a1-1260">書き込む <see cref="T:System.Double" /> 値。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1260">The <see cref="T:System.Double" /> value to write.</span></span></param>
        <summary><span data-ttu-id="f94a1-1261"><see cref="T:System.Double" /> 値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1261">Writes a <see cref="T:System.Double" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1262">このメソッドは、共通言語ランタイム オブジェクトを受け取り、入力値を XML スキーマ定義言語 (XSD) データ型変換規則を使用して、目的の出力の型に変換します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1262">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="f94a1-1263"><xref:System.Xml.XmlWriter.WriteValue%2A> メソッドが呼び出されると、<xref:System.Xml.XmlWriter> が、XML スキーマ (XSD) のデータ型変換規則に従って値をその文字列表現に変換し、<xref:System.Xml.XmlWriter.WriteString%2A> メソッドを使用して書き出します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1263">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="f94a1-1264"><xref:System.Xml.XmlWriter.WriteValue%2A> を複数回連続して呼び出す場合、値をスペースで区切りません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1264">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="f94a1-1265">スペースを挿入するには、複数回の <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 呼び出しの間に <xref:System.Xml.XmlWriter.WriteValue%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1265">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="f94a1-1266">配列型を渡す、<xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType>のオーバー ロードを個別の値の配列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1266">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="f94a1-1267">このメソッドが呼び出された場合、<xref:System.Xml.XmlWriter>テキストのみ、型指定された値がテキストにシリアル化は、その出力をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1267">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="f94a1-1268">非同期操作は、このメソッドの戻り値を文字列に変換しを使用して、<xref:System.Xml.XmlWriter.WriteStringAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1268">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f94a1-1269">次の例では、型指定されたデータを使用して book ノードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1269">The following example writes a book node using typed data.</span></span>  
  
 [!code-csharp[XmlWriter_v2#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#1)]
 [!code-vb[XmlWriter_v2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f94a1-1270">無効な値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1270">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1271">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1271">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1272">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1272">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f94a1-1273">書き込む <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1273">The <see cref="T:System.Int32" /> value to write.</span></span></param>
        <summary><span data-ttu-id="f94a1-1274"><see cref="T:System.Int32" /> 値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1274">Writes a <see cref="T:System.Int32" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1275">このメソッドは、共通言語ランタイム オブジェクトを受け取り、入力値を XML スキーマ定義言語 (XSD) データ型変換規則を使用して、目的の出力の型に変換します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1275">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="f94a1-1276"><xref:System.Xml.XmlWriter.WriteValue%2A> メソッドが呼び出されると、<xref:System.Xml.XmlWriter> が、XML スキーマ (XSD) のデータ型変換規則に従って値をその文字列表現に変換し、<xref:System.Xml.XmlWriter.WriteString%2A> メソッドを使用して書き出します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1276">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="f94a1-1277"><xref:System.Xml.XmlWriter.WriteValue%2A> を複数回連続して呼び出す場合、値をスペースで区切りません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1277">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="f94a1-1278">スペースを挿入するには、複数回の <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 呼び出しの間に <xref:System.Xml.XmlWriter.WriteValue%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1278">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="f94a1-1279">配列型を渡す、<xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType>のオーバー ロードを個別の値の配列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1279">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="f94a1-1280">このメソッドが呼び出された場合、<xref:System.Xml.XmlWriter>テキストのみ、型指定された値がテキストにシリアル化は、その出力をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1280">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="f94a1-1281">非同期操作は、このメソッドの戻り値を文字列に変換しを使用して、<xref:System.Xml.XmlWriter.WriteStringAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1281">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f94a1-1282">無効な値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1282">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1283">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1283">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1284">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1284">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f94a1-1285">書き込む <see cref="T:System.Int64" /> 値。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1285">The <see cref="T:System.Int64" /> value to write.</span></span></param>
        <summary><span data-ttu-id="f94a1-1286"><see cref="T:System.Int64" /> 値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1286">Writes a <see cref="T:System.Int64" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1287">このメソッドは、共通言語ランタイム オブジェクトを受け取り、入力値を XML スキーマ定義言語 (XSD) データ型変換規則を使用して、目的の出力の型に変換します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1287">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="f94a1-1288"><xref:System.Xml.XmlWriter.WriteValue%2A> メソッドが呼び出されると、<xref:System.Xml.XmlWriter> が、XML スキーマ (XSD) のデータ型変換規則に従って値をその文字列表現に変換し、<xref:System.Xml.XmlWriter.WriteString%2A> メソッドを使用して書き出します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1288">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="f94a1-1289"><xref:System.Xml.XmlWriter.WriteValue%2A> を複数回連続して呼び出す場合、値をスペースで区切りません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1289">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="f94a1-1290">スペースを挿入するには、複数回の <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 呼び出しの間に <xref:System.Xml.XmlWriter.WriteValue%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1290">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="f94a1-1291">配列型を渡す、<xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType>のオーバー ロードを個別の値の配列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1291">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="f94a1-1292">このメソッドが呼び出された場合、<xref:System.Xml.XmlWriter>テキストのみ、型指定された値がテキストにシリアル化は、その出力をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1292">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="f94a1-1293">非同期操作は、このメソッドの戻り値を文字列に変換しを使用して、<xref:System.Xml.XmlWriter.WriteStringAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1293">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f94a1-1294">無効な値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1294">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1295">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1295">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1296">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1296">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f94a1-1297">書き込むオブジェクト値。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1297">The object value to write.</span></span>  
  
 <span data-ttu-id="f94a1-1298">**メモ** .NET Framework 3.5 のリリースでは、このメソッドは <see cref="T:System.DateTimeOffset" /> をパラメーターとして受け入れます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1298">**Note** With the release of the .NET Framework 3.5, this method accepts <see cref="T:System.DateTimeOffset" /> as a parameter.</span></span></param>
        <summary><span data-ttu-id="f94a1-1299">オブジェクト値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1299">Writes the object value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1300">このメソッドは、共通言語ランタイム (CLR) オブジェクトを受け取り、入力値を XML スキーマ定義言語 (XSD) データ型変換規則を使用して、目的の出力の型に変換します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1300">This method takes the common language runtime (CLR) object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="f94a1-1301">かどうか、CLR オブジェクトがリスト型など<xref:System.Collections.IEnumerable>、 <xref:System.Collections.IList>、または<xref:System.Collections.ICollection>値の型の配列として扱われます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1301">If the CLR object is a list type such as <xref:System.Collections.IEnumerable>, <xref:System.Collections.IList>, or <xref:System.Collections.ICollection>, it is treated as an array of the value type.</span></span> <span data-ttu-id="f94a1-1302"><xref:System.Xml.XmlWriter> XML スキーマ (XSD) データ型に従った場合は、その文字列形式に値の規則し、変換を使用して書き出します、<xref:System.Xml.XmlWriter.WriteString%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1302">The <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="f94a1-1303">このメソッドが呼び出された場合、<xref:System.Xml.XmlWriter>テキストのみ、型指定された値がテキストにシリアル化は、その出力をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1303">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="f94a1-1304">非同期操作は、このメソッドの戻り値を文字列に変換しを使用して、<xref:System.Xml.XmlWriter.WriteStringAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1304">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f94a1-1305">無効な値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1305">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f94a1-1306"><paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1306">The <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1307">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1307">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1308">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1308">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f94a1-1309">書き込む単精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1309">The single-precision floating-point number to write.</span></span></param>
        <summary><span data-ttu-id="f94a1-1310">単精度浮動小数点数を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1310">Writes a single-precision floating-point number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1311">このメソッドは、共通言語ランタイム オブジェクトを受け取り、入力値を XML スキーマ定義言語 (XSD) データ型変換規則を使用して、目的の出力の型に変換します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1311">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="f94a1-1312"><xref:System.Xml.XmlWriter.WriteValue%2A> メソッドが呼び出されると、<xref:System.Xml.XmlWriter> が、XML スキーマ (XSD) のデータ型変換規則に従って値をその文字列表現に変換し、<xref:System.Xml.XmlWriter.WriteString%2A> メソッドを使用して書き出します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1312">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="f94a1-1313"><xref:System.Xml.XmlWriter.WriteValue%2A> を複数回連続して呼び出す場合、値をスペースで区切りません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1313">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="f94a1-1314">スペースを挿入するには、複数回の <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 呼び出しの間に <xref:System.Xml.XmlWriter.WriteValue%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1314">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="f94a1-1315">配列型を渡す、<xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType>のオーバー ロードを個別の値の配列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1315">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="f94a1-1316">このメソッドが呼び出された場合、<xref:System.Xml.XmlWriter>テキストのみ、型指定された値がテキストにシリアル化は、その出力をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1316">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="f94a1-1317">非同期操作は、このメソッドの戻り値を文字列に変換しを使用して、<xref:System.Xml.XmlWriter.WriteStringAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1317">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f94a1-1318">無効な値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1318">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1319">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1319">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1320">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1320">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f94a1-1321">書き込む <see cref="T:System.String" /> 値。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1321">The <see cref="T:System.String" /> value to write.</span></span></param>
        <summary><span data-ttu-id="f94a1-1322"><see cref="T:System.String" /> 値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1322">Writes a <see cref="T:System.String" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1323">このメソッドは、共通言語ランタイム オブジェクトを受け取り、入力値を XML スキーマ定義言語 (XSD) データ型変換規則を使用して、目的の出力の型に変換します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1323">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="f94a1-1324"><xref:System.Xml.XmlWriter.WriteValue%2A> を複数回連続して呼び出す場合、値をスペースで区切りません。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1324">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="f94a1-1325">スペースを挿入するには、複数回の <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 呼び出しの間に <xref:System.Xml.XmlWriter.WriteValue%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1325">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="f94a1-1326">配列型を渡す、<xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType>のオーバー ロードを個別の値の配列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1326">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="f94a1-1327">このメソッドが呼び出された場合、<xref:System.Xml.XmlWriter>テキストのみ、型指定された値がテキストにシリアル化は、その出力をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1327">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="f94a1-1328">また、非同期操作を使用して、<xref:System.Xml.XmlWriter.WriteStringAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1328">For asynchronous operations, use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f94a1-1329">無効な値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1329">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1330">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1330">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1331">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1331">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespace">
      <MemberSignature Language="C#" Value="public abstract void WriteWhitespace (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteWhitespace(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteWhitespace (ws As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteWhitespace(System::String ^ ws);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws"><span data-ttu-id="f94a1-1332">空白文字の文字列。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1332">The string of white space characters.</span></span></param>
        <summary><span data-ttu-id="f94a1-1333">派生クラスでオーバーライドされると、指定した空白を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1333">When overridden in a derived class, writes out the given white space.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1334">このメソッドは、ドキュメントを手動で書式設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1334">This method is used to manually format your document.</span></span>  
  
 <span data-ttu-id="f94a1-1335">このメソッドの非同期バージョンは、<xref:System.Xml.XmlWriter.WriteWhitespaceAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1335">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteWhitespaceAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f94a1-1336">文字列に空白以外の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1336">The string contains non-white space characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1337">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1337">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1338">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1338">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespaceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteWhitespaceAsync (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteWhitespaceAsync(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteWhitespaceAsync (ws As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteWhitespaceAsync(System::String ^ ws);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws"><span data-ttu-id="f94a1-1339">空白文字の文字列。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1339">The string of white space characters.</span></span></param>
        <summary><span data-ttu-id="f94a1-1340">指定した空白を非同期に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1340">Asynchronously writes out the given white space.</span></span></summary>
        <returns><span data-ttu-id="f94a1-1341">非同期の <see langword="WriteWhitespace" /> 操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1341">The task that represents the asynchronous <see langword="WriteWhitespace" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1342">これは、非同期バージョンの<xref:System.Xml.XmlWriter.WriteWhitespace%2A>、同じ機能を使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1342">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteWhitespace%2A>, with the same functionality.</span></span> <span data-ttu-id="f94a1-1343">このメソッドを使用するに設定する必要があります、<xref:System.Xml.XmlWriterSettings.Async%2A>フラグを`true`です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1343">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1344"><see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlWriter" /> 非同期メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1344">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="f94a1-1345">この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1345">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public virtual string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f94a1-1346">派生クラスでオーバーライドされると、現在の <see langword="xml:lang" /> スコープを取得します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1346">When overridden in a derived class, gets the current <see langword="xml:lang" /> scope.</span></span></summary>
        <value><span data-ttu-id="f94a1-1347">現在の <see langword="xml:lang" /> スコープ。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1347">The current <see langword="xml:lang" /> scope.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1348">このプロパティは、別のコンポーネントがライターの状態を確認する 1 つのコンポーネントを使用します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1348">This property allows one component to find out in what state another component has left the writer.</span></span> <span data-ttu-id="f94a1-1349">たとえば、おそらく 1 つのコンポーネントが別にヘルプ テキストを生成する言語を通知します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1349">For example, perhaps one component wants to tell another which language help text to generate.</span></span> <span data-ttu-id="f94a1-1350">言語情報が書き込むことによって伝え、`xml:lang`属性。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1350">The language information is communicated by writing an `xml:lang` attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1351">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1351">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1352">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1352">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f94a1-1353">派生クラスでオーバーライドされると、現在の <see langword="xml:space" /> スコープを表す <see cref="T:System.Xml.XmlSpace" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1353">When overridden in a derived class, gets an <see cref="T:System.Xml.XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span></summary>
        <value><span data-ttu-id="f94a1-1354">現在の <see langword="XmlSpace" /> スコープを表す <see langword="xml:space" />。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1354">An <see langword="XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span>  
  
 <span data-ttu-id="f94a1-1355"><list type="table"><listheader><term> 値</span><span class="sxs-lookup"><span data-stu-id="f94a1-1355"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="f94a1-1356"></term><description> 意味</span><span class="sxs-lookup"><span data-stu-id="f94a1-1356"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="f94a1-1357"></description></listheader><item><term><see langword="None" /></term><description> これがない場合の既定<see langword="xml:space" />スコープが存在します。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1357"></description></listheader><item><term><see langword="None" /></term><description> This is the default if no <see langword="xml:space" /> scope exists.</span></span>  
  
 <span data-ttu-id="f94a1-1358"></description></item><item><term><see langword="Default" /></term><description> 現在のスコープは<see langword="xml:space" />"default"を = です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1358"></description></item><item><term><see langword="Default" /></term><description> The current scope is <see langword="xml:space" />="default".</span></span>  
  
 <span data-ttu-id="f94a1-1359"></description></item><item><term><see langword="Preserve" /></term><description> 現在のスコープは<see langword="xml:space" />="preserve"です。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1359"></description></item><item><term><see langword="Preserve" /></term><description> The current scope is <see langword="xml:space" />="preserve".</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f94a1-1360">これにより、1 つのコンポーネントがどの状態を別のコンポーネントがライターに設定を確認できます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1360">This allows one component to find out what state another component has left the writer in.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f94a1-1361">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1361">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="f94a1-1362">この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f94a1-1362">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>