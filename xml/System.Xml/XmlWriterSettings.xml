<Type Name="XmlWriterSettings" FullName="System.Xml.XmlWriterSettings">
  <TypeSignature Language="C#" Value="public sealed class XmlWriterSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlWriterSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlWriterSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlWriterSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriterSettings sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1374a-101"><see cref="T:System.Xml.XmlWriter" /> メソッドで作成された <see cref="Overload:System.Xml.XmlWriter.Create" /> オブジェクトでサポートする一連の機能を指定します。</span><span class="sxs-lookup"><span data-stu-id="1374a-101">Specifies a set of features to support on the <see cref="T:System.Xml.XmlWriter" /> object created by the <see cref="Overload:System.Xml.XmlWriter.Create" /> method.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1374a-102"><xref:System.Xml.XmlWriter.Create%2A>メソッドを取得するための推奨メカニズムは、<xref:System.Xml.XmlWriter>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="1374a-102">The <xref:System.Xml.XmlWriter.Create%2A> method is the preferred mechanism for obtaining <xref:System.Xml.XmlWriter> instances.</span></span> <span data-ttu-id="1374a-103"><xref:System.Xml.XmlWriter.Create%2A>メソッドを使用、<xref:System.Xml.XmlWriterSettings>クラスで実装する機能を指定する、<xref:System.Xml.XmlWriter>作成されるオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="1374a-103">The <xref:System.Xml.XmlWriter.Create%2A> method uses the <xref:System.Xml.XmlWriterSettings> class to specify which features to implement in the <xref:System.Xml.XmlWriter> object that is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1374a-104">使用する場合、<xref:System.Xml.XmlWriter>オブジェクトを<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>メソッドを使用してください、<xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A>を取得するプロパティ、<xref:System.Xml.XmlWriterSettings>正しい設定を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1374a-104">If you're using the <xref:System.Xml.XmlWriter> object with the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method, you should use the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> property to obtain an <xref:System.Xml.XmlWriterSettings> object with the correct settings.</span></span> <span data-ttu-id="1374a-105">これにより、作成された <xref:System.Xml.XmlWriter> オブジェクトに正しい出力設定が適用されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-105">This ensures that the created <xref:System.Xml.XmlWriter> object has the correct output settings.</span></span>  
  
 <span data-ttu-id="1374a-106"><xref:System.Xml.XmlWriterSettings>クラスはそのコントロールのデータへの準拠と出力形式のプロパティを提供します。</span><span class="sxs-lookup"><span data-stu-id="1374a-106">The <xref:System.Xml.XmlWriterSettings> class provides properties that control data conformance and output format.</span></span>  
  
 <span data-ttu-id="1374a-107">データの一致チェックと自動修正では、これらのプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="1374a-107">For data conformance checks and auto-corrections, use these properties:</span></span>  
  
|<span data-ttu-id="1374a-108">プロパティ</span><span class="sxs-lookup"><span data-stu-id="1374a-108">Property</span></span>|<span data-ttu-id="1374a-109">指定内容</span><span class="sxs-lookup"><span data-stu-id="1374a-109">Specifies</span></span>|<span data-ttu-id="1374a-110">[値]</span><span class="sxs-lookup"><span data-stu-id="1374a-110">Value</span></span>|<span data-ttu-id="1374a-111">既定値</span><span class="sxs-lookup"><span data-stu-id="1374a-111">Default</span></span>|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|<span data-ttu-id="1374a-112">セットは、W3C で定義されている文字が有効な XML のことを確認するかどうか文字です。</span><span class="sxs-lookup"><span data-stu-id="1374a-112">Whether to check that characters are in the legal XML character set, as defined by W3C.</span></span>|<span data-ttu-id="1374a-113">`true` または `false`</span><span class="sxs-lookup"><span data-stu-id="1374a-113">`true` or `false`</span></span>|`true`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<span data-ttu-id="1374a-114">出力が整形式 XML 1.0 ドキュメントやフラグメントことを確認するかどうか。</span><span class="sxs-lookup"><span data-stu-id="1374a-114">Whether to check that output is a well-formed XML 1.0 document or fragment.</span></span>|<span data-ttu-id="1374a-115"><xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (ドキュメント レベルの)、 <xref:System.Xml.ConformanceLevel.Fragment> (フラグメント レベル)、または<xref:System.Xml.ConformanceLevel.Auto>(自動検出)</span><span class="sxs-lookup"><span data-stu-id="1374a-115"><xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (document-level), <xref:System.Xml.ConformanceLevel.Fragment> (fragment-level), or <xref:System.Xml.ConformanceLevel.Auto> (auto-detection)</span></span>|<span data-ttu-id="1374a-116"><xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (ドキュメント レベルの一致)</span><span class="sxs-lookup"><span data-stu-id="1374a-116"><xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (document-level conformance)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|<span data-ttu-id="1374a-117">閉じられていないすべての要素に終了タグを追加するかどうかと、<xref:System.Xml.XmlWriter.Close%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-117">Whether to add closing tags to all unclosed elements when the <xref:System.Xml.XmlWriter.Close%2A> method is called.</span></span>|<span data-ttu-id="1374a-118">`true` または `false`</span><span class="sxs-lookup"><span data-stu-id="1374a-118">`true` or `false`</span></span>|`true`|  
  
 <span data-ttu-id="1374a-119">出力の書式設定を指定するには、これらのプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="1374a-119">To specify output format, use these properties:</span></span>  
  
|<span data-ttu-id="1374a-120">プロパティ</span><span class="sxs-lookup"><span data-stu-id="1374a-120">Property</span></span>|<span data-ttu-id="1374a-121">指定内容</span><span class="sxs-lookup"><span data-stu-id="1374a-121">Specifies</span></span>|<span data-ttu-id="1374a-122">[値]</span><span class="sxs-lookup"><span data-stu-id="1374a-122">Value</span></span>|<span data-ttu-id="1374a-123">既定値</span><span class="sxs-lookup"><span data-stu-id="1374a-123">Default</span></span>|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<span data-ttu-id="1374a-124">使用するテキスト エンコーディングします。</span><span class="sxs-lookup"><span data-stu-id="1374a-124">Text encoding to use.</span></span>|<span data-ttu-id="1374a-125"><xref:System.Text.Encoding?displayProperty=nameWithType> の値</span><span class="sxs-lookup"><span data-stu-id="1374a-125"><xref:System.Text.Encoding?displayProperty=nameWithType> value</span></span>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|<span data-ttu-id="1374a-126">要素をインデントするかどうか</span><span class="sxs-lookup"><span data-stu-id="1374a-126">Whether to indent elements</span></span>|<span data-ttu-id="1374a-127">`true` または `false`</span><span class="sxs-lookup"><span data-stu-id="1374a-127">`true` or `false`</span></span>|<span data-ttu-id="1374a-128">`false` (インデントなし)</span><span class="sxs-lookup"><span data-stu-id="1374a-128">`false` (no indentation)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="1374a-129">インデントするときに使用する文字列の文字 (ときに使用<xref:System.Xml.XmlWriterSettings.Indent%2A>に設定されている`true`)。</span><span class="sxs-lookup"><span data-stu-id="1374a-129">Character string to use when indenting (used when <xref:System.Xml.XmlWriterSettings.Indent%2A> is set to `true`).</span></span>|<span data-ttu-id="1374a-130">String</span><span class="sxs-lookup"><span data-stu-id="1374a-130">String</span></span>|<span data-ttu-id="1374a-131">2 つのスペース</span><span class="sxs-lookup"><span data-stu-id="1374a-131">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="1374a-132">改行に使用する文字列。</span><span class="sxs-lookup"><span data-stu-id="1374a-132">Character string to use for line breaks.</span></span>|<span data-ttu-id="1374a-133">String</span><span class="sxs-lookup"><span data-stu-id="1374a-133">String</span></span>|<span data-ttu-id="1374a-134">`\r\n` (キャリッジ リターン、ライン フィード)</span><span class="sxs-lookup"><span data-stu-id="1374a-134">`\r\n` (carriage return, line feed)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<span data-ttu-id="1374a-135">改行文字を処理する方法です。</span><span class="sxs-lookup"><span data-stu-id="1374a-135">How to handle newline characters.</span></span>|<span data-ttu-id="1374a-136"><xref:System.Xml.NewLineHandling?displayProperty=nameWithType> 値: <xref:System.Xml.NewLineHandling.Entitize> (正規化)、 <xref:System.Xml.NewLineHandling.Replace> (置換)、または<xref:System.Xml.NewLineHandling.None>(変更なしのままになっている)</span><span class="sxs-lookup"><span data-stu-id="1374a-136"><xref:System.Xml.NewLineHandling?displayProperty=nameWithType> value: <xref:System.Xml.NewLineHandling.Entitize> (normalize), <xref:System.Xml.NewLineHandling.Replace> (replace), or <xref:System.Xml.NewLineHandling.None> (leave unchanged)</span></span>|<span data-ttu-id="1374a-137"><xref:System.Xml.NewLineHandling.Replace> (で指定された文字に置き換える<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>)</span><span class="sxs-lookup"><span data-stu-id="1374a-137"><xref:System.Xml.NewLineHandling.Replace> (replace with characters specified by <xref:System.Xml.XmlWriterSettings.NewLineChars%2A>)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|<span data-ttu-id="1374a-138">個々 の行に属性を書き込むかどうか (持たないされるときに有効<xref:System.Xml.XmlWriterSettings.Indent%2A>は`false`)。</span><span class="sxs-lookup"><span data-stu-id="1374a-138">Whether to write attributes on individual lines (has no effect when <xref:System.Xml.XmlWriterSettings.Indent%2A> is `false`).</span></span>|<span data-ttu-id="1374a-139">`true` または `false`</span><span class="sxs-lookup"><span data-stu-id="1374a-139">`true` or `false`</span></span>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|<span data-ttu-id="1374a-140">XML 宣言を書き込むかどうか。</span><span class="sxs-lookup"><span data-stu-id="1374a-140">Whether to write an XML declaration.</span></span>|<span data-ttu-id="1374a-141">`true` または `false`</span><span class="sxs-lookup"><span data-stu-id="1374a-141">`true` or `false`</span></span>|`false`|  
  
   
  
## Examples  
 <span data-ttu-id="1374a-142">次の例を作成、<xref:System.Xml.XmlWriter>を XML ファイルに書き込み、新しい行に各属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1374a-142">The following example creates an <xref:System.Xml.XmlWriter> that writes to an XML file and writes each attribute on a new line.</span></span>  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 <span data-ttu-id="1374a-143">このサンプルでは、次の出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-143">The sample produces the following output:</span></span>  
  
```xml  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1374a-144"><see cref="T:System.Xml.XmlWriterSettings" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1374a-144">Initializes a new instance of the <see cref="T:System.Xml.XmlWriterSettings" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1374a-145">次の表は、のインスタンスの初期プロパティ値を示しています。<xref:System.Xml.XmlWriterSettings>です。</span><span class="sxs-lookup"><span data-stu-id="1374a-145">The following table shows initial property values for an instance of <xref:System.Xml.XmlWriterSettings>.</span></span>  
  
|<span data-ttu-id="1374a-146">プロパティ</span><span class="sxs-lookup"><span data-stu-id="1374a-146">Property</span></span>|<span data-ttu-id="1374a-147">初期値</span><span class="sxs-lookup"><span data-stu-id="1374a-147">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|<span data-ttu-id="1374a-148">`false`。</span><span class="sxs-lookup"><span data-stu-id="1374a-148">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|<span data-ttu-id="1374a-149">`true`。</span><span class="sxs-lookup"><span data-stu-id="1374a-149">`true`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|<span data-ttu-id="1374a-150">`false`。</span><span class="sxs-lookup"><span data-stu-id="1374a-150">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<span data-ttu-id="1374a-151"><xref:System.Xml.ConformanceLevel.Document>。</span><span class="sxs-lookup"><span data-stu-id="1374a-151"><xref:System.Xml.ConformanceLevel.Document>.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<span data-ttu-id="1374a-152">`Encoding.UTF8`。</span><span class="sxs-lookup"><span data-stu-id="1374a-152">`Encoding.UTF8`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|<span data-ttu-id="1374a-153">`false`。</span><span class="sxs-lookup"><span data-stu-id="1374a-153">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="1374a-154">2 つのスペースです。</span><span class="sxs-lookup"><span data-stu-id="1374a-154">Two spaces.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="1374a-155">`\r\n` (キャリッジ リターン、改行)。</span><span class="sxs-lookup"><span data-stu-id="1374a-155">`\r\n` (carriage return, new line).</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<span data-ttu-id="1374a-156"><xref:System.Xml.NewLineHandling.Replace>。</span><span class="sxs-lookup"><span data-stu-id="1374a-156"><xref:System.Xml.NewLineHandling.Replace>.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|<span data-ttu-id="1374a-157">`false`。</span><span class="sxs-lookup"><span data-stu-id="1374a-157">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|<span data-ttu-id="1374a-158">`false`。</span><span class="sxs-lookup"><span data-stu-id="1374a-158">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|<span data-ttu-id="1374a-159">`true`。</span><span class="sxs-lookup"><span data-stu-id="1374a-159">`true`.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1374a-160">次の例を作成、<xref:System.Xml.XmlWriter>インデントのタブ文字を使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1374a-160">The following example creates an <xref:System.Xml.XmlWriter> object that uses the TAB character for indentation.</span></span>  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Async">
      <MemberSignature Language="C#" Value="public bool Async { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Async" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Async" />
      <MemberSignature Language="VB.NET" Value="Public Property Async As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Async { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1374a-161">非同期 <see cref="T:System.Xml.XmlWriter" /> メソッドを <see cref="T:System.Xml.XmlWriter" /> の特定のインスタンスで使用できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1374a-161">Gets or sets a value that indicates whether asynchronous <see cref="T:System.Xml.XmlWriter" /> methods can be used on a particular <see cref="T:System.Xml.XmlWriter" /> instance.</span></span></summary>
        <value>
          <span data-ttu-id="1374a-162">非同期メソッドを使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1374a-162"><see langword="true" /> if asynchronous methods can be used; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1374a-163">この値を設定する必要があります`true`新規に作成するときに<xref:System.Xml.XmlWriter>非同期を使用する場合をインスタンス化<xref:System.Xml.XmlWriter>そのインスタンス上のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="1374a-163">You must set this value to `true` when you create a new <xref:System.Xml.XmlWriter> instance if you want to use asynchronous <xref:System.Xml.XmlWriter> methods on that instance.</span></span> <span data-ttu-id="1374a-164">後に、<xref:System.Xml.XmlWriter>インスタンスが作成される、<xref:System.Xml.XmlWriterSettings.Async%2A>プロパティは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="1374a-164">After the <xref:System.Xml.XmlWriter> instance is created, the <xref:System.Xml.XmlWriterSettings.Async%2A> property is read-only.</span></span> <span data-ttu-id="1374a-165">このプロパティの既定値は `false` です。</span><span class="sxs-lookup"><span data-stu-id="1374a-165">The default value of this property is `false`.</span></span>  
  
 <span data-ttu-id="1374a-166">このフラグは無視されます、<xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="1374a-166">This flag is ignored by the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> overload.</span></span> <span data-ttu-id="1374a-167">つまり、新規に作成する場合<xref:System.Xml.XmlWriter>既存に基づいて<xref:System.Xml.XmlWriter>、非同期動作は、入力に依存<xref:System.Xml.XmlWriter>、使用することはできませんし、<xref:System.Xml.XmlWriterSettings.Async%2A>非同期動作を変更するフラグ。</span><span class="sxs-lookup"><span data-stu-id="1374a-167">This means that if you create a new <xref:System.Xml.XmlWriter> based on an existing <xref:System.Xml.XmlWriter>, the async behavior depends on the input <xref:System.Xml.XmlWriter>, and you cannot use the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to change the async behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCharacters">
      <MemberSignature Language="C#" Value="public bool CheckCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CheckCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCharacters { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1374a-168">ドキュメント内のすべての文字が W3C の「[XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml/#charsets)」(XML 1.0 勧告) の「2.2 Characters」(2.2 文字) に準拠していることを XML ライターがチェックする必要があるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1374a-168">Gets or sets a value that indicates whether the XML writer should check to ensure that all characters in the document conform to the "2.2 Characters" section of the W3C [XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml/#charsets).</span></span></summary>
        <value>
          <span data-ttu-id="1374a-169">文字をチェックする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1374a-169"><see langword="true" /> to do character checking; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1374a-170">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="1374a-170">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1374a-171">場合、<xref:System.Xml.XmlWriter>オブジェクトは、文字のチェックをサポートしている、任意の文字が、W3C の「2.2 文字」セクションで指定された有効な XML 文字の範囲外にある場合、例外をスロー [XML 1.0 勧告](https://www.w3.org/TR/REC-xml/#charsets)です。</span><span class="sxs-lookup"><span data-stu-id="1374a-171">If the <xref:System.Xml.XmlWriter> object supports character checking, it throws an exception if any characters are outside the range of legal XML characters specified by the "2.2 Characters" section of the W3C [XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml/#charsets).</span></span>  
  
 <span data-ttu-id="1374a-172">文字チェックは、XML 名に無効な文字に関するチェックまたはすべての XML 名が有効であるかをチェックは含まれません。</span><span class="sxs-lookup"><span data-stu-id="1374a-172">Character checking does not include checking for illegal characters in XML names or checking that all XML names are valid.</span></span> <span data-ttu-id="1374a-173">これらのチェックは、一致チェックの一部であるし、常に実行します。</span><span class="sxs-lookup"><span data-stu-id="1374a-173">These checks are part of conformance checking and are always performed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Xml.XmlWriterSettings Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlWriterSettings Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlWriterSettings ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1374a-174"><see cref="T:System.Xml.XmlWriterSettings" /> インスタンスのコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="1374a-174">Creates a copy of the <see cref="T:System.Xml.XmlWriterSettings" /> instance.</span></span></summary>
        <returns><span data-ttu-id="1374a-175">複製された <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1374a-175">The cloned <see cref="T:System.Xml.XmlWriterSettings" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1374a-176">複製された<xref:System.Xml.XmlWriterSettings>オブジェクトを元のオブジェクトの設定の影響を与えずに変更できます。</span><span class="sxs-lookup"><span data-stu-id="1374a-176">The cloned <xref:System.Xml.XmlWriterSettings> object can be modified without affecting the settings on the original object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseOutput">
      <MemberSignature Language="C#" Value="public bool CloseOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CloseOutput" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CloseOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseOutput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CloseOutput { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1374a-177"><see cref="T:System.Xml.XmlWriter" /> メソッドを呼び出したときに、<see cref="T:System.IO.TextWriter" /> が、基になるストリームまたは <see cref="M:System.Xml.XmlWriter.Close" /> も閉じる必要があるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1374a-177">Gets or sets a value indicating whether the <see cref="T:System.Xml.XmlWriter" /> should also close the underlying stream or <see cref="T:System.IO.TextWriter" /> when the <see cref="M:System.Xml.XmlWriter.Close" /> method is called.</span></span></summary>
        <value>
          <span data-ttu-id="1374a-178">基になるストリームまたは <see cref="T:System.IO.TextWriter" /> も閉じる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1374a-178"><see langword="true" /> to also close the underlying stream or <see cref="T:System.IO.TextWriter" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1374a-179">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="1374a-179">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1374a-180">この設定は、XML ストリームに書き込む、し、後にストリームの末尾に余分な情報を追加するときに便利です、<xref:System.Xml.XmlWriter>書き込みが完了します。</span><span class="sxs-lookup"><span data-stu-id="1374a-180">This setting is useful when you wish to write XML to a stream, and then add extra information to the end of the stream after the <xref:System.Xml.XmlWriter> has finished writing.</span></span>  
  
 <span data-ttu-id="1374a-181">このプロパティにのみ適用されます<xref:System.Xml.XmlWriter>をストリームに XML を出力インスタンスのコンテンツまたは<xref:System.IO.TextWriter>以外の場合、この設定は無視されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-181">This property only applies to <xref:System.Xml.XmlWriter> instances that output XML content to a stream or <xref:System.IO.TextWriter>; otherwise, this setting is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1374a-182">次の例は、XML フラグメントをメモリ ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1374a-182">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConformanceLevel">
      <MemberSignature Language="C#" Value="public System.Xml.ConformanceLevel ConformanceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ConformanceLevel ConformanceLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.ConformanceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ConformanceLevel As ConformanceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ConformanceLevel ConformanceLevel { System::Xml::ConformanceLevel get(); void set(System::Xml::ConformanceLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ConformanceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1374a-183">XML ライターが XML 出力をチェックする準拠のレベルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1374a-183">Gets or sets the level of conformance that the XML writer checks the XML output for.</span></span></summary>
        <value><span data-ttu-id="1374a-184">準拠のレベル (ドキュメント、フラグメント、自動検出) を指定する列挙値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="1374a-184">One of the enumeration values that specifies the level of conformance (document, fragment, or automatic detection).</span></span> <span data-ttu-id="1374a-185">既定値は、<see cref="F:System.Xml.ConformanceLevel.Document" /> です。</span><span class="sxs-lookup"><span data-stu-id="1374a-185">The default is <see cref="F:System.Xml.ConformanceLevel.Document" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1374a-186"><xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType>プロパティを確認して、書き込まれるストリームが一連の規則に準拠していることを保証する XML ライターを構成します。</span><span class="sxs-lookup"><span data-stu-id="1374a-186">The <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> property configures the XML writer to check and guarantee that the stream being written complies with a certain set of rules.</span></span> <span data-ttu-id="1374a-187">XML データは、整形式 XML 1.0 のドキュメントまたはドキュメント フラグメントの規則に準拠していることを確認することができます。</span><span class="sxs-lookup"><span data-stu-id="1374a-187">The XML data can be checked to see that it conforms to the rules for a well-formed XML 1.0 document or a document fragment.</span></span> <span data-ttu-id="1374a-188">次の表では、3 つの設定について説明します。</span><span class="sxs-lookup"><span data-stu-id="1374a-188">The following table describes the three settings.</span></span> <span data-ttu-id="1374a-189">既定ではドキュメント レベルの一致です。</span><span class="sxs-lookup"><span data-stu-id="1374a-189">The default is document-level conformance.</span></span>  
  
|<span data-ttu-id="1374a-190">設定</span><span class="sxs-lookup"><span data-stu-id="1374a-190">Setting</span></span>|<span data-ttu-id="1374a-191">説明</span><span class="sxs-lookup"><span data-stu-id="1374a-191">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.Xml.ConformanceLevel.Document>|<span data-ttu-id="1374a-192">XML 出力が準拠していることを確認、[整形式 XML 1.0 ドキュメント用のルール](https://www.w3.org/TR/REC-xml/#sec-well-formed)準拠のいずれかのプロセッサで処理できるとします。</span><span class="sxs-lookup"><span data-stu-id="1374a-192">Ensures that the XML output conforms to the [rules for a well-formed XML 1.0 document](https://www.w3.org/TR/REC-xml/#sec-well-formed) and can be processed by any conforming processor.</span></span><br /><br /> <span data-ttu-id="1374a-193">ドキュメントの一致チェックは、フラグメント レベルのチェックのほとんどを含めるし、また、次のことを確認します。</span><span class="sxs-lookup"><span data-stu-id="1374a-193">The document conformance checks include most of the fragment-level checks and also ensure the following:</span></span><br /><br /> <span data-ttu-id="1374a-194">最上位の項目は、XML 宣言、DTD、要素、コメント、空白文字、または処理命令以外のノードにありません。</span><span class="sxs-lookup"><span data-stu-id="1374a-194">-   The top-level item doesn't have any nodes other than XML Declaration, DTD, element, comment, white space, or processing instruction.</span></span><br /><span data-ttu-id="1374a-195">XML データには、1 つだけの最上位の要素ノードがあります。</span><span class="sxs-lookup"><span data-stu-id="1374a-195">-   The XML data has one and only one top-level element node.</span></span><br /><br /> <span data-ttu-id="1374a-196">XML ライターは、書き込まれる DTD 情報を解析しません。</span><span class="sxs-lookup"><span data-stu-id="1374a-196">The XML writer doesn't parse DTD information that is written.</span></span> <span data-ttu-id="1374a-197">ユーザーが、DTD が整形式であることを保証します。</span><span class="sxs-lookup"><span data-stu-id="1374a-197">The user is responsible for ensuring that the DTD is well-formed.</span></span>|  
|<xref:System.Xml.ConformanceLevel.Fragment>|<span data-ttu-id="1374a-198">XML 出力が準拠していることを確認、[整形式 XML 1.0 ドキュメント フラグメントのルール](https://www.w3.org/TR/REC-xml/#wf-entities)です。</span><span class="sxs-lookup"><span data-stu-id="1374a-198">Ensures that the XML output conforms to the [rules for a well-formed XML 1.0 document fragment](https://www.w3.org/TR/REC-xml/#wf-entities).</span></span><br /><br /> <span data-ttu-id="1374a-199">この設定は、最上位レベルの複数のルート要素またはテキスト ノードを持つ XML データを受け入れます。</span><span class="sxs-lookup"><span data-stu-id="1374a-199">This setting accepts XML data that has multiple root elements or text nodes at the top level.</span></span> <span data-ttu-id="1374a-200">このレベルのチェックでは、すべてのプロセッサで、読み込むストリームが XML 1.0 の外部解析対象エンティティとして処理できることが保証されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-200">This level of checking ensures that any processor can consume the stream being read as an XML 1.0 external parsed entity.</span></span><br /><br /> <span data-ttu-id="1374a-201">ドキュメント フラグメントで DTD 情報は許可されません。</span><span class="sxs-lookup"><span data-stu-id="1374a-201">DTD information isn't allowed in document fragments.</span></span>|  
|<xref:System.Xml.ConformanceLevel.Auto>|<span data-ttu-id="1374a-202">XML ライターでの一致チェックが、受信データに基づくレベルかを調べることを指定します。</span><span class="sxs-lookup"><span data-stu-id="1374a-202">Specifies that the XML writer should determine the level of conformance checking based on the incoming data.</span></span> <span data-ttu-id="1374a-203">この設定は、生成された XML は整形式 XML ドキュメントまたはフラグメントになるかどうかがわからない場合に役に立ちます。</span><span class="sxs-lookup"><span data-stu-id="1374a-203">This setting can be useful when you don't know whether the generated XML will be a well-formed XML document or a fragment.</span></span><br /><br /> <span data-ttu-id="1374a-204">ドキュメントの一致チェックは、次の場合に適用されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-204">Document conformance checking is applied in the following cases:</span></span><br /><br /> <span data-ttu-id="1374a-205">場合、<xref:System.Xml.XmlWriter.WriteStartDocument%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-205">-   If the <xref:System.Xml.XmlWriter.WriteStartDocument%2A> method is called.</span></span><br /><span data-ttu-id="1374a-206">場合、DTD 情報が書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="1374a-206">-   If DTD information is written.</span></span><br /><br /> <span data-ttu-id="1374a-207">フラグメント一致チェックは、XML データには、次のいずれかが含まれている場合に適用されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-207">Fragment conformance checking is applied if the XML data contains one of these:</span></span><br /><br /> <span data-ttu-id="1374a-208">ルート レベルでのテキスト、CDATA、または EntityReference ノード。</span><span class="sxs-lookup"><span data-stu-id="1374a-208">-   Text, CDATA, or EntityReference node at the root level.</span></span><br /><span data-ttu-id="1374a-209">のルート レベルで複数の要素。</span><span class="sxs-lookup"><span data-stu-id="1374a-209">-   More than one element at the root level.</span></span><br /><span data-ttu-id="1374a-210">でルート レベルの要素がないです。</span><span class="sxs-lookup"><span data-stu-id="1374a-210">-   No element at the root level.</span></span><br /><br /> <span data-ttu-id="1374a-211">テキスト ノードを書き出そうとしてルート レベルに DTD があるなどの矛盾がある場合には <xref:System.Xml.XmlException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-211">An <xref:System.Xml.XmlException> is thrown if there is a conflict, such as when you try to write a text node and a DTD at the root level.</span></span><br /><br /> <span data-ttu-id="1374a-212">別、ラップする場合<xref:System.Xml.XmlWriter>オブジェクト、外部のオブジェクトが、追加の適合性チェックを行わないです。 これは、左から基になるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1374a-212">If you are wrapping another <xref:System.Xml.XmlWriter> object, the outer object doesn't do any additional conformance checking; this is left to the underlying object.</span></span>|  
  
 <span data-ttu-id="1374a-213">XML ライターには、準拠の指定したレベルに違反するすべての情報が検出され、例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="1374a-213">If the XML writer detects any information that would violate the specified level of conformance, it throws an exception.</span></span> <span data-ttu-id="1374a-214">場合によっては、XML ライターは、準拠エラーを自動的に修正されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-214">In some cases, the XML writer automatically corrects the conformance error.</span></span> <span data-ttu-id="1374a-215">たとえば、ライターは、例外をスローせずに閉じられていない属性を閉じます。</span><span class="sxs-lookup"><span data-stu-id="1374a-215">For example, the writer closes an unclosed attribute without throwing an exception.</span></span> <span data-ttu-id="1374a-216">次の表は、さまざまな準拠違反は、各設定で処理されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-216">The following table shows how various conformance violations are handled in each setting.</span></span>  
  
|<span data-ttu-id="1374a-217">条件</span><span class="sxs-lookup"><span data-stu-id="1374a-217">Condition</span></span>|<xref:System.Xml.ConformanceLevel.Document>|<xref:System.Xml.ConformanceLevel.Fragment>|<xref:System.Xml.ConformanceLevel.Auto>|  
|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|  
|<span data-ttu-id="1374a-218">DTD 情報が見つかりました。</span><span class="sxs-lookup"><span data-stu-id="1374a-218">DTD information is found.</span></span>|<span data-ttu-id="1374a-219">この設定の違反されません。</span><span class="sxs-lookup"><span data-stu-id="1374a-219">Not a violation for this setting.</span></span> <span data-ttu-id="1374a-220">ただし、XML ライターは、DTD をチェックしませんユーザーは、DTD が整形式であることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1374a-220">However, the XML writer doesn't check the DTD; the user must ensure that the DTD is well-formed.</span></span>|<span data-ttu-id="1374a-221"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-221"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="1374a-222">ドキュメントの一致チェックが適用されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-222">Document conformance checking is applied.</span></span>|  
|<span data-ttu-id="1374a-223"><xref:System.Xml.XmlWriter.WriteStartDocument%2A> が呼ばれたとき。</span><span class="sxs-lookup"><span data-stu-id="1374a-223"><xref:System.Xml.XmlWriter.WriteStartDocument%2A> is called.</span></span>|<span data-ttu-id="1374a-224">この設定に違反とは見なされません。</span><span class="sxs-lookup"><span data-stu-id="1374a-224">Not considered a violation for this setting.</span></span>|<span data-ttu-id="1374a-225"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-225"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="1374a-226">ドキュメントの一致チェックが適用されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-226">Document conformance checking is applied.</span></span>|  
|<span data-ttu-id="1374a-227"><xref:System.Xml.XmlWriter.WriteStartDocument%2A> は複数回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-227"><xref:System.Xml.XmlWriter.WriteStartDocument%2A> is called multiple times.</span></span>|<span data-ttu-id="1374a-228"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-228"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="1374a-229"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-229"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="1374a-230"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-230"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="1374a-231">最上位レベル (いない要素または属性ノード) の下にテキスト値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-231">A text value appears at the top level (not below an element or attribute node).</span></span>|<span data-ttu-id="1374a-232"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-232"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="1374a-233">違反とは見なされません。</span><span class="sxs-lookup"><span data-stu-id="1374a-233">Not considered a violation.</span></span>|<span data-ttu-id="1374a-234">フラグメント一致チェックが適用されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-234">Fragment conformance checking is applied.</span></span>|  
|<span data-ttu-id="1374a-235">複数の要素または要素はありませんは、最上位レベルに表示されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-235">Multiple elements or no elements appear at the top level.</span></span>|<span data-ttu-id="1374a-236"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-236"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="1374a-237">違反とは見なされません。</span><span class="sxs-lookup"><span data-stu-id="1374a-237">Not considered a violation.</span></span>|<span data-ttu-id="1374a-238">フラグメント一致チェックが適用されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-238">Fragment conformance checking is applied.</span></span>|  
|<span data-ttu-id="1374a-239">最上位の項目は空白です。</span><span class="sxs-lookup"><span data-stu-id="1374a-239">Top-level item is white space.</span></span>|<span data-ttu-id="1374a-240">違反とは見なされません。</span><span class="sxs-lookup"><span data-stu-id="1374a-240">Not considered a violation.</span></span>|<span data-ttu-id="1374a-241">違反とは見なされません。</span><span class="sxs-lookup"><span data-stu-id="1374a-241">Not considered a violation.</span></span>|<span data-ttu-id="1374a-242">違反とは見なされません。</span><span class="sxs-lookup"><span data-stu-id="1374a-242">Not considered a violation.</span></span>|  
|<span data-ttu-id="1374a-243"><xref:System.Xml.XmlWriter.WriteEndAttribute%2A> されていない属性ノードを終了すると呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="1374a-243"><xref:System.Xml.XmlWriter.WriteEndAttribute%2A> isn't called to end an attribute node.</span></span>|<span data-ttu-id="1374a-244">XML ライターで修正します。</span><span class="sxs-lookup"><span data-stu-id="1374a-244">Fixed by XML writer.</span></span>|<span data-ttu-id="1374a-245">XML ライターで修正します。</span><span class="sxs-lookup"><span data-stu-id="1374a-245">Fixed by XML writer.</span></span>|<span data-ttu-id="1374a-246">XML ライターで修正します。</span><span class="sxs-lookup"><span data-stu-id="1374a-246">Fixed by XML writer.</span></span>|  
|<span data-ttu-id="1374a-247">XML ライターが正しく入れ子になった状態である (たとえば、<xref:System.Xml.XmlWriter.WriteStartElement%2A>呼び出しを続けて、 <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>)。</span><span class="sxs-lookup"><span data-stu-id="1374a-247">The XML writer is in an improperly nested state (for example, a <xref:System.Xml.XmlWriter.WriteStartElement%2A> call is followed by a <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>).</span></span>|<span data-ttu-id="1374a-248"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-248"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="1374a-249"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-249"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="1374a-250"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-250"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="1374a-251">最上位の項目は、属性です。</span><span class="sxs-lookup"><span data-stu-id="1374a-251">Top-level item is an attribute.</span></span>|<span data-ttu-id="1374a-252"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-252"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="1374a-253"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-253"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="1374a-254"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-254"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="1374a-255">複数の連続したテキスト ノードがある。</span><span class="sxs-lookup"><span data-stu-id="1374a-255">Multiple, contiguous text nodes are found.</span></span>|<span data-ttu-id="1374a-256">違反とは見なされませんが、テキスト ノードを連結するユーザーの役割です。</span><span class="sxs-lookup"><span data-stu-id="1374a-256">Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.</span></span>|<span data-ttu-id="1374a-257">違反とは見なされませんが、テキスト ノードを連結するユーザーの役割です。</span><span class="sxs-lookup"><span data-stu-id="1374a-257">Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.</span></span>|<span data-ttu-id="1374a-258">違反とは見なされませんが、テキスト ノードを連結するユーザーの役割です。</span><span class="sxs-lookup"><span data-stu-id="1374a-258">Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.</span></span>|  
|<span data-ttu-id="1374a-259">同じ名前空間プレフィックスが要素内で 2 回宣言されている。</span><span class="sxs-lookup"><span data-stu-id="1374a-259">The same namespace prefix is declared twice in an element.</span></span>|<span data-ttu-id="1374a-260">XML ライターは、新しい 2 つ目の名前空間のプレフィックスを生成します。</span><span class="sxs-lookup"><span data-stu-id="1374a-260">The XML writer generates a new prefix for the second namespace.</span></span>|<span data-ttu-id="1374a-261">XML ライターは、新しい 2 つ目の名前空間のプレフィックスを生成します。</span><span class="sxs-lookup"><span data-stu-id="1374a-261">The XML writer generates a new prefix for the second namespace.</span></span>|<span data-ttu-id="1374a-262">XML ライターは、新しい 2 つ目の名前空間のプレフィックスを生成します。</span><span class="sxs-lookup"><span data-stu-id="1374a-262">The XML writer generates a new prefix for the second namespace.</span></span>|  
|<span data-ttu-id="1374a-263"><xref:System.Xml.XmlWriter.WriteStartElement%2A> プレフィックスとそのスコープ内で宣言されていない名前空間を指定またはプレフィックスを別の名前空間を関連付けるか。</span><span class="sxs-lookup"><span data-stu-id="1374a-263"><xref:System.Xml.XmlWriter.WriteStartElement%2A> specifies a prefix and a namespace that isn't declared within that scope, or the prefix is associated with a different namespace.</span></span>|<span data-ttu-id="1374a-264">必要な名前空間ノードを XML ライターに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1374a-264">The XML writer writes the necessary namespace node.</span></span>|<span data-ttu-id="1374a-265">必要な名前空間ノードを XML ライターに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1374a-265">The XML writer writes the necessary namespace node.</span></span>|<span data-ttu-id="1374a-266">必要な名前空間ノードを XML ライターに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1374a-266">The XML writer writes the necessary namespace node.</span></span>|  
|<span data-ttu-id="1374a-267"><xref:System.Xml.XmlWriter.WriteStartAttribute%2A> プレフィックスとそのスコープ内で宣言されていない名前空間を指定します。</span><span class="sxs-lookup"><span data-stu-id="1374a-267"><xref:System.Xml.XmlWriter.WriteStartAttribute%2A> specifies a prefix and a namespace that isn't declared within that scope.</span></span>|<span data-ttu-id="1374a-268">必要な名前空間ノードを XML ライターに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1374a-268">The XML writer writes the necessary namespace node.</span></span>|<span data-ttu-id="1374a-269">必要な名前空間ノードを XML ライターに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1374a-269">The XML writer writes the necessary namespace node.</span></span>|<span data-ttu-id="1374a-270">必要な名前空間ノードを XML ライターに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1374a-270">The XML writer writes the necessary namespace node.</span></span>|  
|<span data-ttu-id="1374a-271"><xref:System.Xml.XmlWriter.WriteStartAttribute%2A> プレフィックスと名前空間プレフィックスに関連付けられて別のスコープに名前空間を指定します。</span><span class="sxs-lookup"><span data-stu-id="1374a-271"><xref:System.Xml.XmlWriter.WriteStartAttribute%2A> specifies a prefix and a namespace, but the prefix is associated with a different in-scope namespace.</span></span>|<span data-ttu-id="1374a-272">XML ライターは、指定したプレフィックスを無視しは正しいプレフィックスを検索または新しいプレフィックスを生成します。</span><span class="sxs-lookup"><span data-stu-id="1374a-272">The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.</span></span>|<span data-ttu-id="1374a-273">XML ライターは、指定したプレフィックスを無視しは正しいプレフィックスを検索または新しいプレフィックスを生成します。</span><span class="sxs-lookup"><span data-stu-id="1374a-273">The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.</span></span>|<span data-ttu-id="1374a-274">XML ライターは、指定したプレフィックスを無視しは正しいプレフィックスを検索または新しいプレフィックスを生成します。</span><span class="sxs-lookup"><span data-stu-id="1374a-274">The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.</span></span>|  
|<span data-ttu-id="1374a-275"><xref:System.Xml.XmlWriter.WriteQualifiedName%2A> スコープ内で存在しない名前空間を使用して、要素のコンテンツの書き込みに使用します。</span><span class="sxs-lookup"><span data-stu-id="1374a-275"><xref:System.Xml.XmlWriter.WriteQualifiedName%2A> is used to write element content by using a namespace that doesn't exist within the scope.</span></span>|<span data-ttu-id="1374a-276"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-276"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="1374a-277"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-277"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="1374a-278"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-278"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="1374a-279"><xref:System.Xml.XmlWriter.WriteQualifiedName%2A> スコープ内で存在しない名前空間を使用して、属性のコンテンツの書き込みに使用します。</span><span class="sxs-lookup"><span data-stu-id="1374a-279"><xref:System.Xml.XmlWriter.WriteQualifiedName%2A> is used to write attribute content by using a namespace that doesn't exist within the scope.</span></span>|<span data-ttu-id="1374a-280">XML ライターは、必要な名前空間宣言を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1374a-280">The XML writer writes the necessary namespace declaration.</span></span>|<span data-ttu-id="1374a-281">XML ライターは、必要な名前空間宣言を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1374a-281">The XML writer writes the necessary namespace declaration.</span></span>|<span data-ttu-id="1374a-282">XML ライターは、必要な名前空間宣言を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1374a-282">The XML writer writes the necessary namespace declaration.</span></span>|  
|<span data-ttu-id="1374a-283">`xml:space`属性が有効な値が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="1374a-283">The `xml:space` attribute doesn't contain a valid value.</span></span>|<span data-ttu-id="1374a-284"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-284"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="1374a-285"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-285"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="1374a-286"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-286"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="1374a-287">無効な名前が検出される。</span><span class="sxs-lookup"><span data-stu-id="1374a-287">An invalid name is encountered.</span></span>|<span data-ttu-id="1374a-288"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-288"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="1374a-289"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-289"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="1374a-290"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-290"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="1374a-291">`xml`プレフィックスない URI に一致します。</span><span class="sxs-lookup"><span data-stu-id="1374a-291">The `xml` prefix isn't matched to a URI.</span></span>|<span data-ttu-id="1374a-292">XML ライターは、この種の違反の確認が行われません。</span><span class="sxs-lookup"><span data-stu-id="1374a-292">The XML writer doesn't check for this type of violation.</span></span>|<span data-ttu-id="1374a-293">XML ライターは、この種の違反の確認が行われません。</span><span class="sxs-lookup"><span data-stu-id="1374a-293">The XML writer doesn't check for this type of violation.</span></span>|<span data-ttu-id="1374a-294">XML ライターは、この種の違反の確認が行われません。</span><span class="sxs-lookup"><span data-stu-id="1374a-294">The XML writer doesn't check for this type of violation.</span></span>|  
|<span data-ttu-id="1374a-295">`xml`にプレフィックスが照合されていない、 http://www.w3.org/XML/1998/namespace URI。</span><span class="sxs-lookup"><span data-stu-id="1374a-295">The `xml` prefix isn't matched to the http://www.w3.org/XML/1998/namespace URI.</span></span>|<span data-ttu-id="1374a-296"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-296"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="1374a-297"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-297"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="1374a-298"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-298"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="1374a-299">`xmlns`プレフィックスまたはローカルの名前を URI に一致はありません。</span><span class="sxs-lookup"><span data-stu-id="1374a-299">The `xmlns` prefix or local name isn't matched to a URI.</span></span>|<span data-ttu-id="1374a-300">XML ライターは、この種の違反の確認が行われません。</span><span class="sxs-lookup"><span data-stu-id="1374a-300">The XML writer doesn't check for this type of violation.</span></span>|<span data-ttu-id="1374a-301">XML ライターは、この種の違反の確認が行われません。</span><span class="sxs-lookup"><span data-stu-id="1374a-301">The XML writer doesn't check for this type of violation.</span></span>|<span data-ttu-id="1374a-302">XML ライターは、この種の違反の確認が行われません。</span><span class="sxs-lookup"><span data-stu-id="1374a-302">The XML writer doesn't check for this type of violation.</span></span>|  
|<span data-ttu-id="1374a-303">`xmlns`プレフィックスまたはローカルの名前に一致はありません、 http://www.w3.org/2000/xmlns URI。</span><span class="sxs-lookup"><span data-stu-id="1374a-303">The `xmlns` prefix or local name isn't matched to the http://www.w3.org/2000/xmlns URI.</span></span>|<span data-ttu-id="1374a-304"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-304"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="1374a-305"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-305"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="1374a-306"><xref:System.Xml.XmlException> スローされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-306"><xref:System.Xml.XmlException> is thrown.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1374a-307">次の例は、XML フラグメントをメモリ ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1374a-307">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNotEscapeUriAttributes">
      <MemberSignature Language="C#" Value="public bool DoNotEscapeUriAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoNotEscapeUriAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property DoNotEscapeUriAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoNotEscapeUriAttributes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1374a-308"><see cref="T:System.Xml.XmlWriter" /> が URI 属性をエスケープしないかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1374a-308">Gets or sets a value that indicates whether the <see cref="T:System.Xml.XmlWriter" /> does not escape URI attributes.</span></span></summary>
        <value>
          <span data-ttu-id="1374a-309"><see langword="true" /> 場合、 <see cref="T:System.Xml.XmlWriter" /> URI 属性をエスケープしません。 それ以外の場合、<see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="1374a-309"><see langword="true" /> if the <see cref="T:System.Xml.XmlWriter" /> does not escape URI attributes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1374a-310">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="1374a-310">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1374a-311">使用するテキスト エンコーディングの種類を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1374a-311">Gets or sets the type of text encoding to use.</span></span></summary>
        <value><span data-ttu-id="1374a-312">使用するテキスト エンコーディング。</span><span class="sxs-lookup"><span data-stu-id="1374a-312">The text encoding to use.</span></span> <span data-ttu-id="1374a-313">既定値は、<see langword="Encoding.UTF8" /> です。</span><span class="sxs-lookup"><span data-stu-id="1374a-313">The default is <see langword="Encoding.UTF8" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1374a-314"><xref:System.Xml.XmlWriter>一度にすべてではなく 1 文字ずつ文字のバッファーをエンコードします。</span><span class="sxs-lookup"><span data-stu-id="1374a-314">The <xref:System.Xml.XmlWriter> encodes a buffer of characters all at once, rather than character by character.</span></span> <span data-ttu-id="1374a-315">例外がスローされた、<xref:System.Xml.XmlWriter.Flush%2A>エンコード エラーが発生した場合、メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-315">An exception is thrown when the <xref:System.Xml.XmlWriter.Flush%2A> method is called if any encoding errors are encountered.</span></span>  
  
 <span data-ttu-id="1374a-316"><xref:System.Xml.XmlWriterSettings.Encoding%2A>プロパティにのみ適用されます、<xref:System.Xml.XmlWriter>作成するか、指定したインスタンス<xref:System.IO.Stream>または指定されたファイル名を使用します。</span><span class="sxs-lookup"><span data-stu-id="1374a-316">The <xref:System.Xml.XmlWriterSettings.Encoding%2A> property only applies to the <xref:System.Xml.XmlWriter> instances that are created either with the specified <xref:System.IO.Stream> or with the specified file name.</span></span> <span data-ttu-id="1374a-317">場合、<xref:System.Xml.XmlWriter>インスタンスが作成される、指定した<xref:System.IO.TextWriter>、<xref:System.Xml.XmlWriterSettings.Encoding%2A>プロパティは、基になるのエンコードによってオーバーライド<xref:System.IO.TextWriter>です。</span><span class="sxs-lookup"><span data-stu-id="1374a-317">If the <xref:System.Xml.XmlWriter> instance is created with the specified <xref:System.IO.TextWriter>, the <xref:System.Xml.XmlWriterSettings.Encoding%2A> property is overridden by the encoding of the underlying <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="1374a-318">たとえば、このプロパティは、特定の Unicode (utf-16) に設定<xref:System.Xml.XmlWriter>が基になるライターは、 <xref:System.IO.StreamWriter> (から派生した<xref:System.IO.TextWriter>) そのエンコード付き UTF8 に設定、出力は utf-8 でエンコードされたになります。</span><span class="sxs-lookup"><span data-stu-id="1374a-318">For example, if this property is set to Unicode (UTF-16) for a particular <xref:System.Xml.XmlWriter>, but the underlying writer is a <xref:System.IO.StreamWriter> (which derives from <xref:System.IO.TextWriter>) with its encoding set to UTF8, the output will be UTF-8 encoded.</span></span>  
  
 <span data-ttu-id="1374a-319">場合、<xref:System.Xml.XmlWriter>インスタンスが他の出力パラメーターを使用して作成された、<xref:System.Xml.XmlWriterSettings.Encoding%2A>プロパティは無視されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-319">If the <xref:System.Xml.XmlWriter> instance is created with other output parameters, the <xref:System.Xml.XmlWriterSettings.Encoding%2A> property is ignored.</span></span>  
  
 <span data-ttu-id="1374a-320">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="1374a-320">In the following example:</span></span>  
  
-   <span data-ttu-id="1374a-321"><xref:System.Xml.XmlWriterSettings.Encoding%2A> の既定値は `Encoding.UTF8` です。</span><span class="sxs-lookup"><span data-stu-id="1374a-321">The default value of <xref:System.Xml.XmlWriterSettings.Encoding%2A> is `Encoding.UTF8`.</span></span>  
  
-   <span data-ttu-id="1374a-322"><xref:System.IO.StreamWriter>に設定されている`Encoding.Unicode`と<xref:System.IO.StreamWriter>上書きのエンコード、<xref:System.Xml.XmlWriterSettings.Encoding%2A>設定します。</span><span class="sxs-lookup"><span data-stu-id="1374a-322">The <xref:System.IO.StreamWriter> is set to `Encoding.Unicode` and the <xref:System.IO.StreamWriter>’s encoding overrides the <xref:System.Xml.XmlWriterSettings.Encoding%2A> setting.</span></span>  
  
-   <span data-ttu-id="1374a-323">出力になります`Encoding.Unicode`です。</span><span class="sxs-lookup"><span data-stu-id="1374a-323">The output will be `Encoding.Unicode`.</span></span>  
  
```csharp  
using (StreamWriter output =  
    new StreamWriter(new FileStream("Xml01.xml", FileMode.Create), Encoding.Unicode))  
{  
    using (XmlWriter xmlWriter =  
        XmlWriter.Create(output, new XmlWriterSettings()))  
    {  
        xmlWriter.WriteStartDocument();  
        xmlWriter.WriteStartElement("Root");  
        xmlWriter.WriteEndElement();  
        xmlWriter.WriteEndDocument();  
    }  
}  
```  
  
> [!IMPORTANT]
>  <span data-ttu-id="1374a-324">同意しない、<xref:System.Text.Encoding>信頼できないソースからのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1374a-324">Do not accept an <xref:System.Text.Encoding> object from an untrusted source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1374a-325">次の例は、XML フラグメントをメモリ ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1374a-325">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public bool Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Indent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Indent { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1374a-326">要素にインデントを設定するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1374a-326">Gets or sets a value indicating whether to indent elements.</span></span></summary>
        <value>
          <span data-ttu-id="1374a-327">各要素を新しい行に書き込んでインデントを設定する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1374a-327"><see langword="true" /> to write individual elements on new lines and indent; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1374a-328">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="1374a-328">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1374a-329">このプロパティにのみ適用されます<xref:System.Xml.XmlWriter>インスタンスのテキストの内容を出力する以外、それ以外の場合、この設定は無視されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-329">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span>  
  
 <span data-ttu-id="1374a-330">要素に混合コンテンツが含まれていない限り、要素がインデントされます。</span><span class="sxs-lookup"><span data-stu-id="1374a-330">The elements are indented as long as the element does not contain mixed content.</span></span> <span data-ttu-id="1374a-331">1 回、<xref:System.Xml.XmlWriter.WriteString%2A>または<xref:System.Xml.XmlWriter.WriteWhitespace%2A>メソッドが混合要素コンテンツを書き込むために呼び出される、<xref:System.Xml.XmlWriter>インデントを停止します。</span><span class="sxs-lookup"><span data-stu-id="1374a-331">Once the <xref:System.Xml.XmlWriter.WriteString%2A> or <xref:System.Xml.XmlWriter.WriteWhitespace%2A> method is called to write out a mixed element content, the <xref:System.Xml.XmlWriter> stops indenting.</span></span> <span data-ttu-id="1374a-332">インデントには、混合コンテンツ要素が閉じられた後に行うことが再開されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-332">The indenting resumes once the mixed content element is closed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1374a-333">次の例を作成、<xref:System.Xml.XmlWriter>インデントのタブ文字を使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1374a-333">The following example creates an <xref:System.Xml.XmlWriter> object that uses the TAB character for indentation.</span></span>  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentChars">
      <MemberSignature Language="C#" Value="public string IndentChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IndentChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.IndentChars" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IndentChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1374a-334">インデント処理を行うときに使用する文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1374a-334">Gets or sets the character string to use when indenting.</span></span> <span data-ttu-id="1374a-335">この設定は、<see cref="P:System.Xml.XmlWriterSettings.Indent" /> プロパティが <see langword="true" /> に設定されている場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="1374a-335">This setting is used when the <see cref="P:System.Xml.XmlWriterSettings.Indent" /> property is set to <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="1374a-336">インデント処理を行うときに使用する文字列。</span><span class="sxs-lookup"><span data-stu-id="1374a-336">The character string to use when indenting.</span></span> <span data-ttu-id="1374a-337">これには任意の文字列値を設定できます。</span><span class="sxs-lookup"><span data-stu-id="1374a-337">This can be set to any string value.</span></span> <span data-ttu-id="1374a-338">ただし、有効な XML にするには、空白、タブ、復帰、ライン フィードなどの有効な空白文字だけを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1374a-338">However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds.</span></span> <span data-ttu-id="1374a-339">既定値は 2 つのスペースです。</span><span class="sxs-lookup"><span data-stu-id="1374a-339">The default is two spaces.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1374a-340">このプロパティにのみ適用されます<xref:System.Xml.XmlWriter>インスタンスのテキストの内容を出力する以外、それ以外の場合、この設定は無視されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-340">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span> <span data-ttu-id="1374a-341"><xref:System.Xml.XmlWriter>インデント文字が無効な XML になる場合、例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="1374a-341">The <xref:System.Xml.XmlWriter> throws an exception if the indent characters would result in invalid XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1374a-342">次の例を作成、<xref:System.Xml.XmlWriter>インデントのタブ文字を使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1374a-342">The following example creates an <xref:System.Xml.XmlWriter> object that uses the TAB character for indentation.</span></span>  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1374a-343"><see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> に代入された値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1374a-343">The value assigned to the <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NamespaceHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NamespaceHandling NamespaceHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NamespaceHandling NamespaceHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NamespaceHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NamespaceHandling As NamespaceHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NamespaceHandling NamespaceHandling { System::Xml::NamespaceHandling get(); void set(System::Xml::NamespaceHandling value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.NamespaceHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1374a-344">XML コンテンツの書き込み時に、重複する名前空間宣言を <see cref="T:System.Xml.XmlWriter" /> で削除するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1374a-344">Gets or sets a value that indicates whether the <see cref="T:System.Xml.XmlWriter" /> should remove duplicate namespace declarations when writing XML content.</span></span> <span data-ttu-id="1374a-345">既定の動作では、ライターの名前空間リゾルバーに存在するすべての名前空間宣言がライターによって出力されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-345">The default behavior is for the writer to output all namespace declarations that are present in the writer's namespace resolver.</span></span></summary>
        <value><span data-ttu-id="1374a-346"><see cref="T:System.Xml.NamespaceHandling" /> で重複する名前空間宣言を削除するかどうかを指定するための <see cref="T:System.Xml.XmlWriter" /> 列挙体。</span><span class="sxs-lookup"><span data-stu-id="1374a-346">The <see cref="T:System.Xml.NamespaceHandling" /> enumeration used to specify whether to remove duplicate namespace declarations in the <see cref="T:System.Xml.XmlWriter" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineChars">
      <MemberSignature Language="C#" Value="public string NewLineChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLineChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineChars" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewLineChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1374a-347">改行に使用する文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1374a-347">Gets or sets the character string to use for line breaks.</span></span></summary>
        <value><span data-ttu-id="1374a-348">改行に使用する文字列。</span><span class="sxs-lookup"><span data-stu-id="1374a-348">The character string to use for line breaks.</span></span> <span data-ttu-id="1374a-349">これには任意の文字列値を設定できます。</span><span class="sxs-lookup"><span data-stu-id="1374a-349">This can be set to any string value.</span></span> <span data-ttu-id="1374a-350">ただし、有効な XML にするには、空白、タブ、復帰、ライン フィードなどの有効な空白文字だけを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1374a-350">However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds.</span></span> <span data-ttu-id="1374a-351">既定値は<c>\r\n</c> (キャリッジ リターン、改行)。</span><span class="sxs-lookup"><span data-stu-id="1374a-351">The default is <c>\r\n</c> (carriage return, new line).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1374a-352">このプロパティにのみ適用されます<xref:System.Xml.XmlWriter>インスタンスのテキストの内容を出力する以外、それ以外の場合、この設定は無視されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-352">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span> <span data-ttu-id="1374a-353"><xref:System.Xml.XmlWriter>改行文字が無効な XML になる場合、例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="1374a-353">The <xref:System.Xml.XmlWriter> throws an exception if the line break characters would result in invalid XML.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1374a-354"><see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> に代入された値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1374a-354">The value assigned to the <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewLineHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NewLineHandling NewLineHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NewLineHandling NewLineHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineHandling As NewLineHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NewLineHandling NewLineHandling { System::Xml::NewLineHandling get(); void set(System::Xml::NewLineHandling value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.NewLineHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1374a-355">出力内の改行を正規化するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1374a-355">Gets or sets a value indicating whether to normalize line breaks in the output.</span></span></summary>
        <value><span data-ttu-id="1374a-356"><see cref="T:System.Xml.NewLineHandling" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="1374a-356">One of the <see cref="T:System.Xml.NewLineHandling" /> values.</span></span> <span data-ttu-id="1374a-357">既定値は、<see cref="F:System.Xml.NewLineHandling.Replace" /> です。</span><span class="sxs-lookup"><span data-stu-id="1374a-357">The default is <see cref="F:System.Xml.NewLineHandling.Replace" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1374a-358">この設定は、テキストの内容または属性の値を書き込むときに適用されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-358">This setting applies when writing text content or attribute values.</span></span> <span data-ttu-id="1374a-359">各、<xref:System.Xml.NewLineHandling>値次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="1374a-359">Each of the <xref:System.Xml.NewLineHandling> values is described below:</span></span>  
  
-   <span data-ttu-id="1374a-360"><xref:System.Xml.NewLineHandling.Entitize>設定は、<xref:System.Xml.XmlWriter>をそれ以外の場合は保持されません、正規化を改行文字を置き換える<xref:System.Xml.XmlReader>文字エン ティティにします。</span><span class="sxs-lookup"><span data-stu-id="1374a-360">The <xref:System.Xml.NewLineHandling.Entitize> setting tells the <xref:System.Xml.XmlWriter> to replace new line characters that would not be otherwise preserved by a normalizing <xref:System.Xml.XmlReader> with character entities.</span></span> <span data-ttu-id="1374a-361">これは、正規化の出力の読み取り、ラウンド トリップのシナリオで役立ちます<xref:System.Xml.XmlReader>です。</span><span class="sxs-lookup"><span data-stu-id="1374a-361">This is useful in round-trip scenarios where the output is read by a normalizing <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="1374a-362">属性値の場合にラウンド トリップ以降の追加の正規化規則が適用されます`\t`、`\n`と`\r`で正規化されたときに属性値にスペースが置き換えられます、<xref:System.Xml.XmlReader>です。</span><span class="sxs-lookup"><span data-stu-id="1374a-362">Additional normalization rules apply for attribute values when round tripping since `\t`, `\n` and `\r` are replaced with a space in attribute values when normalized in an <xref:System.Xml.XmlReader>.</span></span>  
  
-   <span data-ttu-id="1374a-363"><xref:System.Xml.NewLineHandling.Replace>設定は、<xref:System.Xml.XmlWriter>と改行文字を置換する`\r\n`、Microsoft Windows オペレーティング システムで使用される新しい行形式であります。</span><span class="sxs-lookup"><span data-stu-id="1374a-363">The <xref:System.Xml.NewLineHandling.Replace> setting tells the <xref:System.Xml.XmlWriter> to replace new line characters with `\r\n`, which is the new line format used by the Microsoft Windows operating system.</span></span> <span data-ttu-id="1374a-364">これにより、メモ帳や Microsoft Word のアプリケーションでファイルを正しく表示されるようにします。</span><span class="sxs-lookup"><span data-stu-id="1374a-364">This helps to ensure that the file can be correctly displayed by the Notepad or Microsoft Word applications.</span></span> <span data-ttu-id="1374a-365">この設定によりもに、属性内の改行文字を保持するために文字エンティティに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="1374a-365">This setting also replaces new lines in attributes with character entities to preserve the characters.</span></span> <span data-ttu-id="1374a-366">これが既定値です。</span><span class="sxs-lookup"><span data-stu-id="1374a-366">This is the default value.</span></span>  
  
-   <span data-ttu-id="1374a-367"><xref:System.Xml.NewLineHandling.None>設定は、<xref:System.Xml.XmlWriter>変更されていない入力のままにします。</span><span class="sxs-lookup"><span data-stu-id="1374a-367">The <xref:System.Xml.NewLineHandling.None> setting tells the <xref:System.Xml.XmlWriter> to leave the input unchanged.</span></span> <span data-ttu-id="1374a-368">この設定は場合、新しい行の処理に使用されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-368">This setting is used when you not want any new-line processing.</span></span> <span data-ttu-id="1374a-369">出力がによって読み取られた場合に便利ですが、<xref:System.Xml.XmlReader>はどのような正規化を行わない (たとえば、<xref:System.Xml.XmlTextReader>既定の設定でします)。</span><span class="sxs-lookup"><span data-stu-id="1374a-369">This is useful when the output is read by an <xref:System.Xml.XmlReader> that does not do any normalization (for example, an <xref:System.Xml.XmlTextReader> with default settings.)</span></span>  
  
 <span data-ttu-id="1374a-370">次の表の出力を表示する、<xref:System.Xml.XmlWriter.WriteString%2A>メソッドによって入力値に指定すると、<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>プロパティの設定。</span><span class="sxs-lookup"><span data-stu-id="1374a-370">The following tables show the output of the <xref:System.Xml.XmlWriter.WriteString%2A> method when supplied with the input value depending on the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property setting.</span></span> <span data-ttu-id="1374a-371">テーブルは、テキストの内容を作成するときに出力を表示および属性値を書き込むときにします。</span><span class="sxs-lookup"><span data-stu-id="1374a-371">The tables show the output when writing text content and also when writing an attribute value.</span></span>  
  
 `Text Node Value:`  
  
||<span data-ttu-id="1374a-372">\r\n</span><span class="sxs-lookup"><span data-stu-id="1374a-372">\r\n</span></span>|<span data-ttu-id="1374a-373">\n</span><span class="sxs-lookup"><span data-stu-id="1374a-373">\n</span></span>|<span data-ttu-id="1374a-374">\r</span><span class="sxs-lookup"><span data-stu-id="1374a-374">\r</span></span>|<span data-ttu-id="1374a-375">\t</span><span class="sxs-lookup"><span data-stu-id="1374a-375">\t</span></span>|  
|-|------------|---------|---------|---------|  
|<span data-ttu-id="1374a-376">含ま</span><span class="sxs-lookup"><span data-stu-id="1374a-376">Entitize</span></span>|<span data-ttu-id="1374a-377">(& a) #D; \n</span><span class="sxs-lookup"><span data-stu-id="1374a-377">&#D;\n</span></span>|<span data-ttu-id="1374a-378">\n</span><span class="sxs-lookup"><span data-stu-id="1374a-378">\n</span></span>|<span data-ttu-id="1374a-379">(&AMP; A) #D です。</span><span class="sxs-lookup"><span data-stu-id="1374a-379">&#D;</span></span>|<span data-ttu-id="1374a-380">\t</span><span class="sxs-lookup"><span data-stu-id="1374a-380">\t</span></span>|  
|<span data-ttu-id="1374a-381">置換</span><span class="sxs-lookup"><span data-stu-id="1374a-381">Replace</span></span>|<span data-ttu-id="1374a-382">\r\n</span><span class="sxs-lookup"><span data-stu-id="1374a-382">\r\n</span></span>|<span data-ttu-id="1374a-383">\r\n</span><span class="sxs-lookup"><span data-stu-id="1374a-383">\r\n</span></span>|<span data-ttu-id="1374a-384">\r\n</span><span class="sxs-lookup"><span data-stu-id="1374a-384">\r\n</span></span>|<span data-ttu-id="1374a-385">\t</span><span class="sxs-lookup"><span data-stu-id="1374a-385">\t</span></span>|  
|<span data-ttu-id="1374a-386">なし</span><span class="sxs-lookup"><span data-stu-id="1374a-386">None</span></span>|<span data-ttu-id="1374a-387">\r\n</span><span class="sxs-lookup"><span data-stu-id="1374a-387">\r\n</span></span>|<span data-ttu-id="1374a-388">\n</span><span class="sxs-lookup"><span data-stu-id="1374a-388">\n</span></span>|<span data-ttu-id="1374a-389">\r</span><span class="sxs-lookup"><span data-stu-id="1374a-389">\r</span></span>|<span data-ttu-id="1374a-390">\t</span><span class="sxs-lookup"><span data-stu-id="1374a-390">\t</span></span>|  
  
 `Attribute Value:`  
  
||<span data-ttu-id="1374a-391">\r\n</span><span class="sxs-lookup"><span data-stu-id="1374a-391">\r\n</span></span>|<span data-ttu-id="1374a-392">\n</span><span class="sxs-lookup"><span data-stu-id="1374a-392">\n</span></span>|<span data-ttu-id="1374a-393">\r</span><span class="sxs-lookup"><span data-stu-id="1374a-393">\r</span></span>|<span data-ttu-id="1374a-394">\t</span><span class="sxs-lookup"><span data-stu-id="1374a-394">\t</span></span>|  
|-|------------|---------|---------|---------|  
|<span data-ttu-id="1374a-395">含ま</span><span class="sxs-lookup"><span data-stu-id="1374a-395">Entitize</span></span>|<span data-ttu-id="1374a-396">(&AMP; M); #D &AMP; #A です。</span><span class="sxs-lookup"><span data-stu-id="1374a-396">&#D;&#A;</span></span>|<span data-ttu-id="1374a-397">(&AMP; A) #A です。</span><span class="sxs-lookup"><span data-stu-id="1374a-397">&#A;</span></span>|<span data-ttu-id="1374a-398">(&AMP; A) #D です。</span><span class="sxs-lookup"><span data-stu-id="1374a-398">&#D;</span></span>|<span data-ttu-id="1374a-399">&\#9;</span><span class="sxs-lookup"><span data-stu-id="1374a-399">&\#9;</span></span>|  
|<span data-ttu-id="1374a-400">置換</span><span class="sxs-lookup"><span data-stu-id="1374a-400">Replace</span></span>|<span data-ttu-id="1374a-401">(&AMP; M); #D &AMP; #A です。</span><span class="sxs-lookup"><span data-stu-id="1374a-401">&#D;&#A;</span></span>|<span data-ttu-id="1374a-402">(&AMP; A) #A です。</span><span class="sxs-lookup"><span data-stu-id="1374a-402">&#A;</span></span>|<span data-ttu-id="1374a-403">(&AMP; A) #D です。</span><span class="sxs-lookup"><span data-stu-id="1374a-403">&#D;</span></span>|<span data-ttu-id="1374a-404">&\#9;</span><span class="sxs-lookup"><span data-stu-id="1374a-404">&\#9;</span></span>|  
|<span data-ttu-id="1374a-405">なし</span><span class="sxs-lookup"><span data-stu-id="1374a-405">None</span></span>|<span data-ttu-id="1374a-406">\r\n</span><span class="sxs-lookup"><span data-stu-id="1374a-406">\r\n</span></span>|<span data-ttu-id="1374a-407">\n</span><span class="sxs-lookup"><span data-stu-id="1374a-407">\n</span></span>|<span data-ttu-id="1374a-408">\r</span><span class="sxs-lookup"><span data-stu-id="1374a-408">\r</span></span>|<span data-ttu-id="1374a-409">\t</span><span class="sxs-lookup"><span data-stu-id="1374a-409">\t</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="1374a-410"><xref:System.Xml.XmlWriter> CDATA セクション、コメント、または処理命令の内容を書き込むときに、次の動作がします。</span><span class="sxs-lookup"><span data-stu-id="1374a-410">The <xref:System.Xml.XmlWriter> has the following behavior when writing content within a CDATA section, comment, or processing instruction.</span></span> <span data-ttu-id="1374a-411">新しい行は、文字エンティティに置き換えられますしない場合でも、<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>プロパティに設定されている<xref:System.Xml.NewLineHandling.Entitize>です。</span><span class="sxs-lookup"><span data-stu-id="1374a-411">New lines are never replaced with their character entities, even when the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property is set to <xref:System.Xml.NewLineHandling.Entitize>.</span></span> <span data-ttu-id="1374a-412">文字エン ティティは CDATA セクション、コメントまたは処理命令で認識されないためにです。</span><span class="sxs-lookup"><span data-stu-id="1374a-412">This is because character entities are not recognized in CDATA sections, comments or processing instructions.</span></span> <span data-ttu-id="1374a-413">場合、<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>プロパティに設定されている<xref:System.Xml.NewLineHandling.None>または<xref:System.Xml.NewLineHandling.Replace>、テキスト ノードの値を作成するときと同じ動作です。</span><span class="sxs-lookup"><span data-stu-id="1374a-413">If the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property is set to <xref:System.Xml.NewLineHandling.None> or <xref:System.Xml.NewLineHandling.Replace>, the behavior is the same as when writing a text node value.</span></span>  
  
 <span data-ttu-id="1374a-414">次の表は、どのような正規化を示して<xref:System.Xml.XmlReader>各入力の空白を返します。</span><span class="sxs-lookup"><span data-stu-id="1374a-414">The following table describes what a normalizing <xref:System.Xml.XmlReader> returns for each white space input.</span></span> <span data-ttu-id="1374a-415">詳細についてを参照してください 2.11 および W3C の 3.3.3 [XML 1.0 勧告](https://www.w3.org/TR/REC-xml/)です。</span><span class="sxs-lookup"><span data-stu-id="1374a-415">For more information, see sections 2.11 and 3.3.3 of the W3C [XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml/).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1374a-416">正規化のリーダーは any<xref:System.Xml.XmlReader>によって作成されたオブジェクト、<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1374a-416">A normalizing reader is any <xref:System.Xml.XmlReader> object created by the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1374a-417">これらのオブジェクトは、常に、改行の正規化と属性の完全な正規化を実行します。</span><span class="sxs-lookup"><span data-stu-id="1374a-417">These objects always perform line break normalization and full normalization of attributes.</span></span> <span data-ttu-id="1374a-418"><xref:System.Xml.XmlTextReader>オブジェクトすることもできます正規化リーダーである場合<xref:System.Xml.XmlTextReader.Normalization%2A>プロパティに設定されている`true`です。</span><span class="sxs-lookup"><span data-stu-id="1374a-418">The <xref:System.Xml.XmlTextReader> object can also be a normalizing reader if it's <xref:System.Xml.XmlTextReader.Normalization%2A> property is set to `true`.</span></span>  
  
||<span data-ttu-id="1374a-419">\r\n</span><span class="sxs-lookup"><span data-stu-id="1374a-419">\r\n</span></span>|<span data-ttu-id="1374a-420">\n</span><span class="sxs-lookup"><span data-stu-id="1374a-420">\n</span></span>|<span data-ttu-id="1374a-421">\r</span><span class="sxs-lookup"><span data-stu-id="1374a-421">\r</span></span>|<span data-ttu-id="1374a-422">\t</span><span class="sxs-lookup"><span data-stu-id="1374a-422">\t</span></span>|  
|-|------------|---------|---------|---------|  
|<span data-ttu-id="1374a-423">テキスト ノードの値</span><span class="sxs-lookup"><span data-stu-id="1374a-423">Text Node Value</span></span>|<span data-ttu-id="1374a-424">\n</span><span class="sxs-lookup"><span data-stu-id="1374a-424">\n</span></span>|<span data-ttu-id="1374a-425">\n</span><span class="sxs-lookup"><span data-stu-id="1374a-425">\n</span></span>|<span data-ttu-id="1374a-426">\n</span><span class="sxs-lookup"><span data-stu-id="1374a-426">\n</span></span>|<span data-ttu-id="1374a-427">\t</span><span class="sxs-lookup"><span data-stu-id="1374a-427">\t</span></span>|  
|<span data-ttu-id="1374a-428">属性の値</span><span class="sxs-lookup"><span data-stu-id="1374a-428">Attribute Value</span></span>|<span data-ttu-id="1374a-429">1 つのスペース</span><span class="sxs-lookup"><span data-stu-id="1374a-429">single space</span></span>|<span data-ttu-id="1374a-430">1 つのスペース</span><span class="sxs-lookup"><span data-stu-id="1374a-430">single space</span></span>|<span data-ttu-id="1374a-431">1 つのスペース</span><span class="sxs-lookup"><span data-stu-id="1374a-431">single space</span></span>|<span data-ttu-id="1374a-432">1 つのスペース</span><span class="sxs-lookup"><span data-stu-id="1374a-432">single space</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineOnAttributes">
      <MemberSignature Language="C#" Value="public bool NewLineOnAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NewLineOnAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineOnAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NewLineOnAttributes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1374a-433">新しい行に属性を書き込むかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1374a-433">Gets or sets a value indicating whether to write attributes on a new line.</span></span></summary>
        <value>
          <span data-ttu-id="1374a-434">個々の行に属性を書き込む場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1374a-434"><see langword="true" /> to write attributes on individual lines; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1374a-435">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="1374a-435">The default is <see langword="false" />.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="1374a-436"><see cref="P:System.Xml.XmlWriterSettings.Indent" /> プロパティ値が <see langword="false" /> の場合、この設定は無効です。</span><span class="sxs-lookup"><span data-stu-id="1374a-436">This setting has no effect when the <see cref="P:System.Xml.XmlWriterSettings.Indent" /> property value is <see langword="false" />.</span></span>  
  
</para></block>  
  
 <span data-ttu-id="1374a-437"><see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> を <see langword="true" /> に設定すると、各属性は、新しい行にインデントを 1 レベル増やして記述されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-437">When <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> is set to <see langword="true" />, each attribute is pre-pended with a new line and one extra level of indentation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1374a-438">このプロパティにのみ適用されます<xref:System.Xml.XmlWriter>インスタンスのテキストの内容を出力する以外、それ以外の場合、この設定は無視されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-438">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1374a-439">次の例を作成、<xref:System.Xml.XmlWriter>を XML ファイルに書き込み、新しい行に各属性を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1374a-439">The following example creates an <xref:System.Xml.XmlWriter> that writes to an XML file and writes each attribute on a new line.</span></span>  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 <span data-ttu-id="1374a-440">このサンプルでは、次の出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-440">The sample produces the following output:</span></span>  
  
```xml  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OmitXmlDeclaration">
      <MemberSignature Language="C#" Value="public bool OmitXmlDeclaration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OmitXmlDeclaration" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration" />
      <MemberSignature Language="VB.NET" Value="Public Property OmitXmlDeclaration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OmitXmlDeclaration { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1374a-441">XML 宣言を省略するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1374a-441">Gets or sets a value indicating whether to omit an XML declaration.</span></span></summary>
        <value>
          <span data-ttu-id="1374a-442">XML 宣言を省略する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1374a-442"><see langword="true" /> to omit the XML declaration; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1374a-443">既定値は <see langword="false" /> で、XML 宣言が書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="1374a-443">The default is <see langword="false" />, an XML declaration is written.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1374a-444">このプロパティにのみ適用されます<xref:System.Xml.XmlWriter>インスタンスのテキストの内容を出力する以外、それ以外の場合、この設定は無視されます。</span><span class="sxs-lookup"><span data-stu-id="1374a-444">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span>  
  
 <span data-ttu-id="1374a-445">場合<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>に設定されている`false`、XML 宣言が自動的に書き込まれます</span><span class="sxs-lookup"><span data-stu-id="1374a-445">If <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> is set to `false`, The XML declaration is written automatically</span></span>  
  
 <span data-ttu-id="1374a-446">XML 宣言は、常に書き込まれます<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>に設定されている<xref:System.Xml.ConformanceLevel.Document>場合でも、<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>に設定されている`true`です。</span><span class="sxs-lookup"><span data-stu-id="1374a-446">The XML declaration is always written if <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> is set to <xref:System.Xml.ConformanceLevel.Document>, even if <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="1374a-447">場合、XML 宣言が書き込まれていない<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>に設定されている<xref:System.Xml.ConformanceLevel.Fragment>です。</span><span class="sxs-lookup"><span data-stu-id="1374a-447">The XML declaration is never written if <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> is set to <xref:System.Xml.ConformanceLevel.Fragment>.</span></span> <span data-ttu-id="1374a-448">呼び出すことができます<xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A>XML 宣言を明示的に記述します。</span><span class="sxs-lookup"><span data-stu-id="1374a-448">You can call <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> to explicitly write out an XML declaration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1374a-449">次の例は、XML フラグメントをメモリ ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1374a-449">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputMethod">
      <MemberSignature Language="C#" Value="public System.Xml.XmlOutputMethod OutputMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlOutputMethod OutputMethod" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OutputMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputMethod As XmlOutputMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlOutputMethod OutputMethod { System::Xml::XmlOutputMethod get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlOutputMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1374a-450"><see cref="T:System.Xml.XmlWriter" /> 出力をシリアル化するために使用するメソッドを取得します。</span><span class="sxs-lookup"><span data-stu-id="1374a-450">Gets the method used to serialize the <see cref="T:System.Xml.XmlWriter" /> output.</span></span></summary>
        <value><span data-ttu-id="1374a-451"><see cref="T:System.Xml.XmlOutputMethod" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="1374a-451">One of the <see cref="T:System.Xml.XmlOutputMethod" /> values.</span></span> <span data-ttu-id="1374a-452">既定値は、<see cref="F:System.Xml.XmlOutputMethod.Xml" /> です。</span><span class="sxs-lookup"><span data-stu-id="1374a-452">The default is <see cref="F:System.Xml.XmlOutputMethod.Xml" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1374a-453">このプロパティは、出力をシリアル化に使用する方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="1374a-453">This property specifies the method used to serialize the output.</span></span> <span data-ttu-id="1374a-454">出力は、HTML のルールでは、XML 1.0 規則およびなどを使用してシリアル化できます。</span><span class="sxs-lookup"><span data-stu-id="1374a-454">The output can be serialized using the HTML rules, the XML 1.0 rules, and so on.</span></span> <span data-ttu-id="1374a-455">この設定は、XSLT プロセッサによって設定されているし、Visual Studio によって内部的に使用します。</span><span class="sxs-lookup"><span data-stu-id="1374a-455">This setting is set by the XSLT processor and is used internally by Visual Studio.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1374a-456">設定クラスのメンバーを既定値にリセットします。</span><span class="sxs-lookup"><span data-stu-id="1374a-456">Resets the members of the settings class to their default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1374a-457">次の表は、既定のインスタンスのプロパティ値<xref:System.Xml.XmlWriterSettings>です。</span><span class="sxs-lookup"><span data-stu-id="1374a-457">The following table shows the default property values for an instance of <xref:System.Xml.XmlWriterSettings>.</span></span>  
  
|<span data-ttu-id="1374a-458">プロパティ</span><span class="sxs-lookup"><span data-stu-id="1374a-458">Property</span></span>|<span data-ttu-id="1374a-459">初期値</span><span class="sxs-lookup"><span data-stu-id="1374a-459">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|<span data-ttu-id="1374a-460">`false`。</span><span class="sxs-lookup"><span data-stu-id="1374a-460">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|<span data-ttu-id="1374a-461">`true`。</span><span class="sxs-lookup"><span data-stu-id="1374a-461">`true`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|<span data-ttu-id="1374a-462">`false`。</span><span class="sxs-lookup"><span data-stu-id="1374a-462">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<span data-ttu-id="1374a-463"><xref:System.Xml.ConformanceLevel.Document>。</span><span class="sxs-lookup"><span data-stu-id="1374a-463"><xref:System.Xml.ConformanceLevel.Document>.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<span data-ttu-id="1374a-464">`Encoding.UTF8`。</span><span class="sxs-lookup"><span data-stu-id="1374a-464">`Encoding.UTF8`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|<span data-ttu-id="1374a-465">`false`。</span><span class="sxs-lookup"><span data-stu-id="1374a-465">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="1374a-466">2 つのスペースです。</span><span class="sxs-lookup"><span data-stu-id="1374a-466">Two spaces.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="1374a-467">`\r\n`。</span><span class="sxs-lookup"><span data-stu-id="1374a-467">`\r\n`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<span data-ttu-id="1374a-468"><xref:System.Xml.NewLineHandling.Replace>。</span><span class="sxs-lookup"><span data-stu-id="1374a-468"><xref:System.Xml.NewLineHandling.Replace>.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|<span data-ttu-id="1374a-469">`false`。</span><span class="sxs-lookup"><span data-stu-id="1374a-469">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|<span data-ttu-id="1374a-470">`false`。</span><span class="sxs-lookup"><span data-stu-id="1374a-470">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|<span data-ttu-id="1374a-471">`true`。</span><span class="sxs-lookup"><span data-stu-id="1374a-471">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocumentOnClose">
      <MemberSignature Language="C#" Value="public bool WriteEndDocumentOnClose { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteEndDocumentOnClose" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteEndDocumentOnClose As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WriteEndDocumentOnClose { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1374a-472"><see cref="T:System.Xml.XmlWriter" /> メソッドが呼び出されるときに <see cref="M:System.Xml.XmlWriter.Close" /> がすべての閉じられていない要素タグに終了タグを追加するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1374a-472">Gets or sets a value that indicates whether the <see cref="T:System.Xml.XmlWriter" /> will add closing tags to all unclosed element tags when the <see cref="M:System.Xml.XmlWriter.Close" /> method is called.</span></span></summary>
        <value>
          <span data-ttu-id="1374a-473">閉じられていない要素タグがすべて閉じられる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1374a-473"><see langword="true" /> if all unclosed element tags will be closed out; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1374a-474">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="1374a-474">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1374a-475">このフラグを設定した場合`false`、出力 XML ファイルを適切な形式にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="1374a-475">If you set this flag to `false`, the output XML file may not be well-formed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>