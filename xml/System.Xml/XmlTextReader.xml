<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlTextReader.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b857fe3" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2eccf4de-4b1c-4706-8cb3-f46682ccfb72fc7d765170296a270026ece865d6eb31cd64ddfa.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fc7d765170296a270026ece865d6eb31cd64ddfa</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b15b8cf0f6dbc1504057c88969d9ef4b790891fe</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/11/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlTextReader">
          <source>Represents a reader that provides fast, non-cached, forward-only access to XML data.</source>
          <target state="translated">XML データへの高速で非キャッシュの前方向アクセスを提供するリーダーを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlTextReader">
          <source>Starting with the .NET Framework 2.0, we recommend that you use the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> class instead.</source>
          <target state="translated">.NET Framework 2.0 以降では、代わりに <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> クラスを使用することをお勧めします。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> provides forward-only, read-only access to a stream of XML data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> XML データのストリームに順方向専用、読み取り専用のアクセスを提供します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>The current node refers to the node on which the reader is positioned.</source>
          <target state="translated">現在のノードとは、現在リーダーが置かれているノードのことです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>The reader is advanced using any of the read methods and properties reflect the value of the current node.</source>
          <target state="translated">リーダーが読み取りのメソッドのいずれかを使用して高度なし、プロパティは、現在のノードの値を反映します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>This class implements <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> and conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.</source>
          <target state="translated">このクラスは実装<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>W3C 拡張マークアップ言語 (XML) 1.0 と XML の推奨事項の名前空間に準拠しているとします。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source><ph id="ph1">`XmlTextReader`</ph> provides the following functionality:</source>
          <target state="translated"><ph id="ph1">`XmlTextReader`</ph> 次の機能を提供します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>Enforces the rules of well-formed XML.</source>
          <target state="translated">整形式 XML の規則を適用します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source><ph id="ph1">`XmlTextReader`</ph> does not provide data validation.</source>
          <target state="translated"><ph id="ph1">`XmlTextReader`</ph> データの検証を提供しません。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>Checks that <ph id="ph1">`DocumentType`</ph> nodes are well-formed.</source>
          <target state="translated">確認<ph id="ph1">`DocumentType`</ph>ノードが整形式です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source><ph id="ph1">`XmlTextReader`</ph> checks the DTD for well-formedness, but does not validate using the DTD.</source>
          <target state="translated"><ph id="ph1">`XmlTextReader`</ph> 整形式での DTD をチェックしますが、DTD を使用して検証されません。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>For nodes where <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.NodeType%2A&gt;</ph> is <ph id="ph2">`XmlNodeType.EntityReference`</ph>, a single empty <ph id="ph3">`EntityReference`</ph> node is returned (that is, the <ph id="ph4">&lt;xref:System.Xml.XmlTextReader.Value%2A&gt;</ph> property is <ph id="ph5">`String.Empty`</ph>).</source>
          <target state="translated">ノードの場所<ph id="ph1">&lt;xref:System.Xml.XmlTextReader.NodeType%2A&gt;</ph>は<ph id="ph2">`XmlNodeType.EntityReference`</ph>、1 つの空<ph id="ph3">`EntityReference`</ph>ノードが返されます (つまり、<ph id="ph4">&lt;xref:System.Xml.XmlTextReader.Value%2A&gt;</ph>プロパティは<ph id="ph5">`String.Empty`</ph>)。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>The actual declarations of entities in the DTD are called <ph id="ph1">`Entity`</ph> nodes.</source>
          <target state="translated">DTD 内のエンティティの実際の宣言と呼びます<ph id="ph1">`Entity`</ph>ノード。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>When you refer to these nodes in your data, they are called <ph id="ph1">`EntityReference`</ph> nodes.</source>
          <target state="translated">データでこれらのノードを参照するときに呼び出される<ph id="ph1">`EntityReference`</ph>ノード。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>Does not expand default attributes.</source>
          <target state="translated">既定の属性は展開しません。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>Because the <ph id="ph1">`XmlTextReader`</ph> does not perform the extra checks required for data validation, it provides a fast well-formedness parser.</source>
          <target state="translated"><ph id="ph1">`XmlTextReader`</ph>データの検証に必要な追加のチェックは行われず、高速整形パーサーが用意されています。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>To perform data validation, use a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">データの検証を実行する検証を使用して<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>To read XML data from an <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>, use <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>.</source>
          <target state="translated">XML データを読み取る、<ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>を使用して<ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source><ph id="ph1">`XmlTextReader`</ph> throws an <ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph> on XML parse errors.</source>
          <target state="translated"><ph id="ph1">`XmlTextReader`</ph> スロー、 <ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph> XML の解析エラーです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>After an exception is thrown the state of the reader is not predictable.</source>
          <target state="translated">例外がスローされた後にリーダーの状態は予測できません。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>For example, the reported node type may be different than the actual node type of the current node.</source>
          <target state="translated">たとえば、報告されたノード型は、現在のノードの実際のノード型よりも異なる場合があります。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadState%2A&gt;</ph> property to check whether a reader is in error state.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadState%2A&gt;</ph>リーダーがエラー状態にするかどうかを確認するプロパティです。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>Security Considerations</source>
          <target state="translated">セキュリティの考慮事項</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>The following are things to consider when using the <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> class.</source>
          <target state="translated">使用する場合の考慮事項は、次のとおり、<ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>Exceptions thrown the <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> can disclose path information that you do not want bubbled up to the application.</source>
          <target state="translated">スローされた例外、<ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph>たくないパス情報に送られ、アプリケーションを公開することができます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>Your applications must catch exceptions and process them appropriately.</source>
          <target state="translated">アプリケーションは例外をキャッチし、それらを適切に処理する必要があります。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>DTD processing is enabled by default.</source>
          <target state="translated">DTD の処理は既定で有効になっています。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>Disable DTD processing if you are concerned about Denial of Service issues or if you are dealing with untrusted sources.</source>
          <target state="translated">サービス拒否攻撃や信頼されていないソースを扱うかどうかに関する問題がある場合は、DTD 処理を無効にします。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>Set the <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.DtdProcessing%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Xml.DtdProcessing.Prohibit&gt;</ph> to disable DTD processing.</source>
          <target state="translated">設定、<ph id="ph1">&lt;xref:System.Xml.XmlTextReader.DtdProcessing%2A&gt;</ph>プロパティを<ph id="ph2">&lt;xref:System.Xml.DtdProcessing.Prohibit&gt;</ph>DTD 処理を無効にします。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>If you have DTD processing enabled, you can use the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> to restrict the resources that the <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph> can access.</source>
          <target state="translated">DTD 処理を有効にした場合、<ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> を使用して <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph> でアクセス可能なリソースを制限できます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>You can also design your application so that the XML processing is memory and time constrained.</source>
          <target state="translated">また、XML 処理に対するメモリと時間の割り当てが制限されるようにアプリケーションをデザインすることもできます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>For example, configure time-out limits in your ASP.NET application.</source>
          <target state="translated">たとえば、ASP.NET アプリケーション内でタイムアウト制限を設定します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>XML data can include references to external resources such as a DTD file.</source>
          <target state="translated">XML データは、DTD ファイルなどの外部リソースへの参照を含めることができます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>By default external resources are resolved using an <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> object with no user credentials.</source>
          <target state="translated">既定では、外部リソースはユーザー資格情報なしで、<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> オブジェクトを使用して解決されます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>You can secure this further by doing one of the following:</source>
          <target state="translated">この点については、次のいずれかの方法でセキュリティを強化できます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>Restrict the resources that the <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> can access by setting the <ph id="ph2">&lt;xref:System.Xml.XmlTextReader.XmlResolver%2A&gt;</ph> property to an <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> プロパティを <ph id="ph2">&lt;xref:System.Xml.XmlTextReader.XmlResolver%2A&gt;</ph> オブジェクトに設定することによって、<ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> がアクセスできるリソースを制限します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>Do not allow the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to open any external resources by setting the <ph id="ph2">&lt;xref:System.Xml.XmlTextReader.XmlResolver%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> プロパティを <ph id="ph2">&lt;xref:System.Xml.XmlTextReader.XmlResolver%2A&gt;</ph> に設定することにより、<ph id="ph3">`null`</ph> が外部リソースを開けないようにする。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>XML data can contain a large number of attributes, namespace declarations, nested elements and so on that require a substantial amount of time to process.</source>
          <target state="translated">XML データには、処理に長時間を要する大量の属性、名前空間宣言、入れ子になった要素などが含まれることがあります。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>To limit the size of the input that is sent to the <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph>, create a custom IStream implementation and supply it the <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph>.</source>
          <target state="translated">送信される入力のサイズを制限する、<ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph>カスタム IStream 実装を作成を指定して、<ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph> method can be used to handle large streams of data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph>大量のデータ ストリームを処理するメソッドを使用できます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>This method reads a small number of characters at a time instead of allocating a single string for the whole value.</source>
          <target state="translated">このメソッドは、値全体に 1 つの文字列を割り当てる代わりに、一度に少数の文字を読みます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>By default general entities are not expanded.</source>
          <target state="translated">既定では、一般エンティティは展開されません。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>General entities are expanded when you call the <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ResolveEntity%2A&gt;</ph> method.</source>
          <target state="translated">一般エンティティは <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ResolveEntity%2A&gt;</ph> メソッドを呼び出したときに展開されます。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>This class has an inheritance demand.</source>
          <target state="translated">このクラスには、継承確認要求があります。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>Full trust is required to inherit from <ph id="ph1">&lt;see langword="XmlTextReader" /&gt;</ph>.</source>
          <target state="translated">継承する完全な信頼が必要な<ph id="ph1">&lt;see langword="XmlTextReader" /&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlTextReader">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph>の新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="XmlTextReader" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see langword="XmlTextReader" /&gt;</ph>の新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream)">
          <source>The stream containing the XML data to read.</source>
          <target state="translated">読み取る XML データを格納しているストリーム。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> class with the specified stream.</source>
          <target state="translated">指定したストリームで <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> decodes the stream using <ph id="ph2">&lt;xref:System.Text.Encoding?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph>を使用して、ストリームのデコード<ph id="ph2">&lt;xref:System.Text.Encoding?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph> containing the XML data to read.</source>
          <target state="translated">読み取る XML データを格納している <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> を使用して、<ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader)">
          <source>It is assumed that the <ph id="ph1">`TextReader`</ph> is already set to the correct encoding.</source>
          <target state="translated"><ph id="ph1">`TextReader`</ph> が既に正しいエンコーディングに設定されていることを前提にしています。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader)">
          <source>This is used by clients that have already read some things from the stream in a multi-part MIME scenario.</source>
          <target state="translated">マルチパート MIME シナリオでは、ストリームからいくつかの点を開封してクライアントによって使用されます。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader)">
          <source>The following example loads an XML string into the <ph id="ph1">`XmlTextReader`</ph> object using the <ph id="ph2">&lt;xref:System.IO.StringReader&gt;</ph> class.</source>
          <target state="translated">次の例に、XML 文字列を読み込みます、<ph id="ph1">`XmlTextReader`</ph>オブジェクトを使用して、<ph id="ph2">&lt;xref:System.IO.StringReader&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String)">
          <source>The URL for the file containing the XML data.</source>
          <target state="translated">XML データを格納しているファイルの URL。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.BaseURI" /&gt;</ph> is set to this value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.BaseURI" /&gt;</ph> は、この値に設定されます。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> class with the specified file.</source>
          <target state="translated">指定したファイルで、<ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String)">
          <source>If the file is located on a resource that requires access credentials, use the <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.XmlResolver%2A&gt;</ph> property to specify the necessary credentials.</source>
          <target state="translated">アクセス資格情報が必要なリソースには、ファイルが存在する場合を使用して、<ph id="ph1">&lt;xref:System.Xml.XmlTextReader.XmlResolver%2A&gt;</ph>プロパティを必要な資格情報を指定します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String)">
          <source>In version 1.1 of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>, partially trusted code cannot set the <ph id="ph2">`XmlResolver`</ph> property.</source>
          <target state="translated">バージョン 1.1 で、 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>、部分信頼コードを設定できません、<ph id="ph2">`XmlResolver`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String)">
          <source>The workaround is to create an <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with the necessary credentials, pass the URI to the <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType&gt;</ph> method, and then construct the <ph id="ph3">`XmlTextReader`</ph> using the resulting <ph id="ph4">&lt;xref:System.IO.Stream&gt;</ph> object.</source>
          <target state="translated">作成の回避策は、<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>への URI を渡すために必要な資格情報を持つ、<ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType&gt;</ph>メソッド、および、コンストラクト、 <ph id="ph3">`XmlTextReader`</ph> 、その結果を使用して<ph id="ph4">&lt;xref:System.IO.Stream&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String)">
          <source>The workaround is described in the following C# code.</source>
          <target state="translated">回避策は、次の c# コードの説明です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String)">
          <source>The following example reads an XML file and displays each of the nodes.</source>
          <target state="translated">次の例では、XML ファイルを読み取るし、各ノードを表示します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String)">
          <source>The example uses the file, <ph id="ph1">`items.xml`</ph>, as input.</source>
          <target state="translated">この例では、<ph id="ph1">`items.xml`</ph>の入力として、します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String)">
          <source>The specified file cannot be found.</source>
          <target state="translated">指定されたファイルが見つかりません。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String)">
          <source>Part of the filename or directory cannot be found.</source>
          <target state="translated">ファイル名またはディレクトリの一部が見つかりません。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="url" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="url" /&gt;</ph> が空の文字列です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String)">
          <source>The remote filename cannot be resolved.</source>
          <target state="translated">リモート ファイル名を解決できません。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String)">
          <source>An error occurred while processing the request.</source>
          <target state="translated">この要求の処理中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="url" /&gt;</ph> is not a valid URI.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="url" /&gt;</ph> は有効な URI ではありません。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph> to use.</source>
          <target state="translated">使用する <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.Xml.XmlNameTable)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> を使用して、<ph id="ph2">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.Xml.XmlNameTable)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)">
          <source>The stream containing the XML data to read.</source>
          <target state="translated">読み取る XML データを格納しているストリーム。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph> to use.</source>
          <target state="translated">使用する <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> class with the specified stream and <ph id="ph2">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>.</source>
          <target state="translated">指定したストリームと <ph id="ph2">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> で <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> decodes the stream using <ph id="ph2">&lt;xref:System.Text.Encoding?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph>を使用して、ストリームのデコード<ph id="ph2">&lt;xref:System.Text.Encoding?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)">
          <source>If you specify a name table, this constructor uses the names defined already in that table.</source>
          <target state="translated">名前テーブルを指定する場合、このコンス トラクターは、そのテーブルで既に定義されている名前を使用します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;paramref name="input" /&gt;</ph> or <ph id="ph2">&lt;paramref name="nt" /&gt;</ph> value is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> または <ph id="ph2">&lt;paramref name="nt" /&gt;</ph> の値が <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph> containing the XML data to read.</source>
          <target state="translated">読み取る XML データを格納している <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph> to use.</source>
          <target state="translated">使用する <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>.</source>
          <target state="translated">指定された <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> と <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> を使用して、<ph id="ph3">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)">
          <source>It is assumed that the <ph id="ph1">`TextReader`</ph> is already set to the correct encoding.</source>
          <target state="translated"><ph id="ph1">`TextReader`</ph> が既に正しいエンコーディングに設定されていることを前提にしています。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)">
          <source>This is used by clients that have already read some things from the stream in a multi-part MIME scenario.</source>
          <target state="translated">マルチパート MIME シナリオでは、ストリームからいくつかの点を開封してクライアントによって使用されます。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;paramref name="nt" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="nt" /&gt;</ph> 値は <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)">
          <source>The URL to use for resolving external resources.</source>
          <target state="translated">外部リソースを解決するために使用する URL。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.BaseURI" /&gt;</ph> is set to this value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.BaseURI" /&gt;</ph> は、この値に設定されます。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)">
          <source>The stream containing the XML data to read.</source>
          <target state="translated">読み取る XML データを格納しているストリーム。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> class with the specified URL and stream.</source>
          <target state="translated">指定した URL とストリームで、<ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)">
          <source>The URL to use for resolving external resources.</source>
          <target state="translated">外部リソースを解決するために使用する URL。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.BaseURI" /&gt;</ph> is set to this value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.BaseURI" /&gt;</ph> は、この値に設定されます。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph> containing the XML data to read.</source>
          <target state="translated">読み取る XML データを格納している <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> class with the specified URL and <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">指定した URL と <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> で、<ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)">
          <source>It is assumed that the <ph id="ph1">`TextReader`</ph> is already set to the correct encoding.</source>
          <target state="translated"><ph id="ph1">`TextReader`</ph> が既に正しいエンコーディングに設定されていることを前提にしています。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)">
          <source>This is used by clients that have already read some things from the stream in a multi-part MIME scenario.</source>
          <target state="translated">マルチパート MIME シナリオでは、ストリームからいくつかの点を開封してクライアントによって使用されます。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)">
          <source>The URL for the file containing the XML data to read.</source>
          <target state="translated">読み取る XML データを格納しているファイルの URL。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph> to use.</source>
          <target state="translated">使用する <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> class with the specified file and <ph id="ph2">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>.</source>
          <target state="translated">指定したファイルと <ph id="ph2">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> で、<ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;paramref name="nt" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="nt" /&gt;</ph> 値は <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)">
          <source>The specified file cannot be found.</source>
          <target state="translated">指定されたファイルが見つかりません。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)">
          <source>Part of the filename or directory cannot be found.</source>
          <target state="translated">ファイル名またはディレクトリの一部が見つかりません。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)">
          <source><ph id="ph1">&lt;paramref name="url" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="url" /&gt;</ph> が空の文字列です。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)">
          <source>The remote filename cannot be resolved.</source>
          <target state="translated">リモート ファイル名を解決できません。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)">
          <source>An error occurred while processing the request.</source>
          <target state="translated">この要求の処理中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)">
          <source><ph id="ph1">&lt;paramref name="url" /&gt;</ph> is not a valid URI.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="url" /&gt;</ph> は有効な URI ではありません。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The stream containing the XML fragment to parse.</source>
          <target state="translated">解析する XML フラグメントを含んでいるストリーム。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeType" /&gt;</ph> of the XML fragment.</source>
          <target state="translated">XML フラグメントの <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeType" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>This also determines what the fragment can contain.</source>
          <target state="translated">これもフラグメントに何を含めることができるかを判断します。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>(See table below.)</source>
          <target state="translated">下の表を参照してください。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlParserContext" /&gt;</ph> in which the <bpt id="p1">&lt;c&gt;</bpt>xmlFragment<ept id="p1">&lt;/c&gt;</ept> is to be parsed.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>xmlFragment<ept id="p1">&lt;/c&gt;</ept> の解析先の <ph id="ph1">&lt;see cref="T:System.Xml.XmlParserContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>This includes the <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> to use, encoding, namespace scope, the current <bpt id="p1">&lt;c&gt;</bpt>xml:lang<ept id="p1">&lt;/c&gt;</ept>, and the <bpt id="p2">&lt;c&gt;</bpt>xml:space<ept id="p2">&lt;/c&gt;</ept> scope.</source>
          <target state="translated">これには、使用する <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>、エンコーディング、名前空間スコープ、現在の<bpt id="p1">&lt;c&gt;</bpt>xml:lang<ept id="p1">&lt;/c&gt;</ept> と <bpt id="p2">&lt;c&gt;</bpt>xml:space<ept id="p2">&lt;/c&gt;</ept> スコープが含まれます。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> class with the specified stream, <ph id="ph2">&lt;see cref="T:System.Xml.XmlNodeType" /&gt;</ph>, and <ph id="ph3">&lt;see cref="T:System.Xml.XmlParserContext" /&gt;</ph>.</source>
          <target state="translated">指定したストリーム、<ph id="ph2">&lt;see cref="T:System.Xml.XmlNodeType" /&gt;</ph> および <ph id="ph3">&lt;see cref="T:System.Xml.XmlParserContext" /&gt;</ph> で <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>This constructor parses the given string as a fragment of XML.</source>
          <target state="translated">このコンス トラクターは、XML の一部として指定した文字列を解析します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>If the XML fragment is an element or attribute, you can bypass the root level rules for well-formed XML documents.</source>
          <target state="translated">XML フラグメントが要素または属性の場合は、整形式 XML ドキュメントのルート レベルの規則をバイパスできます。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The following table lists valid values for <ph id="ph1">`fragType`</ph>.</source>
          <target state="translated">次の表に、有効な値の<ph id="ph1">`fragType`</ph>します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>XmlNodeType</source>
          <target state="translated">XmlNodeType</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>Fragment May Contain</source>
          <target state="translated">フラグメントを含めることがあります。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>Any valid element content (for example, any combination of elements, comments, processing instructions, CDATA sections, text, and entity references).</source>
          <target state="translated">任意の有効な要素の内容 (たとえば、要素、コメント、処理命令、CDATA セクションでは、テキスト、およびエンティティ参照の任意の組み合わせなど)。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>An XML declaration can also be supplied.</source>
          <target state="translated">XML 宣言を渡すこともできます。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>This allows you to specify the encoding for the XML fragment, rather than having to set it on the <ph id="ph1">&lt;xref:System.Xml.XmlParserContext&gt;</ph> object.</source>
          <target state="translated">設定することのではなく、XML フラグメントのエンコーディングを指定できます、<ph id="ph1">&lt;xref:System.Xml.XmlParserContext&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The value of an attribute (the part inside the quotes).</source>
          <target state="translated">属性 (引用符内の部分) の値。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The contents of an entire XML document.</source>
          <target state="translated">XML ドキュメント全体のコンテンツ。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>This enforces document level rules.</source>
          <target state="translated">これは、ドキュメント レベルの規則を強制します。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The reader uses the following to determine the encoding of the stream.</source>
          <target state="translated">リーダーでは、次を使用して、ストリームのエンコーディングを決定します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>Checks the <ph id="ph1">&lt;xref:System.Xml.XmlParserContext.Encoding%2A?displayProperty=nameWithType&gt;</ph> property to determine the encoding.</source>
          <target state="translated">チェック、<ph id="ph1">&lt;xref:System.Xml.XmlParserContext.Encoding%2A?displayProperty=nameWithType&gt;</ph>のエンコーディングを決定するプロパティです。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>If the <ph id="ph1">`Encoding`</ph> property is <ph id="ph2">`null`</ph>, the reader checks for a byte-order mark at the beginning of the stream.</source>
          <target state="translated">場合、<ph id="ph1">`Encoding`</ph>プロパティは<ph id="ph2">`null`</ph>リーダーがストリームの先頭のバイト順マークをチェックします。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>If the <ph id="ph1">`Encoding`</ph> property is <ph id="ph2">`null`</ph>, and no byte-order mark is found, the reader assumes the stream is encoded in UTF-8.</source>
          <target state="translated">場合、<ph id="ph1">`Encoding`</ph>プロパティは<ph id="ph2">`null`</ph>バイト順マークが存在しないと、リーダーは、ストリームが utf-8 でエンコードされた前提としています。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source><ph id="ph1">&lt;paramref name="fragType" /&gt;</ph> is not an Element, Attribute, or Document <ph id="ph2">&lt;see langword="XmlNodeType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fragType" /&gt;</ph> が Element、Attribute、または Document のいずれかの <ph id="ph2">&lt;see langword="XmlNodeType" /&gt;</ph> ではありません。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source><ph id="ph1">&lt;paramref name="xmlFragment" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xmlFragment" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)">
          <source>The URL to use for resolving external resources.</source>
          <target state="translated">外部リソースを解決するために使用する URL。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.BaseURI" /&gt;</ph> is set to this value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.BaseURI" /&gt;</ph> は、この値に設定されます。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>url<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, <ph id="ph2">&lt;see langword="BaseURI" /&gt;</ph> is set to <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>url<ept id="p1">&lt;/c&gt;</ept> が <ph id="ph1">&lt;see langword="null" /&gt;</ph> の場合、<ph id="ph2">&lt;see langword="BaseURI" /&gt;</ph> は <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph> に設定されます。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)">
          <source>The stream containing the XML data to read.</source>
          <target state="translated">読み取る XML データを格納しているストリーム。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph> to use.</source>
          <target state="translated">使用する <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> class with the specified URL, stream and <ph id="ph2">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>.</source>
          <target state="translated">指定した URL、ストリーム、および <ph id="ph2">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> で、<ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;paramref name="input" /&gt;</ph> or <ph id="ph2">&lt;paramref name="nt" /&gt;</ph> value is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> または <ph id="ph2">&lt;paramref name="nt" /&gt;</ph> の値が <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)">
          <source>The URL to use for resolving external resources.</source>
          <target state="translated">外部リソースを解決するために使用する URL。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.BaseURI" /&gt;</ph> is set to this value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.BaseURI" /&gt;</ph> は、この値に設定されます。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>url<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, <ph id="ph2">&lt;see langword="BaseURI" /&gt;</ph> is set to <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>url<ept id="p1">&lt;/c&gt;</ept> が <ph id="ph1">&lt;see langword="null" /&gt;</ph> の場合、<ph id="ph2">&lt;see langword="BaseURI" /&gt;</ph> は <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph> に設定されます。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph> containing the XML data to read.</source>
          <target state="translated">読み取る XML データを格納している <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph> to use.</source>
          <target state="translated">使用する <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> class with the specified URL, <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>.</source>
          <target state="translated">指定した URL、<ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>、および <ph id="ph3">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> で、<ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)">
          <source>It is assumed that the <ph id="ph1">`TextReader`</ph> is already set to the correct encoding.</source>
          <target state="translated"><ph id="ph1">`TextReader`</ph> が既に正しいエンコーディングに設定されていることを前提にしています。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)">
          <source>This is used by clients that have already read some things from the stream in a multi-part MIME scenario.</source>
          <target state="translated">マルチパート MIME シナリオでは、ストリームからいくつかの点を開封してクライアントによって使用されます。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;paramref name="nt" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="nt" /&gt;</ph> 値は <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The string containing the XML fragment to parse.</source>
          <target state="translated">解析する XML フラグメントを含んでいる文字列。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeType" /&gt;</ph> of the XML fragment.</source>
          <target state="translated">XML フラグメントの <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeType" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>This also determines what the fragment string can contain.</source>
          <target state="translated">これもフラグメント文字列に何を含めることができるかを判断します。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>(See table below.)</source>
          <target state="translated">下の表を参照してください。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlParserContext" /&gt;</ph> in which the <bpt id="p1">&lt;c&gt;</bpt>xmlFragment<ept id="p1">&lt;/c&gt;</ept> is to be parsed.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>xmlFragment<ept id="p1">&lt;/c&gt;</ept> の解析先の <ph id="ph1">&lt;see cref="T:System.Xml.XmlParserContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>This includes the <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> to use, encoding, namespace scope, the current <bpt id="p1">&lt;c&gt;</bpt>xml:lang<ept id="p1">&lt;/c&gt;</ept>, and the <bpt id="p2">&lt;c&gt;</bpt>xml:space<ept id="p2">&lt;/c&gt;</ept> scope.</source>
          <target state="translated">これには、使用する <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>、エンコーディング、名前空間スコープ、現在の<bpt id="p1">&lt;c&gt;</bpt>xml:lang<ept id="p1">&lt;/c&gt;</ept> と <bpt id="p2">&lt;c&gt;</bpt>xml:space<ept id="p2">&lt;/c&gt;</ept> スコープが含まれます。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> class with the specified string, <ph id="ph2">&lt;see cref="T:System.Xml.XmlNodeType" /&gt;</ph>, and <ph id="ph3">&lt;see cref="T:System.Xml.XmlParserContext" /&gt;</ph>.</source>
          <target state="translated">指定した文字列、<ph id="ph2">&lt;see cref="T:System.Xml.XmlNodeType" /&gt;</ph>、および <ph id="ph3">&lt;see cref="T:System.Xml.XmlParserContext" /&gt;</ph> で、<ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>This constructor parses the given string as a fragment of XML.</source>
          <target state="translated">このコンス トラクターは、XML の一部として指定した文字列を解析します。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>If the XML fragment is an element or attribute, you can bypass the root level rules for well-formed XML documents.</source>
          <target state="translated">XML フラグメントが要素または属性の場合は、整形式 XML ドキュメントのルート レベルの規則をバイパスできます。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>This constructor can handle strings returned from <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXml%2A&gt;</ph>.</source>
          <target state="translated">このコンス トラクターから返される文字列を処理できる<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXml%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The following table lists valid values for <ph id="ph1">`fragType`</ph> and how the reader parses each of the different node types.</source>
          <target state="translated">次の表に、有効な値の<ph id="ph1">`fragType`</ph>リーダーがの別のノード型はそれぞれを解析する方法です。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>XmlNodeType</source>
          <target state="translated">XmlNodeType</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>Fragment May Contain</source>
          <target state="translated">フラグメントを含めることがあります。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>Element</source>
          <target state="translated">要素</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>Any valid element content (for example, any combination of elements, comments, processing instructions, CDATA sections, text, and entity references).</source>
          <target state="translated">任意の有効な要素の内容 (たとえば、要素、コメント、処理命令、CDATA セクションでは、テキスト、およびエンティティ参照の任意の組み合わせなど)。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>An XML declaration can also be supplied.</source>
          <target state="translated">XML 宣言を渡すこともできます。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>This allows you to specify the encoding for the XML fragment, rather than having to set it on the <ph id="ph1">&lt;xref:System.Xml.XmlParserContext&gt;</ph> object.</source>
          <target state="translated">設定することのではなく、XML フラグメントのエンコーディングを指定できます、<ph id="ph1">&lt;xref:System.Xml.XmlParserContext&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>Attribute</source>
          <target state="translated">属性</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The value of an attribute (the part inside the quotes).</source>
          <target state="translated">属性 (引用符内の部分) の値。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>Document</source>
          <target state="translated">ドキュメント</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The contents of an entire XML document.</source>
          <target state="translated">XML ドキュメント全体のコンテンツ。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>This enforces document level rules.</source>
          <target state="translated">これは、ドキュメント レベルの規則を強制します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The following example parses an XML fragment.</source>
          <target state="translated">次の例では、XML フラグメントを解析します。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>It uses the <ph id="ph1">`XmlParserContext`</ph> and its <ph id="ph2">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> to handle namespace resolution.</source>
          <target state="translated">使用して、<ph id="ph1">`XmlParserContext`</ph>とその<ph id="ph2">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph>を名前空間の解決を処理します。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source><ph id="ph1">&lt;paramref name="fragType" /&gt;</ph> is not an <ph id="ph2">&lt;see langword="Element" /&gt;</ph>, <ph id="ph3">&lt;see langword="Attribute" /&gt;</ph>, or <ph id="ph4">&lt;see langword="Document" /&gt;</ph><ph id="ph5">&lt;see langword="XmlNodeType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fragType" /&gt;</ph> が <ph id="ph2">&lt;see langword="Element" /&gt;</ph>、<ph id="ph3">&lt;see langword="Attribute" /&gt;</ph>、または <ph id="ph4">&lt;see langword="Document" /&gt;</ph> のいずれかの <ph id="ph5">&lt;see langword="XmlNodeType" /&gt;</ph> ではありません。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source><ph id="ph1">&lt;paramref name="xmlFragment" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xmlFragment" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.AttributeCount">
          <source>Gets the number of attributes on the current node.</source>
          <target state="translated">現在のノードにある属性の数を取得します。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.AttributeCount">
          <source>The number of attributes on the current node.</source>
          <target state="translated">現在のノードにある属性の数。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.AttributeCount">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.AttributeCount">
          <source>This property is relevant to <ph id="ph1">`Element`</ph>, <ph id="ph2">`DocumentType`</ph> and <ph id="ph3">`XmlDeclaration`</ph> nodes only.</source>
          <target state="translated">このプロパティは<ph id="ph1">`Element`</ph>、<ph id="ph2">`DocumentType`</ph>と<ph id="ph3">`XmlDeclaration`</ph>ノードのみです。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.AttributeCount">
          <source>(Other node types do not have attributes.)</source>
          <target state="translated">(他のノード型属性がありません。)</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.AttributeCount">
          <source>The following example displays all attributes on the current node.</source>
          <target state="translated">次の例では、現在のノードにすべての属性を表示します。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.BaseURI">
          <source>Gets the base URI of the current node.</source>
          <target state="translated">現在のノードのベース URI を取得します。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.BaseURI">
          <source>The base URI of the current node.</source>
          <target state="translated">現在のノードのベース URI。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.BaseURI">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.BaseURI">
          <source>A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</source>
          <target state="translated">ネットワークに接続された XML ドキュメントでは、さまざまな W3C 標準包含メカニズムを使用して集計データのチャンクで構成され、したがって各所に由来するノードが含まれます。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.BaseURI">
          <source>DTD entities are an example of this, but this is not limited to DTDs.</source>
          <target state="translated">DTD エンティティが、この例が、これは Dtd に限定されません。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.BaseURI">
          <source>The base URI tells you where these nodes came from.</source>
          <target state="translated">ベース URI を示しますからこれらのノードの入手先。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.BaseURI">
          <source>If there is no base URI for the nodes being returned (for example, they were parsed from an in-memory string), <ph id="ph1">`String.Empty`</ph> is returned.</source>
          <target state="translated">返されるノードのベース URI がないかどうか (たとえば、解析されたメモリ内の文字列から)、<ph id="ph1">`String.Empty`</ph>が返されます。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.BaseURI">
          <source>The following example displays the base URI for each of the nodes.</source>
          <target state="translated">次の例では、各ノードのベース URI を表示します。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.BaseURI">
          <source>The example uses the file, <ph id="ph1">`baseuri.xml`</ph>, as input.</source>
          <target state="translated">この例では、<ph id="ph1">`baseuri.xml`</ph>の入力として、します。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.CanReadBinaryContent">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> implements the binary content read methods.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> がバイナリ コンテンツ用の読み取りメソッドを実装するかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.CanReadBinaryContent">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the binary content read methods are implemented; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">バイナリ コンテンツ用の読み取りメソッドを実装する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.CanReadBinaryContent">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> class always returns <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> クラスは、常に <ph id="ph2">&lt;see langword="true" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.CanReadBinaryContent">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.CanReadBinaryContent">
          <source>The binary content read methods include the <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlTextReader.ReadElementContentAsBase64%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.XmlTextReader.ReadElementContentAsBinHex%2A&gt;</ph> methods.</source>
          <target state="translated">バイナリ コンテンツを読み取る方法を示します、 <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Xml.XmlTextReader.ReadElementContentAsBase64%2A&gt;</ph>、および<ph id="ph4">&lt;xref:System.Xml.XmlTextReader.ReadElementContentAsBinHex%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.CanReadValueChunk">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> implements the <ph id="ph2">&lt;see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> が <ph id="ph2">&lt;see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /&gt;</ph> メソッドを実装しているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.CanReadValueChunk">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> implements the <ph id="ph3">&lt;see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /&gt;</ph> method; otherwise <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> が <ph id="ph3">&lt;see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /&gt;</ph> メソッドを実装している場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.CanReadValueChunk">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> class always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> クラスは、常に <ph id="ph2">&lt;see langword="false" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.CanReadValueChunk">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.CanReadValueChunk">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> throws a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> if the <ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph>スロー、<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>場合、<ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.CanResolveEntity">
          <source>Gets a value indicating whether this reader can parse and resolve entities.</source>
          <target state="translated">このリーダーがエンティティを解析および解決できるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.CanResolveEntity">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader can parse and resolve entities; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">リーダーがエンティティを解析および解決できる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.CanResolveEntity">
          <source>The <ph id="ph1">&lt;see langword="XmlTextReader" /&gt;</ph> class always returns <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlTextReader" /&gt;</ph> クラスは、常に <ph id="ph2">&lt;see langword="true" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.CanResolveEntity">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.CanResolveEntity">
          <source>This is a change in the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph> release.</source>
          <target state="translated">これは、変更、<ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>を解放します。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.CanResolveEntity">
          <source>In previous versions, the <ph id="ph1">`XmlTextReader`</ph> class could not resolve entities and <ph id="ph2">`CanResolveEntity`</ph> always returned <ph id="ph3">`false`</ph>.</source>
          <target state="translated">以前のバージョンで、<ph id="ph1">`XmlTextReader`</ph>クラスは、エンティティを解決できませんでしたと<ph id="ph2">`CanResolveEntity`</ph>常に返される<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.Close">
          <source>Changes the <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.ReadState" /&gt;</ph> to <ph id="ph2">&lt;see langword="Closed" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.ReadState" /&gt;</ph> を <ph id="ph2">&lt;see langword="Closed" /&gt;</ph> に変更します。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.Close">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.Close">
          <source>This method also releases any resources held while reading.</source>
          <target state="translated">このメソッドは、読み取り中に保持されているすべてのリソースも解放します。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.Close">
          <source>If this reader was constructed using a stream, this method also calls <ph id="ph1">`Close`</ph> on the underlying stream.</source>
          <target state="translated">このリーダーは、ストリームを使用して構築された場合、このメソッドも呼び出します<ph id="ph1">`Close`</ph>基になるストリーム。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.Close">
          <source>If <ph id="ph1">`Close`</ph> has already been called, no action is performed.</source>
          <target state="translated">場合<ph id="ph1">`Close`</ph>は既に呼び出されると、アクションは実行されません。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.Depth">
          <source>Gets the depth of the current node in the XML document.</source>
          <target state="translated">XML ドキュメント内の現在のノードの深さを取得します。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Depth">
          <source>The depth of the current node in the XML document.</source>
          <target state="translated">XML ドキュメント内の現在のノードの深さ。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Depth">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Depth">
          <source>The following example displays each node including its depth, line number, and line position.</source>
          <target state="translated">次の例では、各ノードの深さ、行番号、行の位置などが表示されます。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.DtdProcessing">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Xml.DtdProcessing" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.DtdProcessing" /&gt;</ph> 列挙体を取得または設定します。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.DtdProcessing">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.DtdProcessing" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.DtdProcessing" /&gt;</ph> 列挙体。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.DtdProcessing">
          <source>The <ph id="ph1">&lt;xref:System.Xml.DtdProcessing&gt;</ph> enumeration contains the <ph id="ph2">&lt;xref:System.Xml.DtdProcessing.Prohibit&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.DtdProcessing.Ignore&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.DtdProcessing.Parse&gt;</ph> enumerators.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.DtdProcessing&gt;</ph>列挙が含まれています、 <ph id="ph2">&lt;xref:System.Xml.DtdProcessing.Prohibit&gt;</ph>、 <ph id="ph3">&lt;xref:System.Xml.DtdProcessing.Ignore&gt;</ph>、および<ph id="ph4">&lt;xref:System.Xml.DtdProcessing.Parse&gt;</ph>列挙子。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.DtdProcessing">
          <source><ph id="ph1">&lt;xref:System.Xml.DtdProcessing.Parse&gt;</ph> is the default behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.DtdProcessing.Parse&gt;</ph> 既定の動作です。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.DtdProcessing">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.DtdProcessing%2A&gt;</ph> property replaces the <ph id="ph2">`ProhibitDTD`</ph> property and adds the ability to ignore the DOCTYPE element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlTextReader.DtdProcessing%2A&gt;</ph>プロパティ置換、<ph id="ph2">`ProhibitDTD`</ph>プロパティ DOCTYPE 要素を無視する機能を追加します。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.DtdProcessing">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.DtdProcessing%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType&gt;</ph>, the <ph id="ph3">&lt;xref:System.Xml.XmlTextReader&gt;</ph> will not report the DTDs.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Xml.XmlTextReader.DtdProcessing%2A&gt;</ph>プロパティに設定されている<ph id="ph2">&lt;xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType&gt;</ph>、 <ph id="ph3">&lt;xref:System.Xml.XmlTextReader&gt;</ph> Dtd を報告しません。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.DtdProcessing">
          <source>This means that the DTD/DOCTYPE will be lost on output.</source>
          <target state="translated">これは、DTD/DOCTYPE が出力時に失われるということを意味します。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.Encoding">
          <source>Gets the encoding of the document.</source>
          <target state="translated">ドキュメントのエンコーディングを取得します。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Encoding">
          <source>The encoding value.</source>
          <target state="translated">エンコーディング値。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Encoding">
          <source>If no encoding attribute exists, and there is no byte-order mark, this defaults to UTF-8.</source>
          <target state="translated">エンコーディング属性が存在せず、バイト順のマークもない場合は、既定として UTF-8 が使用されます。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Encoding">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Encoding">
          <source>Because <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Text.Encoding?displayProperty=nameWithType&gt;</ph> class, <ph id="ph3">`XmlTextReader`</ph> also supports all encodings supported by that class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph>を使用して、<ph id="ph2">&lt;xref:System.Text.Encoding?displayProperty=nameWithType&gt;</ph>クラス、<ph id="ph3">`XmlTextReader`</ph>もそのクラスでサポートされているすべてのエンコーディングをサポートします。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Encoding">
          <source>The exception to this is any encoding, such as UTF-7 or EBCDIC, that maps the <ph id="ph1">`&lt;?xml`</ph> sequence to different byte values than UTF-8.</source>
          <target state="translated">この例外は、エンコーディング、utf-7、マップする EBCDIC など、<ph id="ph1">`&lt;?xml`</ph>シーケンスを utf-8 以外のバイト値。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.EntityHandling">
          <source>Gets or sets a value that specifies how the reader handles entities.</source>
          <target state="translated">リーダーによるエンティティの処理方法を指定する値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EntityHandling">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.EntityHandling" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.EntityHandling" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EntityHandling">
          <source>If no <ph id="ph1">&lt;see langword="EntityHandling" /&gt;</ph> is specified, it defaults to <ph id="ph2">&lt;see langword="EntityHandling.ExpandCharEntities" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="EntityHandling" /&gt;</ph> が指定されていない場合は、既定で <ph id="ph2">&lt;see langword="EntityHandling.ExpandCharEntities" /&gt;</ph> に設定されます。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EntityHandling">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EntityHandling">
          <source>This property can be changed on the fly and takes effect after the next <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.Read%2A&gt;</ph> call.</source>
          <target state="translated">次の後に実行時とでは有効でこのプロパティを変更できます<ph id="ph1">&lt;xref:System.Xml.XmlTextReader.Read%2A&gt;</ph>呼び出します。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EntityHandling">
          <source>When <ph id="ph1">`EntityHandling`</ph> is set to <ph id="ph2">`ExpandCharEntities`</ph>, attribute values are only partially normalized.</source>
          <target state="translated">ときに<ph id="ph1">`EntityHandling`</ph>に設定されている<ph id="ph2">`ExpandCharEntities`</ph>属性値は部分的に正規化します。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EntityHandling">
          <source>The reader normalizes each individual text node independently from the content of adjacent entity reference nodes.</source>
          <target state="translated">リーダーは、隣接するエンティティ参照ノードのコンテンツから個別に各個々 のテキスト ノードを正規化します。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EntityHandling">
          <source>To illustrate the difference between the entity handling modes consider the following XML:</source>
          <target state="translated">エンティティ間の違いを説明するためには、処理モードは、次の XML を検討します。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EntityHandling">
          <source>When <ph id="ph1">`EntityHandling`</ph> is set to <ph id="ph2">`ExpandEntities`</ph> the "doc" element node contains one text node with the expanded entity text:</source>
          <target state="translated">ときに<ph id="ph1">`EntityHandling`</ph>に設定されている<ph id="ph2">`ExpandEntities`</ph>"doc"要素ノードに展開されたエンティティのテキストを含む 1 つのテキスト ノードが含まれています。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EntityHandling">
          <source>Depth</source>
          <target state="translated">奥行</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EntityHandling">
          <source>Node type</source>
          <target state="translated">ノード型</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EntityHandling">
          <source>Name</source>
          <target state="translated">name</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EntityHandling">
          <source>Value</source>
          <target state="translated">[値]</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EntityHandling">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EntityHandling">
          <source>A 123</source>
          <target state="translated">A 123</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EntityHandling">
          <source>When <ph id="ph1">`EntityHandling`</ph> is set to <ph id="ph2">`ExpandCharEntites`</ph>, and <ph id="ph3">&lt;xref:System.Xml.XmlTextReader.WhitespaceHandling%2A&gt;</ph> is set to <ph id="ph4">`Significant`</ph> or <ph id="ph5">`All`</ph>, the "doc" element expands the character entity and returns the general entity as a node:</source>
          <target state="translated">ときに<ph id="ph1">`EntityHandling`</ph>に設定されている<ph id="ph2">`ExpandCharEntites`</ph>、および<ph id="ph3">&lt;xref:System.Xml.XmlTextReader.WhitespaceHandling%2A&gt;</ph>に設定されている<ph id="ph4">`Significant`</ph>または<ph id="ph5">`All`</ph>、"doc"要素を文字エンティティを展開して、一般的なエンティティ ノードとしてを返します。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EntityHandling">
          <source>Depth</source>
          <target state="translated">奥行</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EntityHandling">
          <source>Node type</source>
          <target state="translated">ノード型</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EntityHandling">
          <source>Name</source>
          <target state="translated">name</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EntityHandling">
          <source>Value</source>
          <target state="translated">[値]</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EntityHandling">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EntityHandling">
          <source>A</source>
          <target state="translated">A</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EntityHandling">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EntityHandling">
          <source>num</source>
          <target state="translated">num</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EntityHandling">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.EOF">
          <source>Gets a value indicating whether the reader is positioned at the end of the stream.</source>
          <target state="translated">リーダーがストリームの末尾に配置されているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EOF">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader is positioned at the end of the stream; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ストリームの末尾にリーダーが配置されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.EOF">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlTextReader">
          <source>Gets the value of an attribute.</source>
          <target state="translated">属性の値を取得します。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.GetAttribute(System.Int32)">
          <source>The index of the attribute.</source>
          <target state="translated">属性のインデックス。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.GetAttribute(System.Int32)">
          <source>The index is zero-based.</source>
          <target state="translated">インデックスの値は、0 から始まります。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.GetAttribute(System.Int32)">
          <source>(The first attribute has index 0.)</source>
          <target state="translated">最初の属性のインデックスは 0 です。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.GetAttribute(System.Int32)">
          <source>Gets the value of the attribute with the specified index.</source>
          <target state="translated">指定したインデックスの属性の値を取得します。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.GetAttribute(System.Int32)">
          <source>The value of the specified attribute.</source>
          <target state="translated">指定した属性の値。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetAttribute(System.Int32)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetAttribute(System.Int32)">
          <source>This method does not move the reader.</source>
          <target state="translated">このメソッドは、リーダーを移動しません。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.GetAttribute(System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="i" /&gt;</ph> parameter is less than 0 or greater than or equal to <ph id="ph2">&lt;see cref="P:System.Xml.XmlTextReader.AttributeCount" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="i" /&gt;</ph> パラメーターが 0 未満か、<ph id="ph2">&lt;see cref="P:System.Xml.XmlTextReader.AttributeCount" /&gt;</ph> 以上です。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.GetAttribute(System.String)">
          <source>The qualified name of the attribute.</source>
          <target state="translated">属性の限定名。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.GetAttribute(System.String)">
          <source>Gets the value of the attribute with the specified name.</source>
          <target state="translated">指定した名前の属性の値を取得します。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.GetAttribute(System.String)">
          <source>The value of the specified attribute.</source>
          <target state="translated">指定した属性の値。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.GetAttribute(System.String)">
          <source>If the attribute is not found, <ph id="ph1">&lt;see langword="null" /&gt;</ph> is returned.</source>
          <target state="translated">指定した属性が見つからない場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph> が返されます。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetAttribute(System.String)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetAttribute(System.String)">
          <source>This method does not move the reader.</source>
          <target state="translated">このメソッドは、リーダーを移動しません。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetAttribute(System.String)">
          <source>If the reader is positioned on a <ph id="ph1">`DocumentType`</ph> node, this method can be used to get the PUBLIC and SYSTEM literals, for example, <ph id="ph2">`reader.GetAttribute("PUBLIC")`</ph></source>
          <target state="translated">リーダーが配置されている場合、 <ph id="ph1">`DocumentType`</ph>  ノードを取得、公開キーとシステム リテラル、たとえば、このメソッドを使用できます <ph id="ph2">`reader.GetAttribute("PUBLIC")`</ph></target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetAttribute(System.String)">
          <source>The following example gets the value of the ISBN attribute.</source>
          <target state="translated">次の例では、ISBN 属性の値を取得します。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetAttribute(System.String)">
          <source>The example uses the file, <ph id="ph1">`attrs.xml`</ph>, as input.</source>
          <target state="translated">この例では、<ph id="ph1">`attrs.xml`</ph>の入力として、します。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">属性のローカル名。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">属性の名前空間 URI。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)">
          <source>Gets the value of the attribute with the specified local name and namespace URI.</source>
          <target state="translated">指定したローカル名および名前空間 URI に関連付けられた属性の値を取得します。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)">
          <source>The value of the specified attribute.</source>
          <target state="translated">指定した属性の値。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)">
          <source>If the attribute is not found, <ph id="ph1">&lt;see langword="null" /&gt;</ph> is returned.</source>
          <target state="translated">指定した属性が見つからない場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph> が返されます。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)">
          <source>This method does not move the reader.</source>
          <target state="translated">このメソッドは、リーダーを移動しません。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)">
          <source>The following XML contains an attribute in a specific namespace:</source>
          <target state="translated">次の XML には、特定の名前空間内の属性が含まれています。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)">
          <source>You can lookup the <ph id="ph1">`dt:type`</ph> attribute using one argument (prefix and local name) or two arguments (local name and namespace URI):</source>
          <target state="translated">検索することができます、<ph id="ph1">`dt:type`</ph>属性の 1 つの引数 (プレフィックスとローカル名) または 2 つの引数 (ローカル名と名前空間 URI) を使用します。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)">
          <source>To lookup the <ph id="ph1">`xmlns:dt`</ph> attribute, use one of the following arguments:</source>
          <target state="translated">参照する、<ph id="ph1">`xmlns:dt`</ph>属性は、次の引数のいずれかを使用します。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)">
          <source>You can also get this information using the <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.Prefix%2A&gt;</ph> property.</source>
          <target state="translated">使用してこの情報を取得することも、<ph id="ph1">&lt;xref:System.Xml.XmlTextReader.Prefix%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceScope" /&gt;</ph> value that specifies the type of namespace nodes to return.</source>
          <target state="translated">返される名前空間ノードの種類を指定する <ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceScope" /&gt;</ph> 値。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>Gets a collection that contains all namespaces currently in-scope.</source>
          <target state="translated">現在スコープ内にあるすべての名前空間が含まれたコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object that contains all the current in-scope namespaces.</source>
          <target state="translated">現在スコープ内にあるすべての名前空間が含まれた <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>If the reader is not positioned on an element, an empty dictionary (no namespaces) is returned.</source>
          <target state="translated">要素にリーダーが配置されていない場合は、名前空間が含まれていない空のディクショナリが返されます。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>The dictionary consists of a collection of namespace names keyed by prefix.</source>
          <target state="translated">ディクショナリは、プレフィックスによってキー指定された名前空間名のコレクションで構成されます。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>It can be used to enumerate the in-scope namespaces.</source>
          <target state="translated">スコープに名前空間を列挙するために使用します。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>The dictionary is a disconnected copy of the namespace list of the reader.</source>
          <target state="translated">ディクショナリは、リーダーの名前空間の一覧の切断されたコピーです。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>It remains unchanged as the reader position, current in-scope namespace list, changes.</source>
          <target state="translated">リーダーの位置、現在のスコープ内の名前空間の一覧、変更内容は変更されません。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>The following table describes how the <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceScope&gt;</ph> enumeration value affects the whether or not the default and built-in namespaces are returned by <ph id="ph2">&lt;xref:System.Xml.XmlTextReader.GetNamespacesInScope%2A&gt;</ph>.</source>
          <target state="translated">次の表方法、<ph id="ph1">&lt;xref:System.Xml.XmlNamespaceScope&gt;</ph>列挙値に影響するかまたはない、既定値と組み込みの名前空間がによって返される<ph id="ph2">&lt;xref:System.Xml.XmlTextReader.GetNamespacesInScope%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>XmlNamespaceScope Value</source>
          <target state="translated">XmlNamespaceScope 値</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>xmlns:xml</source>
          <target state="translated">xmlns:xml</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>xmlns:xmlns</source>
          <target state="translated">xmlns:xmlns</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>xmlns=""</source>
          <target state="translated">xmlns=""</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>yes</source>
          <target state="translated">可</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>no</source>
          <target state="translated">Ｘ</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>no</source>
          <target state="translated">Ｘ</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>no</source>
          <target state="translated">Ｘ</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>no</source>
          <target state="translated">Ｘ</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>no</source>
          <target state="translated">Ｘ</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>no</source>
          <target state="translated">Ｘ</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>no</source>
          <target state="translated">Ｘ</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>yes</source>
          <target state="translated">可</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.GetRemainder">
          <source>Gets the remainder of the buffered XML.</source>
          <target state="translated">バッファー内の XML の剰余を取得します。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.GetRemainder">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> containing the remainder of the buffered XML.</source>
          <target state="translated">バッファー内の XML の剰余を格納している <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetRemainder">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetRemainder">
          <source>Because <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> does a buffered <ph id="ph2">`Read`</ph>, it must be able to return the remainder of the unused buffer so that no data is lost.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph>をバッファーは<ph id="ph2">`Read`</ph>データが失われないように、使用されていないバッファーの残りの部分を返すできる必要があります。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetRemainder">
          <source>This allows protocols (such as multi-part MIME) to package XML in the same stream as other things.</source>
          <target state="translated">これにより、パッケージの他のものと同じストリーム内の XML をマルチパート MIME) などのプロトコルです。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetRemainder">
          <source>After calling this method, <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.EOF%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">このメソッドを呼び出した後<ph id="ph1">&lt;xref:System.Xml.XmlTextReader.EOF%2A&gt;</ph>に設定されている<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetRemainder">
          <source>The following example reads the first part of an XML document and then uses <ph id="ph1">`GetRemainder`</ph> to complete reading the document using a second reader.</source>
          <target state="translated">次の例は、XML ドキュメントの最初の部分を読み取りを使用して、<ph id="ph1">`GetRemainder`</ph>を 2 番目のリーダーを使用してドキュメントの読み取りを完了します。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.GetRemainder">
          <source>The example uses the input file <ph id="ph1">`tworeads.xml`</ph>.</source>
          <target state="translated">この例では、入力<ph id="ph1">`tworeads.xml`</ph>です。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.HasLineInfo">
          <source>Gets a value indicating whether the class can return line information.</source>
          <target state="translated">クラスが行情報を返すことができるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.HasLineInfo">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the class can return line information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">クラスが行情報を返せる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.HasLineInfo">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.HasValue">
          <source>Gets a value indicating whether the current node can have a <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.Value" /&gt;</ph> other than <ph id="ph2">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated">現在のノードが <ph id="ph2">&lt;see langword="String.Empty" /&gt;</ph> 以外の <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.Value" /&gt;</ph> を保持できるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.HasValue">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the node on which the reader is currently positioned can have a <ph id="ph2">&lt;see langword="Value" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">リーダーが現在配置されているノードが <ph id="ph2">&lt;see langword="Value" /&gt;</ph> を持つことができる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.HasValue">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.HasValue">
          <source>The following table lists node types that have a value to return.</source>
          <target state="translated">返す値を持つノード型の一覧を次の表に示します。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.HasValue">
          <source>Node type</source>
          <target state="translated">ノード型</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.HasValue">
          <source>Value</source>
          <target state="translated">[値]</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.HasValue">
          <source>The value of the attribute.</source>
          <target state="translated">属性の値。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.HasValue">
          <source>The content of the CDATA section.</source>
          <target state="translated">CDATA セクションの内容。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.HasValue">
          <source>The content of the comment.</source>
          <target state="translated">コメントの内容。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.HasValue">
          <source>The internal subset.</source>
          <target state="translated">内部サブセット。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.HasValue">
          <source>The entire content, excluding the target.</source>
          <target state="translated">ターゲットを除く全内容。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.HasValue">
          <source>The white space between markup in a mixed content model.</source>
          <target state="translated">混合コンテンツ モデル内のマークアップ間の空白。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.HasValue">
          <source>The content of the text node.</source>
          <target state="translated">テキスト ノードの内容。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.HasValue">
          <source>The white space between markup.</source>
          <target state="translated">マークアップ間の空白。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.HasValue">
          <source>The content of the declaration.</source>
          <target state="translated">宣言の内容。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.HasValue">
          <source>The following example displays the value for every node that can have a value.</source>
          <target state="translated">次の例では、値を持つことができるすべてのノードの値を表示します。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.HasValue">
          <source>The example uses the file, <ph id="ph1">`book1.xml`</ph>, as input.</source>
          <target state="translated">この例では、<ph id="ph1">`book1.xml`</ph>の入力として、します。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.IsDefault">
          <source>Gets a value indicating whether the current node is an attribute that was generated from the default value defined in the DTD or schema.</source>
          <target state="translated">現在のノードが、DTD またはスキーマで定義された既定値から生成された属性であるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.IsDefault">
          <source>This property always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">このプロパティは常に <ph id="ph1">&lt;see langword="false" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.IsDefault">
          <source>(<ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> does not expand default attributes.)</source>
          <target state="translated">(<ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> は既定の属性を展開しません。)</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.IsDefault">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.IsDefault">
          <source>This property applies only to attribute nodes.</source>
          <target state="translated">このプロパティは、属性ノードにのみ適用されます。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.IsEmptyElement">
          <source>Gets a value indicating whether the current node is an empty element (for example, <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>MyElement/<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>).</source>
          <target state="translated">現在のノードが空の要素 (<bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>MyElement/<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept> など) かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.IsEmptyElement">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current node is an element (<ph id="ph2">&lt;see cref="P:System.Xml.XmlTextReader.NodeType" /&gt;</ph> equals <ph id="ph3">&lt;see langword="XmlNodeType.Element" /&gt;</ph>) that ends with <bpt id="p1">&lt;c&gt;</bpt><ph id="ph4">/</ph><ph id="ph5">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 現在のノードが要素の場合 (<ph id="ph2">&lt;see cref="P:System.Xml.XmlTextReader.NodeType" /&gt;</ph> equals <ph id="ph3">&lt;see langword="XmlNodeType.Element" /&gt;</ph>) で終わるを<bpt id="p1">&lt;c&gt;</bpt> <ph id="ph4">/</ph> <ph id="ph5">&amp;gt;</ph> <ept id="p1">&lt;/c&gt;</ept>、それ以外の<ph id="ph6">&lt;see langword="false" /&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.IsEmptyElement">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.IsEmptyElement">
          <source>This property enables you to determine the difference between the following:</source>
          <target state="translated">このプロパティにより、次のことが区別できます。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.IsEmptyElement">
          <source><ph id="ph1">`&lt;item num="123"/&gt;`</ph> (<ph id="ph2">`IsEmptyElement`</ph> is <ph id="ph3">`true`</ph>).</source>
          <target state="translated"><ph id="ph1">`&lt;item num="123"/&gt;`</ph> (<ph id="ph2">`IsEmptyElement`</ph>は<ph id="ph3">`true`</ph>)。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.IsEmptyElement">
          <source><ph id="ph1">`&lt;item num="123"&gt;`</ph> (<ph id="ph2">`IsEmptyElement`</ph> is <ph id="ph3">`false`</ph>, although element content is empty).</source>
          <target state="translated"><ph id="ph1">`&lt;item num="123"&gt;`</ph> (<ph id="ph2">`IsEmptyElement`</ph>は<ph id="ph3">`false`</ph>要素の内容が空ですが、)。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.IsEmptyElement">
          <source>A corresponding <ph id="ph1">`EndElement`</ph> node is not generated for empty elements.</source>
          <target state="translated">対応する<ph id="ph1">`EndElement`</ph>空の要素のノードは生成されません。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.IsEmptyElement">
          <source><ph id="ph1">`IsEmptyElement`</ph> simply reports whether or not the element in the source document had an end element tag.</source>
          <target state="translated"><ph id="ph1">`IsEmptyElement`</ph> 単に、ソース ドキュメント内の要素がある終了要素タグかどうかを報告します。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.IsEmptyElement">
          <source>The following example displays the text content of each element.</source>
          <target state="translated">次の例では、各要素のテキストの内容を表示します。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.IsEmptyElement">
          <source>The example uses the file, <ph id="ph1">`elems.xml`</ph>, as input.</source>
          <target state="translated">この例では、<ph id="ph1">`elems.xml`</ph>の入力として、します。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.LineNumber">
          <source>Gets the current line number.</source>
          <target state="translated">現在の行番号を取得します。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.LineNumber">
          <source>The current line number.</source>
          <target state="translated">現在の行番号。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.LineNumber">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.LineNumber">
          <source>This property is most commonly used for error reporting, but can be called at any time.</source>
          <target state="translated">このプロパティは、エラーの報告、最もよく使用されますが、いつでも呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.LineNumber">
          <source>The starting value for this property is <ph id="ph1">`1`</ph>.</source>
          <target state="translated">このプロパティは、開始値<ph id="ph1">`1`</ph>です。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.LineNumber">
          <source>Combined with <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.LinePosition%2A&gt;</ph>, a value of <ph id="ph2">`1,1`</ph> indicates the start of the document.</source>
          <target state="translated">組み合わせて<ph id="ph1">&lt;xref:System.Xml.XmlTextReader.LinePosition%2A&gt;</ph>、値の<ph id="ph2">`1,1`</ph>ドキュメントの開始を示します。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.LineNumber">
          <source>The following example displays each node including its depth, line number, and line position.</source>
          <target state="translated">次の例では、各ノードの深さ、行番号、行の位置などが表示されます。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.LinePosition">
          <source>Gets the current line position.</source>
          <target state="translated">現在の行の位置を取得します。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.LinePosition">
          <source>The current line position.</source>
          <target state="translated">現在の行の位置。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.LinePosition">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.LinePosition">
          <source>This property is most commonly used for error reporting, but can be called at any time.</source>
          <target state="translated">このプロパティは、エラーの報告、最もよく使用されますが、いつでも呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.LinePosition">
          <source>The property's starting value is <ph id="ph1">`1`</ph>.</source>
          <target state="translated">プロパティの開始値は<ph id="ph1">`1`</ph>します。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.LinePosition">
          <source>The position indicated is the first character of text in the markup.</source>
          <target state="translated">指定された位置は、マークアップのテキストの最初の文字です。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.LinePosition">
          <source>On the first line of the preceding XML text, a <ph id="ph1">`LinePosition`</ph> of <ph id="ph2">`2`</ph> corresponds to the character <ph id="ph3">`r`</ph>; on the second line, a <ph id="ph4">`LinePosition`</ph> of <ph id="ph5">`5`</ph> corresponds to the character <ph id="ph6">`t`</ph>; and on the third line, a <ph id="ph7">`LinePosition`</ph> of <ph id="ph8">`3`</ph> corresponds to the character <ph id="ph9">`r`</ph>.</source>
          <target state="translated">上記の XML テキストの最初の行で、<ph id="ph1">`LinePosition`</ph>の<ph id="ph2">`2`</ph>文字に対応<ph id="ph3">`r`</ph>以外の場合は、2 行目で、<ph id="ph4">`LinePosition`</ph>の<ph id="ph5">`5`</ph>文字に対応<ph id="ph6">`t`</ph>; と 3 番目の行に、<ph id="ph7">`LinePosition`</ph>の<ph id="ph8">`3`</ph>文字に対応<ph id="ph9">`r`</ph>です。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.LinePosition">
          <source>Combined with <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.LineNumber%2A&gt;</ph>, a value of <ph id="ph2">`1,1`</ph> indicates the start of the document.</source>
          <target state="translated">組み合わせて<ph id="ph1">&lt;xref:System.Xml.XmlTextReader.LineNumber%2A&gt;</ph>、値の<ph id="ph2">`1,1`</ph>ドキュメントの開始を示します。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.LinePosition">
          <source>The following example displays each node including its depth, line number, and line position.</source>
          <target state="translated">次の例では、各ノードの深さ、行番号、行の位置などが表示されます。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.LocalName">
          <source>Gets the local name of the current node.</source>
          <target state="translated">現在のノードのローカル名を取得します。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.LocalName">
          <source>The name of the current node with the prefix removed.</source>
          <target state="translated">プリフィックスを削除した現在のノードの名前。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.LocalName">
          <source>For example, <ph id="ph1">&lt;see langword="LocalName" /&gt;</ph> is <ph id="ph2">&lt;see langword="book" /&gt;</ph> for the element <bpt id="p1">&lt;c&gt;</bpt><ph id="ph3">&amp;lt;</ph>bk:book<ph id="ph4">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;see langword="LocalName" /&gt;</ph>は<ph id="ph2">&lt;see langword="book" /&gt;</ph>要素の<bpt id="p1">&lt;c&gt;</bpt> <ph id="ph3">&amp;lt;</ph>bk:book<ph id="ph4">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.LocalName">
          <source>For node types that do not have a name (like <ph id="ph1">&lt;see langword="Text" /&gt;</ph>, <ph id="ph2">&lt;see langword="Comment" /&gt;</ph>, and so on), this property returns <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated">名前を持たないノード型 (<ph id="ph1">&lt;see langword="Text" /&gt;</ph>、<ph id="ph2">&lt;see langword="Comment" /&gt;</ph> など) の場合、このプロパティは <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.LocalName">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.LocalName">
          <source>The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</source>
          <target state="translated">次の例は、各ノードのローカル名を表示し、プレフィックスと名前空間 URI、存在しない場合。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.LocalName">
          <source>The example uses the file, <ph id="ph1">`book2.xml`</ph>, as input.</source>
          <target state="translated">この例では、<ph id="ph1">`book2.xml`</ph>の入力として、します。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.LookupNamespace(System.String)">
          <source>The prefix whose namespace URI you want to resolve.</source>
          <target state="translated">解決する対象となる名前空間 URI のプレフィックス。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.LookupNamespace(System.String)">
          <source>To match the default namespace, pass an empty string.</source>
          <target state="translated">既定の名前空間と一致させるには、空の文字列を渡します。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.LookupNamespace(System.String)">
          <source>This string does not have to be atomized.</source>
          <target state="translated">この文字列は、最小単位に分割する必要はありません。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.LookupNamespace(System.String)">
          <source>Resolves a namespace prefix in the current element's scope.</source>
          <target state="translated">現在の要素のスコープ内の名前空間プリフィックスを解決します。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.LookupNamespace(System.String)">
          <source>The namespace URI to which the prefix maps or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no matching prefix is found.</source>
          <target state="translated">プレフィックスの割り当て先の名前空間 URI。条件に合うプレフィックスが見つからない場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.LookupNamespace(System.String)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.LookupNamespace(System.String)">
          <source>In the following XML, if the reader is positioned on the <ph id="ph1">`href`</ph> attribute, the prefix <ph id="ph2">`a`</ph> is resolved by calling <ph id="ph3">`reader.LookupNamespace("a")`</ph>.</source>
          <target state="translated">リーダーが配置されている場合、次の XML で、<ph id="ph1">`href`</ph>属性をプレフィックス<ph id="ph2">`a`</ph>は呼び出すことによって解決<ph id="ph3">`reader.LookupNamespace("a")`</ph>です。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.LookupNamespace(System.String)">
          <source>The returned string is <ph id="ph1">`urn:456`</ph>.</source>
          <target state="translated">返される文字列は<ph id="ph1">`urn:456`</ph>します。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.LookupNamespace(System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.Namespaces" /&gt;</ph> property is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph> and the <ph id="ph3">&lt;paramref name="prefix" /&gt;</ph> value is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.Namespaces" /&gt;</ph> プロパティが <ph id="ph2">&lt;see langword="true" /&gt;</ph> に設定され、<ph id="ph3">&lt;paramref name="prefix" /&gt;</ph> 値が <ph id="ph4">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlTextReader">
          <source>Moves to the specified attribute.</source>
          <target state="translated">指定された属性に移動します。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextReader">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.MoveToAttribute(System.Int32)">
          <source>The index of the attribute.</source>
          <target state="translated">属性のインデックス。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.MoveToAttribute(System.Int32)">
          <source>Moves to the attribute with the specified index.</source>
          <target state="translated">指定したインデックスを持つ属性に移動します。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.MoveToAttribute(System.Int32)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.MoveToAttribute(System.Int32)">
          <source>The following example displays all attributes on the current node.</source>
          <target state="translated">次の例では、現在のノードにすべての属性を表示します。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.MoveToAttribute(System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="i" /&gt;</ph> parameter is less than 0 or greater than or equal to <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.AttributeCount" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="i" /&gt;</ph> パラメーターが 0 未満か、<ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.AttributeCount" /&gt;</ph> 以上です。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.MoveToAttribute(System.String)">
          <source>The qualified name of the attribute.</source>
          <target state="translated">属性の限定名。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.MoveToAttribute(System.String)">
          <source>Moves to the attribute with the specified name.</source>
          <target state="translated">指定した名前を持つ属性へ移動します。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.MoveToAttribute(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute is found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">属性が見つかった場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.MoveToAttribute(System.String)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the reader's position does not change.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> の場合、リーダーの位置は変更されません。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.MoveToAttribute(System.String)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.MoveToAttribute(System.String)">
          <source>After calling <ph id="ph1">`MoveToAttribute`</ph>, the <ph id="ph2">&lt;xref:System.Xml.XmlTextReader.Name%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlTextReader.NamespaceURI%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.XmlTextReader.Prefix%2A&gt;</ph> properties reflects the properties of that attribute.</source>
          <target state="translated">呼び出した後<ph id="ph1">`MoveToAttribute`</ph>、 <ph id="ph2">&lt;xref:System.Xml.XmlTextReader.Name%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Xml.XmlTextReader.NamespaceURI%2A&gt;</ph>、および<ph id="ph4">&lt;xref:System.Xml.XmlTextReader.Prefix%2A&gt;</ph>プロパティは、その属性のプロパティを反映します。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">属性のローカル名。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">属性の名前空間 URI。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)">
          <source>Moves to the attribute with the specified local name and namespace URI.</source>
          <target state="translated">指定したローカル名および名前空間 URI の属性に移動します。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute is found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">属性が見つかった場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the reader's position does not change.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> の場合、リーダーの位置は変更されません。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)">
          <source>After calling <ph id="ph1">`MoveToAttribute`</ph>, the <ph id="ph2">&lt;xref:System.Xml.XmlTextReader.Name%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlTextReader.NamespaceURI%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.XmlTextReader.Prefix%2A&gt;</ph> properties reflects the properties of that attribute.</source>
          <target state="translated">呼び出した後<ph id="ph1">`MoveToAttribute`</ph>、 <ph id="ph2">&lt;xref:System.Xml.XmlTextReader.Name%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Xml.XmlTextReader.NamespaceURI%2A&gt;</ph>、および<ph id="ph4">&lt;xref:System.Xml.XmlTextReader.Prefix%2A&gt;</ph>プロパティは、その属性のプロパティを反映します。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.MoveToElement">
          <source>Moves to the element that contains the current attribute node.</source>
          <target state="translated">現在の属性ノードを含む要素に移動します。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.MoveToElement">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the reader is not positioned on an attribute (the position of the reader does not change).</source>
          <target state="translated">リーダーが属性の位置に配置されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph> で、属性を所有している要素の位置にリーダーが移動します。リーダーが属性の位置に配置されていない場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph> で、リーダーの位置が変更されません。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.MoveToElement">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.MoveToElement">
          <source>Use this method to return to an element after navigating through its attributes.</source>
          <target state="translated">このメソッドを使用すると、その属性間を移動した後はその要素に戻ります。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.MoveToElement">
          <source>This method moves the reader to one of the following node types: <ph id="ph1">`Element`</ph>, <ph id="ph2">`DocumentType`</ph>, or <ph id="ph3">`XmlDeclaration`</ph>.</source>
          <target state="translated">このメソッドでは、リーダーを移動し、次のノード型のいずれかに: <ph id="ph1">`Element`</ph>、 <ph id="ph2">`DocumentType`</ph>、または<ph id="ph3">`XmlDeclaration`</ph>です。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.MoveToElement">
          <source>The following example displays all attributes on the current node.</source>
          <target state="translated">次の例では、現在のノードにすべての属性を表示します。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.MoveToFirstAttribute">
          <source>Moves to the first attribute.</source>
          <target state="translated">最初の属性に移動します。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.MoveToFirstAttribute">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an attribute exists (the reader moves to the first attribute); otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph> (the position of the reader does not change).</source>
          <target state="translated">属性が存在する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph> で、リーダーが最初の属性へ移動します。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph> で、リーダーの位置が変更されません。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.MoveToFirstAttribute">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.MoveToFirstAttribute">
          <source>The following example gets the value of the first attribute of the root node.</source>
          <target state="translated">次の例では、ルート ノードの最初の属性の値を取得します。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.MoveToFirstAttribute">
          <source>The example uses the file, <ph id="ph1">`attrs.xml`</ph>, as input.</source>
          <target state="translated">この例では、<ph id="ph1">`attrs.xml`</ph>の入力として、します。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.MoveToNextAttribute">
          <source>Moves to the next attribute.</source>
          <target state="translated">次の属性に移動します。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.MoveToNextAttribute">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if there is a next attribute; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there are no more attributes.</source>
          <target state="translated">次の属性が存在する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以上、属性が存在しない場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.MoveToNextAttribute">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.MoveToNextAttribute">
          <source>If the current node is an element node, this method is equivalent to <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.MoveToFirstAttribute%2A&gt;</ph>.</source>
          <target state="translated">現在のノードが要素ノードの場合は、このメソッドは<ph id="ph1">&lt;xref:System.Xml.XmlTextReader.MoveToFirstAttribute%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.MoveToNextAttribute">
          <source>If <ph id="ph1">`MoveToNextAttribute`</ph> returns <ph id="ph2">`true`</ph>, the reader moves to the next attribute; otherwise, the position of the reader does not change.</source>
          <target state="translated">場合<ph id="ph1">`MoveToNextAttribute`</ph>返します<ph id="ph2">`true`</ph>、[次へ] の属性にリーダーを移動です。 それ以外の場合、リーダーの位置は変更されません。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.MoveToNextAttribute">
          <source>The following example displays all attributes on the current node.</source>
          <target state="translated">次の例では、現在のノードにすべての属性を表示します。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.Name">
          <source>Gets the qualified name of the current node.</source>
          <target state="translated">現在のノードの限定名を取得します。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Name">
          <source>The qualified name of the current node.</source>
          <target state="translated">現在のノードの限定名。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Name">
          <source>For example, <ph id="ph1">&lt;see langword="Name" /&gt;</ph> is <ph id="ph2">&lt;see langword="bk:book" /&gt;</ph> for the element <bpt id="p1">&lt;c&gt;</bpt><ph id="ph3">&amp;lt;</ph>bk:book<ph id="ph4">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;see langword="Name" /&gt;</ph>は<ph id="ph2">&lt;see langword="bk:book" /&gt;</ph>要素の<bpt id="p1">&lt;c&gt;</bpt> <ph id="ph3">&amp;lt;</ph>bk:book<ph id="ph4">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Name">
          <source>The name returned is dependent on the <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.NodeType" /&gt;</ph> of the node.</source>
          <target state="translated">返される名前は、ノードの <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.NodeType" /&gt;</ph> によって異なります。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Name">
          <source>The following node types return the listed values.</source>
          <target state="translated">リストされた値を返すノード型を次に示します。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Name">
          <source>All other node types return an empty string.</source>
          <target state="translated">その他のすべてのノード型は、空の文字列を返します。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Name">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Node Type</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> ノード型</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Name">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Name</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 名</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Attribute" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The name of the attribute.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Attribute" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 属性の名前です。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="DocumentType" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The document type name.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="DocumentType" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> ドキュメント型の名前。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Element" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The tag name.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Element" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> タグ名。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="EntityReference" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The name of the entity referenced.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="EntityReference" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 参照されたエンティティの名前。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="ProcessingInstruction" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The target of the processing instruction.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="ProcessingInstruction" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 処理命令の対象。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="XmlDeclaration" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The literal string <ph id="ph6">&lt;see langword="xml" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="XmlDeclaration" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> リテラル文字列<ph id="ph6">&lt;see langword="xml" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Name">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Name">
          <source>The following example reads an XML file and displays each of the nodes.</source>
          <target state="translated">次の例では、XML ファイルを読み取るし、各ノードを表示します。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Name">
          <source>The sample uses the file <ph id="ph1">`items.xml`</ph>.</source>
          <target state="translated">サンプル ファイルを使用して<ph id="ph1">`items.xml`</ph>です。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.Namespaces">
          <source>Gets or sets a value indicating whether to do namespace support.</source>
          <target state="translated">名前空間をサポートするかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Namespaces">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to do namespace support; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">名前空間をサポートする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Namespaces">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Namespaces">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Namespaces">
          <source>This property determines whether the reader supports the W3C Namespaces in XML recommendation located at www.w3.org/TR/REC-xml-names.</source>
          <target state="translated">このプロパティは、リーダーが www.w3.org/TR/REC-xml-names にある XML の推奨設定での W3C 名前空間をサポートしているかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Namespaces">
          <source>The <ph id="ph1">`Namespaces`</ph> property cannot be set after a read operation has occurred.</source>
          <target state="translated"><ph id="ph1">`Namespaces`</ph>読み取り操作が発生した後、プロパティを設定できません。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.Namespaces">
          <source>Setting this property after a read operation has occurred (<ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.ReadState" /&gt;</ph> is not <ph id="ph2">&lt;see langword="ReadState.Initial" /&gt;</ph>).</source>
          <target state="translated">読み取り操作が発生した後で (<ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.ReadState" /&gt;</ph> が <ph id="ph2">&lt;see langword="ReadState.Initial" /&gt;</ph> でないとき)、このプロパティを設定します。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.NamespaceURI">
          <source>Gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.</source>
          <target state="translated">リーダーが配置されているノードの名前空間 URI (W3C の名前空間の仕様における定義に準拠) を取得します。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.NamespaceURI">
          <source>The namespace URI of the current node; otherwise an empty string.</source>
          <target state="translated">現在のノードの名前空間 URI。それ以外の場合は空の文字列。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.NamespaceURI">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.NamespaceURI">
          <source>This property is relevant to <ph id="ph1">`Element`</ph> and <ph id="ph2">`Attribute`</ph> nodes only.</source>
          <target state="translated">このプロパティは<ph id="ph1">`Element`</ph>と<ph id="ph2">`Attribute`</ph>ノードのみです。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.NamespaceURI">
          <source>The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</source>
          <target state="translated">次の例は、各ノードのローカル名を表示し、プレフィックスと名前空間 URI、存在しない場合。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.NamespaceURI">
          <source>The example uses the file, <ph id="ph1">`book2.xml`</ph>, as input.</source>
          <target state="translated">この例では、<ph id="ph1">`book2.xml`</ph>の入力として、します。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.NameTable">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> associated with this implementation.</source>
          <target state="translated">この実装に関連付けられている <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.NameTable">
          <source>The <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph> enabling you to get the atomized version of a string within the node.</source>
          <target state="translated">ノード内の最小単位に分割された文字列を取得できる <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.NameTable">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.NameTable">
          <source>All node and attribute names returned from <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> are atomized using the <ph id="ph2">`NameTable`</ph>.</source>
          <target state="translated">すべてのノードと属性名が返される<ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph>を使用して最小単位に分割されて、<ph id="ph2">`NameTable`</ph>です。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.NameTable">
          <source>When the same name is returned multiple times (for example, <ph id="ph1">`Customer`</ph>), then the same <ph id="ph2">`String`</ph> object is returned for that name.</source>
          <target state="translated">同じ名前が複数回を返される場合 (たとえば、 <ph id="ph1">`Customer`</ph>)、し、同じ<ph id="ph2">`String`</ph>名に対応するオブジェクトが返されます。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.NameTable">
          <source>This makes it possible for you to write efficient code that does object comparisons on these strings instead of expensive string comparisons.</source>
          <target state="translated">これによりオブジェクト負荷の高い文字列比較ではなく、これらの文字列で比較する効率的なコードを記述します。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.NodeType">
          <source>Gets the type of the current node.</source>
          <target state="translated">現在のノードの種類を取得します。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.NodeType">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeType" /&gt;</ph> values representing the type of the current node.</source>
          <target state="translated">現在のノードの型を表す <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeType" /&gt;</ph> 値の 1 つ。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.NodeType">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.NodeType">
          <source>This property never returns the following <ph id="ph1">`XmlNodeType`</ph> types: <ph id="ph2">`Document`</ph>, <ph id="ph3">`DocumentFragment`</ph>, <ph id="ph4">`Entity`</ph>, <ph id="ph5">`EndEntity`</ph>, or <ph id="ph6">`Notation`</ph>.</source>
          <target state="translated">このプロパティを返しません次<ph id="ph1">`XmlNodeType`</ph>型: <ph id="ph2">`Document`</ph>、 <ph id="ph3">`DocumentFragment`</ph>、 <ph id="ph4">`Entity`</ph>、 <ph id="ph5">`EndEntity`</ph>、または<ph id="ph6">`Notation`</ph>です。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.NodeType">
          <source>The following example reads an XML file and displays each of the nodes.</source>
          <target state="translated">次の例では、XML ファイルを読み取るし、各ノードを表示します。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.NodeType">
          <source>The sample uses the file <ph id="ph1">`items.xml`</ph>.</source>
          <target state="translated">サンプル ファイルを使用して<ph id="ph1">`items.xml`</ph>です。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.Normalization">
          <source>Gets or sets a value indicating whether to normalize white space and attribute values.</source>
          <target state="translated">空白と属性値を正規化するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Normalization">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to normalize; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">正規化する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Normalization">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Normalization">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Normalization">
          <source>This property can be changed at any time and takes effect on the next read operation.</source>
          <target state="translated">このプロパティは、いつでも変更でき、[次へ] の読み取り操作を有効になります。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Normalization">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> is used to construct an <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>, to normalize attribute values, <ph id="ph3">`Normalization`</ph> must be set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph>構築に使用される、 <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>、属性値を正規化する<ph id="ph3">`Normalization`</ph>に設定する必要があります<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Normalization">
          <source>If <ph id="ph1">`Normalization`</ph> is set to <ph id="ph2">`false`</ph>, this also disables character range checking for numeric entities.</source>
          <target state="translated">場合<ph id="ph1">`Normalization`</ph>に設定されている<ph id="ph2">`false`</ph>、文字範囲の数値エンティティのチェックも無効になります。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Normalization">
          <source>As a result, character entities, such as <ph id="ph1">`&amp;#0;`</ph>, are allowed.</source>
          <target state="translated">その結果などのエンティティの文字<ph id="ph1">`&amp;#0;`</ph>、許可されます。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Normalization">
          <source>The following describes attribute value normalization:</source>
          <target state="translated">属性値の正規化を次に示します。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Normalization">
          <source>For a character reference, append the referenced character to the attribute value.</source>
          <target state="translated">文字参照については、参照されている文字を属性値に追加します。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Normalization">
          <source>For an entity reference, recursively process the replacement text of the entity.</source>
          <target state="translated">エンティティ参照については、エンティティの置換テキストを再帰的に処理します。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Normalization">
          <source>For a white space character (#x20, #xD, #xA, #x9), append #x20 to the normalized value.</source>
          <target state="translated">空白文字 (#x20、#xD、#xA、#x9) の正規化された値に #x20 を追加します。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Normalization">
          <source>(Only a single #x20 is appended for a "#xD#xA" sequence that is part of an external parsed entity or the literal entity value of an internal parsed entity.)</source>
          <target state="translated">(単一 #x13 20 のみは内部解析エンティティのエンティティのリテラル値または外部解析エンティティの一部である"#xD #xA"シーケンスに追加されます。)</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Normalization">
          <source>Process other characters by appending them to the normalized value.</source>
          <target state="translated">その他の文字は、正規化された値にそのまま追加します。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Normalization">
          <source>If the declared value is not CDATA, discard any leading and trailing space (#x20) characters and replace sequences of space (#x20) characters with a single space (#x20) character.</source>
          <target state="translated">宣言された値が CDATA でない場合、先頭および末尾のスペース (#x20) 文字を破棄し、スペース (#x20) 文字のシーケンスを 1 つのスペース (#x20) 文字に置換します。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Normalization">
          <source>The <ph id="ph1">`XmlTextReader`</ph> only performs attribute or CDATA normalization.</source>
          <target state="translated"><ph id="ph1">`XmlTextReader`</ph>だけ属性または CDATA 正規化が実行されます。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Normalization">
          <source>It does not do DTD-specific normalization unless wrapped within an <ph id="ph1">`XmlValidatingReader`</ph>.</source>
          <target state="translated">内でラップしない限り、DTD に固有の正規化を実行しない、<ph id="ph1">`XmlValidatingReader`</ph>です。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Normalization">
          <source>Refer to the W3C XML 1.0 recommendation for further discussion on normalization.</source>
          <target state="translated">正規化の詳細については、w3c 勧告 『 XML 1.0 の推奨事項を参照してください。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Normalization">
          <source>The following example shows reader behavior with normalization turned on and then off.</source>
          <target state="translated">次の例では、リーダーの動作を示します正規化をオンにし、オフします。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.Normalization">
          <source>Setting this property when the reader is closed (<ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.ReadState" /&gt;</ph> is <ph id="ph2">&lt;see langword="ReadState.Closed" /&gt;</ph>).</source>
          <target state="translated">リーダーが閉じているとき (<ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.ReadState" /&gt;</ph> が <ph id="ph2">&lt;see langword="ReadState.Closed" /&gt;</ph> のとき) にこのプロパティを設定します。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.Prefix">
          <source>Gets the namespace prefix associated with the current node.</source>
          <target state="translated">現在のノードに関連付けられた名前空間プリフィックスを取得します。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Prefix">
          <source>The namespace prefix associated with the current node.</source>
          <target state="translated">現在のノードに関連付けられた名前空間プリフィックス。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Prefix">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Prefix">
          <source>The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</source>
          <target state="translated">次の例は、各ノードのローカル名を表示し、プレフィックスと名前空間 URI、存在しない場合。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Prefix">
          <source>The example uses the file, <ph id="ph1">`book2.xml`</ph>, as input.</source>
          <target state="translated">この例では、<ph id="ph1">`book2.xml`</ph>の入力として、します。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.ProhibitDtd">
          <source>Gets or sets a value indicating whether to allow DTD processing.</source>
          <target state="translated">DTD 処理を許可するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.ProhibitDtd">
          <source>This property is obsolete.</source>
          <target state="translated">このプロパティは今後使用しません。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.ProhibitDtd">
          <source>Use <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.DtdProcessing" /&gt;</ph> instead.</source>
          <target state="translated">代わりに、<ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.DtdProcessing" /&gt;</ph> を使用してください。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.ProhibitDtd">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to disallow DTD processing; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">DTD 処理を許可しない場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.ProhibitDtd">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.ProhibitDtd">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.ProhibitDtd">
          <source>DTD processing is enabled by default for backwards compatibility.</source>
          <target state="translated">DTD の処理が有効になっている既定では旧バージョンとの互換性。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.ProhibitDtd">
          <source>However, unless your application requires DTD processing, you should disable this setting.</source>
          <target state="translated">ただし、アプリケーションは、DTD 処理を必要とする場合を除き、この設定を無効にする必要があります。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.ProhibitDtd">
          <source>Disabling DTD processing can be useful in preventing certain denial of service attacks.</source>
          <target state="translated">DTD 処理を無効にすると、一部のサービス不能攻撃の防止に役立つ場合があります。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.ProhibitDtd">
          <source>If set to <ph id="ph1">`true`</ph>, the reader throws an <ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph> when any DTD content is encountered.</source>
          <target state="translated">場合に設定<ph id="ph1">`true`</ph>、リーダーをスロー、 <ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph> DTD コンテンツが発生したとき。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.ProhibitDtd">
          <source>If you have DTD processing enabled, you need to be aware of including DTDs from untrusted sources and possible denial of service attacks.</source>
          <target state="translated">DTD 処理を有効にした場合は、信頼されていないソースおよび可能なサービス拒否攻撃からの Dtd を含むに注意する必要があります。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.ProhibitDtd">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> to restrict the resources that the <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph> can access.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>リソースを制限する、<ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph>にアクセスできます。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.ProhibitDtd">
          <source>You can also design your application so that the XML processing is memory and time constrained.</source>
          <target state="translated">また、XML 処理に対するメモリと時間の割り当てが制限されるようにアプリケーションをデザインすることもできます。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.ProhibitDtd">
          <source>For example, configure time-out limits in your ASP.NET application</source>
          <target state="translated">たとえば、ASP.NET アプリケーションでタイムアウト制限を設定します。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.QuoteChar">
          <source>Gets the quotation mark character used to enclose the value of an attribute node.</source>
          <target state="translated">属性ノードの値を囲むために使用する引用符文字を取得します。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.QuoteChar">
          <source>The quotation mark character (" or ') used to enclose the value of an attribute node.</source>
          <target state="translated">属性ノードの値を囲むために使用されている引用符 (" または ')。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.QuoteChar">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.QuoteChar">
          <source>This property applies only to an attribute node.</source>
          <target state="translated">このプロパティは、属性ノードにのみ適用されます。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.Read">
          <source>Reads the next node from the stream.</source>
          <target state="translated">ストリームから次のノードを読み取ります。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.Read">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the next node was read successfully; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there are no more nodes to read.</source>
          <target state="translated">次のノードが正常に読み取られた場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以上読み取る対象となるノードが存在しない場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.Read">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.Read">
          <source>When a reader is first created and initialized, there is no information available.</source>
          <target state="translated">リーダーが最初に作成および初期化時にある情報がありません。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.Read">
          <source>You must call <ph id="ph1">`Read`</ph> to read the first node.</source>
          <target state="translated">呼び出す必要があります<ph id="ph1">`Read`</ph>を最初のノードを読み取る。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.Read">
          <source>This method requires at least four bytes from the data stream in order to begin parsing.</source>
          <target state="translated">このメソッドでは、解析を開始するのには、データ ストリームから 4 バイト以上が必要です。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.Read">
          <source>If fewer than four bytes are returned and there is no more data in the stream, the method will fail.</source>
          <target state="translated">4 バイトよりも少ないが返され、ストリームに複数のデータはありませんが、このメソッドは失敗します。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.Read">
          <source>If there is more data in the stream, the method will block parsing until receipt of the fourth byte.</source>
          <target state="translated">ストリーム内のより多くのデータの場合は、4 番目のバイトを受信するまで解析メソッドをブロックします。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.Read">
          <source>The following example reads an XML file and displays each node.</source>
          <target state="translated">次の例では、XML ファイルを読み取るし、各ノードを表示します。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.Read">
          <source>The sample uses the file <ph id="ph1">`items.xml`</ph>.</source>
          <target state="translated">サンプル ファイルを使用して<ph id="ph1">`items.xml`</ph>です。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.Read">
          <source>An error occurred while parsing the XML.</source>
          <target state="translated">XML の解析中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadAttributeValue">
          <source>Parses the attribute value into one or more <ph id="ph1">&lt;see langword="Text" /&gt;</ph>, <ph id="ph2">&lt;see langword="EntityReference" /&gt;</ph>, or <ph id="ph3">&lt;see langword="EndEntity" /&gt;</ph> nodes.</source>
          <target state="translated">属性値を解析して、1 つ以上の <ph id="ph1">&lt;see langword="Text" /&gt;</ph>、<ph id="ph2">&lt;see langword="EntityReference" /&gt;</ph>、<ph id="ph3">&lt;see langword="EndEntity" /&gt;</ph> の各ノードに格納します。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadAttributeValue">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if there are nodes to return.</source>
          <target state="translated">返すノードがある場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadAttributeValue">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</source>
          <target state="translated">初めて呼び出すときにリーダーの位置が属性ノード上にない場合、またはすべての属性値が読み込まれている場合は <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadAttributeValue">
          <source>An empty attribute, such as, <bpt id="p1">&lt;c&gt;</bpt>misc=""<ept id="p1">&lt;/c&gt;</ept>, returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> with a single node with a value of <ph id="ph2">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>misc=""<ept id="p1">&lt;/c&gt;</ept> などの空の属性は、値 <ph id="ph2">&lt;see langword="String.Empty" /&gt;</ph> を持つ単一のノードと一緒に <ph id="ph1">&lt;see langword="true" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadAttributeValue">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadAttributeValue">
          <source>Use this method after calling <ph id="ph1">`MoveToAttribute`</ph> to read through the text or entity reference nodes that make up the attribute value.</source>
          <target state="translated">呼び出した後にこのメソッドを使用して<ph id="ph1">`MoveToAttribute`</ph>を属性値を構成するテキストまたはエンティティ参照ノードを読み取る。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadAttributeValue">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader.Depth%2A&gt;</ph> of the attribute value nodes is one plus the depth of the attribute node; it increments and decrements by one when you step into and out of general entity references.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.Depth%2A&gt;</ph>属性値のノードのいずれかと、属性ノードの深さです。 増加および一般エンティティ参照に出入りしたときに 1 つデクリメントします。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadAttributeValue">
          <source>The following example reads an attribute with text and entity nodes.</source>
          <target state="translated">次の例では、テキストとエンティティ ノードを使用して属性を読み取ります。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The array of characters that serves as the buffer to which the text contents are written.</source>
          <target state="translated">テキストの内容が書き込まれるバッファーとして機能する文字の配列。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The zero-based index into the array specifying where the method can begin to write to the buffer.</source>
          <target state="translated">メソッドがバッファーへの書き込みを開始できる位置を示す配列のインデックス (0 から始まる)。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to write into the buffer.</source>
          <target state="translated">バッファーに書き込むバイト数。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
          <source>Decodes Base64 and returns the decoded binary bytes.</source>
          <target state="translated">Base64 をデコードし、デコードされたバイナリ バイトを返します。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">バッファーに書き込まれたバイト数。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
          <source>Like <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadChars%2A&gt;</ph>, this method can be called successively to read large streams of embedded text.</source>
          <target state="translated">同様に<ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadChars%2A&gt;</ph>、埋め込みのテキストの大量のストリームの読み取りにこのメソッドが連続して呼び出されます。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
          <source>It decodes Base64 content and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer.</source>
          <target state="translated">Base64 のコンテンツをデコードし、デコードされたバイナリ バイトを返します (たとえば、Base64 エンコードされたインライン GIF 画像) をバッファーします。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
          <source>See RFC 1521.</source>
          <target state="translated">RFC 1521 を参照してください。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
          <source>(You can obtain RFCs from the <bpt id="p1">[</bpt>Request for Comments Web site<ept id="p1">](https://www.rfc-editor.org)</ept>.)</source>
          <target state="translated">(Rfc を取得することができます、<bpt id="p1">[</bpt>コメント Web サイトの要求<ept id="p1">](https://www.rfc-editor.org)</ept>)。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The following example reads a file containing Base64 and BinHex data.</source>
          <target state="translated">次の例では、Base64、binhex でデータを含むファイルを読み取ります。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The sample uses the file <ph id="ph1">`binary.xml`</ph></source>
          <target state="translated">サンプル ファイルを使用します。 <ph id="ph1">`binary.xml`</ph></target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The Base64 sequence is not valid.</source>
          <target state="translated">Base64 シーケンスが無効です。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The value of <ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> の値が <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0, or <ph id="ph3">&lt;paramref name="len" /&gt;</ph> <ph id="ph4">&amp;lt;</ph> 0, or <ph id="ph5">&lt;paramref name="len" /&gt;</ph> <ph id="ph6">&amp;gt;</ph> <ph id="ph7">&lt;paramref name="array" /&gt;</ph>.Length- <ph id="ph8">&lt;paramref name="offset" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0、または <ph id="ph3">&lt;paramref name="len" /&gt;</ph> <ph id="ph4">&amp;lt;</ph> 0、または <ph id="ph5">&lt;paramref name="len" /&gt;</ph> <ph id="ph6">&amp;gt;</ph> <ph id="ph7">&lt;paramref name="array" /&gt;</ph>.Length- <ph id="ph8">&lt;paramref name="offset" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The byte array that serves as the buffer to which the decoded binary bytes are written.</source>
          <target state="translated">デコードされたバイナリ バイトが書き込まれるバッファーとして機能するバイト配列。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The zero-based index into the array specifying where the method can begin to write to the buffer.</source>
          <target state="translated">メソッドがバッファーへの書き込みを開始できる位置を示す配列のインデックス (0 から始まる)。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to write into the buffer.</source>
          <target state="translated">バッファーに書き込むバイト数。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>Decodes <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> and returns the decoded binary bytes.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> をデコードし、デコードされたバイナリ バイトを返します。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to your buffer.</source>
          <target state="translated">バッファーに書き込まれたバイト数。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>Like <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadChars%2A&gt;</ph>, this method can be called successively to read large streams of embedded text.</source>
          <target state="translated">同様に<ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadChars%2A&gt;</ph>、埋め込みのテキストの大量のストリームの読み取りにこのメソッドが連続して呼び出されます。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>It decodes <ph id="ph1">`BinHex`</ph> content and returns the decoded binary bytes (for example, an inline <ph id="ph2">`BinHex`</ph> encoded GIF image) into the buffer.</source>
          <target state="translated">デコード<ph id="ph1">`BinHex`</ph>コンテンツをデコードされたバイナリ バイトを返します (たとえば、インライン<ph id="ph2">`BinHex`</ph>エンコードされる GIF イメージ) をバッファーにします。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The following example reads a file containing <ph id="ph1">`Base64`</ph> and <ph id="ph2">`BinHex`</ph> data.</source>
          <target state="translated">次の例を格納するファイルを読み取って<ph id="ph1">`Base64`</ph>と<ph id="ph2">`BinHex`</ph>データ。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The sample uses the file <ph id="ph1">`binary.xml`</ph></source>
          <target state="translated">サンプル ファイルを使用します。 <ph id="ph1">`binary.xml`</ph></target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> sequence is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> シーケンスが有効ではありません。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The value of <ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> の値が <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0, or <ph id="ph3">&lt;paramref name="len" /&gt;</ph> <ph id="ph4">&amp;lt;</ph> 0, or <ph id="ph5">&lt;paramref name="len" /&gt;</ph> <ph id="ph6">&amp;gt;</ph> <ph id="ph7">&lt;paramref name="array" /&gt;</ph>.Length- <ph id="ph8">&lt;paramref name="offset" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0、または <ph id="ph3">&lt;paramref name="len" /&gt;</ph> <ph id="ph4">&amp;lt;</ph> 0、または <ph id="ph5">&lt;paramref name="len" /&gt;</ph> <ph id="ph6">&amp;gt;</ph> <ph id="ph7">&lt;paramref name="array" /&gt;</ph>.Length- <ph id="ph8">&lt;paramref name="offset" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>The array of characters that serves as the buffer to which the text contents are written.</source>
          <target state="translated">テキストの内容が書き込まれるバッファーとして機能する文字の配列。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>The position within <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> where the method can begin writing text contents.</source>
          <target state="translated">メソッドがテキストの内容の書き込みを開始できる <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 内の位置。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write into <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> に書き込む文字数。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>Reads the text contents of an element into a character buffer.</source>
          <target state="translated">要素のテキストの内容を文字バッファーに読み取ります。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>This method is designed to read large streams of embedded text by calling it successively.</source>
          <target state="translated">このメソッドは、連続して呼び出すことによって埋め込みテキストの大量のストリームを読み取るように設計されています。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters read.</source>
          <target state="translated">読み取った文字数。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>This can be <ph id="ph1">&lt;see langword="0" /&gt;</ph> if the reader is not positioned on an element or if there is no more text content to return in the current context.</source>
          <target state="translated">リーダーが要素に配置されていない場合、または返す対象となるテキストの内容が現在のコンテキスト内にこれ以上ない場合は、<ph id="ph1">&lt;see langword="0" /&gt;</ph> になる可能性があります。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>This is the most efficient way to process very large streams of text embedded in an XML document.</source>
          <target state="translated">これは、XML ドキュメントに埋め込まれたテキストの非常に大量のストリームを処理する最も効率的な方法です。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>Rather than allocating large string objects, <ph id="ph1">`ReadChars`</ph> returns text content a buffer at a time.</source>
          <target state="translated">大きな文字列オブジェクトの割り当てではなく<ph id="ph1">`ReadChars`</ph>テキストの内容が一度にバッファーを返します。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>This method is designed to work only on element nodes.</source>
          <target state="translated">このメソッドは、要素ノードでのみ動作するよう設計されています。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>Other node types cause <ph id="ph1">`ReadChars`</ph> to return <ph id="ph2">`0`</ph>.</source>
          <target state="translated">その他のノード型は原因<ph id="ph1">`ReadChars`</ph>を返す<ph id="ph2">`0`</ph>です。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>In the following XML, if the reader is positioned on the start tag, <ph id="ph1">`ReadChars`</ph> returns <ph id="ph2">`test`</ph> and positions the reader after the end tag.</source>
          <target state="translated">開始タグにリーダーが配置されている場合、次の XML で<ph id="ph1">`ReadChars`</ph>を返します<ph id="ph2">`test`</ph>し、終了タグの後、リーダーを配置します。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">`ReadChars`</ph> has the following functionality:</source>
          <target state="translated"><ph id="ph1">`ReadChars`</ph> 次の機能があります。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>This method is designed to work on element nodes only.</source>
          <target state="translated">このメソッドは、要素ノードのみで機能するよう設計されています。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>Other node types cause <ph id="ph1">`ReadChars`</ph> to return 0.</source>
          <target state="translated">その他のノード型は原因<ph id="ph1">`ReadChars`</ph>0 を返します。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>This method returns the actual character content.</source>
          <target state="translated">このメソッドは、実際の文字のコンテンツを返します。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>There is no attempt to resolve entities, CDATA, or any other markup encountered.</source>
          <target state="translated">エンティティ、CDATA、または発生したその他のマークアップを解決することはありません。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">`ReadChars`</ph> returns everything between the start tag and the end tag, including markup.</source>
          <target state="translated"><ph id="ph1">`ReadChars`</ph> 開始タグと終了タグは、マークアップを含む間には、すべてのものを返します。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">`ReadChars`</ph> ignores XML markup that is not well-formed.</source>
          <target state="translated"><ph id="ph1">`ReadChars`</ph> 整形式 XML マークアップは無視されます。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>For example, when reading the following XML string <ph id="ph1">`&lt;A&gt;1&lt;A&gt;2&lt;/A&gt;`</ph>, <ph id="ph2">`ReadChars`</ph> returns <ph id="ph3">`1&lt;A&gt;2&lt;/A&gt;`</ph>.</source>
          <target state="translated">たとえば、次の XML 文字列を読み取るとき<ph id="ph1">`&lt;A&gt;1&lt;A&gt;2&lt;/A&gt;`</ph>、<ph id="ph2">`ReadChars`</ph>返します<ph id="ph3">`1&lt;A&gt;2&lt;/A&gt;`</ph>です。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>(It returns markup from the matching element pair and ignores others.)</source>
          <target state="translated">(一致する要素のペアからマークアップを返しますおり、他のユーザーは無視されます。)</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>This method does not do any normalization.</source>
          <target state="translated">このメソッドでは、どのような正規化は実行しません。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>When <ph id="ph1">`ReadChars`</ph> has reached the end of the character stream, it returns the value 0 and the reader is positioned after the end tag.</source>
          <target state="translated">ときに<ph id="ph1">`ReadChars`</ph>終わりに達した文字ストリームの値 0 を返し、終了タグの後にリーダーが配置されています。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>Attribute read methods are not available while using <ph id="ph1">`ReadChars`</ph>.</source>
          <target state="translated">メソッドには使用中には使用できませんの属性を読み取る<ph id="ph1">`ReadChars`</ph>です。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>For example, using the following XML:</source>
          <target state="translated">たとえば、次の XML を使用します。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>The reader is positioned on the <ph id="ph1">`&lt;item&gt;`</ph> element at the end of the while loop.</source>
          <target state="translated">リーダーが配置されている、 <ph id="ph1">`&lt;item&gt;`</ph> while の末尾に要素をループします。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>The following example reads in XML using <ph id="ph1">`ReadChars`</ph>.</source>
          <target state="translated">次の例を使用して、XML で読み取り<ph id="ph1">`ReadChars`</ph>です。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>The example uses the <ph id="ph1">`items.xml`</ph> file as input.</source>
          <target state="translated">この例は、<ph id="ph1">`items.xml`</ph> ファイルを入力として使用します。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is greater than the space specified in the <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph> (buffer size - <ph id="ph3">&lt;paramref name="index" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> が <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph> (バッファー サイズ - <ph id="ph3">&lt;paramref name="index" /&gt;</ph>) で指定した値を超えています。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 値は <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;see langword="&amp;lt; 0" /&gt;</ph> or <ph id="ph4">&lt;paramref name="count" /&gt;</ph><ph id="ph5">&lt;see langword="&amp;lt; 0" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;see langword="&amp;lt; 0" /&gt;</ph> または <ph id="ph4">&lt;paramref name="count" /&gt;</ph><ph id="ph5">&lt;see langword="&amp;lt; 0" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">結果として得られるテキストのコピー先のバッファー。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">この値を <ph id="ph1">&lt;see langword="null" /&gt;</ph> にすることはできません。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">バッファー内の結果のコピー開始位置を示すオフセット。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">バッファーにコピーする最大バイト数。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">コピーされた実際のバイト数は、このメソッドから返されます。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>Reads the content and returns the <ph id="ph1">&lt;see langword="Base64" /&gt;</ph> decoded binary bytes.</source>
          <target state="translated">コンテンツを読み取り、<ph id="ph1">&lt;see langword="Base64" /&gt;</ph> でデコードされたバイナリ バイトを返します。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">バッファーに書き込まれたバイト数。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method streams the content, decodes the <ph id="ph1">`Base64`</ph> content, and returns the decoded binary bytes (for example, an inline <ph id="ph2">`Base64`</ph>-encoded GIF image) into the buffer.</source>
          <target state="translated">このメソッドは、コンテンツをストリームをデコード、<ph id="ph1">`Base64`</ph>コンテンツ、およびデコードされたバイナリ バイトを返します (たとえば、インライン<ph id="ph2">`Base64`</ph>-エンコードされる GIF イメージ) バッファーにします。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method can be called successively to read large streams of embedded text.</source>
          <target state="translated">このメソッドは、埋め込みのテキストの大量のストリームを読み取るに連続して呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</source>
          <target state="translated">詳細については、RFC 1521 を参照してください。"MIME (Multipurpose Internet Mail Extensions) パート 1: を指定すると、Internet Message Bodies の形式を記述するためのメカニズム"です。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>You can obtain RFCs from the <bpt id="p1">[</bpt>Request for Comments Web site<ept id="p1">](https://www.rfc-editor.org)</ept>.</source>
          <target state="translated">Rfc を取得することができます、<bpt id="p1">[</bpt>コメント Web サイトの要求<ept id="p1">](https://www.rfc-editor.org)</ept>です。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>You should not access any of the reader properties between calls to the <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A&gt;</ph> method until the method returns the value 0.</source>
          <target state="translated">呼び出しの間のリーダーのプロパティのいずれかにアクセスする必要がありますできません、<ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A&gt;</ph>メソッドまで、メソッドは値 0 を返します。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method has the following behavior:</source>
          <target state="translated">このメソッドには、次の動作があります。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A&gt;</ph> returns the value 0 when it has reached the end of the byte stream it was operating on.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A&gt;</ph> 操作のバイト ストリームの末尾に到達したときに、値 0 を返します。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The reader is positioned on the first non-content node.</source>
          <target state="translated">最初の非コンテンツ ノードでは、リーダーが配置します。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>If you ask for fewer, or the exact number, of bytes than are left in the stream the reader remains in its current position.</source>
          <target state="translated">以下に問い合わせる必要がまたはのバイト内に残っているストリーム リーダーよりも、正確な数は、現在の位置に留まります。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A&gt;</ph> is not supported on the following XML node types: <ph id="ph2">`Element`</ph>, <ph id="ph3">`XmlDeclaration`</ph>, <ph id="ph4">`None`</ph>, <ph id="ph5">`Document`</ph>, <ph id="ph6">`DocumentType`</ph>, <ph id="ph7">`Notation`</ph>, <ph id="ph8">`Entity`</ph>, <ph id="ph9">`DocumentFragment`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A&gt;</ph> 次の XML ノード型でサポートされていません: <ph id="ph2">`Element`</ph>、 <ph id="ph3">`XmlDeclaration`</ph>、 <ph id="ph4">`None`</ph>、 <ph id="ph5">`Document`</ph>、 <ph id="ph6">`DocumentType`</ph>、 <ph id="ph7">`Notation`</ph>、 <ph id="ph8">`Entity`</ph>、<ph id="ph9">`DocumentFragment`</ph>です。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 値は <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> is not supported in the current node.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> は、現在のノードではサポートされていません。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The index into the buffer or index + count is larger than the allocated buffer size.</source>
          <target state="translated">バッファー内のインデックス、またはインデックスとカウントの合計値が、割り当てられているバッファー サイズを超えています。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">結果として得られるテキストのコピー先のバッファー。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">この値を <ph id="ph1">&lt;see langword="null" /&gt;</ph> にすることはできません。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">バッファー内の結果のコピー開始位置を示すオフセット。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">バッファーにコピーする最大バイト数。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">コピーされた実際のバイト数は、このメソッドから返されます。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>Reads the content and returns the <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> decoded binary bytes.</source>
          <target state="translated">コンテンツを読み取り、<ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> でデコードされたバイナリ バイトを返します。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">バッファーに書き込まれたバイト数。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method streams the content, decodes the <ph id="ph1">`BinHex`</ph> content, and returns the decoded binary bytes (for example, an inline <ph id="ph2">`BinHex`</ph> encoded GIF image) into the buffer.</source>
          <target state="translated">このメソッドは、コンテンツをストリームをデコード、<ph id="ph1">`BinHex`</ph>コンテンツ、およびデコードされたバイナリ バイトを返します (たとえば、インライン<ph id="ph2">`BinHex`</ph>エンコードされる GIF イメージ) バッファーにします。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method can be called successively to read large streams of embedded text.</source>
          <target state="translated">このメソッドは、埋め込みのテキストの大量のストリームを読み取るに連続して呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>You should not access any of the reader properties between calls to the <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A&gt;</ph> method until the method returns the value 0.</source>
          <target state="translated">呼び出しの間のリーダーのプロパティのいずれかにアクセスする必要がありますできません、<ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A&gt;</ph>メソッドまで、メソッドは値 0 を返します。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method has the following behavior:</source>
          <target state="translated">このメソッドには、次の動作があります。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A&gt;</ph> returns the value 0 when it has reached the end of the byte stream it was operating on.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A&gt;</ph> 操作のバイト ストリームの末尾に到達したときに、値 0 を返します。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The reader is positioned on the first non-content node.</source>
          <target state="translated">最初の非コンテンツ ノードでは、リーダーが配置します。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>If you ask for fewer, or the exact number, of bytes than are left in the stream the reader remains in its current position.</source>
          <target state="translated">以下に問い合わせる必要がまたはのバイト内に残っているストリーム リーダーよりも、正確な数は、現在の位置に留まります。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A&gt;</ph> is not supported on the following XML node types: <ph id="ph2">`Element`</ph>, <ph id="ph3">`XmlDeclaration`</ph>, <ph id="ph4">`None`</ph>, <ph id="ph5">`Document`</ph>, <ph id="ph6">`DocumentType`</ph>, <ph id="ph7">`Notation`</ph>, <ph id="ph8">`Entity`</ph>, <ph id="ph9">`DocumentFragment`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A&gt;</ph> 次の XML ノード型でサポートされていません: <ph id="ph2">`Element`</ph>、 <ph id="ph3">`XmlDeclaration`</ph>、 <ph id="ph4">`None`</ph>、 <ph id="ph5">`Document`</ph>、 <ph id="ph6">`DocumentType`</ph>、 <ph id="ph7">`Notation`</ph>、 <ph id="ph8">`Entity`</ph>、<ph id="ph9">`DocumentFragment`</ph>です。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 値は <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> is not supported on the current node.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> は、現在のノードではサポートされていません。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The index into the buffer or index + count is larger than the allocated buffer size.</source>
          <target state="translated">バッファー内のインデックス、またはインデックスとカウントの合計値が、割り当てられているバッファー サイズを超えています。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> implementation does not support this method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> 実装が、このメソッドをサポートしていません。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">結果として得られるテキストのコピー先のバッファー。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">この値を <ph id="ph1">&lt;see langword="null" /&gt;</ph> にすることはできません。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">バッファー内の結果のコピー開始位置を示すオフセット。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">バッファーにコピーする最大バイト数。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">コピーされた実際のバイト数は、このメソッドから返されます。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>Reads the element and decodes the Base64 content.</source>
          <target state="translated">要素を読み取り、Base64 のコンテンツをデコードします。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">バッファーに書き込まれたバイト数。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method reads the element content, decodes it using Base64 encoding, and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer.</source>
          <target state="translated">このメソッドは、要素コンテンツを読み取り、Base64 エンコーディングを使用してデコードし、デコードされたバイナリ バイトを返します (たとえば、Base64 エンコードされたインライン GIF 画像) をバッファーします。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</source>
          <target state="translated">詳細については、RFC 1521 を参照してください。"MIME (Multipurpose Internet Mail Extensions) パート 1: を指定すると、Internet Message Bodies の形式を記述するためのメカニズム"です。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>You can obtain RFCs from the <bpt id="p1">[</bpt>Request for Comments Web site<ept id="p1">](https://www.rfc-editor.org)</ept>.</source>
          <target state="translated">Rfc を取得することができます、<bpt id="p1">[</bpt>コメント Web サイトの要求<ept id="p1">](https://www.rfc-editor.org)</ept>です。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method can only read simple-content elements.</source>
          <target state="translated">このメソッドは、単純なコンテンツ要素のみを読み取ることができます。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</source>
          <target state="translated">要素には、テキスト、空白、有意の空白、CDATA セクション、コメントおよび処理命令を含めることができます。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>It can also contain entity references, which are automatically expanded.</source>
          <target state="translated">または自動的に展開されるエンティティ参照を含めることもできます。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The element cannot have child elements.</source>
          <target state="translated">要素は、子要素を持つことはできません。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method is very similar to the <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A&gt;</ph> method except that it can only be called on element node types.</source>
          <target state="translated">このメソッドとよく似ています、<ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A&gt;</ph>点を除けばメソッドは、要素ノードの型でのみ呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>If the <ph id="ph1">`count`</ph> value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph> reads all the remaining bytes in the document and returns the number of bytes read.</source>
          <target state="translated">場合、<ph id="ph1">`count`</ph>値は、ドキュメント内のバイト数よりも大きく、ドキュメント内のバイト数と等しい場合、または、<ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph>ドキュメント内の残りのすべてのバイトを読み取り、読み取ったバイト数を返します。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The next <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> method call returns a zero and moves the reader to the node following the <ph id="ph2">&lt;xref:System.Xml.XmlNodeType.EndElement&gt;</ph>.</source>
          <target state="translated">次<ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph>メソッドの呼び出しが、ゼロが返され、ノード、次に、リーダーを移動、<ph id="ph2">&lt;xref:System.Xml.XmlNodeType.EndElement&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>If you call <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.Read%2A&gt;</ph> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <ph id="ph2">&lt;xref:System.Xml.XmlTextReader.Read%2A&gt;</ph> method was called.</source>
          <target state="translated">呼び出す場合<ph id="ph1">&lt;xref:System.Xml.XmlTextReader.Read%2A&gt;</ph>リーダーが最初のコンテンツに使用された場合の動作のすべての要素の内容を使用すると、前にし、<ph id="ph2">&lt;xref:System.Xml.XmlTextReader.Read%2A&gt;</ph>メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This means that the reader reads all the text until the end element is encountered.</source>
          <target state="translated">つまり、リーダーは、終了要素が出現するまでのすべてのテキストを読み上げます。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>It then reads the end tag node, reads the next node, and then positions itself on the next subsequent node.</source>
          <target state="translated">終了タグのノードを読み取ります、次のノードを読み取り、後続のノード上に自身を配置します。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A?displayProperty=nameWithType&gt;</ph> to see an example using this method.</source>
          <target state="translated">参照してください<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A?displayProperty=nameWithType&gt;</ph>にこのメソッドの使用例を参照してください。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 値は <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The current node is not an element node.</source>
          <target state="translated">現在のノードは要素ノードではありません。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The index into the buffer or index + count is larger than the allocated buffer size.</source>
          <target state="translated">バッファー内のインデックス、またはインデックスとカウントの合計値が、割り当てられているバッファー サイズを超えています。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> implementation does not support this method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> 実装が、このメソッドをサポートしていません。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The element contains mixed-content.</source>
          <target state="translated">要素には混合コンテンツが含まれます。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The content cannot be converted to the requested type.</source>
          <target state="translated">コンテンツを要求された型に変換できません。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">結果として得られるテキストのコピー先のバッファー。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">この値を <ph id="ph1">&lt;see langword="null" /&gt;</ph> にすることはできません。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">バッファー内の結果のコピー開始位置を示すオフセット。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">バッファーにコピーする最大バイト数。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">コピーされた実際のバイト数は、このメソッドから返されます。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>Reads the element and decodes the <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> content.</source>
          <target state="translated">要素を読み取り、<ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> の内容をデコードします。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">バッファーに書き込まれたバイト数。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method reads the element content, decodes it using <ph id="ph1">`BinHex`</ph> encoding, and returns the decoded binary bytes (for example, an inline <ph id="ph2">`BinHex`</ph> encoded GIF image) into the buffer.</source>
          <target state="translated">このメソッドは要素の内容を使用してデコード<ph id="ph1">`BinHex`</ph>のエンコードとデコードされたバイナリ バイトを返します (たとえば、インライン<ph id="ph2">`BinHex`</ph>エンコードされる GIF イメージ) バッファーにします。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method can only read simple-content elements.</source>
          <target state="translated">このメソッドは、単純なコンテンツ要素のみを読み取ることができます。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</source>
          <target state="translated">要素には、テキスト、空白、有意の空白、CDATA セクション、コメントおよび処理命令を含めることができます。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>It can also contain entity references, which are automatically expanded.</source>
          <target state="translated">または自動的に展開されるエンティティ参照を含めることもできます。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The element cannot have child elements.</source>
          <target state="translated">要素は、子要素を持つことはできません。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method is very similar to the <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A&gt;</ph> method except that it can only be called on element node types.</source>
          <target state="translated">このメソッドとよく似ています、<ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A&gt;</ph>点を除けばメソッドは、要素ノードの型でのみ呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>If the <ph id="ph1">`count`</ph> value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph> reads all the remaining bytes in the document and returns the number of bytes read.</source>
          <target state="translated">場合、<ph id="ph1">`count`</ph>値は、ドキュメント内のバイト数よりも大きく、ドキュメント内のバイト数と等しい場合、または、<ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph>ドキュメント内の残りのすべてのバイトを読み取り、読み取ったバイト数を返します。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The next <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> method call returns a zero and moves the reader to the node following the <ph id="ph2">&lt;xref:System.Xml.XmlNodeType.EndElement&gt;</ph>.</source>
          <target state="translated">次<ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph>メソッドの呼び出しが、ゼロが返され、ノード、次に、リーダーを移動、<ph id="ph2">&lt;xref:System.Xml.XmlNodeType.EndElement&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>If you call <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.Read%2A&gt;</ph> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <ph id="ph2">&lt;xref:System.Xml.XmlTextReader.Read%2A&gt;</ph> method was called.</source>
          <target state="translated">呼び出す場合<ph id="ph1">&lt;xref:System.Xml.XmlTextReader.Read%2A&gt;</ph>リーダーが最初のコンテンツに使用された場合の動作のすべての要素の内容を使用すると、前にし、<ph id="ph2">&lt;xref:System.Xml.XmlTextReader.Read%2A&gt;</ph>メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This means that the reader reads all the text until the end element is encountered.</source>
          <target state="translated">つまり、リーダーは、終了要素が出現するまでのすべてのテキストを読み上げます。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>It then reads the end tag node, reads the next node, and then positions itself on the next subsequent node.</source>
          <target state="translated">終了タグのノードを読み取ります、次のノードを読み取り、後続のノード上に自身を配置します。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A?displayProperty=nameWithType&gt;</ph> to see an example using this method.</source>
          <target state="translated">参照してください<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A?displayProperty=nameWithType&gt;</ph>にこのメソッドの使用例を参照してください。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 値は <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The current node is not an element node.</source>
          <target state="translated">現在のノードは要素ノードではありません。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The index into the buffer or index + count is larger than the allocated buffer size.</source>
          <target state="translated">バッファー内のインデックス、またはインデックスとカウントの合計値が、割り当てられているバッファー サイズを超えています。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> implementation does not support this method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 実装が、このメソッドをサポートしていません。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The element contains mixed-content.</source>
          <target state="translated">要素には混合コンテンツが含まれます。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The content cannot be converted to the requested type.</source>
          <target state="translated">コンテンツを要求された型に変換できません。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.ReadState">
          <source>Gets the state of the reader.</source>
          <target state="translated">リーダーの状態を取得します。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.ReadState">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.ReadState" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.ReadState" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.ReadState">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadString">
          <source>Reads the contents of an element or a text node as a string.</source>
          <target state="translated">要素ノードまたはテキスト ノードの内容を文字列として読み取ります。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadString">
          <source>The contents of the element or text node.</source>
          <target state="translated">要素ノードまたはテキスト ノードの内容。</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadString">
          <source>This can be an empty string if the reader is positioned on something other than an element or text node, or if there is no more text content to return in the current context.</source>
          <target state="translated">要素ノードまたはテキスト ノード以外にリーダーが配置されている場合、または返す対象となるテキスト コンテンツが現在のコンテキスト内にこれ以上ない場合は、これが空の文字列になる場合があります。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadString">
          <source><ph id="ph1">&lt;see langword="Note:" /&gt;</ph> The text node can be either an element or an attribute text node.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Note:" /&gt;</ph> テキスト ノードは、要素テキスト ノードまたは属性テキスト ノードのいずれかが可能です。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadString">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadString">
          <source>If positioned on an element, <ph id="ph1">`ReadString`</ph> concatenates all text, significant white space, white space, and <ph id="ph2">`CData`</ph> section node types together and returns the concatenated data as the element content.</source>
          <target state="translated">要素に配置されている場合<ph id="ph1">`ReadString`</ph>すべてのテキスト、有意の空白、空白文字を連結し、<ph id="ph2">`CData`</ph>セクション ノード型を連結し、要素の内容として連結されたデータを返します。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadString">
          <source>It stops when any markup is encountered, including comments and processing instructions.</source>
          <target state="translated">すべてのマークアップが発生した場合、コメントを含む、処理命令を停止します。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadString">
          <source>This could occur in a mixed content model, or when an element end tag is read.</source>
          <target state="translated">これは混合コンテンツ モデル内で、または要素の終了タグが読み込まれると発生します。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadString">
          <source>If positioned on a text node, <ph id="ph1">`ReadString`</ph> performs the same concatenation from the text node to the element end tag.</source>
          <target state="translated">テキスト ノードに配置されている場合<ph id="ph1">`ReadString`</ph>要素の終了タグへのテキスト ノードから同じを連結したものを実行します。</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadString">
          <source>If the reader is positioned on an attribute text node, <ph id="ph1">`ReadString`</ph> has the same functionality as if the reader were position on the element start tag.</source>
          <target state="translated">リーダーが属性のテキスト ノード上にある場合、<ph id="ph1">`ReadString`</ph> は、あたかもリーダーが要素の開始タグ上にあるのと同様に機能します。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadString">
          <source>It returns all the concatenated element text nodes.</source>
          <target state="translated">連結されたすべての要素テキスト ノードが返されます。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadString">
          <source>The following example displays the text content of each element.</source>
          <target state="translated">次の例では、各要素のテキストの内容を表示します。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ReadString">
          <source>The example uses the file, <ph id="ph1">`elems.xml`</ph>, as input.</source>
          <target state="translated">この例では、<ph id="ph1">`elems.xml`</ph>の入力として、します。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadString">
          <source>An error occurred while parsing the XML.</source>
          <target state="translated">XML の解析中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ReadString">
          <source>An invalid operation was attempted.</source>
          <target state="translated">無効な操作を実行しようとしました。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ResetState">
          <source>Resets the state of the reader to ReadState.Initial.</source>
          <target state="translated">リーダーの状態を ReadState.Initial にリセットします。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ResetState">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ResetState">
          <source>This method enables you to parse multiple XML documents in a single stream.</source>
          <target state="translated">このメソッドでは、1 つのストリームでの複数の XML ドキュメントを解析することができます。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ResetState">
          <source>When you reach the end of an XML document, you can call <ph id="ph1">`ResetState`</ph> to reset the state of the reader in preparation for the next XML document.</source>
          <target state="translated">XML ドキュメントの最後に到達したときに呼び出す<ph id="ph1">`ResetState`</ph>準備として次の XML ドキュメント内のリーダーの状態をリセットします。</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ResetState">
          <source>The documents in the stream must share the same encoding.</source>
          <target state="translated">ストリーム内のドキュメントでは、同じエンコーディングを共有する必要があります。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ResetState">
          <source>If this is not the case, when <ph id="ph1">`ResetState`</ph> is called an <ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.</source>
          <target state="translated">ない場合は、ケースと<ph id="ph1">`ResetState`</ph>が呼び出された、<ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ResetState">
          <source>(This is a change in behavior from .NET Framework version 1.1 and earlier).</source>
          <target state="translated">(これは、.NET Framework 1.1 およびそれ以前のバージョンからの動作の変更です。)</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ResetState">
          <source>The following properties are not affected by <ph id="ph1">`ResetState`</ph>.</source>
          <target state="translated">次のプロパティは影響ありません<ph id="ph1">`ResetState`</ph>です。</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ResetState">
          <source>The following example parses two XML documents in a single stream.</source>
          <target state="translated">次の例では、1 つのストリーム内の 2 つの XML ドキュメントを解析します。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ResetState">
          <source>Calling <ph id="ph1">&lt;see langword="ResetState" /&gt;</ph> if the reader was constructed using an <ph id="ph2">&lt;see cref="T:System.Xml.XmlParserContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Xml.XmlParserContext" /&gt;</ph> を使用してリーダーを構築した場合の <ph id="ph1">&lt;see langword="ResetState" /&gt;</ph> の呼び出し。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ResetState">
          <source>Documents in a single stream do not share the same encoding.</source>
          <target state="translated">単一ストリーム内のドキュメントが同じエンコーディングを共有していません。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.ResolveEntity">
          <source>Resolves the entity reference for <ph id="ph1">&lt;see langword="EntityReference" /&gt;</ph> nodes.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="EntityReference" /&gt;</ph> ノードのエンティティ参照を解決します。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ResolveEntity">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ResolveEntity">
          <source>If the reader is positioned on an <ph id="ph1">`EntityReference`</ph> node (<ph id="ph2">`XmlNodeType.EntityReference`</ph>), if <ph id="ph3">&lt;xref:System.Xml.XmlTextReader.Read%2A&gt;</ph> is called after calling this method, the entity replacement text is parsed.</source>
          <target state="translated">リーダーが配置されている場合、<ph id="ph1">`EntityReference`</ph>ノード (<ph id="ph2">`XmlNodeType.EntityReference`</ph>) 場合は、<ph id="ph3">&lt;xref:System.Xml.XmlTextReader.Read%2A&gt;</ph>呼び出し元がこのメソッドでは、エンティティ置換テキストは解析後に呼び出されます。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ResolveEntity">
          <source>When the entity replacement text is finished, an <ph id="ph1">`EndEntity`</ph> node is returned to close the entity reference scope.</source>
          <target state="translated">エンティティ置換テキストが完了すると、<ph id="ph1">`EndEntity`</ph>エンティティ参照のスコープを閉じるノードが返されます。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.ResolveEntity">
          <source>After calling this method, if the entity is part of an attribute value, you must call <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadAttributeValue%2A&gt;</ph> to step into the entity.</source>
          <target state="translated">このメソッドを呼び出した後、エンティティ、属性値の一部である必要がありますを呼び出した場合<ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadAttributeValue%2A&gt;</ph>エンティティにステップ インします。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.Skip">
          <source>Skips the children of the current node.</source>
          <target state="translated">現在のノードの子をスキップします。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.Skip">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.Skip">
          <source>In the following XML input if the reader is positioned on the <ph id="ph1">`&lt;a&gt;`</ph> node or any of its attributes, calling <ph id="ph2">`Skip`</ph> positions the reader to the <ph id="ph3">`&lt;b&gt;`</ph> node.</source>
          <target state="translated">次の XML の入力にリーダーが配置されているかどうか、<ph id="ph1">`&lt;a&gt;`</ph>ノードまたはその属性、呼び出しのいずれか<ph id="ph2">`Skip`</ph>、リーダーを<ph id="ph3">`&lt;b&gt;`</ph>ノード。</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.Skip">
          <source>If the reader is positioned on a leaf node already (such as the <ph id="ph1">`&lt;x&gt;`</ph> node or the text node <ph id="ph2">`abc`</ph>), calling <ph id="ph3">`Skip`</ph> is the same as calling <ph id="ph4">&lt;xref:System.Xml.XmlTextReader.Read%2A&gt;</ph>.</source>
          <target state="translated">リーダーがリーフ ノードに既に配置されているかどうか (など、<ph id="ph1">`&lt;x&gt;`</ph>ノードまたはテキスト ノード<ph id="ph2">`abc`</ph>) を呼び出す<ph id="ph3">`Skip`</ph>は呼び出すことと同じ<ph id="ph4">&lt;xref:System.Xml.XmlTextReader.Read%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.Skip">
          <source>This method checks for well-formed XML.</source>
          <target state="translated">このメソッドは、整形式の XML を確認します。</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceScope" /&gt;</ph> value that specifies the type of namespace nodes to return.</source>
          <target state="translated">返される名前空間ノードの種類を指定する <ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceScope" /&gt;</ph> 値。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> that contains the current in-scope namespaces.</source>
          <target state="translated">現在のスコープ内にある名前空間が格納された <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
          <source>The prefix whose namespace URI you wish to find.</source>
          <target state="translated">検索対象の名前空間 URI を持つプレフィックス。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
          <source>The namespace URI that is mapped to the prefix; <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the prefix is not mapped to a namespace URI.</source>
          <target state="translated">プレフィックスに割り当てられている名前空間 URI。このプレフィックスに名前空間 URI が割り当てられていない場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
          <source>The namespace URI whose prefix you wish to find.</source>
          <target state="translated">検索対象のプレフィックスを持つ名前空間 URI。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
          <source>The prefix that is mapped to the namespace URI; <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the namespace URI is not mapped to a prefix.</source>
          <target state="translated">名前空間 URI に割り当てられているプレフィックス。この名前空間 URI にプレフィックスが割り当てられていない場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.Value">
          <source>Gets the text value of the current node.</source>
          <target state="translated">現在のノードのテキスト値を取得します。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Value">
          <source>The value returned depends on the <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.NodeType" /&gt;</ph> of the node.</source>
          <target state="translated">返される値は、ノードの <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.NodeType" /&gt;</ph> によって異なります。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Value">
          <source>The following table lists node types that have a value to return.</source>
          <target state="translated">返す値を持つノード型の一覧を次の表に示します。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Value">
          <source>All other node types return <ph id="ph1">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated">これ以外のノード型はすべて <ph id="ph1">&lt;see langword="String.Empty" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Value">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Node Type</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> ノード型</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Value">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 値</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Attribute" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The value of the attribute.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Attribute" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 属性の値です。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="CDATA" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The content of the CDATA section.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="CDATA" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> CDATA セクションの内容。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Comment" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The content of the comment.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Comment" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> コメントの内容。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="DocumentType" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The internal subset.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="DocumentType" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 内部サブセット。</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="ProcessingInstruction" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The entire content, excluding the target.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="ProcessingInstruction" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 全体のコンテンツ、ターゲットを除外します。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="SignificantWhitespace" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The white space within an <ph id="ph6">&lt;see langword="xml:space" /&gt;</ph>= 'preserve' scope.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="SignificantWhitespace" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 内の空白文字、 <ph id="ph6">&lt;see langword="xml:space" /&gt;</ph>= 'preserve' スコープ。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Text" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The content of the text node.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Text" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> テキスト ノードのコンテンツ。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Whitespace" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The white space between markup.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Whitespace" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> マークアップ間に空白文字。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="XmlDeclaration" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The content of the declaration.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="XmlDeclaration" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 宣言の内容。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Value">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Value">
          <source>The following example reads an XML file and displays each node.</source>
          <target state="translated">次の例では、XML ファイルを読み取るし、各ノードを表示します。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.Value">
          <source>The sample uses the file <ph id="ph1">`items.xml`</ph>.</source>
          <target state="translated">サンプル ファイルを使用して<ph id="ph1">`items.xml`</ph>です。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.WhitespaceHandling">
          <source>Gets or sets a value that specifies how white space is handled.</source>
          <target state="translated">空白の処理方法を指定する値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.WhitespaceHandling">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.WhitespaceHandling" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.WhitespaceHandling" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.WhitespaceHandling">
          <source>The default is <ph id="ph1">&lt;see langword="WhitespaceHandling.All" /&gt;</ph> (returns <ph id="ph2">&lt;see langword="Whitespace" /&gt;</ph> and <ph id="ph3">&lt;see langword="SignificantWhitespace" /&gt;</ph> nodes).</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see langword="WhitespaceHandling.All" /&gt;</ph> で、<ph id="ph2">&lt;see langword="Whitespace" /&gt;</ph> と <ph id="ph3">&lt;see langword="SignificantWhitespace" /&gt;</ph> ノードを返します。</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.WhitespaceHandling">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.WhitespaceHandling">
          <source>This property can be changed at any time and takes effect on the next read operation.</source>
          <target state="translated">このプロパティは、いつでも変更でき、[次へ] の読み取り操作を有効になります。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.WhitespaceHandling">
          <source>Because the <ph id="ph1">`XmlTextReader`</ph> does not have DTD information available to it, <ph id="ph2">`SignificantWhitepsace`</ph> nodes are only returned within an <ph id="ph3">`xml:space='preserve'`</ph> scope.</source>
          <target state="translated"><ph id="ph1">`XmlTextReader`</ph>は、使用可能な DTD 情報がない<ph id="ph2">`SignificantWhitepsace`</ph>ノードのみ結果として返される、<ph id="ph3">`xml:space='preserve'`</ph>スコープ。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.WhitespaceHandling">
          <source>The following example reads an XML fragment.</source>
          <target state="translated">次の例では、XML フラグメントを読み取ります。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.WhitespaceHandling">
          <source>Invalid value specified.</source>
          <target state="translated">無効な値を指定しています。</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.WhitespaceHandling">
          <source>Setting this property when the reader is closed (<ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.ReadState" /&gt;</ph> is <ph id="ph2">&lt;see langword="ReadState.Closed" /&gt;</ph>).</source>
          <target state="translated">リーダーが閉じているとき (<ph id="ph1">&lt;see cref="P:System.Xml.XmlTextReader.ReadState" /&gt;</ph> が <ph id="ph2">&lt;see langword="ReadState.Closed" /&gt;</ph> のとき) にこのプロパティを設定します。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.XmlLang">
          <source>Gets the current <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> scope.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> スコープを取得します。</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlLang">
          <source>The current <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> scope.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> スコープ。</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlLang">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlLang">
          <source>This property represents the <ph id="ph1">`xml:lang`</ph> scope within which the current node resides.</source>
          <target state="translated">このプロパティを表す、<ph id="ph1">`xml:lang`</ph>スコープ内で、現在のノードが存在します。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlLang">
          <source>For example, here is an XML fragment with <ph id="ph1">`xml:lang`</ph> set to US English in the root element:</source>
          <target state="translated">たとえばと XML フラグメントを次に示します<ph id="ph1">`xml:lang`</ph>ルート要素に英語 (米国) に設定します。</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlLang">
          <source><ph id="ph1">\&lt;</ph>root xml:lang="en-us"&gt;</source>
          <target state="translated"><ph id="ph1">\&lt;</ph>root xml:lang="en-us"&gt;</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlLang">
          <source><ph id="ph1">\&lt;</ph>name&gt;Fred<ph id="ph2">\&lt;</ph>/name&gt;</source>
          <target state="translated"><ph id="ph1">\&lt;</ph>名前 &gt; Fred <ph id="ph2">\&lt;</ph> /名 &gt;</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlLang">
          <source><ph id="ph1">\&lt;</ph>/root&gt;</source>
          <target state="translated"><ph id="ph1">\&lt;</ph>/root&gt;</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlLang">
          <source>When the reader is positioned on the <ph id="ph1">`name`</ph> element, you can use this property to find that it is in the scope of a US English <ph id="ph2">`xml:lang`</ph> attribute.</source>
          <target state="translated">リーダーが配置されている場合、<ph id="ph1">`name`</ph>要素を英語 (米国) のスコープ内にあることを検索するこのプロパティを使用することができます<ph id="ph2">`xml:lang`</ph>属性。</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlLang">
          <source>The following example displays the <ph id="ph1">`xml:lang`</ph> value for each of the nodes.</source>
          <target state="translated">次の例を表示、<ph id="ph1">`xml:lang`</ph>の各ノードの値。</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.XmlResolver">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> used for resolving DTD references.</source>
          <target state="translated">DTD 参照を解決するために使用する <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> を設定します。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlResolver">
          <source>The <ph id="ph1">&lt;see langword="XmlResolver" /&gt;</ph> to use.</source>
          <target state="translated">使用する <ph id="ph1">&lt;see langword="XmlResolver" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlResolver">
          <source>If set to <ph id="ph1">&lt;see langword="null" /&gt;</ph>, external resources are not resolved.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> に設定されていると、外部リソースが解決されません。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlResolver">
          <source>In version 1.1 of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>, the caller must be fully trusted in order to specify an <ph id="ph2">&lt;see langword="XmlResolver" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> バージョン 1.1 では、<ph id="ph2">&lt;see langword="XmlResolver" /&gt;</ph> を指定するには呼び出し元が完全に信頼されている必要があります。</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlResolver">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlResolver">
          <source>The reader uses <ph id="ph1">`XmlResolver`</ph> to resolve the location of the file loaded into the reader and also to resolve DTD references.</source>
          <target state="translated">リーダーを使用して<ph id="ph1">`XmlResolver`</ph>リーダーに読み込まれるファイルの場所を解決するのには、DTD 参照を解決するのにはさらにです。</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlResolver">
          <source>For example, if your XML included the DOCTYPE declaration, <ph id="ph1">`&lt;!DOCTYPE book SYSTEM book.dtd&gt;`</ph> the reader resolves this external file and ensures that the DTD is well-formed.</source>
          <target state="translated">たとえば、XML には、DOCTYPE 宣言が含まれている場合<ph id="ph1">`&lt;!DOCTYPE book SYSTEM book.dtd&gt;`</ph>リーダーは、この外部のファイルを解決し、DTD が整形式であることを確認します。</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlResolver">
          <source>The reader does not use the DTD for validation.</source>
          <target state="translated">リーダーは、検証のため、DTD を使用しません。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlResolver">
          <source>This property can be changed at any time and takes effect on the next read operation.</source>
          <target state="translated">このプロパティは、いつでも変更でき、[次へ] の読み取り操作を有効になります。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlResolver">
          <source>If this property is set to <ph id="ph1">`null`</ph>, any external DTD references encountered by the reader are not resolved.</source>
          <target state="translated">このプロパティ設定されている場合<ph id="ph1">`null`</ph>、リーダーによって発生した任意の外部 DTD 参照は解決されません。</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlResolver">
          <source>In version 1.1 of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>, if this property is not set, the trust level of the application determines the default behavior.</source>
          <target state="translated">バージョン 1.1 で、<ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>アプリケーションの信頼レベルが既定の動作を決定する場合、このプロパティが設定されていません。</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlResolver">
          <source><ph id="ph1">`Fully trusted code:`</ph> The reader uses a default <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no user credentials.</source>
          <target state="translated"><ph id="ph1">`Fully trusted code:`</ph> リーダーは、既定値を使用して<ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>ユーザー資格情報を持たない。</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlResolver">
          <source>If authentication is required to access a network resource, use the <ph id="ph1">`XmlResolver`</ph> property to specify an <ph id="ph2">`XmlResolver`</ph> with the necessary credentials.</source>
          <target state="translated">ネットワーク リソースへのアクセスを認証が必要な場合を使用して、<ph id="ph1">`XmlResolver`</ph>プロパティを指定する、<ph id="ph2">`XmlResolver`</ph>必要な資格情報を使用します。</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlResolver">
          <source><ph id="ph1">`Semi-trusted code:`</ph> The <ph id="ph2">`XmlResolver`</ph> property is set to <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`Semi-trusted code:`</ph> <ph id="ph2">`XmlResolver`</ph>プロパティに設定されている<ph id="ph3">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlResolver">
          <source>External resources are not resolved.</source>
          <target state="translated">外部リソースは解決されません。</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlResolver">
          <source>The following example uses the <ph id="ph1">`XmlResolver`</ph> property to specify the credentials necessary to access the networked file.</source>
          <target state="translated">次の例では、<ph id="ph1">`XmlResolver`</ph>プロパティをネットワーク上のファイルにアクセスするために必要な資格情報を指定します。</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextReader.XmlSpace">
          <source>Gets the current <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> scope.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> スコープを取得します。</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlSpace">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlSpace">
          <source>If no <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> scope exists, this property defaults to <ph id="ph2">&lt;see langword="XmlSpace.None" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> スコープが存在しない場合、このプロパティは既定の <ph id="ph2">&lt;see langword="XmlSpace.None" /&gt;</ph> に設定されます。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlSpace">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method to take advantage of new functionality.</source>
          <target state="translated">作成することお勧め、.NET Framework 2.0 以降で、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>インスタンスを使用して、<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>新機能を活用する方法です。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlSpace">
          <source>The following example parses a file and returns significant white space if an <ph id="ph1">`xml:space='preserve'`</ph> scope is found.</source>
          <target state="translated">次の例は、ファイルを解析し、有意の空白を返す場合、<ph id="ph1">`xml:space='preserve'`</ph>スコープに存在します。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextReader.XmlSpace">
          <source>The example uses the file, <ph id="ph1">`authors.xml`</ph>, as input.</source>
          <target state="translated">この例では、<ph id="ph1">`authors.xml`</ph>の入力として、します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>