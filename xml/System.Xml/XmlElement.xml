<Type Name="XmlElement" FullName="System.Xml.XmlElement">
  <TypeSignature Language="C#" Value="public class XmlElement : System.Xml.XmlLinkedNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlElement extends System.Xml.XmlLinkedNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlElement" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlElement&#xA;Inherits XmlLinkedNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlElement : System::Xml::XmlLinkedNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlDocument</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlLinkedNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bc89e-101">1 つの要素を表します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-101">Represents an element.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc89e-102">要素は、最も一般的なノードで、W3C ドキュメント オブジェクト モデル (DOM) のいずれか。</span><span class="sxs-lookup"><span data-stu-id="bc89e-102">Elements are one of the most common nodes in the W3C Document Object Model (DOM).</span></span> <span data-ttu-id="bc89e-103">要素は、それらに関連付けられた属性を持つことができます。</span><span class="sxs-lookup"><span data-stu-id="bc89e-103">Elements can have attributes associated with them.</span></span> <span data-ttu-id="bc89e-104">`XmlElement`クラス属性にアクセスするための多くのメソッドがあります (<xref:System.Xml.XmlElement.GetAttribute%2A>、 <xref:System.Xml.XmlElement.SetAttribute%2A>、 <xref:System.Xml.XmlElement.RemoveAttribute%2A>、<xref:System.Xml.XmlElement.GetAttributeNode%2A>など)。</span><span class="sxs-lookup"><span data-stu-id="bc89e-104">The `XmlElement` class has many methods for accessing attributes (<xref:System.Xml.XmlElement.GetAttribute%2A>, <xref:System.Xml.XmlElement.SetAttribute%2A>, <xref:System.Xml.XmlElement.RemoveAttribute%2A>, <xref:System.Xml.XmlElement.GetAttributeNode%2A>, and so on).</span></span> <span data-ttu-id="bc89e-105">使用することも、<xref:System.Xml.XmlElement.Attributes%2A>プロパティが返されます、<xref:System.Xml.XmlAttributeCollection>コレクションから名前またはインデックスによって属性にアクセスできるようにします。</span><span class="sxs-lookup"><span data-stu-id="bc89e-105">You can also use the <xref:System.Xml.XmlElement.Attributes%2A> property which returns an <xref:System.Xml.XmlAttributeCollection> enabling you to access attributes by name or index from the collection.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xml.XmlDocument.CreateElement(System.String)" />
    <altmember cref="T:System.Xml.XmlAttribute" />
    <altmember cref="T:System.Xml.XmlDocument" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal XmlElement (string prefix, string localName, string namespaceURI, System.Xml.XmlDocument doc);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string prefix, string localName, string namespaceURI, class System.Xml.XmlDocument doc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (prefix As String, localName As String, namespaceURI As String, doc As XmlDocument)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; XmlElement(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI, System::Xml::XmlDocument ^ doc);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="doc" Type="System.Xml.XmlDocument" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="bc89e-106">名前空間プリフィックス。<see cref="P:System.Xml.XmlElement.Prefix" /> プロパティのトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="bc89e-106">The namespace prefix; see the <see cref="P:System.Xml.XmlElement.Prefix" /> property.</span></span></param>
        <param name="localName"><span data-ttu-id="bc89e-107">ローカル名。<see cref="P:System.Xml.XmlElement.LocalName" /> プロパティのトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="bc89e-107">The local name; see the <see cref="P:System.Xml.XmlElement.LocalName" /> property.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="bc89e-108">名前空間 URI。<see cref="P:System.Xml.XmlElement.NamespaceURI" /> プロパティのトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="bc89e-108">The namespace URI; see the <see cref="P:System.Xml.XmlElement.NamespaceURI" /> property.</span></span></param>
        <param name="doc"><span data-ttu-id="bc89e-109">親 XML ドキュメント。</span><span class="sxs-lookup"><span data-stu-id="bc89e-109">The parent XML document.</span></span></param>
        <summary><span data-ttu-id="bc89e-110"><see cref="T:System.Xml.XmlElement" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-110">Initializes a new instance of the <see cref="T:System.Xml.XmlElement" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc89e-111">インスタンス化しないで、<xref:System.Xml.XmlElement>直接。 代わりに、メソッドを使用してなど<xref:System.Xml.XmlDocument.CreateElement%2A>です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-111">Do not instantiate an <xref:System.Xml.XmlElement> directly; instead, use methods such as <xref:System.Xml.XmlDocument.CreateElement%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlAttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As XmlAttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlAttributeCollection ^ Attributes { System::Xml::XmlAttributeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc89e-112">このノードの属性の一覧を格納している <see cref="T:System.Xml.XmlAttributeCollection" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-112">Gets an <see cref="T:System.Xml.XmlAttributeCollection" /> containing the list of attributes for this node.</span></span></summary>
        <value>
          <span data-ttu-id="bc89e-113">このノードの属性の一覧を格納している <see cref="T:System.Xml.XmlAttributeCollection" />。</span><span class="sxs-lookup"><span data-stu-id="bc89e-113"><see cref="T:System.Xml.XmlAttributeCollection" /> containing the list of attributes for this node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bc89e-114">次の例では、最初の属性の値を変更します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-114">The following example uses changes the value of the first attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.Attributes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.Attributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.Attributes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.Attributes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.Attributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.Attributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">
          <span data-ttu-id="bc89e-115">指定したノードの下にあるサブツリーのクローンを順次作成していく場合は <see langword="true" />。指定したノード (ノードが <see langword="XmlElement" /> の場合はその属性も含む) だけのクローンを作成する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bc89e-115"><see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself (and its attributes if the node is an <see langword="XmlElement" />).</span></span></param>
        <summary><span data-ttu-id="bc89e-116">このノードの複製を作成します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-116">Creates a duplicate of this node.</span></span></summary>
        <returns><span data-ttu-id="bc89e-117">クローンとして作成されたノード。</span><span class="sxs-lookup"><span data-stu-id="bc89e-117">The cloned node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc89e-118">このメソッドは、ノードのコピー コンス トラクターとして機能します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-118">This method serves as a copy constructor for nodes.</span></span> <span data-ttu-id="bc89e-119">複製されたノードが親を持たない (<xref:System.Xml.XmlNode.ParentNode%2A>返します`null`)。</span><span class="sxs-lookup"><span data-stu-id="bc89e-119">The duplicate node has no parent (<xref:System.Xml.XmlNode.ParentNode%2A> returns `null`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc89e-120">次の例は、新しい要素を作成のクローンを作成し、XML ドキュメントに両方の要素を追加します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-120">The following example creates a new element, clones it, and then adds both elements into an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.CloneNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.CloneNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.CloneNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.CloneNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.CloneNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.CloneNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bc89e-121">指定した属性の属性値を返します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-121">Returns the attribute value for the specified attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public virtual string GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAttribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAttribute(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="bc89e-122">取得する属性の名前。</span><span class="sxs-lookup"><span data-stu-id="bc89e-122">The name of the attribute to retrieve.</span></span> <span data-ttu-id="bc89e-123">これは修飾名です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-123">This is a qualified name.</span></span> <span data-ttu-id="bc89e-124">一致するノードの <see langword="Name" /> プロパティに一致します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-124">It is matched against the <see langword="Name" /> property of the matching node.</span></span></param>
        <summary><span data-ttu-id="bc89e-125">指定された名前を持つ属性の値を返します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-125">Returns the value for the attribute with the specified name.</span></span></summary>
        <returns><span data-ttu-id="bc89e-126">指定した属性の値。</span><span class="sxs-lookup"><span data-stu-id="bc89e-126">The value of the specified attribute.</span></span> <span data-ttu-id="bc89e-127">一致する属性が見つからなかった場合や、属性には指定された値も既定値もない場合は、空の文字列が返されます。</span><span class="sxs-lookup"><span data-stu-id="bc89e-127">An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bc89e-128">次の例は、要素に指定した属性があるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-128">The following example checks to see if the element has the specified attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public virtual string GetAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAttribute (localName As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="bc89e-129">取得する属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="bc89e-129">The local name of the attribute to retrieve.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="bc89e-130">取得する属性の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="bc89e-130">The namespace URI of the attribute to retrieve.</span></span></param>
        <summary><span data-ttu-id="bc89e-131">指定したローカル名および名前空間 URI の属性の値を返します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-131">Returns the value for the attribute with the specified local name and namespace URI.</span></span></summary>
        <returns><span data-ttu-id="bc89e-132">指定した属性の値。</span><span class="sxs-lookup"><span data-stu-id="bc89e-132">The value of the specified attribute.</span></span> <span data-ttu-id="bc89e-133">一致する属性が見つからなかった場合や、属性には指定された値も既定値もない場合は、空の文字列が返されます。</span><span class="sxs-lookup"><span data-stu-id="bc89e-133">An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttributeNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bc89e-134">指定した <see cref="T:System.Xml.XmlAttribute" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-134">Return the specified <see cref="T:System.Xml.XmlAttribute" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute GetAttributeNode (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute GetAttributeNode(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetAttributeNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAttributeNode (name As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ GetAttributeNode(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="bc89e-135">取得する属性の名前。</span><span class="sxs-lookup"><span data-stu-id="bc89e-135">The name of the attribute to retrieve.</span></span> <span data-ttu-id="bc89e-136">これは修飾名です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-136">This is a qualified name.</span></span> <span data-ttu-id="bc89e-137">一致するノードの <see langword="Name" /> プロパティに一致します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-137">It is matched against the <see langword="Name" /> property of the matching node.</span></span></param>
        <summary><span data-ttu-id="bc89e-138">指定した名前の <see langword="XmlAttribute" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-138">Returns the <see langword="XmlAttribute" /> with the specified name.</span></span></summary>
        <returns><span data-ttu-id="bc89e-139">指定した <see langword="XmlAttribute" />。一致する属性が見つからなかった場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bc89e-139">The specified <see langword="XmlAttribute" /> or <see langword="null" /> if a matching attribute was not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bc89e-140">次の例は、要素に指定した属性があるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-140">The following example checks to see if the element has the specified attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.GetAttributeNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.GetAttributeNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.GetAttributeNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.GetAttributeNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.GetAttributeNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.GetAttributeNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute GetAttributeNode (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute GetAttributeNode(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetAttributeNode(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAttributeNode (localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ GetAttributeNode(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="bc89e-141">属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="bc89e-141">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="bc89e-142">属性の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="bc89e-142">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="bc89e-143">指定したローカル名および名前空間 URI の <see cref="T:System.Xml.XmlAttribute" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-143">Returns the <see cref="T:System.Xml.XmlAttribute" /> with the specified local name and namespace URI.</span></span></summary>
        <returns><span data-ttu-id="bc89e-144">指定した <see langword="XmlAttribute" />。一致する属性が見つからなかった場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bc89e-144">The specified <see langword="XmlAttribute" /> or <see langword="null" /> if a matching attribute was not found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetElementsByTagName">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bc89e-145">指定した名前に一致するすべての子孫の要素のリストを格納している <see cref="T:System.Xml.XmlNodeList" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-145">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList GetElementsByTagName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNodeList GetElementsByTagName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetElementsByTagName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElementsByTagName (name As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeList ^ GetElementsByTagName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="bc89e-146">一致する名前タグ。</span><span class="sxs-lookup"><span data-stu-id="bc89e-146">The name tag to match.</span></span> <span data-ttu-id="bc89e-147">これは修飾名です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-147">This is a qualified name.</span></span> <span data-ttu-id="bc89e-148">一致するノードの <see langword="Name" /> プロパティに一致します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-148">It is matched against the <see langword="Name" /> property of the matching node.</span></span> <span data-ttu-id="bc89e-149">アスタリスク (\*) は、すべてのタグに一致する特殊値です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-149">The asterisk (\*) is a special value that matches all tags.</span></span></param>
        <summary><span data-ttu-id="bc89e-150">指定した <see cref="P:System.Xml.XmlElement.Name" /> に一致するすべての子孫の要素のリストを格納している <see cref="T:System.Xml.XmlNodeList" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-150">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlElement.Name" />.</span></span></summary>
        <returns><span data-ttu-id="bc89e-151">一致しているすべてのノードのリストを格納している <see cref="T:System.Xml.XmlNodeList" />。</span><span class="sxs-lookup"><span data-stu-id="bc89e-151">An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</span></span> <span data-ttu-id="bc89e-152">一致するノードがない場合、リストは空です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-152">The list is empty if there are no matching nodes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc89e-153">ノードをたどってで発生する順序で配置するか、<xref:System.Xml.XmlElement>ツリー。</span><span class="sxs-lookup"><span data-stu-id="bc89e-153">The nodes are placed in the order in which they would be encountered in a preorder traversal of the <xref:System.Xml.XmlElement> tree.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bc89e-154">使用することをお勧め、<xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType>または<xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType>メソッドの代わりに、<xref:System.Xml.XmlElement.GetElementsByTagName%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bc89e-154">It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> method instead of the <xref:System.Xml.XmlElement.GetElementsByTagName%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc89e-155">次の例を取得し、すべての書名を表示します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-155">The following example gets and displays all the book titles.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.GetElementsByTagName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.GetElementsByTagName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.GetElementsByTagName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="bc89e-156">この例では、`2books.xml`の入力として、します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-156">The example uses the file, `2books.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlElement.GetElementsByTagName Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList GetElementsByTagName (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNodeList GetElementsByTagName(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElementsByTagName (localName As String, namespaceURI As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeList ^ GetElementsByTagName(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="bc89e-157">一致するローカル名。</span><span class="sxs-lookup"><span data-stu-id="bc89e-157">The local name to match.</span></span> <span data-ttu-id="bc89e-158">アスタリスク (\*) は、すべてのタグに一致する特殊値です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-158">The asterisk (\*) is a special value that matches all tags.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="bc89e-159">一致する名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="bc89e-159">The namespace URI to match.</span></span></param>
        <summary><span data-ttu-id="bc89e-160">指定した <see cref="P:System.Xml.XmlElement.LocalName" /> および <see cref="P:System.Xml.XmlElement.NamespaceURI" /> に一致するすべての子孫の要素のリストを格納している <see cref="T:System.Xml.XmlNodeList" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-160">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlElement.LocalName" /> and <see cref="P:System.Xml.XmlElement.NamespaceURI" />.</span></span></summary>
        <returns><span data-ttu-id="bc89e-161">一致しているすべてのノードのリストを格納している <see cref="T:System.Xml.XmlNodeList" />。</span><span class="sxs-lookup"><span data-stu-id="bc89e-161">An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</span></span> <span data-ttu-id="bc89e-162">一致するノードがない場合、リストは空です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-162">The list is empty if there are no matching nodes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc89e-163">ノードをたどってで発生する順序で配置するか、`XmlElement`ツリー。</span><span class="sxs-lookup"><span data-stu-id="bc89e-163">The nodes are placed in the order in which they would be encountered in a preorder traversal of the `XmlElement` tree.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bc89e-164">使用することをお勧め、<xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType>または<xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType>メソッドの代わりに、<xref:System.Xml.XmlElement.GetElementsByTagName%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bc89e-164">It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> method instead of the <xref:System.Xml.XmlElement.GetElementsByTagName%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HasAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bc89e-165">現在のノードに指定した属性があるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-165">Determines whether the current node has the specified attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HasAttribute">
      <MemberSignature Language="C#" Value="public virtual bool HasAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.HasAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasAttribute (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasAttribute(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="bc89e-166">検索対象の属性名です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-166">The name of the attribute to find.</span></span> <span data-ttu-id="bc89e-167">これは修飾名です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-167">This is a qualified name.</span></span> <span data-ttu-id="bc89e-168">一致するノードの <see langword="Name" /> プロパティに一致します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-168">It is matched against the <see langword="Name" /> property of the matching node.</span></span></param>
        <summary><span data-ttu-id="bc89e-169">現在のノードに指定した名前の属性があるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-169">Determines whether the current node has an attribute with the specified name.</span></span></summary>
        <returns>
          <span data-ttu-id="bc89e-170">現在のノードに指定した属性がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bc89e-170"><see langword="true" /> if the current node has the specified attribute; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bc89e-171">次の例は、要素に指定した属性があるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-171">The following example checks to see if the element has the specified attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAttribute">
      <MemberSignature Language="C#" Value="public virtual bool HasAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.HasAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasAttribute (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="bc89e-172">検索する属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="bc89e-172">The local name of the attribute to find.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="bc89e-173">検索する属性の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="bc89e-173">The namespace URI of the attribute to find.</span></span></param>
        <summary><span data-ttu-id="bc89e-174">指定したローカル名および名前空間 URI の属性が現在のノードにあるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-174">Determines whether the current node has an attribute with the specified local name and namespace URI.</span></span></summary>
        <returns>
          <span data-ttu-id="bc89e-175">現在のノードに指定した属性がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bc89e-175"><see langword="true" /> if the current node has the specified attribute; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAttributes">
      <MemberSignature Language="C#" Value="public virtual bool HasAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.HasAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasAttributes { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc89e-176">現在のノードが属性を持っているかどうかを示す <see langword="boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-176">Gets a <see langword="boolean" /> value indicating whether the current node has any attributes.</span></span></summary>
        <value>
          <span data-ttu-id="bc89e-177">現在のノードが属性を持っている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bc89e-177"><see langword="true" /> if the current node has attributes; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc89e-178">このプロパティは、ドキュメント オブジェクト モデル (DOM) の Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-178">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc89e-179">次の例では、ルート要素からすべての属性を削除します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-179">The following example removes all attributes from the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.HasAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.HasAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.HasAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.HasAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.HasAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.HasAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public override string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc89e-180">ノードとそのすべての子の連結している値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-180">Gets or sets the concatenated values of the node and all its children.</span></span></summary>
        <value><span data-ttu-id="bc89e-181">ノードとすべての子の連結された値。</span><span class="sxs-lookup"><span data-stu-id="bc89e-181">The concatenated values of the node and all its children.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc89e-182">このプロパティを設定すると、すべての子が指定された文字列の解析済みの内容に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="bc89e-182">Setting this property replaces all the children with the parsed contents of the given string.</span></span>  
  
 <span data-ttu-id="bc89e-183">このプロパティは、ドキュメント オブジェクト モデル (DOM) の Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-183">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc89e-184">次の例を比較して、`InnerText`と<xref:System.Xml.XmlElement.InnerXml%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="bc89e-184">The following example compares the `InnerText` and <xref:System.Xml.XmlElement.InnerXml%2A> properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public override string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.InnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc89e-185">このノードの子だけを表すマークアップを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-185">Gets or sets the markup representing just the children of this node.</span></span></summary>
        <value><span data-ttu-id="bc89e-186">このノードの子のマークアップ。</span><span class="sxs-lookup"><span data-stu-id="bc89e-186">The markup of the children of this node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc89e-187">このプロパティを設定すると、ノードの子が指定された文字列の解析済みの内容に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="bc89e-187">Setting this property replaces the children of the node with the parsed contents of the given string.</span></span> <span data-ttu-id="bc89e-188">文字列の解析は、現在の名前空間コンテキストで実行されます。</span><span class="sxs-lookup"><span data-stu-id="bc89e-188">The parsing is done in the current namespace context.</span></span>  
  
 <span data-ttu-id="bc89e-189">このプロパティは、ドキュメント オブジェクト モデル (DOM) の Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-189">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc89e-190">次の例を比較して、<xref:System.Xml.XmlElement.InnerText%2A>と`InnerXml`プロパティです。</span><span class="sxs-lookup"><span data-stu-id="bc89e-190">The following example compares the <xref:System.Xml.XmlElement.InnerText%2A> and `InnerXml` properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="bc89e-191">このプロパティの設定時に指定される XML は、整形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="bc89e-191">The XML specified when setting this property is not well-formed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc89e-192">要素のタグ形式を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-192">Gets or sets the tag format of the element.</span></span></summary>
        <value><span data-ttu-id="bc89e-193">返します<see langword="true" />かどうか、要素は短いタグ形式でシリアル化するのには"&lt;項目/&gt;"です。<see langword="false" />長い形式の"&lt;項目&gt;&lt;項目/&gt;"です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-193">Returns <see langword="true" /> if the element is to be serialized in the short tag format "&lt;item/&gt;"; <see langword="false" /> for the long format "&lt;item&gt;&lt;/item&gt;".</span></span>  
  
 <span data-ttu-id="bc89e-194">このプロパティを設定する場合、<see langword="true" /> に設定すると、要素の子が削除され、要素は短いタグ形式でシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="bc89e-194">When setting this property, if set to <see langword="true" />, the children of the element are removed and the element is serialized in the short tag format.</span></span> <span data-ttu-id="bc89e-195"><see langword="false" /> に設定した場合は、要素に内容があるかどうかにかかわらず、プロパティの値は変更されます。要素が空の場合は、長い形式でシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="bc89e-195">If set to <see langword="false" />, the value of the property is changed (regardless of whether or not the element has content); if the element is empty, it is serialized in the long format.</span></span>  
  
 <span data-ttu-id="bc89e-196">このプロパティは、ドキュメント オブジェクト モデル (DOM) の Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-196">This property is a Microsoft extension to the Document Object Model (DOM).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc89e-197">このプロパティは、ドキュメント オブジェクト モデル (DOM) の Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-197">This property is a Microsoft extension of the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc89e-198">次の例では、空の要素にコンテンツを追加します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-198">The following example adds content to an empty element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.IsEmpty Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.IsEmpty Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.IsEmpty Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.IsEmpty Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.IsEmpty Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.IsEmpty Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc89e-199">現在のノードのローカル名を取得します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-199">Gets the local name of the current node.</span></span></summary>
        <value><span data-ttu-id="bc89e-200">プリフィックスを削除した現在のノードの名前。</span><span class="sxs-lookup"><span data-stu-id="bc89e-200">The name of the current node with the prefix removed.</span></span> <span data-ttu-id="bc89e-201">たとえば、<see langword="LocalName" />要素の書籍&lt;bk:book&gt;です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-201">For example, <see langword="LocalName" /> is book for the element &lt;bk:book&gt;.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc89e-202">ノードには、プレフィックスがない場合`LocalName`と同じ<xref:System.Xml.XmlElement.Name%2A>です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-202">If the node does not have a prefix, `LocalName` is the same as <xref:System.Xml.XmlElement.Name%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc89e-203">次の例では、ISBN 要素に関する情報が表示されます。</span><span class="sxs-lookup"><span data-stu-id="bc89e-203">The following example displays information on the ISBN element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc89e-204">ノードの限定名を取得します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-204">Gets the qualified name of the node.</span></span></summary>
        <value><span data-ttu-id="bc89e-205">ノードの限定名。</span><span class="sxs-lookup"><span data-stu-id="bc89e-205">The qualified name of the node.</span></span> <span data-ttu-id="bc89e-206"><see langword="XmlElement" /> ノードの場合、これは要素のタグ名です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-206">For <see langword="XmlElement" /> nodes, this is the tag name of the element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bc89e-207">次の例では、ISBN 要素に関する情報が表示されます。</span><span class="sxs-lookup"><span data-stu-id="bc89e-207">The following example displays information on the ISBN element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlElement.LocalName" />
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public override string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc89e-208">このノードの名前空間 URI を取得します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-208">Gets the namespace URI of this node.</span></span></summary>
        <value><span data-ttu-id="bc89e-209">このノードの名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="bc89e-209">The namespace URI of this node.</span></span> <span data-ttu-id="bc89e-210">名前空間 URI がない場合、このプロパティは String.Empty を返します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-210">If there is no namespace URI, this property returns String.Empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc89e-211">これは、作成時に URI が指定された名前空間です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-211">This is the namespace URI specified at creation time.</span></span> <span data-ttu-id="bc89e-212">たとえば、`NamespaceURI`要素の urn: サンプル\<bk:book xmlns:bk =「urn: サンプル」></span><span class="sxs-lookup"><span data-stu-id="bc89e-212">For example, `NamespaceURI` is urn:samples for the element \<bk:book xmlns:bk= "urn:samples"></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc89e-213">次の例では、ISBN 要素に関する情報が表示されます。</span><span class="sxs-lookup"><span data-stu-id="bc89e-213">The following example displays information on the ISBN element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSibling">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode NextSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode NextSibling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.NextSibling" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NextSibling As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ NextSibling { System::Xml::XmlNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc89e-214">この要素の直後の <see cref="T:System.Xml.XmlNode" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-214">Gets the <see cref="T:System.Xml.XmlNode" /> immediately following this element.</span></span></summary>
        <value><span data-ttu-id="bc89e-215">この要素の直後の <see langword="XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="bc89e-215">The <see langword="XmlNode" /> immediately following this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc89e-216">現在のノードの種類を取得します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-216">Gets the type of the current node.</span></span></summary>
        <value><span data-ttu-id="bc89e-217">ノード型。</span><span class="sxs-lookup"><span data-stu-id="bc89e-217">The node type.</span></span> <span data-ttu-id="bc89e-218"><see langword="XmlElement" /> ノードの場合、この値は XmlNodeType.Element です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-218">For <see langword="XmlElement" /> nodes, this value is XmlNodeType.Element.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="OwnerDocument">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlDocument OwnerDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocument OwnerDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.OwnerDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OwnerDocument As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlDocument ^ OwnerDocument { System::Xml::XmlDocument ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc89e-219">このノードが属する <see cref="T:System.Xml.XmlDocument" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-219">Gets the <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</span></span></summary>
        <value><span data-ttu-id="bc89e-220">この要素が属する <see langword="XmlDocument" />。</span><span class="sxs-lookup"><span data-stu-id="bc89e-220">The <see langword="XmlDocument" /> to which this element belongs.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc89e-221">ノードを現在のノードを追加する場合を使用して、`XmlDocument`によって返される、`OwnerDocument`ノードを作成するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="bc89e-221">When adding nodes to the current node, use the `XmlDocument` returned by the `OwnerDocument` property to create the node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc89e-222">次の例では、XML ドキュメントに新しい要素を挿入します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-222">The following example inserts a new element into an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.OwnerDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.OwnerDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.OwnerDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.OwnerDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.OwnerDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.OwnerDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode ParentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode ParentNode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.ParentNode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ParentNode As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ ParentNode { System::Xml::XmlNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc89e-223">このノードの親 (親を持つノードの場合) を取得します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-223">Gets the parent of this node (for nodes that can have parents).</span></span></summary>
        <value><span data-ttu-id="bc89e-224">現在のノードの親である <see langword="XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="bc89e-224">The <see langword="XmlNode" /> that is the parent of the current node.</span></span> <span data-ttu-id="bc89e-225">ノードが作成された直後でまだツリーに追加されていない場合、またはツリーから削除された場合、親は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-225">If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is <see langword="null" />.</span></span> <span data-ttu-id="bc89e-226">他のすべてのノードについては、返される値はノードの <see cref="P:System.Xml.XmlNode.NodeType" /> によって異なります。</span><span class="sxs-lookup"><span data-stu-id="bc89e-226">For all other nodes, the value returned depends on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node.</span></span> <span data-ttu-id="bc89e-227"><see langword="ParentNode" /> プロパティの有効な戻り値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-227">The following table describes the possible return values for the <see langword="ParentNode" /> property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public override string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc89e-228">このノードの名前空間プリフィックスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-228">Gets or sets the namespace prefix of this node.</span></span></summary>
        <value><span data-ttu-id="bc89e-229">このノードの名前空間プリフィックス。</span><span class="sxs-lookup"><span data-stu-id="bc89e-229">The namespace prefix of this node.</span></span> <span data-ttu-id="bc89e-230">プリフィックスがない場合、このプロパティは String.Empty を返します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-230">If there is no prefix, this property returns String.Empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc89e-231">このプロパティの変更を設定、<xref:System.Xml.XmlElement.Name%2A>の修飾名が保持されているプロパティ、`XmlElement`です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-231">Setting this property changes the <xref:System.Xml.XmlElement.Name%2A> property, which holds the qualified name for an `XmlElement`.</span></span> <span data-ttu-id="bc89e-232">ただし、変更、プレフィックスは変わりません名前空間の要素の URI。</span><span class="sxs-lookup"><span data-stu-id="bc89e-232">However, changing the prefix does not change the namespace URI of the element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc89e-233">次の例では、ISBN 要素に関する情報が表示されます。</span><span class="sxs-lookup"><span data-stu-id="bc89e-233">The following example displays information on the ISBN element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bc89e-234">このノードは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-234">This node is read-only</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="bc89e-235">指定したプレフィックスに無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="bc89e-235">The specified prefix contains an invalid character.</span></span>  
  
 <span data-ttu-id="bc89e-236">指定されたプリフィックスの書式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="bc89e-236">The specified prefix is malformed.</span></span>  
  
 <span data-ttu-id="bc89e-237">このノードの namespaceURI が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-237">The namespaceURI of this node is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="bc89e-238">指定したプレフィックスは "xml" で、このノードの namespaceURI が http://www.w3.org/XML/1998/namespace と異なります。</span><span class="sxs-lookup"><span data-stu-id="bc89e-238">The specified prefix is "xml" and the namespaceURI of this node is different from http://www.w3.org/XML/1998/namespace.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public override void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bc89e-239">すべての指定した属性と、現在のノードの子ノードを削除します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-239">Removes all specified attributes and children of the current node.</span></span> <span data-ttu-id="bc89e-240">既存の属性は削除されません。</span><span class="sxs-lookup"><span data-stu-id="bc89e-240">Default attributes are not removed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bc89e-241">次の例では、ルート要素からすべての属性および子ノードを削除します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-241">The following example removes all attributes and child nodes from the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAll Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAll Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAll Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllAttributes">
      <MemberSignature Language="C#" Value="public virtual void RemoveAllAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAllAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAllAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAllAttributes ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAllAttributes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bc89e-242">指定されたすべての属性が要素から削除されます。</span><span class="sxs-lookup"><span data-stu-id="bc89e-242">Removes all specified attributes from the element.</span></span> <span data-ttu-id="bc89e-243">既存の属性は削除されません。</span><span class="sxs-lookup"><span data-stu-id="bc89e-243">Default attributes are not removed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc89e-244">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-244">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc89e-245">次の例では、ルート要素からすべての属性を削除します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-245">The following example removes all attributes from the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAllAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAllAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAllAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAllAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAllAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAllAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bc89e-246">指定した属性を削除します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-246">Removes the specified attribute.</span></span> <span data-ttu-id="bc89e-247">(削除された属性に既定値がある場合は、すぐに置き換えられます)。</span><span class="sxs-lookup"><span data-stu-id="bc89e-247">(If the removed attribute has a default value, it is immediately replaced).</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveAttribute">
      <MemberSignature Language="C#" Value="public virtual void RemoveAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAttribute (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAttribute(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="bc89e-248">削除する属性の名前。これは修飾名です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-248">The name of the attribute to remove.This is a qualified name.</span></span> <span data-ttu-id="bc89e-249">一致するノードの <see langword="Name" /> プロパティに一致します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-249">It is matched against the <see langword="Name" /> property of the matching node.</span></span></param>
        <summary><span data-ttu-id="bc89e-250">名前によって属性を削除します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-250">Removes an attribute by name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc89e-251">削除された属性は、既定値がある、既定値を含む属性がすぐに表示する既知の場合と、該当する場合、対応する名前空間 URI、ローカル名、およびプレフィックスです。</span><span class="sxs-lookup"><span data-stu-id="bc89e-251">If the removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc89e-252">次の例では、要素から属性を削除します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-252">The following example removes an attribute from an element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bc89e-253">ノードは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-253">The node is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAttribute">
      <MemberSignature Language="C#" Value="public virtual void RemoveAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAttribute (localName As String, namespaceURI As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="bc89e-254">削除する属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="bc89e-254">The local name of the attribute to remove.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="bc89e-255">削除する属性の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="bc89e-255">The namespace URI of the attribute to remove.</span></span></param>
        <summary><span data-ttu-id="bc89e-256">指定したローカル名および名前空間 URI の属性を削除します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-256">Removes an attribute with the specified local name and namespace URI.</span></span> <span data-ttu-id="bc89e-257">(削除された属性に既定値がある場合は、すぐに置き換えられます)。</span><span class="sxs-lookup"><span data-stu-id="bc89e-257">(If the removed attribute has a default value, it is immediately replaced).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc89e-258">削除された属性は、既定値がある、既定値を含む属性がすぐに表示する既知の場合と、該当する場合、対応する名前空間 URI、ローカル名、およびプレフィックスです。</span><span class="sxs-lookup"><span data-stu-id="bc89e-258">If the removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc89e-259">次の例では、要素から属性を削除します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-259">The following example removes an attribute from an element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bc89e-260">ノードは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-260">The node is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAttributeAt">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode RemoveAttributeAt (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode RemoveAttributeAt(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveAttributeAt (i As Integer) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ RemoveAttributeAt(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="bc89e-261">削除するノードのインデックス。</span><span class="sxs-lookup"><span data-stu-id="bc89e-261">The index of the node to remove.</span></span> <span data-ttu-id="bc89e-262">最初のノードのインデックスは 0 です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-262">The first node has index 0.</span></span></param>
        <summary><span data-ttu-id="bc89e-263">指定したインデックスの属性ノードを要素から削除します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-263">Removes the attribute node with the specified index from the element.</span></span> <span data-ttu-id="bc89e-264">(削除された属性に既定値がある場合は、すぐに置き換えられます)。</span><span class="sxs-lookup"><span data-stu-id="bc89e-264">(If the removed attribute has a default value, it is immediately replaced).</span></span></summary>
        <returns><span data-ttu-id="bc89e-265">削除された属性ノード。指定したインデックス位置にノードがない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bc89e-265">The attribute node removed or <see langword="null" /> if there is no node at the given index.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc89e-266">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-266">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc89e-267">次の例では、要素から属性を削除します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-267">The following example removes an attribute from an element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAttributeAt Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAttributeAt Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeAt Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAttributeAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveAttributeNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bc89e-268"><see cref="T:System.Xml.XmlAttribute" /> を削除します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-268">Removes an <see cref="T:System.Xml.XmlAttribute" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute RemoveAttributeNode (System.Xml.XmlAttribute oldAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute RemoveAttributeNode(class System.Xml.XmlAttribute oldAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveAttributeNode (oldAttr As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ RemoveAttributeNode(System::Xml::XmlAttribute ^ oldAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldAttr" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="oldAttr"><span data-ttu-id="bc89e-269">削除する <see langword="XmlAttribute" /> ノード。</span><span class="sxs-lookup"><span data-stu-id="bc89e-269">The <see langword="XmlAttribute" /> node to remove.</span></span> <span data-ttu-id="bc89e-270">削除された属性に既定値がある場合は、すぐに置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="bc89e-270">If the removed attribute has a default value, it is immediately replaced.</span></span></param>
        <summary><span data-ttu-id="bc89e-271">指定した <see cref="T:System.Xml.XmlAttribute" /> を削除します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-271">Removes the specified <see cref="T:System.Xml.XmlAttribute" />.</span></span></summary>
        <returns><span data-ttu-id="bc89e-272">削除された <see langword="XmlAttribute" />。<paramref name="oldAttr" /> が <see langword="null" /> の属性ノードでない場合は <see langword="XmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="bc89e-272">The removed <see langword="XmlAttribute" /> or <see langword="null" /> if <paramref name="oldAttr" /> is not an attribute node of the <see langword="XmlElement" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bc89e-273">このノードは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-273">This node is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute RemoveAttributeNode (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute RemoveAttributeNode(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveAttributeNode (localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ RemoveAttributeNode(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="bc89e-274">属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="bc89e-274">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="bc89e-275">属性の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="bc89e-275">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="bc89e-276">ローカル名および名前空間 URI で指定された <see cref="T:System.Xml.XmlAttribute" /> を削除します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-276">Removes the <see cref="T:System.Xml.XmlAttribute" /> specified by the local name and namespace URI.</span></span> <span data-ttu-id="bc89e-277">(削除された属性に既定値がある場合は、すぐに置き換えられます)。</span><span class="sxs-lookup"><span data-stu-id="bc89e-277">(If the removed attribute has a default value, it is immediately replaced).</span></span></summary>
        <returns><span data-ttu-id="bc89e-278">削除された <see langword="XmlAttribute" />。<see langword="null" /> に一致する属性ノードがない場合は <see langword="XmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="bc89e-278">The removed <see langword="XmlAttribute" /> or <see langword="null" /> if the <see langword="XmlElement" /> does not have a matching attribute node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bc89e-279">次の例では、要素から属性を削除します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-279">The following example removes an attribute from an element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAttributeNode1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeNode1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAttributeNode1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeNode1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAttributeNode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeNode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bc89e-280">このノードは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-280">This node is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public override System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc89e-281">スキーマ検証の結果、このノードに割り当てられているスキーマ検証後の infoset を取得します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-281">Gets the post schema validation infoset that has been assigned to this node as a result of schema validation.</span></span></summary>
        <value><span data-ttu-id="bc89e-282">このノードのスキーマ検証後の infoset が格納された <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc89e-282">An <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> object containing the post schema validation infoset of this node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc89e-283"><xref:System.Xml.XmlElement.SchemaInfo%2A>このノードが検証されるときにプロパティが設定されています。</span><span class="sxs-lookup"><span data-stu-id="bc89e-283">The <xref:System.Xml.XmlElement.SchemaInfo%2A> property is set when this node is validated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bc89e-284">指定した属性の値を設定します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-284">Sets the value of the specified attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public virtual void SetAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAttribute(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="bc89e-285">作成または変更する属性の名前。</span><span class="sxs-lookup"><span data-stu-id="bc89e-285">The name of the attribute to create or alter.</span></span> <span data-ttu-id="bc89e-286">これは修飾名です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-286">This is a qualified name.</span></span> <span data-ttu-id="bc89e-287">名前にコロンが含まれている場合、その名前はプリフィックスとローカル名コンポーネントに解析されます。</span><span class="sxs-lookup"><span data-stu-id="bc89e-287">If the name contains a colon it is parsed into prefix and local name components.</span></span></param>
        <param name="value"><span data-ttu-id="bc89e-288">属性に設定する値。</span><span class="sxs-lookup"><span data-stu-id="bc89e-288">The value to set for the attribute.</span></span></param>
        <summary><span data-ttu-id="bc89e-289">指定した名前の属性の値を設定します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-289">Sets the value of the attribute with the specified name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc89e-290">その値が変更された場合は同じ名前の属性は、要素内に存在では既に、`value`です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-290">If an attribute with the same name is already present in the element, its value is changed to that of `value`.</span></span> <span data-ttu-id="bc89e-291">`value` 単純な文字列です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-291">`value` is a simple string.</span></span> <span data-ttu-id="bc89e-292">設定されているようには解析されません。</span><span class="sxs-lookup"><span data-stu-id="bc89e-292">It is not parsed as it is being set.</span></span> <span data-ttu-id="bc89e-293">エンティティ参照として認識される構文など、すべてのマークアップでは、リテラル テキストとして扱われ、書き出されるときに、実装によって正しくエスケープする必要があります。エンティティ参照が含まれる属性値を割り当てるには、するためにユーザーを作成する必要があります、<xref:System.Xml.XmlAttribute>ノードおよび<xref:System.Xml.XmlText>と<xref:System.Xml.XmlEntityReference>、ノードが、適切なサブツリーを構築しを使用して<xref:System.Xml.XmlElement.SetAttributeNode%2A>を属性の値として割り当てます。</span><span class="sxs-lookup"><span data-stu-id="bc89e-293">Any markup, such as syntax to be recognized as an entity reference, is treated as literal text and needs to be properly escaped by the implementation when it is written out. In order to assign an attribute value that contains entity references, the user must create an <xref:System.Xml.XmlAttribute> node plus any <xref:System.Xml.XmlText> and <xref:System.Xml.XmlEntityReference> nodes, build the appropriate subtree and use <xref:System.Xml.XmlElement.SetAttributeNode%2A> to assign it as the value of an attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="bc89e-294">指定した名前に無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="bc89e-294">The specified name contains an invalid character.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bc89e-295">ノードは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-295">The node is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public virtual string SetAttribute (string localName, string namespaceURI, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string SetAttribute(string localName, string namespaceURI, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAttribute (localName As String, namespaceURI As String, value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ SetAttribute(System::String ^ localName, System::String ^ namespaceURI, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="bc89e-296">属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="bc89e-296">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="bc89e-297">属性の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="bc89e-297">The namespace URI of the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="bc89e-298">属性に設定する値。</span><span class="sxs-lookup"><span data-stu-id="bc89e-298">The value to set for the attribute.</span></span></param>
        <summary><span data-ttu-id="bc89e-299">指定したローカル名および名前空間 URI の属性の値を設定します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-299">Sets the value of the attribute with the specified local name and namespace URI.</span></span></summary>
        <returns><span data-ttu-id="bc89e-300">属性値。</span><span class="sxs-lookup"><span data-stu-id="bc89e-300">The attribute value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAttributeNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bc89e-301">新しい <see cref="T:System.Xml.XmlAttribute" /> を追加します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-301">Adds a new <see cref="T:System.Xml.XmlAttribute" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute SetAttributeNode (System.Xml.XmlAttribute newAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute SetAttributeNode(class System.Xml.XmlAttribute newAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAttributeNode (newAttr As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ SetAttributeNode(System::Xml::XmlAttribute ^ newAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAttr" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="newAttr"><span data-ttu-id="bc89e-302">この要素の属性コレクションに追加する <see langword="XmlAttribute" /> ノード。</span><span class="sxs-lookup"><span data-stu-id="bc89e-302">The <see langword="XmlAttribute" /> node to add to the attribute collection for this element.</span></span></param>
        <summary><span data-ttu-id="bc89e-303">指定した <see cref="T:System.Xml.XmlAttribute" /> を追加します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-303">Adds the specified <see cref="T:System.Xml.XmlAttribute" />.</span></span></summary>
        <returns><span data-ttu-id="bc89e-304">属性によって同じ名前の既存の属性が置換される場合は、古い <see langword="XmlAttribute" /> が返されます。それ以外の場合は、<see langword="null" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="bc89e-304">If the attribute replaces an existing attribute with the same name, the old <see langword="XmlAttribute" /> is returned; otherwise, <see langword="null" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc89e-305">その名前を持つ属性が要素に存在では既に、新しいものに置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="bc89e-305">If an attribute with that name is already present in the element, it is replaced by the new one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bc89e-306"><paramref name="newAttr" /> は、このノードを作成したドキュメントとは異なるドキュメントから作成されました。</span><span class="sxs-lookup"><span data-stu-id="bc89e-306">The <paramref name="newAttr" /> was created from a different document than the one that created this node.</span></span> <span data-ttu-id="bc89e-307">または、このノードが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-307">Or this node is read-only.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bc89e-308"><paramref name="newAttr" /> は、既に別の <see langword="XmlElement" /> オブジェクトの属性になっています。</span><span class="sxs-lookup"><span data-stu-id="bc89e-308">The <paramref name="newAttr" /> is already an attribute of another <see langword="XmlElement" /> object.</span></span> <span data-ttu-id="bc89e-309"><see langword="XmlAttribute" /> ノードのクローンを明示的に作成し、それらのクローンを他の <see langword="XmlElement" /> オブジェクトで再利用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="bc89e-309">You must explicitly clone <see langword="XmlAttribute" /> nodes to re-use them in other <see langword="XmlElement" /> objects.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute SetAttributeNode (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute SetAttributeNode(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAttributeNode (localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ SetAttributeNode(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="bc89e-310">属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="bc89e-310">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="bc89e-311">属性の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="bc89e-311">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="bc89e-312">指定した <see cref="T:System.Xml.XmlAttribute" /> を追加します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-312">Adds the specified <see cref="T:System.Xml.XmlAttribute" />.</span></span></summary>
        <returns><span data-ttu-id="bc89e-313">追加する <see langword="XmlAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="bc89e-313">The <see langword="XmlAttribute" /> to add.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc89e-314">`XmlAttribute`子はありません。</span><span class="sxs-lookup"><span data-stu-id="bc89e-314">The `XmlAttribute` does not have any children.</span></span> <span data-ttu-id="bc89e-315">使用して<xref:System.Xml.XmlAttribute.Value%2A>テキスト値を属性に割り当てたり使用<xref:System.Xml.XmlNode.AppendChild%2A>(または同様のメソッド)、属性に子を追加します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-315">Use <xref:System.Xml.XmlAttribute.Value%2A> to assign a text value to the attribute or use <xref:System.Xml.XmlNode.AppendChild%2A> (or a similar method) to add children to the attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc89e-316">次の例では、要素に属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-316">The following example adds an attribute to an element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.SetAttributeNode1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.SetAttributeNode1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.SetAttributeNode1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.SetAttributeNode1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.SetAttributeNode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.SetAttributeNode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteContentTo">
      <MemberSignature Language="C#" Value="public override void WriteContentTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteContentTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteContentTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteContentTo(System::Xml::XmlWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="bc89e-317">保存先の <see langword="XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="bc89e-317">The <see langword="XmlWriter" /> to which you want to save.</span></span></param>
        <summary><span data-ttu-id="bc89e-318">ノードのすべての子を、指定した <see cref="T:System.Xml.XmlWriter" /> に保存します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-318">Saves all the children of the node to the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc89e-319">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-319">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc89e-320">次の例では、コンソールに、要素の内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-320">The following example displays the contents of the element to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.WriteContentTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.WriteContentTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.WriteContentTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.WriteContentTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.WriteContentTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.WriteContentTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="bc89e-321">保存先の <see langword="XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="bc89e-321">The <see langword="XmlWriter" /> to which you want to save.</span></span></param>
        <summary><span data-ttu-id="bc89e-322">指定した <see cref="T:System.Xml.XmlWriter" /> に現在のノードを保存します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-322">Saves the current node to the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc89e-323">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="bc89e-323">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc89e-324">次の例では、要素に属性を追加し、変更された要素を表示します。</span><span class="sxs-lookup"><span data-stu-id="bc89e-324">The following example adds an attribute to an element and then displays the modified element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.WriteTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.WriteTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.WriteTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.WriteTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.WriteTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.WriteTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>