<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlElement.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d7a4d609de9aa613973f5d46855ba168b2714a10.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d7a4d609de9aa613973f5d46855ba168b2714a10</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlElement">
          <source>Represents an element.</source>
          <target state="translated">1 つの要素を表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlElement">
          <source>Elements are one of the most common nodes in the W3C Document Object Model (DOM).</source>
          <target state="translated">要素は、最も一般的なノードで、W3C ドキュメント オブジェクト モデル (DOM) のいずれか。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlElement">
          <source>Elements can have attributes associated with them.</source>
          <target state="translated">要素は、それらに関連付けられた属性を持つことができます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlElement">
          <source>The <ph id="ph1">`XmlElement`</ph> class has many methods for accessing attributes (<ph id="ph2">&lt;xref:System.Xml.XmlElement.GetAttribute%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlElement.SetAttribute%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.XmlElement.RemoveAttribute%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Xml.XmlElement.GetAttributeNode%2A&gt;</ph>, and so on).</source>
          <target state="translated"><ph id="ph1">`XmlElement`</ph>クラス属性にアクセスするための多くのメソッドがあります (<ph id="ph2">&lt;xref:System.Xml.XmlElement.GetAttribute%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Xml.XmlElement.SetAttribute%2A&gt;</ph>、 <ph id="ph4">&lt;xref:System.Xml.XmlElement.RemoveAttribute%2A&gt;</ph>、<ph id="ph5">&lt;xref:System.Xml.XmlElement.GetAttributeNode%2A&gt;</ph>など)。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlElement">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Xml.XmlElement.Attributes%2A&gt;</ph> property which returns an <ph id="ph2">&lt;xref:System.Xml.XmlAttributeCollection&gt;</ph> enabling you to access attributes by name or index from the collection.</source>
          <target state="translated">使用することも、<ph id="ph1">&lt;xref:System.Xml.XmlElement.Attributes%2A&gt;</ph>プロパティが返されます、<ph id="ph2">&lt;xref:System.Xml.XmlAttributeCollection&gt;</ph>コレクションから名前またはインデックスによって属性にアクセスできるようにします。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
          <source>The namespace prefix; see the <ph id="ph1">&lt;see cref="P:System.Xml.XmlElement.Prefix" /&gt;</ph> property.</source>
          <target state="translated">名前空間プリフィックス。<ph id="ph1">&lt;see cref="P:System.Xml.XmlElement.Prefix" /&gt;</ph> プロパティのトピックを参照してください。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
          <source>The local name; see the <ph id="ph1">&lt;see cref="P:System.Xml.XmlElement.LocalName" /&gt;</ph> property.</source>
          <target state="translated">ローカル名。<ph id="ph1">&lt;see cref="P:System.Xml.XmlElement.LocalName" /&gt;</ph> プロパティのトピックを参照してください。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
          <source>The namespace URI; see the <ph id="ph1">&lt;see cref="P:System.Xml.XmlElement.NamespaceURI" /&gt;</ph> property.</source>
          <target state="translated">名前空間 URI。<ph id="ph1">&lt;see cref="P:System.Xml.XmlElement.NamespaceURI" /&gt;</ph> プロパティのトピックを参照してください。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
          <source>The parent XML document.</source>
          <target state="translated">親 XML ドキュメント。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
          <source>Do not instantiate an <ph id="ph1">&lt;xref:System.Xml.XmlElement&gt;</ph> directly; instead, use methods such as <ph id="ph2">&lt;xref:System.Xml.XmlDocument.CreateElement%2A&gt;</ph>.</source>
          <target state="translated">インスタンス化しないで、<ph id="ph1">&lt;xref:System.Xml.XmlElement&gt;</ph>直接。 代わりに、メソッドを使用してなど<ph id="ph2">&lt;xref:System.Xml.XmlDocument.CreateElement%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.Attributes">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttributeCollection" /&gt;</ph> containing the list of attributes for this node.</source>
          <target state="translated">このノードの属性の一覧を格納している <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttributeCollection" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.Attributes">
          <source><ph id="ph1">&lt;see cref="T:System.Xml.XmlAttributeCollection" /&gt;</ph> containing the list of attributes for this node.</source>
          <target state="translated">このノードの属性の一覧を格納している <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttributeCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.Attributes">
          <source>The following example uses changes the value of the first attribute.</source>
          <target state="translated">次の例では、最初の属性の値を変更します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.CloneNode(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to recursively clone the subtree under the specified node; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to clone only the node itself (and its attributes if the node is an <ph id="ph3">&lt;see langword="XmlElement" /&gt;</ph>).</source>
          <target state="translated">指定したノードの下にあるサブツリーのクローンを順次作成していく場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。指定したノード (ノードが <ph id="ph3">&lt;see langword="XmlElement" /&gt;</ph> の場合はその属性も含む) だけのクローンを作成する場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.CloneNode(System.Boolean)">
          <source>Creates a duplicate of this node.</source>
          <target state="translated">このノードの複製を作成します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.CloneNode(System.Boolean)">
          <source>The cloned node.</source>
          <target state="translated">クローンとして作成されたノード。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.CloneNode(System.Boolean)">
          <source>This method serves as a copy constructor for nodes.</source>
          <target state="translated">このメソッドは、ノードのコピー コンス トラクターとして機能します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.CloneNode(System.Boolean)">
          <source>The duplicate node has no parent (<ph id="ph1">&lt;xref:System.Xml.XmlNode.ParentNode%2A&gt;</ph> returns <ph id="ph2">`null`</ph>).</source>
          <target state="translated">複製されたノードが親を持たない (<ph id="ph1">&lt;xref:System.Xml.XmlNode.ParentNode%2A&gt;</ph>返します<ph id="ph2">`null`</ph>)。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.CloneNode(System.Boolean)">
          <source>The following example creates a new element, clones it, and then adds both elements into an XML document.</source>
          <target state="translated">次の例は、新しい要素を作成のクローンを作成し、XML ドキュメントに両方の要素を追加します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlElement">
          <source>Returns the attribute value for the specified attribute.</source>
          <target state="translated">指定した属性の属性値を返します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttribute(System.String)">
          <source>The name of the attribute to retrieve.</source>
          <target state="translated">取得する属性の名前。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttribute(System.String)">
          <source>This is a qualified name.</source>
          <target state="translated">これは修飾名です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttribute(System.String)">
          <source>It is matched against the <ph id="ph1">&lt;see langword="Name" /&gt;</ph> property of the matching node.</source>
          <target state="translated">一致するノードの <ph id="ph1">&lt;see langword="Name" /&gt;</ph> プロパティに一致します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttribute(System.String)">
          <source>Returns the value for the attribute with the specified name.</source>
          <target state="translated">指定された名前を持つ属性の値を返します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttribute(System.String)">
          <source>The value of the specified attribute.</source>
          <target state="translated">指定した属性の値。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttribute(System.String)">
          <source>An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.</source>
          <target state="translated">一致する属性が見つからなかった場合や、属性には指定された値も既定値もない場合は、空の文字列が返されます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.GetAttribute(System.String)">
          <source>The following example checks to see if the element has the specified attribute.</source>
          <target state="translated">次の例は、要素に指定した属性があるかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)">
          <source>The local name of the attribute to retrieve.</source>
          <target state="translated">取得する属性のローカル名。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)">
          <source>The namespace URI of the attribute to retrieve.</source>
          <target state="translated">取得する属性の名前空間 URI。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)">
          <source>Returns the value for the attribute with the specified local name and namespace URI.</source>
          <target state="translated">指定したローカル名および名前空間 URI の属性の値を返します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)">
          <source>The value of the specified attribute.</source>
          <target state="translated">指定した属性の値。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)">
          <source>An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.</source>
          <target state="translated">一致する属性が見つからなかった場合や、属性には指定された値も既定値もない場合は、空の文字列が返されます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlElement">
          <source>Return the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttributeNode(System.String)">
          <source>The name of the attribute to retrieve.</source>
          <target state="translated">取得する属性の名前。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttributeNode(System.String)">
          <source>This is a qualified name.</source>
          <target state="translated">これは修飾名です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttributeNode(System.String)">
          <source>It is matched against the <ph id="ph1">&lt;see langword="Name" /&gt;</ph> property of the matching node.</source>
          <target state="translated">一致するノードの <ph id="ph1">&lt;see langword="Name" /&gt;</ph> プロパティに一致します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttributeNode(System.String)">
          <source>Returns the <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> with the specified name.</source>
          <target state="translated">指定した名前の <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttributeNode(System.String)">
          <source>The specified <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if a matching attribute was not found.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph>。一致する属性が見つからなかった場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.GetAttributeNode(System.String)">
          <source>The following example checks to see if the element has the specified attribute.</source>
          <target state="translated">次の例は、要素に指定した属性があるかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttributeNode(System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">属性のローカル名。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttributeNode(System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">属性の名前空間 URI。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttributeNode(System.String,System.String)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph> with the specified local name and namespace URI.</source>
          <target state="translated">指定したローカル名および名前空間 URI の <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttributeNode(System.String,System.String)">
          <source>The specified <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if a matching attribute was not found.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph>。一致する属性が見つからなかった場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlElement">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> containing a list of all descendant elements that match the specified name.</source>
          <target state="translated">指定した名前に一致するすべての子孫の要素のリストを格納している <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
          <source>The name tag to match.</source>
          <target state="translated">一致する名前タグ。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
          <source>This is a qualified name.</source>
          <target state="translated">これは修飾名です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
          <source>It is matched against the <ph id="ph1">&lt;see langword="Name" /&gt;</ph> property of the matching node.</source>
          <target state="translated">一致するノードの <ph id="ph1">&lt;see langword="Name" /&gt;</ph> プロパティに一致します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
          <source>The asterisk (*) is a special value that matches all tags.</source>
          <target state="translated">アスタリスク (*) は、すべてのタグに一致する特殊値です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> containing a list of all descendant elements that match the specified <ph id="ph2">&lt;see cref="P:System.Xml.XmlElement.Name" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph2">&lt;see cref="P:System.Xml.XmlElement.Name" /&gt;</ph> に一致するすべての子孫の要素のリストを格納している <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> containing a list of all matching nodes.</source>
          <target state="translated">一致しているすべてのノードのリストを格納している <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
          <source>The list is empty if there are no matching nodes.</source>
          <target state="translated">一致するノードがない場合、リストは空です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
          <source>The nodes are placed in the order in which they would be encountered in a preorder traversal of the <ph id="ph1">&lt;xref:System.Xml.XmlElement&gt;</ph> tree.</source>
          <target state="translated">ノードをたどってで発生する順序で配置するか、<ph id="ph1">&lt;xref:System.Xml.XmlElement&gt;</ph>ツリー。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
          <source>It is recommended that you use the <ph id="ph1">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType&gt;</ph> method instead of the <ph id="ph3">&lt;xref:System.Xml.XmlElement.GetElementsByTagName%2A&gt;</ph> method.</source>
          <target state="translated">使用することをお勧め、<ph id="ph1">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType&gt;</ph>または<ph id="ph2">&lt;xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType&gt;</ph>メソッドの代わりに、<ph id="ph3">&lt;xref:System.Xml.XmlElement.GetElementsByTagName%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
          <source>The following example gets and displays all the book titles.</source>
          <target state="translated">次の例を取得し、すべての書名を表示します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
          <source>The example uses the file, <ph id="ph1">`2books.xml`</ph>, as input.</source>
          <target state="translated">この例では、<ph id="ph1">`2books.xml`</ph>の入力として、します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
          <source>The local name to match.</source>
          <target state="translated">一致するローカル名。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
          <source>The asterisk (*) is a special value that matches all tags.</source>
          <target state="translated">アスタリスク (*) は、すべてのタグに一致する特殊値です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
          <source>The namespace URI to match.</source>
          <target state="translated">一致する名前空間 URI。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> containing a list of all descendant elements that match the specified <ph id="ph2">&lt;see cref="P:System.Xml.XmlElement.LocalName" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Xml.XmlElement.NamespaceURI" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph2">&lt;see cref="P:System.Xml.XmlElement.LocalName" /&gt;</ph> および <ph id="ph3">&lt;see cref="P:System.Xml.XmlElement.NamespaceURI" /&gt;</ph> に一致するすべての子孫の要素のリストを格納している <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> containing a list of all matching nodes.</source>
          <target state="translated">一致しているすべてのノードのリストを格納している <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
          <source>The list is empty if there are no matching nodes.</source>
          <target state="translated">一致するノードがない場合、リストは空です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
          <source>The nodes are placed in the order in which they would be encountered in a preorder traversal of the <ph id="ph1">`XmlElement`</ph> tree.</source>
          <target state="translated">ノードをたどってで発生する順序で配置するか、<ph id="ph1">`XmlElement`</ph>ツリー。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
          <source>It is recommended that you use the <ph id="ph1">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType&gt;</ph> method instead of the <ph id="ph3">&lt;xref:System.Xml.XmlElement.GetElementsByTagName%2A&gt;</ph> method.</source>
          <target state="translated">使用することをお勧め、<ph id="ph1">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType&gt;</ph>または<ph id="ph2">&lt;xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType&gt;</ph>メソッドの代わりに、<ph id="ph3">&lt;xref:System.Xml.XmlElement.GetElementsByTagName%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlElement">
          <source>Determines whether the current node has the specified attribute.</source>
          <target state="translated">現在のノードに指定した属性があるかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.HasAttribute(System.String)">
          <source>The name of the attribute to find.</source>
          <target state="translated">検索対象の属性名です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.HasAttribute(System.String)">
          <source>This is a qualified name.</source>
          <target state="translated">これは修飾名です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.HasAttribute(System.String)">
          <source>It is matched against the <ph id="ph1">&lt;see langword="Name" /&gt;</ph> property of the matching node.</source>
          <target state="translated">一致するノードの <ph id="ph1">&lt;see langword="Name" /&gt;</ph> プロパティに一致します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.HasAttribute(System.String)">
          <source>Determines whether the current node has an attribute with the specified name.</source>
          <target state="translated">現在のノードに指定した名前の属性があるかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.HasAttribute(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current node has the specified attribute; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">現在のノードに指定した属性がある場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.HasAttribute(System.String)">
          <source>The following example checks to see if the element has the specified attribute.</source>
          <target state="translated">次の例は、要素に指定した属性があるかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.HasAttribute(System.String,System.String)">
          <source>The local name of the attribute to find.</source>
          <target state="translated">検索する属性のローカル名。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.HasAttribute(System.String,System.String)">
          <source>The namespace URI of the attribute to find.</source>
          <target state="translated">検索する属性の名前空間 URI。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.HasAttribute(System.String,System.String)">
          <source>Determines whether the current node has an attribute with the specified local name and namespace URI.</source>
          <target state="translated">指定したローカル名および名前空間 URI の属性が現在のノードにあるかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.HasAttribute(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current node has the specified attribute; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">現在のノードに指定した属性がある場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.HasAttributes">
          <source>Gets a <ph id="ph1">&lt;see langword="boolean" /&gt;</ph> value indicating whether the current node has any attributes.</source>
          <target state="translated">現在のノードが属性を持っているかどうかを示す <ph id="ph1">&lt;see langword="boolean" /&gt;</ph> 値を取得します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.HasAttributes">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current node has attributes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">現在のノードが属性を持っている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.HasAttributes">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このプロパティは、ドキュメント オブジェクト モデル (DOM) の Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.HasAttributes">
          <source>The following example removes all attributes from the root element.</source>
          <target state="translated">次の例では、ルート要素からすべての属性を削除します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.InnerText">
          <source>Gets or sets the concatenated values of the node and all its children.</source>
          <target state="translated">ノードとそのすべての子の連結している値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.InnerText">
          <source>The concatenated values of the node and all its children.</source>
          <target state="translated">ノードとすべての子の連結された値。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.InnerText">
          <source>Setting this property replaces all the children with the parsed contents of the given string.</source>
          <target state="translated">このプロパティを設定すると、すべての子が指定された文字列の解析済みの内容に置き換えられます。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.InnerText">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このプロパティは、ドキュメント オブジェクト モデル (DOM) の Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.InnerText">
          <source>The following example compares the <ph id="ph1">`InnerText`</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlElement.InnerXml%2A&gt;</ph> properties.</source>
          <target state="translated">次の例を比較して、<ph id="ph1">`InnerText`</ph>と<ph id="ph2">&lt;xref:System.Xml.XmlElement.InnerXml%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.InnerXml">
          <source>Gets or sets the markup representing just the children of this node.</source>
          <target state="translated">このノードの子だけを表すマークアップを取得または設定します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.InnerXml">
          <source>The markup of the children of this node.</source>
          <target state="translated">このノードの子のマークアップ。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.InnerXml">
          <source>Setting this property replaces the children of the node with the parsed contents of the given string.</source>
          <target state="translated">このプロパティを設定すると、ノードの子が指定された文字列の解析済みの内容に置き換えられます。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.InnerXml">
          <source>The parsing is done in the current namespace context.</source>
          <target state="translated">文字列の解析は、現在の名前空間コンテキストで実行されます。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.InnerXml">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このプロパティは、ドキュメント オブジェクト モデル (DOM) の Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.InnerXml">
          <source>The following example compares the <ph id="ph1">&lt;xref:System.Xml.XmlElement.InnerText%2A&gt;</ph> and <ph id="ph2">`InnerXml`</ph> properties.</source>
          <target state="translated">次の例を比較して、<ph id="ph1">&lt;xref:System.Xml.XmlElement.InnerText%2A&gt;</ph>と<ph id="ph2">`InnerXml`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.InnerXml">
          <source>The XML specified when setting this property is not well-formed.</source>
          <target state="translated">このプロパティの設定時に指定される XML は、整形式ではありません。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.IsEmpty">
          <source>Gets or sets the tag format of the element.</source>
          <target state="translated">要素のタグ形式を取得または設定します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.IsEmpty">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is to be serialized in the short tag format "<ph id="ph2">&amp;lt;</ph>item/<ph id="ph3">&amp;gt;</ph>"; <ph id="ph4">&lt;see langword="false" /&gt;</ph> for the long format "<ph id="ph5">&amp;lt;</ph>item<ph id="ph6">&amp;gt;</ph><ph id="ph7">&amp;lt;</ph>/item<ph id="ph8">&amp;gt;</ph>".</source>
          <target state="translated">返します<ph id="ph1">&lt;see langword="true" /&gt;</ph>かどうか、要素は短いタグ形式でシリアル化するのには"<ph id="ph2">&amp;lt;</ph>項目/<ph id="ph3">&amp;gt;</ph>"です。<ph id="ph4">&lt;see langword="false" /&gt;</ph>長い形式の"<ph id="ph5">&amp;lt;</ph>項目<ph id="ph6">&amp;gt;</ph><ph id="ph7">&amp;lt;</ph>項目/<ph id="ph8">&amp;gt;</ph>"です。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.IsEmpty">
          <source>When setting this property, if set to <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the children of the element are removed and the element is serialized in the short tag format.</source>
          <target state="translated">このプロパティを設定する場合、<ph id="ph1">&lt;see langword="true" /&gt;</ph> に設定すると、要素の子が削除され、要素は短いタグ形式でシリアル化されます。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.IsEmpty">
          <source>If set to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the value of the property is changed (regardless of whether or not the element has content); if the element is empty, it is serialized in the long format.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> に設定した場合は、要素に内容があるかどうかにかかわらず、プロパティの値は変更されます。要素が空の場合は、長い形式でシリアル化されます。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.IsEmpty">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このプロパティは、ドキュメント オブジェクト モデル (DOM) の Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.IsEmpty">
          <source>This property is a Microsoft extension of the Document Object Model (DOM).</source>
          <target state="translated">このプロパティは、ドキュメント オブジェクト モデル (DOM) の Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.IsEmpty">
          <source>The following example adds content to an empty element.</source>
          <target state="translated">次の例では、空の要素にコンテンツを追加します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.LocalName">
          <source>Gets the local name of the current node.</source>
          <target state="translated">現在のノードのローカル名を取得します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.LocalName">
          <source>The name of the current node with the prefix removed.</source>
          <target state="translated">プリフィックスを削除した現在のノードの名前。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.LocalName">
          <source>For example, <ph id="ph1">&lt;see langword="LocalName" /&gt;</ph> is book for the element <ph id="ph2">&amp;lt;</ph>bk:book<ph id="ph3">&amp;gt;</ph>.</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;see langword="LocalName" /&gt;</ph>要素の書籍<ph id="ph2">&amp;lt;</ph>bk:book<ph id="ph3">&amp;gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.LocalName">
          <source>If the node does not have a prefix, <ph id="ph1">`LocalName`</ph> is the same as <ph id="ph2">&lt;xref:System.Xml.XmlElement.Name%2A&gt;</ph>.</source>
          <target state="translated">ノードには、プレフィックスがない場合<ph id="ph1">`LocalName`</ph>と同じ<ph id="ph2">&lt;xref:System.Xml.XmlElement.Name%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.LocalName">
          <source>The following example displays information on the ISBN element.</source>
          <target state="translated">次の例では、ISBN 要素に関する情報が表示されます。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.Name">
          <source>Gets the qualified name of the node.</source>
          <target state="translated">ノードの限定名を取得します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.Name">
          <source>The qualified name of the node.</source>
          <target state="translated">ノードの限定名。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.Name">
          <source>For <ph id="ph1">&lt;see langword="XmlElement" /&gt;</ph> nodes, this is the tag name of the element.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlElement" /&gt;</ph> ノードの場合、これは要素のタグ名です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.Name">
          <source>The following example displays information on the ISBN element.</source>
          <target state="translated">次の例では、ISBN 要素に関する情報が表示されます。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.NamespaceURI">
          <source>Gets the namespace URI of this node.</source>
          <target state="translated">このノードの名前空間 URI を取得します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.NamespaceURI">
          <source>The namespace URI of this node.</source>
          <target state="translated">このノードの名前空間 URI。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.NamespaceURI">
          <source>If there is no namespace URI, this property returns String.Empty.</source>
          <target state="translated">名前空間 URI がない場合、このプロパティは String.Empty を返します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.NamespaceURI">
          <source>This is the namespace URI specified at creation time.</source>
          <target state="translated">これは、作成時に URI が指定された名前空間です。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.NamespaceURI">
          <source>For example, <ph id="ph1">`NamespaceURI`</ph> is urn:samples for the element <ph id="ph2">\&lt;</ph>bk:book xmlns:bk= "urn:samples"&gt;</source>
          <target state="translated">たとえば、<ph id="ph1">`NamespaceURI`</ph>要素の urn: サンプル<ph id="ph2">\&lt;</ph>bk:book xmlns:bk =「urn: サンプル」&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.NamespaceURI">
          <source>The following example displays information on the ISBN element.</source>
          <target state="translated">次の例では、ISBN 要素に関する情報が表示されます。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.NextSibling">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph> immediately following this element.</source>
          <target state="translated">この要素の直後の <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.NextSibling">
          <source>The <ph id="ph1">&lt;see langword="XmlNode" /&gt;</ph> immediately following this element.</source>
          <target state="translated">この要素の直後の <ph id="ph1">&lt;see langword="XmlNode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.NodeType">
          <source>Gets the type of the current node.</source>
          <target state="translated">現在のノードの種類を取得します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.NodeType">
          <source>The node type.</source>
          <target state="translated">ノード型。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.NodeType">
          <source>For <ph id="ph1">&lt;see langword="XmlElement" /&gt;</ph> nodes, this value is XmlNodeType.Element.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlElement" /&gt;</ph> ノードの場合、この値は XmlNodeType.Element です。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.OwnerDocument">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph> to which this node belongs.</source>
          <target state="translated">このノードが属する <ph id="ph1">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.OwnerDocument">
          <source>The <ph id="ph1">&lt;see langword="XmlDocument" /&gt;</ph> to which this element belongs.</source>
          <target state="translated">この要素が属する <ph id="ph1">&lt;see langword="XmlDocument" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.OwnerDocument">
          <source>When adding nodes to the current node, use the <ph id="ph1">`XmlDocument`</ph> returned by the <ph id="ph2">`OwnerDocument`</ph> property to create the node.</source>
          <target state="translated">ノードを現在のノードを追加する場合を使用して、<ph id="ph1">`XmlDocument`</ph>によって返される、<ph id="ph2">`OwnerDocument`</ph>ノードを作成するプロパティです。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.OwnerDocument">
          <source>The following example inserts a new element into an XML document.</source>
          <target state="translated">次の例では、XML ドキュメントに新しい要素を挿入します。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.ParentNode">
          <source>Gets the parent of this node (for nodes that can have parents).</source>
          <target state="translated">このノードの親 (親を持つノードの場合) を取得します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.ParentNode">
          <source>The <ph id="ph1">&lt;see langword="XmlNode" /&gt;</ph> that is the parent of the current node.</source>
          <target state="translated">現在のノードの親である <ph id="ph1">&lt;see langword="XmlNode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.ParentNode">
          <source>If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">ノードが作成された直後でまだツリーに追加されていない場合、またはツリーから削除された場合、親は <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.ParentNode">
          <source>For all other nodes, the value returned depends on the <ph id="ph1">&lt;see cref="P:System.Xml.XmlNode.NodeType" /&gt;</ph> of the node.</source>
          <target state="translated">他のすべてのノードについては、返される値はノードの <ph id="ph1">&lt;see cref="P:System.Xml.XmlNode.NodeType" /&gt;</ph> によって異なります。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.ParentNode">
          <source>The following table describes the possible return values for the <ph id="ph1">&lt;see langword="ParentNode" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ParentNode" /&gt;</ph> プロパティの有効な戻り値を次の表に示します。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.Prefix">
          <source>Gets or sets the namespace prefix of this node.</source>
          <target state="translated">このノードの名前空間プリフィックスを取得または設定します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.Prefix">
          <source>The namespace prefix of this node.</source>
          <target state="translated">このノードの名前空間プリフィックス。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.Prefix">
          <source>If there is no prefix, this property returns String.Empty.</source>
          <target state="translated">プリフィックスがない場合、このプロパティは String.Empty を返します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.Prefix">
          <source>Setting this property changes the <ph id="ph1">&lt;xref:System.Xml.XmlElement.Name%2A&gt;</ph> property, which holds the qualified name for an <ph id="ph2">`XmlElement`</ph>.</source>
          <target state="translated">このプロパティの変更を設定、<ph id="ph1">&lt;xref:System.Xml.XmlElement.Name%2A&gt;</ph>の修飾名が保持されているプロパティ、<ph id="ph2">`XmlElement`</ph>です。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.Prefix">
          <source>However, changing the prefix does not change the namespace URI of the element.</source>
          <target state="translated">ただし、変更、プレフィックスは変わりません名前空間の要素の URI。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.Prefix">
          <source>The following example displays information on the ISBN element.</source>
          <target state="translated">次の例では、ISBN 要素に関する情報が表示されます。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.Prefix">
          <source>This node is read-only</source>
          <target state="translated">このノードは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.Prefix">
          <source>The specified prefix contains an invalid character.</source>
          <target state="translated">指定したプレフィックスに無効な文字が含まれています。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.Prefix">
          <source>The specified prefix is malformed.</source>
          <target state="translated">指定されたプリフィックスの書式が正しくありません。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.Prefix">
          <source>The namespaceURI of this node is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">このノードの namespaceURI が <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.Prefix">
          <source>The specified prefix is "xml" and the namespaceURI of this node is different from <ph id="ph1">http://www.w3.org/XML/1998/namespace</ph>.</source>
          <target state="translated">指定したプレフィックスは "xml" で、このノードの namespaceURI が <ph id="ph1">http://www.w3.org/XML/1998/namespace</ph> と異なります。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAll">
          <source>Removes all specified attributes and children of the current node.</source>
          <target state="translated">すべての指定した属性と、現在のノードの子ノードを削除します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAll">
          <source>Default attributes are not removed.</source>
          <target state="translated">既存の属性は削除されません。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.RemoveAll">
          <source>The following example removes all attributes and child nodes from the root element.</source>
          <target state="translated">次の例では、ルート要素からすべての属性および子ノードを削除します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAllAttributes">
          <source>Removes all specified attributes from the element.</source>
          <target state="translated">指定されたすべての属性が要素から削除されます。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAllAttributes">
          <source>Default attributes are not removed.</source>
          <target state="translated">既存の属性は削除されません。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.RemoveAllAttributes">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.RemoveAllAttributes">
          <source>The following example removes all attributes from the root element.</source>
          <target state="translated">次の例では、ルート要素からすべての属性を削除します。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlElement">
          <source>Removes the specified attribute.</source>
          <target state="translated">指定した属性を削除します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlElement">
          <source>(If the removed attribute has a default value, it is immediately replaced).</source>
          <target state="translated">(削除された属性に既定値がある場合は、すぐに置き換えられます)。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String)">
          <source>The name of the attribute to remove.This is a qualified name.</source>
          <target state="translated">削除する属性の名前。これは修飾名です。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String)">
          <source>It is matched against the <ph id="ph1">&lt;see langword="Name" /&gt;</ph> property of the matching node.</source>
          <target state="translated">一致するノードの <ph id="ph1">&lt;see langword="Name" /&gt;</ph> プロパティに一致します。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String)">
          <source>Removes an attribute by name.</source>
          <target state="translated">名前によって属性を削除します。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String)">
          <source>If the removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.</source>
          <target state="translated">削除された属性は、既定値がある、既定値を含む属性がすぐに表示する既知の場合と、該当する場合、対応する名前空間 URI、ローカル名、およびプレフィックスです。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String)">
          <source>The following example removes an attribute from an element.</source>
          <target state="translated">次の例では、要素から属性を削除します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String)">
          <source>The node is read-only.</source>
          <target state="translated">ノードは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
          <source>The local name of the attribute to remove.</source>
          <target state="translated">削除する属性のローカル名。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
          <source>The namespace URI of the attribute to remove.</source>
          <target state="translated">削除する属性の名前空間 URI。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
          <source>Removes an attribute with the specified local name and namespace URI.</source>
          <target state="translated">指定したローカル名および名前空間 URI の属性を削除します。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
          <source>(If the removed attribute has a default value, it is immediately replaced).</source>
          <target state="translated">(削除された属性に既定値がある場合は、すぐに置き換えられます)。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
          <source>If the removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.</source>
          <target state="translated">削除された属性は、既定値がある、既定値を含む属性がすぐに表示する既知の場合と、該当する場合、対応する名前空間 URI、ローカル名、およびプレフィックスです。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
          <source>The following example removes an attribute from an element.</source>
          <target state="translated">次の例では、要素から属性を削除します。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
          <source>The node is read-only.</source>
          <target state="translated">ノードは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
          <source>The index of the node to remove.</source>
          <target state="translated">削除するノードのインデックス。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
          <source>The first node has index 0.</source>
          <target state="translated">最初のノードのインデックスは 0 です。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
          <source>Removes the attribute node with the specified index from the element.</source>
          <target state="translated">指定したインデックスの属性ノードを要素から削除します。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
          <source>(If the removed attribute has a default value, it is immediately replaced).</source>
          <target state="translated">(削除された属性に既定値がある場合は、すぐに置き換えられます)。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
          <source>The attribute node removed or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there is no node at the given index.</source>
          <target state="translated">削除された属性ノード。指定したインデックス位置にノードがない場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
          <source>The following example removes an attribute from an element.</source>
          <target state="translated">次の例では、要素から属性を削除します。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlElement">
          <source>Removes an <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph> を削除します。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)">
          <source>The <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> node to remove.</source>
          <target state="translated">削除する <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> ノード。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)">
          <source>If the removed attribute has a default value, it is immediately replaced.</source>
          <target state="translated">削除された属性に既定値がある場合は、すぐに置き換えられます。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)">
          <source>Removes the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph> を削除します。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)">
          <source>The removed <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if <ph id="ph3">&lt;paramref name="oldAttr" /&gt;</ph> is not an attribute node of the <ph id="ph4">&lt;see langword="XmlElement" /&gt;</ph>.</source>
          <target state="translated">削除された <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph>。<ph id="ph3">&lt;paramref name="oldAttr" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph> の属性ノードでない場合は <ph id="ph4">&lt;see langword="XmlElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)">
          <source>This node is read-only.</source>
          <target state="translated">このノードは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">属性のローカル名。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">属性の名前空間 URI。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
          <source>Removes the <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph> specified by the local name and namespace URI.</source>
          <target state="translated">ローカル名および名前空間 URI で指定された <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph> を削除します。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
          <source>(If the removed attribute has a default value, it is immediately replaced).</source>
          <target state="translated">(削除された属性に既定値がある場合は、すぐに置き換えられます)。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
          <source>The removed <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the <ph id="ph3">&lt;see langword="XmlElement" /&gt;</ph> does not have a matching attribute node.</source>
          <target state="translated">削除された <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph>。<ph id="ph2">&lt;see langword="null" /&gt;</ph> に一致する属性ノードがない場合は <ph id="ph3">&lt;see langword="XmlElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
          <source>The following example removes an attribute from an element.</source>
          <target state="translated">次の例では、要素から属性を削除します。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
          <source>This node is read-only.</source>
          <target state="translated">このノードは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.SchemaInfo">
          <source>Gets the post schema validation infoset that has been assigned to this node as a result of schema validation.</source>
          <target state="translated">スキーマ検証の結果、このノードに割り当てられているスキーマ検証後の infoset を取得します。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.SchemaInfo">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.IXmlSchemaInfo" /&gt;</ph> object containing the post schema validation infoset of this node.</source>
          <target state="translated">このノードのスキーマ検証後の infoset が格納された <ph id="ph1">&lt;see cref="T:System.Xml.Schema.IXmlSchemaInfo" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.SchemaInfo">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlElement.SchemaInfo%2A&gt;</ph> property is set when this node is validated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlElement.SchemaInfo%2A&gt;</ph>このノードが検証されるときにプロパティが設定されています。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlElement">
          <source>Sets the value of the specified attribute.</source>
          <target state="translated">指定した属性の値を設定します。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
          <source>The name of the attribute to create or alter.</source>
          <target state="translated">作成または変更する属性の名前。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
          <source>This is a qualified name.</source>
          <target state="translated">これは修飾名です。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
          <source>If the name contains a colon it is parsed into prefix and local name components.</source>
          <target state="translated">名前にコロンが含まれている場合、その名前はプリフィックスとローカル名コンポーネントに解析されます。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
          <source>The value to set for the attribute.</source>
          <target state="translated">属性に設定する値。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
          <source>Sets the value of the attribute with the specified name.</source>
          <target state="translated">指定した名前の属性の値を設定します。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
          <source>If an attribute with the same name is already present in the element, its value is changed to that of <ph id="ph1">`value`</ph>.</source>
          <target state="translated">その値が変更された場合は同じ名前の属性は、要素内に存在では既に、<ph id="ph1">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
          <source><ph id="ph1">`value`</ph> is a simple string.</source>
          <target state="translated"><ph id="ph1">`value`</ph> 単純な文字列です。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
          <source>It is not parsed as it is being set.</source>
          <target state="translated">設定されているようには解析されません。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
          <source>Any markup, such as syntax to be recognized as an entity reference, is treated as literal text and needs to be properly escaped by the implementation when it is written out. In order to assign an attribute value that contains entity references, the user must create an <ph id="ph1">&lt;xref:System.Xml.XmlAttribute&gt;</ph> node plus any <ph id="ph2">&lt;xref:System.Xml.XmlText&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.XmlEntityReference&gt;</ph> nodes, build the appropriate subtree and use <ph id="ph4">&lt;xref:System.Xml.XmlElement.SetAttributeNode%2A&gt;</ph> to assign it as the value of an attribute.</source>
          <target state="translated">エンティティ参照として認識される構文など、すべてのマークアップでは、リテラル テキストとして扱われ、書き出されるときに、実装によって正しくエスケープする必要があります。エンティティ参照が含まれる属性値を割り当てるには、するためにユーザーを作成する必要があります、<ph id="ph1">&lt;xref:System.Xml.XmlAttribute&gt;</ph>ノードおよび<ph id="ph2">&lt;xref:System.Xml.XmlText&gt;</ph>と<ph id="ph3">&lt;xref:System.Xml.XmlEntityReference&gt;</ph>、ノードが、適切なサブツリーを構築しを使用して<ph id="ph4">&lt;xref:System.Xml.XmlElement.SetAttributeNode%2A&gt;</ph>を属性の値として割り当てます。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
          <source>The specified name contains an invalid character.</source>
          <target state="translated">指定した名前に無効な文字が含まれています。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
          <source>The node is read-only.</source>
          <target state="translated">ノードは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">属性のローカル名。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">属性の名前空間 URI。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)">
          <source>The value to set for the attribute.</source>
          <target state="translated">属性に設定する値。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)">
          <source>Sets the value of the attribute with the specified local name and namespace URI.</source>
          <target state="translated">指定したローカル名および名前空間 URI の属性の値を設定します。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)">
          <source>The attribute value.</source>
          <target state="translated">属性値。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlElement">
          <source>Adds a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph>.</source>
          <target state="translated">新しい <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph> を追加します。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
          <source>The <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> node to add to the attribute collection for this element.</source>
          <target state="translated">この要素の属性コレクションに追加する <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> ノード。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph> を追加します。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
          <source>If the attribute replaces an existing attribute with the same name, the old <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> is returned; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph> is returned.</source>
          <target state="translated">属性によって同じ名前の既存の属性が置換される場合は、古い <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> が返されます。それ以外の場合は、<ph id="ph2">&lt;see langword="null" /&gt;</ph> が返されます。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
          <source>If an attribute with that name is already present in the element, it is replaced by the new one.</source>
          <target state="translated">その名前を持つ属性が要素に存在では既に、新しいものに置き換えられます。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
          <source>The <ph id="ph1">&lt;paramref name="newAttr" /&gt;</ph> was created from a different document than the one that created this node.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newAttr" /&gt;</ph> は、このノードを作成したドキュメントとは異なるドキュメントから作成されました。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
          <source>Or this node is read-only.</source>
          <target state="translated">または、このノードが読み取り専用です。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
          <source>The <ph id="ph1">&lt;paramref name="newAttr" /&gt;</ph> is already an attribute of another <ph id="ph2">&lt;see langword="XmlElement" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newAttr" /&gt;</ph> は、既に別の <ph id="ph2">&lt;see langword="XmlElement" /&gt;</ph> オブジェクトの属性になっています。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
          <source>You must explicitly clone <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> nodes to re-use them in other <ph id="ph2">&lt;see langword="XmlElement" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> ノードのクローンを明示的に作成し、それらのクローンを他の <ph id="ph2">&lt;see langword="XmlElement" /&gt;</ph> オブジェクトで再利用する必要があります。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">属性のローカル名。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">属性の名前空間 URI。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph> を追加します。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
          <source>The <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> to add.</source>
          <target state="translated">追加する <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
          <source>The <ph id="ph1">`XmlAttribute`</ph> does not have any children.</source>
          <target state="translated"><ph id="ph1">`XmlAttribute`</ph>子はありません。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.XmlAttribute.Value%2A&gt;</ph> to assign a text value to the attribute or use <ph id="ph2">&lt;xref:System.Xml.XmlNode.AppendChild%2A&gt;</ph> (or a similar method) to add children to the attribute.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Xml.XmlAttribute.Value%2A&gt;</ph>テキスト値を属性に割り当てたり使用<ph id="ph2">&lt;xref:System.Xml.XmlNode.AppendChild%2A&gt;</ph>(または同様のメソッド)、属性に子を追加します。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
          <source>The following example adds an attribute to an element.</source>
          <target state="translated">次の例では、要素に属性を追加します。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see langword="XmlWriter" /&gt;</ph> to which you want to save.</source>
          <target state="translated">保存先の <ph id="ph1">&lt;see langword="XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)">
          <source>Saves all the children of the node to the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">ノードのすべての子を、指定した <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> に保存します。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)">
          <source>The following example displays the contents of the element to the console.</source>
          <target state="translated">次の例では、コンソールに、要素の内容を表示します。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see langword="XmlWriter" /&gt;</ph> to which you want to save.</source>
          <target state="translated">保存先の <ph id="ph1">&lt;see langword="XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)">
          <source>Saves the current node to the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> に現在のノードを保存します。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)">
          <source>The following example adds an attribute to an element and then displays the modified element.</source>
          <target state="translated">次の例では、要素に属性を追加し、変更された要素を表示します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>