<Type Name="XmlConvert" FullName="System.Xml.XmlConvert">
  <TypeSignature Language="C#" Value="public class XmlConvert" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlConvert extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlConvert" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlConvert" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlConvert" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8efc0-101">XML 名をエンコードおよびデコードし、共通言語ランタイム型と XML スキーマ定義言語 (XSD) 型との間で変換を実行するメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-101">Encodes and decodes XML names, and provides methods for converting between common language runtime types and XML Schema definition language (XSD) types.</span></span> <span data-ttu-id="8efc0-102">データ型を変換する場合、返される値はロケールには依存しません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-102">When converting data types, the values returned are locale-independent.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8efc0-103"><xref:System.Xml.XmlConvert>クラスは機能的に等価、<xref:System.Convert>クラスが、XML 標準をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="8efc0-103">The <xref:System.Xml.XmlConvert> class is functionally equivalent to the <xref:System.Convert> class, but it supports XML standards.</span></span> <span data-ttu-id="8efc0-104">型システムは XML スキーマ定義言語 (XSD) のスキーマ型に基づいており、常にロケールに依存しない値が返されます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-104">The type system is based on the XML Schema definition language (XSD) schema type, and the values returned are always locale-independent.</span></span>  
  
## <a name="encoding-and-decoding"></a><span data-ttu-id="8efc0-105">エンコードとデコード</span><span class="sxs-lookup"><span data-stu-id="8efc0-105">Encoding and decoding</span></span>  
 <span data-ttu-id="8efc0-106">要素と属性名または ID の値は、W3C に従って一定範囲の XML 文字に制限されて[XML 1.0 勧告](https://www.w3.org/TR/2006/REC-xml-20060816/)です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-106">Element and attribute names or ID values are limited to a range of XML characters according to the W3C [XML 1.0 recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/).</span></span> <span data-ttu-id="8efc0-107">名前には、無効な文字が含まれて、使用できます、<xref:System.Xml.XmlConvert.EncodeName%2A>と<xref:System.Xml.XmlConvert.DecodeName%2A>有効な XML 名に変換するには、このクラスのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="8efc0-107">When names contain invalid characters, you can use the <xref:System.Xml.XmlConvert.EncodeName%2A> and <xref:System.Xml.XmlConvert.DecodeName%2A> methods in this class to translate them into valid XML names.</span></span>  
  
 <span data-ttu-id="8efc0-108">たとえば、列見出しをデータベースで"Order Detail"を使用する場合は、データベースは、2 つの単語間のスペースを使用できます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-108">For example, if you want to use the column heading "Order Detail" in a database, the database allows the space between the two words.</span></span> <span data-ttu-id="8efc0-109">ただし、XML では、"Order"と「詳細」の容量は、無効な XML 文字が考慮されます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-109">However, in XML, the space between "Order" and "Detail" is considered an invalid XML character.</span></span> <span data-ttu-id="8efc0-110">エスケープされた 16 進エンコーディングに変換し、後でデコードする必要があります。</span><span class="sxs-lookup"><span data-stu-id="8efc0-110">You have to convert it into an escaped hexadecimal encoding and decode it later.</span></span>  
  
 <span data-ttu-id="8efc0-111">使用することができます、<xref:System.Xml.XmlConvert.EncodeName%2A>メソッドを<xref:System.Xml.XmlWriter>書き込まれている名前が有効な XML 名であることを確認するクラス。</span><span class="sxs-lookup"><span data-stu-id="8efc0-111">You can use the <xref:System.Xml.XmlConvert.EncodeName%2A> method with the <xref:System.Xml.XmlWriter> class to ensure the names being written are valid XML names.</span></span> <span data-ttu-id="8efc0-112">次の c# コード名"Order Detail"を有効な XML 名に変換し、要素を書き込みます`<Order_0x0020_Detail>My order</Order_0x0020_Detail>`です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-112">The following C# code converts the name "Order Detail" into a valid XML name and writes the element `<Order_0x0020_Detail>My order</Order_0x0020_Detail>`.</span></span>  
  
```csharp  
writer.WriteElementString(XmlConvert.EncodeName("Order Detail"),"My order");  
  
```  
  
 <span data-ttu-id="8efc0-113">次<xref:System.Xml.XmlConvert>メソッドは、エンコードとデコードを実行します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-113">The following <xref:System.Xml.XmlConvert> methods perform encoding and decoding.</span></span>  
  
|<span data-ttu-id="8efc0-114">メソッド</span><span class="sxs-lookup"><span data-stu-id="8efc0-114">Method</span></span>|<span data-ttu-id="8efc0-115">説明</span><span class="sxs-lookup"><span data-stu-id="8efc0-115">Description</span></span>|  
|------------|-----------------|  
|<xref:System.Xml.XmlConvert.EncodeName%2A>|<span data-ttu-id="8efc0-116">名前を受け取り、無効な文字をエスケープ文字列で置き換えられると共にエンコードされた名前を返します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-116">Takes a name and returns the encoded name along with any invalid character that is replaced by an escape string.</span></span> <span data-ttu-id="8efc0-117">このメソッドにより、名前可能性があることを意味は、W3C に沿って有効でない任意の位置にコロンを含む[XML 1.0 勧告で名前空間](http://www.w3.org/TR/REC-xml-names)です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-117">This method allows colons in any position, which means that the name may still be invalid according to the W3C [Namespaces in XML 1.0 recommendation](http://www.w3.org/TR/REC-xml-names).</span></span>|  
|<xref:System.Xml.XmlConvert.EncodeNmToken%2A>|<span data-ttu-id="8efc0-118">名前を受け取り、エンコードされた名前を返します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-118">Takes a name and returns the encoded name.</span></span>|  
|<xref:System.Xml.XmlConvert.EncodeLocalName%2A>|<span data-ttu-id="8efc0-119">同じ<xref:System.Xml.XmlConvert.EncodeName%2A>として名前を使用できることを保証するコロン文字もエンコード、する点を除いて、`LocalName`名前空間で修飾された名前の一部です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-119">Same as <xref:System.Xml.XmlConvert.EncodeName%2A> except that it also encodes the colon character, guaranteeing that the name can be used as the `LocalName` part of a namespace-qualified name.</span></span>|  
|<xref:System.Xml.XmlConvert.DecodeName%2A>|<span data-ttu-id="8efc0-120">すべてのエンコーディング メソッドの変換を元に戻します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-120">Reverses the transformation for all the encoding methods.</span></span>|  
  
## <a name="name-validation"></a><span data-ttu-id="8efc0-121">名前の検証</span><span class="sxs-lookup"><span data-stu-id="8efc0-121">Name validation</span></span>  
 <span data-ttu-id="8efc0-122"><xref:System.Xml.XmlConvert>クラスには、要素または属性名の文字をチェックし、名前が W3C によって設定された規則に準拠していることを確認する 2 つのメソッドが含まれています[XML 1.0 勧告](https://www.w3.org/TR/2006/REC-xml-20060816/):。</span><span class="sxs-lookup"><span data-stu-id="8efc0-122">The <xref:System.Xml.XmlConvert> class contains two methods that check the characters in an element or attribute name and verify that the name conforms to the rules set by the W3C [XML 1.0 recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/):</span></span>  
  
-   <span data-ttu-id="8efc0-123"><xref:System.Xml.XmlConvert.VerifyName%2A> 文字をチェックし、名前が有効であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-123"><xref:System.Xml.XmlConvert.VerifyName%2A> checks the characters and verifies that the name is valid.</span></span> <span data-ttu-id="8efc0-124">有効で、実行されていない場合に例外をスローする場合は、名前を返します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-124">The method returns the name if it's valid, and throws an exception if it isn't.</span></span>  
  
-   <span data-ttu-id="8efc0-125"><xref:System.Xml.XmlConvert.VerifyNCName%2A> 同じ検証を実行しますが、非修飾名を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="8efc0-125"><xref:System.Xml.XmlConvert.VerifyNCName%2A> performs the same validation, but accepts non-qualified names.</span></span>  
  
 <span data-ttu-id="8efc0-126"><xref:System.Xml.XmlConvert>トークン、空白文字、パブリック Id、およびその他の文字列を検証する追加のメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="8efc0-126">The <xref:System.Xml.XmlConvert> contains additional methods that validate tokens, white-space characters, public IDs, and other strings.</span></span>  
  
## <a name="data-type-conversion"></a><span data-ttu-id="8efc0-127">データ型の変換</span><span class="sxs-lookup"><span data-stu-id="8efc0-127">Data type conversion</span></span>  
 <span data-ttu-id="8efc0-128"><xref:System.Xml.XmlConvert> また、文字列からデータを厳密に型指定されたデータ型に変換するメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-128"><xref:System.Xml.XmlConvert> also provides methods that enable you to convert data from a string to a strongly typed data type.</span></span> <span data-ttu-id="8efc0-129">たとえば、<xref:System.Xml.XmlConvert.ToDateTime%2A>メソッドに文字列に変換、<xref:System.DateTime>と同等です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-129">For example, the <xref:System.Xml.XmlConvert.ToDateTime%2A> method converts a string to its <xref:System.DateTime> equivalent.</span></span> <span data-ttu-id="8efc0-130">これは便利ですのでのほとんどのメソッド、<xref:System.Xml.XmlReader>戻り値のデータを文字列としてのクラスです。</span><span class="sxs-lookup"><span data-stu-id="8efc0-130">This is useful because most methods in the <xref:System.Xml.XmlReader> class return data as a string.</span></span> <span data-ttu-id="8efc0-131">データが読み取られた後に、変換できます、適切なデータ型に使用される前に。</span><span class="sxs-lookup"><span data-stu-id="8efc0-131">After the data is read, it can be converted to the proper data type before being used.</span></span> <span data-ttu-id="8efc0-132"><xref:System.Xml.XmlConvert.ToString%2A>オーバー ロードは、厳密に型指定されたデータを文字列に変換することによって、補完的な操作を提供します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-132">The <xref:System.Xml.XmlConvert.ToString%2A> overloads provide the complementary operation by converting strongly typed data to strings.</span></span> <span data-ttu-id="8efc0-133">たとえば、これにより web ページ上のテキスト ボックスに、データを追加するときにできます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-133">For example, this is useful when you want to add the data to text boxes on a webpage.</span></span> <span data-ttu-id="8efc0-134">データ変換中には、アカウントにロケール設定は取得されません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-134">Locale settings are not taken into account during data conversion.</span></span> <span data-ttu-id="8efc0-135">データ型は、XML スキーマ (XSD) のデータ型に基づいています。</span><span class="sxs-lookup"><span data-stu-id="8efc0-135">The data types are based on the XML Schema (XSD) data types.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlConvert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlConvert();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8efc0-136"><see cref="T:System.Xml.XmlConvert" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-136">Initializes a new instance of the <see cref="T:System.Xml.XmlConvert" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeName">
      <MemberSignature Language="C#" Value="public static string DecodeName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DecodeName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.DecodeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeName (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ DecodeName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8efc0-137">変換対象の名前。</span><span class="sxs-lookup"><span data-stu-id="8efc0-137">The name to be transformed.</span></span></param>
        <summary><span data-ttu-id="8efc0-138">名前をデコードします。</span><span class="sxs-lookup"><span data-stu-id="8efc0-138">Decodes a name.</span></span> <span data-ttu-id="8efc0-139">このメソッドは、<see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> メソッドおよび <see cref="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" /> メソッドの変換を元に戻します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-139">This method does the reverse of the <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> and <see cref="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" /> methods.</span></span></summary>
        <returns><span data-ttu-id="8efc0-140">デコードされた名前。</span><span class="sxs-lookup"><span data-stu-id="8efc0-140">The decoded name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8efc0-141">名前は、次の規則を使用してデコードされます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-141">The names are decoded using the following rules:</span></span>  
  
-   <span data-ttu-id="8efc0-142">名前は、左から右にデコードされます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-142">Names are decoded from left to right.</span></span>  
  
-   <span data-ttu-id="8efc0-143">任意のシーケンス _x `HHHH_` (HHHH は、有効な 4 つの桁の 16 進数 ucs-2 コード) をデコードされていないが、対応する Unicode 2.1 (Unicode 3.0 アプリケーションでサポートされている場合) に変換される文字。</span><span class="sxs-lookup"><span data-stu-id="8efc0-143">Any sequence _x `HHHH_` (where HHHH stands for a valid, four digit hexadecimal UCS-2 code) that has not been decoded is transformed into the corresponding Unicode 2.1 (Unicode 3.0 if supported by the application) character.</span></span>  
  
-   <span data-ttu-id="8efc0-144">短縮形は認識されません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-144">No shortforms are recognized.</span></span> <span data-ttu-id="8efc0-145">平行移動せず渡されます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-145">They are passed on without translation.</span></span> <span data-ttu-id="8efc0-146">たとえば、_x20\_または _ _ はデコードできません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-146">For example, _x20\_ or __ are not decoded.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8efc0-147">文字の実際のエンコードは、アプリケーション固有です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-147">The actual encoding of the character is application-specific.</span></span> <span data-ttu-id="8efc0-148">たとえば、注文の詳細が Order_x0020_Details になります。</span><span class="sxs-lookup"><span data-stu-id="8efc0-148">For example, Order_x0020_Details becomes Order Details.</span></span> <span data-ttu-id="8efc0-149">エスケープ文字でも XML 名に無効なは認識し、デコードします。</span><span class="sxs-lookup"><span data-stu-id="8efc0-149">Even escaped characters that are invalid in XML names will be recognized and decoded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8efc0-150">次の例では、エンコードし、名前をデコードします。</span><span class="sxs-lookup"><span data-stu-id="8efc0-150">The following example encodes and decodes names.</span></span>  
  
 [!code-cpp[XmlConvert.EncodeName#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlConvert.EncodeName/CPP/convert.cpp#1)]
 [!code-csharp[XmlConvert.EncodeName#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert.EncodeName/CS/convert.cs#1)]
 [!code-vb[XmlConvert.EncodeName#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert.EncodeName/VB/convert.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeLocalName">
      <MemberSignature Language="C#" Value="public static string EncodeLocalName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EncodeLocalName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeLocalName (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EncodeLocalName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8efc0-151">エンコードする名前。</span><span class="sxs-lookup"><span data-stu-id="8efc0-151">The name to be encoded.</span></span></param>
        <summary><span data-ttu-id="8efc0-152">名前を有効な XML ローカル名に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-152">Converts the name to a valid XML local name.</span></span></summary>
        <returns><span data-ttu-id="8efc0-153">エンコードされた名前。</span><span class="sxs-lookup"><span data-stu-id="8efc0-153">The encoded name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8efc0-154">このメソッドがに似ていますが、<xref:System.Xml.XmlConvert.EncodeName%2A>点を除けばメソッドは、名前を名前空間の修飾名のローカル名部分として使用できることを保証するコロン文字をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="8efc0-154">This method is similar to the <xref:System.Xml.XmlConvert.EncodeName%2A> method except that it encodes the colon character, which guarantees that the name can be used as the local name part of a namespace qualified name.</span></span>  
  
 <span data-ttu-id="8efc0-155">たとえば、このメソッドに無効な名前を渡す場合、: b, a_x003a_b を返します、これは有効なローカル名。</span><span class="sxs-lookup"><span data-stu-id="8efc0-155">For example, if you passed this method the invalid name a:b, it returns a_x003a_b, which is a valid local name.</span></span>  
  
 <span data-ttu-id="8efc0-156">場合`name`は`null`または`String.Empty`し、返されるのと同じ値を取得します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-156">If `name` is `null` or `String.Empty` then you get the same value returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8efc0-157">次の例では、エンコードし、名前をデコードします。</span><span class="sxs-lookup"><span data-stu-id="8efc0-157">The following example encodes and decodes names.</span></span>  
  
 [!code-cpp[XmlConvert.EncodeName#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlConvert.EncodeName/CPP/convert.cpp#1)]
 [!code-csharp[XmlConvert.EncodeName#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert.EncodeName/CS/convert.cs#1)]
 [!code-vb[XmlConvert.EncodeName#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert.EncodeName/VB/convert.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlConvert.EncodeName(System.String)" />
        <altmember cref="M:System.Xml.XmlConvert.DecodeName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EncodeName">
      <MemberSignature Language="C#" Value="public static string EncodeName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EncodeName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.EncodeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeName (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EncodeName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8efc0-158">変換する対象の名前。</span><span class="sxs-lookup"><span data-stu-id="8efc0-158">A name to be translated.</span></span></param>
        <summary><span data-ttu-id="8efc0-159">名前を有効な XML 名に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-159">Converts the name to a valid XML name.</span></span></summary>
        <returns><span data-ttu-id="8efc0-160">無効な文字をエスケープ文字列で置換した名前を返します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-160">Returns the name with any invalid characters replaced by an escape string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8efc0-161">このメソッドは、スペースやサポートまたはスキーマが存在せず、XML 名にマップする必要がある半角カタカナなどの無効な文字を変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-161">This method translates invalid characters, such as spaces or half-width Katakana, that need to be mapped to XML names without the support or presence of schemas.</span></span> <span data-ttu-id="8efc0-162">無効な文字がエスケープ数値エンティティ エンコードに変換されます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-162">The invalid characters are translated into escaped numeric entity encodings.</span></span>  
  
 <span data-ttu-id="8efc0-163">エスケープ文字は、「_」です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-163">The escape character is "_".</span></span> <span data-ttu-id="8efc0-164">準拠していない任意の XML 名前文字、 [XML 1.0 仕様の (第 4 版) 勧告](https://www.w3.org/TR/2006/REC-xml-20060816/)_xHHHH としてエスケープされて\_です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-164">Any XML name character that does not conform to the [XML 1.0 spec (fourth edition) recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/) is escaped as _xHHHH\_.</span></span> <span data-ttu-id="8efc0-165">HHHH 文字列は、最上位ビットから順に文字の 4 桁の 16 進数 ucs-2 コードを表します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-165">The HHHH string stands for the four-digit hexadecimal UCS-2 code for the character in most significant bit first order.</span></span> <span data-ttu-id="8efc0-166">たとえば、Order Details という名前は Order_x0020_Details とエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-166">For example, the name Order Details is encoded as Order_x0020_Details.</span></span>  
  
 <span data-ttu-id="8efc0-167">アンダースコア文字は、名前のデコード時にエスケープ シーケンスとして解釈される可能性のある文字の並びが後に続いていない限り、エスケープする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-167">The underscore character does not need to be escaped unless it is followed by a character sequence that together with the underscore can be misinterpreted as an escape sequence when decoding the name.</span></span> <span data-ttu-id="8efc0-168">たとえば、Order_Details はエンコードされませんが、Order_x0020_ は Order_x005f_x0020_ とエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-168">For example, Order_Details is not encoded, but Order_x0020_ is encoded as Order_x005f_x0020_.</span></span> <span data-ttu-id="8efc0-169">短縮形は許可されていません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-169">No shortforms are allowed.</span></span> <span data-ttu-id="8efc0-170">フォーム _x20 など\__ _ は生成されません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-170">For example, the forms _x20\_ and __ are not generated.</span></span>  
  
 <span data-ttu-id="8efc0-171">このメソッドは、XML 仕様に従って有効な名前を保証します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-171">This method guarantees the name is valid according to the XML specification.</span></span> <span data-ttu-id="8efc0-172">これにより、名前可能性があるつまりに従って無効である任意の位置にコロンを含む、 [W3C Namespace 仕様](http://www.w3.org/TR/REC-xml-names)です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-172">It allows colons in any position, which means the name may still be invalid according to the [W3C Namespace Specification](http://www.w3.org/TR/REC-xml-names).</span></span> <span data-ttu-id="8efc0-173">有効な名前空間を保証する修飾名を使用して<xref:System.Xml.XmlConvert.EncodeLocalName%2A>のプレフィックスとローカル パーツの名前を指定し、コロンで結果を結合します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-173">To guarantee it is a valid namespace qualified name use <xref:System.Xml.XmlConvert.EncodeLocalName%2A> for the prefix and local name parts and join the result with a colon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8efc0-174">次の例では、エンコードし、名前をデコードします。</span><span class="sxs-lookup"><span data-stu-id="8efc0-174">The following example encodes and decodes names.</span></span>  
  
 [!code-cpp[XmlConvert.EncodeName#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlConvert.EncodeName/CPP/convert.cpp#1)]
 [!code-csharp[XmlConvert.EncodeName#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert.EncodeName/CS/convert.cs#1)]
 [!code-vb[XmlConvert.EncodeName#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert.EncodeName/VB/convert.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" />
        <altmember cref="M:System.Xml.XmlConvert.DecodeName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EncodeNmToken">
      <MemberSignature Language="C#" Value="public static string EncodeNmToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EncodeNmToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.EncodeNmToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeNmToken (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EncodeNmToken(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8efc0-175">エンコードする名前。</span><span class="sxs-lookup"><span data-stu-id="8efc0-175">The name to be encoded.</span></span></param>
        <summary><span data-ttu-id="8efc0-176">XML 仕様に従って有効な名前であることを検証します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-176">Verifies the name is valid according to the XML specification.</span></span></summary>
        <returns><span data-ttu-id="8efc0-177">エンコードされた名前。</span><span class="sxs-lookup"><span data-stu-id="8efc0-177">The encoded name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8efc0-178">このメソッドは、名前が XML 仕様に従って有効であることを保証します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-178">This method guarantees that the name is valid according to the XML specification.</span></span> <span data-ttu-id="8efc0-179">たとえば、このメソッドに無効な名前 70 + を越えた場合は、有効な XML 名は、70 _ x002b を返します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-179">For example, if you passed this method the invalid name 70+, it returns 70_x002b_ which is a valid XML name.</span></span>  
  
 <span data-ttu-id="8efc0-180">場合`name`は`null`または String.Empty して返されるのと同じ値を取得します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-180">If `name` is `null` or String.Empty then you get the same value returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNCNameChar">
      <MemberSignature Language="C#" Value="public static bool IsNCNameChar (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNCNameChar(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.IsNCNameChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNCNameChar (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNCNameChar(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="8efc0-181">検証対象の文字 (コロン以外の文字)。</span><span class="sxs-lookup"><span data-stu-id="8efc0-181">The character to verify as a non-colon character.</span></span></param>
        <summary><span data-ttu-id="8efc0-182">渡された文字が有効なコロン以外の文字型かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-182">Checks whether the passed-in character is a valid non-colon character type.</span></span></summary>
        <returns><span data-ttu-id="8efc0-183">文字が有効なコロン以外の文字型の場合は <see langword="true" /> を返し、それ以外の場合は <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-183">Returns <see langword="true" /> if the character is a valid non-colon character type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublicIdChar">
      <MemberSignature Language="C#" Value="public static bool IsPublicIdChar (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPublicIdChar(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.IsPublicIdChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPublicIdChar (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPublicIdChar(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="8efc0-184">検証対象の <see cref="T:System.Char" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8efc0-184"><see cref="T:System.Char" /> object to validate.</span></span></param>
        <summary><span data-ttu-id="8efc0-185">引数の文字が有効な公開識別子の文字の場合は渡された文字インスタンスを返し、それ以外の場合は <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-185">Returns the passed-in character instance if the character in the argument is a valid public id character, otherwise <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="8efc0-186">文字が有効な公開識別子の文字の場合は渡された文字を返し、それ以外の場合は <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-186">Returns the passed-in character if the character is a valid public id character, otherwise <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStartNCNameChar">
      <MemberSignature Language="C#" Value="public static bool IsStartNCNameChar (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsStartNCNameChar(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.IsStartNCNameChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsStartNCNameChar (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsStartNCNameChar(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="8efc0-187">検証対象の文字。</span><span class="sxs-lookup"><span data-stu-id="8efc0-187">The character to validate.</span></span></param>
        <summary><span data-ttu-id="8efc0-188">渡された文字が有効な Start Name Character 型かどうかをチェックします。</span><span class="sxs-lookup"><span data-stu-id="8efc0-188">Checks if the passed-in character is a valid Start Name Character type.</span></span></summary>
        <returns>
          <span data-ttu-id="8efc0-189">文字が有効な Start Name Character 型の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-189"><see langword="true" /> if the character is a valid Start Name Character type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8efc0-190">詳細については、使用できる文字は、次を参照してください。、 [XML 1.0 仕様の (第 4 版)](http://go.microsoft.com/fwlink/?LinkId=147985)推奨します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-190">For details about allowed characters, see the [XML 1.0 spec (fourth edition)](http://go.microsoft.com/fwlink/?LinkId=147985) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWhitespaceChar">
      <MemberSignature Language="C#" Value="public static bool IsWhitespaceChar (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhitespaceChar(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.IsWhitespaceChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhitespaceChar (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhitespaceChar(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="8efc0-191">検証対象の文字。</span><span class="sxs-lookup"><span data-stu-id="8efc0-191">The character to validate.</span></span></param>
        <summary><span data-ttu-id="8efc0-192">渡された文字が有効な XML 空白文字かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-192">Checks if the passed-in character is a valid XML whitespace character.</span></span></summary>
        <returns>
          <span data-ttu-id="8efc0-193">渡された文字が有効な XML 空白文字である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-193"><see langword="true" /> if the passed in character is a valid XML whitespace character; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8efc0-194">詳細については、使用できる文字は、次を参照してください。、 [XML 1.0 仕様の (第 4 版)](http://go.microsoft.com/fwlink/?LinkID=147985)推奨します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-194">For details about allowed characters, see the [XML 1.0 spec (fourth edition)](http://go.microsoft.com/fwlink/?LinkID=147985) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXmlChar">
      <MemberSignature Language="C#" Value="public static bool IsXmlChar (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsXmlChar(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.IsXmlChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsXmlChar (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsXmlChar(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="8efc0-195">検証対象の文字。</span><span class="sxs-lookup"><span data-stu-id="8efc0-195">The character to validate.</span></span></param>
        <summary><span data-ttu-id="8efc0-196">渡された文字が有効な XML 文字かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-196">Checks if the passed-in character is a valid XML character.</span></span></summary>
        <returns>
          <span data-ttu-id="8efc0-197">渡された文字が有効な XML 文字である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-197"><see langword="true" /> if the passed in character is a valid XML character; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8efc0-198">詳細については、使用できる文字は、次を参照してください。、 [XML 1.0 仕様の (第 4 版)](http://go.microsoft.com/fwlink/?LinkId=147985)推奨します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-198">For details about allowed characters, see the [XML 1.0 spec (fourth edition)](http://go.microsoft.com/fwlink/?LinkId=147985) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXmlSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsXmlSurrogatePair (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsXmlSurrogatePair(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.IsXmlSurrogatePair(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsXmlSurrogatePair (lowChar As Char, highChar As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsXmlSurrogatePair(char lowChar, char highChar);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar"><span data-ttu-id="8efc0-199">検証対象のサロゲート文字。</span><span class="sxs-lookup"><span data-stu-id="8efc0-199">The surrogate character to validate.</span></span></param>
        <param name="highChar"><span data-ttu-id="8efc0-200">検証対象のサロゲート文字。</span><span class="sxs-lookup"><span data-stu-id="8efc0-200">The surrogate character to validate.</span></span></param>
        <summary><span data-ttu-id="8efc0-201">渡された文字のサロゲート ペアが有効な XML 文字かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-201">Checks if the passed-in surrogate pair of characters is a valid XML character.</span></span></summary>
        <returns>
          <span data-ttu-id="8efc0-202">渡されたサロゲート ペア文字が有効な XML 文字である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-202"><see langword="true" /> if the passed in surrogate pair of characters is a valid XML character; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToBoolean(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (s As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8efc0-203">変換する文字列。</span><span class="sxs-lookup"><span data-stu-id="8efc0-203">The string to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-204"><see cref="T:System.String" /> を等価の <see cref="T:System.Boolean" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-204">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Boolean" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8efc0-205"><see langword="Boolean" /> 値。つまり <see langword="true" /> または <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-205">A <see langword="Boolean" /> value, that is, <see langword="true" /> or <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8efc0-206">有効な文字列は「1」または"true"の`true`と「0」または"false"`false`です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-206">Valid strings are "1" or "true" for `true` and "0" or "false" for `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8efc0-207"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-207"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8efc0-208"><paramref name="s" /> が <see langword="Boolean" /> 値を表していません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-208"><paramref name="s" /> does not represent a <see langword="Boolean" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToByte(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (s As String) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8efc0-209">変換する文字列。</span><span class="sxs-lookup"><span data-stu-id="8efc0-209">The string to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-210"><see cref="T:System.String" /> を等価の <see cref="T:System.Byte" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-210">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Byte" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8efc0-211">文字列と等価の <see langword="Byte" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-211">A <see langword="Byte" /> equivalent of the string.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8efc0-212"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-212"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8efc0-213"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-213"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="8efc0-214"><paramref name="s" /> が <see cref="F:System.Byte.MinValue" /> 未満の数値か、<see cref="F:System.Byte.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="8efc0-214"><paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToChar(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (s As String) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8efc0-215">変換する単一の文字を含んでいる文字列。</span><span class="sxs-lookup"><span data-stu-id="8efc0-215">The string containing a single character to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-216"><see cref="T:System.String" /> を等価の <see cref="T:System.Char" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-216">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Char" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8efc0-217">単一の文字を表す <see langword="Char" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-217">A <see langword="Char" /> representing the single character.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8efc0-218"><paramref name="s" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-218">The value of the <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8efc0-219"><paramref name="s" /> パラメーターに複数の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="8efc0-219">The <paramref name="s" /> parameter contains more than one character.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDateTime">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8efc0-220"><see cref="T:System.String" /> を等価の <see cref="T:System.DateTime" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-220">Converts the <see cref="T:System.String" /> to a <see cref="T:System.DateTime" /> equivalent.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDateTime(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (s As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use XmlConvert.ToDateTime() that takes in XmlDateTimeSerializationMode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8efc0-221">変換する文字列。</span><span class="sxs-lookup"><span data-stu-id="8efc0-221">The string to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-222"><see cref="T:System.String" /> を等価の <see cref="T:System.DateTime" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-222">Converts the <see cref="T:System.String" /> to a <see cref="T:System.DateTime" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8efc0-223">文字列と等価の <see langword="DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-223">A <see langword="DateTime" /> equivalent of the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="8efc0-224"><xref:System.Xml.XmlConvert.ToDateTime%28System.String%29?displayProperty=nameWithType>メソッドは、2.0、.NET Framework のバージョンで廃止されておりは置き換えられました、<xref:System.Xml.XmlConvert.ToDateTime%28System.String%2CSystem.Xml.XmlDateTimeSerializationMode%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="8efc0-224">The <xref:System.Xml.XmlConvert.ToDateTime%28System.String%29?displayProperty=nameWithType> method is obsolete in the 2.0 version of the .NET Framework and has been replaced by the <xref:System.Xml.XmlConvert.ToDateTime%28System.String%2CSystem.Xml.XmlDateTimeSerializationMode%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8efc0-225">次の例で<xref:System.Xml.XmlConvert.ToDouble%2A>と`ToDateTime`厳密に型指定されたデータを読み取れません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-225">The following example uses <xref:System.Xml.XmlConvert.ToDouble%2A> and `ToDateTime` to read strongly typed data.</span></span>  
  
 [!code-cpp[XmlConvert.ToDouble#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlConvert.ToDouble/CPP/readData.cpp#1)]
 [!code-csharp[XmlConvert.ToDouble#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert.ToDouble/CS/readdata.cs#1)]
 [!code-vb[XmlConvert.ToDouble#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert.ToDouble/VB/readdata.vb#1)]  
  
 <span data-ttu-id="8efc0-226">この例では、`orderData.xml`の入力として、します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-226">The example uses the file, `orderData.xml`, as input.</span></span>  
  
 [!code-xml[XmlConvert.ToDouble#2](~/samples/snippets/xml/VS_Snippets_Data/XmlConvert.ToDouble/XML/orderdata.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8efc0-227"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-227"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8efc0-228"><paramref name="s" /> が空の文字列です。または正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-228"><paramref name="s" /> is an empty string or is not in the correct format.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (string s, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(string s, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (s As String, format As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::String ^ s, System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8efc0-229">変換する文字列。</span><span class="sxs-lookup"><span data-stu-id="8efc0-229">The string to convert.</span></span></param>
        <param name="format"><span data-ttu-id="8efc0-230">変換後の <see langword="DateTime" /> に適用する形式構造。</span><span class="sxs-lookup"><span data-stu-id="8efc0-230">The format structure to apply to the converted <see langword="DateTime" />.</span></span> <span data-ttu-id="8efc0-231">有効な形式には、"yyyy-MM-ddTHH:mm:sszzzzzz" およびそのサブセットが含まれます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-231">Valid formats include "yyyy-MM-ddTHH:mm:sszzzzzz" and its subsets.</span></span> <span data-ttu-id="8efc0-232">文字列はこの形式に対して妥当性が検査されます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-232">The string is validated against this format.</span></span></param>
        <summary><span data-ttu-id="8efc0-233"><see cref="T:System.String" /> を等価の <see cref="T:System.DateTime" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-233">Converts the <see cref="T:System.String" /> to a <see cref="T:System.DateTime" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8efc0-234">文字列と等価の <see langword="DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-234">A <see langword="DateTime" /> equivalent of the string.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8efc0-235"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-235"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8efc0-236"><paramref name="s" /> または <paramref name="format" /> が String.Empty です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-236"><paramref name="s" /> or <paramref name="format" /> is String.Empty</span></span>  
  
 <span data-ttu-id="8efc0-237">- または -</span><span class="sxs-lookup"><span data-stu-id="8efc0-237">-or-</span></span>  
  
 <span data-ttu-id="8efc0-238"><paramref name="s" /> に、<paramref name="format" /> に対応する日付と時刻が格納されていません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-238"><paramref name="s" /> does not contain a date and time that corresponds to <paramref name="format" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (string s, string[] formats);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(string s, string[] formats) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (s As String, formats As String()) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::String ^ s, cli::array &lt;System::String ^&gt; ^ formats);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8efc0-239">変換する文字列。</span><span class="sxs-lookup"><span data-stu-id="8efc0-239">The string to convert.</span></span></param>
        <param name="formats"><span data-ttu-id="8efc0-240">変換後の <see langword="DateTime" /> に適用する形式構造を格納している配列。</span><span class="sxs-lookup"><span data-stu-id="8efc0-240">An array containing the format structures to apply to the converted <see langword="DateTime" />.</span></span> <span data-ttu-id="8efc0-241">有効な形式には、"yyyy-MM-ddTHH:mm:sszzzzzz" およびそのサブセットが含まれます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-241">Valid formats include "yyyy-MM-ddTHH:mm:sszzzzzz" and its subsets.</span></span></param>
        <summary><span data-ttu-id="8efc0-242"><see cref="T:System.String" /> を等価の <see cref="T:System.DateTime" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-242">Converts the <see cref="T:System.String" /> to a <see cref="T:System.DateTime" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8efc0-243">文字列と等価の <see langword="DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-243">A <see langword="DateTime" /> equivalent of the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8efc0-244">このメソッドは、文字列に対して検証を指定する複数の形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-244">This method allows multiple formats for the string to be validated against.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8efc0-245"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-245"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8efc0-246"><paramref name="s" />、または <paramref name="formats" /> の要素が String.Empty です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-246"><paramref name="s" /> or an element of <paramref name="formats" /> is String.Empty</span></span>  
  
 <span data-ttu-id="8efc0-247">- または -</span><span class="sxs-lookup"><span data-stu-id="8efc0-247">-or-</span></span>  
  
 <span data-ttu-id="8efc0-248"><paramref name="s" /> に、<paramref name="formats" /> のいずれかの要素に対応する日付と時刻が格納されていません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-248"><paramref name="s" /> does not contain a date and time that corresponds to any of the elements of <paramref name="formats" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (string s, System.Xml.XmlDateTimeSerializationMode dateTimeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(string s, valuetype System.Xml.XmlDateTimeSerializationMode dateTimeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (s As String, dateTimeOption As XmlDateTimeSerializationMode) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::String ^ s, System::Xml::XmlDateTimeSerializationMode dateTimeOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="dateTimeOption" Type="System.Xml.XmlDateTimeSerializationMode" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8efc0-249">変換する <see cref="T:System.String" /> 値。</span><span class="sxs-lookup"><span data-stu-id="8efc0-249">The <see cref="T:System.String" /> value to convert.</span></span></param>
        <param name="dateTimeOption"><span data-ttu-id="8efc0-250">世界協定時刻 (UTC) 日付を使用している場合に、日付を現地時間に変換するか、または UTC のままにするかを指定する <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="8efc0-250">One of the <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> values that specify whether the date should be converted to local time or preserved as Coordinated Universal Time (UTC), if it is a UTC date.</span></span></param>
        <summary><span data-ttu-id="8efc0-251">指定された <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> を使用して、<see cref="T:System.String" /> を <see cref="T:System.DateTime" /> に変換します</span><span class="sxs-lookup"><span data-stu-id="8efc0-251">Converts the <see cref="T:System.String" /> to a <see cref="T:System.DateTime" /> using the <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> specified</span></span></summary>
        <returns><span data-ttu-id="8efc0-252"><see cref="T:System.String" /> と等価の <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-252">A <see cref="T:System.DateTime" /> equivalent of the <see cref="T:System.String" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="8efc0-253"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-253"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8efc0-254"><paramref name="dateTimeOption" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-254">The <paramref name="dateTimeOption" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8efc0-255"><paramref name="s" /> が空の文字列です。または有効な形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-255"><paramref name="s" /> is an empty string or is not in a valid format.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDateTimeOffset">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8efc0-256">指定した <see cref="T:System.String" /> を等価の <see cref="T:System.DateTimeOffset" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-256">Converts the supplied <see cref="T:System.String" /> to a <see cref="T:System.DateTimeOffset" /> equivalent.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDateTimeOffset">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ToDateTimeOffset (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ToDateTimeOffset(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTimeOffset (s As String) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ToDateTimeOffset(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8efc0-257">変換する文字列。</span><span class="sxs-lookup"><span data-stu-id="8efc0-257">The string to convert.</span></span>  
  
 <span data-ttu-id="8efc0-258">**注** 文字列は、W3C 勧告の XML dateTime 型のサブセットに準拠している必要があります。</span><span class="sxs-lookup"><span data-stu-id="8efc0-258">**Note** The string must conform to a subset of the W3C Recommendation for the XML dateTime type.</span></span> <span data-ttu-id="8efc0-259">詳細については、「http://www.w3.org/TR/xmlschema-2/#dateTime」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8efc0-259">For more information see http://www.w3.org/TR/xmlschema-2/#dateTime.</span></span></param>
        <summary><span data-ttu-id="8efc0-260">指定した <see cref="T:System.String" /> を等価の <see cref="T:System.DateTimeOffset" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-260">Converts the supplied <see cref="T:System.String" /> to a <see cref="T:System.DateTimeOffset" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8efc0-261">指定した文字列と等価の <see cref="T:System.DateTimeOffset" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-261">The <see cref="T:System.DateTimeOffset" /> equivalent of the supplied string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8efc0-262">複数の 7 桁の数字は、秒の小数部に指定されている、値が丸められます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-262">When more than seven digits are specified for fractional seconds, the value is rounded.</span></span> <span data-ttu-id="8efc0-263">00000004 0000000 になり、および 00000005 0000001 になります。</span><span class="sxs-lookup"><span data-stu-id="8efc0-263">For example, 00000004 becomes 0000000 and 00000005 becomes 0000001.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8efc0-264">次の例では、文字列を読み込み、XML ファイルからおよび使用する方法、<xref:System.Xml.XmlConvert.ToDateTimeOffset%2A>を文字列に変換するメソッド、<xref:System.DateTimeOffset>型です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-264">The following example demonstrates how to read a string from an XML file and use the <xref:System.Xml.XmlConvert.ToDateTimeOffset%2A> method to convert the string to a <xref:System.DateTimeOffset> type.</span></span>  
  
 [!code-csharp[XmlConvert_ToDateTimeOffset_ex1#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert_ToDateTimeOffset_ex1/CS/XmlConvert_ToDateTimeOffset_ex1.cs#1)]
 [!code-vb[XmlConvert_ToDateTimeOffset_ex1#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert_ToDateTimeOffset_ex1/VB/XmlConvert_ToDateTimeOffset_ex1.vb#1)]  
  
 <span data-ttu-id="8efc0-265">この例では、transactions.xml ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-265">The example uses the transactions.xml file.</span></span>  
  
```xml  
<?xml version="1.0"?>  
<transactions>  
   <transaction>  
      <id>123456789</id>  
      <amount>1.00</amount>  
      <currency>USD</currency>  
      <time>2007-08-03T22:05:13-07:00</time>  
   </transaction>  
</transactions>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8efc0-266"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-266"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8efc0-267">このメソッドに渡した引数が、許容値の範囲外にあります。</span><span class="sxs-lookup"><span data-stu-id="8efc0-267">The argument passed to this method is outside the range of allowable values.</span></span> <span data-ttu-id="8efc0-268">許容値については、<see cref="T:System.DateTimeOffset" /> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8efc0-268">For information about allowable values, see <see cref="T:System.DateTimeOffset" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8efc0-269">このメソッドに渡した引数が、W3C 勧告の XML dateTime 型のサブセットに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-269">The argument passed to this method does not conform to a subset of the W3C Recommendations for the XML dateTime type.</span></span> <span data-ttu-id="8efc0-270">詳細については、「[http://www.w3.org/TR/xmlschema-2/#dateTime](http://go.microsoft.com/fwlink/?LinkId=97914)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8efc0-270">For more information see [http://www.w3.org/TR/xmlschema-2/#dateTime](http://go.microsoft.com/fwlink/?LinkId=97914).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTimeOffset">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ToDateTimeOffset (string s, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ToDateTimeOffset(string s, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTimeOffset (s As String, format As String) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ToDateTimeOffset(System::String ^ s, System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8efc0-271">変換する文字列。</span><span class="sxs-lookup"><span data-stu-id="8efc0-271">The string to convert.</span></span></param>
        <param name="format"><span data-ttu-id="8efc0-272">変換前の <c>s</c> の形式。</span><span class="sxs-lookup"><span data-stu-id="8efc0-272">The format from which <c>s</c> is converted.</span></span> <span data-ttu-id="8efc0-273">フォーマット パラメーターには、W3C 勧告の XML dateTime 型の任意のサブセットを指定できます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-273">The format parameter can be any subset of the W3C Recommendation for the XML dateTime type.</span></span> <span data-ttu-id="8efc0-274">(詳細については http://www.w3.org/TR/xmlschema-2/#dateTime.) を参照)。文字列 <c>s</c> はこの形式に対して妥当性が検査されます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-274">(For more information see http://www.w3.org/TR/xmlschema-2/#dateTime.) The string <c>s</c> is validated against this format.</span></span></param>
        <summary><span data-ttu-id="8efc0-275">指定した <see cref="T:System.String" /> を等価の <see cref="T:System.DateTimeOffset" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-275">Converts the supplied <see cref="T:System.String" /> to a <see cref="T:System.DateTimeOffset" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8efc0-276">指定した文字列と等価の <see cref="T:System.DateTimeOffset" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-276">The <see cref="T:System.DateTimeOffset" /> equivalent of the supplied string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8efc0-277">入力文字列内で指定されたオフセットには、DateTimeOffset のシリアル化解除された表現でオーバーフローが発生、FormatException がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-277">If the offset specified within the input string will cause an overflow in the deserialized representation of the DateTimeOffset, a FormatException is thrown.</span></span>  
  
 <span data-ttu-id="8efc0-278">複数の 7 桁の数字は、秒の小数部に指定されている、値が丸められます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-278">When more than seven digits are specified for fractional seconds, the value is rounded.</span></span> <span data-ttu-id="8efc0-279">00000004 0000000 になり、および 00000005 0000001 になります。</span><span class="sxs-lookup"><span data-stu-id="8efc0-279">For example, 00000004 becomes 0000000 and 00000005 becomes 0000001.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8efc0-280">次の例では、文字列を読み込み、XML ファイルからおよび使用する方法、<xref:System.Xml.XmlConvert.ToDateTimeOffset%2A>を文字列に変換するメソッド、<xref:System.DateTimeOffset>型です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-280">The following example demonstrates how to read a string from an XML file and use the <xref:System.Xml.XmlConvert.ToDateTimeOffset%2A> method to convert the string to a <xref:System.DateTimeOffset> type.</span></span> <span data-ttu-id="8efc0-281">入力文字列は、変換される前に、指定した書式に対して検証されます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-281">The input string is validated against the specified format before being converted.</span></span>  
  
 [!code-csharp[XmlConvert_ToDateTimeOffset_ex2#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert_ToDateTimeOffset_ex2/CS/XmlConvert_ToDateTimeOffset_ex2.cs#1)]
 [!code-vb[XmlConvert_ToDateTimeOffset_ex2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert_ToDateTimeOffset_ex2/VB/XmlConvert_ToDateTimeOffset_ex2.vb#1)]  
  
 <span data-ttu-id="8efc0-282">この例では、transactions.xml ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-282">The example uses the transactions.xml file.</span></span>  
  
```xml  
<?xml version="1.0"?>  
<transactions>  
   <transaction>  
      <id>123456789</id>  
      <amount>1.00</amount>  
      <currency>USD</currency>  
      <time>2007-08-03T22:05:13-07:00</time>  
   </transaction>  
</transactions>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8efc0-283"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-283"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8efc0-284"><paramref name="s" /> または <paramref name="format" /> が空の文字列です。または指定された形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-284"><paramref name="s" /> or <paramref name="format" /> is an empty string or is not in the specified format.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTimeOffset">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ToDateTimeOffset (string s, string[] formats);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ToDateTimeOffset(string s, string[] formats) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTimeOffset (s As String, formats As String()) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ToDateTimeOffset(System::String ^ s, cli::array &lt;System::String ^&gt; ^ formats);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8efc0-285">変換する文字列。</span><span class="sxs-lookup"><span data-stu-id="8efc0-285">The string to convert.</span></span></param>
        <param name="formats"><span data-ttu-id="8efc0-286"><c>s</c> に変換可能な形式の配列。</span><span class="sxs-lookup"><span data-stu-id="8efc0-286">An array of formats from which <c>s</c> can be converted.</span></span> <span data-ttu-id="8efc0-287"><c>formats</c> の各形式には、W3C 勧告の XML dateTime 型の任意のサブセットを指定できます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-287">Each format in <c>formats</c> can be any subset of the W3C Recommendation for the XML dateTime type.</span></span> <span data-ttu-id="8efc0-288">(詳細については http://www.w3.org/TR/xmlschema-2/#dateTime.) を参照)。文字列 <c>s</c> は、これらの形式のいずれかに対して妥当性が検査されます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-288">(For more information see http://www.w3.org/TR/xmlschema-2/#dateTime.) The string <c>s</c> is validated against one of these formats.</span></span></param>
        <summary><span data-ttu-id="8efc0-289">指定した <see cref="T:System.String" /> を等価の <see cref="T:System.DateTimeOffset" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-289">Converts the supplied <see cref="T:System.String" /> to a <see cref="T:System.DateTimeOffset" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8efc0-290">指定した文字列と等価の <see cref="T:System.DateTimeOffset" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-290">The <see cref="T:System.DateTimeOffset" /> equivalent of the supplied string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8efc0-291">入力文字列内で指定されたオフセットには、DateTimeOffset のシリアル化解除された表現でオーバーフローが発生、FormatException がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-291">If the offset specified within the input string will cause an overflow in the deserialized representation of the DateTimeOffset, a FormatException is thrown.</span></span>  
  
 <span data-ttu-id="8efc0-292">複数の 7 桁の数字は、秒の小数部に指定されている、値が丸められます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-292">When more than seven digits are specified for fractional seconds, the value is rounded.</span></span> <span data-ttu-id="8efc0-293">00000004 0000000 になり、および 00000005 0000001 になります。</span><span class="sxs-lookup"><span data-stu-id="8efc0-293">For example, 00000004 becomes 0000000 and 00000005 becomes 0000001.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8efc0-294">次の例では、文字列を読み込み、XML ファイルからおよび使用する方法、<xref:System.Xml.XmlConvert.ToDateTimeOffset%2A>を文字列に変換するメソッド、<xref:System.DateTimeOffset>型です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-294">The following example demonstrates how to read a string from an XML file and use the <xref:System.Xml.XmlConvert.ToDateTimeOffset%2A> method to convert the string to a <xref:System.DateTimeOffset> type.</span></span> <span data-ttu-id="8efc0-295">入力文字列は、変換される前に、指定した書式のいずれかに対して検証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8efc0-295">The input string must validate against one of the specified formats before being converted.</span></span>  
  
 [!code-csharp[XmlConvert_ToDateTimeOffset_ex3#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert_ToDateTimeOffset_ex3/CS/XmlConvert_ToDateTimeOffset_ex3.cs#1)]
 [!code-vb[XmlConvert_ToDateTimeOffset_ex3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert_ToDateTimeOffset_ex3/VB/XmlConvert_ToDateTimeOffset_ex3.vb#1)]  
  
 <span data-ttu-id="8efc0-296">この例では、transactions.xml ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-296">The example uses the transactions.xml file.</span></span>  
  
```xml  
<?xml version="1.0"?>  
<transactions>  
   <transaction>  
      <id>123456789</id>  
      <amount>1.00</amount>  
      <currency>USD</currency>  
      <time>2007-08-03T22:05:13-07:00</time>  
   </transaction>  
</transactions>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDecimal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (s As String) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8efc0-297">変換する文字列。</span><span class="sxs-lookup"><span data-stu-id="8efc0-297">The string to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-298"><see cref="T:System.String" /> を等価の <see cref="T:System.Decimal" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-298">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Decimal" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8efc0-299">文字列と等価の <see langword="Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-299">A <see langword="Decimal" /> equivalent of the string.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8efc0-300"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-300"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8efc0-301"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-301"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="8efc0-302"><paramref name="s" /> が <see cref="F:System.Decimal.MinValue" /> 未満の数値か、<see cref="F:System.Decimal.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="8efc0-302"><paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDouble(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (s As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8efc0-303">変換する文字列。</span><span class="sxs-lookup"><span data-stu-id="8efc0-303">The string to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-304"><see cref="T:System.String" /> を等価の <see cref="T:System.Double" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-304">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Double" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8efc0-305">文字列と等価の <see langword="Double" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-305">A <see langword="Double" /> equivalent of the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8efc0-306">場合`s`が INF または-INF、このメソッドは Double.PositiveInfinity または Double.NegativeInfinity をそれぞれ返します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-306">If `s` is INF or -INF, this method returns Double.PositiveInfinity or Double.NegativeInfinity respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8efc0-307">次の例で`ToDouble`と<xref:System.Xml.XmlConvert.ToDateTime%2A>厳密に型指定されたデータを読み取れません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-307">The following example uses `ToDouble` and <xref:System.Xml.XmlConvert.ToDateTime%2A> to read strongly typed data.</span></span>  
  
 [!code-cpp[XmlConvert.ToDouble#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlConvert.ToDouble/CPP/readData.cpp#1)]
 [!code-csharp[XmlConvert.ToDouble#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert.ToDouble/CS/readdata.cs#1)]
 [!code-vb[XmlConvert.ToDouble#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert.ToDouble/VB/readdata.vb#1)]  
  
 <span data-ttu-id="8efc0-308">この例では、`orderData.xml`の入力として、します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-308">The example uses the file, `orderData.xml`, as input.</span></span>  
  
 [!code-xml[XmlConvert.ToDouble#2](~/samples/snippets/xml/VS_Snippets_Data/XmlConvert.ToDouble/XML/orderdata.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8efc0-309"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-309"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8efc0-310"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-310"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="8efc0-311"><paramref name="s" /> が <see cref="F:System.Double.MinValue" /> 未満の数値か、<see cref="F:System.Double.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="8efc0-311"><paramref name="s" /> represents a number less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span></span></exception>
        <altmember cref="F:System.Double.PositiveInfinity" />
        <altmember cref="F:System.Double.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="ToGuid">
      <MemberSignature Language="C#" Value="public static Guid ToGuid (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid ToGuid(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToGuid(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToGuid (s As String) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid ToGuid(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8efc0-312">変換する文字列。</span><span class="sxs-lookup"><span data-stu-id="8efc0-312">The string to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-313"><see cref="T:System.String" /> を等価の <see cref="T:System.Guid" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-313">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Guid" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8efc0-314">文字列と等価の <see langword="Guid" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-314">A <see langword="Guid" /> equivalent of the string.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToInt16(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (s As String) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8efc0-315">変換する文字列。</span><span class="sxs-lookup"><span data-stu-id="8efc0-315">The string to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-316"><see cref="T:System.String" /> を等価の <see cref="T:System.Int16" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-316">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Int16" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8efc0-317">文字列と等価の <see langword="Int16" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-317">An <see langword="Int16" /> equivalent of the string.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8efc0-318"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-318"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8efc0-319"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-319"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="8efc0-320"><paramref name="s" /> が <see cref="F:System.Int16.MinValue" /> 未満の数値か、<see cref="F:System.Int16.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="8efc0-320"><paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToInt32(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8efc0-321">変換する文字列。</span><span class="sxs-lookup"><span data-stu-id="8efc0-321">The string to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-322"><see cref="T:System.String" /> を等価の <see cref="T:System.Int32" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-322">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Int32" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8efc0-323">文字列と等価の <see langword="Int32" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-323">An <see langword="Int32" /> equivalent of the string.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8efc0-324"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-324"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8efc0-325"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-325"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="8efc0-326"><paramref name="s" /> が <see cref="F:System.Int32.MinValue" /> 未満の数値か、<see cref="F:System.Int32.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="8efc0-326"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToInt64(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (s As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8efc0-327">変換する文字列。</span><span class="sxs-lookup"><span data-stu-id="8efc0-327">The string to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-328"><see cref="T:System.String" /> を等価の <see cref="T:System.Int64" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-328">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Int64" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8efc0-329">文字列と等価の <see langword="Int64" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-329">An <see langword="Int64" /> equivalent of the string.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8efc0-330"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-330"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8efc0-331"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-331"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="8efc0-332"><paramref name="s" /> が <see cref="F:System.Int64.MinValue" /> 未満の数値か、<see cref="F:System.Int64.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="8efc0-332"><paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToSByte(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (s As String) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8efc0-333">変換する文字列。</span><span class="sxs-lookup"><span data-stu-id="8efc0-333">The string to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-334"><see cref="T:System.String" /> を等価の <see cref="T:System.SByte" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-334">Converts the <see cref="T:System.String" /> to a <see cref="T:System.SByte" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8efc0-335">文字列と等価の <see langword="SByte" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-335">An <see langword="SByte" /> equivalent of the string.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8efc0-336"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-336"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8efc0-337"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-337"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="8efc0-338"><paramref name="s" /> が <see cref="F:System.SByte.MinValue" /> 未満の数値か、<see cref="F:System.SByte.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="8efc0-338"><paramref name="s" /> represents a number less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToSingle(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (s As String) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8efc0-339">変換する文字列。</span><span class="sxs-lookup"><span data-stu-id="8efc0-339">The string to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-340"><see cref="T:System.String" /> を等価の <see cref="T:System.Single" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-340">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Single" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8efc0-341">文字列と等価の <see langword="Single" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-341">A <see langword="Single" /> equivalent of the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8efc0-342">場合`s`が INF または-INF、このメソッドは Single.PositiveInfinity または Single.NegativeInfinity をそれぞれ返します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-342">If `s` is INF or -INF, this method returns Single.PositiveInfinity or Single.NegativeInfinity respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8efc0-343"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-343"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8efc0-344"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-344"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="8efc0-345"><paramref name="s" /> が <see cref="F:System.Single.MinValue" /> 未満の数値か、<see cref="F:System.Single.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="8efc0-345"><paramref name="s" /> represents a number less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span></span></exception>
        <altmember cref="F:System.Single.PositiveInfinity" />
        <altmember cref="F:System.Single.NegativeInfinity" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8efc0-346">厳密に型指定されたデータを等価の <see cref="T:System.String" /> 形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-346">Converts strongly typed data to an equivalent <see cref="T:System.String" /> representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8efc0-347">変換する値。</span><span class="sxs-lookup"><span data-stu-id="8efc0-347">The value to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-348"><see cref="T:System.Boolean" /> を <see cref="T:System.String" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-348">Converts the <see cref="T:System.Boolean" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8efc0-349"><see langword="Boolean" /> の文字列形式。つまり "true" または "false"。</span><span class="sxs-lookup"><span data-stu-id="8efc0-349">A string representation of the <see langword="Boolean" />, that is, "true" or "false".</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8efc0-350">変換する値。</span><span class="sxs-lookup"><span data-stu-id="8efc0-350">The value to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-351"><see cref="T:System.Byte" /> を <see cref="T:System.String" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-351">Converts the <see cref="T:System.Byte" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8efc0-352"><see langword="Byte" /> の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="8efc0-352">A string representation of the <see langword="Byte" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8efc0-353">変換する値。</span><span class="sxs-lookup"><span data-stu-id="8efc0-353">The value to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-354"><see cref="T:System.Char" /> を <see cref="T:System.String" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-354">Converts the <see cref="T:System.Char" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8efc0-355"><see langword="Char" /> の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="8efc0-355">A string representation of the <see langword="Char" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTime) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTime value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use XmlConvert.ToString() that takes in XmlDateTimeSerializationMode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8efc0-356">変換する値。</span><span class="sxs-lookup"><span data-stu-id="8efc0-356">The value to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-357"><see cref="T:System.DateTime" /> を <see cref="T:System.String" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-357">Converts the <see cref="T:System.DateTime" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8efc0-358">yyyy-MM-ddTHH:mm:ss の形式での <see langword="DateTime" /> の文字列形式。'T' は定数リテラル。</span><span class="sxs-lookup"><span data-stu-id="8efc0-358">A string representation of the <see langword="DateTime" /> in the format yyyy-MM-ddTHH:mm:ss where 'T' is a constant literal.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="8efc0-359"><xref:System.Xml.XmlConvert.ToString%28System.DateTime%29?displayProperty=nameWithType>メソッドは、2.0、.NET Framework のバージョンで廃止されており置き換えられて、<xref:System.Xml.XmlConvert.ToString%28System.DateTime%2CSystem.Xml.XmlDateTimeSerializationMode%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="8efc0-359">The <xref:System.Xml.XmlConvert.ToString%28System.DateTime%29?displayProperty=nameWithType> method is obsolete in the 2.0 version of the .NET Framework and has been replaced with the <xref:System.Xml.XmlConvert.ToString%28System.DateTime%2CSystem.Xml.XmlDateTimeSerializationMode%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTimeOffset) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTimeOffset value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8efc0-360">変換される <see cref="T:System.DateTimeOffset" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-360">The <see cref="T:System.DateTimeOffset" /> to be converted.</span></span></param>
        <summary><span data-ttu-id="8efc0-361">指定した <see cref="T:System.DateTimeOffset" /> を <see cref="T:System.String" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-361">Converts the supplied <see cref="T:System.DateTimeOffset" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8efc0-362">指定した <see cref="T:System.DateTimeOffset" /> の <see cref="T:System.String" /> 表現。</span><span class="sxs-lookup"><span data-stu-id="8efc0-362">A <see cref="T:System.String" /> representation of the supplied <see cref="T:System.DateTimeOffset" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8efc0-363">次の例では、変換、<xref:System.DateTimeOffset>を現在の時刻の表現、<xref:System.String>です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-363">The following example converts a <xref:System.DateTimeOffset> representation of the current time to a <xref:System.String>.</span></span>  
  
 [!code-csharp[XmlConvert_ToString_DTO#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert_ToString_DTO/CS/XmlConvert_ToString_DTO.cs#1)]
 [!code-vb[XmlConvert_ToString_DTO#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert_ToString_DTO/VB/XmlConvert_ToString_DTO.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Decimal) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8efc0-364">変換する値。</span><span class="sxs-lookup"><span data-stu-id="8efc0-364">The value to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-365"><see cref="T:System.Decimal" /> を <see cref="T:System.String" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-365">Converts the <see cref="T:System.Decimal" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8efc0-366"><see langword="Decimal" /> の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="8efc0-366">A string representation of the <see langword="Decimal" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8efc0-367">変換する値。</span><span class="sxs-lookup"><span data-stu-id="8efc0-367">The value to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-368"><see cref="T:System.Double" /> を <see cref="T:System.String" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-368">Converts the <see cref="T:System.Double" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8efc0-369"><see langword="Double" /> の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="8efc0-369">A string representation of the <see langword="Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8efc0-370">場合`value`Double.PositiveInfinity または Double.NegativeInfinity、このメソッドは文字列 INF または-INF をそれぞれ返します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-370">If `value` is Double.PositiveInfinity or Double.NegativeInfinity, this method returns the string INF or -INF respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8efc0-371">次の例では、データ型を文字列に変換し、し、情報をコンソールに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-371">The following example, converts data types to string and then writes the information out to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Double.PositiveInfinity" />
        <altmember cref="F:System.Double.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.Guid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Guid) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(Guid value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8efc0-372">変換する値。</span><span class="sxs-lookup"><span data-stu-id="8efc0-372">The value to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-373"><see cref="T:System.Guid" /> を <see cref="T:System.String" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-373">Converts the <see cref="T:System.Guid" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8efc0-374"><see langword="Guid" /> の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="8efc0-374">A string representation of the <see langword="Guid" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Short) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8efc0-375">変換する値。</span><span class="sxs-lookup"><span data-stu-id="8efc0-375">The value to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-376"><see cref="T:System.Int16" /> を <see cref="T:System.String" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-376">Converts the <see cref="T:System.Int16" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8efc0-377"><see langword="Int16" /> の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="8efc0-377">A string representation of the <see langword="Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8efc0-378">次の例では、データ型を文字列に変換し、し、情報をコンソールに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-378">The following example, converts data types to string and then writes the information out to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8efc0-379">変換する値。</span><span class="sxs-lookup"><span data-stu-id="8efc0-379">The value to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-380"><see cref="T:System.Int32" /> を <see cref="T:System.String" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-380">Converts the <see cref="T:System.Int32" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8efc0-381"><see langword="Int32" /> の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="8efc0-381">A string representation of the <see langword="Int32" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Long) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8efc0-382">変換する値。</span><span class="sxs-lookup"><span data-stu-id="8efc0-382">The value to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-383"><see cref="T:System.Int64" /> を <see cref="T:System.String" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-383">Converts the <see cref="T:System.Int64" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8efc0-384"><see langword="Int64" /> の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="8efc0-384">A string representation of the <see langword="Int64" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As SByte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8efc0-385">変換する値。</span><span class="sxs-lookup"><span data-stu-id="8efc0-385">The value to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-386"><see cref="T:System.SByte" /> を <see cref="T:System.String" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-386">Converts the <see cref="T:System.SByte" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8efc0-387"><see langword="SByte" /> の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="8efc0-387">A string representation of the <see langword="SByte" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Single) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8efc0-388">変換する値。</span><span class="sxs-lookup"><span data-stu-id="8efc0-388">The value to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-389"><see cref="T:System.Single" /> を <see cref="T:System.String" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-389">Converts the <see cref="T:System.Single" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8efc0-390"><see langword="Single" /> の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="8efc0-390">A string representation of the <see langword="Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8efc0-391">場合`value`Single.PositiveInfinity または Single.NegativeInfinity、このメソッドは文字列 INF または-INF をそれぞれ返します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-391">If `value` is Single.PositiveInfinity or Single.NegativeInfinity, this method returns the string INF or -INF respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Single.PositiveInfinity" />
        <altmember cref="F:System.Single.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (TimeSpan value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.TimeSpan value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As TimeSpan) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(TimeSpan value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8efc0-392">変換する値。</span><span class="sxs-lookup"><span data-stu-id="8efc0-392">The value to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-393"><see cref="T:System.TimeSpan" /> を <see cref="T:System.String" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-393">Converts the <see cref="T:System.TimeSpan" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8efc0-394"><see langword="TimeSpan" /> の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="8efc0-394">A string representation of the <see langword="TimeSpan" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UShort) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8efc0-395">変換する値。</span><span class="sxs-lookup"><span data-stu-id="8efc0-395">The value to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-396"><see cref="T:System.UInt16" /> を <see cref="T:System.String" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-396">Converts the <see cref="T:System.UInt16" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8efc0-397"><see langword="UInt16" /> の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="8efc0-397">A string representation of the <see langword="UInt16" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UInteger) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8efc0-398">変換する値。</span><span class="sxs-lookup"><span data-stu-id="8efc0-398">The value to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-399"><see cref="T:System.UInt32" /> を <see cref="T:System.String" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-399">Converts the <see cref="T:System.UInt32" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8efc0-400"><see langword="UInt32" /> の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="8efc0-400">A string representation of the <see langword="UInt32" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As ULong) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8efc0-401">変換する値。</span><span class="sxs-lookup"><span data-stu-id="8efc0-401">The value to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-402"><see cref="T:System.UInt64" /> を <see cref="T:System.String" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-402">Converts the <see cref="T:System.UInt64" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8efc0-403"><see langword="UInt64" /> の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="8efc0-403">A string representation of the <see langword="UInt64" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTime value, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTime value, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.DateTime,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTime, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTime value, System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8efc0-404">変換する値。</span><span class="sxs-lookup"><span data-stu-id="8efc0-404">The value to convert.</span></span></param>
        <param name="format"><span data-ttu-id="8efc0-405">変換後の文字列の表示方法を定義する形式構造。</span><span class="sxs-lookup"><span data-stu-id="8efc0-405">The format structure that defines how to display the converted string.</span></span> <span data-ttu-id="8efc0-406">有効な形式には、"yyyy-MM-ddTHH:mm:sszzzzzz" およびそのサブセットが含まれます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-406">Valid formats include "yyyy-MM-ddTHH:mm:sszzzzzz" and its subsets.</span></span></param>
        <summary><span data-ttu-id="8efc0-407"><see cref="T:System.DateTime" /> を <see cref="T:System.String" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-407">Converts the <see cref="T:System.DateTime" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8efc0-408">指定した形式での <see langword="DateTime" /> の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="8efc0-408">A string representation of the <see langword="DateTime" /> in the specified format.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8efc0-409">次の例では、データ型を文字列に変換し、し、情報をコンソールに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-409">The following example, converts data types to string and then writes the information out to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTime value, System.Xml.XmlDateTimeSerializationMode dateTimeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTime value, valuetype System.Xml.XmlDateTimeSerializationMode dateTimeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTime, dateTimeOption As XmlDateTimeSerializationMode) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTime value, System::Xml::XmlDateTimeSerializationMode dateTimeOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
        <Parameter Name="dateTimeOption" Type="System.Xml.XmlDateTimeSerializationMode" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8efc0-410">変換する <see cref="T:System.DateTime" /> 値。</span><span class="sxs-lookup"><span data-stu-id="8efc0-410">The <see cref="T:System.DateTime" /> value to convert.</span></span></param>
        <param name="dateTimeOption"><span data-ttu-id="8efc0-411"><see cref="T:System.DateTime" /> 値を処理する方法を指定する <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="8efc0-411">One of the <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> values that specify how to treat the <see cref="T:System.DateTime" /> value.</span></span></param>
        <summary><span data-ttu-id="8efc0-412">指定された <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> を使用して、<see cref="T:System.DateTime" /> を <see cref="T:System.String" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-412">Converts the <see cref="T:System.DateTime" /> to a <see cref="T:System.String" /> using the <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> specified.</span></span></summary>
        <returns><span data-ttu-id="8efc0-413"><see cref="T:System.DateTime" /> と等価の <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-413">A <see cref="T:System.String" /> equivalent of the <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8efc0-414"><paramref name="dateTimeOption" /> 値が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-414">The <paramref name="dateTimeOption" /> value is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8efc0-415"><paramref name="value" /> または <paramref name="dateTimeOption" /> の値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-415">The <paramref name="value" /> or <paramref name="dateTimeOption" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTimeOffset value, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTimeOffset value, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTimeOffset, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTimeOffset value, System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8efc0-416">変換される <see cref="T:System.DateTimeOffset" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-416">The <see cref="T:System.DateTimeOffset" /> to be converted.</span></span></param>
        <param name="format"><span data-ttu-id="8efc0-417">変換後の <c>s</c> の形式。</span><span class="sxs-lookup"><span data-stu-id="8efc0-417">The format to which <c>s</c> is converted.</span></span> <span data-ttu-id="8efc0-418">フォーマット パラメーターには、W3C 勧告の XML dateTime 型の任意のサブセットを指定できます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-418">The format parameter can be any subset of the W3C Recommendation for the XML dateTime type.</span></span> <span data-ttu-id="8efc0-419">(詳細については http://www.w3.org/TR/xmlschema-2/#dateTime.) を参照)。</span><span class="sxs-lookup"><span data-stu-id="8efc0-419">(For more information see http://www.w3.org/TR/xmlschema-2/#dateTime.)</span></span></param>
        <summary><span data-ttu-id="8efc0-420">指定した <see cref="T:System.DateTimeOffset" /> を指定した形式の <see cref="T:System.String" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-420">Converts the supplied <see cref="T:System.DateTimeOffset" /> to a <see cref="T:System.String" /> in the specified format.</span></span></summary>
        <returns><span data-ttu-id="8efc0-421">指定した <see cref="T:System.DateTimeOffset" /> の指定した形式での <see cref="T:System.String" /> 表現。</span><span class="sxs-lookup"><span data-stu-id="8efc0-421">A <see cref="T:System.String" /> representation in the specified format of the supplied <see cref="T:System.DateTimeOffset" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8efc0-422">次の例では、変換、<xref:System.DateTimeOffset>を現在の時刻の表現、<xref:System.String>指定された形式でします。</span><span class="sxs-lookup"><span data-stu-id="8efc0-422">The following example converts a <xref:System.DateTimeOffset> representation of the current time to a <xref:System.String> in the specified format.</span></span>  
  
 [!code-csharp[XmlConvert_ToString_DTO_Format#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert_ToString_DTO_Format/CS/XmlConvert_ToString_DTO_Format.cs#1)]
 [!code-vb[XmlConvert_ToString_DTO_Format#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert_ToString_DTO_Format/VB/XmlConvert_ToString_DTO_Format.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTimeSpan">
      <MemberSignature Language="C#" Value="public static TimeSpan ToTimeSpan (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ToTimeSpan(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToTimeSpan(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToTimeSpan (s As String) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan ToTimeSpan(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8efc0-423">変換する文字列。</span><span class="sxs-lookup"><span data-stu-id="8efc0-423">The string to convert.</span></span> <span data-ttu-id="8efc0-424">文字列の形式は、W3C『XML Schema Part 2: Datatypes』の期間に関する勧告に準拠している必要があります。</span><span class="sxs-lookup"><span data-stu-id="8efc0-424">The string format must conform to the W3C XML Schema Part 2: Datatypes recommendation for duration.</span></span></param>
        <summary><span data-ttu-id="8efc0-425"><see cref="T:System.String" /> を等価の <see cref="T:System.TimeSpan" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-425">Converts the <see cref="T:System.String" /> to a <see cref="T:System.TimeSpan" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8efc0-426">文字列と等価の <see langword="TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-426">A <see langword="TimeSpan" /> equivalent of the string.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8efc0-427"><paramref name="s" /> が <see langword="TimeSpan" /> 値を表す正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-427"><paramref name="s" /> is not in correct format to represent a <see langword="TimeSpan" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToUInt16(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (s As String) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8efc0-428">変換する文字列。</span><span class="sxs-lookup"><span data-stu-id="8efc0-428">The string to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-429"><see cref="T:System.String" /> を等価の <see cref="T:System.UInt16" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-429">Converts the <see cref="T:System.String" /> to a <see cref="T:System.UInt16" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8efc0-430">文字列と等価の <see langword="UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-430">A <see langword="UInt16" /> equivalent of the string.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8efc0-431"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-431"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8efc0-432"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-432"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="8efc0-433"><paramref name="s" /> が <see cref="F:System.UInt16.MinValue" /> 未満の数値か、<see cref="F:System.UInt16.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="8efc0-433"><paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToUInt32(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (s As String) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8efc0-434">変換する文字列。</span><span class="sxs-lookup"><span data-stu-id="8efc0-434">The string to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-435"><see cref="T:System.String" /> を等価の <see cref="T:System.UInt32" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-435">Converts the <see cref="T:System.String" /> to a <see cref="T:System.UInt32" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8efc0-436">文字列と等価の <see langword="UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-436">A <see langword="UInt32" /> equivalent of the string.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8efc0-437"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-437"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8efc0-438"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-438"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="8efc0-439"><paramref name="s" /> が <see cref="F:System.UInt32.MinValue" /> 未満の数値か、<see cref="F:System.UInt32.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="8efc0-439"><paramref name="s" /> represents a number less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToUInt64(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (s As String) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8efc0-440">変換する文字列。</span><span class="sxs-lookup"><span data-stu-id="8efc0-440">The string to convert.</span></span></param>
        <summary><span data-ttu-id="8efc0-441"><see cref="T:System.String" /> を等価の <see cref="T:System.UInt64" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-441">Converts the <see cref="T:System.String" /> to a <see cref="T:System.UInt64" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8efc0-442">文字列と等価の <see langword="UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-442">A <see langword="UInt64" /> equivalent of the string.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8efc0-443"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-443"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8efc0-444"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-444"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="8efc0-445"><paramref name="s" /> が <see cref="F:System.UInt64.MinValue" /> 未満の数値か、<see cref="F:System.UInt64.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="8efc0-445"><paramref name="s" /> represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyName">
      <MemberSignature Language="C#" Value="public static string VerifyName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string VerifyName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.VerifyName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyName (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VerifyName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8efc0-446">検証対象となる名前。</span><span class="sxs-lookup"><span data-stu-id="8efc0-446">The name to verify.</span></span></param>
        <summary><span data-ttu-id="8efc0-447">W3C 勧告『Extended Markup Language』に照らし合わせて、名前が有効な名前であることを検証します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-447">Verifies that the name is a valid name according to the W3C Extended Markup Language recommendation.</span></span></summary>
        <returns><span data-ttu-id="8efc0-448">有効な XML 名の場合は、その名前。</span><span class="sxs-lookup"><span data-stu-id="8efc0-448">The name, if it is a valid XML name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8efc0-449">このメソッドを使用できます、<xref:System.Xml.XmlWriter>クラスは次のようにします。</span><span class="sxs-lookup"><span data-stu-id="8efc0-449">This method can be used with the <xref:System.Xml.XmlWriter> class in the following manner.</span></span>  
  
```csharp  
try{  
  writer.WriteStartElement(XmlConvert.VerifyName("item"),"bar");  
}  
catch(Exception e)  
{  
  Console.WriteLine("error");  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="8efc0-450">次の例では、`VerifyName`要素名を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-450">The following example uses the `VerifyName` method to write an element name.</span></span>  
  
 [!code-cpp[XmlConvert.VerifyName#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlConvert.VerifyName/CPP/verifyname.cpp#1)]
 [!code-csharp[XmlConvert.VerifyName#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert.VerifyName/CS/verifyname.cs#1)]
 [!code-vb[XmlConvert.VerifyName#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert.VerifyName/VB/verifyname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8efc0-451"><paramref name="name" /> が有効な XML 名ではありません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-451"><paramref name="name" /> is not a valid XML name.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8efc0-452"><paramref name="name" /> が <see langword="null" /> または String.Empty です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-452"><paramref name="name" /> is <see langword="null" /> or String.Empty.</span></span></exception>
        <altmember cref="M:System.Xml.XmlConvert.VerifyNCName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="VerifyNCName">
      <MemberSignature Language="C#" Value="public static string VerifyNCName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string VerifyNCName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.VerifyNCName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyNCName (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VerifyNCName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8efc0-453">検証対象となる名前。</span><span class="sxs-lookup"><span data-stu-id="8efc0-453">The name to verify.</span></span></param>
        <summary><span data-ttu-id="8efc0-454">W3C 勧告『Extended Markup Language』に照らし合わせて、名前が有効な <see langword="NCName" /> であることを検証します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-454">Verifies that the name is a valid <see langword="NCName" /> according to the W3C Extended Markup Language recommendation.</span></span> <span data-ttu-id="8efc0-455"><see langword="NCName" /> は、コロンを入れることができない名前です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-455">An <see langword="NCName" /> is a name that cannot contain a colon.</span></span></summary>
        <returns><span data-ttu-id="8efc0-456">有効な NCName の場合は、その名前。</span><span class="sxs-lookup"><span data-stu-id="8efc0-456">The name, if it is a valid NCName.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8efc0-457"><paramref name="name" /> は、<see langword="null" /> または <c>String.Empty</c> です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-457"><paramref name="name" /> is <see langword="null" /> or <c>String.Empty</c>.</span></span></exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="8efc0-458"><paramref name="name" /> はコロンが含まれていない有効な名前ではありません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-458"><paramref name="name" /> is not a valid non-colon name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyNMTOKEN">
      <MemberSignature Language="C#" Value="public static string VerifyNMTOKEN (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string VerifyNMTOKEN(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyNMTOKEN (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VerifyNMTOKEN(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8efc0-459">検証する文字列。</span><span class="sxs-lookup"><span data-stu-id="8efc0-459">The string you wish to verify.</span></span></param>
        <summary><span data-ttu-id="8efc0-460">W3C 勧告『XML Schema Part 2: Datatypes』に照らし合わせて、文字列が有効な NMTOKEN であることを検証します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-460">Verifies that the string is a valid NMTOKEN according to the W3C XML Schema Part2: Datatypes recommendation</span></span></summary>
        <returns><span data-ttu-id="8efc0-461">有効な NMTOKEN の場合は、名前トークン。</span><span class="sxs-lookup"><span data-stu-id="8efc0-461">The name token, if it is a valid NMTOKEN.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8efc0-462">このメソッドは、名前のトークンが有効な NMTOKEN の適切な構文を従うことを確認します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-462">This method ensures that the name token follows the proper syntax for a valid NMTOKEN.</span></span> <span data-ttu-id="8efc0-463">次のように使用できます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-463">It can be used in the following manner:</span></span>  
  
```csharp  
try {  
  writer.WriteStartElement(XmlConvert.VerifyNMTOKEN("abc"),"book");  
}  
catch(Exception e) {  
  Console.WriteLine("error");  
}  
```  
  
 <span data-ttu-id="8efc0-464">NMTOKEN データ型の詳細については、次を参照してください。http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/#NMTOKENです。</span><span class="sxs-lookup"><span data-stu-id="8efc0-464">For more information on the NMTOKEN data type, see http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/#NMTOKEN.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="8efc0-465">文字列が、有効な名前トークンではありません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-465">The string is not a valid name token.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8efc0-466"><paramref name="name" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-466"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyPublicId">
      <MemberSignature Language="C#" Value="public static string VerifyPublicId (string publicId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string VerifyPublicId(string publicId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.VerifyPublicId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyPublicId (publicId As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VerifyPublicId(System::String ^ publicId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="publicId">
          <span data-ttu-id="8efc0-467">検証対象の識別子が格納されている <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-467"><see cref="T:System.String" /> that contains the id to validate.</span></span></param>
        <summary><span data-ttu-id="8efc0-468">文字列引数のすべての文字が有効な公開識別子の文字の場合、渡された文字列インスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-468">Returns the passed in string instance if all the characters in the string argument are valid public id characters.</span></span></summary>
        <returns><span data-ttu-id="8efc0-469">引数のすべての文字が有効な公開識別子の文字の場合、渡された文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-469">Returns the passed-in string if all the characters in the argument are valid public id characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8efc0-470">渡された引数値以外の値は返されません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-470">No other values than the passed in argument should be returned.</span></span> <span data-ttu-id="8efc0-471">パブリック id に対して有効な文字は変わりません XML エディション間でので`XmlVersion`オーバー ロードが必要です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-471">The characters valid for public id do not vary between XML editions, so no `XmlVersion` overload is required.</span></span>  
  
 <span data-ttu-id="8efc0-472">参照してください[XML 1.0 仕様の (第 4 版)](http://go.microsoft.com/fwlink/?LinkID=147985)実稼働環境 [13]`PublidChar`許可されている文字の詳細</span><span class="sxs-lookup"><span data-stu-id="8efc0-472">See [XML 1.0 spec (fourth edition)](http://go.microsoft.com/fwlink/?LinkID=147985) production [13] `PublidChar` for details on the allowed characters</span></span>  
  
 <span data-ttu-id="8efc0-473">パラメーターが null の場合、`ArgumentNullException`がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-473">If the parameter is null, an `ArgumentNullException` will be thrown.</span></span> <span data-ttu-id="8efc0-474">文字が有効な公開識別子の文字ではない場合、`XmlException`で見つかった最初の無効な文字に関する情報がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-474">If any of the characters are not valid public id characters, an `XmlException` is thrown with information about the first invalid character encountered.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyTOKEN">
      <MemberSignature Language="C#" Value="public static string VerifyTOKEN (string token);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string VerifyTOKEN(string token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.VerifyTOKEN(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyTOKEN (token As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VerifyTOKEN(System::String ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="8efc0-475">検証する文字列値。</span><span class="sxs-lookup"><span data-stu-id="8efc0-475">The string value you wish to verify.</span></span></param>
        <summary><span data-ttu-id="8efc0-476">W3C 勧告『XML Schema Part 2: Datatypes』に照らし合わせて、文字列が有効なトークンであることを検証します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-476">Verifies that the string is a valid token according to the W3C XML Schema Part2: Datatypes recommendation.</span></span></summary>
        <returns><span data-ttu-id="8efc0-477">有効なトークンの場合は、トークン。</span><span class="sxs-lookup"><span data-stu-id="8efc0-477">The token, if it is a valid token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8efc0-478">このメソッドは、名前のトークンが有効なトークンの正しい構文に従うことを確認します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-478">This method ensures that the name token follows the proper syntax for a valid token.</span></span> <span data-ttu-id="8efc0-479">次のように使用できます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-479">It can be used in the following manner:</span></span>  
  
```csharp  
try {  
  writer.WriteStartElement(XmlConvert.VerifyTOKEN("abc"),"book");  
}  
catch(Exception e) {  
  Console.WriteLine("error");  
}  
```  
  
 <span data-ttu-id="8efc0-480">トークンの詳細については、次を参照してください。 [ http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/#token](http://go.microsoft.com/fwlink/?LinkId=103183)です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-480">For more information on tokens, see [http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/#token](http://go.microsoft.com/fwlink/?LinkId=103183).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="8efc0-481">文字列値が、有効なトークンではありません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-481">The string value is not a valid token.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyWhitespace">
      <MemberSignature Language="C#" Value="public static string VerifyWhitespace (string content);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string VerifyWhitespace(string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.VerifyWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyWhitespace (content As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VerifyWhitespace(System::String ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content">
          <span data-ttu-id="8efc0-482">検証する <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-482"><see cref="T:System.String" /> to verify.</span></span></param>
        <summary><span data-ttu-id="8efc0-483">文字列引数のすべての文字が有効な空白文字の場合、渡された文字列インスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-483">Returns the passed-in string instance if all the characters in the string argument are valid whitespace characters.</span></span></summary>
        <returns><span data-ttu-id="8efc0-484">文字列引数のすべての文字が有効な空白文字の場合は渡された文字列インスタンスを返し、それ以外の場合は <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="8efc0-484">Returns the passed-in string instance if all the characters in the string argument are valid whitespace characters, otherwise <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8efc0-485">渡された引数値以外の値は返されません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-485">No other values than the passed in argument should be returned.</span></span> <span data-ttu-id="8efc0-486">XML エディション間で xml バージョンのオーバー ロードは必要ありませんので、無効な文字が空白が異なりません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-486">The characters that are valid for whitespace do not vary between XML editions, so no xml version overload is required.</span></span>  
  
 <span data-ttu-id="8efc0-487">参照してください[XML 1.0 仕様の (第 4 版)](http://go.microsoft.com/fwlink/?LinkID=147985)の詳細については、使用できる文字には、実稼働環境 [3] S。</span><span class="sxs-lookup"><span data-stu-id="8efc0-487">See [XML 1.0 spec (fourth edition)](http://go.microsoft.com/fwlink/?LinkID=147985) production [3] S for details on the allowed characters.</span></span>  
  
 <span data-ttu-id="8efc0-488">パラメーターが null の場合、`ArgumentNullException`がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-488">If the parameter is null, an `ArgumentNullException` will be thrown.</span></span>  
  
 <span data-ttu-id="8efc0-489">文字が有効な空白文字ではない場合、`XmlException`で見つかった最初の無効な文字に関する情報がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-489">If any of the characters are not valid whitespace characters, an `XmlException` is thrown with information about the first invalid character encountered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8efc0-490">次の例では、<xref:System.Xml.XmlConvert.VerifyWhitespace%2A>開始要素に割り当てられた値に無効な文字の存在を検出する方法です。</span><span class="sxs-lookup"><span data-stu-id="8efc0-490">The following example uses the <xref:System.Xml.XmlConvert.VerifyWhitespace%2A> method to detect the presence of an invalid character in a value assigned to the start element.</span></span>  
  
 [!code-csharp[XmlConvert.NewVerify#5](~/samples/snippets/csharp/VS_Snippets_Data/xmlconvert.newverify/cs/xmlconvertnewverify.cs#5)]
 [!code-vb[XmlConvert.NewVerify#5](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlconvert.newverify/vb/xmlconvertnewverify.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyXmlChars">
      <MemberSignature Language="C#" Value="public static string VerifyXmlChars (string content);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string VerifyXmlChars(string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.VerifyXmlChars(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyXmlChars (content As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VerifyXmlChars(System::String ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content">
          <span data-ttu-id="8efc0-491">検証対象の文字が格納されている <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="8efc0-491"><see cref="T:System.String" /> that contains characters to verify.</span></span></param>
        <summary><span data-ttu-id="8efc0-492">文字列引数の中にあるすべての文字とサロゲート ペア文字が有効な XML 文字である場合は、渡された文字列が返されます。それ以外の場合は、見つかった最初の無効な文字に関する情報を含む <see langword="XmlException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-492">Returns the passed-in string if all the characters and surrogate pair characters in the string argument are valid XML characters, otherwise an <see langword="XmlException" /> is thrown with information on the first invalid character encountered.</span></span></summary>
        <returns><span data-ttu-id="8efc0-493">文字列引数の中にあるすべての文字とサロゲート ペア文字が有効な XML 文字である場合は、渡された文字列が返されます。それ以外の場合は、見つかった最初の無効な文字に関する情報を含む <see langword="XmlException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-493">Returns the passed-in string if all the characters and surrogate-pair characters in the string argument are valid XML characters, otherwise an <see langword="XmlException" /> is thrown with information on the first invalid character encountered.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8efc0-494">渡された引数値以外の値は返されません。</span><span class="sxs-lookup"><span data-stu-id="8efc0-494">No other values than the passed in argument should be returned.</span></span> <span data-ttu-id="8efc0-495">参照してください[XML 1.0 仕様の (第 4 版)](http://go.microsoft.com/fwlink/?LinkID=147985) [2] を実稼働`Char`の詳細については、許可されている文字。</span><span class="sxs-lookup"><span data-stu-id="8efc0-495">See [XML 1.0 spec (fourth edition)](http://go.microsoft.com/fwlink/?LinkID=147985) production [2] `Char` for details on the allowed characters.</span></span>  
  
 <span data-ttu-id="8efc0-496">パラメーターが null の場合、`ArgumentNullException`がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-496">If the parameter is null, an `ArgumentNullException` will be thrown.</span></span> <span data-ttu-id="8efc0-497">文字が有効な xml 文字ではない場合、`XmlException`で見つかった最初の無効な文字に関する情報がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8efc0-497">If any of the characters are not valid xml characters, an `XmlException` is thrown with information on the first invalid character encountered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8efc0-498">次の例では、<xref:System.Xml.XmlConvert.VerifyXmlChars%2A>開始要素に無効な文字を検出するために使用されるメソッド。</span><span class="sxs-lookup"><span data-stu-id="8efc0-498">The following example uses the <xref:System.Xml.XmlConvert.VerifyXmlChars%2A> method used to detect an illegal character in the start element.</span></span>  
  
 [!code-csharp[XmlConvert.NewVerify#3](~/samples/snippets/csharp/VS_Snippets_Data/xmlconvert.newverify/cs/xmlconvertnewverify.cs#3)]
 [!code-vb[XmlConvert.NewVerify#3](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlconvert.newverify/vb/xmlconvertnewverify.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>