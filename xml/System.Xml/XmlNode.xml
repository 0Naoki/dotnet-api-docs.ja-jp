<Type Name="XmlNode" FullName="System.Xml.XmlNode">
  <TypeSignature Language="C#" Value="public abstract class XmlNode : ICloneable, System.Collections.IEnumerable, System.Xml.XPath.IXPathNavigable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlNode extends System.Object implements class System.Collections.IEnumerable, class System.ICloneable, class System.Xml.XPath.IXPathNavigable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlNode" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlNode&#xA;Implements ICloneable, IEnumerable, IXPathNavigable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNode abstract : ICloneable, System::Collections::IEnumerable, System::Xml::XPath::IXPathNavigable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlDocument</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.XPath.IXPathNavigable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{debuggerDisplayProxy}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3965b-101">XML ドキュメント内の単一のノードを表します。</span><span class="sxs-lookup"><span data-stu-id="3965b-101">Represents a single node in the XML document.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-102">このクラスは、W3C ドキュメント オブジェクト モデル (DOM) Level 1 Core および DOM Level 2 Core を実装します。</span><span class="sxs-lookup"><span data-stu-id="3965b-102">This class implements the W3C Document Object Model (DOM) Level 1 Core and the Core DOM Level 2.</span></span> <span data-ttu-id="3965b-103">DOM は XML ドキュメントのメモリ内 (キャッシュ) ツリー表現です。</span><span class="sxs-lookup"><span data-stu-id="3965b-103">The DOM is an in-memory (cache) tree representation of an XML document.</span></span> <span data-ttu-id="3965b-104">`XmlNode` DOM の .NET の実装で基底クラスには</span><span class="sxs-lookup"><span data-stu-id="3965b-104">`XmlNode` is the base class in the .NET implementation of the DOM.</span></span> <span data-ttu-id="3965b-105">XPath の選択をサポートし、編集機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="3965b-105">It supports XPath selections and provides editing capabilities.</span></span> <span data-ttu-id="3965b-106"><xref:System.Xml.XmlDocument>クラスを拡張`XmlNode`XML ドキュメントを表します。</span><span class="sxs-lookup"><span data-stu-id="3965b-106">The <xref:System.Xml.XmlDocument> class extends `XmlNode` and represents an XML document.</span></span> <span data-ttu-id="3965b-107">使用することができます`XmlDocument`を読み込み、XML データを保存します。</span><span class="sxs-lookup"><span data-stu-id="3965b-107">You can use `XmlDocument` to load and save XML data.</span></span> <span data-ttu-id="3965b-108">ノード作成のメソッドも含まれています。</span><span class="sxs-lookup"><span data-stu-id="3965b-108">It also includes methods for node creation.</span></span> <span data-ttu-id="3965b-109">参照してください[XML ドキュメント オブジェクト モデル (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="3965b-109">See [XML Document Object Model (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md) for more information.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3965b-110">使用した結果として発生した例外、<xref:System.Xml.XmlNode>クラスなど、<xref:System.Xml.XmlException>クラスは、信頼されていないシナリオで公開するべきではない機密情報を含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="3965b-110">Exceptions raised as a result of using the <xref:System.Xml.XmlNode> class, such as the <xref:System.Xml.XmlException> class may contain sensitive information that should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="3965b-111">例外は、信頼されていないシナリオでは、この機密情報は公開されていないように正しく処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3965b-111">Exceptions should be properly handled so that this sensitive information is not exposed in untrusted scenarios.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xml.XmlNode.SelectNodes(System.String)" />
  </Docs>
  <Members>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode AppendChild (System.Xml.XmlNode newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode AppendChild(class System.Xml.XmlNode newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendChild (newChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ AppendChild(System::Xml::XmlNode ^ newChild);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild"><span data-ttu-id="3965b-112">追加するノード。</span><span class="sxs-lookup"><span data-stu-id="3965b-112">The node to add.</span></span> <span data-ttu-id="3965b-113">追加するノードのすべての内容が、指定した場所に移動します。</span><span class="sxs-lookup"><span data-stu-id="3965b-113">All the contents of the node to be added are moved into the specified location.</span></span></param>
        <summary><span data-ttu-id="3965b-114">このノードの子ノードのリストの末尾に、指定したノードを追加します。</span><span class="sxs-lookup"><span data-stu-id="3965b-114">Adds the specified node to the end of the list of child nodes, of this node.</span></span></summary>
        <returns><span data-ttu-id="3965b-115">追加されたノード。</span><span class="sxs-lookup"><span data-stu-id="3965b-115">The node added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-116">場合、`newChild`は、ツリーに既にには、元の位置から削除され先の位置に追加されたことができます。</span><span class="sxs-lookup"><span data-stu-id="3965b-116">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="3965b-117">ノードの挿入の詳細については、次を参照してください。 [XML ドキュメントにノードの挿入](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)です。</span><span class="sxs-lookup"><span data-stu-id="3965b-117">For more information about inserting nodes, see [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="3965b-118">挿入されるノードは、別のドキュメントから作成された場合、は、使用<xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType>を現在のドキュメントにノードをインポートします。</span><span class="sxs-lookup"><span data-stu-id="3965b-118">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="3965b-119">インポートされたノードは、現在のドキュメントに挿入できます。</span><span class="sxs-lookup"><span data-stu-id="3965b-119">The imported node can then be inserted into the current document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-120">次の例では、XML ドキュメントに新しいノードを追加します。</span><span class="sxs-lookup"><span data-stu-id="3965b-120">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.AppendChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.AppendChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.AppendChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.AppendChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.AppendChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.AppendChild Example/VB/source.vb#1)]  
  
 <span data-ttu-id="3965b-121">**出力:**</span><span class="sxs-lookup"><span data-stu-id="3965b-121">**Output:**</span></span>  
  
```  
Display the modified XML...  
<?xml version="1.0" encoding="IBM437"?>  
<book genre="novel" ISBN="1-861001-57-5">  
  <title>Pride And Prejudice</title>  
  <price>19.95</price>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3965b-122">このノードは、<paramref name="newChild" /> ノードの型の子ノードが許可されない型です。</span><span class="sxs-lookup"><span data-stu-id="3965b-122">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span></span>  
  
 <span data-ttu-id="3965b-123"><paramref name="newChild" /> がこのノードの先祖です。</span><span class="sxs-lookup"><span data-stu-id="3965b-123">The <paramref name="newChild" /> is an ancestor of this node.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3965b-124"><paramref name="newChild" /> は、このノードを作成したドキュメントとは異なるドキュメントから作成されました。</span><span class="sxs-lookup"><span data-stu-id="3965b-124">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span></span>  
  
 <span data-ttu-id="3965b-125">このノードは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="3965b-125">This node is read-only.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="3965b-126">オーバーライドする場合<see langword="AppendChild" />派生クラスでイベントが正しく、発生するために呼び出す必要があります、<see langword="AppendChild" />基底クラスのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="3965b-126">When overriding <see langword="AppendChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="AppendChild" /> method of the base class.</span></span></para>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Attributes As XmlAttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlAttributeCollection ^ Attributes { System::Xml::XmlAttributeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3965b-127">このノードの属性を格納している <see cref="T:System.Xml.XmlAttributeCollection" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="3965b-127">Gets an <see cref="T:System.Xml.XmlAttributeCollection" /> containing the attributes of this node.</span></span></summary>
        <value><span data-ttu-id="3965b-128">ノードの属性を格納している <see langword="XmlAttributeCollection" />。</span><span class="sxs-lookup"><span data-stu-id="3965b-128">An <see langword="XmlAttributeCollection" /> containing the attributes of the node.</span></span>  
  
 <span data-ttu-id="3965b-129">XmlNodeType.Element 型のノードの場合は、ノードの属性が返されます。</span><span class="sxs-lookup"><span data-stu-id="3965b-129">If the node is of type XmlNodeType.Element, the attributes of the node are returned.</span></span> <span data-ttu-id="3965b-130">それ以外の場合は、<see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="3965b-130">Otherwise, this property returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3965b-131">次の例では、XML ドキュメントに新しい属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="3965b-131">The following example adds a new attribute to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public virtual string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3965b-132">現在のノードのベース URI を取得します。</span><span class="sxs-lookup"><span data-stu-id="3965b-132">Gets the base URI of the current node.</span></span></summary>
        <value><span data-ttu-id="3965b-133">ノードの読み込み元の場所。ノードにベース URI がない場合は String.Empty。</span><span class="sxs-lookup"><span data-stu-id="3965b-133">The location from which the node was loaded or String.Empty if the node has no base URI.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-134">ネットワークに接続された XML ドキュメントでは、さまざまな W3C 標準包含メカニズムを使用して集計データのチャンクで構成され、したがって各所に由来するノードが含まれます。</span><span class="sxs-lookup"><span data-stu-id="3965b-134">A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="3965b-135">`BaseURI`でこれらのノードの出所がわかります。</span><span class="sxs-lookup"><span data-stu-id="3965b-135">The `BaseURI` tells you where these nodes came from.</span></span>  
  
 <span data-ttu-id="3965b-136">このプロパティの値は、ノードの種類によって異なります。</span><span class="sxs-lookup"><span data-stu-id="3965b-136">The value of this property varies depending on the node type.</span></span> <span data-ttu-id="3965b-137">たとえば、ドキュメント ノードがの場所を返す、<xref:System.Xml.XmlDocument>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3965b-137">For example, Document nodes return the location of the <xref:System.Xml.XmlDocument> object.</span></span> <span data-ttu-id="3965b-138">外部の EntityReference ノードの子ノードであるノードでは、エンティティ自体の場所を返します。</span><span class="sxs-lookup"><span data-stu-id="3965b-138">Nodes which are child nodes of external EntityReference nodes return the location of the entity itself.</span></span> <span data-ttu-id="3965b-139">たとえば、次の XML ドキュメントがあるとします。</span><span class="sxs-lookup"><span data-stu-id="3965b-139">For example, consider the following XML document:</span></span>  
  
```xml  
<!DOCTYPE item [  
<!ENTITY xyz SYSTEM "a/b.xml">  
]>  
<item num='123'>&xyz;</item>  
```  
  
 <span data-ttu-id="3965b-140">ここで、外部エンティティ`a/b.xml`XML テキストが含まれています:`<test>123</test>`です。</span><span class="sxs-lookup"><span data-stu-id="3965b-140">where the external entity `a/b.xml` contains the XML text: `<test>123</test>`.</span></span>  
  
 <span data-ttu-id="3965b-141">ドキュメントが読み込まれた場合http://server/mydata.xml、`BaseURI`次を返します。</span><span class="sxs-lookup"><span data-stu-id="3965b-141">If the document is loaded from http://server/mydata.xml, `BaseURI` returns the following:</span></span>  
  
|<span data-ttu-id="3965b-142">ノード型</span><span class="sxs-lookup"><span data-stu-id="3965b-142">NodeType</span></span>|<span data-ttu-id="3965b-143">name</span><span class="sxs-lookup"><span data-stu-id="3965b-143">Name</span></span>|<span data-ttu-id="3965b-144">BaseURI</span><span class="sxs-lookup"><span data-stu-id="3965b-144">BaseURI</span></span>|  
|--------------|----------|-------------|  
|<span data-ttu-id="3965b-145">属性</span><span class="sxs-lookup"><span data-stu-id="3965b-145">Attribute</span></span>|<span data-ttu-id="3965b-146">num</span><span class="sxs-lookup"><span data-stu-id="3965b-146">num</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="3965b-147">ドキュメント</span><span class="sxs-lookup"><span data-stu-id="3965b-147">Document</span></span>|<span data-ttu-id="3965b-148">#document</span><span class="sxs-lookup"><span data-stu-id="3965b-148">#document</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="3965b-149">DocumentType</span><span class="sxs-lookup"><span data-stu-id="3965b-149">DocumentType</span></span>|<span data-ttu-id="3965b-150">項目</span><span class="sxs-lookup"><span data-stu-id="3965b-150">item</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="3965b-151">エンティティ</span><span class="sxs-lookup"><span data-stu-id="3965b-151">Entity</span></span>|<span data-ttu-id="3965b-152">xyz</span><span class="sxs-lookup"><span data-stu-id="3965b-152">xyz</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="3965b-153">要素</span><span class="sxs-lookup"><span data-stu-id="3965b-153">Element</span></span>|<span data-ttu-id="3965b-154">項目</span><span class="sxs-lookup"><span data-stu-id="3965b-154">item</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="3965b-155">EntityReference</span><span class="sxs-lookup"><span data-stu-id="3965b-155">EntityReference</span></span>|<span data-ttu-id="3965b-156">xyz</span><span class="sxs-lookup"><span data-stu-id="3965b-156">xyz</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="3965b-157">要素</span><span class="sxs-lookup"><span data-stu-id="3965b-157">Element</span></span>|<span data-ttu-id="3965b-158">テスト</span><span class="sxs-lookup"><span data-stu-id="3965b-158">test</span></span>|http://server/a/b.xml|  
|<span data-ttu-id="3965b-159">テキスト</span><span class="sxs-lookup"><span data-stu-id="3965b-159">Text</span></span>|<span data-ttu-id="3965b-160">#text</span><span class="sxs-lookup"><span data-stu-id="3965b-160">#text</span></span>|http://server/a/b.xml|  
  
 <span data-ttu-id="3965b-161">`BaseURI` エンティティの検索は、境界を参照するエンティティが展開されている場合は、この情報は保持されずの位置を返すため、`XmlDocument`内のすべてのケースのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3965b-161">`BaseURI` looks for entity reference boundaries, so if entities are expanded this information is not preserved and this property returns the location of the `XmlDocument` object in all cases.</span></span>  
  
 <span data-ttu-id="3965b-162">2 番目の例として、次の XML ドキュメントを指定します。</span><span class="sxs-lookup"><span data-stu-id="3965b-162">As a second example, given the following XML document:</span></span>  
  
```xml  
<!DOCTYPE Mydata SYSTEM "http://localhost/doctype.dtd">  
<baa>&xyz;</baa>  
```  
  
 <span data-ttu-id="3965b-163">ここで、DTD ファイルには、次が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3965b-163">where the DTD file contains the following:</span></span>  
  
```  
<!ENTITY xyz <E1>My Data</E1>  
<!ELEMENT baa #PCDATA>  
<!ATTLIST baa attr1 "woof">  
```  
  
 <span data-ttu-id="3965b-164">XML ドキュメントが読み込まれた場合http://localhost/mydata.xml、`BaseURI`の各ノードは、次を返します。</span><span class="sxs-lookup"><span data-stu-id="3965b-164">If the XML document is loaded from http://localhost/mydata.xml, `BaseURI` returns the following for each of the nodes:</span></span>  
  
|<span data-ttu-id="3965b-165">ノード型</span><span class="sxs-lookup"><span data-stu-id="3965b-165">NodeType</span></span>|<span data-ttu-id="3965b-166">name</span><span class="sxs-lookup"><span data-stu-id="3965b-166">Name</span></span>|<span data-ttu-id="3965b-167">BaseURI</span><span class="sxs-lookup"><span data-stu-id="3965b-167">BaseURI</span></span>|  
|--------------|----------|-------------|  
|<span data-ttu-id="3965b-168">ドキュメント</span><span class="sxs-lookup"><span data-stu-id="3965b-168">Document</span></span>|<span data-ttu-id="3965b-169">#document</span><span class="sxs-lookup"><span data-stu-id="3965b-169">#document</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="3965b-170">DocumentType</span><span class="sxs-lookup"><span data-stu-id="3965b-170">DocumentType</span></span>|<span data-ttu-id="3965b-171">Mydata</span><span class="sxs-lookup"><span data-stu-id="3965b-171">Mydata</span></span>|http://localhost/mydata.xml<br /><br /> <span data-ttu-id="3965b-172"><xref:System.Xml.XmlDocumentType.SystemId%2A?displayProperty=nameWithType>または<xref:System.Xml.XmlDocumentType.PublicId%2A?displayProperty=nameWithType>DTD ファイルがから読み込まれたを識別するプロパティを使用できます。</span><span class="sxs-lookup"><span data-stu-id="3965b-172">The <xref:System.Xml.XmlDocumentType.SystemId%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlDocumentType.PublicId%2A?displayProperty=nameWithType> properties can be used to identify where the DTD file was loaded from.</span></span>|  
|<span data-ttu-id="3965b-173">要素</span><span class="sxs-lookup"><span data-stu-id="3965b-173">Element</span></span>|<span data-ttu-id="3965b-174">baa</span><span class="sxs-lookup"><span data-stu-id="3965b-174">baa</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="3965b-175">エンティティ</span><span class="sxs-lookup"><span data-stu-id="3965b-175">Entity</span></span>|<span data-ttu-id="3965b-176">xyz</span><span class="sxs-lookup"><span data-stu-id="3965b-176">xyz</span></span>|http://localhost/doctype.dtd|  
|<span data-ttu-id="3965b-177">EntityReference</span><span class="sxs-lookup"><span data-stu-id="3965b-177">EntityReference</span></span>|<span data-ttu-id="3965b-178">xyz</span><span class="sxs-lookup"><span data-stu-id="3965b-178">xyz</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="3965b-179">属性</span><span class="sxs-lookup"><span data-stu-id="3965b-179">Attribute</span></span>|<span data-ttu-id="3965b-180">woof</span><span class="sxs-lookup"><span data-stu-id="3965b-180">woof</span></span>|http://localhost/mydata.xml|  
  
> [!NOTE]
>  <span data-ttu-id="3965b-181">既定の属性のベース URI は、所属する要素のベース URI と同じです。</span><span class="sxs-lookup"><span data-stu-id="3965b-181">The base URI of a default attribute is the same as the base URI of the element to which they belong.</span></span>  
  
 <span data-ttu-id="3965b-182">このプロパティは、ドキュメント オブジェクト モデル (DOM) の Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="3965b-182">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildNodes">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList ChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNodeList ChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.ChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ChildNodes As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeList ^ ChildNodes { System::Xml::XmlNodeList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3965b-183">ノードのすべての子ノードを取得します。</span><span class="sxs-lookup"><span data-stu-id="3965b-183">Gets all the child nodes of the node.</span></span></summary>
        <value><span data-ttu-id="3965b-184">ノードのすべての子ノードを格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3965b-184">An object that contains all the child nodes of the node.</span></span>  
  
 <span data-ttu-id="3965b-185">子ノードがない場合、このプロパティは空の <see cref="T:System.Xml.XmlNodeList" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="3965b-185">If there are no child nodes, this property returns an empty <see cref="T:System.Xml.XmlNodeList" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-186">子ノードについては、次を参照してください、 [W3C DOM (Core) Level 1 の仕様。](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="3965b-186">For information about child nodes, see the [W3C DOM (Core) Level 1 specification](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-187">次の例では、ルート要素のすべての子ノードが表示されます。</span><span class="sxs-lookup"><span data-stu-id="3965b-187">The following example displays all the child nodes of the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3965b-188">このノードの複製を作成します。</span><span class="sxs-lookup"><span data-stu-id="3965b-188">Creates a duplicate of this node.</span></span></summary>
        <returns><span data-ttu-id="3965b-189">クローンとして作成されたノード。</span><span class="sxs-lookup"><span data-stu-id="3965b-189">The cloned node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-190">複製、<xref:System.Xml.XmlElement>すべての属性とその値を含む既定の属性を表す XML プロセッサによって生成されたコピーです。</span><span class="sxs-lookup"><span data-stu-id="3965b-190">Cloning an <xref:System.Xml.XmlElement> copies all attributes and their values, including those generated by the XML processor to represent defaulted attributes.</span></span> <span data-ttu-id="3965b-191">このメソッドを再帰的に、ノードとその下のサブツリーのクローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="3965b-191">This method recursively clones the node and the subtree underneath it.</span></span>  
  
 <span data-ttu-id="3965b-192">`Clone` 呼び出すことと同じ`CloneNode(true)`です。</span><span class="sxs-lookup"><span data-stu-id="3965b-192">`Clone` is equivalent to calling `CloneNode(true)`.</span></span>  
  
 <span data-ttu-id="3965b-193">次の表は、各固有の動作を示します<xref:System.Xml.XmlNodeType>です。</span><span class="sxs-lookup"><span data-stu-id="3965b-193">The following table describes the specific behavior for each <xref:System.Xml.XmlNodeType>.</span></span>  
  
|<span data-ttu-id="3965b-194">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="3965b-194">XmlNodeType</span></span>|<span data-ttu-id="3965b-195">複製</span><span class="sxs-lookup"><span data-stu-id="3965b-195">Clone</span></span>|  
|-----------------|-----------|  
|<span data-ttu-id="3965b-196">属性</span><span class="sxs-lookup"><span data-stu-id="3965b-196">Attribute</span></span>|<span data-ttu-id="3965b-197">子ノードを含め、属性ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-197">Clones the attribute node, including child nodes.</span></span>|  
|<span data-ttu-id="3965b-198">CData</span><span class="sxs-lookup"><span data-stu-id="3965b-198">CData</span></span>|<span data-ttu-id="3965b-199">CData ノードは、そのデータのコンテンツを含むを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-199">Clones the CData node, including its data content.</span></span>|  
|<span data-ttu-id="3965b-200">コメント</span><span class="sxs-lookup"><span data-stu-id="3965b-200">Comment</span></span>|<span data-ttu-id="3965b-201">テキスト コンテンツを含む、コメント ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-201">Clones the comment node, including its text content.</span></span>|  
|<span data-ttu-id="3965b-202">ドキュメント</span><span class="sxs-lookup"><span data-stu-id="3965b-202">Document</span></span>|<span data-ttu-id="3965b-203">子ノードを含めて、ドキュメント ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-203">Clones the document node, including any child nodes.</span></span>|  
|<span data-ttu-id="3965b-204">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="3965b-204">DocumentFragment</span></span>|<span data-ttu-id="3965b-205">子ノードを含めて、ドキュメント フラグメント ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-205">Clones the document fragment node, including any child nodes.</span></span>|  
|<span data-ttu-id="3965b-206">DocumentType</span><span class="sxs-lookup"><span data-stu-id="3965b-206">DocumentType</span></span>|<span data-ttu-id="3965b-207">ドキュメント型ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-207">Clones the document type node.</span></span>|  
|<span data-ttu-id="3965b-208">要素</span><span class="sxs-lookup"><span data-stu-id="3965b-208">Element</span></span>|<span data-ttu-id="3965b-209">要素ノード、その属性、および子ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-209">Clones the element node, its attributes, and any child nodes.</span></span>|  
|<span data-ttu-id="3965b-210">エンティティ</span><span class="sxs-lookup"><span data-stu-id="3965b-210">Entity</span></span>|<span data-ttu-id="3965b-211">エンティティ ノードのクローンは作成できません。</span><span class="sxs-lookup"><span data-stu-id="3965b-211">Entity nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="3965b-212">EntityReference</span><span class="sxs-lookup"><span data-stu-id="3965b-212">EntityReference</span></span>|<span data-ttu-id="3965b-213">エンティティ参照ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-213">Clones the entity reference node.</span></span> <span data-ttu-id="3965b-214">置換テキストは含まれません。</span><span class="sxs-lookup"><span data-stu-id="3965b-214">The replacement text is not included.</span></span>|  
|<span data-ttu-id="3965b-215">Notation</span><span class="sxs-lookup"><span data-stu-id="3965b-215">Notation</span></span>|<span data-ttu-id="3965b-216">表記ノードのクローンは作成できません。</span><span class="sxs-lookup"><span data-stu-id="3965b-216">Notation nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="3965b-217">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="3965b-217">ProcessingInstruction</span></span>|<span data-ttu-id="3965b-218">そのターゲットとデータを含む、処理命令ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-218">Clones the processing instruction node, including its target and data.</span></span>|  
|<span data-ttu-id="3965b-219">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="3965b-219">SignificantWhitespace</span></span>|<span data-ttu-id="3965b-220">データ値を含めて、有意の空白ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-220">Clones the significant white space node, including its data value.</span></span>|  
|<span data-ttu-id="3965b-221">テキスト</span><span class="sxs-lookup"><span data-stu-id="3965b-221">Text</span></span>|<span data-ttu-id="3965b-222">データ値を含めて、テキスト ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-222">Clones the text node, including its data value.</span></span>|  
|<span data-ttu-id="3965b-223">Whitespace</span><span class="sxs-lookup"><span data-stu-id="3965b-223">Whitespace</span></span>|<span data-ttu-id="3965b-224">データ値を含めて、空白ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-224">Clones the white space node, including its data value.</span></span>|  
|<span data-ttu-id="3965b-225">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="3965b-225">XmlDeclaration</span></span>|<span data-ttu-id="3965b-226">データ値を含めて、XmlDeclaration ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-226">Clones the XmlDeclaration node, including its data value.</span></span>|  
|<span data-ttu-id="3965b-227">その他のすべてのノード型。</span><span class="sxs-lookup"><span data-stu-id="3965b-227">All other node types.</span></span>|<span data-ttu-id="3965b-228">これらのノード型を複製できません。</span><span class="sxs-lookup"><span data-stu-id="3965b-228">These node types cannot be cloned.</span></span>|  
  
 <span data-ttu-id="3965b-229">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="3965b-229">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-230">次の例では、XML ドキュメントのルート ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-230">The following example clones the root node of the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.Clone Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.Clone Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.Clone Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.Clone Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.Clone Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.Clone Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNode.CloneNode(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">
          <span data-ttu-id="3965b-231">指定したノードの下にあるサブツリーのクローンを順次作成していく場合は <see langword="true" />。指定したノードだけのクローンを作成する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3965b-231"><see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</span></span></param>
        <summary><span data-ttu-id="3965b-232">派生クラスでオーバーライドされた場合は、ノードの複製を作成します。</span><span class="sxs-lookup"><span data-stu-id="3965b-232">Creates a duplicate of the node, when overridden in a derived class.</span></span></summary>
        <returns><span data-ttu-id="3965b-233">クローンとして作成されたノード。</span><span class="sxs-lookup"><span data-stu-id="3965b-233">The cloned node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-234">このメソッドは、ノードのコピー コンス トラクターとして機能します。</span><span class="sxs-lookup"><span data-stu-id="3965b-234">This method serves as a copy constructor for nodes.</span></span> <span data-ttu-id="3965b-235">複製されたノードが親を持たない (<xref:System.Xml.XmlNode.ParentNode%2A>返します`null`)。</span><span class="sxs-lookup"><span data-stu-id="3965b-235">The duplicate node has no parent (<xref:System.Xml.XmlNode.ParentNode%2A> returns `null`).</span></span>  
  
 <span data-ttu-id="3965b-236">次の表は、各固有の動作を示します<xref:System.Xml.XmlNodeType>です。</span><span class="sxs-lookup"><span data-stu-id="3965b-236">The following table describes the specific behavior for each <xref:System.Xml.XmlNodeType>.</span></span>  
  
|<span data-ttu-id="3965b-237">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="3965b-237">XmlNodeType</span></span>|<span data-ttu-id="3965b-238">CloneNode(true)</span><span class="sxs-lookup"><span data-stu-id="3965b-238">CloneNode(true)</span></span>|<span data-ttu-id="3965b-239">CloneNode(false)</span><span class="sxs-lookup"><span data-stu-id="3965b-239">CloneNode(false)</span></span>|  
|-----------------|-----------------------|------------------------|  
|<span data-ttu-id="3965b-240">属性</span><span class="sxs-lookup"><span data-stu-id="3965b-240">Attribute</span></span>|<span data-ttu-id="3965b-241">子ノードを含め、属性ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-241">Clones the attribute node, including child nodes.</span></span>|<span data-ttu-id="3965b-242">子ノードを含め、属性ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-242">Clones the attribute node, including child nodes.</span></span>|  
|<span data-ttu-id="3965b-243">CData</span><span class="sxs-lookup"><span data-stu-id="3965b-243">CData</span></span>|<span data-ttu-id="3965b-244">CData ノードは、そのデータのコンテンツを含むを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-244">Clones the CData node, including its data content.</span></span>|<span data-ttu-id="3965b-245">CData ノードは、そのデータのコンテンツを含むを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-245">Clones the CData node, including its data content.</span></span>|  
|<span data-ttu-id="3965b-246">コメント</span><span class="sxs-lookup"><span data-stu-id="3965b-246">Comment</span></span>|<span data-ttu-id="3965b-247">テキスト コンテンツを含む、コメント ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-247">Clones the comment node, including its text content.</span></span>|<span data-ttu-id="3965b-248">テキスト コンテンツを含む、コメント ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-248">Clones the comment node, including its text content.</span></span>|  
|<span data-ttu-id="3965b-249">ドキュメント</span><span class="sxs-lookup"><span data-stu-id="3965b-249">Document</span></span>|<span data-ttu-id="3965b-250">子ノードを含めて、ドキュメント ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-250">Clones the document node, including any child nodes.</span></span>|<span data-ttu-id="3965b-251">ドキュメント ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-251">Clones the document node.</span></span>|  
|<span data-ttu-id="3965b-252">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="3965b-252">DocumentFragment</span></span>|<span data-ttu-id="3965b-253">子ノードを含めて、ドキュメント フラグメント ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-253">Clones the document fragment node, including any child nodes.</span></span>|<span data-ttu-id="3965b-254">ドキュメント フラグメント ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-254">Clones the document fragment node.</span></span>|  
|<span data-ttu-id="3965b-255">DocumentType</span><span class="sxs-lookup"><span data-stu-id="3965b-255">DocumentType</span></span>|<span data-ttu-id="3965b-256">ドキュメント型ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-256">Clones the document type node.</span></span>|<span data-ttu-id="3965b-257">ドキュメント型ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-257">Clones the document type node.</span></span>|  
|<span data-ttu-id="3965b-258">要素</span><span class="sxs-lookup"><span data-stu-id="3965b-258">Element</span></span>|<span data-ttu-id="3965b-259">要素ノード、その属性、および子ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-259">Clones the element node, its attributes, and any child nodes.</span></span>|<span data-ttu-id="3965b-260">要素ノードとその属性は、既定の属性を含むクローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="3965b-260">Clones the element node and its attributes, including any default attributes.</span></span>|  
|<span data-ttu-id="3965b-261">エンティティ</span><span class="sxs-lookup"><span data-stu-id="3965b-261">Entity</span></span>|<span data-ttu-id="3965b-262">エンティティ ノードのクローンは作成できません。</span><span class="sxs-lookup"><span data-stu-id="3965b-262">Entity nodes cannot be cloned.</span></span>|<span data-ttu-id="3965b-263">エンティティ ノードのクローンは作成できません。</span><span class="sxs-lookup"><span data-stu-id="3965b-263">Entity nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="3965b-264">EntityReference</span><span class="sxs-lookup"><span data-stu-id="3965b-264">EntityReference</span></span>|<span data-ttu-id="3965b-265">エンティティ参照ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-265">Clones the entity reference node.</span></span> <span data-ttu-id="3965b-266">置換テキストは含まれません。</span><span class="sxs-lookup"><span data-stu-id="3965b-266">The replacement text is not included.</span></span>|<span data-ttu-id="3965b-267">エンティティ参照ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-267">Clones the entity reference node.</span></span> <span data-ttu-id="3965b-268">置換テキストは含まれません。</span><span class="sxs-lookup"><span data-stu-id="3965b-268">The replacement text is not included.</span></span>|  
|<span data-ttu-id="3965b-269">Notation</span><span class="sxs-lookup"><span data-stu-id="3965b-269">Notation</span></span>|<span data-ttu-id="3965b-270">表記ノードのクローンは作成できません。</span><span class="sxs-lookup"><span data-stu-id="3965b-270">Notation nodes cannot be cloned.</span></span>|<span data-ttu-id="3965b-271">表記ノードのクローンは作成できません。</span><span class="sxs-lookup"><span data-stu-id="3965b-271">Notation nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="3965b-272">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="3965b-272">ProcessingInstruction</span></span>|<span data-ttu-id="3965b-273">そのターゲットとデータを含む、処理命令ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-273">Clones the processing instruction node, including its target and data.</span></span>|<span data-ttu-id="3965b-274">そのターゲットとデータを含む、処理命令ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-274">Clones the processing instruction node, including its target and data.</span></span>|  
|<span data-ttu-id="3965b-275">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="3965b-275">SignificantWhitespace</span></span>|<span data-ttu-id="3965b-276">データ値を含めて、有意の空白ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-276">Clones the significant white space node, including its data value.</span></span>|<span data-ttu-id="3965b-277">データ値を含めて、有意の空白ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-277">Clones the significant white space node, including its data value.</span></span>|  
|<span data-ttu-id="3965b-278">テキスト</span><span class="sxs-lookup"><span data-stu-id="3965b-278">Text</span></span>|<span data-ttu-id="3965b-279">データ値を含めて、テキスト ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-279">Clones the text node, including its data value.</span></span>|<span data-ttu-id="3965b-280">データ値を含めて、テキスト ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-280">Clones the text node, including its data value.</span></span>|  
|<span data-ttu-id="3965b-281">Whitespace</span><span class="sxs-lookup"><span data-stu-id="3965b-281">Whitespace</span></span>|<span data-ttu-id="3965b-282">データ値を含めて、空白ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-282">Clones the white space node, including its data value.</span></span>|<span data-ttu-id="3965b-283">データ値を含めて、空白ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-283">Clones the white space node, including its data value.</span></span>|  
|<span data-ttu-id="3965b-284">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="3965b-284">XmlDeclaration</span></span>|<span data-ttu-id="3965b-285">データ値を含めて、XmlDeclaration ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-285">Clones the XmlDeclaration node, including its data value.</span></span>|<span data-ttu-id="3965b-286">データ値を含めて、XmlDeclaration ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="3965b-286">Clones the XmlDeclaration node, including its data value.</span></span>|  
|<span data-ttu-id="3965b-287">その他のすべてのノード型。</span><span class="sxs-lookup"><span data-stu-id="3965b-287">All other node types.</span></span>|<span data-ttu-id="3965b-288">これらのノード型を複製できません。</span><span class="sxs-lookup"><span data-stu-id="3965b-288">These node types cannot be cloned.</span></span>|<span data-ttu-id="3965b-289">これらのノード型を複製できません。</span><span class="sxs-lookup"><span data-stu-id="3965b-289">These node types cannot be cloned.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3965b-290">次の例は、deep および shallow クローンの違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="3965b-290">The following example shows the difference between a deep and shallow clone.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.CloneNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.CloneNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.CloneNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.CloneNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.CloneNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.CloneNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3965b-291">クローンを作成できないノード型でこのメソッドを呼び出しています。</span><span class="sxs-lookup"><span data-stu-id="3965b-291">Calling this method on a node type that cannot be cloned.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNavigator CreateNavigator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.CreateNavigator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNavigator () As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNavigator ^ CreateNavigator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.XPath.IXPathNavigable.CreateNavigator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3965b-292">このオブジェクト内を移動するための <see cref="T:System.Xml.XPath.XPathNavigator" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="3965b-292">Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> for navigating this object.</span></span></summary>
        <returns><span data-ttu-id="3965b-293">ノードに移動するために使用される <see langword="XPathNavigator" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3965b-293">An <see langword="XPathNavigator" /> object used to navigate the node.</span></span> <span data-ttu-id="3965b-294"><see langword="XPathNavigator" /> は、メソッドの呼び出し元のノードに配置されます。</span><span class="sxs-lookup"><span data-stu-id="3965b-294">The <see langword="XPathNavigator" /> is positioned on the node from which the method was called.</span></span> <span data-ttu-id="3965b-295">ドキュメントのルートには配置されません。</span><span class="sxs-lookup"><span data-stu-id="3965b-295">It is not positioned on the root of the document.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-296">`XPathNavigator`データへの読み取り専用で、ランダム アクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="3965b-296">The `XPathNavigator` provides read-only, random access to data.</span></span> <span data-ttu-id="3965b-297">XSLT 変換用に最適化された、利点がパフォーマンスに入力メカニズムとして使用する場合、<xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3965b-297">Because it is optimized for XSLT transformations, it provides performance benefits when used as an input mechanism to the <xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="3965b-298">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="3965b-298">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-299">次の例では、ロードし、XSLT 変換を実行する前に XML ドキュメントを編集します。</span><span class="sxs-lookup"><span data-stu-id="3965b-299">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Xsl.XslTransform" />
      </Docs>
    </Member>
    <Member MemberName="FirstChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode FirstChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode FirstChild" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.FirstChild" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FirstChild As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ FirstChild { System::Xml::XmlNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3965b-300">ノードの最初の子を取得します。</span><span class="sxs-lookup"><span data-stu-id="3965b-300">Gets the first child of the node.</span></span></summary>
        <value><span data-ttu-id="3965b-301">ノードの最初の子。</span><span class="sxs-lookup"><span data-stu-id="3965b-301">The first child of the node.</span></span> <span data-ttu-id="3965b-302">そのようなノードがない場合は、<see langword="null" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="3965b-302">If there is no such node, <see langword="null" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-303">子ノードについては、次を参照してください、 [W3C DOM (Core) Level 1 の仕様。](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="3965b-303">For information about child nodes, see the [W3C DOM (Core) Level 1 specification](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-304">次の例では、タイトル要素を表示します。</span><span class="sxs-lookup"><span data-stu-id="3965b-304">The following example displays the title element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.FirstChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.FirstChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.FirstChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.FirstChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.FirstChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.FirstChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3965b-305">現在のノード内の子ノードを反復処理する列挙子を取得します。</span><span class="sxs-lookup"><span data-stu-id="3965b-305">Get an enumerator that iterates through the child nodes in the current node.</span></span></summary>
        <returns><span data-ttu-id="3965b-306">現在のノードの子ノードを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3965b-306">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the child nodes in the current node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-307">"For each"スタイルのサポートを提供内のノードを反復する、`XmlNode`です。</span><span class="sxs-lookup"><span data-stu-id="3965b-307">Provides support for the "for each" style iteration over the nodes in the `XmlNode`.</span></span>  
  
 <span data-ttu-id="3965b-308">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="3965b-308">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-309">次の例では、XML ドキュメントのすべてのブックを表示します。</span><span class="sxs-lookup"><span data-stu-id="3965b-309">The following example displays all the books in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/VB/source.vb#1)]  
  
 <span data-ttu-id="3965b-310">この例では、`books.xml`の入力として、します。</span><span class="sxs-lookup"><span data-stu-id="3965b-310">The example uses the file, `books.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.GetEnumerator Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamespaceOfPrefix">
      <MemberSignature Language="C#" Value="public virtual string GetNamespaceOfPrefix (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetNamespaceOfPrefix(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespaceOfPrefix (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetNamespaceOfPrefix(System::String ^ prefix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="3965b-311">検索対象の名前空間 URI を持つプレフィックス。</span><span class="sxs-lookup"><span data-stu-id="3965b-311">The prefix whose namespace URI you want to find.</span></span></param>
        <summary><span data-ttu-id="3965b-312">現在のノードのスコープ内にある指定したプレフィックスに対する最も近い **xmlns** 宣言を検索し、宣言内の名前空間 URI を返します。</span><span class="sxs-lookup"><span data-stu-id="3965b-312">Looks up the closest **xmlns** declaration for the given prefix that is in scope for the current node and returns the namespace URI in the declaration.</span></span></summary>
        <returns><span data-ttu-id="3965b-313">指定したプリフィックスの名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="3965b-313">The namespace URI of the specified prefix.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-314">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="3965b-314">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-315">次の例では、XML ドキュメントに新しい属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="3965b-315">The following example adds a new attribute to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrefixOfNamespace">
      <MemberSignature Language="C#" Value="public virtual string GetPrefixOfNamespace (string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPrefixOfNamespace(string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrefixOfNamespace (namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPrefixOfNamespace(System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceURI"><span data-ttu-id="3965b-316">検索対象のプリフィックスを持つ名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="3965b-316">The namespace URI whose prefix you want to find.</span></span></param>
        <summary><span data-ttu-id="3965b-317">現在のノードのスコープ内にある指定した名前空間 URI に対する最も近い **xmlns** 宣言を検索し、宣言で定義されているプレフィックスを返します。</span><span class="sxs-lookup"><span data-stu-id="3965b-317">Looks up the closest **xmlns** declaration for the given namespace URI that is in scope for the current node and returns the prefix defined in that declaration.</span></span></summary>
        <returns><span data-ttu-id="3965b-318">指定した名前空間 URI のプリフィックス。</span><span class="sxs-lookup"><span data-stu-id="3965b-318">The prefix for the specified namespace URI.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-319">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="3965b-319">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-320">次の例では、XML ドキュメントに新しい要素を追加します。</span><span class="sxs-lookup"><span data-stu-id="3965b-320">The following example adds a new element to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetPrefixOfNamespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetPrefixOfNamespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetPrefixOfNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetPrefixOfNamespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetPrefixOfNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetPrefixOfNamespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChildNodes">
      <MemberSignature Language="C#" Value="public virtual bool HasChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.HasChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasChildNodes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasChildNodes { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3965b-321">このノードに子ノードがあるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3965b-321">Gets a value indicating whether this node has any child nodes.</span></span></summary>
        <value>
          <span data-ttu-id="3965b-322">ノードが子ノードを持っている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3965b-322"><see langword="true" /> if the node has child nodes; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-323">子ノードについては、次を参照してください、 [W3C DOM (Core) Level 1 の仕様。](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="3965b-323">For information about child nodes, see the [W3C DOM (Core) Level 1 specification](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-324">次の例では、ルート要素のすべての子ノードが表示されます。</span><span class="sxs-lookup"><span data-stu-id="3965b-324">The following example displays all the child nodes of the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public virtual string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3965b-325">ノードとそのすべての子の連結された値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3965b-325">Gets or sets the concatenated values of the node and all its child nodes.</span></span></summary>
        <value><span data-ttu-id="3965b-326">ノードとそのすべての子の連結された値。</span><span class="sxs-lookup"><span data-stu-id="3965b-326">The concatenated values of the node and all its child nodes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-327">このプロパティを設定すると、指定した文字列の解析された内容とすべての子ノードが置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="3965b-327">Setting this property replaces all the child nodes with the parsed contents of the given string.</span></span>  
  
 <span data-ttu-id="3965b-328">リーフ ノードの`InnerText`と同じコンテンツを返します、<xref:System.Xml.XmlNode.Value%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3965b-328">For leaf nodes, `InnerText` returns the same content as the <xref:System.Xml.XmlNode.Value%2A> property.</span></span>  
  
 <span data-ttu-id="3965b-329">このプロパティは、ドキュメント オブジェクト モデル (DOM) の Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="3965b-329">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-330">次の例を比較して、`InnerText`と<xref:System.Xml.XmlNode.InnerXml%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3965b-330">The following example compares the `InnerText` and <xref:System.Xml.XmlNode.InnerXml%2A> properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/VB/source.vb#1)]  
  
 <span data-ttu-id="3965b-331">**出力:**</span><span class="sxs-lookup"><span data-stu-id="3965b-331">**Output:**</span></span>  
  
```  
Display the InnerText of the element...  
some textmore text  
Display the InnerXml of the element...  
some text<child />more text  
<elem>Text containing &lt;markup/&gt; will have char(&lt;) and char(&gt;) escape  
d.</elem>  
<elem>Text containing <markup />.</elem>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public virtual string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.InnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3965b-332">このノードの子ノードだけを表すマークアップを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3965b-332">Gets or sets the markup representing only the child nodes of this node.</span></span></summary>
        <value><span data-ttu-id="3965b-333">このノードの子ノードのマークアップ。</span><span class="sxs-lookup"><span data-stu-id="3965b-333">The markup of the child nodes of this node.</span></span>  
  
 <span data-ttu-id="3965b-334"><block subset="none" type="note"><para><see langword="InnerXml" /> 既定の属性は返されません。</span><span class="sxs-lookup"><span data-stu-id="3965b-334"><block subset="none" type="note"><para><see langword="InnerXml" /> does not return default attributes.</span></span>  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-335">子ノードを持つことができないノードからこのプロパティを設定しようとすると、たとえばテキスト ノード、例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="3965b-335">Attempting to set this property from a node that cannot have child nodes, for example a Text node, throws an exception.</span></span> <span data-ttu-id="3965b-336">それ以外の場合、設定`InnerXml`ノードの子ノードを指定した文字列の解析された内容に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="3965b-336">Otherwise, setting `InnerXml` replaces the child nodes, of the node, with the parsed contents of the given string.</span></span> <span data-ttu-id="3965b-337">文字列の解析は、現在の名前空間コンテキストで実行されます。</span><span class="sxs-lookup"><span data-stu-id="3965b-337">The parsing is done in the current namespace context.</span></span>  
  
 <span data-ttu-id="3965b-338">このプロパティは、ドキュメント オブジェクト モデル (DOM) の Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="3965b-338">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3965b-339">`InnerXml` DOM を変更する、効率的な方法ではありません。</span><span class="sxs-lookup"><span data-stu-id="3965b-339">`InnerXml` is not an efficient way to modify the DOM.</span></span> <span data-ttu-id="3965b-340">複雑なノードを置き換えることパフォーマンスの問題があります。</span><span class="sxs-lookup"><span data-stu-id="3965b-340">There may be performance issues when replacing complex nodes.</span></span> <span data-ttu-id="3965b-341">ノードを作成してなどのメソッドを使用する方が効率的である`InsertBefore`、 `InsertAfter`、 `AppendChild`、および`RemoveChild`Xml ドキュメントを変更します。</span><span class="sxs-lookup"><span data-stu-id="3965b-341">It is more efficient to construct nodes and use methods such as `InsertBefore`, `InsertAfter`, `AppendChild`, and `RemoveChild` to modify the Xml document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-342">次の例を比較して、<xref:System.Xml.XmlNode.InnerText%2A>と`InnerXml`プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3965b-342">The following example compares the <xref:System.Xml.XmlNode.InnerText%2A> and `InnerXml` properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3965b-343">子ノードを持つことができないノードでこのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="3965b-343">Setting this property on a node that cannot have child nodes.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3965b-344">このプロパティの設定時に指定される XML は、整形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="3965b-344">The XML specified when setting this property is not well-formed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode InsertAfter (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode InsertAfter(class System.Xml.XmlNode newChild, class System.Xml.XmlNode refChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertAfter (newChild As XmlNode, refChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ InsertAfter(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ refChild);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="refChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild"><span data-ttu-id="3965b-345">挿入する <see langword="XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="3965b-345">The <see langword="XmlNode" /> to insert.</span></span></param>
        <param name="refChild"><span data-ttu-id="3965b-346">参照ノードである <see langword="XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="3965b-346">The <see langword="XmlNode" /> that is the reference node.</span></span> <span data-ttu-id="3965b-347"><c>newNode</c> は <c>refNode</c> の後に配置されます。</span><span class="sxs-lookup"><span data-stu-id="3965b-347">The <c>newNode</c> is placed after the <c>refNode</c>.</span></span></param>
        <summary><span data-ttu-id="3965b-348">指定したノードを指定した参照ノードの直後に挿入します。</span><span class="sxs-lookup"><span data-stu-id="3965b-348">Inserts the specified node immediately after the specified reference node.</span></span></summary>
        <returns><span data-ttu-id="3965b-349">挿入されるノード。</span><span class="sxs-lookup"><span data-stu-id="3965b-349">The node being inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-350">場合`refChild`は`null`、挿入`newChild`子ノードのリストの先頭にします。</span><span class="sxs-lookup"><span data-stu-id="3965b-350">If `refChild` is `null`, insert `newChild` at the beginning of the list of child nodes.</span></span> <span data-ttu-id="3965b-351">すべての内容、`newChild`は、同じ順序で後に挿入`refChild`です。</span><span class="sxs-lookup"><span data-stu-id="3965b-351">All the contents of the `newChild` are inserted, in the same order, after `refChild`.</span></span> <span data-ttu-id="3965b-352">場合、`newChild`は、ツリーに既にには、元の位置から削除され先の位置に追加されたことができます。</span><span class="sxs-lookup"><span data-stu-id="3965b-352">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="3965b-353">ノードの挿入の詳細については、次を参照してください。 [XML ドキュメントにノードの挿入](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)です。</span><span class="sxs-lookup"><span data-stu-id="3965b-353">For more information about inserting nodes, see [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="3965b-354">挿入されるノードは、別のドキュメントから作成された場合、は、使用<xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType>を現在のドキュメントにノードをインポートします。</span><span class="sxs-lookup"><span data-stu-id="3965b-354">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="3965b-355">インポートされたノードは、現在のドキュメントに挿入できます。</span><span class="sxs-lookup"><span data-stu-id="3965b-355">The imported node can then be inserted into the current document.</span></span>  
  
 <span data-ttu-id="3965b-356">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="3965b-356">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-357">次の例では、XML ドキュメントに新しいノードを追加します。</span><span class="sxs-lookup"><span data-stu-id="3965b-357">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InsertAfter Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InsertAfter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InsertAfter Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InsertAfter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InsertAfter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InsertAfter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3965b-358">このノードは、<paramref name="newChild" /> ノードの型の子ノードが許可されない型です。</span><span class="sxs-lookup"><span data-stu-id="3965b-358">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span></span>  
  
 <span data-ttu-id="3965b-359"><paramref name="newChild" /> がこのノードの先祖です。</span><span class="sxs-lookup"><span data-stu-id="3965b-359">The <paramref name="newChild" /> is an ancestor of this node.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3965b-360"><paramref name="newChild" /> は、このノードを作成したドキュメントとは異なるドキュメントから作成されました。</span><span class="sxs-lookup"><span data-stu-id="3965b-360">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span></span>  
  
 <span data-ttu-id="3965b-361"><paramref name="refChild" /> がこのノードの子ではありません。</span><span class="sxs-lookup"><span data-stu-id="3965b-361">The <paramref name="refChild" /> is not a child of this node.</span></span>  
  
 <span data-ttu-id="3965b-362">このノードは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="3965b-362">This node is read-only.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="3965b-363">オーバーライドする場合<see langword="InsertAfter" />派生クラスでイベントが正しく、発生するために呼び出す必要があります、<see langword="InsertAfter" />基底クラスのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="3965b-363">When overriding <see langword="InsertAfter" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="InsertAfter" /> method of the base class.</span></span></para>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode InsertBefore (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode InsertBefore(class System.Xml.XmlNode newChild, class System.Xml.XmlNode refChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertBefore (newChild As XmlNode, refChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ InsertBefore(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ refChild);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="refChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild"><span data-ttu-id="3965b-364">挿入する <see langword="XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="3965b-364">The <see langword="XmlNode" /> to insert.</span></span></param>
        <param name="refChild"><span data-ttu-id="3965b-365">参照ノードである <see langword="XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="3965b-365">The <see langword="XmlNode" /> that is the reference node.</span></span> <span data-ttu-id="3965b-366"><c>newChild</c> は、このノードの前に配置されます。</span><span class="sxs-lookup"><span data-stu-id="3965b-366">The <c>newChild</c> is placed before this node.</span></span></param>
        <summary><span data-ttu-id="3965b-367">指定したノードを指定した参照ノードの直前に挿入します。</span><span class="sxs-lookup"><span data-stu-id="3965b-367">Inserts the specified node immediately before the specified reference node.</span></span></summary>
        <returns><span data-ttu-id="3965b-368">挿入されるノード。</span><span class="sxs-lookup"><span data-stu-id="3965b-368">The node being inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-369">場合`refChild`は`null`、挿入`newChild`子ノードのリストの最後にします。</span><span class="sxs-lookup"><span data-stu-id="3965b-369">If `refChild` is `null`, insert `newChild` at the end of the list of child nodes.</span></span> <span data-ttu-id="3965b-370">すべての内容、`newChild`が挿入された、同じ順序で前に`refChild`です。</span><span class="sxs-lookup"><span data-stu-id="3965b-370">All the contents of the `newChild` are inserted, in the same order, before `refChild`.</span></span> <span data-ttu-id="3965b-371">場合、`newChild`は、ツリーに既にには、元の位置から削除され先の位置に追加されたことができます。</span><span class="sxs-lookup"><span data-stu-id="3965b-371">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="3965b-372">ノードの挿入の詳細については、次を参照してください。 [XML ドキュメントにノードの挿入](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)です。</span><span class="sxs-lookup"><span data-stu-id="3965b-372">For more information about inserting nodes, see [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="3965b-373">挿入されるノードは、別のドキュメントから作成された場合、は、使用<xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType>を現在のドキュメントにノードをインポートします。</span><span class="sxs-lookup"><span data-stu-id="3965b-373">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="3965b-374">インポートされたノードは、現在のドキュメントに挿入できます。</span><span class="sxs-lookup"><span data-stu-id="3965b-374">The imported node can then be inserted into the current document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-375">次の例では、XML ドキュメントに新しいノードを追加します。</span><span class="sxs-lookup"><span data-stu-id="3965b-375">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InsertBefore Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InsertBefore Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InsertBefore Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InsertBefore Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InsertBefore Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InsertBefore Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3965b-376">現在のノードは、<paramref name="newChild" /> ノードの型の子ノードが許可されない型です。</span><span class="sxs-lookup"><span data-stu-id="3965b-376">The current node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span></span>  
  
 <span data-ttu-id="3965b-377"><paramref name="newChild" /> がこのノードの先祖です。</span><span class="sxs-lookup"><span data-stu-id="3965b-377">The <paramref name="newChild" /> is an ancestor of this node.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3965b-378"><paramref name="newChild" /> は、このノードを作成したドキュメントとは異なるドキュメントから作成されました。</span><span class="sxs-lookup"><span data-stu-id="3965b-378">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span></span>  
  
 <span data-ttu-id="3965b-379"><paramref name="refChild" /> がこのノードの子ではありません。</span><span class="sxs-lookup"><span data-stu-id="3965b-379">The <paramref name="refChild" /> is not a child of this node.</span></span>  
  
 <span data-ttu-id="3965b-380">このノードは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="3965b-380">This node is read-only.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="3965b-381">オーバーライドする場合<see langword="InsertBefore" />派生クラスでイベントが正しく、発生するために呼び出す必要があります、<see langword="InsertBefore" />基底クラスのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="3965b-381">When overriding <see langword="InsertBefore" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="InsertBefore" /> method of the base class.</span></span></para>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3965b-382">ノードが読み取り専用かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3965b-382">Gets a value indicating whether the node is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="3965b-383">ノードが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3965b-383"><see langword="true" /> if the node is read-only; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-384">読み取り専用ノードは、1 つのプロパティ、属性、または子ノードを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="3965b-384">A read-only node is one whose properties, attributes, or child nodes cannot be changed.</span></span> <span data-ttu-id="3965b-385">読み取り専用のノード ツリーから削除し、それを別の場所に挿入できます。</span><span class="sxs-lookup"><span data-stu-id="3965b-385">You can remove a read-only node from the tree and insert it somewhere else.</span></span> <span data-ttu-id="3965b-386">たとえば、エンティティ ノードは常に読み取り専用にします。</span><span class="sxs-lookup"><span data-stu-id="3965b-386">For example, Entity nodes are always read-only.</span></span>  
  
 <span data-ttu-id="3965b-387">このプロパティは、ドキュメント オブジェクト モデル (DOM) の Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="3965b-387">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3965b-388">指定した子要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="3965b-388">Gets the specified child element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(name As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlElement ^ default[System::String ^] { System::Xml::XmlElement ^ get(System::String ^ name); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3965b-389">取得する要素の限定名。</span><span class="sxs-lookup"><span data-stu-id="3965b-389">The qualified name of the element to retrieve.</span></span></param>
        <summary><span data-ttu-id="3965b-390">指定した <see cref="P:System.Xml.XmlNode.Name" /> の最初の子要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="3965b-390">Gets the first child element with the specified <see cref="P:System.Xml.XmlNode.Name" />.</span></span></summary>
        <value><span data-ttu-id="3965b-391">指定した名前と一致する最初の <see cref="T:System.Xml.XmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="3965b-391">The first <see cref="T:System.Xml.XmlElement" /> that matches the specified name.</span></span> <span data-ttu-id="3965b-392">一致するものがない場合は、null 参照 (Visual Basic の場合は <see langword="Nothing" />) が返されます。</span><span class="sxs-lookup"><span data-stu-id="3965b-392">It returns a null reference (<see langword="Nothing" /> in Visual Basic) if there is no match.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-393">このプロパティは、ドキュメント オブジェクト モデル (DOM) の Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="3965b-393">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-394">次の例では、タイトル要素を表示します。</span><span class="sxs-lookup"><span data-stu-id="3965b-394">The following example displays the title element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.this Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.this Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement this[string localname, string ns] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement Item(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Item(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(localname As String, ns As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlElement ^ default[System::String ^, System::String ^] { System::Xml::XmlElement ^ get(System::String ^ localname, System::String ^ ns); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localname" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localname"><span data-ttu-id="3965b-395">要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="3965b-395">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="3965b-396">要素の名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="3965b-396">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="3965b-397">指定した <see cref="P:System.Xml.XmlNode.LocalName" /> および <see cref="P:System.Xml.XmlNode.NamespaceURI" /> の最初の子要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="3965b-397">Gets the first child element with the specified <see cref="P:System.Xml.XmlNode.LocalName" /> and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span></span></summary>
        <value><span data-ttu-id="3965b-398"><paramref name="localname" /> および <paramref name="ns" /> が一致する最初の <see cref="T:System.Xml.XmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="3965b-398">The first <see cref="T:System.Xml.XmlElement" /> with the matching <paramref name="localname" /> and <paramref name="ns" />.</span></span> <span data-ttu-id="3965b-399">である必要があります。</span><span class="sxs-lookup"><span data-stu-id="3965b-399">.</span></span> <span data-ttu-id="3965b-400">一致するものがない場合は、null 参照 (Visual Basic の場合は <see langword="Nothing" />) が返されます。</span><span class="sxs-lookup"><span data-stu-id="3965b-400">It returns a null reference (<see langword="Nothing" /> in Visual Basic) if there is no match.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-401">このプロパティは、ドキュメント オブジェクト モデル (DOM) の Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="3965b-401">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode LastChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode LastChild" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.LastChild" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LastChild As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ LastChild { System::Xml::XmlNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3965b-402">ノードの最後の子を取得します。</span><span class="sxs-lookup"><span data-stu-id="3965b-402">Gets the last child of the node.</span></span></summary>
        <value><span data-ttu-id="3965b-403">ノードの最後の子。</span><span class="sxs-lookup"><span data-stu-id="3965b-403">The last child of the node.</span></span> <span data-ttu-id="3965b-404">そのようなノードがない場合は、<see langword="null" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="3965b-404">If there is no such node, <see langword="null" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3965b-405">次の例では、価格の要素を表示します。</span><span class="sxs-lookup"><span data-stu-id="3965b-405">The following example displays the price element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public abstract string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3965b-406">派生クラスでオーバーライドされた場合は、ノードのローカル名を取得します。</span><span class="sxs-lookup"><span data-stu-id="3965b-406">Gets the local name of the node, when overridden in a derived class.</span></span></summary>
        <value><span data-ttu-id="3965b-407">プリフィックスが削除されたノードの名前。</span><span class="sxs-lookup"><span data-stu-id="3965b-407">The name of the node with the prefix removed.</span></span> <span data-ttu-id="3965b-408">たとえば、<see langword="LocalName" />要素の書籍&lt;bk:book&gt;です。</span><span class="sxs-lookup"><span data-stu-id="3965b-408">For example, <see langword="LocalName" /> is book for the element &lt;bk:book&gt;.</span></span>  
  
 <span data-ttu-id="3965b-409">返される名前は、ノードの <see cref="P:System.Xml.XmlNode.NodeType" /> によって異なります。</span><span class="sxs-lookup"><span data-stu-id="3965b-409">The name returned is dependent on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node:</span></span>  
  
 <span data-ttu-id="3965b-410"><list type="table"><listheader><term> 型</span><span class="sxs-lookup"><span data-stu-id="3965b-410"><list type="table"><listheader><term> Type</span></span>  
  
 <span data-ttu-id="3965b-411"></term><description> 名</span><span class="sxs-lookup"><span data-stu-id="3965b-411"></term><description> Name</span></span>  
  
 <span data-ttu-id="3965b-412"></description></listheader><item><term> 属性</span><span class="sxs-lookup"><span data-stu-id="3965b-412"></description></listheader><item><term> Attribute</span></span>  
  
 <span data-ttu-id="3965b-413"></term><description> 属性のローカル名。</span><span class="sxs-lookup"><span data-stu-id="3965b-413"></term><description> The local name of the attribute.</span></span>  
  
 <span data-ttu-id="3965b-414"></description></item><item><term> CDATA</span><span class="sxs-lookup"><span data-stu-id="3965b-414"></description></item><item><term> CDATA</span></span>  
  
 <span data-ttu-id="3965b-415"></term><description> #cdata セクション</span><span class="sxs-lookup"><span data-stu-id="3965b-415"></term><description> #cdata-section</span></span>  
  
 <span data-ttu-id="3965b-416"></description></item><item><term> コメント</span><span class="sxs-lookup"><span data-stu-id="3965b-416"></description></item><item><term> Comment</span></span>  
  
 <span data-ttu-id="3965b-417"></term><description> #comment</span><span class="sxs-lookup"><span data-stu-id="3965b-417"></term><description> #comment</span></span>  
  
 <span data-ttu-id="3965b-418"></description></item><item><term> ドキュメント</span><span class="sxs-lookup"><span data-stu-id="3965b-418"></description></item><item><term> Document</span></span>  
  
 <span data-ttu-id="3965b-419"></term><description> #document</span><span class="sxs-lookup"><span data-stu-id="3965b-419"></term><description> #document</span></span>  
  
 <span data-ttu-id="3965b-420"></description></item><item><term> Documentfragment</span><span class="sxs-lookup"><span data-stu-id="3965b-420"></description></item><item><term> DocumentFragment</span></span>  
  
 <span data-ttu-id="3965b-421"></term><description> #document フラグメント</span><span class="sxs-lookup"><span data-stu-id="3965b-421"></term><description> #document-fragment</span></span>  
  
 <span data-ttu-id="3965b-422"></description></item><item><term> DocumentType</span><span class="sxs-lookup"><span data-stu-id="3965b-422"></description></item><item><term> DocumentType</span></span>  
  
 <span data-ttu-id="3965b-423"></term><description> ドキュメント型の名前。</span><span class="sxs-lookup"><span data-stu-id="3965b-423"></term><description> The document type name.</span></span>  
  
 <span data-ttu-id="3965b-424"></description></item><item><term> 要素</span><span class="sxs-lookup"><span data-stu-id="3965b-424"></description></item><item><term> Element</span></span>  
  
 <span data-ttu-id="3965b-425"></term><description> 要素のローカル名。</span><span class="sxs-lookup"><span data-stu-id="3965b-425"></term><description> The local name of the element.</span></span>  
  
 <span data-ttu-id="3965b-426"></description></item><item><term> エンティティ</span><span class="sxs-lookup"><span data-stu-id="3965b-426"></description></item><item><term> Entity</span></span>  
  
 <span data-ttu-id="3965b-427"></term><description> エンティティの名前。</span><span class="sxs-lookup"><span data-stu-id="3965b-427"></term><description> The name of the entity.</span></span>  
  
 <span data-ttu-id="3965b-428"></description></item><item><term> EntityReference</span><span class="sxs-lookup"><span data-stu-id="3965b-428"></description></item><item><term> EntityReference</span></span>  
  
 <span data-ttu-id="3965b-429"></term><description> 参照されたエンティティの名前。</span><span class="sxs-lookup"><span data-stu-id="3965b-429"></term><description> The name of the entity referenced.</span></span>  
  
 <span data-ttu-id="3965b-430"></description></item><item><term> 表記法</span><span class="sxs-lookup"><span data-stu-id="3965b-430"></description></item><item><term> Notation</span></span>  
  
 <span data-ttu-id="3965b-431"></term><description> 表記名。</span><span class="sxs-lookup"><span data-stu-id="3965b-431"></term><description> The notation name.</span></span>  
  
 <span data-ttu-id="3965b-432"></description></item><item><term> processingInstruction</span><span class="sxs-lookup"><span data-stu-id="3965b-432"></description></item><item><term> ProcessingInstruction</span></span>  
  
 <span data-ttu-id="3965b-433"></term><description> 処理命令の対象。</span><span class="sxs-lookup"><span data-stu-id="3965b-433"></term><description> The target of the processing instruction.</span></span>  
  
 <span data-ttu-id="3965b-434"></description></item><item><term> テキスト</span><span class="sxs-lookup"><span data-stu-id="3965b-434"></description></item><item><term> Text</span></span>  
  
 <span data-ttu-id="3965b-435"></term><description> #text</span><span class="sxs-lookup"><span data-stu-id="3965b-435"></term><description> #text</span></span>  
  
 <span data-ttu-id="3965b-436"></description></item><item><term> 空白</span><span class="sxs-lookup"><span data-stu-id="3965b-436"></description></item><item><term> Whitespace</span></span>  
  
 <span data-ttu-id="3965b-437"></term><description> #whitespace</span><span class="sxs-lookup"><span data-stu-id="3965b-437"></term><description> #whitespace</span></span>  
  
 <span data-ttu-id="3965b-438"></description></item><item><term> SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="3965b-438"></description></item><item><term> SignificantWhitespace</span></span>  
  
 <span data-ttu-id="3965b-439"></term><description> #significant-whitespace</span><span class="sxs-lookup"><span data-stu-id="3965b-439"></term><description> #significant-whitespace</span></span>  
  
 <span data-ttu-id="3965b-440"></description></item><item><term> XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="3965b-440"></description></item><item><term> XmlDeclaration</span></span>  
  
 <span data-ttu-id="3965b-441"></term><description> #xml-declaration</span><span class="sxs-lookup"><span data-stu-id="3965b-441"></term><description> #xml-declaration</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-442">LocalName が同じ場合は、ノードには、プレフィックスはありません、<xref:System.Xml.XmlNode.Name%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3965b-442">If the node does not have a prefix, LocalName is the same as <xref:System.Xml.XmlNode.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlNode.Prefix" />
        <altmember cref="P:System.Xml.XmlNode.Name" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3965b-443">派生クラスでオーバーライドされた場合は、ノードの修飾名を取得します。</span><span class="sxs-lookup"><span data-stu-id="3965b-443">Gets the qualified name of the node, when overridden in a derived class.</span></span></summary>
        <value><span data-ttu-id="3965b-444">ノードの限定名。</span><span class="sxs-lookup"><span data-stu-id="3965b-444">The qualified name of the node.</span></span> <span data-ttu-id="3965b-445">返される名前は、ノードの <see cref="P:System.Xml.XmlNode.NodeType" /> によって異なります。</span><span class="sxs-lookup"><span data-stu-id="3965b-445">The name returned is dependent on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node:</span></span>  
  
 <span data-ttu-id="3965b-446"><list type="table"><listheader><term> 型</span><span class="sxs-lookup"><span data-stu-id="3965b-446"><list type="table"><listheader><term> Type</span></span>  
  
 <span data-ttu-id="3965b-447"></term><description> 名</span><span class="sxs-lookup"><span data-stu-id="3965b-447"></term><description> Name</span></span>  
  
 <span data-ttu-id="3965b-448"></description></listheader><item><term> 属性</span><span class="sxs-lookup"><span data-stu-id="3965b-448"></description></listheader><item><term> Attribute</span></span>  
  
 <span data-ttu-id="3965b-449"></term><description> 属性の修飾名。</span><span class="sxs-lookup"><span data-stu-id="3965b-449"></term><description> The qualified name of the attribute.</span></span>  
  
 <span data-ttu-id="3965b-450"></description></item><item><term> CDATA</span><span class="sxs-lookup"><span data-stu-id="3965b-450"></description></item><item><term> CDATA</span></span>  
  
 <span data-ttu-id="3965b-451"></term><description> #cdata セクション</span><span class="sxs-lookup"><span data-stu-id="3965b-451"></term><description> #cdata-section</span></span>  
  
 <span data-ttu-id="3965b-452"></description></item><item><term> コメント</span><span class="sxs-lookup"><span data-stu-id="3965b-452"></description></item><item><term> Comment</span></span>  
  
 <span data-ttu-id="3965b-453"></term><description> #comment</span><span class="sxs-lookup"><span data-stu-id="3965b-453"></term><description> #comment</span></span>  
  
 <span data-ttu-id="3965b-454"></description></item><item><term> ドキュメント</span><span class="sxs-lookup"><span data-stu-id="3965b-454"></description></item><item><term> Document</span></span>  
  
 <span data-ttu-id="3965b-455"></term><description> #document</span><span class="sxs-lookup"><span data-stu-id="3965b-455"></term><description> #document</span></span>  
  
 <span data-ttu-id="3965b-456"></description></item><item><term> Documentfragment</span><span class="sxs-lookup"><span data-stu-id="3965b-456"></description></item><item><term> DocumentFragment</span></span>  
  
 <span data-ttu-id="3965b-457"></term><description> #document フラグメント</span><span class="sxs-lookup"><span data-stu-id="3965b-457"></term><description> #document-fragment</span></span>  
  
 <span data-ttu-id="3965b-458"></description></item><item><term> DocumentType</span><span class="sxs-lookup"><span data-stu-id="3965b-458"></description></item><item><term> DocumentType</span></span>  
  
 <span data-ttu-id="3965b-459"></term><description> ドキュメント型の名前。</span><span class="sxs-lookup"><span data-stu-id="3965b-459"></term><description> The document type name.</span></span>  
  
 <span data-ttu-id="3965b-460"></description></item><item><term> 要素</span><span class="sxs-lookup"><span data-stu-id="3965b-460"></description></item><item><term> Element</span></span>  
  
 <span data-ttu-id="3965b-461"></term><description> 要素の修飾名。</span><span class="sxs-lookup"><span data-stu-id="3965b-461"></term><description> The qualified name of the element.</span></span>  
  
 <span data-ttu-id="3965b-462"></description></item><item><term> エンティティ</span><span class="sxs-lookup"><span data-stu-id="3965b-462"></description></item><item><term> Entity</span></span>  
  
 <span data-ttu-id="3965b-463"></term><description> エンティティの名前。</span><span class="sxs-lookup"><span data-stu-id="3965b-463"></term><description> The name of the entity.</span></span>  
  
 <span data-ttu-id="3965b-464"></description></item><item><term> EntityReference</span><span class="sxs-lookup"><span data-stu-id="3965b-464"></description></item><item><term> EntityReference</span></span>  
  
 <span data-ttu-id="3965b-465"></term><description> 参照されたエンティティの名前。</span><span class="sxs-lookup"><span data-stu-id="3965b-465"></term><description> The name of the entity referenced.</span></span>  
  
 <span data-ttu-id="3965b-466"></description></item><item><term> 表記法</span><span class="sxs-lookup"><span data-stu-id="3965b-466"></description></item><item><term> Notation</span></span>  
  
 <span data-ttu-id="3965b-467"></term><description> 表記名。</span><span class="sxs-lookup"><span data-stu-id="3965b-467"></term><description> The notation name.</span></span>  
  
 <span data-ttu-id="3965b-468"></description></item><item><term> processingInstruction</span><span class="sxs-lookup"><span data-stu-id="3965b-468"></description></item><item><term> ProcessingInstruction</span></span>  
  
 <span data-ttu-id="3965b-469"></term><description> 処理命令の対象。</span><span class="sxs-lookup"><span data-stu-id="3965b-469"></term><description> The target of the processing instruction.</span></span>  
  
 <span data-ttu-id="3965b-470"></description></item><item><term> テキスト</span><span class="sxs-lookup"><span data-stu-id="3965b-470"></description></item><item><term> Text</span></span>  
  
 <span data-ttu-id="3965b-471"></term><description> #text</span><span class="sxs-lookup"><span data-stu-id="3965b-471"></term><description> #text</span></span>  
  
 <span data-ttu-id="3965b-472"></description></item><item><term> 空白</span><span class="sxs-lookup"><span data-stu-id="3965b-472"></description></item><item><term> Whitespace</span></span>  
  
 <span data-ttu-id="3965b-473"></term><description> #whitespace</span><span class="sxs-lookup"><span data-stu-id="3965b-473"></term><description> #whitespace</span></span>  
  
 <span data-ttu-id="3965b-474"></description></item><item><term> SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="3965b-474"></description></item><item><term> SignificantWhitespace</span></span>  
  
 <span data-ttu-id="3965b-475"></term><description> #significant-whitespace</span><span class="sxs-lookup"><span data-stu-id="3965b-475"></term><description> #significant-whitespace</span></span>  
  
 <span data-ttu-id="3965b-476"></description></item><item><term> XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="3965b-476"></description></item><item><term> XmlDeclaration</span></span>  
  
 <span data-ttu-id="3965b-477"></term><description> #xml-declaration</span><span class="sxs-lookup"><span data-stu-id="3965b-477"></term><description> #xml-declaration</span></span>  
  
 </description></item></list></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public virtual string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3965b-478">このノードの名前空間 URI を取得します。</span><span class="sxs-lookup"><span data-stu-id="3965b-478">Gets the namespace URI of this node.</span></span></summary>
        <value><span data-ttu-id="3965b-479">このノードの名前空間 URI。</span><span class="sxs-lookup"><span data-stu-id="3965b-479">The namespace URI of this node.</span></span> <span data-ttu-id="3965b-480">名前空間 URI がない場合、このプロパティは String.Empty を返します。</span><span class="sxs-lookup"><span data-stu-id="3965b-480">If there is no namespace URI, this property returns String.Empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-481">これは、作成時に URI が指定された名前空間です。</span><span class="sxs-lookup"><span data-stu-id="3965b-481">This is the namespace URI specified at creation time.</span></span> <span data-ttu-id="3965b-482">たとえば、`NamespaceURI`要素の urn: サンプル\<bk:book xmlns:bk =「urn: サンプル」></span><span class="sxs-lookup"><span data-stu-id="3965b-482">For example, `NamespaceURI` is urn:samples for the element \<bk:book xmlns:bk= "urn:samples"></span></span>  
  
 <span data-ttu-id="3965b-483">属性は、要素にアタッチされてから、名前空間を継承しません。</span><span class="sxs-lookup"><span data-stu-id="3965b-483">An attribute does not inherit its namespace from the element it is attached to.</span></span> <span data-ttu-id="3965b-484">属性が明示的に指定されていない場合、名前空間を単に名前空間がありません。</span><span class="sxs-lookup"><span data-stu-id="3965b-484">If an attribute is not explicitly given a namespace, it simply has no namespace.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSibling">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode NextSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode NextSibling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.NextSibling" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NextSibling As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ NextSibling { System::Xml::XmlNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3965b-485">このノードの直後のノードを取得します。</span><span class="sxs-lookup"><span data-stu-id="3965b-485">Gets the node immediately following this node.</span></span></summary>
        <value><span data-ttu-id="3965b-486">次の <see langword="XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="3965b-486">The next <see langword="XmlNode" />.</span></span> <span data-ttu-id="3965b-487">次のノードがない場合は、<see langword="null" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="3965b-487">If there is no next node, <see langword="null" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3965b-488">次の例では、XML ドキュメントのすべてのブックを表示します。</span><span class="sxs-lookup"><span data-stu-id="3965b-488">The following example displays all the books in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3965b-489">派生クラスでオーバーライドされている場合は、現在のノードの型を取得します。</span><span class="sxs-lookup"><span data-stu-id="3965b-489">Gets the type of the current node, when overridden in a derived class.</span></span></summary>
        <value><span data-ttu-id="3965b-490"><see cref="T:System.Xml.XmlNodeType" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="3965b-490">One of the <see cref="T:System.Xml.XmlNodeType" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-491">このプロパティを返しません、 `XmlNodeType` EndElement、EndEntity または None です。</span><span class="sxs-lookup"><span data-stu-id="3965b-491">This property never returns the `XmlNodeType` EndElement, EndEntity or None.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public virtual void Normalize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Normalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.Normalize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Normalize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Normalize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3965b-492">この XmlNode の一番下のサブツリーまで含め、すべての XmlText ノードをマークアップ (タグ、コメント、処理命令、CDATA セクション、およびエンティティ参照) だけが XmlText ノードを区分する "通常の" 書式にします。したがって、隣接する XmlText ノードはありません。</span><span class="sxs-lookup"><span data-stu-id="3965b-492">Puts all XmlText nodes in the full depth of the sub-tree underneath this XmlNode into a "normal" form where only markup (that is, tags, comments, processing instructions, CDATA sections, and entity references) separates XmlText nodes, that is, there are no adjacent XmlText nodes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-493">このメソッドは、ドキュメントの DOM のビューが同じであると場合、保存してから、再度読み込むことを確認するために使用できます (な XPointer 参照) など特定のドキュメントのツリー構造に依存する操作が使用されるときに便利です。</span><span class="sxs-lookup"><span data-stu-id="3965b-493">This method can be used to ensure that the DOM view of a document is the same as if it were saved and re-loaded, and is useful when operations (such as XPointer lookups) that depend on a particular document tree structure are to be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OuterXml">
      <MemberSignature Language="C#" Value="public virtual string OuterXml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OuterXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.OuterXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OuterXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OuterXml { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3965b-494">このノードとそのすべての子ノードを格納しているマークアップを取得します。</span><span class="sxs-lookup"><span data-stu-id="3965b-494">Gets the markup containing this node and all its child nodes.</span></span></summary>
        <value><span data-ttu-id="3965b-495">このノードとそのすべての子ノードを格納しているマークアップ。</span><span class="sxs-lookup"><span data-stu-id="3965b-495">The markup containing this node and all its child nodes.</span></span>  
  
 <span data-ttu-id="3965b-496"><block subset="none" type="note"><para><see langword="OuterXml" /> 既定の属性は返されません。</span><span class="sxs-lookup"><span data-stu-id="3965b-496"><block subset="none" type="note"><para><see langword="OuterXml" /> does not return default attributes.</span></span>  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-497">このプロパティは、ドキュメント オブジェクト モデル (DOM) の Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="3965b-497">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-498">次の例からの出力を比較し、<xref:System.Xml.XmlNode.InnerXml%2A>と`OuterXml`プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3965b-498">The following example compares output from the <xref:System.Xml.XmlNode.InnerXml%2A> and `OuterXml` properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.OuterXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.OuterXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.OuterXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.OuterXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.OuterXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.OuterXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerDocument">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocument OwnerDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocument OwnerDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.OwnerDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OwnerDocument As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlDocument ^ OwnerDocument { System::Xml::XmlDocument ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3965b-499">このノードが属する <see cref="T:System.Xml.XmlDocument" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="3965b-499">Gets the <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</span></span></summary>
        <value><span data-ttu-id="3965b-500">このノードが属する <see cref="T:System.Xml.XmlDocument" />。</span><span class="sxs-lookup"><span data-stu-id="3965b-500">The <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</span></span>  
  
 <span data-ttu-id="3965b-501">ノードが <see cref="T:System.Xml.XmlDocument" /> (NodeType が XmlNodeType.Document と等しい) の場合、このプロパティは <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="3965b-501">If the node is an <see cref="T:System.Xml.XmlDocument" /> (NodeType equals XmlNodeType.Document), this property returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-502">ノードを現在のノードを追加する場合を使用して、<xref:System.Xml.XmlDocument>によって返される、<xref:System.Xml.XmlNode.OwnerDocument%2A>ノードを作成するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="3965b-502">When adding nodes to the current node, use the <xref:System.Xml.XmlDocument> returned by the <xref:System.Xml.XmlNode.OwnerDocument%2A> property to create the node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-503">参照してください<xref:System.Xml.XmlElement.OwnerDocument%2A>(XmlElement クラス) で、たとえば、このプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="3965b-503">See <xref:System.Xml.XmlElement.OwnerDocument%2A> (in the XmlElement class) for an example using this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ParentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode ParentNode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.ParentNode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ParentNode As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ ParentNode { System::Xml::XmlNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3965b-504">このノードの親 (親を持つノードの場合) を取得します。</span><span class="sxs-lookup"><span data-stu-id="3965b-504">Gets the parent of this node (for nodes that can have parents).</span></span></summary>
        <value><span data-ttu-id="3965b-505">現在のノードの親である <see langword="XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="3965b-505">The <see langword="XmlNode" /> that is the parent of the current node.</span></span> <span data-ttu-id="3965b-506">ノードが作成された直後でまだツリーに追加されていない場合、またはツリーから削除された場合、親は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3965b-506">If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is <see langword="null" />.</span></span> <span data-ttu-id="3965b-507">他のすべてのノードについては、返される値はノードの <see cref="P:System.Xml.XmlNode.NodeType" /> によって異なります。</span><span class="sxs-lookup"><span data-stu-id="3965b-507">For all other nodes, the value returned depends on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node.</span></span> <span data-ttu-id="3965b-508"><see langword="ParentNode" /> プロパティの有効な戻り値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="3965b-508">The following table describes the possible return values for the <see langword="ParentNode" /> property.</span></span>  
  
 <span data-ttu-id="3965b-509"><list type="table"><listheader><term> nodeType</span><span class="sxs-lookup"><span data-stu-id="3965b-509"><list type="table"><listheader><term> NodeType</span></span>  
  
 <span data-ttu-id="3965b-510"></term><description> ParentNode の戻り値</span><span class="sxs-lookup"><span data-stu-id="3965b-510"></term><description> Return Value of ParentNode</span></span>  
  
 <span data-ttu-id="3965b-511"></description></listheader><item><term> 属性、ドキュメント、DocumentFragment、Entity、Notation</span><span class="sxs-lookup"><span data-stu-id="3965b-511"></description></listheader><item><term> Attribute, Document, DocumentFragment, Entity, Notation</span></span>  
  
 <span data-ttu-id="3965b-512"></term><description> 返します<see langword="null" />; これらのノードは親がありません。</span><span class="sxs-lookup"><span data-stu-id="3965b-512"></term><description> Returns <see langword="null" />; these nodes do not have parents.</span></span>  
  
 <span data-ttu-id="3965b-513"></description></item><item><term> CDATA</span><span class="sxs-lookup"><span data-stu-id="3965b-513"></description></item><item><term> CDATA</span></span>  
  
 <span data-ttu-id="3965b-514"></term><description> CDATA セクションを含む要素またはエンティティの参照を返します。</span><span class="sxs-lookup"><span data-stu-id="3965b-514"></term><description> Returns the element or entity reference containing the CDATA section.</span></span>  
  
 <span data-ttu-id="3965b-515"></description></item><item><term> コメント</span><span class="sxs-lookup"><span data-stu-id="3965b-515"></description></item><item><term> Comment</span></span>  
  
 <span data-ttu-id="3965b-516"></term><description> 要素、エンティティ参照、ドキュメントの種類、またはコメントを含むドキュメントを返します。</span><span class="sxs-lookup"><span data-stu-id="3965b-516"></term><description> Returns the element, entity reference, document type, or document containing the comment.</span></span>  
  
 <span data-ttu-id="3965b-517"></description></item><item><term> DocumentType</span><span class="sxs-lookup"><span data-stu-id="3965b-517"></description></item><item><term> DocumentType</span></span>  
  
 <span data-ttu-id="3965b-518"></term><description> ドキュメント ノードを返します。</span><span class="sxs-lookup"><span data-stu-id="3965b-518"></term><description> Returns the document node.</span></span>  
  
 <span data-ttu-id="3965b-519"></description></item><item><term> 要素</span><span class="sxs-lookup"><span data-stu-id="3965b-519"></description></item><item><term> Element</span></span>  
  
 <span data-ttu-id="3965b-520"></term><description> 要素の親ノードを返します。</span><span class="sxs-lookup"><span data-stu-id="3965b-520"></term><description> Returns the parent node of the element.</span></span> <span data-ttu-id="3965b-521">要素がツリーにおいてルート ノードである場合、親はドキュメント ノードです。</span><span class="sxs-lookup"><span data-stu-id="3965b-521">If the element is the root node in the tree, the parent is the document node.</span></span>  
  
 <span data-ttu-id="3965b-522"></description></item><item><term> EntityReference</span><span class="sxs-lookup"><span data-stu-id="3965b-522"></description></item><item><term> EntityReference</span></span>  
  
 <span data-ttu-id="3965b-523"></term><description> エンティティ参照を含む要素、属性、またはエンティティの参照を返します。</span><span class="sxs-lookup"><span data-stu-id="3965b-523"></term><description> Returns the element, attribute, or entity reference containing the entity reference.</span></span>  
  
 <span data-ttu-id="3965b-524"></description></item><item><term> processingInstruction</span><span class="sxs-lookup"><span data-stu-id="3965b-524"></description></item><item><term> ProcessingInstruction</span></span>  
  
 <span data-ttu-id="3965b-525"></term><description> ドキュメント、要素、ドキュメントの種類、または処理命令を含むエンティティ参照を返します。</span><span class="sxs-lookup"><span data-stu-id="3965b-525"></term><description> Returns the document, element, document type, or entity reference containing the processing instruction.</span></span>  
  
 <span data-ttu-id="3965b-526"></description></item><item><term> テキスト</span><span class="sxs-lookup"><span data-stu-id="3965b-526"></description></item><item><term> Text</span></span>  
  
 <span data-ttu-id="3965b-527"></term><description> 親のテキスト ノードを含む要素、属性、またはエンティティの参照を返します。</span><span class="sxs-lookup"><span data-stu-id="3965b-527"></term><description> Returns the parent element, attribute, or entity reference containing the text node.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-528">親と子ノードについては、次を参照してください、 [W3C DOM (Core) Level 1 の仕様。](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="3965b-528">For information about parent and child nodes, see the [W3C DOM (Core) Level 1 specification](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public virtual string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3965b-529">このノードの名前空間プリフィックスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3965b-529">Gets or sets the namespace prefix of this node.</span></span></summary>
        <value><span data-ttu-id="3965b-530">このノードの名前空間プリフィックス。</span><span class="sxs-lookup"><span data-stu-id="3965b-530">The namespace prefix of this node.</span></span> <span data-ttu-id="3965b-531">たとえば、<see langword="Prefix" />要素には、黒&lt;bk:book&gt;です。</span><span class="sxs-lookup"><span data-stu-id="3965b-531">For example, <see langword="Prefix" /> is bk for the element &lt;bk:book&gt;.</span></span> <span data-ttu-id="3965b-532">プリフィックスがない場合、このプロパティは String.Empty を返します。</span><span class="sxs-lookup"><span data-stu-id="3965b-532">If there is no prefix, this property returns String.Empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-533">認められている場合、このプロパティを設定、変更、<xref:System.Xml.XmlNode.Name%2A>要素および属性ノードで、修飾名を保持するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="3965b-533">Setting this property, when permitted, changes the <xref:System.Xml.XmlNode.Name%2A> property, which holds the qualified name, on Element and Attribute nodes.</span></span> <span data-ttu-id="3965b-534">(テキスト、コメント、EntityReference、CDATA、ProcessingInstruction、ドキュメント、および documentfragment,) などのプレフィックスを持つことができないノード型にこのプロパティを設定しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="3965b-534">Setting this property on node types that cannot have a prefix (such as Text, Comment, EntityReference, CDATA, ProcessingInstruction, Document, and DocumentFragment) has no effect.</span></span> <span data-ttu-id="3965b-535">既定値があることがわかっている属性のプレフィックスを変更すると、既定値を持つ新しい属性は実行されませんが、ローカルの名前と名前空間 URI は変わらないため、元のプレフィックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="3965b-535">Changing the prefix of an attribute that is known to have a default value, does not make a new attribute with the default value and the original prefix appear, since the namespace URI and local name do not change.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3965b-536">このノードは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="3965b-536">This node is read-only.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="3965b-537">指定したプレフィックスに無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3965b-537">The specified prefix contains an invalid character.</span></span>  
  
 <span data-ttu-id="3965b-538">指定されたプリフィックスの書式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="3965b-538">The specified prefix is malformed.</span></span>  
  
 <span data-ttu-id="3965b-539">指定したプレフィックスが "xml" であり、このノードの namespaceURI が "http://www.w3.org/XML/1998/namespace" と異なっています。</span><span class="sxs-lookup"><span data-stu-id="3965b-539">The specified prefix is "xml" and the namespaceURI of this node is different from "http://www.w3.org/XML/1998/namespace".</span></span>  
  
 <span data-ttu-id="3965b-540">このノードが属性で、指定したプレフィックスが "xmlns" で、このノードの namespaceURI が "http://www.w3.org/2000/xmlns/" と異なります。</span><span class="sxs-lookup"><span data-stu-id="3965b-540">This node is an attribute and the specified prefix is "xmlns" and the namespaceURI of this node is different from "http://www.w3.org/2000/xmlns/ ".</span></span>  
  
 <span data-ttu-id="3965b-541">このノードが属性で、このノードの qualifiedName が "xmlns" です。</span><span class="sxs-lookup"><span data-stu-id="3965b-541">This node is an attribute and the qualifiedName of this node is "xmlns".</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="3965b-542">オーバーライドする場合<see langword="Prefix" />派生クラスでは、このプロパティを設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="3965b-542">When overriding <see langword="Prefix" /> in a derived class, this property cannot be set.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode PrependChild (System.Xml.XmlNode newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode PrependChild(class System.Xml.XmlNode newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PrependChild (newChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ PrependChild(System::Xml::XmlNode ^ newChild);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild"><span data-ttu-id="3965b-543">追加するノード。</span><span class="sxs-lookup"><span data-stu-id="3965b-543">The node to add.</span></span> <span data-ttu-id="3965b-544">追加するノードのすべての内容が、指定した場所に移動します。</span><span class="sxs-lookup"><span data-stu-id="3965b-544">All the contents of the node to be added are moved into the specified location.</span></span></param>
        <summary><span data-ttu-id="3965b-545">このノードの子ノードのリストの先頭に、指定したノードを追加します。</span><span class="sxs-lookup"><span data-stu-id="3965b-545">Adds the specified node to the beginning of the list of child nodes for this node.</span></span></summary>
        <returns><span data-ttu-id="3965b-546">追加されたノード。</span><span class="sxs-lookup"><span data-stu-id="3965b-546">The node added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-547">場合、`newChild`は、ツリーに既にには、元の位置から削除され先の位置に追加されたことができます。</span><span class="sxs-lookup"><span data-stu-id="3965b-547">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="3965b-548">ノードの挿入の詳細については、次を参照してください。 [XML ドキュメントにノードの挿入](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)です。</span><span class="sxs-lookup"><span data-stu-id="3965b-548">For more information about inserting nodes, see [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="3965b-549">挿入されるノードは、別のドキュメントから作成された場合、は、使用<xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType>を現在のドキュメントにノードをインポートします。</span><span class="sxs-lookup"><span data-stu-id="3965b-549">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="3965b-550">インポートされたノードは、現在のドキュメントに挿入できます。</span><span class="sxs-lookup"><span data-stu-id="3965b-550">The imported node can then be inserted into the current document.</span></span>  
  
 <span data-ttu-id="3965b-551">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="3965b-551">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-552">次の例では、XML ドキュメントに新しいノードを追加します。</span><span class="sxs-lookup"><span data-stu-id="3965b-552">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.PrependChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.PrependChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.PrependChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.PrependChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.PrependChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.PrependChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3965b-553">このノードは、<paramref name="newChild" /> ノードの型の子ノードが許可されない型です。</span><span class="sxs-lookup"><span data-stu-id="3965b-553">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span></span>  
  
 <span data-ttu-id="3965b-554"><paramref name="newChild" /> がこのノードの先祖です。</span><span class="sxs-lookup"><span data-stu-id="3965b-554">The <paramref name="newChild" /> is an ancestor of this node.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3965b-555"><paramref name="newChild" /> は、このノードを作成したドキュメントとは異なるドキュメントから作成されました。</span><span class="sxs-lookup"><span data-stu-id="3965b-555">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span></span>  
  
 <span data-ttu-id="3965b-556">このノードは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="3965b-556">This node is read-only.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="3965b-557">オーバーライドする場合<see langword="PrependChild" />派生クラスでイベントが正しく、発生するために呼び出す必要があります、<see langword="PrependChild" />基底クラスのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="3965b-557">When overriding <see langword="PrependChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="PrependChild" /> method of the base class.</span></span></para>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviousSibling">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode PreviousSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode PreviousSibling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.PreviousSibling" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreviousSibling As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ PreviousSibling { System::Xml::XmlNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3965b-558">このノードの直前のノードを取得します。</span><span class="sxs-lookup"><span data-stu-id="3965b-558">Gets the node immediately preceding this node.</span></span></summary>
        <value><span data-ttu-id="3965b-559">直前の <see langword="XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="3965b-559">The preceding <see langword="XmlNode" />.</span></span> <span data-ttu-id="3965b-560">直前のノードがない場合は、<see langword="null" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="3965b-560">If there is no preceding node, <see langword="null" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3965b-561">次の例では、XML ドキュメントのすべてのブックを表示します。</span><span class="sxs-lookup"><span data-stu-id="3965b-561">The following example displays all the books in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousText">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode PreviousText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode PreviousText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.PreviousText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreviousText As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ PreviousText { System::Xml::XmlNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3965b-562">このノードの直前にあるテキスト ノードを取得します。</span><span class="sxs-lookup"><span data-stu-id="3965b-562">Gets the text node that immediately precedes this node.</span></span></summary>
        <value><span data-ttu-id="3965b-563"><see cref="T:System.Xml.XmlNode" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="3965b-563">Returns <see cref="T:System.Xml.XmlNode" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-564">このプロパティより高速なパフォーマンス、<xref:System.Xml.XmlNode.PreviousSibling%2A>プロパティが使用できますが、タイプのノードを取得するためだけ<xref:System.Xml.XmlNodeType.Text>です。</span><span class="sxs-lookup"><span data-stu-id="3965b-564">This property has faster performance than the <xref:System.Xml.XmlNode.PreviousSibling%2A> property but you can use it only to get a node of type <xref:System.Xml.XmlNodeType.Text>.</span></span> <span data-ttu-id="3965b-565">を取得するノードの他の任意の型をこのノードの前にあるを使用して、<xref:System.Xml.XmlNode.PreviousSibling%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3965b-565">To get any other type of node that that precedes this node, use the <xref:System.Xml.XmlNode.PreviousSibling%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public virtual void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3965b-566">現在のノードのすべての子ノードと属性の両方、またはそのいずれかを削除します。</span><span class="sxs-lookup"><span data-stu-id="3965b-566">Removes all the child nodes and/or attributes of the current node.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-567">削除された属性は、既定値がある、既定値を含む属性がすぐに表示する既知の場合と、該当する場合、対応する名前空間 URI、ローカル名、およびプレフィックスです。</span><span class="sxs-lookup"><span data-stu-id="3965b-567">If a removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.</span></span>  
  
 <span data-ttu-id="3965b-568">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="3965b-568">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-569">次の例では、ルート ノードから子および属性のすべてのノードを削除します。</span><span class="sxs-lookup"><span data-stu-id="3965b-569">The following example removes all child and attribute nodes from the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.RemoveAll Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.RemoveAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.RemoveAll Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.RemoveAll Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.RemoveAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.RemoveAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="3965b-570">オーバーライドする場合<see langword="RemoveAll" />派生クラスでイベントが正しく、発生するために呼び出す必要があります、<see langword="RemoveAll" />基底クラスのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="3965b-570">When overriding <see langword="RemoveAll" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="RemoveAll" /> method of the base class.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemoveChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode RemoveChild (System.Xml.XmlNode oldChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode RemoveChild(class System.Xml.XmlNode oldChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveChild (oldChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ RemoveChild(System::Xml::XmlNode ^ oldChild);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="oldChild"><span data-ttu-id="3965b-571">削除されるノード。</span><span class="sxs-lookup"><span data-stu-id="3965b-571">The node being removed.</span></span></param>
        <summary><span data-ttu-id="3965b-572">指定した子ノードを削除します。</span><span class="sxs-lookup"><span data-stu-id="3965b-572">Removes specified child node.</span></span></summary>
        <returns><span data-ttu-id="3965b-573">削除されたノード。</span><span class="sxs-lookup"><span data-stu-id="3965b-573">The node removed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3965b-574">次の例では、XML ドキュメントからノードを削除します。</span><span class="sxs-lookup"><span data-stu-id="3965b-574">The following example removes a node from the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.RemoveChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.RemoveChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.RemoveChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.RemoveChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.RemoveChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.RemoveChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3965b-575"><paramref name="oldChild" /> がこのノードの子ではありません。</span><span class="sxs-lookup"><span data-stu-id="3965b-575">The <paramref name="oldChild" /> is not a child of this node.</span></span> <span data-ttu-id="3965b-576">または、このノードが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="3965b-576">Or this node is read-only.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="3965b-577">オーバーライドする場合<see langword="RemoveChild" />派生クラスでイベントが正しく、発生するために呼び出す必要があります、<see langword="RemoveChild" />基底クラスのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="3965b-577">When overriding <see langword="RemoveChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="RemoveChild" /> method of the base class.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ReplaceChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ReplaceChild (System.Xml.XmlNode newChild, System.Xml.XmlNode oldChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode ReplaceChild(class System.Xml.XmlNode newChild, class System.Xml.XmlNode oldChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReplaceChild (newChild As XmlNode, oldChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ ReplaceChild(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ oldChild);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="oldChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild"><span data-ttu-id="3965b-578">子リストに入れる新しいノード。</span><span class="sxs-lookup"><span data-stu-id="3965b-578">The new node to put in the child list.</span></span></param>
        <param name="oldChild"><span data-ttu-id="3965b-579">リスト内の置換されるノード。</span><span class="sxs-lookup"><span data-stu-id="3965b-579">The node being replaced in the list.</span></span></param>
        <summary><span data-ttu-id="3965b-580">子ノード <paramref name="oldChild" /> を <paramref name="newChild" /> ノードに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="3965b-580">Replaces the child node <paramref name="oldChild" /> with <paramref name="newChild" /> node.</span></span></summary>
        <returns><span data-ttu-id="3965b-581">置き換えられたノード。</span><span class="sxs-lookup"><span data-stu-id="3965b-581">The node replaced.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-582">場合、`newChild`は、既にツリーで、最初に削除されます。</span><span class="sxs-lookup"><span data-stu-id="3965b-582">If the `newChild` is already in the tree, it is first removed.</span></span>  
  
 <span data-ttu-id="3965b-583">場合、`newChild`が作成された別のドキュメントから行うこともできます<xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType>を現在のドキュメントにノードをインポートします。</span><span class="sxs-lookup"><span data-stu-id="3965b-583">If the `newChild` was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="3965b-584">インポートされたノードに渡すことができます、`ReplaceChild`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3965b-584">The imported node can then be passed to the `ReplaceChild` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-585">次の例では、XML ドキュメントのタイトル要素を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="3965b-585">The following example replaces the title element in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.ReplaceChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.ReplaceChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.ReplaceChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.ReplaceChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.ReplaceChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.ReplaceChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3965b-586">このノードは、<paramref name="newChild" /> ノードの型の子ノードが許可されない型です。</span><span class="sxs-lookup"><span data-stu-id="3965b-586">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span></span>  
  
 <span data-ttu-id="3965b-587"><paramref name="newChild" /> がこのノードの先祖です。</span><span class="sxs-lookup"><span data-stu-id="3965b-587">The <paramref name="newChild" /> is an ancestor of this node.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3965b-588"><paramref name="newChild" /> は、このノードを作成したドキュメントとは異なるドキュメントから作成されました。</span><span class="sxs-lookup"><span data-stu-id="3965b-588">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span></span>  
  
 <span data-ttu-id="3965b-589">このノードは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="3965b-589">This node is read-only.</span></span>  
  
 <span data-ttu-id="3965b-590"><paramref name="oldChild" /> がこのノードの子ではありません。</span><span class="sxs-lookup"><span data-stu-id="3965b-590">The <paramref name="oldChild" /> is not a child of this node.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="3965b-591">オーバーライドする場合<see langword="ReplaceChild" />派生クラスでイベントが正しく、発生するために呼び出す必要があります、<see langword="ReplaceChild" />基底クラスのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="3965b-591">When overriding <see langword="ReplaceChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="ReplaceChild" /> method of the base class.</span></span></para>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3965b-592">スキーマ検証の結果、このノードに割り当てられているスキーマ検証後の infoset を取得します。</span><span class="sxs-lookup"><span data-stu-id="3965b-592">Gets the post schema validation infoset that has been assigned to this node as a result of schema validation.</span></span></summary>
        <value><span data-ttu-id="3965b-593">このノードのスキーマ検証後の infoset が格納された <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3965b-593">An <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> object containing the post schema validation infoset of this node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-594"><xref:System.Xml.XmlNode.SchemaInfo%2A>とき、このノードは validatied プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="3965b-594">The <xref:System.Xml.XmlNode.SchemaInfo%2A> property is set when this node is validatied.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectNodes">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3965b-595">XPath 式と一致するノードのリストを選択します。</span><span class="sxs-lookup"><span data-stu-id="3965b-595">Selects a list of nodes matching the XPath expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-596">XPath 式は名前空間を含むことができます。</span><span class="sxs-lookup"><span data-stu-id="3965b-596">XPath expressions can include namespaces.</span></span> <span data-ttu-id="3965b-597">名前空間の解決は `XmlNamespaceManager` を使用してサポートされます。</span><span class="sxs-lookup"><span data-stu-id="3965b-597">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="3965b-598">プレフィックスと名前空間 URI のペアを追加する必要があります、XPath 式には、プレフィックスが含まれている場合、`XmlNamespaceManager`です。</span><span class="sxs-lookup"><span data-stu-id="3965b-598">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3965b-599">XPath 式にプレフィックスが含まれていない場合、名前空間 URI が空の名前空間であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="3965b-599">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="3965b-600">プレフィックスと名前空間 URI を追加する必要がありますが、XML には、既定の名前空間が含まれている場合に、`XmlNamespaceManager`以外の場合、選択されている任意のノードは表示されません。</span><span class="sxs-lookup"><span data-stu-id="3965b-600">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get any nodes selected.</span></span>  
  
 <span data-ttu-id="3965b-601">詳細については、次を参照してください。 [XPath ナビゲーションを使用してノードを選択](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)です。</span><span class="sxs-lookup"><span data-stu-id="3965b-601">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span> <span data-ttu-id="3965b-602">コード例については、前のセクションでオーバー ロードの一覧からオーバー ロードを選択します。</span><span class="sxs-lookup"><span data-stu-id="3965b-602">For code examples, choose an overload from the overload list in the previous section.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectNodes">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNodeList SelectNodes (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNodeList SelectNodes(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectNodes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectNodes (xpath As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNodeList ^ SelectNodes(System::String ^ xpath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath"><span data-ttu-id="3965b-603">XPath 式。</span><span class="sxs-lookup"><span data-stu-id="3965b-603">The XPath expression.</span></span></param>
        <summary><span data-ttu-id="3965b-604">XPath 式と一致するノードのリストを選択します。</span><span class="sxs-lookup"><span data-stu-id="3965b-604">Selects a list of nodes matching the XPath expression.</span></span></summary>
        <returns><span data-ttu-id="3965b-605">XPath クエリと一致するノードのコレクションを格納している <see cref="T:System.Xml.XmlNodeList" />。</span><span class="sxs-lookup"><span data-stu-id="3965b-605">An <see cref="T:System.Xml.XmlNodeList" /> containing a collection of nodes matching the XPath query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-606">使用する必要があります、XPath 式には、名前空間の解決が必要とする場合、`SelectNodes`オーバー ロードの受け取り、<xref:System.Xml.XmlNamespaceManager>引数として。</span><span class="sxs-lookup"><span data-stu-id="3965b-606">If the XPath expression requires namespace resolution, you must use the `SelectNodes` overload which takes an <xref:System.Xml.XmlNamespaceManager> as its argument.</span></span> <span data-ttu-id="3965b-607">`XmlNamespaceManager`名前空間の解決に使用します。</span><span class="sxs-lookup"><span data-stu-id="3965b-607">The `XmlNamespaceManager` is used to resolve namespaces.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3965b-608">XPath 式にプレフィックスが含まれていない場合、名前空間 URI が空の名前空間であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="3965b-608">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="3965b-609">XML には、既定の名前空間が含まれている必要がありますを使用する、`XmlNamespaceManager`プレフィックスと名前空間 URI を追加してあり、それ以外の場合は取得されませんノードを選択します。</span><span class="sxs-lookup"><span data-stu-id="3965b-609">If your XML includes a default namespace, you must still use the `XmlNamespaceManager` and add a prefix and namespace URI to it; otherwise, you will not get any nodes selected.</span></span> <span data-ttu-id="3965b-610">詳細については、次を参照してください。 [XPath ナビゲーションを使用してノードを選択](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)です。</span><span class="sxs-lookup"><span data-stu-id="3965b-610">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3965b-611">XPath 式を作成する場合の一般的な問題は、式に単一引用符 (') または二重引用符 (") を含める方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3965b-611">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="3965b-612">単一引用符を含む値を検索した場合は、二重引用符で囲まれた文字列を囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="3965b-612">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="3965b-613">二重引用符を含む値を検索する必要がある場合は、単一引用符で囲まれた文字列を囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="3965b-613">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="3965b-614">たとえば、次の XML があるとします。</span><span class="sxs-lookup"><span data-stu-id="3965b-614">For example, suppose you have the following XML:</span></span>  
  
```xml  
<bookstore>  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="3965b-615">次の Visual Basic コードでは、単一引用符を含む要素を選択します。</span><span class="sxs-lookup"><span data-stu-id="3965b-615">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```csharp  
nodeList = root.SelectNodes("//book[contains(title,""'Emma'"")]")  
```  
  
 <span data-ttu-id="3965b-616">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="3965b-616">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="3965b-617"><xref:System.Xml.XmlNodeList>基になるドキュメントが変更されないときに、このメソッドによって返されるオブジェクトが無効になります。</span><span class="sxs-lookup"><span data-stu-id="3965b-617">The <xref:System.Xml.XmlNodeList> object returned by this method will be valid while the underlying document remains unchanged.</span></span> <span data-ttu-id="3965b-618">予期しない結果が返される可能性が基になるドキュメントが変更された場合 (例外はスローされません)。</span><span class="sxs-lookup"><span data-stu-id="3965b-618">If the underlying document changes, unexpected results may be returned (no exception will be thrown).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-619">次の例では、著者の姓・ オースティンあり、これらの書籍の価格が変更し、すべてのブックを選択します。</span><span class="sxs-lookup"><span data-stu-id="3965b-619">The following example selects all books where the author's last name is Austen, and then changes the price of those books.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/VB/source.vb#1)]  
  
 <span data-ttu-id="3965b-620">この例では、次の XML を使用します。</span><span class="sxs-lookup"><span data-stu-id="3965b-620">This example uses the following XML:</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectNodes Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="3965b-621">XPath 式にプリフィックスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="3965b-621">The XPath expression contains a prefix.</span></span> <span data-ttu-id="3965b-622">「[XPath の例](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="3965b-622">See [XPath Examples](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041).</span></span></exception>
        <altmember cref="M:System.Xml.XmlNode.SelectSingleNode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectNodes">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNodeList SelectNodes (string xpath, System.Xml.XmlNamespaceManager nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNodeList SelectNodes(string xpath, class System.Xml.XmlNamespaceManager nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectNodes (xpath As String, nsmgr As XmlNamespaceManager) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNodeList ^ SelectNodes(System::String ^ xpath, System::Xml::XmlNamespaceManager ^ nsmgr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="nsmgr" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="xpath"><span data-ttu-id="3965b-623">XPath 式。</span><span class="sxs-lookup"><span data-stu-id="3965b-623">The XPath expression.</span></span> <span data-ttu-id="3965b-624">「[XPath の例](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="3965b-624">See [XPath Examples](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041).</span></span></param>
        <param name="nsmgr"><span data-ttu-id="3965b-625">XPath 式のプリフィックスの名前空間を解決するために使用する <see cref="T:System.Xml.XmlNamespaceManager" />。</span><span class="sxs-lookup"><span data-stu-id="3965b-625">An <see cref="T:System.Xml.XmlNamespaceManager" /> to use for resolving namespaces for prefixes in the XPath expression.</span></span></param>
        <summary><span data-ttu-id="3965b-626">XPath 式と一致するノードのリストを選択します。</span><span class="sxs-lookup"><span data-stu-id="3965b-626">Selects a list of nodes matching the XPath expression.</span></span> <span data-ttu-id="3965b-627">XPath 式で見つかったプリフィックスは、指定した <see cref="T:System.Xml.XmlNamespaceManager" /> を使用して解決されます。</span><span class="sxs-lookup"><span data-stu-id="3965b-627">Any prefixes found in the XPath expression are resolved using the supplied <see cref="T:System.Xml.XmlNamespaceManager" />.</span></span></summary>
        <returns><span data-ttu-id="3965b-628">XPath クエリと一致するノードのコレクションを格納している <see cref="T:System.Xml.XmlNodeList" />。</span><span class="sxs-lookup"><span data-stu-id="3965b-628">An <see cref="T:System.Xml.XmlNodeList" /> containing a collection of nodes matching the XPath query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-629">XPath 式は名前空間を含むことができます。</span><span class="sxs-lookup"><span data-stu-id="3965b-629">XPath expressions can include namespaces.</span></span> <span data-ttu-id="3965b-630">名前空間の解決は `XmlNamespaceManager` を使用してサポートされます。</span><span class="sxs-lookup"><span data-stu-id="3965b-630">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="3965b-631">プレフィックスと名前空間 URI のペアを追加する必要があります、XPath 式には、プレフィックスが含まれている場合、`XmlNamespaceManager`です。</span><span class="sxs-lookup"><span data-stu-id="3965b-631">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3965b-632">XPath 式にプレフィックスが含まれていない場合、名前空間 URI が空の名前空間であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="3965b-632">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="3965b-633">プレフィックスと名前空間 URI を追加する必要がありますが、XML には、既定の名前空間が含まれている場合に、`XmlNamespaceManager`以外の場合、選択されている任意のノードは表示されません。</span><span class="sxs-lookup"><span data-stu-id="3965b-633">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get any nodes selected.</span></span> <span data-ttu-id="3965b-634">詳細については、次を参照してください。 [XPath ナビゲーションを使用してノードを選択](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)です。</span><span class="sxs-lookup"><span data-stu-id="3965b-634">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
 <span data-ttu-id="3965b-635">たとえば、次の XML を作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3965b-635">For example, if you had the following XML:</span></span>  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
 <book>  
   <title>Pride And Prejudice</title>  
 </book>  
</bookstore>  
```  
  
 <span data-ttu-id="3965b-636">次の c# コードでは、すべての book ノードを選択します。</span><span class="sxs-lookup"><span data-stu-id="3965b-636">The following C# code selects all book nodes:</span></span>  
  
```csharp  
XmlNamespaceManager nsmgr = new XmlNamespaceManager(doc.NameTable);  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com");  
XmlNodeList nodelist = doc.SelectNodes("//ab:book", nsmgr);  
```  
  
> [!NOTE]
>  <span data-ttu-id="3965b-637">XPath 式を作成する場合の一般的な問題は、式に単一引用符 (') または二重引用符 (") を含める方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3965b-637">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="3965b-638">単一引用符を含む値を検索した場合は、二重引用符で囲まれた文字列を囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="3965b-638">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="3965b-639">二重引用符を含む値を検索する必要がある場合は、単一引用符で囲まれた文字列を囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="3965b-639">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="3965b-640">たとえば、次の XML があるとします。</span><span class="sxs-lookup"><span data-stu-id="3965b-640">For example, suppose you have the following XML:</span></span>  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="3965b-641">次の Visual Basic コードでは、単一引用符を含む要素を選択します。</span><span class="sxs-lookup"><span data-stu-id="3965b-641">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```vb  
Dim nsmgr As XmlNamespaceManager = New XmlNamespaceManager(doc.NameTable)  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com")  
nodeList = root.SelectNodes("//ab:book[contains(ab:title,""'Emma'"")]", nsmgr)  
```  
  
 <span data-ttu-id="3965b-642">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="3965b-642">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="3965b-643"><xref:System.Xml.XmlNodeList>基になるドキュメントが変更されないときに、このメソッドによって返されるオブジェクトが無効になります。</span><span class="sxs-lookup"><span data-stu-id="3965b-643">The <xref:System.Xml.XmlNodeList> object returned by this method will be valid while the underlying document remains unchanged.</span></span> <span data-ttu-id="3965b-644">予期しない結果が返される可能性が基になるドキュメントが変更された場合 (例外はスローされません)。</span><span class="sxs-lookup"><span data-stu-id="3965b-644">If the underlying document changes, unexpected results may be returned (no exception will be thrown).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-645">次の例では、各 ISBN 属性の値を表示します。</span><span class="sxs-lookup"><span data-stu-id="3965b-645">The following example displays the values of each of the ISBN attributes.</span></span> <span data-ttu-id="3965b-646">この例では、<xref:System.Xml.XmlElement>から継承されるオブジェクト、<xref:System.Xml.XmlNode>クラスです。</span><span class="sxs-lookup"><span data-stu-id="3965b-646">This example uses an <xref:System.Xml.XmlElement> object, which inherits from the <xref:System.Xml.XmlNode> class.</span></span>  
  
 [!code-cpp[XmlNode.SelectNodes1#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlNode.SelectNodes1/CPP/selectnodes1.cpp#1)]
 [!code-csharp[XmlNode.SelectNodes1#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlNode.SelectNodes1/CS/selectnodes1.cs#1)]
 [!code-vb[XmlNode.SelectNodes1#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlNode.SelectNodes1/VB/selectnodes1.vb#1)]  
  
 <span data-ttu-id="3965b-647">この例では、`booksort.xml`の入力として、します。</span><span class="sxs-lookup"><span data-stu-id="3965b-647">The example uses the file, `booksort.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectNodes Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="3965b-648">XPath 式に、<see langword="XmlNamespaceManager" /> で定義されていないプリフィックスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="3965b-648">The XPath expression contains a prefix which is not defined in the <see langword="XmlNamespaceManager" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectSingleNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3965b-649">XPath 式と一致する最初の <see langword="XmlNode" /> を選択します。</span><span class="sxs-lookup"><span data-stu-id="3965b-649">Selects the first <see langword="XmlNode" /> that matches the XPath expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-650">XPath 式は名前空間を含むことができます。</span><span class="sxs-lookup"><span data-stu-id="3965b-650">XPath expressions can include namespaces.</span></span> <span data-ttu-id="3965b-651">名前空間の解決は `XmlNamespaceManager` を使用してサポートされます。</span><span class="sxs-lookup"><span data-stu-id="3965b-651">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="3965b-652">プレフィックスと名前空間 URI のペアを追加する必要があります、XPath 式には、プレフィックスが含まれている場合、`XmlNamespaceManager`です。</span><span class="sxs-lookup"><span data-stu-id="3965b-652">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3965b-653">XPath 式にプレフィックスが含まれていない場合、名前空間 URI が空の名前空間であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="3965b-653">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="3965b-654">プレフィックスと名前空間 URI を追加する必要がありますが、XML には、既定の名前空間が含まれている場合に、`XmlNamespaceManager`以外の場合、選択されている任意のノードは表示されません。</span><span class="sxs-lookup"><span data-stu-id="3965b-654">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get any nodes selected.</span></span> <span data-ttu-id="3965b-655">詳細については、次を参照してください。 [XPath ナビゲーションを使用してノードを選択](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)です。</span><span class="sxs-lookup"><span data-stu-id="3965b-655">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-656">次の例では、作成者の名前が一致する最初の書籍を返します。</span><span class="sxs-lookup"><span data-stu-id="3965b-656">The following example returns the first book with the matching author name.</span></span> <span data-ttu-id="3965b-657">`XmlNamespaceManager` は XPath 式中の既定の名前空間を解決します。</span><span class="sxs-lookup"><span data-stu-id="3965b-657">The `XmlNamespaceManager` resolves the default namespace in the XPath expression.</span></span>  
  
 [!code-cpp[XmlNode.SelectSingleNode2#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlNode.SelectSingleNode2/CPP/XmlNode.SelectSingleNode2.cpp#1)]
 [!code-csharp[XmlNode.SelectSingleNode2#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlNode.SelectSingleNode2/CS/selectsingnode2.cs#1)]
 [!code-vb[XmlNode.SelectSingleNode2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlNode.SelectSingleNode2/VB/selectsingnode2.vb#1)]  
  
 <span data-ttu-id="3965b-658">この例では、`newbooks.xml`の入力として、します。</span><span class="sxs-lookup"><span data-stu-id="3965b-658">The example uses the file, `newbooks.xml`, as input.</span></span>  
  
 [!code-xml[XmlNode.SelectSingleNode2#2](~/samples/snippets/xml/VS_Snippets_Data/XmlNode.SelectSingleNode2/XML/newbooks.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode SelectSingleNode (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNode SelectSingleNode(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectSingleNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectSingleNode (xpath As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNode ^ SelectSingleNode(System::String ^ xpath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath"><span data-ttu-id="3965b-659">XPath 式。</span><span class="sxs-lookup"><span data-stu-id="3965b-659">The XPath expression.</span></span> <span data-ttu-id="3965b-660">「[XPath の例](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="3965b-660">See [XPath Examples](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041).</span></span></param>
        <summary><span data-ttu-id="3965b-661">XPath 式と一致する最初の <see langword="XmlNode" /> を選択します。</span><span class="sxs-lookup"><span data-stu-id="3965b-661">Selects the first <see langword="XmlNode" /> that matches the XPath expression.</span></span></summary>
        <returns><span data-ttu-id="3965b-662">XPath クエリと一致する最初の <see langword="XmlNode" />。一致するノードが見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3965b-662">The first <see langword="XmlNode" /> that matches the XPath query or <see langword="null" /> if no matching node is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-663">使用する必要があります、XPath 式には、名前空間の解決が必要とする場合、`SelectSingleNode`オーバー ロードの受け取り、<xref:System.Xml.XmlNamespaceManager>引数として。</span><span class="sxs-lookup"><span data-stu-id="3965b-663">If the XPath expression requires namespace resolution, you must use the `SelectSingleNode` overload which takes an <xref:System.Xml.XmlNamespaceManager> as its argument.</span></span> <span data-ttu-id="3965b-664">`XmlNamespaceManager`名前空間の解決に使用します。</span><span class="sxs-lookup"><span data-stu-id="3965b-664">The `XmlNamespaceManager` is used to resolve namespaces.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3965b-665">XPath 式にプレフィックスが含まれていない場合、名前空間 URI が空の名前空間であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="3965b-665">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="3965b-666">XML には、既定の名前空間が含まれている必要がありますを使用する、`XmlNamespaceManager`プレフィックスと名前空間 URI を追加してです。 それ以外の場合は取得されません、選択したノードとします。</span><span class="sxs-lookup"><span data-stu-id="3965b-666">If your XML includes a default namespace, you must still use the `XmlNamespaceManager` and add a prefix and namespace URI to it; otherwise, you will not get a selected node.</span></span> <span data-ttu-id="3965b-667">詳細については、次を参照してください。 [XPath ナビゲーションを使用してノードを選択](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)です。</span><span class="sxs-lookup"><span data-stu-id="3965b-667">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3965b-668">XPath 式を作成する場合の一般的な問題は、式に単一引用符 (') または二重引用符 (") を含める方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3965b-668">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="3965b-669">単一引用符を含む値を検索した場合は、二重引用符で囲まれた文字列を囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="3965b-669">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="3965b-670">二重引用符を含む値を検索する必要がある場合は、単一引用符で囲まれた文字列を囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="3965b-670">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="3965b-671">たとえば、次の XML があるとします。</span><span class="sxs-lookup"><span data-stu-id="3965b-671">For example, suppose you have the following XML:</span></span>  
  
```xml  
<bookstore>  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="3965b-672">次の Visual Basic コードでは、単一引用符を含む要素を選択します。</span><span class="sxs-lookup"><span data-stu-id="3965b-672">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```  
book = root.SelectSingleNode("descendant::book[title=""'Emma'""]")  
```  
  
 <span data-ttu-id="3965b-673">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="3965b-673">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-674">次の例では、最初のジェーン オースティン書籍の価格を変更します。</span><span class="sxs-lookup"><span data-stu-id="3965b-674">The following example changes the price of the first Jane Austen book.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.SelectSingleNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.SelectSingleNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.SelectSingleNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/VB/source.vb#1)]  
  
 <span data-ttu-id="3965b-675">この例では、`booksort.xml`の入力として、します。</span><span class="sxs-lookup"><span data-stu-id="3965b-675">The example uses the file, `booksort.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectSingleNode Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="3965b-676">XPath 式にプリフィックスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="3965b-676">The XPath expression contains a prefix.</span></span></exception>
        <altmember cref="M:System.Xml.XmlNode.SelectNodes(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode SelectSingleNode (string xpath, System.Xml.XmlNamespaceManager nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNode SelectSingleNode(string xpath, class System.Xml.XmlNamespaceManager nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectSingleNode (xpath As String, nsmgr As XmlNamespaceManager) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNode ^ SelectSingleNode(System::String ^ xpath, System::Xml::XmlNamespaceManager ^ nsmgr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="nsmgr" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="xpath"><span data-ttu-id="3965b-677">XPath 式。</span><span class="sxs-lookup"><span data-stu-id="3965b-677">The XPath expression.</span></span> <span data-ttu-id="3965b-678">「[XPath の例](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="3965b-678">See [XPath Examples](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041).</span></span></param>
        <param name="nsmgr"><span data-ttu-id="3965b-679">XPath 式のプリフィックスの名前空間を解決するために使用する <see cref="T:System.Xml.XmlNamespaceManager" />。</span><span class="sxs-lookup"><span data-stu-id="3965b-679">An <see cref="T:System.Xml.XmlNamespaceManager" /> to use for resolving namespaces for prefixes in the XPath expression.</span></span></param>
        <summary><span data-ttu-id="3965b-680">XPath 式と一致する最初の <see langword="XmlNode" /> を選択します。</span><span class="sxs-lookup"><span data-stu-id="3965b-680">Selects the first <see langword="XmlNode" /> that matches the XPath expression.</span></span> <span data-ttu-id="3965b-681">XPath 式で見つかったプリフィックスは、指定した <see cref="T:System.Xml.XmlNamespaceManager" /> を使用して解決されます。</span><span class="sxs-lookup"><span data-stu-id="3965b-681">Any prefixes found in the XPath expression are resolved using the supplied <see cref="T:System.Xml.XmlNamespaceManager" />.</span></span></summary>
        <returns><span data-ttu-id="3965b-682">XPath クエリと一致する最初の <see langword="XmlNode" />。一致するノードが見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3965b-682">The first <see langword="XmlNode" /> that matches the XPath query or <see langword="null" /> if no matching node is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-683">XPath 式は名前空間を含むことができます。</span><span class="sxs-lookup"><span data-stu-id="3965b-683">XPath expressions can include namespaces.</span></span> <span data-ttu-id="3965b-684">名前空間の解決は `XmlNamespaceManager` を使用してサポートされます。</span><span class="sxs-lookup"><span data-stu-id="3965b-684">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="3965b-685">プレフィックスと名前空間 URI のペアを追加する必要があります、XPath 式には、プレフィックスが含まれている場合、`XmlNamespaceManager`です。</span><span class="sxs-lookup"><span data-stu-id="3965b-685">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3965b-686">XPath 式にプレフィックスが含まれていない場合、名前空間 URI が空の名前空間であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="3965b-686">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="3965b-687">プレフィックスと名前空間 URI を追加する必要がありますが、XML には、既定の名前空間が含まれている場合に、`XmlNamespaceManager`以外の場合、選択したノードは表示されません。</span><span class="sxs-lookup"><span data-stu-id="3965b-687">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get a node selected.</span></span> <span data-ttu-id="3965b-688">詳細については、次を参照してください。 [XPath ナビゲーションを使用してノードを選択](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)です。</span><span class="sxs-lookup"><span data-stu-id="3965b-688">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
 <span data-ttu-id="3965b-689">たとえば、次の XML を作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3965b-689">For example, if you had the following XML:</span></span>  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
 <book>  
   <title>Pride And Prejudice</title>  
 </book>  
</bookstore>  
```  
  
 <span data-ttu-id="3965b-690">次の c# コードでは、最初の book ノードを選択します。</span><span class="sxs-lookup"><span data-stu-id="3965b-690">The following C# code selects the first book node:</span></span>  
  
```csharp  
XmlNamespaceManager nsmgr = new XmlNamespaceManager(doc.NameTable);  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com");  
XmlNode book = doc.SelectSingleNode("//ab:book", nsmgr);  
```  
  
> [!NOTE]
>  <span data-ttu-id="3965b-691">XPath 式を作成する場合の一般的な問題は、式に単一引用符 (') または二重引用符 (") を含める方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3965b-691">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="3965b-692">単一引用符を含む値を検索した場合は、二重引用符で囲まれた文字列を囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="3965b-692">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="3965b-693">二重引用符を含む値を検索する必要がある場合は、単一引用符で囲まれた文字列を囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="3965b-693">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="3965b-694">たとえば、次の XML があるとします。</span><span class="sxs-lookup"><span data-stu-id="3965b-694">For example, suppose you have the following XML:</span></span>  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="3965b-695">次の Visual Basic コードでは、単一引用符を含む要素を選択します。</span><span class="sxs-lookup"><span data-stu-id="3965b-695">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```vb  
Dim nsmgr As XmlNamespaceManager = New XmlNamespaceManager(doc.NameTable)  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com")  
book = root.SelectSingleNode("descendant::ab:book[ab:title=""'Emma'""]", nsmgr)  
```  
  
 <span data-ttu-id="3965b-696">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="3965b-696">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-697">次の例では、ISBN 値が一致する書籍を選択します。</span><span class="sxs-lookup"><span data-stu-id="3965b-697">The following example selects the book with the matching ISBN value.</span></span>  
  
 [!code-cpp[XmlNode.SelectSingleNode1#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlNode.SelectSingleNode1/CPP/selectsingnode.cpp#1)]
 [!code-csharp[XmlNode.SelectSingleNode1#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlNode.SelectSingleNode1/CS/selectsingnode.cs#1)]
 [!code-vb[XmlNode.SelectSingleNode1#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlNode.SelectSingleNode1/VB/selectsingnode.vb#1)]  
  
 <span data-ttu-id="3965b-698">この例では、`booksort.xml`の入力として、します。</span><span class="sxs-lookup"><span data-stu-id="3965b-698">The example uses the file, `booksort.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectNodes Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="3965b-699">XPath 式に、<see langword="XmlNamespaceManager" /> で定義されていないプリフィックスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="3965b-699">The XPath expression contains a prefix which is not defined in the <see langword="XmlNamespaceManager" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public virtual bool Supports (string feature, string version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(string feature, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.Supports(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Supports (feature As String, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::String ^ feature, System::String ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="feature"><span data-ttu-id="3965b-700">テスト対象の機能のパッケージ名。</span><span class="sxs-lookup"><span data-stu-id="3965b-700">The package name of the feature to test.</span></span> <span data-ttu-id="3965b-701">この名前は大文字と小文字を区別しません。</span><span class="sxs-lookup"><span data-stu-id="3965b-701">This name is not case-sensitive.</span></span></param>
        <param name="version"><span data-ttu-id="3965b-702">テストする対象のパッケージ名のバージョン番号。</span><span class="sxs-lookup"><span data-stu-id="3965b-702">The version number of the package name to test.</span></span> <span data-ttu-id="3965b-703">バージョンを指定しない場合、つまりバージョンが null の場合は、いずれかのバージョンの機能がサポートされていれば、メソッドは true を返します。</span><span class="sxs-lookup"><span data-stu-id="3965b-703">If the version is not specified (null), supporting any version of the feature causes the method to return true.</span></span></param>
        <summary><span data-ttu-id="3965b-704">DOM 実装が特定の機能を実装するかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="3965b-704">Tests if the DOM implementation implements a specific feature.</span></span></summary>
        <returns>
          <span data-ttu-id="3965b-705">指定したバージョンでその機能が実装される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3965b-705"><see langword="true" /> if the feature is implemented in the specified version; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3965b-706"><see langword="true" /> を返す組み合わせを次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="3965b-706">The following table describes the combinations that return <see langword="true" />.</span></span>  
  
 <span data-ttu-id="3965b-707"><list type="table"><listheader><term> 機能</span><span class="sxs-lookup"><span data-stu-id="3965b-707"><list type="table"><listheader><term> Feature</span></span>  
  
 <span data-ttu-id="3965b-708"></term><description> バージョン</span><span class="sxs-lookup"><span data-stu-id="3965b-708"></term><description> Version</span></span>  
  
 <span data-ttu-id="3965b-709"></description></listheader><item><term> XML</span><span class="sxs-lookup"><span data-stu-id="3965b-709"></description></listheader><item><term> XML</span></span>  
  
 <span data-ttu-id="3965b-710"></term><description> 1.0</span><span class="sxs-lookup"><span data-stu-id="3965b-710"></term><description> 1.0</span></span>  
  
 <span data-ttu-id="3965b-711"></description></item><item><term> XML</span><span class="sxs-lookup"><span data-stu-id="3965b-711"></description></item><item><term> XML</span></span>  
  
 <span data-ttu-id="3965b-712"></term><description> 2.0</span><span class="sxs-lookup"><span data-stu-id="3965b-712"></term><description> 2.0</span></span>  
  
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3965b-713">このメンバーの詳細については、「<see cref="M:System.Xml.XmlNode.GetEnumerator" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="3965b-713">For a description of this member, see <see cref="M:System.Xml.XmlNode.GetEnumerator" />.</span></span></summary>
        <returns><span data-ttu-id="3965b-714">コレクションの列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="3965b-714">Returns an enumerator for the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-715">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="3965b-715">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3965b-716">これは、<xref:System.Xml.XmlNode> のインスタンスが <xref:System.Collections.IEnumerable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="3965b-716">It can be used only when the <xref:System.Xml.XmlNode> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3965b-717">このメンバーの詳細については、「<see cref="M:System.Xml.XmlNode.Clone" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="3965b-717">For a description of this member, see <see cref="M:System.Xml.XmlNode.Clone" />.</span></span></summary>
        <returns><span data-ttu-id="3965b-718">ノードの呼び出し元ノードのコピー。</span><span class="sxs-lookup"><span data-stu-id="3965b-718">A copy of the node from which it is called.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-719">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="3965b-719">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3965b-720">これは、<xref:System.Xml.XmlNode> のインスタンスが <xref:System.ICloneable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="3965b-720">It can be used only when the <xref:System.Xml.XmlNode> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3965b-721">ノードの値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3965b-721">Gets or sets the value of the node.</span></span></summary>
        <value><span data-ttu-id="3965b-722">返される値は、ノードの <see cref="P:System.Xml.XmlNode.NodeType" /> によって異なります。</span><span class="sxs-lookup"><span data-stu-id="3965b-722">The value returned depends on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node:</span></span>  
  
 <span data-ttu-id="3965b-723"><list type="table"><listheader><term> 型</span><span class="sxs-lookup"><span data-stu-id="3965b-723"><list type="table"><listheader><term> Type</span></span>  
  
 <span data-ttu-id="3965b-724"></term><description> 値</span><span class="sxs-lookup"><span data-stu-id="3965b-724"></term><description> Value</span></span>  
  
 <span data-ttu-id="3965b-725"></description></listheader><item><term> 属性</span><span class="sxs-lookup"><span data-stu-id="3965b-725"></description></listheader><item><term> Attribute</span></span>  
  
 <span data-ttu-id="3965b-726"></term><description> 属性の値です。</span><span class="sxs-lookup"><span data-stu-id="3965b-726"></term><description> The value of the attribute.</span></span>  
  
 <span data-ttu-id="3965b-727"></description></item><item><term> CDATASection</span><span class="sxs-lookup"><span data-stu-id="3965b-727"></description></item><item><term> CDATASection</span></span>  
  
 <span data-ttu-id="3965b-728"></term><description> CDATA セクションの内容。</span><span class="sxs-lookup"><span data-stu-id="3965b-728"></term><description> The content of the CDATA Section.</span></span>  
  
 <span data-ttu-id="3965b-729"></description></item><item><term> コメント</span><span class="sxs-lookup"><span data-stu-id="3965b-729"></description></item><item><term> Comment</span></span>  
  
 <span data-ttu-id="3965b-730"></term><description> コメントの内容。</span><span class="sxs-lookup"><span data-stu-id="3965b-730"></term><description> The content of the comment.</span></span>  
  
 <span data-ttu-id="3965b-731"></description></item><item><term> ドキュメント</span><span class="sxs-lookup"><span data-stu-id="3965b-731"></description></item><item><term> Document</span></span>  
  
 <span data-ttu-id="3965b-732"></term><description><see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3965b-732"></term><description><see langword="null" />.</span></span>  
  
 <span data-ttu-id="3965b-733"></description></item><item><term> Documentfragment</span><span class="sxs-lookup"><span data-stu-id="3965b-733"></description></item><item><term> DocumentFragment</span></span>  
  
 <span data-ttu-id="3965b-734"></term><description><see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3965b-734"></term><description><see langword="null" />.</span></span>  
  
 <span data-ttu-id="3965b-735"></description></item><item><term> DocumentType</span><span class="sxs-lookup"><span data-stu-id="3965b-735"></description></item><item><term> DocumentType</span></span>  
  
 <span data-ttu-id="3965b-736"></term><description><see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3965b-736"></term><description><see langword="null" />.</span></span>  
  
 <span data-ttu-id="3965b-737"></description></item><item><term> 要素</span><span class="sxs-lookup"><span data-stu-id="3965b-737"></description></item><item><term> Element</span></span>  
  
 <span data-ttu-id="3965b-738"></term><description><see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3965b-738"></term><description><see langword="null" />.</span></span> <span data-ttu-id="3965b-739"><see cref="P:System.Xml.XmlElement.InnerText" /> プロパティまたは <see cref="P:System.Xml.XmlElement.InnerXml" /> プロパティを使用すると、要素ノードの値にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="3965b-739">You can use the <see cref="P:System.Xml.XmlElement.InnerText" /> or <see cref="P:System.Xml.XmlElement.InnerXml" /> properties to access the value of the element node.</span></span>  
  
 <span data-ttu-id="3965b-740"></description></item><item><term> エンティティ</span><span class="sxs-lookup"><span data-stu-id="3965b-740"></description></item><item><term> Entity</span></span>  
  
 <span data-ttu-id="3965b-741"></term><description><see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3965b-741"></term><description><see langword="null" />.</span></span>  
  
 <span data-ttu-id="3965b-742"></description></item><item><term> EntityReference</span><span class="sxs-lookup"><span data-stu-id="3965b-742"></description></item><item><term> EntityReference</span></span>  
  
 <span data-ttu-id="3965b-743"></term><description><see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3965b-743"></term><description><see langword="null" />.</span></span>  
  
 <span data-ttu-id="3965b-744"></description></item><item><term> 表記法</span><span class="sxs-lookup"><span data-stu-id="3965b-744"></description></item><item><term> Notation</span></span>  
  
 <span data-ttu-id="3965b-745"></term><description><see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3965b-745"></term><description><see langword="null" />.</span></span>  
  
 <span data-ttu-id="3965b-746"></description></item><item><term> processingInstruction</span><span class="sxs-lookup"><span data-stu-id="3965b-746"></description></item><item><term> ProcessingInstruction</span></span>  
  
 <span data-ttu-id="3965b-747"></term><description> ターゲットを除く全内容。</span><span class="sxs-lookup"><span data-stu-id="3965b-747"></term><description> The entire content excluding the target.</span></span>  
  
 <span data-ttu-id="3965b-748"></description></item><item><term> テキスト</span><span class="sxs-lookup"><span data-stu-id="3965b-748"></description></item><item><term> Text</span></span>  
  
 <span data-ttu-id="3965b-749"></term><description> テキスト ノードのコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="3965b-749"></term><description> The content of the text node.</span></span>  
  
 <span data-ttu-id="3965b-750"></description></item><item><term> SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="3965b-750"></description></item><item><term> SignificantWhitespace</span></span>  
  
 <span data-ttu-id="3965b-751"></term><description> 空白文字。</span><span class="sxs-lookup"><span data-stu-id="3965b-751"></term><description> The white space characters.</span></span> <span data-ttu-id="3965b-752">空白は、1 つ以上の空白文字、キャリッジ リターン、ライン フィード、またはタブによって構成できます。</span><span class="sxs-lookup"><span data-stu-id="3965b-752">White space can consist of one or more space characters, carriage returns, line feeds, or tabs.</span></span>  
  
 <span data-ttu-id="3965b-753"></description></item><item><term> 空白</span><span class="sxs-lookup"><span data-stu-id="3965b-753"></description></item><item><term> Whitespace</span></span>  
  
 <span data-ttu-id="3965b-754"></term><description> 空白文字。</span><span class="sxs-lookup"><span data-stu-id="3965b-754"></term><description> The white space characters.</span></span> <span data-ttu-id="3965b-755">空白は、1 つ以上の空白文字、キャリッジ リターン、ライン フィード、またはタブによって構成できます。</span><span class="sxs-lookup"><span data-stu-id="3965b-755">White space can consist of one or more space characters, carriage returns, line feeds, or tabs.</span></span>  
  
 <span data-ttu-id="3965b-756"></description></item><item><term> XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="3965b-756"></description></item><item><term> XmlDeclaration</span></span>  
  
 <span data-ttu-id="3965b-757"></term><description> 宣言の内容 (つまり、間にあるすべて&lt;? xml としますか?&gt;)。</span><span class="sxs-lookup"><span data-stu-id="3965b-757"></term><description> The content of the declaration (that is, everything between &lt;?xml and ?&gt;).</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3965b-758">次の例は、XML ドキュメントとセットに新しい属性を追加、<xref:System.Xml.XmlNode.Value%2A>新しい属性のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="3965b-758">The following example adds a new attribute to the XML document and sets the <xref:System.Xml.XmlNode.Value%2A> property of the new attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3965b-759">読み取り専用のノードの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="3965b-759">Setting the value of a node that is read-only.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3965b-760">値がないと想定されているノード (Element ノードなど) の値を設定します。</span><span class="sxs-lookup"><span data-stu-id="3965b-760">Setting the value of a node that is not supposed to have a value (for example, an Element node).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteContentTo">
      <MemberSignature Language="C#" Value="public abstract void WriteContentTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteContentTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteContentTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteContentTo(System::Xml::XmlWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="3965b-761">保存先の <see langword="XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="3965b-761">The <see langword="XmlWriter" /> to which you want to save.</span></span></param>
        <summary><span data-ttu-id="3965b-762">派生クラスでオーバーライドされた場合は、指定した <see cref="T:System.Xml.XmlWriter" /> にノードのすべての子ノードを保存します。</span><span class="sxs-lookup"><span data-stu-id="3965b-762">Saves all the child nodes of the node to the specified <see cref="T:System.Xml.XmlWriter" />, when overridden in a derived class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-763">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="3965b-763">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="3965b-764">これは機能的に等価、<xref:System.Xml.XmlNode.InnerXml%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3965b-764">It is functionally equivalent to the <xref:System.Xml.XmlNode.InnerXml%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-765">次の例では、コンソールに、ルート ノードの内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="3965b-765">The following example displays the contents of the root node to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.WriteContentTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.WriteContentTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.WriteContentTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.WriteContentTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.WriteContentTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.WriteContentTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public abstract void WriteTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteTo(System::Xml::XmlWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="3965b-766">保存先の <see langword="XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="3965b-766">The <see langword="XmlWriter" /> to which you want to save.</span></span></param>
        <summary><span data-ttu-id="3965b-767">派生クラスでオーバーライドされた場合は、指定した <see cref="T:System.Xml.XmlWriter" /> に現在のノードを保存します。</span><span class="sxs-lookup"><span data-stu-id="3965b-767">Saves the current node to the specified <see cref="T:System.Xml.XmlWriter" />, when overridden in a derived class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3965b-768">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="3965b-768">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="3965b-769">これは機能的に等価、<xref:System.Xml.XmlNode.OuterXml%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3965b-769">It is functionally equivalent to the <xref:System.Xml.XmlNode.OuterXml%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3965b-770">次の例では、コンソールにルート ノードが表示されます。</span><span class="sxs-lookup"><span data-stu-id="3965b-770">The following example displays the root node to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.WriteTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.WriteTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.WriteTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.WriteTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.WriteTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.WriteTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>