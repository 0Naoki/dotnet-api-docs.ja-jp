<Type Name="XmlNode" FullName="System.Xml.XmlNode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a8b583c1030f60c393dd43a1e00bbb32f10fe440" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39943811" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XmlNode : ICloneable, System.Collections.IEnumerable, System.Xml.XPath.IXPathNavigable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlNode extends System.Object implements class System.Collections.IEnumerable, class System.ICloneable, class System.Xml.XPath.IXPathNavigable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlNode" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlNode&#xA;Implements ICloneable, IEnumerable, IXPathNavigable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNode abstract : ICloneable, System::Collections::IEnumerable, System::Xml::XPath::IXPathNavigable" />
  <TypeSignature Language="F#" Value="type XmlNode = class&#xA;    interface ICloneable&#xA;    interface IEnumerable&#xA;    interface IXPathNavigable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlDocument</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.XPath.IXPathNavigable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{debuggerDisplayProxy}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6dbb6-101">XML ドキュメント内の単一のノードを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6dbb6-101">Represents a single node in the XML document.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-102">このクラスは、W3C ドキュメント オブジェクト モデル (DOM) の Level 1 Core および DOM Level 2 Core を実装します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-102">This class implements the W3C Document Object Model (DOM) Level 1 Core and the Core DOM Level 2.</span></span> <span data-ttu-id="6dbb6-103">DOM は XML ドキュメントのメモリ内 (キャッシュ) ツリー表現です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-103">The DOM is an in-memory (cache) tree representation of an XML document.</span></span> <span data-ttu-id="6dbb6-104">`XmlNode` DOM の .NET 実装で基底クラスです。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-104">`XmlNode` is the base class in the .NET implementation of the DOM.</span></span> <span data-ttu-id="6dbb6-105">XPath の選択をサポートし、編集機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-105">It supports XPath selections and provides editing capabilities.</span></span> <span data-ttu-id="6dbb6-106"><xref:System.Xml.XmlDocument>クラスは拡張`XmlNode`XML ドキュメントを表します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-106">The <xref:System.Xml.XmlDocument> class extends `XmlNode` and represents an XML document.</span></span> <span data-ttu-id="6dbb6-107">使用することができます`XmlDocument`を読み込んで XML データを保存します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-107">You can use `XmlDocument` to load and save XML data.</span></span> <span data-ttu-id="6dbb6-108">ノード作成メソッドも含まれています。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-108">It also includes methods for node creation.</span></span> <span data-ttu-id="6dbb6-109">参照してください[XML ドキュメント オブジェクト モデル (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-109">See [XML Document Object Model (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md) for more information.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6dbb6-110">使用した結果発生した例外、<xref:System.Xml.XmlNode>クラスなど、<xref:System.Xml.XmlException>クラスは、信頼されていないシナリオで公開してはなりません機密情報を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-110">Exceptions raised as a result of using the <xref:System.Xml.XmlNode> class, such as the <xref:System.Xml.XmlException> class may contain sensitive information that should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="6dbb6-111">この機密情報が信頼されていないシナリオで公開されないように、例外を正しく処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-111">Exceptions should be properly handled so that this sensitive information is not exposed in untrusted scenarios.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xml.XmlNode.SelectNodes(System.String)" />
  </Docs>
  <Members>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode AppendChild (System.Xml.XmlNode newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode AppendChild(class System.Xml.XmlNode newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendChild (newChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ AppendChild(System::Xml::XmlNode ^ newChild);" />
      <MemberSignature Language="F#" Value="abstract member AppendChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.AppendChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.AppendChild newChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">
          <span data-ttu-id="6dbb6-112">追加するノード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-112">The node to add.</span>
          </span>
          <span data-ttu-id="6dbb6-113">追加するノードのすべての内容が、指定した場所に移動します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-113">All the contents of the node to be added are moved into the specified location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dbb6-114">このノードの子ノードのリストの末尾に、指定したノードを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-114">Adds the specified node to the end of the list of child nodes, of this node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dbb6-115">追加されたノード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-115">The node added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-116">場合、`newChild`は、ツリーに既に存在元の位置から削除され先の位置に追加します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-116">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="6dbb6-117">ノードの挿入の詳細については、次を参照してください。 [XML ドキュメントにノードの挿入](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-117">For more information about inserting nodes, see [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="6dbb6-118">挿入されるノードが別のドキュメントから作成された場合を使用できます<xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType>を現在のドキュメントにノードをインポートします。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-118">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="6dbb6-119">インポートされたノードは、現在のドキュメントに挿入できます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-119">The imported node can then be inserted into the current document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-120">次の例では、XML ドキュメントに新しいノードを追加します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-120">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.AppendChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.AppendChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.AppendChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.AppendChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.AppendChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.AppendChild Example/VB/source.vb#1)]  
  
 <span data-ttu-id="6dbb6-121">**出力:**</span><span class="sxs-lookup"><span data-stu-id="6dbb6-121">**Output:**</span></span>  
  
```  
Display the modified XML...  
<?xml version="1.0" encoding="IBM437"?>  
<book genre="novel" ISBN="1-861001-57-5">  
  <title>Pride And Prejudice</title>  
  <price>19.95</price>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6dbb6-122">このノードは、<paramref name="newChild" /> ノードの型の子ノードが許可されない型です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-122">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span>
          </span>
          <span data-ttu-id="6dbb6-123">
            <paramref name="newChild" /> がこのノードの先祖です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-123">The <paramref name="newChild" /> is an ancestor of this node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6dbb6-124">
            <paramref name="newChild" /> は、このノードを作成したドキュメントとは異なるドキュメントから作成されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-124">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="6dbb6-125">このノードは読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-125">This node is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="6dbb6-126">
            <para>オーバーライドするときに<see langword="AppendChild" />、派生クラスで正しく、発生するイベントの順序で呼び出す必要があります、<see langword="AppendChild" />基本クラスのメソッド。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-126">
              <para>When overriding <see langword="AppendChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="AppendChild" /> method of the base class.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Attributes As XmlAttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlAttributeCollection ^ Attributes { System::Xml::XmlAttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Xml.XmlAttributeCollection" Usage="System.Xml.XmlNode.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-127">このノードの属性を格納している <see cref="T:System.Xml.XmlAttributeCollection" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-127">Gets an <see cref="T:System.Xml.XmlAttributeCollection" /> containing the attributes of this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dbb6-128">ノードの属性を格納している <see langword="XmlAttributeCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-128">An <see langword="XmlAttributeCollection" /> containing the attributes of the node.</span>
          </span>
          <span data-ttu-id="6dbb6-129">XmlNodeType.Element 型のノードの場合は、ノードの属性が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-129">If the node is of type XmlNodeType.Element, the attributes of the node are returned.</span>
          </span>
          <span data-ttu-id="6dbb6-130">それ以外の場合は、<see langword="null" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-130">Otherwise, this property returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6dbb6-131">次の例では、XML ドキュメントに新しい属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-131">The following example adds a new attribute to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public virtual string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlNode.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-132">現在のノードのベース URI を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-132">Gets the base URI of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dbb6-133">ノードの読み込み元の場所。ノードにベース URI がない場合は String.Empty。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-133">The location from which the node was loaded or String.Empty if the node has no base URI.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-134">ネットワークに接続された XML ドキュメントでは、さまざまな W3C 標準包含メカニズムを使用して集計されたデータのチャンクはで構成され、したがって異なる場所から取得したノードが含まれます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-134">A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="6dbb6-135">`BaseURI`からこれらのノードが付属していたかがわかります。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-135">The `BaseURI` tells you where these nodes came from.</span></span>  
  
 <span data-ttu-id="6dbb6-136">このプロパティの値は、ノードの種類によって異なります。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-136">The value of this property varies depending on the node type.</span></span> <span data-ttu-id="6dbb6-137">たとえば、ドキュメント ノードがの場所を返す、<xref:System.Xml.XmlDocument>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-137">For example, Document nodes return the location of the <xref:System.Xml.XmlDocument> object.</span></span> <span data-ttu-id="6dbb6-138">外部の EntityReference ノードの子ノードであるノードでは、エンティティ自体の場所を返します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-138">Nodes which are child nodes of external EntityReference nodes return the location of the entity itself.</span></span> <span data-ttu-id="6dbb6-139">たとえば、次の XML ドキュメントがあるとします。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-139">For example, consider the following XML document:</span></span>  
  
```xml  
<!DOCTYPE item [  
<!ENTITY xyz SYSTEM "a/b.xml">  
]>  
<item num='123'>&xyz;</item>  
```  
  
 <span data-ttu-id="6dbb6-140">外部エンティティ`a/b.xml`XML テキストが含まれています:`<test>123</test>`します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-140">where the external entity `a/b.xml` contains the XML text: `<test>123</test>`.</span></span>  
  
 <span data-ttu-id="6dbb6-141">ドキュメントが読み込まれた場合http://server/mydata.xml、`BaseURI`は以下を返します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-141">If the document is loaded from http://server/mydata.xml, `BaseURI` returns the following:</span></span>  
  
|<span data-ttu-id="6dbb6-142">ノード型</span><span class="sxs-lookup"><span data-stu-id="6dbb6-142">NodeType</span></span>|<span data-ttu-id="6dbb6-143">name</span><span class="sxs-lookup"><span data-stu-id="6dbb6-143">Name</span></span>|<span data-ttu-id="6dbb6-144">BaseURI</span><span class="sxs-lookup"><span data-stu-id="6dbb6-144">BaseURI</span></span>|  
|--------------|----------|-------------|  
|<span data-ttu-id="6dbb6-145">属性</span><span class="sxs-lookup"><span data-stu-id="6dbb6-145">Attribute</span></span>|<span data-ttu-id="6dbb6-146">num</span><span class="sxs-lookup"><span data-stu-id="6dbb6-146">num</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="6dbb6-147">ドキュメント</span><span class="sxs-lookup"><span data-stu-id="6dbb6-147">Document</span></span>|<span data-ttu-id="6dbb6-148">#document</span><span class="sxs-lookup"><span data-stu-id="6dbb6-148">#document</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="6dbb6-149">DocumentType</span><span class="sxs-lookup"><span data-stu-id="6dbb6-149">DocumentType</span></span>|<span data-ttu-id="6dbb6-150">項目</span><span class="sxs-lookup"><span data-stu-id="6dbb6-150">item</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="6dbb6-151">エンティティ</span><span class="sxs-lookup"><span data-stu-id="6dbb6-151">Entity</span></span>|<span data-ttu-id="6dbb6-152">xyz</span><span class="sxs-lookup"><span data-stu-id="6dbb6-152">xyz</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="6dbb6-153">要素</span><span class="sxs-lookup"><span data-stu-id="6dbb6-153">Element</span></span>|<span data-ttu-id="6dbb6-154">項目</span><span class="sxs-lookup"><span data-stu-id="6dbb6-154">item</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="6dbb6-155">EntityReference</span><span class="sxs-lookup"><span data-stu-id="6dbb6-155">EntityReference</span></span>|<span data-ttu-id="6dbb6-156">xyz</span><span class="sxs-lookup"><span data-stu-id="6dbb6-156">xyz</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="6dbb6-157">要素</span><span class="sxs-lookup"><span data-stu-id="6dbb6-157">Element</span></span>|<span data-ttu-id="6dbb6-158">テスト</span><span class="sxs-lookup"><span data-stu-id="6dbb6-158">test</span></span>|http://server/a/b.xml|  
|<span data-ttu-id="6dbb6-159">テキスト</span><span class="sxs-lookup"><span data-stu-id="6dbb6-159">Text</span></span>|<span data-ttu-id="6dbb6-160">#text</span><span class="sxs-lookup"><span data-stu-id="6dbb6-160">#text</span></span>|http://server/a/b.xml|  
  
 <span data-ttu-id="6dbb6-161">`BaseURI` エンティティを検索が境界を参照エンティティが展開されている場合は、この情報は保持されませんしの場所を返します、`XmlDocument`のすべてのケース内のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-161">`BaseURI` looks for entity reference boundaries, so if entities are expanded this information is not preserved and this property returns the location of the `XmlDocument` object in all cases.</span></span>  
  
 <span data-ttu-id="6dbb6-162">2 番目の例としては、次の XML ドキュメントを考えてみます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-162">As a second example, given the following XML document:</span></span>  
  
```xml  
<!DOCTYPE Mydata SYSTEM "http://localhost/doctype.dtd">  
<baa>&xyz;</baa>  
```  
  
 <span data-ttu-id="6dbb6-163">DTD ファイルに次が含まれています。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-163">where the DTD file contains the following:</span></span>  
  
```  
<!ENTITY xyz <E1>My Data</E1>  
<!ELEMENT baa #PCDATA>  
<!ATTLIST baa attr1 "woof">  
```  
  
 <span data-ttu-id="6dbb6-164">XML ドキュメントが読み込まれた場合http://localhost/mydata.xml、`BaseURI`は以下の各ノードを返します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-164">If the XML document is loaded from http://localhost/mydata.xml, `BaseURI` returns the following for each of the nodes:</span></span>  
  
|<span data-ttu-id="6dbb6-165">ノード型</span><span class="sxs-lookup"><span data-stu-id="6dbb6-165">NodeType</span></span>|<span data-ttu-id="6dbb6-166">name</span><span class="sxs-lookup"><span data-stu-id="6dbb6-166">Name</span></span>|<span data-ttu-id="6dbb6-167">BaseURI</span><span class="sxs-lookup"><span data-stu-id="6dbb6-167">BaseURI</span></span>|  
|--------------|----------|-------------|  
|<span data-ttu-id="6dbb6-168">ドキュメント</span><span class="sxs-lookup"><span data-stu-id="6dbb6-168">Document</span></span>|<span data-ttu-id="6dbb6-169">#document</span><span class="sxs-lookup"><span data-stu-id="6dbb6-169">#document</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="6dbb6-170">DocumentType</span><span class="sxs-lookup"><span data-stu-id="6dbb6-170">DocumentType</span></span>|<span data-ttu-id="6dbb6-171">Mydata</span><span class="sxs-lookup"><span data-stu-id="6dbb6-171">Mydata</span></span>|http://localhost/mydata.xml<br /><br /> <span data-ttu-id="6dbb6-172"><xref:System.Xml.XmlDocumentType.SystemId%2A?displayProperty=nameWithType>または<xref:System.Xml.XmlDocumentType.PublicId%2A?displayProperty=nameWithType>プロパティは、DTD ファイルがから読み込まれたかを識別するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-172">The <xref:System.Xml.XmlDocumentType.SystemId%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlDocumentType.PublicId%2A?displayProperty=nameWithType> properties can be used to identify where the DTD file was loaded from.</span></span>|  
|<span data-ttu-id="6dbb6-173">要素</span><span class="sxs-lookup"><span data-stu-id="6dbb6-173">Element</span></span>|<span data-ttu-id="6dbb6-174">baa</span><span class="sxs-lookup"><span data-stu-id="6dbb6-174">baa</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="6dbb6-175">エンティティ</span><span class="sxs-lookup"><span data-stu-id="6dbb6-175">Entity</span></span>|<span data-ttu-id="6dbb6-176">xyz</span><span class="sxs-lookup"><span data-stu-id="6dbb6-176">xyz</span></span>|http://localhost/doctype.dtd|  
|<span data-ttu-id="6dbb6-177">EntityReference</span><span class="sxs-lookup"><span data-stu-id="6dbb6-177">EntityReference</span></span>|<span data-ttu-id="6dbb6-178">xyz</span><span class="sxs-lookup"><span data-stu-id="6dbb6-178">xyz</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="6dbb6-179">属性</span><span class="sxs-lookup"><span data-stu-id="6dbb6-179">Attribute</span></span>|<span data-ttu-id="6dbb6-180">woof</span><span class="sxs-lookup"><span data-stu-id="6dbb6-180">woof</span></span>|http://localhost/mydata.xml|  
  
> [!NOTE]
>  <span data-ttu-id="6dbb6-181">既定の属性のベース URI は、所属する要素のベース URI の場合と同じです。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-181">The base URI of a default attribute is the same as the base URI of the element to which they belong.</span></span>  
  
 <span data-ttu-id="6dbb6-182">このプロパティは、ドキュメント オブジェクト モデル (DOM) の Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-182">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildNodes">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList ChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNodeList ChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.ChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ChildNodes As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeList ^ ChildNodes { System::Xml::XmlNodeList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildNodes : System.Xml.XmlNodeList" Usage="System.Xml.XmlNode.ChildNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-183">ノードのすべての子ノードを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-183">Gets all the child nodes of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dbb6-184">ノードのすべての子ノードを格納しているオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-184">An object that contains all the child nodes of the node.</span>
          </span>
          <span data-ttu-id="6dbb6-185">子ノードがない場合、このプロパティは空の <see cref="T:System.Xml.XmlNodeList" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-185">If there are no child nodes, this property returns an empty <see cref="T:System.Xml.XmlNodeList" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-186">子ノードについては、次を参照してください、 [(コア) の W3C DOM Level 1 の仕様。](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="6dbb6-186">For information about child nodes, see the [W3C DOM (Core) Level 1 specification](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-187">次の例では、ルート要素のすべての子ノードが表示されます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-187">The following example displays all the child nodes of the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Xml.XmlNode&#xA;override this.Clone : unit -&gt; System.Xml.XmlNode" Usage="xmlNode.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-188">このノードの複製を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-188">Creates a duplicate of this node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dbb6-189">クローンとして作成されたノード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-189">The cloned node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-190">複製を<xref:System.Xml.XmlElement>すべての属性とを既定の属性を表す XML プロセッサによって生成されたものも含め、その値をコピーします。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-190">Cloning an <xref:System.Xml.XmlElement> copies all attributes and their values, including those generated by the XML processor to represent defaulted attributes.</span></span> <span data-ttu-id="6dbb6-191">このメソッドを再帰的に、ノードとその下にあるサブツリーのクローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-191">This method recursively clones the node and the subtree underneath it.</span></span>  
  
 <span data-ttu-id="6dbb6-192">`Clone` 呼び出すことと等価`CloneNode(true)`します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-192">`Clone` is equivalent to calling `CloneNode(true)`.</span></span>  
  
 <span data-ttu-id="6dbb6-193">次の表は、それぞれ固有の動作を示します<xref:System.Xml.XmlNodeType>します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-193">The following table describes the specific behavior for each <xref:System.Xml.XmlNodeType>.</span></span>  
  
|<span data-ttu-id="6dbb6-194">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="6dbb6-194">XmlNodeType</span></span>|<span data-ttu-id="6dbb6-195">複製</span><span class="sxs-lookup"><span data-stu-id="6dbb6-195">Clone</span></span>|  
|-----------------|-----------|  
|<span data-ttu-id="6dbb6-196">属性</span><span class="sxs-lookup"><span data-stu-id="6dbb6-196">Attribute</span></span>|<span data-ttu-id="6dbb6-197">子ノードを含む、属性ノードのクローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-197">Clones the attribute node, including child nodes.</span></span>|  
|<span data-ttu-id="6dbb6-198">CData</span><span class="sxs-lookup"><span data-stu-id="6dbb6-198">CData</span></span>|<span data-ttu-id="6dbb6-199">そのデータの内容を含む CData ノードのクローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-199">Clones the CData node, including its data content.</span></span>|  
|<span data-ttu-id="6dbb6-200">コメント</span><span class="sxs-lookup"><span data-stu-id="6dbb6-200">Comment</span></span>|<span data-ttu-id="6dbb6-201">そのテキスト コンテンツを含む、コメント ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-201">Clones the comment node, including its text content.</span></span>|  
|<span data-ttu-id="6dbb6-202">ドキュメント</span><span class="sxs-lookup"><span data-stu-id="6dbb6-202">Document</span></span>|<span data-ttu-id="6dbb6-203">子ノードを含めて、ドキュメント ノードのクローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-203">Clones the document node, including any child nodes.</span></span>|  
|<span data-ttu-id="6dbb6-204">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="6dbb6-204">DocumentFragment</span></span>|<span data-ttu-id="6dbb6-205">子ノードを含めて、ドキュメント フラグメント ノードのクローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-205">Clones the document fragment node, including any child nodes.</span></span>|  
|<span data-ttu-id="6dbb6-206">DocumentType</span><span class="sxs-lookup"><span data-stu-id="6dbb6-206">DocumentType</span></span>|<span data-ttu-id="6dbb6-207">ドキュメント型ノードのクローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-207">Clones the document type node.</span></span>|  
|<span data-ttu-id="6dbb6-208">要素</span><span class="sxs-lookup"><span data-stu-id="6dbb6-208">Element</span></span>|<span data-ttu-id="6dbb6-209">要素ノード、その属性、および子ノードのクローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-209">Clones the element node, its attributes, and any child nodes.</span></span>|  
|<span data-ttu-id="6dbb6-210">エンティティ</span><span class="sxs-lookup"><span data-stu-id="6dbb6-210">Entity</span></span>|<span data-ttu-id="6dbb6-211">エンティティ ノードのクローンは作成できません。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-211">Entity nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="6dbb6-212">EntityReference</span><span class="sxs-lookup"><span data-stu-id="6dbb6-212">EntityReference</span></span>|<span data-ttu-id="6dbb6-213">エンティティ参照ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-213">Clones the entity reference node.</span></span> <span data-ttu-id="6dbb6-214">置換テキストは含まれません。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-214">The replacement text is not included.</span></span>|  
|<span data-ttu-id="6dbb6-215">Notation</span><span class="sxs-lookup"><span data-stu-id="6dbb6-215">Notation</span></span>|<span data-ttu-id="6dbb6-216">表記ノードのクローンは作成できません。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-216">Notation nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="6dbb6-217">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="6dbb6-217">ProcessingInstruction</span></span>|<span data-ttu-id="6dbb6-218">そのターゲットとデータを含む、処理命令ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-218">Clones the processing instruction node, including its target and data.</span></span>|  
|<span data-ttu-id="6dbb6-219">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="6dbb6-219">SignificantWhitespace</span></span>|<span data-ttu-id="6dbb6-220">データ値を含めて、有意の空白ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-220">Clones the significant white space node, including its data value.</span></span>|  
|<span data-ttu-id="6dbb6-221">テキスト</span><span class="sxs-lookup"><span data-stu-id="6dbb6-221">Text</span></span>|<span data-ttu-id="6dbb6-222">データ値を含めて、テキスト ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-222">Clones the text node, including its data value.</span></span>|  
|<span data-ttu-id="6dbb6-223">Whitespace</span><span class="sxs-lookup"><span data-stu-id="6dbb6-223">Whitespace</span></span>|<span data-ttu-id="6dbb6-224">データ値を含めて、空白ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-224">Clones the white space node, including its data value.</span></span>|  
|<span data-ttu-id="6dbb6-225">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="6dbb6-225">XmlDeclaration</span></span>|<span data-ttu-id="6dbb6-226">データ値を含めて、XmlDeclaration ノードのクローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-226">Clones the XmlDeclaration node, including its data value.</span></span>|  
|<span data-ttu-id="6dbb6-227">その他のすべてのノード型。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-227">All other node types.</span></span>|<span data-ttu-id="6dbb6-228">これらのノード型を複製することはできません。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-228">These node types cannot be cloned.</span></span>|  
  
 <span data-ttu-id="6dbb6-229">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-229">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-230">次の例では、XML ドキュメントのルート ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-230">The following example clones the root node of the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.Clone Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.Clone Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.Clone Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.Clone Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.Clone Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.Clone Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNode.CloneNode(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberSignature Language="F#" Value="abstract member CloneNode : bool -&gt; System.Xml.XmlNode" Usage="xmlNode.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">
          <span data-ttu-id="6dbb6-231">指定したノードの下にあるサブツリーのクローンを順次作成していく場合は <see langword="true" />。指定したノードだけのクローンを作成する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-231">
              <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dbb6-232">派生クラスでオーバーライドされた場合は、ノードの複製を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-232">Creates a duplicate of the node, when overridden in a derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dbb6-233">クローンとして作成されたノード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-233">The cloned node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-234">このメソッドは、ノードのコピー コンス トラクターとして機能します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-234">This method serves as a copy constructor for nodes.</span></span> <span data-ttu-id="6dbb6-235">重複するノードが親を持たない (<xref:System.Xml.XmlNode.ParentNode%2A>返します`null`)。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-235">The duplicate node has no parent (<xref:System.Xml.XmlNode.ParentNode%2A> returns `null`).</span></span>  
  
 <span data-ttu-id="6dbb6-236">次の表は、それぞれ固有の動作を示します<xref:System.Xml.XmlNodeType>します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-236">The following table describes the specific behavior for each <xref:System.Xml.XmlNodeType>.</span></span>  
  
|<span data-ttu-id="6dbb6-237">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="6dbb6-237">XmlNodeType</span></span>|<span data-ttu-id="6dbb6-238">CloneNode(true)</span><span class="sxs-lookup"><span data-stu-id="6dbb6-238">CloneNode(true)</span></span>|<span data-ttu-id="6dbb6-239">CloneNode(false)</span><span class="sxs-lookup"><span data-stu-id="6dbb6-239">CloneNode(false)</span></span>|  
|-----------------|-----------------------|------------------------|  
|<span data-ttu-id="6dbb6-240">属性</span><span class="sxs-lookup"><span data-stu-id="6dbb6-240">Attribute</span></span>|<span data-ttu-id="6dbb6-241">子ノードを含む、属性ノードのクローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-241">Clones the attribute node, including child nodes.</span></span>|<span data-ttu-id="6dbb6-242">子ノードを含む、属性ノードのクローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-242">Clones the attribute node, including child nodes.</span></span>|  
|<span data-ttu-id="6dbb6-243">CData</span><span class="sxs-lookup"><span data-stu-id="6dbb6-243">CData</span></span>|<span data-ttu-id="6dbb6-244">そのデータの内容を含む CData ノードのクローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-244">Clones the CData node, including its data content.</span></span>|<span data-ttu-id="6dbb6-245">そのデータの内容を含む CData ノードのクローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-245">Clones the CData node, including its data content.</span></span>|  
|<span data-ttu-id="6dbb6-246">コメント</span><span class="sxs-lookup"><span data-stu-id="6dbb6-246">Comment</span></span>|<span data-ttu-id="6dbb6-247">そのテキスト コンテンツを含む、コメント ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-247">Clones the comment node, including its text content.</span></span>|<span data-ttu-id="6dbb6-248">そのテキスト コンテンツを含む、コメント ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-248">Clones the comment node, including its text content.</span></span>|  
|<span data-ttu-id="6dbb6-249">ドキュメント</span><span class="sxs-lookup"><span data-stu-id="6dbb6-249">Document</span></span>|<span data-ttu-id="6dbb6-250">子ノードを含めて、ドキュメント ノードのクローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-250">Clones the document node, including any child nodes.</span></span>|<span data-ttu-id="6dbb6-251">ドキュメント ノードのクローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-251">Clones the document node.</span></span>|  
|<span data-ttu-id="6dbb6-252">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="6dbb6-252">DocumentFragment</span></span>|<span data-ttu-id="6dbb6-253">子ノードを含めて、ドキュメント フラグメント ノードのクローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-253">Clones the document fragment node, including any child nodes.</span></span>|<span data-ttu-id="6dbb6-254">ドキュメント フラグメント ノードのクローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-254">Clones the document fragment node.</span></span>|  
|<span data-ttu-id="6dbb6-255">DocumentType</span><span class="sxs-lookup"><span data-stu-id="6dbb6-255">DocumentType</span></span>|<span data-ttu-id="6dbb6-256">ドキュメント型ノードのクローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-256">Clones the document type node.</span></span>|<span data-ttu-id="6dbb6-257">ドキュメント型ノードのクローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-257">Clones the document type node.</span></span>|  
|<span data-ttu-id="6dbb6-258">要素</span><span class="sxs-lookup"><span data-stu-id="6dbb6-258">Element</span></span>|<span data-ttu-id="6dbb6-259">要素ノード、その属性、および子ノードのクローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-259">Clones the element node, its attributes, and any child nodes.</span></span>|<span data-ttu-id="6dbb6-260">要素ノードとその属性は、既定の属性を含むクローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-260">Clones the element node and its attributes, including any default attributes.</span></span>|  
|<span data-ttu-id="6dbb6-261">エンティティ</span><span class="sxs-lookup"><span data-stu-id="6dbb6-261">Entity</span></span>|<span data-ttu-id="6dbb6-262">エンティティ ノードのクローンは作成できません。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-262">Entity nodes cannot be cloned.</span></span>|<span data-ttu-id="6dbb6-263">エンティティ ノードのクローンは作成できません。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-263">Entity nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="6dbb6-264">EntityReference</span><span class="sxs-lookup"><span data-stu-id="6dbb6-264">EntityReference</span></span>|<span data-ttu-id="6dbb6-265">エンティティ参照ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-265">Clones the entity reference node.</span></span> <span data-ttu-id="6dbb6-266">置換テキストは含まれません。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-266">The replacement text is not included.</span></span>|<span data-ttu-id="6dbb6-267">エンティティ参照ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-267">Clones the entity reference node.</span></span> <span data-ttu-id="6dbb6-268">置換テキストは含まれません。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-268">The replacement text is not included.</span></span>|  
|<span data-ttu-id="6dbb6-269">Notation</span><span class="sxs-lookup"><span data-stu-id="6dbb6-269">Notation</span></span>|<span data-ttu-id="6dbb6-270">表記ノードのクローンは作成できません。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-270">Notation nodes cannot be cloned.</span></span>|<span data-ttu-id="6dbb6-271">表記ノードのクローンは作成できません。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-271">Notation nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="6dbb6-272">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="6dbb6-272">ProcessingInstruction</span></span>|<span data-ttu-id="6dbb6-273">そのターゲットとデータを含む、処理命令ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-273">Clones the processing instruction node, including its target and data.</span></span>|<span data-ttu-id="6dbb6-274">そのターゲットとデータを含む、処理命令ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-274">Clones the processing instruction node, including its target and data.</span></span>|  
|<span data-ttu-id="6dbb6-275">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="6dbb6-275">SignificantWhitespace</span></span>|<span data-ttu-id="6dbb6-276">データ値を含めて、有意の空白ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-276">Clones the significant white space node, including its data value.</span></span>|<span data-ttu-id="6dbb6-277">データ値を含めて、有意の空白ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-277">Clones the significant white space node, including its data value.</span></span>|  
|<span data-ttu-id="6dbb6-278">テキスト</span><span class="sxs-lookup"><span data-stu-id="6dbb6-278">Text</span></span>|<span data-ttu-id="6dbb6-279">データ値を含めて、テキスト ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-279">Clones the text node, including its data value.</span></span>|<span data-ttu-id="6dbb6-280">データ値を含めて、テキスト ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-280">Clones the text node, including its data value.</span></span>|  
|<span data-ttu-id="6dbb6-281">Whitespace</span><span class="sxs-lookup"><span data-stu-id="6dbb6-281">Whitespace</span></span>|<span data-ttu-id="6dbb6-282">データ値を含めて、空白ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-282">Clones the white space node, including its data value.</span></span>|<span data-ttu-id="6dbb6-283">データ値を含めて、空白ノードを複製します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-283">Clones the white space node, including its data value.</span></span>|  
|<span data-ttu-id="6dbb6-284">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="6dbb6-284">XmlDeclaration</span></span>|<span data-ttu-id="6dbb6-285">データ値を含めて、XmlDeclaration ノードのクローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-285">Clones the XmlDeclaration node, including its data value.</span></span>|<span data-ttu-id="6dbb6-286">データ値を含めて、XmlDeclaration ノードのクローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-286">Clones the XmlDeclaration node, including its data value.</span></span>|  
|<span data-ttu-id="6dbb6-287">その他のすべてのノード型。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-287">All other node types.</span></span>|<span data-ttu-id="6dbb6-288">これらのノード型を複製することはできません。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-288">These node types cannot be cloned.</span></span>|<span data-ttu-id="6dbb6-289">これらのノード型を複製することはできません。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-289">These node types cannot be cloned.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-290">次の例では、deep および shallow 複製の違いを示します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-290">The following example shows the difference between a deep and shallow clone.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.CloneNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.CloneNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.CloneNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.CloneNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.CloneNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.CloneNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6dbb6-291">クローンを作成できないノード型でこのメソッドを呼び出しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-291">Calling this method on a node type that cannot be cloned.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNavigator CreateNavigator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.CreateNavigator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNavigator () As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNavigator ^ CreateNavigator();" />
      <MemberSignature Language="F#" Value="abstract member CreateNavigator : unit -&gt; System.Xml.XPath.XPathNavigator&#xA;override this.CreateNavigator : unit -&gt; System.Xml.XPath.XPathNavigator" Usage="xmlNode.CreateNavigator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.XPath.IXPathNavigable.CreateNavigator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-292">このオブジェクト内を移動するための <see cref="T:System.Xml.XPath.XPathNavigator" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-292">Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> for navigating this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dbb6-293">ノードに移動するために使用される <see langword="XPathNavigator" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-293">An <see langword="XPathNavigator" /> object used to navigate the node.</span>
          </span>
          <span data-ttu-id="6dbb6-294">
            <see langword="XPathNavigator" /> は、メソッドの呼び出し元のノードに配置されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-294">The <see langword="XPathNavigator" /> is positioned on the node from which the method was called.</span>
          </span>
          <span data-ttu-id="6dbb6-295">ドキュメントのルートには配置されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-295">It is not positioned on the root of the document.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-296">`XPathNavigator`データへの読み取り専用のランダム アクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-296">The `XPathNavigator` provides read-only, random access to data.</span></span> <span data-ttu-id="6dbb6-297">XSLT 変換用に最適化された、入力メカニズムとして使用するとパフォーマンス上の利点を提供します、<xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-297">Because it is optimized for XSLT transformations, it provides performance benefits when used as an input mechanism to the <xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="6dbb6-298">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-298">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-299">次の例では、読み込みを XSLT 変換を実行する前に XML ドキュメントを編集します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-299">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Xsl.XslTransform" />
      </Docs>
    </Member>
    <Member MemberName="FirstChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode FirstChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode FirstChild" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.FirstChild" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FirstChild As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ FirstChild { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstChild : System.Xml.XmlNode" Usage="System.Xml.XmlNode.FirstChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-300">ノードの最初の子を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-300">Gets the first child of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dbb6-301">ノードの最初の子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-301">The first child of the node.</span>
          </span>
          <span data-ttu-id="6dbb6-302">そのようなノードがない場合は、<see langword="null" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-302">If there is no such node, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-303">子ノードについては、次を参照してください、 [(コア) の W3C DOM Level 1 の仕様。](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="6dbb6-303">For information about child nodes, see the [W3C DOM (Core) Level 1 specification](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-304">次の例では、title 要素が表示されます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-304">The following example displays the title element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.FirstChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.FirstChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.FirstChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.FirstChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.FirstChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.FirstChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="xmlNode.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-305">現在のノード内の子ノードを反復処理する列挙子を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-305">Get an enumerator that iterates through the child nodes in the current node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dbb6-306">現在のノードの子ノードを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-306">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the child nodes in the current node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-307">"For each"スタイルのサポートを提供します。 内のノードに対する反復処理、`XmlNode`します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-307">Provides support for the "for each" style iteration over the nodes in the `XmlNode`.</span></span>  
  
 <span data-ttu-id="6dbb6-308">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-308">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-309">次の例では、XML ドキュメントですべてのブックが表示されます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-309">The following example displays all the books in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/VB/source.vb#1)]  
  
 <span data-ttu-id="6dbb6-310">例では、ファイルを使用して`books.xml`、入力として。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-310">The example uses the file, `books.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.GetEnumerator Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamespaceOfPrefix">
      <MemberSignature Language="C#" Value="public virtual string GetNamespaceOfPrefix (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetNamespaceOfPrefix(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespaceOfPrefix (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetNamespaceOfPrefix(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="abstract member GetNamespaceOfPrefix : string -&gt; string&#xA;override this.GetNamespaceOfPrefix : string -&gt; string" Usage="xmlNode.GetNamespaceOfPrefix prefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="6dbb6-311">検索対象の名前空間 URI を持つプレフィックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-311">The prefix whose namespace URI you want to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dbb6-312">現在のノードのスコープ内にある指定したプレフィックスに対する最も近い **xmlns** 宣言を検索し、宣言内の名前空間 URI を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-312">Looks up the closest **xmlns** declaration for the given prefix that is in scope for the current node and returns the namespace URI in the declaration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dbb6-313">指定したプリフィックスの名前空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-313">The namespace URI of the specified prefix.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-314">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-314">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-315">次の例では、XML ドキュメントに新しい属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-315">The following example adds a new attribute to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrefixOfNamespace">
      <MemberSignature Language="C#" Value="public virtual string GetPrefixOfNamespace (string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPrefixOfNamespace(string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrefixOfNamespace (namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPrefixOfNamespace(System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member GetPrefixOfNamespace : string -&gt; string&#xA;override this.GetPrefixOfNamespace : string -&gt; string" Usage="xmlNode.GetPrefixOfNamespace namespaceURI" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceURI">
          <span data-ttu-id="6dbb6-316">検索対象のプリフィックスを持つ名前空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-316">The namespace URI whose prefix you want to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dbb6-317">現在のノードのスコープ内にある指定した名前空間 URI に対する最も近い **xmlns** 宣言を検索し、宣言で定義されているプレフィックスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-317">Looks up the closest **xmlns** declaration for the given namespace URI that is in scope for the current node and returns the prefix defined in that declaration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dbb6-318">指定した名前空間 URI のプリフィックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-318">The prefix for the specified namespace URI.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-319">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-319">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-320">次の例では、XML ドキュメントに新しい要素を追加します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-320">The following example adds a new element to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetPrefixOfNamespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetPrefixOfNamespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetPrefixOfNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetPrefixOfNamespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetPrefixOfNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetPrefixOfNamespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChildNodes">
      <MemberSignature Language="C#" Value="public virtual bool HasChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.HasChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasChildNodes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasChildNodes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChildNodes : bool" Usage="System.Xml.XmlNode.HasChildNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-321">このノードに子ノードがあるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-321">Gets a value indicating whether this node has any child nodes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dbb6-322">ノードが子ノードを持っている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-322">
              <see langword="true" /> if the node has child nodes; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-323">子ノードについては、次を参照してください、 [(コア) の W3C DOM Level 1 の仕様。](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="6dbb6-323">For information about child nodes, see the [W3C DOM (Core) Level 1 specification](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-324">次の例では、ルート要素のすべての子ノードが表示されます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-324">The following example displays all the child nodes of the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public virtual string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerText : string with get, set" Usage="System.Xml.XmlNode.InnerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-325">ノードとそのすべての子の連結された値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-325">Gets or sets the concatenated values of the node and all its child nodes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dbb6-326">ノードとそのすべての子の連結された値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-326">The concatenated values of the node and all its child nodes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-327">このプロパティを設定すると、すべての子ノードを指定した文字列の解析済みの内容に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-327">Setting this property replaces all the child nodes with the parsed contents of the given string.</span></span>  
  
 <span data-ttu-id="6dbb6-328">リーフ ノードの`InnerText`と同じコンテンツを返します、<xref:System.Xml.XmlNode.Value%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-328">For leaf nodes, `InnerText` returns the same content as the <xref:System.Xml.XmlNode.Value%2A> property.</span></span>  
  
 <span data-ttu-id="6dbb6-329">このプロパティは、ドキュメント オブジェクト モデル (DOM) の Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-329">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-330">次の例では、比較、`InnerText`と<xref:System.Xml.XmlNode.InnerXml%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-330">The following example compares the `InnerText` and <xref:System.Xml.XmlNode.InnerXml%2A> properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/VB/source.vb#1)]  
  
 <span data-ttu-id="6dbb6-331">**出力:**</span><span class="sxs-lookup"><span data-stu-id="6dbb6-331">**Output:**</span></span>  
  
```  
Display the InnerText of the element...  
some textmore text  
Display the InnerXml of the element...  
some text<child />more text  
<elem>Text containing &lt;markup/&gt; will have char(&lt;) and char(&gt;) escape  
d.</elem>  
<elem>Text containing <markup />.</elem>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public virtual string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.InnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerXml : string with get, set" Usage="System.Xml.XmlNode.InnerXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-332">このノードの子ノードだけを表すマークアップを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-332">Gets or sets the markup representing only the child nodes of this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dbb6-333">このノードの子ノードのマークアップ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-333">The markup of the child nodes of this node.</span>
          </span>
          <span data-ttu-id="6dbb6-334">
            <block subset="none" type="note">
              <para>
                <see langword="InnerXml" /> 既定の属性は返されません。  </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-334">
              <block subset="none" type="note">
                <para>
                  <see langword="InnerXml" /> does not return default attributes.  </para>
              </block>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-335">子ノードを持つことができないノードからこのプロパティを設定しようとすると、たとえばテキスト ノードでは、例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-335">Attempting to set this property from a node that cannot have child nodes, for example a Text node, throws an exception.</span></span> <span data-ttu-id="6dbb6-336">それ以外の場合、設定`InnerXml`ノードの子ノードを指定した文字列の解析された内容に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-336">Otherwise, setting `InnerXml` replaces the child nodes, of the node, with the parsed contents of the given string.</span></span> <span data-ttu-id="6dbb6-337">文字列の解析は、現在の名前空間コンテキストで実行されます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-337">The parsing is done in the current namespace context.</span></span>  
  
 <span data-ttu-id="6dbb6-338">このプロパティは、ドキュメント オブジェクト モデル (DOM) の Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-338">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6dbb6-339">`InnerXml` DOM を変更する効率的な方法ではありません。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-339">`InnerXml` is not an efficient way to modify the DOM.</span></span> <span data-ttu-id="6dbb6-340">複雑なノードを置き換えることのパフォーマンスの問題があります。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-340">There may be performance issues when replacing complex nodes.</span></span> <span data-ttu-id="6dbb6-341">ノードを作成してなどのメソッドを使用する方が効率的です`InsertBefore`、 `InsertAfter`、 `AppendChild`、および`RemoveChild`Xml ドキュメントを変更します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-341">It is more efficient to construct nodes and use methods such as `InsertBefore`, `InsertAfter`, `AppendChild`, and `RemoveChild` to modify the Xml document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-342">次の例では、比較、<xref:System.Xml.XmlNode.InnerText%2A>と`InnerXml`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-342">The following example compares the <xref:System.Xml.XmlNode.InnerText%2A> and `InnerXml` properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6dbb6-343">子ノードを持つことができないノードでこのプロパティを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-343">Setting this property on a node that cannot have child nodes.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="6dbb6-344">このプロパティの設定時に指定される XML は、整形式ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-344">The XML specified when setting this property is not well-formed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode InsertAfter (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode InsertAfter(class System.Xml.XmlNode newChild, class System.Xml.XmlNode refChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertAfter (newChild As XmlNode, refChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ InsertAfter(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ refChild);" />
      <MemberSignature Language="F#" Value="abstract member InsertAfter : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.InsertAfter : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.InsertAfter (newChild, refChild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="refChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">
          <span data-ttu-id="6dbb6-345">挿入する <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-345">The <see langword="XmlNode" /> to insert.</span>
          </span>
        </param>
        <param name="refChild">
          <span data-ttu-id="6dbb6-346">参照ノードである <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-346">The <see langword="XmlNode" /> that is the reference node.</span>
          </span>
          <span data-ttu-id="6dbb6-347">
            <c>newNode</c> は <c>refNode</c> の後に配置されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-347">The <c>newNode</c> is placed after the <c>refNode</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dbb6-348">指定したノードを指定した参照ノードの直後に挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-348">Inserts the specified node immediately after the specified reference node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dbb6-349">挿入されるノード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-349">The node being inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-350">場合`refChild`は`null`、挿入`newChild`子ノードのリストの先頭にします。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-350">If `refChild` is `null`, insert `newChild` at the beginning of the list of child nodes.</span></span> <span data-ttu-id="6dbb6-351">すべての内容、`newChild`を挿入して、同じ順序で後`refChild`します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-351">All the contents of the `newChild` are inserted, in the same order, after `refChild`.</span></span> <span data-ttu-id="6dbb6-352">場合、`newChild`は、ツリーに既に存在元の位置から削除され先の位置に追加します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-352">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="6dbb6-353">ノードの挿入の詳細については、次を参照してください。 [XML ドキュメントにノードの挿入](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-353">For more information about inserting nodes, see [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="6dbb6-354">挿入されるノードが別のドキュメントから作成された場合を使用できます<xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType>を現在のドキュメントにノードをインポートします。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-354">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="6dbb6-355">インポートされたノードは、現在のドキュメントに挿入できます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-355">The imported node can then be inserted into the current document.</span></span>  
  
 <span data-ttu-id="6dbb6-356">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-356">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-357">次の例では、XML ドキュメントに新しいノードを追加します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-357">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InsertAfter Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InsertAfter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InsertAfter Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InsertAfter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InsertAfter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InsertAfter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6dbb6-358">このノードは、<paramref name="newChild" /> ノードの型の子ノードが許可されない型です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-358">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span>
          </span>
          <span data-ttu-id="6dbb6-359">
            <paramref name="newChild" /> がこのノードの先祖です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-359">The <paramref name="newChild" /> is an ancestor of this node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6dbb6-360">
            <paramref name="newChild" /> は、このノードを作成したドキュメントとは異なるドキュメントから作成されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-360">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="6dbb6-361">
            <paramref name="refChild" /> がこのノードの子ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-361">The <paramref name="refChild" /> is not a child of this node.</span>
          </span>
          <span data-ttu-id="6dbb6-362">このノードは読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-362">This node is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="6dbb6-363">
            <para>オーバーライドするときに<see langword="InsertAfter" />、派生クラスで正しく、発生するイベントの順序で呼び出す必要があります、<see langword="InsertAfter" />基本クラスのメソッド。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-363">
              <para>When overriding <see langword="InsertAfter" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="InsertAfter" /> method of the base class.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode InsertBefore (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode InsertBefore(class System.Xml.XmlNode newChild, class System.Xml.XmlNode refChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertBefore (newChild As XmlNode, refChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ InsertBefore(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ refChild);" />
      <MemberSignature Language="F#" Value="abstract member InsertBefore : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.InsertBefore : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.InsertBefore (newChild, refChild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="refChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">
          <span data-ttu-id="6dbb6-364">挿入する <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-364">The <see langword="XmlNode" /> to insert.</span>
          </span>
        </param>
        <param name="refChild">
          <span data-ttu-id="6dbb6-365">参照ノードである <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-365">The <see langword="XmlNode" /> that is the reference node.</span>
          </span>
          <span data-ttu-id="6dbb6-366">
            <c>newChild</c> は、このノードの前に配置されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-366">The <c>newChild</c> is placed before this node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dbb6-367">指定したノードを指定した参照ノードの直前に挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-367">Inserts the specified node immediately before the specified reference node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dbb6-368">挿入されるノード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-368">The node being inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-369">場合`refChild`は`null`、挿入`newChild`子ノードのリストの末尾。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-369">If `refChild` is `null`, insert `newChild` at the end of the list of child nodes.</span></span> <span data-ttu-id="6dbb6-370">すべての内容、`newChild`を挿入して、同じ順序で前に`refChild`します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-370">All the contents of the `newChild` are inserted, in the same order, before `refChild`.</span></span> <span data-ttu-id="6dbb6-371">場合、`newChild`は、ツリーに既に存在元の位置から削除され先の位置に追加します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-371">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="6dbb6-372">ノードの挿入の詳細については、次を参照してください。 [XML ドキュメントにノードの挿入](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-372">For more information about inserting nodes, see [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="6dbb6-373">挿入されるノードが別のドキュメントから作成された場合を使用できます<xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType>を現在のドキュメントにノードをインポートします。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-373">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="6dbb6-374">インポートされたノードは、現在のドキュメントに挿入できます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-374">The imported node can then be inserted into the current document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-375">次の例では、XML ドキュメントに新しいノードを追加します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-375">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InsertBefore Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InsertBefore Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InsertBefore Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InsertBefore Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InsertBefore Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InsertBefore Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6dbb6-376">現在のノードは、<paramref name="newChild" /> ノードの型の子ノードが許可されない型です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-376">The current node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span>
          </span>
          <span data-ttu-id="6dbb6-377">
            <paramref name="newChild" /> がこのノードの先祖です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-377">The <paramref name="newChild" /> is an ancestor of this node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6dbb6-378">
            <paramref name="newChild" /> は、このノードを作成したドキュメントとは異なるドキュメントから作成されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-378">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="6dbb6-379">
            <paramref name="refChild" /> がこのノードの子ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-379">The <paramref name="refChild" /> is not a child of this node.</span>
          </span>
          <span data-ttu-id="6dbb6-380">このノードは読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-380">This node is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="6dbb6-381">
            <para>オーバーライドするときに<see langword="InsertBefore" />、派生クラスで正しく、発生するイベントの順序で呼び出す必要があります、<see langword="InsertBefore" />基本クラスのメソッド。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-381">
              <para>When overriding <see langword="InsertBefore" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="InsertBefore" /> method of the base class.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Xml.XmlNode.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-382">ノードが読み取り専用かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-382">Gets a value indicating whether the node is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dbb6-383">ノードが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-383">
              <see langword="true" /> if the node is read-only; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-384">読み取り専用のノードでは、プロパティ、属性、または子ノードを持つを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-384">A read-only node is one whose properties, attributes, or child nodes cannot be changed.</span></span> <span data-ttu-id="6dbb6-385">読み取り専用のノードをツリーから削除し、他の場所に挿入できます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-385">You can remove a read-only node from the tree and insert it somewhere else.</span></span> <span data-ttu-id="6dbb6-386">たとえば、エンティティ ノードは常に読み取り専用にします。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-386">For example, Entity nodes are always read-only.</span></span>  
  
 <span data-ttu-id="6dbb6-387">このプロパティは、ドキュメント オブジェクト モデル (DOM) の Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-387">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-388">指定した子要素を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-388">Gets the specified child element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(name As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlElement ^ default[System::String ^] { System::Xml::XmlElement ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Xml.XmlElement" Usage="System.Xml.XmlNode.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="6dbb6-389">取得する要素の限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-389">The qualified name of the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dbb6-390">指定した <see cref="P:System.Xml.XmlNode.Name" /> の最初の子要素を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-390">Gets the first child element with the specified <see cref="P:System.Xml.XmlNode.Name" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dbb6-391">指定した名前と一致する最初の <see cref="T:System.Xml.XmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-391">The first <see cref="T:System.Xml.XmlElement" /> that matches the specified name.</span>
          </span>
          <span data-ttu-id="6dbb6-392">一致するものがない場合は、null 参照 (Visual Basic の場合は <see langword="Nothing" />) が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-392">It returns a null reference (<see langword="Nothing" /> in Visual Basic) if there is no match.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-393">このプロパティは、ドキュメント オブジェクト モデル (DOM) の Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-393">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-394">次の例では、title 要素が表示されます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-394">The following example displays the title element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.this Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.this Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement this[string localname, string ns] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement Item(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Item(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(localname As String, ns As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlElement ^ default[System::String ^, System::String ^] { System::Xml::XmlElement ^ get(System::String ^ localname, System::String ^ ns); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * string) : System.Xml.XmlElement" Usage="System.Xml.XmlNode.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localname" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localname">
          <span data-ttu-id="6dbb6-395">要素のローカル名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-395">The local name of the element.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="6dbb6-396">要素の名前空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-396">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dbb6-397">指定した <see cref="P:System.Xml.XmlNode.LocalName" /> および <see cref="P:System.Xml.XmlNode.NamespaceURI" /> の最初の子要素を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-397">Gets the first child element with the specified <see cref="P:System.Xml.XmlNode.LocalName" /> and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dbb6-398">
            <paramref name="localname" /> および <paramref name="ns" /> が一致する最初の <see cref="T:System.Xml.XmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-398">The first <see cref="T:System.Xml.XmlElement" /> with the matching <paramref name="localname" /> and <paramref name="ns" />.</span>
          </span>
          <span data-ttu-id="6dbb6-399">である必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-399">.</span>
          </span>
          <span data-ttu-id="6dbb6-400">一致するものがない場合は、null 参照 (Visual Basic の場合は <see langword="Nothing" />) が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-400">It returns a null reference (<see langword="Nothing" /> in Visual Basic) if there is no match.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-401">このプロパティは、ドキュメント オブジェクト モデル (DOM) の Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-401">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode LastChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode LastChild" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.LastChild" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LastChild As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ LastChild { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LastChild : System.Xml.XmlNode" Usage="System.Xml.XmlNode.LastChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-402">ノードの最後の子を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-402">Gets the last child of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dbb6-403">ノードの最後の子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-403">The last child of the node.</span>
          </span>
          <span data-ttu-id="6dbb6-404">そのようなノードがない場合は、<see langword="null" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-404">If there is no such node, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6dbb6-405">次の例では、価格の要素が表示されます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-405">The following example displays the price element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public abstract string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlNode.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-406">派生クラスでオーバーライドされた場合は、ノードのローカル名を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-406">Gets the local name of the node, when overridden in a derived class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dbb6-407">プリフィックスが削除されたノードの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-407">The name of the node with the prefix removed.</span>
          </span>
          <span data-ttu-id="6dbb6-408">たとえば、<see langword="LocalName" />要素の書籍は&lt;bk:book&gt;します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-408">For example, <see langword="LocalName" /> is book for the element &lt;bk:book&gt;.</span>
          </span>
          <span data-ttu-id="6dbb6-409">返される名前は、ノードの <see cref="P:System.Xml.XmlNode.NodeType" /> によって異なります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-409">The name returned is dependent on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node:</span>
          </span>
          <span data-ttu-id="6dbb6-410">
            <list type="table">
              <listheader>
                <term> 型</term>
                <description>名前</description>
              </listheader>
              <item>
                <term>属性</term>
                <description>属性のローカル名。</description>
              </item>
              <item>
                <term> CDATA </term>
                <description> # の cdata セクション</description>
              </item>
              <item>
                <term>コメント</term>
                <description> #comment </description>
              </item>
              <item>
                <term>ドキュメント</term>
                <description> #document </description>
              </item>
              <item>
                <term> DocumentFragment </term>
                <description> # の document フラグメント</description>
              </item>
              <item>
                <term> DocumentType </term>
                <description>ドキュメント型の名前。</description>
              </item>
              <item>
                <term> 要素</term>
                <description>要素のローカル名。</description>
              </item>
              <item>
                <term> エンティティ</term>
                <description>エンティティの名前。</description>
              </item>
              <item>
                <term> EntityReference </term>
                <description>参照されるエンティティの名前。</description>
              </item>
              <item>
                <term> Notation </term>
                <description>表記名。</description>
              </item>
              <item>
                <term> ProcessingInstruction </term>
                <description>処理命令のターゲット。</description>
              </item>
              <item>
                <term> テキスト</term>
                <description> #text </description>
              </item>
              <item>
                <term>空白</term>
                <description> #whitespace </description>
              </item>
              <item>
                <term>SignificantWhitespace </term>
                <description>空白 #significant </description>
              </item>
              <item>
                <term> XmlDeclaration </term>
                <description> # の xml 宣言  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-410">
              <list type="table">
                <listheader>
                  <term> Type  </term>
                  <description> Name  </description>
                </listheader>
                <item>
                  <term> Attribute  </term>
                  <description> The local name of the attribute.  </description>
                </item>
                <item>
                  <term> CDATA  </term>
                  <description> #cdata-section  </description>
                </item>
                <item>
                  <term> Comment  </term>
                  <description> #comment  </description>
                </item>
                <item>
                  <term> Document  </term>
                  <description> #document  </description>
                </item>
                <item>
                  <term> DocumentFragment  </term>
                  <description> #document-fragment  </description>
                </item>
                <item>
                  <term> DocumentType  </term>
                  <description> The document type name.  </description>
                </item>
                <item>
                  <term> Element  </term>
                  <description> The local name of the element.  </description>
                </item>
                <item>
                  <term> Entity  </term>
                  <description> The name of the entity.  </description>
                </item>
                <item>
                  <term> EntityReference  </term>
                  <description> The name of the entity referenced.  </description>
                </item>
                <item>
                  <term> Notation  </term>
                  <description> The notation name.  </description>
                </item>
                <item>
                  <term> ProcessingInstruction  </term>
                  <description> The target of the processing instruction.  </description>
                </item>
                <item>
                  <term> Text  </term>
                  <description> #text  </description>
                </item>
                <item>
                  <term> Whitespace  </term>
                  <description> #whitespace  </description>
                </item>
                <item>
                  <term> SignificantWhitespace  </term>
                  <description> #significant-whitespace  </description>
                </item>
                <item>
                  <term> XmlDeclaration  </term>
                  <description> #xml-declaration  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-411">LocalName が同じノードには、プレフィックスがない、<xref:System.Xml.XmlNode.Name%2A>します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-411">If the node does not have a prefix, LocalName is the same as <xref:System.Xml.XmlNode.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlNode.Prefix" />
        <altmember cref="P:System.Xml.XmlNode.Name" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlNode.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-412">派生クラスでオーバーライドされた場合は、ノードの修飾名を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-412">Gets the qualified name of the node, when overridden in a derived class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dbb6-413">ノードの限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-413">The qualified name of the node.</span>
          </span>
          <span data-ttu-id="6dbb6-414">返される名前は、ノードの <see cref="P:System.Xml.XmlNode.NodeType" /> によって異なります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-414">The name returned is dependent on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node:</span>
          </span>
          <span data-ttu-id="6dbb6-415">
            <list type="table">
              <listheader>
                <term> 型</term>
                <description>名前</description>
              </listheader>
              <item>
                <term>属性</term>
                <description>属性の修飾名。</description>
              </item>
              <item>
                <term> CDATA </term>
                <description> # の cdata セクション</description>
              </item>
              <item>
                <term>コメント</term>
                <description> #comment </description>
              </item>
              <item>
                <term>ドキュメント</term>
                <description> #document </description>
              </item>
              <item>
                <term> DocumentFragment </term>
                <description> # の document フラグメント</description>
              </item>
              <item>
                <term> DocumentType </term>
                <description>ドキュメント型の名前。</description>
              </item>
              <item>
                <term> 要素</term>
                <description>要素の修飾名。</description>
              </item>
              <item>
                <term> エンティティ</term>
                <description>エンティティの名前。</description>
              </item>
              <item>
                <term> EntityReference </term>
                <description>参照されるエンティティの名前。</description>
              </item>
              <item>
                <term> Notation </term>
                <description>表記名。</description>
              </item>
              <item>
                <term> ProcessingInstruction </term>
                <description>処理命令のターゲット。</description>
              </item>
              <item>
                <term> テキスト</term>
                <description> #text </description>
              </item>
              <item>
                <term>空白</term>
                <description> #whitespace </description>
              </item>
              <item>
                <term>SignificantWhitespace </term>
                <description>空白 #significant </description>
              </item>
              <item>
                <term> XmlDeclaration </term>
                <description> # の xml 宣言  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-415">
              <list type="table">
                <listheader>
                  <term> Type  </term>
                  <description> Name  </description>
                </listheader>
                <item>
                  <term> Attribute  </term>
                  <description> The qualified name of the attribute.  </description>
                </item>
                <item>
                  <term> CDATA  </term>
                  <description> #cdata-section  </description>
                </item>
                <item>
                  <term> Comment  </term>
                  <description> #comment  </description>
                </item>
                <item>
                  <term> Document  </term>
                  <description> #document  </description>
                </item>
                <item>
                  <term> DocumentFragment  </term>
                  <description> #document-fragment  </description>
                </item>
                <item>
                  <term> DocumentType  </term>
                  <description> The document type name.  </description>
                </item>
                <item>
                  <term> Element  </term>
                  <description> The qualified name of the element.  </description>
                </item>
                <item>
                  <term> Entity  </term>
                  <description> The name of the entity.  </description>
                </item>
                <item>
                  <term> EntityReference  </term>
                  <description> The name of the entity referenced.  </description>
                </item>
                <item>
                  <term> Notation  </term>
                  <description> The notation name.  </description>
                </item>
                <item>
                  <term> ProcessingInstruction  </term>
                  <description> The target of the processing instruction.  </description>
                </item>
                <item>
                  <term> Text  </term>
                  <description> #text  </description>
                </item>
                <item>
                  <term> Whitespace  </term>
                  <description> #whitespace  </description>
                </item>
                <item>
                  <term> SignificantWhitespace  </term>
                  <description> #significant-whitespace  </description>
                </item>
                <item>
                  <term> XmlDeclaration  </term>
                  <description> #xml-declaration  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public virtual string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceURI : string" Usage="System.Xml.XmlNode.NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-416">このノードの名前空間 URI を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-416">Gets the namespace URI of this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dbb6-417">このノードの名前空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-417">The namespace URI of this node.</span>
          </span>
          <span data-ttu-id="6dbb6-418">名前空間 URI がない場合、このプロパティは String.Empty を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-418">If there is no namespace URI, this property returns String.Empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-419">これは、URI は、作成時に指定された名前空間です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-419">This is the namespace URI specified at creation time.</span></span> <span data-ttu-id="6dbb6-420">たとえば、`NamespaceURI`要素の urn: サンプル\<bk:book xmlns:bk =「urn: サンプル」></span><span class="sxs-lookup"><span data-stu-id="6dbb6-420">For example, `NamespaceURI` is urn:samples for the element \<bk:book xmlns:bk= "urn:samples"></span></span>  
  
 <span data-ttu-id="6dbb6-421">属性にアタッチされている要素からその名前空間を継承しません。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-421">An attribute does not inherit its namespace from the element it is attached to.</span></span> <span data-ttu-id="6dbb6-422">属性は、名前空間が明示的に指定しなかった場合、単に名前空間がありません。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-422">If an attribute is not explicitly given a namespace, it simply has no namespace.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSibling">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode NextSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode NextSibling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.NextSibling" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NextSibling As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ NextSibling { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextSibling : System.Xml.XmlNode" Usage="System.Xml.XmlNode.NextSibling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-423">このノードの直後のノードを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-423">Gets the node immediately following this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dbb6-424">次の <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-424">The next <see langword="XmlNode" />.</span>
          </span>
          <span data-ttu-id="6dbb6-425">次のノードがない場合は、<see langword="null" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-425">If there is no next node, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6dbb6-426">次の例では、XML ドキュメントですべてのブックが表示されます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-426">The following example displays all the books in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlNode.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-427">派生クラスでオーバーライドされている場合は、現在のノードの型を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-427">Gets the type of the current node, when overridden in a derived class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dbb6-428">
            <see cref="T:System.Xml.XmlNodeType" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-428">One of the <see cref="T:System.Xml.XmlNodeType" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-429">このプロパティを返しません、 `XmlNodeType` EndElement、EndEntity または None。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-429">This property never returns the `XmlNodeType` EndElement, EndEntity or None.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public virtual void Normalize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Normalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.Normalize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Normalize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Normalize();" />
      <MemberSignature Language="F#" Value="abstract member Normalize : unit -&gt; unit&#xA;override this.Normalize : unit -&gt; unit" Usage="xmlNode.Normalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-430">この XmlNode の一番下のサブツリーまで含め、すべての XmlText ノードをマークアップ (タグ、コメント、処理命令、CDATA セクション、およびエンティティ参照) だけが XmlText ノードを区分する "通常の" 書式にします。したがって、隣接する XmlText ノードはありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-430">Puts all XmlText nodes in the full depth of the sub-tree underneath this XmlNode into a "normal" form where only markup (that is, tags, comments, processing instructions, CDATA sections, and entity references) separates XmlText nodes, that is, there are no adjacent XmlText nodes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-431">このメソッドは、ドキュメントの DOM のビューが同じである場合に、保存してから再度読み込まれると、確実に使用できます (XPointer 参照) など特定のドキュメントのツリー構造に依存する操作が使用されるときに便利です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-431">This method can be used to ensure that the DOM view of a document is the same as if it were saved and re-loaded, and is useful when operations (such as XPointer lookups) that depend on a particular document tree structure are to be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OuterXml">
      <MemberSignature Language="C#" Value="public virtual string OuterXml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OuterXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.OuterXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OuterXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OuterXml { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OuterXml : string" Usage="System.Xml.XmlNode.OuterXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-432">このノードとそのすべての子ノードを格納しているマークアップを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-432">Gets the markup containing this node and all its child nodes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dbb6-433">このノードとそのすべての子ノードを格納しているマークアップ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-433">The markup containing this node and all its child nodes.</span>
          </span>
          <span data-ttu-id="6dbb6-434">
            <block subset="none" type="note">
              <para>
                <see langword="OuterXml" /> 既定の属性は返されません。  </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-434">
              <block subset="none" type="note">
                <para>
                  <see langword="OuterXml" /> does not return default attributes.  </para>
              </block>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-435">このプロパティは、ドキュメント オブジェクト モデル (DOM) の Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-435">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-436">次の例からの出力を比較する、<xref:System.Xml.XmlNode.InnerXml%2A>と`OuterXml`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-436">The following example compares output from the <xref:System.Xml.XmlNode.InnerXml%2A> and `OuterXml` properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.OuterXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.OuterXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.OuterXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.OuterXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.OuterXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.OuterXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerDocument">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocument OwnerDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocument OwnerDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.OwnerDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OwnerDocument As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlDocument ^ OwnerDocument { System::Xml::XmlDocument ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnerDocument : System.Xml.XmlDocument" Usage="System.Xml.XmlNode.OwnerDocument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-437">このノードが属する <see cref="T:System.Xml.XmlDocument" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-437">Gets the <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dbb6-438">このノードが属する <see cref="T:System.Xml.XmlDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-438">The <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</span>
          </span>
          <span data-ttu-id="6dbb6-439">ノードが <see cref="T:System.Xml.XmlDocument" /> (NodeType が XmlNodeType.Document と等しい) の場合、このプロパティは <see langword="null" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-439">If the node is an <see cref="T:System.Xml.XmlDocument" /> (NodeType equals XmlNodeType.Document), this property returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-440">現在のノードにノードを追加するときに使用して、<xref:System.Xml.XmlDocument>によって返される、<xref:System.Xml.XmlNode.OwnerDocument%2A>プロパティ ノードを作成します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-440">When adding nodes to the current node, use the <xref:System.Xml.XmlDocument> returned by the <xref:System.Xml.XmlNode.OwnerDocument%2A> property to create the node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-441">参照してください<xref:System.Xml.XmlElement.OwnerDocument%2A>(XmlElement クラス) で、たとえば、このプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-441">See <xref:System.Xml.XmlElement.OwnerDocument%2A> (in the XmlElement class) for an example using this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ParentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode ParentNode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.ParentNode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ParentNode As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ ParentNode { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentNode : System.Xml.XmlNode" Usage="System.Xml.XmlNode.ParentNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-442">このノードの親 (親を持つノードの場合) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-442">Gets the parent of this node (for nodes that can have parents).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dbb6-443">現在のノードの親である <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-443">The <see langword="XmlNode" /> that is the parent of the current node.</span>
          </span>
          <span data-ttu-id="6dbb6-444">ノードが作成された直後でまだツリーに追加されていない場合、またはツリーから削除された場合、親は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-444">If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6dbb6-445">他のすべてのノードについては、返される値はノードの <see cref="P:System.Xml.XmlNode.NodeType" /> によって異なります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-445">For all other nodes, the value returned depends on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node.</span>
          </span>
          <span data-ttu-id="6dbb6-446">
            <see langword="ParentNode" /> プロパティの有効な戻り値を次の表に示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-446">The following table describes the possible return values for the <see langword="ParentNode" /> property.</span>
          </span>
          <span data-ttu-id="6dbb6-447">
            <list type="table">
              <listheader>
                <term> NodeType </term>
                <description> ParentNode の戻り値</description>
              </listheader>
              <item>
                <term>属性、ドキュメント、DocumentFragment、Entity、Notation </term>
                <description>返します<see langword="null" />;これらのノードの親ではありません。</description>
              </item>
              <item>
                <term> CDATA </term>
                <description> CDATA セクションを含む要素またはエンティティ参照を返します。</description>
              </item>
              <item>
                <term> コメント</term>
                <description>エンティティ参照、ドキュメントの種類、またはコメントを含む要素を返します。</description>
              </item>
              <item>
                <term> DocumentType </term>
                <description>ドキュメント ノードを返します。</description>
              </item>
              <item>
                <term> 要素</term>
                <description>要素の親ノードを返します。要素がツリーにおいてルート ノードである場合、親はドキュメント ノードです。</description>
              </item>
              <item>
                <term> EntityReference </term>
                <description>エンティティ参照を含む要素、属性、またはエンティティ参照を返します。</description>
              </item>
              <item>
                <term> ProcessingInstruction </term>
                <description>ドキュメント、要素、ドキュメントの種類、または処理命令を含むエンティティの参照を返します。</description>
              </item>
              <item>
                <term> テキスト</term>
                <description>親テキスト ノードを含む要素、属性、またはエンティティの参照を返します。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-447">
              <list type="table">
                <listheader>
                  <term> NodeType  </term>
                  <description> Return Value of ParentNode  </description>
                </listheader>
                <item>
                  <term> Attribute, Document, DocumentFragment, Entity, Notation  </term>
                  <description> Returns <see langword="null" />; these nodes do not have parents.  </description>
                </item>
                <item>
                  <term> CDATA  </term>
                  <description> Returns the element or entity reference containing the CDATA section.  </description>
                </item>
                <item>
                  <term> Comment  </term>
                  <description> Returns the element, entity reference, document type, or document containing the comment.  </description>
                </item>
                <item>
                  <term> DocumentType  </term>
                  <description> Returns the document node.  </description>
                </item>
                <item>
                  <term> Element  </term>
                  <description> Returns the parent node of the element. If the element is the root node in the tree, the parent is the document node.  </description>
                </item>
                <item>
                  <term> EntityReference  </term>
                  <description> Returns the element, attribute, or entity reference containing the entity reference.  </description>
                </item>
                <item>
                  <term> ProcessingInstruction  </term>
                  <description> Returns the document, element, document type, or entity reference containing the processing instruction.  </description>
                </item>
                <item>
                  <term> Text  </term>
                  <description> Returns the parent element, attribute, or entity reference containing the text node.  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-448">親と子ノードについては、次を参照してください、 [(コア) の W3C DOM Level 1 の仕様。](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="6dbb6-448">For information about parent and child nodes, see the [W3C DOM (Core) Level 1 specification](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public virtual string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string with get, set" Usage="System.Xml.XmlNode.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-449">このノードの名前空間プリフィックスを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-449">Gets or sets the namespace prefix of this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dbb6-450">このノードの名前空間プリフィックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-450">The namespace prefix of this node.</span>
          </span>
          <span data-ttu-id="6dbb6-451">たとえば、<see langword="Prefix" />要素の bk です&lt;bk:book&gt;します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-451">For example, <see langword="Prefix" /> is bk for the element &lt;bk:book&gt;.</span>
          </span>
          <span data-ttu-id="6dbb6-452">プリフィックスがない場合、このプロパティは String.Empty を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-452">If there is no prefix, this property returns String.Empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-453">許可されている場合は、このプロパティを設定、変更、<xref:System.Xml.XmlNode.Name%2A>プロパティで、要素と属性のノードで、修飾名を保持します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-453">Setting this property, when permitted, changes the <xref:System.Xml.XmlNode.Name%2A> property, which holds the qualified name, on Element and Attribute nodes.</span></span> <span data-ttu-id="6dbb6-454">(テキスト、コメント、EntityReference、CDATA、ProcessingInstruction、ドキュメント、および DocumentFragment) などのプレフィックスを持つことができないノード型でこのプロパティを設定しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-454">Setting this property on node types that cannot have a prefix (such as Text, Comment, EntityReference, CDATA, ProcessingInstruction, Document, and DocumentFragment) has no effect.</span></span> <span data-ttu-id="6dbb6-455">既定値を持つことがわかっている属性のプレフィックスを変更すると、新しい属性の既定値は実行されませんが、名前空間 URI とローカル名が変更しないため、元のプレフィックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-455">Changing the prefix of an attribute that is known to have a default value, does not make a new attribute with the default value and the original prefix appear, since the namespace URI and local name do not change.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6dbb6-456">このノードは読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-456">This node is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="6dbb6-457">指定したプレフィックスに無効な文字が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-457">The specified prefix contains an invalid character.</span>
          </span>
          <span data-ttu-id="6dbb6-458">指定されたプリフィックスの書式が正しくありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-458">The specified prefix is malformed.</span>
          </span>
          <span data-ttu-id="6dbb6-459">指定したプレフィックスが "xml" であり、このノードの namespaceURI が "http://www.w3.org/XML/1998/namespace" と異なっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-459">The specified prefix is "xml" and the namespaceURI of this node is different from "http://www.w3.org/XML/1998/namespace".</span>
          </span>
          <span data-ttu-id="6dbb6-460">このノードが属性で、指定したプレフィックスが "xmlns" で、このノードの namespaceURI が "http://www.w3.org/2000/xmlns/" と異なります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-460">This node is an attribute and the specified prefix is "xmlns" and the namespaceURI of this node is different from "http://www.w3.org/2000/xmlns/ ".</span>
          </span>
          <span data-ttu-id="6dbb6-461">このノードが属性で、このノードの qualifiedName が "xmlns" です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-461">This node is an attribute and the qualifiedName of this node is "xmlns".</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="6dbb6-462">
            <para>オーバーライドするときに<see langword="Prefix" />、派生クラスでは、このプロパティを設定することはできません。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-462">
              <para>When overriding <see langword="Prefix" /> in a derived class, this property cannot be set.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode PrependChild (System.Xml.XmlNode newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode PrependChild(class System.Xml.XmlNode newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PrependChild (newChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ PrependChild(System::Xml::XmlNode ^ newChild);" />
      <MemberSignature Language="F#" Value="abstract member PrependChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.PrependChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.PrependChild newChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">
          <span data-ttu-id="6dbb6-463">追加するノード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-463">The node to add.</span>
          </span>
          <span data-ttu-id="6dbb6-464">追加するノードのすべての内容が、指定した場所に移動します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-464">All the contents of the node to be added are moved into the specified location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dbb6-465">このノードの子ノードのリストの先頭に、指定したノードを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-465">Adds the specified node to the beginning of the list of child nodes for this node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dbb6-466">追加されたノード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-466">The node added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-467">場合、`newChild`は、ツリーに既に存在元の位置から削除され先の位置に追加します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-467">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="6dbb6-468">ノードの挿入の詳細については、次を参照してください。 [XML ドキュメントにノードの挿入](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-468">For more information about inserting nodes, see [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="6dbb6-469">挿入されるノードが別のドキュメントから作成された場合を使用できます<xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType>を現在のドキュメントにノードをインポートします。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-469">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="6dbb6-470">インポートされたノードは、現在のドキュメントに挿入できます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-470">The imported node can then be inserted into the current document.</span></span>  
  
 <span data-ttu-id="6dbb6-471">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-471">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-472">次の例では、XML ドキュメントに新しいノードを追加します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-472">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.PrependChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.PrependChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.PrependChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.PrependChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.PrependChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.PrependChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6dbb6-473">このノードは、<paramref name="newChild" /> ノードの型の子ノードが許可されない型です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-473">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span>
          </span>
          <span data-ttu-id="6dbb6-474">
            <paramref name="newChild" /> がこのノードの先祖です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-474">The <paramref name="newChild" /> is an ancestor of this node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6dbb6-475">
            <paramref name="newChild" /> は、このノードを作成したドキュメントとは異なるドキュメントから作成されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-475">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="6dbb6-476">このノードは読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-476">This node is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="6dbb6-477">
            <para>オーバーライドするときに<see langword="PrependChild" />、派生クラスで正しく、発生するイベントの順序で呼び出す必要があります、<see langword="PrependChild" />基本クラスのメソッド。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-477">
              <para>When overriding <see langword="PrependChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="PrependChild" /> method of the base class.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviousSibling">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode PreviousSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode PreviousSibling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.PreviousSibling" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreviousSibling As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ PreviousSibling { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousSibling : System.Xml.XmlNode" Usage="System.Xml.XmlNode.PreviousSibling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-478">このノードの直前のノードを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-478">Gets the node immediately preceding this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dbb6-479">直前の <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-479">The preceding <see langword="XmlNode" />.</span>
          </span>
          <span data-ttu-id="6dbb6-480">直前のノードがない場合は、<see langword="null" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-480">If there is no preceding node, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6dbb6-481">次の例では、XML ドキュメントですべてのブックが表示されます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-481">The following example displays all the books in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousText">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode PreviousText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode PreviousText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.PreviousText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreviousText As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ PreviousText { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousText : System.Xml.XmlNode" Usage="System.Xml.XmlNode.PreviousText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-482">このノードの直前にあるテキスト ノードを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-482">Gets the text node that immediately precedes this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dbb6-483">
            <see cref="T:System.Xml.XmlNode" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-483">Returns <see cref="T:System.Xml.XmlNode" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-484">このプロパティは、高速なパフォーマンス、<xref:System.Xml.XmlNode.PreviousSibling%2A>プロパティが使用できますのタイプのノードを取得するためだけ<xref:System.Xml.XmlNodeType.Text>です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-484">This property has faster performance than the <xref:System.Xml.XmlNode.PreviousSibling%2A> property but you can use it only to get a node of type <xref:System.Xml.XmlNodeType.Text>.</span></span> <span data-ttu-id="6dbb6-485">他の種類のノードをこのノードの前にあるを取得する、<xref:System.Xml.XmlNode.PreviousSibling%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-485">To get any other type of node that that precedes this node, use the <xref:System.Xml.XmlNode.PreviousSibling%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public virtual void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAll();" />
      <MemberSignature Language="F#" Value="abstract member RemoveAll : unit -&gt; unit&#xA;override this.RemoveAll : unit -&gt; unit" Usage="xmlNode.RemoveAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-486">現在のノードのすべての子ノードと属性の両方、またはそのいずれかを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-486">Removes all the child nodes and/or attributes of the current node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-487">該当する場合、および削除された属性を既定値を含む属性がすぐに表示の既定の値を持つことがわかっている場合、対応する名前空間 URI、ローカル名、およびプレフィックス。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-487">If a removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.</span></span>  
  
 <span data-ttu-id="6dbb6-488">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-488">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-489">次の例では、ルート ノードからすべての子および属性ノードを削除します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-489">The following example removes all child and attribute nodes from the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.RemoveAll Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.RemoveAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.RemoveAll Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.RemoveAll Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.RemoveAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.RemoveAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6dbb6-490">
            <para>オーバーライドするときに<see langword="RemoveAll" />、派生クラスで正しく、発生するイベントの順序で呼び出す必要があります、<see langword="RemoveAll" />基本クラスのメソッド。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-490">
              <para>When overriding <see langword="RemoveAll" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="RemoveAll" /> method of the base class.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemoveChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode RemoveChild (System.Xml.XmlNode oldChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode RemoveChild(class System.Xml.XmlNode oldChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveChild (oldChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ RemoveChild(System::Xml::XmlNode ^ oldChild);" />
      <MemberSignature Language="F#" Value="abstract member RemoveChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.RemoveChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.RemoveChild oldChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="oldChild">
          <span data-ttu-id="6dbb6-491">削除されるノード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-491">The node being removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dbb6-492">指定した子ノードを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-492">Removes specified child node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dbb6-493">削除されたノード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-493">The node removed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6dbb6-494">次の例では、XML ドキュメントからノードを削除します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-494">The following example removes a node from the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.RemoveChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.RemoveChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.RemoveChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.RemoveChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.RemoveChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.RemoveChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6dbb6-495">
            <paramref name="oldChild" /> がこのノードの子ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-495">The <paramref name="oldChild" /> is not a child of this node.</span>
          </span>
          <span data-ttu-id="6dbb6-496">または、このノードが読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-496">Or this node is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="6dbb6-497">
            <para>オーバーライドするときに<see langword="RemoveChild" />、派生クラスで正しく、発生するイベントの順序で呼び出す必要があります、<see langword="RemoveChild" />基本クラスのメソッド。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-497">
              <para>When overriding <see langword="RemoveChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="RemoveChild" /> method of the base class.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ReplaceChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ReplaceChild (System.Xml.XmlNode newChild, System.Xml.XmlNode oldChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode ReplaceChild(class System.Xml.XmlNode newChild, class System.Xml.XmlNode oldChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReplaceChild (newChild As XmlNode, oldChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ ReplaceChild(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ oldChild);" />
      <MemberSignature Language="F#" Value="abstract member ReplaceChild : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.ReplaceChild : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.ReplaceChild (newChild, oldChild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="oldChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">
          <span data-ttu-id="6dbb6-498">子リストに入れる新しいノード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-498">The new node to put in the child list.</span>
          </span>
        </param>
        <param name="oldChild">
          <span data-ttu-id="6dbb6-499">リスト内の置換されるノード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-499">The node being replaced in the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dbb6-500">子ノード <paramref name="oldChild" /> を <paramref name="newChild" /> ノードに置き換えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-500">Replaces the child node <paramref name="oldChild" /> with <paramref name="newChild" /> node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dbb6-501">置き換えられたノード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-501">The node replaced.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-502">場合、`newChild`は既にツリーで、最初に削除されます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-502">If the `newChild` is already in the tree, it is first removed.</span></span>  
  
 <span data-ttu-id="6dbb6-503">場合、`newChild`が作成された別のドキュメントから使用できます<xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType>を現在のドキュメントにノードをインポートします。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-503">If the `newChild` was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="6dbb6-504">インポートされたノードに渡すことができます、`ReplaceChild`メソッド。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-504">The imported node can then be passed to the `ReplaceChild` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-505">次の例では、XML ドキュメントのタイトル要素を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-505">The following example replaces the title element in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.ReplaceChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.ReplaceChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.ReplaceChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.ReplaceChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.ReplaceChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.ReplaceChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6dbb6-506">このノードは、<paramref name="newChild" /> ノードの型の子ノードが許可されない型です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-506">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span>
          </span>
          <span data-ttu-id="6dbb6-507">
            <paramref name="newChild" /> がこのノードの先祖です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-507">The <paramref name="newChild" /> is an ancestor of this node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6dbb6-508">
            <paramref name="newChild" /> は、このノードを作成したドキュメントとは異なるドキュメントから作成されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-508">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="6dbb6-509">このノードは読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-509">This node is read-only.</span>
          </span>
          <span data-ttu-id="6dbb6-510">
            <paramref name="oldChild" /> がこのノードの子ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-510">The <paramref name="oldChild" /> is not a child of this node.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="6dbb6-511">
            <para>オーバーライドするときに<see langword="ReplaceChild" />、派生クラスで正しく、発生するイベントの順序で呼び出す必要があります、<see langword="ReplaceChild" />基本クラスのメソッド。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-511">
              <para>When overriding <see langword="ReplaceChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="ReplaceChild" /> method of the base class.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaInfo : System.Xml.Schema.IXmlSchemaInfo" Usage="System.Xml.XmlNode.SchemaInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-512">スキーマ検証の結果、このノードに割り当てられているスキーマ検証後の infoset を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-512">Gets the post schema validation infoset that has been assigned to this node as a result of schema validation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dbb6-513">このノードのスキーマ検証後の infoset が格納された <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-513">An <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> object containing the post schema validation infoset of this node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-514"><xref:System.Xml.XmlNode.SchemaInfo%2A>このノードが validatied プロパティが設定されます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-514">The <xref:System.Xml.XmlNode.SchemaInfo%2A> property is set when this node is validatied.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectNodes">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-515">XPath 式と一致するノードのリストを選択します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-515">Selects a list of nodes matching the XPath expression.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-516">XPath 式は名前空間を含むことができます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-516">XPath expressions can include namespaces.</span></span> <span data-ttu-id="6dbb6-517">名前空間の解決は `XmlNamespaceManager` を使用してサポートされます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-517">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="6dbb6-518">プレフィックスと名前空間 URI のペアを追加する必要があります、XPath 式には、プレフィックスが含まれている場合、`XmlNamespaceManager`します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-518">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6dbb6-519">XPath 式にプレフィックスが含まれていない場合、名前空間 URI が空の名前空間であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-519">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="6dbb6-520">プレフィックスと名前空間 URI を追加する必要がありますが、XML には、既定の名前空間が含まれている場合に、 `XmlNamespaceManager`。 そうしないと、選択した任意のノードは表示されません。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-520">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get any nodes selected.</span></span>  
  
 <span data-ttu-id="6dbb6-521">詳細については、次を参照してください。 [XPath ナビゲーションを使用してノードを選択](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-521">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span> <span data-ttu-id="6dbb6-522">コード例については、前のセクションで、オーバー ロードのリストからオーバー ロードを選択します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-522">For code examples, choose an overload from the overload list in the previous section.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectNodes">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNodeList SelectNodes (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNodeList SelectNodes(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectNodes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectNodes (xpath As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNodeList ^ SelectNodes(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="member this.SelectNodes : string -&gt; System.Xml.XmlNodeList" Usage="xmlNode.SelectNodes xpath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath">
          <span data-ttu-id="6dbb6-523">XPath 式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-523">The XPath expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dbb6-524">XPath 式と一致するノードのリストを選択します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-524">Selects a list of nodes matching the XPath expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dbb6-525">XPath クエリと一致するノードのコレクションを格納している <see cref="T:System.Xml.XmlNodeList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-525">An <see cref="T:System.Xml.XmlNodeList" /> containing a collection of nodes matching the XPath query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-526">使用する必要があります、XPath 式は、名前空間の解決を必要とする場合、`SelectNodes`オーバー ロードの受け取り、<xref:System.Xml.XmlNamespaceManager>引数として。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-526">If the XPath expression requires namespace resolution, you must use the `SelectNodes` overload which takes an <xref:System.Xml.XmlNamespaceManager> as its argument.</span></span> <span data-ttu-id="6dbb6-527">`XmlNamespaceManager`名前空間を解決するために使用します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-527">The `XmlNamespaceManager` is used to resolve namespaces.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6dbb6-528">XPath 式にプレフィックスが含まれていない場合、名前空間 URI が空の名前空間であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-528">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="6dbb6-529">引き続き使用する必要がある、XML には、既定の名前空間が含まれている場合、`XmlNamespaceManager`プレフィックスと名前空間 URI を追加してあり、それ以外の場合、選択されたノードをすべて表示されません。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-529">If your XML includes a default namespace, you must still use the `XmlNamespaceManager` and add a prefix and namespace URI to it; otherwise, you will not get any nodes selected.</span></span> <span data-ttu-id="6dbb6-530">詳細については、次を参照してください。 [XPath ナビゲーションを使用してノードを選択](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-530">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6dbb6-531">XPath 式を作成するときの一般的な問題は、単一引用符 (') または二重引用符 (") を式に含める方法です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-531">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="6dbb6-532">単一引用符を含む値を検索した場合、文字列を二重引用符で囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-532">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="6dbb6-533">二重引用符を含む値を検索する必要がある場合は、単一引用符で囲まれた文字列を囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-533">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="6dbb6-534">たとえば、次の XML があるとします。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-534">For example, suppose you have the following XML:</span></span>  
  
```xml  
<bookstore>  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="6dbb6-535">次の Visual Basic コードでは、単一引用符を含む要素を選択します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-535">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```csharp  
nodeList = root.SelectNodes("//book[contains(title,""'Emma'"")]")  
```  
  
 <span data-ttu-id="6dbb6-536">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-536">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="6dbb6-537"><xref:System.Xml.XmlNodeList>基になるドキュメントが変更されていない間は、このメソッドによって返されるオブジェクトを有効になります。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-537">The <xref:System.Xml.XmlNodeList> object returned by this method will be valid while the underlying document remains unchanged.</span></span> <span data-ttu-id="6dbb6-538">予期しない結果が返される可能性があります、基になるドキュメントが変更された場合 (例外はスローされません)。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-538">If the underlying document changes, unexpected results may be returned (no exception will be thrown).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-539">次の例では、著者の姓がオースティンのし、これらの書籍の価格が変更し、すべてのブックを選択します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-539">The following example selects all books where the author's last name is Austen, and then changes the price of those books.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/VB/source.vb#1)]  
  
 <span data-ttu-id="6dbb6-540">この例では、次の XML を使用します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-540">This example uses the following XML:</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectNodes Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException">
          <span data-ttu-id="6dbb6-541">XPath 式にプリフィックスが含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-541">The XPath expression contains a prefix.</span>
          </span>
          <span data-ttu-id="6dbb6-542">「[XPath の例](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-542">See [XPath Examples](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041).</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlNode.SelectSingleNode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectNodes">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNodeList SelectNodes (string xpath, System.Xml.XmlNamespaceManager nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNodeList SelectNodes(string xpath, class System.Xml.XmlNamespaceManager nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectNodes (xpath As String, nsmgr As XmlNamespaceManager) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNodeList ^ SelectNodes(System::String ^ xpath, System::Xml::XmlNamespaceManager ^ nsmgr);" />
      <MemberSignature Language="F#" Value="member this.SelectNodes : string * System.Xml.XmlNamespaceManager -&gt; System.Xml.XmlNodeList" Usage="xmlNode.SelectNodes (xpath, nsmgr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="nsmgr" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="xpath">
          <span data-ttu-id="6dbb6-543">XPath 式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-543">The XPath expression.</span>
          </span>
          <span data-ttu-id="6dbb6-544">「[XPath の例](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-544">See [XPath Examples](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041).</span>
          </span>
        </param>
        <param name="nsmgr">
          <span data-ttu-id="6dbb6-545">XPath 式のプリフィックスの名前空間を解決するために使用する <see cref="T:System.Xml.XmlNamespaceManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-545">An <see cref="T:System.Xml.XmlNamespaceManager" /> to use for resolving namespaces for prefixes in the XPath expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dbb6-546">XPath 式と一致するノードのリストを選択します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-546">Selects a list of nodes matching the XPath expression.</span>
          </span>
          <span data-ttu-id="6dbb6-547">XPath 式で見つかったプリフィックスは、指定した <see cref="T:System.Xml.XmlNamespaceManager" /> を使用して解決されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-547">Any prefixes found in the XPath expression are resolved using the supplied <see cref="T:System.Xml.XmlNamespaceManager" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dbb6-548">XPath クエリと一致するノードのコレクションを格納している <see cref="T:System.Xml.XmlNodeList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-548">An <see cref="T:System.Xml.XmlNodeList" /> containing a collection of nodes matching the XPath query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-549">XPath 式は名前空間を含むことができます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-549">XPath expressions can include namespaces.</span></span> <span data-ttu-id="6dbb6-550">名前空間の解決は `XmlNamespaceManager` を使用してサポートされます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-550">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="6dbb6-551">プレフィックスと名前空間 URI のペアを追加する必要があります、XPath 式には、プレフィックスが含まれている場合、`XmlNamespaceManager`します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-551">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6dbb6-552">XPath 式にプレフィックスが含まれていない場合、名前空間 URI が空の名前空間であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-552">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="6dbb6-553">プレフィックスと名前空間 URI を追加する必要がありますが、XML には、既定の名前空間が含まれている場合に、 `XmlNamespaceManager`。 そうしないと、選択した任意のノードは表示されません。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-553">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get any nodes selected.</span></span> <span data-ttu-id="6dbb6-554">詳細については、次を参照してください。 [XPath ナビゲーションを使用してノードを選択](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-554">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
 <span data-ttu-id="6dbb6-555">たとえば、次の XML がある場合。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-555">For example, if you had the following XML:</span></span>  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
 <book>  
   <title>Pride And Prejudice</title>  
 </book>  
</bookstore>  
```  
  
 <span data-ttu-id="6dbb6-556">次の c# コードでは、すべての book ノードを選択します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-556">The following C# code selects all book nodes:</span></span>  
  
```csharp  
XmlNamespaceManager nsmgr = new XmlNamespaceManager(doc.NameTable);  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com");  
XmlNodeList nodelist = doc.SelectNodes("//ab:book", nsmgr);  
```  
  
> [!NOTE]
>  <span data-ttu-id="6dbb6-557">XPath 式を作成するときの一般的な問題は、単一引用符 (') または二重引用符 (") を式に含める方法です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-557">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="6dbb6-558">単一引用符を含む値を検索した場合、文字列を二重引用符で囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-558">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="6dbb6-559">二重引用符を含む値を検索する必要がある場合は、単一引用符で囲まれた文字列を囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-559">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="6dbb6-560">たとえば、次の XML があるとします。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-560">For example, suppose you have the following XML:</span></span>  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="6dbb6-561">次の Visual Basic コードでは、単一引用符を含む要素を選択します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-561">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```vb  
Dim nsmgr As XmlNamespaceManager = New XmlNamespaceManager(doc.NameTable)  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com")  
nodeList = root.SelectNodes("//ab:book[contains(ab:title,""'Emma'"")]", nsmgr)  
```  
  
 <span data-ttu-id="6dbb6-562">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-562">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="6dbb6-563"><xref:System.Xml.XmlNodeList>基になるドキュメントが変更されていない間は、このメソッドによって返されるオブジェクトを有効になります。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-563">The <xref:System.Xml.XmlNodeList> object returned by this method will be valid while the underlying document remains unchanged.</span></span> <span data-ttu-id="6dbb6-564">予期しない結果が返される可能性があります、基になるドキュメントが変更された場合 (例外はスローされません)。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-564">If the underlying document changes, unexpected results may be returned (no exception will be thrown).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-565">次の例では、各 ISBN 属性の値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-565">The following example displays the values of each of the ISBN attributes.</span></span> <span data-ttu-id="6dbb6-566">この例では、<xref:System.Xml.XmlElement>オブジェクトから継承され、<xref:System.Xml.XmlNode>クラス。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-566">This example uses an <xref:System.Xml.XmlElement> object, which inherits from the <xref:System.Xml.XmlNode> class.</span></span>  
  
 [!code-cpp[XmlNode.SelectNodes1#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlNode.SelectNodes1/CPP/selectnodes1.cpp#1)]
 [!code-csharp[XmlNode.SelectNodes1#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlNode.SelectNodes1/CS/selectnodes1.cs#1)]
 [!code-vb[XmlNode.SelectNodes1#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlNode.SelectNodes1/VB/selectnodes1.vb#1)]  
  
 <span data-ttu-id="6dbb6-567">例では、ファイルを使用して`booksort.xml`、入力として。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-567">The example uses the file, `booksort.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectNodes Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException">
          <span data-ttu-id="6dbb6-568">XPath 式に、<see langword="XmlNamespaceManager" /> で定義されていないプリフィックスが含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-568">The XPath expression contains a prefix which is not defined in the <see langword="XmlNamespaceManager" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectSingleNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-569">XPath 式と一致する最初の <see langword="XmlNode" /> を選択します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-569">Selects the first <see langword="XmlNode" /> that matches the XPath expression.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-570">XPath 式は名前空間を含むことができます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-570">XPath expressions can include namespaces.</span></span> <span data-ttu-id="6dbb6-571">名前空間の解決は `XmlNamespaceManager` を使用してサポートされます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-571">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="6dbb6-572">プレフィックスと名前空間 URI のペアを追加する必要があります、XPath 式には、プレフィックスが含まれている場合、`XmlNamespaceManager`します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-572">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6dbb6-573">XPath 式にプレフィックスが含まれていない場合、名前空間 URI が空の名前空間であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-573">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="6dbb6-574">プレフィックスと名前空間 URI を追加する必要がありますが、XML には、既定の名前空間が含まれている場合に、 `XmlNamespaceManager`。 そうしないと、選択した任意のノードは表示されません。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-574">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get any nodes selected.</span></span> <span data-ttu-id="6dbb6-575">詳細については、次を参照してください。 [XPath ナビゲーションを使用してノードを選択](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-575">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-576">次の例では、作成者の名前が一致する最初の書籍を返します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-576">The following example returns the first book with the matching author name.</span></span> <span data-ttu-id="6dbb6-577">`XmlNamespaceManager` は XPath 式中の既定の名前空間を解決します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-577">The `XmlNamespaceManager` resolves the default namespace in the XPath expression.</span></span>  
  
 [!code-cpp[XmlNode.SelectSingleNode2#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlNode.SelectSingleNode2/CPP/XmlNode.SelectSingleNode2.cpp#1)]
 [!code-csharp[XmlNode.SelectSingleNode2#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlNode.SelectSingleNode2/CS/selectsingnode2.cs#1)]
 [!code-vb[XmlNode.SelectSingleNode2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlNode.SelectSingleNode2/VB/selectsingnode2.vb#1)]  
  
 <span data-ttu-id="6dbb6-578">例では、ファイルを使用して`newbooks.xml`、入力として。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-578">The example uses the file, `newbooks.xml`, as input.</span></span>  
  
 [!code-xml[XmlNode.SelectSingleNode2#2](~/samples/snippets/xml/VS_Snippets_Data/XmlNode.SelectSingleNode2/XML/newbooks.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode SelectSingleNode (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNode SelectSingleNode(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectSingleNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectSingleNode (xpath As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNode ^ SelectSingleNode(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="member this.SelectSingleNode : string -&gt; System.Xml.XmlNode" Usage="xmlNode.SelectSingleNode xpath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath">
          <span data-ttu-id="6dbb6-579">XPath 式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-579">The XPath expression.</span>
          </span>
          <span data-ttu-id="6dbb6-580">「[XPath の例](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-580">See [XPath Examples](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dbb6-581">XPath 式と一致する最初の <see langword="XmlNode" /> を選択します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-581">Selects the first <see langword="XmlNode" /> that matches the XPath expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dbb6-582">XPath クエリと一致する最初の <see langword="XmlNode" />。一致するノードが見つからない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-582">The first <see langword="XmlNode" /> that matches the XPath query or <see langword="null" /> if no matching node is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-583">使用する必要があります、XPath 式は、名前空間の解決を必要とする場合、`SelectSingleNode`オーバー ロードの受け取り、<xref:System.Xml.XmlNamespaceManager>引数として。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-583">If the XPath expression requires namespace resolution, you must use the `SelectSingleNode` overload which takes an <xref:System.Xml.XmlNamespaceManager> as its argument.</span></span> <span data-ttu-id="6dbb6-584">`XmlNamespaceManager`名前空間を解決するために使用します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-584">The `XmlNamespaceManager` is used to resolve namespaces.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6dbb6-585">XPath 式にプレフィックスが含まれていない場合、名前空間 URI が空の名前空間であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-585">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="6dbb6-586">引き続き使用する必要がある、XML には、既定の名前空間が含まれている場合、`XmlNamespaceManager`プレフィックスと名前空間 URI を追加してあり、それ以外の場合、選択したノード得られません。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-586">If your XML includes a default namespace, you must still use the `XmlNamespaceManager` and add a prefix and namespace URI to it; otherwise, you will not get a selected node.</span></span> <span data-ttu-id="6dbb6-587">詳細については、次を参照してください。 [XPath ナビゲーションを使用してノードを選択](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-587">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6dbb6-588">XPath 式を作成するときの一般的な問題は、単一引用符 (') または二重引用符 (") を式に含める方法です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-588">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="6dbb6-589">単一引用符を含む値を検索した場合、文字列を二重引用符で囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-589">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="6dbb6-590">二重引用符を含む値を検索する必要がある場合は、単一引用符で囲まれた文字列を囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-590">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="6dbb6-591">たとえば、次の XML があるとします。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-591">For example, suppose you have the following XML:</span></span>  
  
```xml  
<bookstore>  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="6dbb6-592">次の Visual Basic コードでは、単一引用符を含む要素を選択します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-592">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```  
book = root.SelectSingleNode("descendant::book[title=""'Emma'""]")  
```  
  
 <span data-ttu-id="6dbb6-593">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-593">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-594">次の例では、最初のジェーン オースティンの書籍の価格を変更します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-594">The following example changes the price of the first Jane Austen book.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.SelectSingleNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.SelectSingleNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.SelectSingleNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/VB/source.vb#1)]  
  
 <span data-ttu-id="6dbb6-595">例では、ファイルを使用して`booksort.xml`、入力として。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-595">The example uses the file, `booksort.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectSingleNode Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException">
          <span data-ttu-id="6dbb6-596">XPath 式にプリフィックスが含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-596">The XPath expression contains a prefix.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlNode.SelectNodes(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode SelectSingleNode (string xpath, System.Xml.XmlNamespaceManager nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNode SelectSingleNode(string xpath, class System.Xml.XmlNamespaceManager nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectSingleNode (xpath As String, nsmgr As XmlNamespaceManager) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNode ^ SelectSingleNode(System::String ^ xpath, System::Xml::XmlNamespaceManager ^ nsmgr);" />
      <MemberSignature Language="F#" Value="member this.SelectSingleNode : string * System.Xml.XmlNamespaceManager -&gt; System.Xml.XmlNode" Usage="xmlNode.SelectSingleNode (xpath, nsmgr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="nsmgr" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="xpath">
          <span data-ttu-id="6dbb6-597">XPath 式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-597">The XPath expression.</span>
          </span>
          <span data-ttu-id="6dbb6-598">「[XPath の例](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-598">See [XPath Examples](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041).</span>
          </span>
        </param>
        <param name="nsmgr">
          <span data-ttu-id="6dbb6-599">XPath 式のプリフィックスの名前空間を解決するために使用する <see cref="T:System.Xml.XmlNamespaceManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-599">An <see cref="T:System.Xml.XmlNamespaceManager" /> to use for resolving namespaces for prefixes in the XPath expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dbb6-600">XPath 式と一致する最初の <see langword="XmlNode" /> を選択します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-600">Selects the first <see langword="XmlNode" /> that matches the XPath expression.</span>
          </span>
          <span data-ttu-id="6dbb6-601">XPath 式で見つかったプリフィックスは、指定した <see cref="T:System.Xml.XmlNamespaceManager" /> を使用して解決されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-601">Any prefixes found in the XPath expression are resolved using the supplied <see cref="T:System.Xml.XmlNamespaceManager" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dbb6-602">XPath クエリと一致する最初の <see langword="XmlNode" />。一致するノードが見つからない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-602">The first <see langword="XmlNode" /> that matches the XPath query or <see langword="null" /> if no matching node is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-603">XPath 式は名前空間を含むことができます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-603">XPath expressions can include namespaces.</span></span> <span data-ttu-id="6dbb6-604">名前空間の解決は `XmlNamespaceManager` を使用してサポートされます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-604">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="6dbb6-605">プレフィックスと名前空間 URI のペアを追加する必要があります、XPath 式には、プレフィックスが含まれている場合、`XmlNamespaceManager`します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-605">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6dbb6-606">XPath 式にプレフィックスが含まれていない場合、名前空間 URI が空の名前空間であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-606">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="6dbb6-607">プレフィックスと名前空間 URI を追加する必要がありますが、XML には、既定の名前空間が含まれている場合に、 `XmlNamespaceManager`。 そうしないと、選択したノードは表示されません。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-607">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get a node selected.</span></span> <span data-ttu-id="6dbb6-608">詳細については、次を参照してください。 [XPath ナビゲーションを使用してノードを選択](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-608">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
 <span data-ttu-id="6dbb6-609">たとえば、次の XML がある場合。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-609">For example, if you had the following XML:</span></span>  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
 <book>  
   <title>Pride And Prejudice</title>  
 </book>  
</bookstore>  
```  
  
 <span data-ttu-id="6dbb6-610">次の c# コードでは、最初の book ノードを選択します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-610">The following C# code selects the first book node:</span></span>  
  
```csharp  
XmlNamespaceManager nsmgr = new XmlNamespaceManager(doc.NameTable);  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com");  
XmlNode book = doc.SelectSingleNode("//ab:book", nsmgr);  
```  
  
> [!NOTE]
>  <span data-ttu-id="6dbb6-611">XPath 式を作成するときの一般的な問題は、単一引用符 (') または二重引用符 (") を式に含める方法です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-611">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="6dbb6-612">単一引用符を含む値を検索した場合、文字列を二重引用符で囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-612">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="6dbb6-613">二重引用符を含む値を検索する必要がある場合は、単一引用符で囲まれた文字列を囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-613">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="6dbb6-614">たとえば、次の XML があるとします。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-614">For example, suppose you have the following XML:</span></span>  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="6dbb6-615">次の Visual Basic コードでは、単一引用符を含む要素を選択します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-615">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```vb  
Dim nsmgr As XmlNamespaceManager = New XmlNamespaceManager(doc.NameTable)  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com")  
book = root.SelectSingleNode("descendant::ab:book[ab:title=""'Emma'""]", nsmgr)  
```  
  
 <span data-ttu-id="6dbb6-616">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-616">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-617">次の例では、ISBN 値が一致する書籍を選択します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-617">The following example selects the book with the matching ISBN value.</span></span>  
  
 [!code-cpp[XmlNode.SelectSingleNode1#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlNode.SelectSingleNode1/CPP/selectsingnode.cpp#1)]
 [!code-csharp[XmlNode.SelectSingleNode1#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlNode.SelectSingleNode1/CS/selectsingnode.cs#1)]
 [!code-vb[XmlNode.SelectSingleNode1#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlNode.SelectSingleNode1/VB/selectsingnode.vb#1)]  
  
 <span data-ttu-id="6dbb6-618">例では、ファイルを使用して`booksort.xml`、入力として。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-618">The example uses the file, `booksort.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectNodes Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException">
          <span data-ttu-id="6dbb6-619">XPath 式に、<see langword="XmlNamespaceManager" /> で定義されていないプリフィックスが含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-619">The XPath expression contains a prefix which is not defined in the <see langword="XmlNamespaceManager" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public virtual bool Supports (string feature, string version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(string feature, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.Supports(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Supports (feature As String, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::String ^ feature, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member Supports : string * string -&gt; bool&#xA;override this.Supports : string * string -&gt; bool" Usage="xmlNode.Supports (feature, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="feature">
          <span data-ttu-id="6dbb6-620">テスト対象の機能のパッケージ名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-620">The package name of the feature to test.</span>
          </span>
          <span data-ttu-id="6dbb6-621">この名前は大文字と小文字を区別しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-621">This name is not case-sensitive.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="6dbb6-622">テストする対象のパッケージ名のバージョン番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-622">The version number of the package name to test.</span>
          </span>
          <span data-ttu-id="6dbb6-623">バージョンを指定しない場合、つまりバージョンが null の場合は、いずれかのバージョンの機能がサポートされていれば、メソッドは true を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-623">If the version is not specified (null), supporting any version of the feature causes the method to return true.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dbb6-624">DOM 実装が特定の機能を実装するかどうかをテストします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-624">Tests if the DOM implementation implements a specific feature.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dbb6-625">指定したバージョンでその機能が実装される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-625">
              <see langword="true" /> if the feature is implemented in the specified version; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6dbb6-626">
            <see langword="true" /> を返す組み合わせを次の表に示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-626">The following table describes the combinations that return <see langword="true" />.</span>
          </span>
          <span data-ttu-id="6dbb6-627">
            <list type="table">
              <listheader>
                <term> 機能  </term>
                <description> バージョン  </description>
              </listheader>
              <item>
                <term> XML  </term>
                <description> 1.0  </description>
              </item>
              <item>
                <term> XML  </term>
                <description> 2.0  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-627">
              <list type="table">
                <listheader>
                  <term> Feature  </term>
                  <description> Version  </description>
                </listheader>
                <item>
                  <term> XML  </term>
                  <description> 1.0  </description>
                </item>
                <item>
                  <term> XML  </term>
                  <description> 2.0  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-628">このメンバーの詳細については、「<see cref="M:System.Xml.XmlNode.GetEnumerator" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-628">For a description of this member, see <see cref="M:System.Xml.XmlNode.GetEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dbb6-629">コレクションの列挙子を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-629">Returns an enumerator for the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-630">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-630">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6dbb6-631">これは、<xref:System.Xml.XmlNode> のインスタンスが <xref:System.Collections.IEnumerable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-631">It can be used only when the <xref:System.Xml.XmlNode> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-632">このメンバーの詳細については、「<see cref="M:System.Xml.XmlNode.Clone" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-632">For a description of this member, see <see cref="M:System.Xml.XmlNode.Clone" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dbb6-633">ノードの呼び出し元ノードのコピー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-633">A copy of the node from which it is called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-634">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-634">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6dbb6-635">これは、<xref:System.Xml.XmlNode> のインスタンスが <xref:System.ICloneable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-635">It can be used only when the <xref:System.Xml.XmlNode> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Xml.XmlNode.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dbb6-636">ノードの値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-636">Gets or sets the value of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dbb6-637">返される値は、ノードの <see cref="P:System.Xml.XmlNode.NodeType" /> によって異なります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-637">The value returned depends on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node:</span>
          </span>
          <span data-ttu-id="6dbb6-638">
            <list type="table">
              <listheader>
                <term> 型</term>
                <description>値</description>
              </listheader>
              <item>
                <term>属性</term>
                <description>属性の値。</description>
              </item>
              <item>
                <term> CDATASection </term>
                <description> CDATA セクションの内容。</description>
              </item>
              <item>
                <term> コメント</term>
                <description>コメントの内容。</description>
              </item>
              <item>
                <term> ドキュメント</term>
                <description>
                  <see langword="null" />します。</description>
              </item>
              <item>
                <term> DocumentFragment </term>
                <description>
                  <see langword="null" />します。</description>
              </item>
              <item>
                <term> DocumentType </term>
                <description>
                  <see langword="null" />します。</description>
              </item>
              <item>
                <term> 要素</term>
                <description>
                  <see langword="null" />します。使用することができます、<see cref="P:System.Xml.XmlElement.InnerText" />または<see cref="P:System.Xml.XmlElement.InnerXml" />要素ノードの値にアクセスするプロパティ。</description>
              </item>
              <item>
                <term> エンティティ</term>
                <description>
                  <see langword="null" />します。</description>
              </item>
              <item>
                <term> EntityReference </term>
                <description>
                  <see langword="null" />します。</description>
              </item>
              <item>
                <term> Notation </term>
                <description>
                  <see langword="null" />します。</description>
              </item>
              <item>
                <term> ProcessingInstruction </term>
                <description>対象を含まない全体のコンテンツ。</description>
              </item>
              <item>
                <term> テキスト</term>
                <description>テキスト ノードのコンテンツ。</description>
              </item>
              <item>
                <term> SignificantWhitespace </term>
                <description>空白文字。空白は、1 つ以上の空白文字、キャリッジ リターン、ライン フィード、またはタブによって構成できます。</description>
              </item>
              <item>
                <term> 空白</term>
                <description>空白文字。空白は、1 つ以上の空白文字、キャリッジ リターン、ライン フィード、またはタブによって構成できます。</description>
              </item>
              <item>
                <term> XmlDeclaration </term>
                <description>宣言の内容 (間のすべては、&lt;ですか? xml と?&gt;)。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-638">
              <list type="table">
                <listheader>
                  <term> Type  </term>
                  <description> Value  </description>
                </listheader>
                <item>
                  <term> Attribute  </term>
                  <description> The value of the attribute.  </description>
                </item>
                <item>
                  <term> CDATASection  </term>
                  <description> The content of the CDATA Section.  </description>
                </item>
                <item>
                  <term> Comment  </term>
                  <description> The content of the comment.  </description>
                </item>
                <item>
                  <term> Document  </term>
                  <description>
                    <see langword="null" />.  </description>
                </item>
                <item>
                  <term> DocumentFragment  </term>
                  <description>
                    <see langword="null" />.  </description>
                </item>
                <item>
                  <term> DocumentType  </term>
                  <description>
                    <see langword="null" />.  </description>
                </item>
                <item>
                  <term> Element  </term>
                  <description>
                    <see langword="null" />. You can use the <see cref="P:System.Xml.XmlElement.InnerText" /> or <see cref="P:System.Xml.XmlElement.InnerXml" /> properties to access the value of the element node.  </description>
                </item>
                <item>
                  <term> Entity  </term>
                  <description>
                    <see langword="null" />.  </description>
                </item>
                <item>
                  <term> EntityReference  </term>
                  <description>
                    <see langword="null" />.  </description>
                </item>
                <item>
                  <term> Notation  </term>
                  <description>
                    <see langword="null" />.  </description>
                </item>
                <item>
                  <term> ProcessingInstruction  </term>
                  <description> The entire content excluding the target.  </description>
                </item>
                <item>
                  <term> Text  </term>
                  <description> The content of the text node.  </description>
                </item>
                <item>
                  <term> SignificantWhitespace  </term>
                  <description> The white space characters. White space can consist of one or more space characters, carriage returns, line feeds, or tabs.  </description>
                </item>
                <item>
                  <term> Whitespace  </term>
                  <description> The white space characters. White space can consist of one or more space characters, carriage returns, line feeds, or tabs.  </description>
                </item>
                <item>
                  <term> XmlDeclaration  </term>
                  <description> The content of the declaration (that is, everything between &lt;?xml and ?&gt;).  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6dbb6-639">次の例では、新しい属性を追加、XML ドキュメントと設定を<xref:System.Xml.XmlNode.Value%2A>新しい属性のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-639">The following example adds a new attribute to the XML document and sets the <xref:System.Xml.XmlNode.Value%2A> property of the new attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6dbb6-640">読み取り専用のノードの値を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-640">Setting the value of a node that is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6dbb6-641">値がないと想定されているノード (Element ノードなど) の値を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-641">Setting the value of a node that is not supposed to have a value (for example, an Element node).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteContentTo">
      <MemberSignature Language="C#" Value="public abstract void WriteContentTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteContentTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteContentTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteContentTo(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="abstract member WriteContentTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlNode.WriteContentTo w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="6dbb6-642">保存先の <see langword="XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-642">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dbb6-643">派生クラスでオーバーライドされた場合は、指定した <see cref="T:System.Xml.XmlWriter" /> にノードのすべての子ノードを保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-643">Saves all the child nodes of the node to the specified <see cref="T:System.Xml.XmlWriter" />, when overridden in a derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-644">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-644">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="6dbb6-645">これは機能的に等価、<xref:System.Xml.XmlNode.InnerXml%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-645">It is functionally equivalent to the <xref:System.Xml.XmlNode.InnerXml%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-646">次の例では、コンソールに、ルート ノードの内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-646">The following example displays the contents of the root node to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.WriteContentTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.WriteContentTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.WriteContentTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.WriteContentTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.WriteContentTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.WriteContentTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public abstract void WriteTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteTo(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="abstract member WriteTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlNode.WriteTo w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="6dbb6-647">保存先の <see langword="XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-647">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dbb6-648">派生クラスでオーバーライドされた場合は、指定した <see cref="T:System.Xml.XmlWriter" /> に現在のノードを保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dbb6-648">Saves the current node to the specified <see cref="T:System.Xml.XmlWriter" />, when overridden in a derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dbb6-649">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-649">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="6dbb6-650">これは機能的に等価、<xref:System.Xml.XmlNode.OuterXml%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-650">It is functionally equivalent to the <xref:System.Xml.XmlNode.OuterXml%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dbb6-651">次の例では、コンソールにルート ノードが表示されます。</span><span class="sxs-lookup"><span data-stu-id="6dbb6-651">The following example displays the root node to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.WriteTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.WriteTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.WriteTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.WriteTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.WriteTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.WriteTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>