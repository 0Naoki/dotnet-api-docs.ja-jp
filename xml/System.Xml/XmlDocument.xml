<Type Name="XmlDocument" FullName="System.Xml.XmlDocument">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9cc2a7a5d3beef9a4a7f839cae565946eb0cf8b5" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52238066" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlDocument : System.Xml.XmlNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDocument extends System.Xml.XmlNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDocument&#xA;Inherits XmlNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDocument : System::Xml::XmlNode" />
  <TypeSignature Language="F#" Value="type XmlDocument = class&#xA;    inherit XmlNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlDocument</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="da368-101">XML ドキュメントを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="da368-101">Represents an XML document.</span>
      </span>
      <span data-ttu-id="da368-102">このクラスを使用すると、XML のドキュメントへの読み込み、検証、編集、追加、および配置が可能です。</span>
      <span class="sxs-lookup">
        <span data-stu-id="da368-102">You can use this class to load, validate, edit, add, and position XML in a document.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="Remarks"></a> <span data-ttu-id="da368-103"><xref:System.Xml.XmlDocument>クラスは、XML ドキュメントのメモリ内表現です。</span><span class="sxs-lookup"><span data-stu-id="da368-103">The <xref:System.Xml.XmlDocument> class is an in-memory representation of an XML document.</span></span> <span data-ttu-id="da368-104">W3C 実装[XML ドキュメント オブジェクト モデル (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md) Level 1 Core および DOM Level 2 Core です。</span><span class="sxs-lookup"><span data-stu-id="da368-104">It implements the W3C [XML Document Object Model (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md) Level 1 Core and the Core DOM Level 2.</span></span>  
  
 <span data-ttu-id="da368-105">*DOM*略*ドキュメント オブジェクト モデル*します。</span><span class="sxs-lookup"><span data-stu-id="da368-105">*DOM* stands for *document object model*.</span></span> <span data-ttu-id="da368-106">詳細については、次を参照してください。 [XML ドキュメント オブジェクト モデル (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md)します。</span><span class="sxs-lookup"><span data-stu-id="da368-106">To read more about it, see [XML Document Object Model (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md).</span></span>  
  
 <span data-ttu-id="da368-107">使用して、XML を DOM に読み込むことができます、<xref:System.Xml.XmlDocument>クラスし、プログラムで読み取り、変更、および文書に XML を削除します。</span><span class="sxs-lookup"><span data-stu-id="da368-107">You can load XML into the DOM by using the <xref:System.Xml.XmlDocument> class, and then programmatically read, modify, and remove XML in the document.</span></span>  
  
 <span data-ttu-id="da368-108">こじ開ければしたい場合は開きます、<xref:System.Xml.XmlDocument>クラスしその実装方法を参照してくださいを参照してください、 [Reference Source](https://referencesource.microsoft.com/#System.Xml/Xml/System/Xml/Dom/XmlDocument.cs#f82a4c1bd1f0ee12)します。</span><span class="sxs-lookup"><span data-stu-id="da368-108">If you want to pry open the <xref:System.Xml.XmlDocument> class and see how it’s implemented, see the [Reference Source](https://referencesource.microsoft.com/#System.Xml/Xml/System/Xml/Dom/XmlDocument.cs#f82a4c1bd1f0ee12).</span></span>  
  
<a name="Common"></a>   
## <a name="tasks"></a><span data-ttu-id="da368-109">[タスク]</span><span class="sxs-lookup"><span data-stu-id="da368-109">Tasks</span></span>  
  
-   [<span data-ttu-id="da368-110">XML ドキュメント オブジェクト モデルを読み込む</span><span class="sxs-lookup"><span data-stu-id="da368-110">Load XML into the document object model</span></span>](#Load)  
  
-   [<span data-ttu-id="da368-111">スキーマに対して検証します。</span><span class="sxs-lookup"><span data-stu-id="da368-111">Validate it against a schema</span></span>](#Validation)  
  
-   [<span data-ttu-id="da368-112">ドキュメント ツリーを移動します。</span><span class="sxs-lookup"><span data-stu-id="da368-112">Navigate the document tree</span></span>](#Navigate)  
  
-   [<span data-ttu-id="da368-113">ノードを検索します。</span><span class="sxs-lookup"><span data-stu-id="da368-113">Find nodes</span></span>](#Find)  
  
-   [<span data-ttu-id="da368-114">ノードを編集します。</span><span class="sxs-lookup"><span data-stu-id="da368-114">Edit nodes</span></span>](#Edit)  
  
-   [<span data-ttu-id="da368-115">ノードを追加します。</span><span class="sxs-lookup"><span data-stu-id="da368-115">Add nodes</span></span>](#Add)  
  
-   [<span data-ttu-id="da368-116">ノードを削除します。</span><span class="sxs-lookup"><span data-stu-id="da368-116">Remove nodes</span></span>](#Remove)  
  
-   [<span data-ttu-id="da368-117">位置のノード</span><span class="sxs-lookup"><span data-stu-id="da368-117">Position nodes</span></span>](#Position)  
  
<a name="Load"></a>   
## <a name="load-xml-into-the-document-object-model"></a><span data-ttu-id="da368-118">XML ドキュメント オブジェクト モデルを読み込む</span><span class="sxs-lookup"><span data-stu-id="da368-118">Load XML into the document object model</span></span>  
 <span data-ttu-id="da368-119">次のような XML ドキュメントを起動します。</span><span class="sxs-lookup"><span data-stu-id="da368-119">Start with an XML document like this one.</span></span> <span data-ttu-id="da368-120">コレクションでブックを少しだけになります。</span><span class="sxs-lookup"><span data-stu-id="da368-120">It’s just a few books in a collection.</span></span> <span data-ttu-id="da368-121">含まれる任意の XML ドキュメントでは表示されている基本的な項目名前空間、データを表す要素と、データを表す属性です。</span><span class="sxs-lookup"><span data-stu-id="da368-121">But it does contain the basic things that you’d find in any XML document; a namespace, elements that represent data and attributes that describe the data.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8"?>  
<books xmlns="http://www.contoso.com/books">  
  <book genre="novel" ISBN="1-861001-57-8" publicationdate="1823-01-28">  
    <title>Pride And Prejudice</title>  
    <price>24.95</price>  
  </book>  
  <book genre="novel" ISBN="1-861002-30-1" publicationdate="1985-01-01">  
    <title>The Handmaid's Tale</title>  
    <price>29.95</price>  
  </book>  
  <book genre="novel" ISBN="1-861001-45-3" publicationdate="1811-01-01">  
    <title>Sense and Sensibility</title>  
    <price>19.95</price>  
  </book>  
</books>  
```  
  
 <span data-ttu-id="da368-122">次に、DOM にこのデータを読み込むメモリで操作できるようにします。</span><span class="sxs-lookup"><span data-stu-id="da368-122">Next, load this data into the DOM so that you can work with it in memory.</span></span> <span data-ttu-id="da368-123">これを行う最も一般的な方法は、ローカル コンピューターまたはネットワーク上のファイルを参照してください。</span><span class="sxs-lookup"><span data-stu-id="da368-123">The most popular way to do this is refer to a file on your local computer or on a network.</span></span>  
  
 <span data-ttu-id="da368-124">この例では、ファイルから XML を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="da368-124">This example loads XML from a file.</span></span> <span data-ttu-id="da368-125">ファイルが存在しない場合だけいくつかの XML を生成し、読み込みます。、</span><span class="sxs-lookup"><span data-stu-id="da368-125">If the file doesn’t exist, it just generates some XML and loads that.</span></span>  
  
 [!code-cpp[XMLProcessingApp#1](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#1)]
 [!code-csharp[XMLProcessingApp#1](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#1)]
 [!code-vb[XMLProcessingApp#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#1)]  
  
 <span data-ttu-id="da368-126">**完全なサンプル:** [XML の操作によって、メモリ内、XmlDocument クラスおよびその他を使用して関連する型](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="da368-126">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 <span data-ttu-id="da368-127">**詳細:** [DOM に XML ドキュメントの読み取り](~/docs/standard/data/xml/reading-an-xml-document-into-the-dom.md)</span><span class="sxs-lookup"><span data-stu-id="da368-127">**Learn more:** [Reading an XML Document into the DOM](~/docs/standard/data/xml/reading-an-xml-document-into-the-dom.md)</span></span>  
  
<a name="Validation"></a>   
## <a name="validate-it-against-a-schema"></a><span data-ttu-id="da368-128">スキーマに対して検証します。</span><span class="sxs-lookup"><span data-stu-id="da368-128">Validate it against a schema</span></span>  
 <span data-ttu-id="da368-129">このような XML スキーマを起動します。</span><span class="sxs-lookup"><span data-stu-id="da368-129">Start with an XML schema like this one.</span></span> <span data-ttu-id="da368-130">このスキーマで XML データ型を定義して、どの属性が必要です。</span><span class="sxs-lookup"><span data-stu-id="da368-130">This schema defines the data types in the XML and which attributes are required.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8"?>  
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"  
  attributeFormDefault="unqualified"   
  elementFormDefault="qualified"  
  targetNamespace="http://www.contoso.com/books">   
  <xs:element name="books">  
    <xs:complexType>  
      <xs:sequence>  
        <xs:element maxOccurs="unbounded" name="book">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="title" type="xs:string" />  
              <xs:element name="price" type="xs:decimal" />  
            </xs:sequence>  
            <xs:attribute name="genre" type="xs:string" use="required" />  
            <xs:attribute name="ISBN" type="xs:string" use="required" />  
            <xs:attribute name="publicationdate" type="xs:date" use="required" />  
          </xs:complexType>  
        </xs:element>  
      </xs:sequence>  
    </xs:complexType>  
  </xs:element>  
</xs:schema>  
```  
  
 <span data-ttu-id="da368-131">作成、<xref:System.Xml.XmlReader>スキーマを使用して、オブジェクトし、そのオブジェクトを DOM に読み込む</span><span class="sxs-lookup"><span data-stu-id="da368-131">Create an <xref:System.Xml.XmlReader> object by using your schema, and then load that object into the DOM.</span></span> <span data-ttu-id="da368-132">コードがスキーマの規則に違反している方法で XML ファイルを変更しようとしたときに実行されるイベント ハンドラーを作成します。</span><span class="sxs-lookup"><span data-stu-id="da368-132">Create an event handler that executes when code attempts to modify your XML file in ways that violate the rules of the schema.</span></span>  
  
 <span data-ttu-id="da368-133">これらのブロックのコードでは、すべてのヘルパー メソッドを表示します。</span><span class="sxs-lookup"><span data-stu-id="da368-133">These blocks of code show helper methods that do all of this.</span></span>  
  
 [!code-cpp[XMLProcessingApp#2](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#2)]
 [!code-csharp[XMLProcessingApp#2](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#2)]
 [!code-vb[XMLProcessingApp#2](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#2)]  
  
 <span data-ttu-id="da368-134">**完全なサンプル:** [XML の操作によって、メモリ内、XmlDocument クラスおよびその他を使用して関連する型](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="da368-134">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 <span data-ttu-id="da368-135">**詳細:** [DOM における XML ドキュメントの検証](~/docs/standard/data/xml/validating-an-xml-document-in-the-dom.md)</span><span class="sxs-lookup"><span data-stu-id="da368-135">**Learn more:** [Validating an XML Document in the DOM](~/docs/standard/data/xml/validating-an-xml-document-in-the-dom.md)</span></span>  
  
<a name="Navigate"></a>   
## <a name="navigate-the-document-tree"></a><span data-ttu-id="da368-136">ドキュメント ツリーを移動します。</span><span class="sxs-lookup"><span data-stu-id="da368-136">Navigate the document tree</span></span>  
 <span data-ttu-id="da368-137">プロパティは、XML ドキュメント内の移動に使用できます。</span><span class="sxs-lookup"><span data-stu-id="da368-137">You can use properties to navigate around an XML document.</span></span> <span data-ttu-id="da368-138">ただし、これらのいずれかを使用する前に簡単に見ていきましょういくつかの用語。</span><span class="sxs-lookup"><span data-stu-id="da368-138">But before you use any of them, let’s quickly review a few terms.</span></span> <span data-ttu-id="da368-139">ドキュメントは、ノードで構成されます。</span><span class="sxs-lookup"><span data-stu-id="da368-139">Your document is composed of nodes.</span></span> <span data-ttu-id="da368-140">各ノードには 1 つとして*親*直接上のノード。</span><span class="sxs-lookup"><span data-stu-id="da368-140">Each node has as single *parent* node directly above it.</span></span> <span data-ttu-id="da368-141">親ノードがない唯一のノードは、ドキュメントのルートでは、最上位ノードです。</span><span class="sxs-lookup"><span data-stu-id="da368-141">The only node that does not have a parent node is the document root, as it is the top-level node.</span></span> <span data-ttu-id="da368-142">ほとんどのノードが持つことができます*子*すぐ下のノードのノード。</span><span class="sxs-lookup"><span data-stu-id="da368-142">Most nodes can have *child* nodes, which are nodes directly below them.</span></span> <span data-ttu-id="da368-143">同じレベルにあるノードが*兄弟*します。</span><span class="sxs-lookup"><span data-stu-id="da368-143">Nodes that are at the same level are *siblings*.</span></span>  
  
 <span data-ttu-id="da368-144">次の例では、ルート ノードを取得、ルート ノードの最初の子ノードに移動、その子ノードのいずれかへのアクセスの親ノードに戻るおよび兄弟ノード間で移動しする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="da368-144">The following examples, show you how to obtain the root node, jump to the first child node of the root node, access any of its child nodes, get back out to the parent node, and then navigate across sibling nodes.</span></span>  
  
 <span data-ttu-id="da368-145">**ルート ノードを開始します。**</span><span class="sxs-lookup"><span data-stu-id="da368-145">**Start with the root node**</span></span>  
  
 <span data-ttu-id="da368-146">この例では、ルート ノードを取得し、そのノードを使用して、コンソールにドキュメントの内容を出力します。</span><span class="sxs-lookup"><span data-stu-id="da368-146">This example gets the root node and then uses that node to output the contents of the document to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/VB/source.vb#1)]  
  
 <span data-ttu-id="da368-147">**子ノードを取得します。**</span><span class="sxs-lookup"><span data-stu-id="da368-147">**Get child nodes**</span></span>  
  
 <span data-ttu-id="da368-148">この例では、ルート ノードの最初の子ノードに移動し、そのノードの子ノードを反復処理し、存在する場合。</span><span class="sxs-lookup"><span data-stu-id="da368-148">This example jumps to the first child node of the root node and then iterates through the child nodes of that node if any exist.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/VB/source.vb#1)]  
  
 <span data-ttu-id="da368-149">**親ノードに戻る**</span><span class="sxs-lookup"><span data-stu-id="da368-149">**Get back to the parent node**</span></span>  
  
 <span data-ttu-id="da368-150"><xref:System.Xml.XmlDocument.ParentNode%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="da368-150">Use the <xref:System.Xml.XmlDocument.ParentNode%2A> property.</span></span>  
  
 <span data-ttu-id="da368-151">**最後の子ノードを参照してください。**</span><span class="sxs-lookup"><span data-stu-id="da368-151">**Refer to the last child node**</span></span>  
  
 <span data-ttu-id="da368-152">この例では、本の価格を (つまり、この book ノードの最後の子ノード)、コンソールに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="da368-152">This example writes the price of a book to the console (which is the last child node of a book node).</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/VB/source.vb#1)]  
  
 <span data-ttu-id="da368-153">**兄弟間でのページに進む**</span><span class="sxs-lookup"><span data-stu-id="da368-153">**Navigate forward across siblings**</span></span>  
  
 <span data-ttu-id="da368-154">この例は、帳から別のブックを移動します。</span><span class="sxs-lookup"><span data-stu-id="da368-154">This example moves forward from book to book.</span></span> <span data-ttu-id="da368-155">Book ノードは、他の兄弟です。</span><span class="sxs-lookup"><span data-stu-id="da368-155">Book nodes are siblings to one another.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/VB/source.vb#1)]  
  
 <span data-ttu-id="da368-156">**兄弟間で後方に移動します**</span><span class="sxs-lookup"><span data-stu-id="da368-156">**Navigate backwards across siblings**</span></span>  
  
 <span data-ttu-id="da368-157">この例では、書籍からブックに内を後方に向かって移動します。</span><span class="sxs-lookup"><span data-stu-id="da368-157">This example moves backwards from book to book.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/VB/source.vb#1)]  
  
<a name="Find"></a>   
## <a name="find-nodes"></a><span data-ttu-id="da368-158">ノードを検索します。</span><span class="sxs-lookup"><span data-stu-id="da368-158">Find nodes</span></span>  
 <span data-ttu-id="da368-159">データの 1 つまたは複数のノードを検索する最も一般的な方法は、XPath クエリ文字列を使用するが、いずれかを必要としない方法もあります。</span><span class="sxs-lookup"><span data-stu-id="da368-159">The most popular way to find one or more nodes of data is to use an XPath query string, but there are also methods that don’t require one.</span></span>  
  
 <span data-ttu-id="da368-160">**1 つのノードを取得します。**</span><span class="sxs-lookup"><span data-stu-id="da368-160">**Get a single node**</span></span>  
  
 <span data-ttu-id="da368-161">この例では、ISBN 番号を使用してブックを検索します。</span><span class="sxs-lookup"><span data-stu-id="da368-161">This example locates a book by using the ISBN number.</span></span>  
  
 [!code-cpp[XMLProcessingApp#3](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#3)]
 [!code-csharp[XMLProcessingApp#3](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#3)]
 [!code-vb[XMLProcessingApp#3](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#3)]  
  
 <span data-ttu-id="da368-162">この例で使用される文字列は、Xpath クエリです。</span><span class="sxs-lookup"><span data-stu-id="da368-162">The string used in this example is an Xpath query.</span></span> <span data-ttu-id="da368-163">例については、ここで見つかります。 [XPath 例](https://msdn.microsoft.com/library/ms256086.aspx)します。</span><span class="sxs-lookup"><span data-stu-id="da368-163">You can find more examples of them here:   [XPath examples](https://msdn.microsoft.com/library/ms256086.aspx).</span></span>  
  
 <span data-ttu-id="da368-164">使用することも、<xref:System.Xml.XmlDocument.GetElementById%2A>ノードを取得します。</span><span class="sxs-lookup"><span data-stu-id="da368-164">You can also use the <xref:System.Xml.XmlDocument.GetElementById%2A> to retrieve nodes.</span></span> <span data-ttu-id="da368-165">このアプローチを使用するのには、定義する必要があります、XML ファイルのドキュメント型定義の宣言での ID。</span><span class="sxs-lookup"><span data-stu-id="da368-165">To use this approach, you’ll have to define ID’s in the document type definition declarations of your XML file.</span></span>  
  
 <span data-ttu-id="da368-166">ノードを取得した後は、属性または子ノードの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="da368-166">After you get a node, you get the value of attributes or child nodes.</span></span> <span data-ttu-id="da368-167">この例でを book ノードはします。</span><span class="sxs-lookup"><span data-stu-id="da368-167">This example does that with a book node.</span></span>  
  
 [!code-cpp[XMLProcessingApp#4](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#4)]
 [!code-csharp[XMLProcessingApp#4](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#4)]
 [!code-vb[XMLProcessingApp#4](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#4)]  
  
 <span data-ttu-id="da368-168">**ノードのコレクションを取得します。**</span><span class="sxs-lookup"><span data-stu-id="da368-168">**Get a collection of nodes**</span></span>  
  
 <span data-ttu-id="da368-169">この例では、著者の姓の場所はすべてのブックを選択します。**オースティンの**、し、これらの書籍の価格を変更します。</span><span class="sxs-lookup"><span data-stu-id="da368-169">This example selects all books where the author's last name is **Austen**, and then changes the price of those books.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/VB/source.vb#1)]  
  
 <span data-ttu-id="da368-170">ノードの名前を使用して、ノードのコレクションを取得することもできます。</span><span class="sxs-lookup"><span data-stu-id="da368-170">You can also get a collection of nodes by using the name of the node.</span></span> <span data-ttu-id="da368-171">たとえば、この例では、すべてのブック タイトルのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="da368-171">For example, this example gets a collection of all book titles.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="da368-172">**完全なサンプル:** [XML の操作によって、メモリ内、XmlDocument クラスおよびその他を使用して関連する型](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="da368-172">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 <span data-ttu-id="da368-173">**詳細:** [XPath ナビゲーションを使用してノードを選択](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)</span><span class="sxs-lookup"><span data-stu-id="da368-173">**Learn more:** [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)</span></span>  
  
<a name="Edit"></a>   
## <a name="edit-nodes"></a><span data-ttu-id="da368-174">ノードを編集します。</span><span class="sxs-lookup"><span data-stu-id="da368-174">Edit nodes</span></span>  
 <span data-ttu-id="da368-175">この例では、book ノードとその属性を編集します。</span><span class="sxs-lookup"><span data-stu-id="da368-175">This example edits a book node and its attributes.</span></span>  
  
 [!code-cpp[XMLProcessingApp#7](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#7)]
 [!code-csharp[XMLProcessingApp#7](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#7)]
 [!code-vb[XMLProcessingApp#7](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#7)]  
  
 <span data-ttu-id="da368-176">**詳細:** [ノードの変更、コンテンツ、および XML ドキュメント内の値](~/docs/standard/data/xml/modifying-nodes-content-and-values-in-an-xml-document.md)</span><span class="sxs-lookup"><span data-stu-id="da368-176">**Learn more:** [Modifying Nodes, Content, and Values in an XML Document](~/docs/standard/data/xml/modifying-nodes-content-and-values-in-an-xml-document.md)</span></span>  
  
 <span data-ttu-id="da368-177">**完全なサンプル:** [XML の操作によって、メモリ内、XmlDocument クラスおよびその他を使用して関連する型](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="da368-177">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
<a name="Add"></a>   
## <a name="add-nodes"></a><span data-ttu-id="da368-178">ノードを追加します。</span><span class="sxs-lookup"><span data-stu-id="da368-178">Add nodes</span></span>  
 <span data-ttu-id="da368-179">ノードを追加するには、使用、<xref:System.Xml.XmlDocument.CreateElement%2A>メソッドまたは<xref:System.Xml.XmlDocument.CreateNode%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="da368-179">To add a node, use the <xref:System.Xml.XmlDocument.CreateElement%2A> method or the <xref:System.Xml.XmlDocument.CreateNode%2A> method.</span></span>  
  
 <span data-ttu-id="da368-180">書籍などのデータ ノードを追加するには、使用、<xref:System.Xml.XmlDocument.CreateElement%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="da368-180">To add a data node such as a book, use the <xref:System.Xml.XmlDocument.CreateElement%2A> method.</span></span>  
  
 <span data-ttu-id="da368-181">他の種類のノード、コメント、空白のノード、または CDATA のノードの使用などの<xref:System.Xml.XmlDocument.CreateNode%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="da368-181">For any other type of node such as a comment, whitespace node, or CDATA node, use the <xref:System.Xml.XmlDocument.CreateNode%2A> method.</span></span>  
  
 <span data-ttu-id="da368-182">この例では、book ノードを作成します。、そのノードに attrubutes を追加し、文書にそのノードを追加します。</span><span class="sxs-lookup"><span data-stu-id="da368-182">This example creates a book node, adds attrubutes to that node, and then adds that node to the document.</span></span>  
  
 [!code-cpp[XMLProcessingApp#5](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#5)]
 [!code-csharp[XMLProcessingApp#5](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#5)]
 [!code-vb[XMLProcessingApp#5](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#5)]  
  
 <span data-ttu-id="da368-183">**完全なサンプル:** [XML の操作によって、メモリ内、XmlDocument クラスおよびその他を使用して関連する型](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="da368-183">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 <span data-ttu-id="da368-184">**詳細:** [XML ドキュメントにノードの挿入](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)</span><span class="sxs-lookup"><span data-stu-id="da368-184">**Learn more:** [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)</span></span>  
  
<a name="Remove"></a>   
## <a name="remove-nodes"></a><span data-ttu-id="da368-185">ノードを削除します。</span><span class="sxs-lookup"><span data-stu-id="da368-185">Remove nodes</span></span>  
 <span data-ttu-id="da368-186">ノードを削除するには、使用、<xref:System.Xml.XmlNode.RemoveChild%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="da368-186">To remove a node, use the <xref:System.Xml.XmlNode.RemoveChild%2A> method.</span></span>  
  
 <span data-ttu-id="da368-187">この例では、ドキュメントと、この book ノードの直前に表示される空白からブックを削除します。</span><span class="sxs-lookup"><span data-stu-id="da368-187">This example removes a book from the document and any whitespace that appears just before the book node.</span></span>  
  
 [!code-cpp[XMLProcessingApp#6](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#6)]
 [!code-csharp[XMLProcessingApp#6](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#6)]
 [!code-vb[XMLProcessingApp#6](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#6)]  
  
 <span data-ttu-id="da368-188">**完全なサンプル:** [XML の操作によって、メモリ内、XmlDocument クラスおよびその他を使用して関連する型](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="da368-188">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 <span data-ttu-id="da368-189">**詳細:** [のノードの削除、コンテンツ、および XML ドキュメントからの値](~/docs/standard/data/xml/removing-nodes-content-and-values-from-an-xml-document.md)</span><span class="sxs-lookup"><span data-stu-id="da368-189">**Learn more:** [Removing Nodes, Content, and Values from an XML Document](~/docs/standard/data/xml/removing-nodes-content-and-values-from-an-xml-document.md)</span></span>  
  
<a name="Position"></a>   
## <a name="position-nodes"></a><span data-ttu-id="da368-190">位置のノード</span><span class="sxs-lookup"><span data-stu-id="da368-190">Position nodes</span></span>  
 <span data-ttu-id="da368-191">ノードを使用して、ドキュメントに表示する場所を選択する、<xref:System.Xml.XmlNode.InsertBefore%2A>と<xref:System.Xml.XmlNode.InsertAfter%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="da368-191">You can choose where you want a node to appear in your document by using the <xref:System.Xml.XmlNode.InsertBefore%2A> and <xref:System.Xml.XmlNode.InsertAfter%2A> methods.</span></span>  
  
 <span data-ttu-id="da368-192">この例では、2 つのヘルパー メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="da368-192">This example shows two helper methods.</span></span> <span data-ttu-id="da368-193">上位のノードは、一覧のうち 1 つ移動します。</span><span class="sxs-lookup"><span data-stu-id="da368-193">One of them moves a node higher in a list.</span></span> <span data-ttu-id="da368-194">もう 1 つ下のノードに移動します。</span><span class="sxs-lookup"><span data-stu-id="da368-194">The other one moves a node lower.</span></span>  
  
 <span data-ttu-id="da368-195">これらのメソッドは、ユーザーは、書籍の一覧で、ブックを上下に移動できるようにするアプリケーションで使用できます。</span><span class="sxs-lookup"><span data-stu-id="da368-195">These methods could be used in an application that enables users to move books up and down in a list of books.</span></span> <span data-ttu-id="da368-196">下向きの矢印ボタンまたはをユーザーが本を選択し、上向きがキーを押したときに、コードは前に、またはその他の book ノードの後に、対応するこの book ノードを配置するこのようなメソッドを呼び出す可能性があります。</span><span class="sxs-lookup"><span data-stu-id="da368-196">When a user chooses a book and presses an up or down button, your code could call methods like these to position the corresponding book node before or after other book nodes.</span></span>  
  
 [!code-cpp[XMLProcessingApp#8](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#8)]
 [!code-csharp[XMLProcessingApp#8](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#8)]
 [!code-vb[XMLProcessingApp#8](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#8)]  
  
 <span data-ttu-id="da368-197">**完全なサンプル:** [XML の操作によって、メモリ内、XmlDocument クラスおよびその他を使用して関連する型](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="da368-197">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.XmlNodeChangedEventHandler" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="da368-198">
            <see cref="T:System.Xml.XmlDocument" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-198">Initializes a new instance of the <see cref="T:System.Xml.XmlDocument" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDocument();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da368-199">
            <see cref="T:System.Xml.XmlDocument" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-199">Initializes a new instance of the <see cref="T:System.Xml.XmlDocument" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="da368-200">次は、読み込み時の検証の例です。</span><span class="sxs-lookup"><span data-stu-id="da368-200">The following is an example of load-time validation.</span></span> <span data-ttu-id="da368-201">ドキュメント型定義 (DTD) 検証<xref:System.Xml.XmlReader>に渡される、<xref:System.Xml.XmlDocument.Load%2A>メソッドと<xref:System.Xml.Schema.ValidationEventHandler>検証エラーをユーザーに通知を提供します。</span><span class="sxs-lookup"><span data-stu-id="da368-201">A document type definition (DTD) validating <xref:System.Xml.XmlReader> is passed to the <xref:System.Xml.XmlDocument.Load%2A> method and a <xref:System.Xml.Schema.ValidationEventHandler> is provided to notify users of any validation errors.</span></span> <span data-ttu-id="da368-202">この例では、検証エラーが見つかりましたが、ドキュメントが読み込まれたままです。</span><span class="sxs-lookup"><span data-stu-id="da368-202">In this example a validation error is found, but the document is still loaded.</span></span> <span data-ttu-id="da368-203">検証型を定義する代わりに、<xref:System.Xml.XmlReader>例外をスローし、ないを指定して、検証エラーが検出されると、読み込みプロセスを停止する、<xref:System.Xml.Schema.ValidationEventHandler>します。</span><span class="sxs-lookup"><span data-stu-id="da368-203">Alternatively, you can define a validating <xref:System.Xml.XmlReader> to throw an exception and stop the load process when a validation error is found by not specifying the <xref:System.Xml.Schema.ValidationEventHandler>.</span></span> <span data-ttu-id="da368-204">XML データの検証の詳細については、<xref:System.Xml.XmlReader> のリファレンス ページの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="da368-204">For more information about validating XML data, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 [!code-cpp[XmlDocument.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlDocument.cctor/CPP/docload.cpp#1)]
 [!code-csharp[XmlDocument.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDocument.cctor/CS/docload.cs#1)]
 [!code-vb[XmlDocument.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDocument.cctor/VB/docload.vb#1)]  
  
 <span data-ttu-id="da368-205">この例は、`bookDTD.xml` ファイルを入力として使用します。</span><span class="sxs-lookup"><span data-stu-id="da368-205">The example uses the `bookDTD.xml` file as input.</span></span>  
  
 [!code-xml[XmlDocument.cctor#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDocument.cctor/XML/bookdtd.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlDocument.Load(System.String)" />
        <altmember cref="M:System.Xml.XmlDocument.LoadXml(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal XmlDocument (System.Xml.XmlImplementation imp);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlImplementation imp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlImplementation)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (imp As XmlImplementation)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; XmlDocument(System::Xml::XmlImplementation ^ imp);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlDocument : System.Xml.XmlImplementation -&gt; System.Xml.XmlDocument" Usage="new System.Xml.XmlDocument imp" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="imp" Type="System.Xml.XmlImplementation" />
      </Parameters>
      <Docs>
        <param name="imp">
          <span data-ttu-id="da368-206">使用する <see langword="XmlImplementation" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-206">The <see langword="XmlImplementation" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-207">
            <see langword="XmlDocument" /> を指定して、<see cref="T:System.Xml.XmlImplementation" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-207">Initializes a new instance of the <see langword="XmlDocument" /> class with the specified <see cref="T:System.Xml.XmlImplementation" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDocument (System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDocument(System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlDocument : System.Xml.XmlNameTable -&gt; System.Xml.XmlDocument" Usage="new System.Xml.XmlDocument nt" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="nt">
          <span data-ttu-id="da368-208">使用する <see langword="XmlNameTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-208">The <see langword="XmlNameTable" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-209">
            <see langword="XmlDocument" /> を指定して、<see cref="T:System.Xml.XmlNameTable" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-209">Initializes a new instance of the <see langword="XmlDocument" /> class with the specified <see cref="T:System.Xml.XmlNameTable" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlDocument.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da368-210">現在のノードのベース URI を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-210">Gets the base URI of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da368-211">読み込まれたノードの読み込み元の場所。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-211">The location from which the node was loaded.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-212">ネットワークに接続された XML ドキュメントでは、さまざまな W3C 標準包含メカニズムを使用して集計されたデータのチャンクはで構成され、したがって異なる場所から取得したノードが含まれます。</span><span class="sxs-lookup"><span data-stu-id="da368-212">A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="da368-213">`BaseURI`からこれらのノードが付属していたかがわかります。</span><span class="sxs-lookup"><span data-stu-id="da368-213">The `BaseURI` tells you where these nodes came from.</span></span>  
  
 <span data-ttu-id="da368-214">ドキュメントのノードの`BaseURI`XML ドキュメントの場所を返します。</span><span class="sxs-lookup"><span data-stu-id="da368-214">For Document nodes, `BaseURI` returns the location of the XML document.</span></span> <span data-ttu-id="da368-215">たとえば場合、`XmlDocument`呼び出しの次のドキュメントを使用して読み込まれました。読み込み ("http://server/mydata.xml")、`BaseURI`ドキュメント ノードはhttp://server/mydata.xmlします。</span><span class="sxs-lookup"><span data-stu-id="da368-215">For example, if the `XmlDocument` was loaded using the following call doc.Load("http://server/mydata.xml"), the `BaseURI` for the document node is http://server/mydata.xml.</span></span> <span data-ttu-id="da368-216">ただし場合、<xref:System.Xml.XmlDocument.Load%2A>メソッドがサーバーによって別の URI にリダイレクトされる`BaseURI`に渡される元の URI を返します、`Load`メソッド。</span><span class="sxs-lookup"><span data-stu-id="da368-216">However, if the <xref:System.Xml.XmlDocument.Load%2A> method is redirected by server to a different URI, `BaseURI` returns the original URI passed to the `Load` method.</span></span>  
  
 <span data-ttu-id="da368-217">このプロパティは、DOM (Document Object Model) に対する Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-217">This property is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="da368-218">に関する追加情報について`BaseURI`に他のノード タイプに、動作方法を参照してくださいと<xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="da368-218">For additional information on `BaseURI` and how it behaves with other node types, see <xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; System.Xml.XmlNode" Usage="xmlDocument.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">
          <span data-ttu-id="da368-219">指定したノードの下にあるサブツリーのクローンを順次作成していく場合は <see langword="true" />。指定したノードだけのクローンを作成する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-219">
              <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-220">このノードの複製を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-220">Creates a duplicate of this node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-221">クローンとして作成された <see langword="XmlDocument" /> ノード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-221">The cloned <see langword="XmlDocument" /> node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-222">このメソッドは、ノードのコピー コンス トラクターとして機能します。</span><span class="sxs-lookup"><span data-stu-id="da368-222">This method serves as a copy constructor for nodes.</span></span> <span data-ttu-id="da368-223">複製されたノードが親を持たない (<xref:System.Xml.XmlNode.ParentNode%2A>返します`null`)。</span><span class="sxs-lookup"><span data-stu-id="da368-223">The cloned node has no parent (<xref:System.Xml.XmlNode.ParentNode%2A> returns `null`).</span></span>  
  
 <span data-ttu-id="da368-224">場合`deep`は`true`、複製されたノードのみを含む、すべての子ノードでは、それ以外の場合、`XmlDocument`ノードが複製されます。</span><span class="sxs-lookup"><span data-stu-id="da368-224">If `deep` is `true`, the cloned node includes all the child nodes, otherwise only the `XmlDocument` node is cloned.</span></span> <span data-ttu-id="da368-225">参照してください、<xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=nameWithType>他のノード型でこのメソッドの動作を確認するメソッド。</span><span class="sxs-lookup"><span data-stu-id="da368-225">See the <xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=nameWithType> method to see how this method behaves on other node types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-226">次の例では、deep および shallow 複製の違いを示します。</span><span class="sxs-lookup"><span data-stu-id="da368-226">The following example shows the difference between a deep and shallow clone.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CloneNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CloneNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CloneNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CloneNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CloneNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CloneNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="da368-227">指定した名前を使用して、<see cref="T:System.Xml.XmlAttribute" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-227">Creates an <see cref="T:System.Xml.XmlAttribute" /> with the specified name.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute CreateAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute CreateAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateAttribute (name As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ CreateAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.CreateAttribute : string -&gt; System.Xml.XmlAttribute" Usage="xmlDocument.CreateAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="da368-228">属性の限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-228">The qualified name of the attribute.</span>
          </span>
          <span data-ttu-id="da368-229">名前にコロンが含まれている場合は、名前のうち最初のコロンの前にある部分が <see cref="P:System.Xml.XmlNode.Prefix" /> プロパティに反映され、最初のコロンの後ろの部分が <see cref="P:System.Xml.XmlDocument.LocalName" /> プロパティに反映されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-229">If the name contains a colon, the <see cref="P:System.Xml.XmlNode.Prefix" /> property reflects the part of the name preceding the first colon and the <see cref="P:System.Xml.XmlDocument.LocalName" /> property reflects the part of the name following the first colon.</span>
          </span>
          <span data-ttu-id="da368-230">プリフィックスが xmlns などの認識された組み込みプリフィックスでない限り、<see cref="P:System.Xml.XmlNode.NamespaceURI" /> は空のままです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-230">The <see cref="P:System.Xml.XmlNode.NamespaceURI" /> remains empty unless the prefix is a recognized built-in prefix such as xmlns.</span>
          </span>
          <span data-ttu-id="da368-231">この場合、<see langword="NamespaceURI" /> の値は http://www.w3.org/2000/xmlns/ です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-231">In this case <see langword="NamespaceURI" /> has a value of http://www.w3.org/2000/xmlns/.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-232">指定した <see cref="T:System.Xml.XmlAttribute" /> を使用して <see cref="P:System.Xml.XmlDocument.Name" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-232">Creates an <see cref="T:System.Xml.XmlAttribute" /> with the specified <see cref="P:System.Xml.XmlDocument.Name" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-233">新しい <see langword="XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-233">The new <see langword="XmlAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-234">`XmlAttribute`に追加できる、<xref:System.Xml.XmlElement>を使用して、<xref:System.Xml.XmlElement.SetAttributeNode%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="da368-234">The `XmlAttribute` can be added to an <xref:System.Xml.XmlElement> using the <xref:System.Xml.XmlElement.SetAttributeNode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-235">次の属性を作成し、XML ドキュメントに追加します。</span><span class="sxs-lookup"><span data-stu-id="da368-235">The following creates an attribute and adds it to an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute CreateAttribute (string qualifiedName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute CreateAttribute(string qualifiedName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateAttribute (qualifiedName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ CreateAttribute(System::String ^ qualifiedName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="member this.CreateAttribute : string * string -&gt; System.Xml.XmlAttribute" Usage="xmlDocument.CreateAttribute (qualifiedName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifiedName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="qualifiedName">
          <span data-ttu-id="da368-236">属性の限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-236">The qualified name of the attribute.</span>
          </span>
          <span data-ttu-id="da368-237">名前にコロンが含まれている場合は、名前のうちコロンの前にある部分が <see cref="P:System.Xml.XmlNode.Prefix" /> プロパティに反映され、コロンの後ろの部分が <see cref="P:System.Xml.XmlDocument.LocalName" /> プロパティに反映されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-237">If the name contains a colon then the <see cref="P:System.Xml.XmlNode.Prefix" /> property will reflect the part of the name preceding the colon and the <see cref="P:System.Xml.XmlDocument.LocalName" /> property will reflect the part of the name after the colon.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="da368-238">属性の namespaceURI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-238">The namespaceURI of the attribute.</span>
          </span>
          <span data-ttu-id="da368-239">限定名に xmlns というプレフィックスが含まれている場合、このパラメーターは http://www.w3.org/2000/xmlns/ である必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-239">If the qualified name includes a prefix of xmlns, then this parameter must be http://www.w3.org/2000/xmlns/.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-240">指定した限定名と <see cref="T:System.Xml.XmlAttribute" /> を使用して <see cref="P:System.Xml.XmlNode.NamespaceURI" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-240">Creates an <see cref="T:System.Xml.XmlAttribute" /> with the specified qualified name and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-241">新しい <see langword="XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-241">The new <see langword="XmlAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-242">`XmlAttribute`に追加できる、<xref:System.Xml.XmlElement>を使用して、<xref:System.Xml.XmlElement.SetAttributeNode%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="da368-242">The `XmlAttribute` can be added to an <xref:System.Xml.XmlElement> using the <xref:System.Xml.XmlElement.SetAttributeNode%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttribute">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute CreateAttribute (string prefix, string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute CreateAttribute(string prefix, string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAttribute (prefix As String, localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ CreateAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateAttribute : string * string * string -&gt; System.Xml.XmlAttribute&#xA;override this.CreateAttribute : string * string * string -&gt; System.Xml.XmlAttribute" Usage="xmlDocument.CreateAttribute (prefix, localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="da368-243">属性のプリフィックス (存在する場合)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-243">The prefix of the attribute (if any).</span>
          </span>
          <span data-ttu-id="da368-244">String.Empty と <see langword="null" /> は等価です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-244">String.Empty and <see langword="null" /> are equivalent.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="da368-245">属性のローカル名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-245">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="da368-246">属性の名前空間 URI (存在する場合)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-246">The namespace URI of the attribute (if any).</span>
          </span>
          <span data-ttu-id="da368-247">String.Empty と <see langword="null" /> は等価です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-247">String.Empty and <see langword="null" /> are equivalent.</span>
          </span>
          <span data-ttu-id="da368-248">
            <paramref name="prefix" /> が xmlns の場合、このパラメーターは http://www.w3.org/2000/xmlns/ である必要があります。それ以外の場合は、例外がスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-248">If <paramref name="prefix" /> is xmlns, then this parameter must be http://www.w3.org/2000/xmlns/; otherwise an exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-249">指定した <see cref="T:System.Xml.XmlAttribute" />、<see cref="P:System.Xml.XmlNode.Prefix" />、および <see cref="P:System.Xml.XmlDocument.LocalName" /> を使用して、<see cref="P:System.Xml.XmlNode.NamespaceURI" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-249">Creates an <see cref="T:System.Xml.XmlAttribute" /> with the specified <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-250">新しい <see langword="XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-250">The new <see langword="XmlAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-251">`XmlAttribute`に追加できる、<xref:System.Xml.XmlElement>を使用して、<xref:System.Xml.XmlElement.SetAttributeNode%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="da368-251">The `XmlAttribute` can be added to an <xref:System.Xml.XmlElement> using the <xref:System.Xml.XmlElement.SetAttributeNode%2A> method.</span></span>  
  
 <span data-ttu-id="da368-252">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-252">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCDataSection">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlCDataSection CreateCDataSection (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlCDataSection CreateCDataSection(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateCDataSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCDataSection (data As String) As XmlCDataSection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlCDataSection ^ CreateCDataSection(System::String ^ data);" />
      <MemberSignature Language="F#" Value="abstract member CreateCDataSection : string -&gt; System.Xml.XmlCDataSection&#xA;override this.CreateCDataSection : string -&gt; System.Xml.XmlCDataSection" Usage="xmlDocument.CreateCDataSection data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlCDataSection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="da368-253">新しい <see langword="XmlCDataSection" /> の内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-253">The content of the new <see langword="XmlCDataSection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-254">指定されたデータを格納している <see cref="T:System.Xml.XmlCDataSection" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-254">Creates an <see cref="T:System.Xml.XmlCDataSection" /> containing the specified data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-255">新しい <see langword="XmlCDataSection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-255">The new <see langword="XmlCDataSection" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-256">このメソッドでは、新しいオブジェクトを作成し、ドキュメントのコンテキストが自動的に追加しません、新しいオブジェクト、ドキュメント ツリーに。</span><span class="sxs-lookup"><span data-stu-id="da368-256">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="da368-257">新しいオブジェクトを追加するを明示的に呼び出してノードの挿入方法の 1 つあります。</span><span class="sxs-lookup"><span data-stu-id="da368-257">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="da368-258">勧告 W3C Extensible Markup Language (XML) 1.0 』 (www.w3.org/TR/1998/REC-xml-19980210)、CDataSection ノードは許可されて EntityReference ノードおよび要素ノード内 EntityReference ノードが属性ノードの子ではない場合.</span><span class="sxs-lookup"><span data-stu-id="da368-258">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), CDataSection nodes are allowed within Element nodes and in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-259">次の例では、CDATA のノードを作成し、ドキュメントに追加します。</span><span class="sxs-lookup"><span data-stu-id="da368-259">The following example creates a CDATA node and adds it to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateCDataSection Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateCDataSection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateCDataSection Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateCDataSection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateCDataSection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateCDataSection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateComment">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlComment CreateComment (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlComment CreateComment(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateComment (data As String) As XmlComment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlComment ^ CreateComment(System::String ^ data);" />
      <MemberSignature Language="F#" Value="abstract member CreateComment : string -&gt; System.Xml.XmlComment&#xA;override this.CreateComment : string -&gt; System.Xml.XmlComment" Usage="xmlDocument.CreateComment data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlComment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="da368-260">新しい <see langword="XmlComment" /> の内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-260">The content of the new <see langword="XmlComment" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-261">指定されたデータを格納している <see cref="T:System.Xml.XmlComment" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-261">Creates an <see cref="T:System.Xml.XmlComment" /> containing the specified data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-262">新しい <see langword="XmlComment" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-262">The new <see langword="XmlComment" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-263">このメソッドでは、新しいオブジェクトを作成し、ドキュメントのコンテキストが自動的に追加しません、新しいオブジェクト、ドキュメント ツリーに。</span><span class="sxs-lookup"><span data-stu-id="da368-263">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="da368-264">新しいオブジェクトを追加するを明示的に呼び出してノードの挿入方法の 1 つあります。</span><span class="sxs-lookup"><span data-stu-id="da368-264">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="da368-265">勧告 W3C Extensible Markup Language (XML) 1.0 』 (www.w3.org/TR/1998/REC-xml-19980210) では、コメント ノードは、ドキュメント、要素、EntityReference ノード内で場合にだけ許可 EntityReference ノードが属性の子ではないです。ノードです。</span><span class="sxs-lookup"><span data-stu-id="da368-265">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Comment nodes are only allowed within Document, Element and EntityReference nodes, when the EntityReference node is not a child of an Attribute node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-266">次の例では、コメントを作成し、それを XML ドキュメントに追加します。</span><span class="sxs-lookup"><span data-stu-id="da368-266">The following example creates a comment and adds it to an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateComment Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateComment Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateComment Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateComment Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateComment Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateComment Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultAttribute">
      <MemberSignature Language="C#" Value="protected internal virtual System.Xml.XmlAttribute CreateDefaultAttribute (string prefix, string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Xml.XmlAttribute CreateDefaultAttribute(string prefix, string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateDefaultAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateDefaultAttribute (prefix As String, localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Xml::XmlAttribute ^ CreateDefaultAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateDefaultAttribute : string * string * string -&gt; System.Xml.XmlAttribute&#xA;override this.CreateDefaultAttribute : string * string * string -&gt; System.Xml.XmlAttribute" Usage="xmlDocument.CreateDefaultAttribute (prefix, localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="da368-267">属性のプリフィックス (存在する場合)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-267">The prefix of the attribute (if any).</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="da368-268">属性のローカル名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-268">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="da368-269">属性の名前空間 URI (存在する場合)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-269">The namespace URI of the attribute (if any).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-270">指定したプリフィックス、ローカル名、および名前空間 URI の既定の属性を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-270">Creates a default attribute with the specified prefix, local name and namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-271">新しい <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-271">The new <see cref="T:System.Xml.XmlAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-272">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-272">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentFragment">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocumentFragment CreateDocumentFragment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlDocumentFragment CreateDocumentFragment() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateDocumentFragment" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDocumentFragment () As XmlDocumentFragment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlDocumentFragment ^ CreateDocumentFragment();" />
      <MemberSignature Language="F#" Value="abstract member CreateDocumentFragment : unit -&gt; System.Xml.XmlDocumentFragment&#xA;override this.CreateDocumentFragment : unit -&gt; System.Xml.XmlDocumentFragment" Usage="xmlDocument.CreateDocumentFragment " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocumentFragment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da368-273">
            <see cref="T:System.Xml.XmlDocumentFragment" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-273">Creates an <see cref="T:System.Xml.XmlDocumentFragment" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-274">新しい <see langword="XmlDocumentFragment" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-274">The new <see langword="XmlDocumentFragment" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-275">DocumentFragment ノードは、ドキュメントに挿入することはできません。</span><span class="sxs-lookup"><span data-stu-id="da368-275">DocumentFragment nodes cannot be inserted into a document.</span></span> <span data-ttu-id="da368-276">ただし、DocumentFragment ノードの子をドキュメントに挿入できます。</span><span class="sxs-lookup"><span data-stu-id="da368-276">However, you can insert children of the DocumentFragment node into a document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-277">次の例では、XML ドキュメントに新しいノードを追加します。</span><span class="sxs-lookup"><span data-stu-id="da368-277">The following example adds new nodes to an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateDocumentFragment Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentFragment Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateDocumentFragment Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentFragment Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateDocumentFragment Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentFragment Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentType">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocumentType CreateDocumentType (string name, string publicId, string systemId, string internalSubset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlDocumentType CreateDocumentType(string name, string publicId, string systemId, string internalSubset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateDocumentType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDocumentType (name As String, publicId As String, systemId As String, internalSubset As String) As XmlDocumentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlDocumentType ^ CreateDocumentType(System::String ^ name, System::String ^ publicId, System::String ^ systemId, System::String ^ internalSubset);" />
      <MemberSignature Language="F#" Value="abstract member CreateDocumentType : string * string * string * string -&gt; System.Xml.XmlDocumentType&#xA;override this.CreateDocumentType : string * string * string * string -&gt; System.Xml.XmlDocumentType" Usage="xmlDocument.CreateDocumentType (name, publicId, systemId, internalSubset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocumentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="publicId" Type="System.String" />
        <Parameter Name="systemId" Type="System.String" />
        <Parameter Name="internalSubset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="da368-278">ドキュメントの種類の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-278">Name of the document type.</span>
          </span>
        </param>
        <param name="publicId">
          <span data-ttu-id="da368-279">ドキュメントの種類のパブリック ID または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-279">The public identifier of the document type or <see langword="null" />.</span>
          </span>
          <span data-ttu-id="da368-280">パブリック URI およびシステム ID を指定して、外部 DTD サブセットの場所を特定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-280">You can specify a public URI and also a system identifier to identify the location of the external DTD subset.</span>
          </span>
        </param>
        <param name="systemId">
          <span data-ttu-id="da368-281">ドキュメントの種類のシステム ID または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-281">The system identifier of the document type or <see langword="null" />.</span>
          </span>
          <span data-ttu-id="da368-282">外部 DTD サブセットのファイル位置の URL を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-282">Specifies the URL of the file location for the external DTD subset.</span>
          </span>
        </param>
        <param name="internalSubset">
          <span data-ttu-id="da368-283">ドキュメントの種類の DTD 内部サブセット。または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-283">The DTD internal subset of the document type or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-284">新しい <see cref="T:System.Xml.XmlDocumentType" /> オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-284">Returns a new <see cref="T:System.Xml.XmlDocumentType" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-285">新しい <see langword="XmlDocumentType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-285">The new <see langword="XmlDocumentType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-286">返されたノードが解析が<xref:System.Xml.XmlDocumentType.Entities%2A>と<xref:System.Xml.XmlDocumentType.Notations%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="da368-286">The returned node will have parsed <xref:System.Xml.XmlDocumentType.Entities%2A> and <xref:System.Xml.XmlDocumentType.Notations%2A> collections.</span></span>  
  
 <span data-ttu-id="da368-287">このメソッドでは、新しいオブジェクトを作成し、ドキュメントのコンテキストが自動的に追加しません、新しいオブジェクト、ドキュメント ツリーに。</span><span class="sxs-lookup"><span data-stu-id="da368-287">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="da368-288">新しいオブジェクトを追加するを明示的に呼び出してノードの挿入方法の 1 つあります。</span><span class="sxs-lookup"><span data-stu-id="da368-288">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="da368-289">勧告 W3C Extensible Markup Language (XML) 1.0 』 (www.w3.org/TR/1998/REC-xml-19980210)、DocumentType ノードはドキュメント ノード内でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="da368-289">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), DocumentType nodes are only allowed within Document nodes.</span></span> <span data-ttu-id="da368-290">各<xref:System.Xml.XmlDocument>DocumentType ノードの 1 つだけ持つことができます。</span><span class="sxs-lookup"><span data-stu-id="da368-290">Each <xref:System.Xml.XmlDocument> can have only one DocumentType node.</span></span> <span data-ttu-id="da368-291">DocumentType ノードは、のルート要素の前にも挿入する必要があります、 `XmlDocument` (ドキュメントには、既にルート要素が、ノードを追加できない、DocumentType)。</span><span class="sxs-lookup"><span data-stu-id="da368-291">The DocumentType node must also be inserted before the root element of the `XmlDocument` (if the document already has a root element, you cannot add a DocumentType node).</span></span>  
  
 <span data-ttu-id="da368-292">渡されたパラメーターを組み合わせて、有効なビルドを使用しない場合`XmlDocumentType`例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="da368-292">If the passed parameters do not combine to build a valid `XmlDocumentType`, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-293">次の例では、DocumentType ノードを作成し、XML ドキュメントに追加します。</span><span class="sxs-lookup"><span data-stu-id="da368-293">The following example creates a DocumentType node and adds it to an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateDocumentType Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateDocumentType Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateDocumentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="da368-294">このメソッドは、継承確認要求です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="da368-294">This method has an inheritance demand.</span>
            </span>
            <span data-ttu-id="da368-295">オーバーライドする完全な信頼が必要な<see langword="CreateDocumentType" />メソッド。</span>
            <span class="sxs-lookup">
              <span data-stu-id="da368-295">Full trust is required to override the <see langword="CreateDocumentType" /> method.</span>
            </span>
            <span data-ttu-id="da368-296">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="da368-296">This method is a Microsoft extension to the Document Object Model (DOM).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="da368-297">
            <see cref="T:System.Xml.XmlElement" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-297">Creates an <see cref="T:System.Xml.XmlElement" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateElement">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement CreateElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement CreateElement(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateElement (name As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ CreateElement(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.CreateElement : string -&gt; System.Xml.XmlElement" Usage="xmlDocument.CreateElement name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="da368-298">要素の限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-298">The qualified name of the element.</span>
          </span>
          <span data-ttu-id="da368-299">名前にコロンが含まれている場合は、名前のうちコロンの前にある部分が <see cref="P:System.Xml.XmlNode.Prefix" /> プロパティに反映され、コロンの後ろの部分が <see cref="P:System.Xml.XmlDocument.LocalName" /> プロパティに反映されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-299">If the name contains a colon then the <see cref="P:System.Xml.XmlNode.Prefix" /> property reflects the part of the name preceding the colon and the <see cref="P:System.Xml.XmlDocument.LocalName" /> property reflects the part of the name after the colon.</span>
          </span>
          <span data-ttu-id="da368-300">限定名に 'xmlns' というプリフィックスを含めることはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-300">The qualified name cannot include a prefix of'xmlns'.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-301">指定した名前を使用して要素を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-301">Creates an element with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-302">新しい <see langword="XmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-302">The new <see langword="XmlElement" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-303">インスタンスに実装が返されることに注意してください、`XmlElement`インターフェイスのため、既定の属性が返されるオブジェクトで直接作成されます。</span><span class="sxs-lookup"><span data-stu-id="da368-303">Note that the instance returned implements the `XmlElement` interface, so default attributes would be created directly on the returned object.</span></span>  
  
 <span data-ttu-id="da368-304">このメソッドでは、新しいオブジェクトを作成し、ドキュメントのコンテキストが自動的に追加しません、新しいオブジェクト、ドキュメント ツリーに。</span><span class="sxs-lookup"><span data-stu-id="da368-304">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="da368-305">新しいオブジェクトを追加するを明示的に呼び出してノードの挿入方法の 1 つあります。</span><span class="sxs-lookup"><span data-stu-id="da368-305">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="da368-306">勧告 W3C Extensible Markup Language (XML) 1.0 』 (www.w3.org/TR/1998/REC-xml-19980210) では、要素ノードは許可および EntityReference ノード内のドキュメントおよび要素ノード、EntityReference ノードの子でない場合、属性ノード。</span><span class="sxs-lookup"><span data-stu-id="da368-306">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Element nodes are allowed within Document and Element nodes, and in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-307">次の例では、新しい要素を作成し、ドキュメントに追加します。</span><span class="sxs-lookup"><span data-stu-id="da368-307">The following example creates a new element and adds it to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateElement">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement CreateElement (string qualifiedName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement CreateElement(string qualifiedName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateElement (qualifiedName As String, namespaceURI As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ CreateElement(System::String ^ qualifiedName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="member this.CreateElement : string * string -&gt; System.Xml.XmlElement" Usage="xmlDocument.CreateElement (qualifiedName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifiedName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="qualifiedName">
          <span data-ttu-id="da368-308">要素の限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-308">The qualified name of the element.</span>
          </span>
          <span data-ttu-id="da368-309">名前にコロンが含まれている場合は、名前のうちコロンの前にある部分が <see cref="P:System.Xml.XmlNode.Prefix" /> プロパティに反映され、コロンの後ろの部分が <see cref="P:System.Xml.XmlDocument.LocalName" /> プロパティに反映されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-309">If the name contains a colon then the <see cref="P:System.Xml.XmlNode.Prefix" /> property will reflect the part of the name preceding the colon and the <see cref="P:System.Xml.XmlDocument.LocalName" /> property will reflect the part of the name after the colon.</span>
          </span>
          <span data-ttu-id="da368-310">限定名に 'xmlns' というプリフィックスを含めることはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-310">The qualified name cannot include a prefix of'xmlns'.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="da368-311">要素の名前空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-311">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-312">限定名と <see cref="T:System.Xml.XmlElement" /> を使用して <see cref="P:System.Xml.XmlNode.NamespaceURI" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-312">Creates an <see cref="T:System.Xml.XmlElement" /> with the qualified name and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-313">新しい <see langword="XmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-313">The new <see langword="XmlElement" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-314">次の c# コード</span><span class="sxs-lookup"><span data-stu-id="da368-314">The following C# code</span></span>  
  
```csharp  
XmlElement elem;  
elem=doc.CreateElement("xy:item", "urn:abc");  
```  
  
 <span data-ttu-id="da368-315">結果は次の XML テキストに相当する要素になります。</span><span class="sxs-lookup"><span data-stu-id="da368-315">results in an element that is equivalent to the following XML text.</span></span>  
  
```  
<xy:item  
       xmlns:xy="urn:abc"/>  
```  
  
 <span data-ttu-id="da368-316">このメソッドでは、新しいオブジェクトを作成し、ドキュメントのコンテキストが自動的に追加しません、新しいオブジェクト、ドキュメント ツリーに。</span><span class="sxs-lookup"><span data-stu-id="da368-316">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="da368-317">新しいオブジェクトを追加するを明示的に呼び出してノードの挿入方法の 1 つあります。</span><span class="sxs-lookup"><span data-stu-id="da368-317">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="da368-318">勧告 W3C Extensible Markup Language (XML) 1.0 』 (www.w3.org/TR/1998/REC-xml-19980210) では、要素ノードは許可および EntityReference ノード内のドキュメントおよび要素ノード、EntityReference ノードの子でない場合、属性ノード。</span><span class="sxs-lookup"><span data-stu-id="da368-318">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Element nodes are allowed within Document and Element nodes, and in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateElement">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement CreateElement (string prefix, string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement CreateElement(string prefix, string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateElement (prefix As String, localName As String, namespaceURI As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlElement ^ CreateElement(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateElement : string * string * string -&gt; System.Xml.XmlElement&#xA;override this.CreateElement : string * string * string -&gt; System.Xml.XmlElement" Usage="xmlDocument.CreateElement (prefix, localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="da368-319">新しい要素のプリフィックス (存在する場合)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-319">The prefix of the new element (if any).</span>
          </span>
          <span data-ttu-id="da368-320">String.Empty と <see langword="null" /> は等価です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-320">String.Empty and <see langword="null" /> are equivalent.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="da368-321">新しい要素のローカル名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-321">The local name of the new element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="da368-322">新しい要素の名前空間 URI (存在する場合)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-322">The namespace URI of the new element (if any).</span>
          </span>
          <span data-ttu-id="da368-323">String.Empty と <see langword="null" /> は等価です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-323">String.Empty and <see langword="null" /> are equivalent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-324">指定した <see cref="P:System.Xml.XmlNode.Prefix" />、<see cref="P:System.Xml.XmlDocument.LocalName" />、および <see cref="P:System.Xml.XmlNode.NamespaceURI" /> を使用して、要素を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-324">Creates an element with the specified <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-325">新しい <see cref="T:System.Xml.XmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-325">The new <see cref="T:System.Xml.XmlElement" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-326">次の c# コード</span><span class="sxs-lookup"><span data-stu-id="da368-326">The following C# code</span></span>  
  
```csharp  
XmlElement elem;  
elem=doc.CreateElement("xy", "item", "urn:abc");  
```  
  
 <span data-ttu-id="da368-327">次の XML テキストと等価の要素を作成します。</span><span class="sxs-lookup"><span data-stu-id="da368-327">creates an element equivalent to the following XML text:</span></span>  
  
```  
<xy:item xmlns:xy="urn:abc"/>  
```  
  
 <span data-ttu-id="da368-328">このメソッドでは、新しいオブジェクトを作成し、ドキュメントのコンテキストが自動的に追加しません、新しいオブジェクト、ドキュメント ツリーに。</span><span class="sxs-lookup"><span data-stu-id="da368-328">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="da368-329">新しいオブジェクトを追加するを明示的に呼び出してノードの挿入方法の 1 つあります。</span><span class="sxs-lookup"><span data-stu-id="da368-329">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="da368-330">勧告 W3C Extensible Markup Language (XML) 1.0 』 (www.w3.org/TR/1998/REC-xml-19980210) では、要素ノードが許可されたドキュメントおよび要素のノード内および EntityReference ノードで、EntityReference が属性ノード外にある場合。</span><span class="sxs-lookup"><span data-stu-id="da368-330">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Element nodes are allowed within Document and Element nodes, and in EntityReference nodes when the EntityReference is outside an Attribute node.</span></span>  
  
 <span data-ttu-id="da368-331">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-331">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-332">次の例では、既存の XML ドキュメントに新しい要素を追加します。</span><span class="sxs-lookup"><span data-stu-id="da368-332">The following example adds a new element to the existing XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEntityReference">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlEntityReference CreateEntityReference (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlEntityReference CreateEntityReference(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateEntityReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEntityReference (name As String) As XmlEntityReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlEntityReference ^ CreateEntityReference(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member CreateEntityReference : string -&gt; System.Xml.XmlEntityReference&#xA;override this.CreateEntityReference : string -&gt; System.Xml.XmlEntityReference" Usage="xmlDocument.CreateEntityReference name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlEntityReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="da368-333">エンティティ参照の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-333">The name of the entity reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-334">指定した名前を使用して、<see cref="T:System.Xml.XmlEntityReference" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-334">Creates an <see cref="T:System.Xml.XmlEntityReference" /> with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-335">新しい <see langword="XmlEntityReference" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-335">The new <see langword="XmlEntityReference" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-336">かどうか、参照先エンティティが認識され、子の一覧、 `XmlEntityReference` 、対応するのと同じノードが行われた<xref:System.Xml.XmlEntity>ノード。</span><span class="sxs-lookup"><span data-stu-id="da368-336">If the referenced entity is known, the child list of the `XmlEntityReference` node is made the same as that of the corresponding <xref:System.Xml.XmlEntity> node.</span></span>  
  
 <span data-ttu-id="da368-337">エンティティ参照の置換テキストで使用される名前空間は、(たとえば、エンティティ参照ノードは、ドキュメントに挿入されます) ときにまず、エンティティ参照ノードの親が設定時にバインドされます。</span><span class="sxs-lookup"><span data-stu-id="da368-337">The namespaces used in the replacement text for the entity reference are bound at the time the parent of the entity reference node is first set (for example, when the entity reference node is inserted into the document).</span></span> <span data-ttu-id="da368-338">たとえば、次のエンティティを考えてみます。</span><span class="sxs-lookup"><span data-stu-id="da368-338">For example, given the following entity:</span></span>  
  
```  
<!ENTITY a "<b>test</b>">  
```  
  
 <span data-ttu-id="da368-339">呼び出す場合`CreateEntityReference("a")`戻る型 EntityReference の 1 つのノードに子がありません。</span><span class="sxs-lookup"><span data-stu-id="da368-339">If you call `CreateEntityReference("a")` you get back a single node of type EntityReference with no children.</span></span> <span data-ttu-id="da368-340">このノードを次のノードの子として追加する場合</span><span class="sxs-lookup"><span data-stu-id="da368-340">If you append this node as a child of the following node,</span></span>  
  
```  
<item xmlns="urn:1"/>  
```  
  
 <span data-ttu-id="da368-341">次に、呼び出し元の時<xref:System.Xml.XmlNode.AppendChild%2A>、新しく作成されたエンティティ参照ノードの親が設定され、子は、この名前空間のコンテキストで展開されます。</span><span class="sxs-lookup"><span data-stu-id="da368-341">then, at the time of calling <xref:System.Xml.XmlNode.AppendChild%2A>, the parent of the newly created entity reference node is set and the children are expanded in this namespace context.</span></span> <span data-ttu-id="da368-342">子要素ノード`b`NamespaceURI と等しくする必要があります`urn:1`します。</span><span class="sxs-lookup"><span data-stu-id="da368-342">The child element node `b` will have NamespaceURI equal to `urn:1`.</span></span> <span data-ttu-id="da368-343">エンティティ参照の子ノードでは、エンティティ参照を別の既定の名前空間コンテキストを持つドキュメント内の位置を移動する場合でも、同じままです。</span><span class="sxs-lookup"><span data-stu-id="da368-343">The child nodes of the entity reference remain the same even if you move the entity reference to a place in the document that has a different default namespace context.</span></span> <span data-ttu-id="da368-344">これは、問題は発生しませんの既存のエンティティ参照ノードのクローンを作成するエンティティを参照するを削除し、それを挿入または<xref:System.Xml.XmlDocument.CloneNode%2A>します。</span><span class="sxs-lookup"><span data-stu-id="da368-344">This does not happen for existing entity reference nodes when you remove and insert them or for entity references that you clone with <xref:System.Xml.XmlDocument.CloneNode%2A>.</span></span> <span data-ttu-id="da368-345">また、新しく作成されたエンティティ参照にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="da368-345">It only happens for newly created entity references.</span></span>  
  
 <span data-ttu-id="da368-346">対応するエンティティで定義されていない、DocumentType、エンティティ参照ノードが追加されると、エンティティ参照が定義されていないため、その唯一の子ノードが空のテキスト ノードになります。</span><span class="sxs-lookup"><span data-stu-id="da368-346">If the corresponding entity is not defined in the DocumentType when the entity reference node is added, because the entity reference is not defined, its only child node will be an empty text node.</span></span>  
  
 <span data-ttu-id="da368-347">組み込みエンティティ amp、lt、gt、画像、および quot も許可、および、子テキスト ノード拡張文字の適切な値を持つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="da368-347">The built-in entities amp, lt, gt, apos, and quot are also allowed, and they will have a child text node with the appropriate expanded character value.</span></span>  
  
 <span data-ttu-id="da368-348">このメソッドでは、新しいオブジェクトを作成し、ドキュメントのコンテキストが自動的に追加しません、新しいオブジェクト、ドキュメント ツリーに。</span><span class="sxs-lookup"><span data-stu-id="da368-348">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="da368-349">新しいオブジェクトを追加するを明示的に呼び出してノードの挿入方法の 1 つあります。</span><span class="sxs-lookup"><span data-stu-id="da368-349">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="da368-350">勧告 W3C Extensible Markup Language (XML) 1.0 』 (www.w3.org/TR/1998/REC-xml-19980210) では、EntityReference ノードは要素、属性、および EntityReference ノード内でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="da368-350">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), EntityReference nodes are only allowed within Element, Attribute and EntityReference nodes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-351">次の例では、2 つのエンティティ参照ノードを作成し、XML ドキュメントに挿入します。</span><span class="sxs-lookup"><span data-stu-id="da368-351">The following example creates two entity reference nodes and inserts them into an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateEntityReference Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateEntityReference Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateEntityReference Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateEntityReference Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateEntityReference Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateEntityReference Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da368-352">名前が無効です。たとえば、'#' で始まる名前は無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-352">The name is invalid (for example, names starting with'#' are invalid.)</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNavigator">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="da368-353">このドキュメント内を移動するための、新しい <see cref="T:System.Xml.XPath.XPathNavigator" /> オブジェクトを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-353">Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this document.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public override System.Xml.XPath.XPathNavigator CreateNavigator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateNavigator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateNavigator () As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XPath::XPathNavigator ^ CreateNavigator();" />
      <MemberSignature Language="F#" Value="override this.CreateNavigator : unit -&gt; System.Xml.XPath.XPathNavigator" Usage="xmlDocument.CreateNavigator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da368-354">このドキュメント内を移動するための、新しい <see cref="T:System.Xml.XPath.XPathNavigator" /> オブジェクトを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-354">Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-355">
            <see cref="T:System.Xml.XPath.XPathNavigator" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-355">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-356">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-356">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-357">参照してください<xref:System.Xml.XmlNode.CreateNavigator%2A?displayProperty=nameWithType>たとえば、このメソッドを使用しています。</span><span class="sxs-lookup"><span data-stu-id="da368-357">See <xref:System.Xml.XmlNode.CreateNavigator%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="protected internal virtual System.Xml.XPath.XPathNavigator CreateNavigator (System.Xml.XmlNode node);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator(class System.Xml.XmlNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateNavigator(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateNavigator (node As XmlNode) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Xml::XPath::XPathNavigator ^ CreateNavigator(System::Xml::XmlNode ^ node);" />
      <MemberSignature Language="F#" Value="override this.CreateNavigator : System.Xml.XmlNode -&gt; System.Xml.XPath.XPathNavigator" Usage="xmlDocument.CreateNavigator node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="da368-358">ナビゲーターを最初に配置する <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-358">The <see cref="T:System.Xml.XmlNode" /> you want the navigator initially positioned on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-359">指定した <see cref="T:System.Xml.XPath.XPathNavigator" /> に配置されているこのドキュメント内を移動するための <see cref="T:System.Xml.XmlNode" /> オブジェクトを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-359">Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this document positioned on the <see cref="T:System.Xml.XmlNode" /> specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-360">
            <see cref="T:System.Xml.XPath.XPathNavigator" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-360">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-361">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-361">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-362">参照してください<xref:System.Xml.XmlNode.CreateNavigator%2A?displayProperty=nameWithType>たとえば、このメソッドを使用しています。</span><span class="sxs-lookup"><span data-stu-id="da368-362">See <xref:System.Xml.XmlNode.CreateNavigator%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="da368-363">
            <see cref="T:System.Xml.XmlNode" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-363">Creates an <see cref="T:System.Xml.XmlNode" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode CreateNode (string nodeTypeString, string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode CreateNode(string nodeTypeString, string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateNode(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNode (nodeTypeString As String, name As String, namespaceURI As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ CreateNode(System::String ^ nodeTypeString, System::String ^ name, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateNode : string * string * string -&gt; System.Xml.XmlNode&#xA;override this.CreateNode : string * string * string -&gt; System.Xml.XmlNode" Usage="xmlDocument.CreateNode (nodeTypeString, name, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeTypeString" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nodeTypeString">
          <span data-ttu-id="da368-364">新しいノードの <see cref="T:System.Xml.XmlNodeType" /> の文字列バージョン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-364">String version of the <see cref="T:System.Xml.XmlNodeType" /> of the new node.</span>
          </span>
          <span data-ttu-id="da368-365">このパラメーターは、次の表に示す一覧の値のいずれかである必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-365">This parameter must be one of the values listed in the table below.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="da368-366">新しいノードの限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-366">The qualified name of the new node.</span>
          </span>
          <span data-ttu-id="da368-367">名前にコロンが含まれている場合は、解析結果は <see cref="P:System.Xml.XmlNode.Prefix" /> コンポーネントと <see cref="P:System.Xml.XmlDocument.LocalName" /> コンポーネントになります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-367">If the name contains a colon, it is parsed into <see cref="P:System.Xml.XmlNode.Prefix" /> and <see cref="P:System.Xml.XmlDocument.LocalName" /> components.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="da368-368">新しいノードの名前空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-368">The namespace URI of the new node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-369">指定したノード型、<see cref="T:System.Xml.XmlNode" />、および <see cref="P:System.Xml.XmlDocument.Name" /> を使用して、<see cref="P:System.Xml.XmlNode.NamespaceURI" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-369">Creates an <see cref="T:System.Xml.XmlNode" /> with the specified node type, <see cref="P:System.Xml.XmlDocument.Name" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-370">新しい <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-370">The new <see langword="XmlNode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-371">`nodeTypeString`パラメーターは大文字小文字を区別し、次の表の値のいずれかを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da368-371">The `nodeTypeString` parameter is case sensitive and must be one of the values in the following table.</span></span>  
  
|<span data-ttu-id="da368-372">nodeTypeString</span><span class="sxs-lookup"><span data-stu-id="da368-372">nodeTypeString</span></span>|<span data-ttu-id="da368-373">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="da368-373">XmlNodeType</span></span>|  
|--------------------|-----------------|  
|<span data-ttu-id="da368-374">属性</span><span class="sxs-lookup"><span data-stu-id="da368-374">attribute</span></span>|<span data-ttu-id="da368-375">Attribute</span><span class="sxs-lookup"><span data-stu-id="da368-375">Attribute</span></span>|  
|<span data-ttu-id="da368-376">cdatasection</span><span class="sxs-lookup"><span data-stu-id="da368-376">cdatasection</span></span>|<span data-ttu-id="da368-377">CDATA</span><span class="sxs-lookup"><span data-stu-id="da368-377">CDATA</span></span>|  
|<span data-ttu-id="da368-378">コメント</span><span class="sxs-lookup"><span data-stu-id="da368-378">comment</span></span>|<span data-ttu-id="da368-379">コメント</span><span class="sxs-lookup"><span data-stu-id="da368-379">Comment</span></span>|  
|<span data-ttu-id="da368-380">ドキュメント</span><span class="sxs-lookup"><span data-stu-id="da368-380">document</span></span>|<span data-ttu-id="da368-381">Document</span><span class="sxs-lookup"><span data-stu-id="da368-381">Document</span></span>|  
|<span data-ttu-id="da368-382">documentfragment</span><span class="sxs-lookup"><span data-stu-id="da368-382">documentfragment</span></span>|<span data-ttu-id="da368-383">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="da368-383">DocumentFragment</span></span>|  
|<span data-ttu-id="da368-384">documenttype</span><span class="sxs-lookup"><span data-stu-id="da368-384">documenttype</span></span>|<span data-ttu-id="da368-385">DocumentType</span><span class="sxs-lookup"><span data-stu-id="da368-385">DocumentType</span></span>|  
|<span data-ttu-id="da368-386">要素</span><span class="sxs-lookup"><span data-stu-id="da368-386">element</span></span>|<span data-ttu-id="da368-387">要素</span><span class="sxs-lookup"><span data-stu-id="da368-387">Element</span></span>|  
|<span data-ttu-id="da368-388">entityreference</span><span class="sxs-lookup"><span data-stu-id="da368-388">entityreference</span></span>|<span data-ttu-id="da368-389">EntityReference</span><span class="sxs-lookup"><span data-stu-id="da368-389">EntityReference</span></span>|  
|<span data-ttu-id="da368-390">processinginstruction</span><span class="sxs-lookup"><span data-stu-id="da368-390">processinginstruction</span></span>|<span data-ttu-id="da368-391">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="da368-391">ProcessingInstruction</span></span>|  
|<span data-ttu-id="da368-392">significantwhitespace</span><span class="sxs-lookup"><span data-stu-id="da368-392">significantwhitespace</span></span>|<span data-ttu-id="da368-393">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="da368-393">SignificantWhitespace</span></span>|  
|<span data-ttu-id="da368-394">テキスト</span><span class="sxs-lookup"><span data-stu-id="da368-394">text</span></span>|<span data-ttu-id="da368-395">テキスト</span><span class="sxs-lookup"><span data-stu-id="da368-395">Text</span></span>|  
|<span data-ttu-id="da368-396">whitespace</span><span class="sxs-lookup"><span data-stu-id="da368-396">whitespace</span></span>|<span data-ttu-id="da368-397">Whitespace</span><span class="sxs-lookup"><span data-stu-id="da368-397">Whitespace</span></span>|  
  
 <span data-ttu-id="da368-398">このメソッドでは、新しいオブジェクトを作成し、ドキュメントのコンテキストが自動的に追加しません、新しいオブジェクト、ドキュメント ツリーに。</span><span class="sxs-lookup"><span data-stu-id="da368-398">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="da368-399">新しいオブジェクトを追加するを明示的に呼び出してノードの挿入方法の 1 つあります。</span><span class="sxs-lookup"><span data-stu-id="da368-399">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="da368-400">次の表は、どのような NodeType は勧告 W3C Extensible Markup Language (XML) 1.0 』 (www.w3.org/TR/1998/REC-xml-19980210) もう 1 つの NodeType [column] 内で [行] を許可します。</span><span class="sxs-lookup"><span data-stu-id="da368-400">The following table shows you what NodeType[row] is allowed inside another NodeType[column] according to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210).</span></span>  
  
||<span data-ttu-id="da368-401">Document</span><span class="sxs-lookup"><span data-stu-id="da368-401">Document</span></span>|<span data-ttu-id="da368-402">DocumentType</span><span class="sxs-lookup"><span data-stu-id="da368-402">DocumentType</span></span>|<span data-ttu-id="da368-403">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="da368-403">XmlDeclaration</span></span>|<span data-ttu-id="da368-404">要素</span><span class="sxs-lookup"><span data-stu-id="da368-404">Element</span></span>|<span data-ttu-id="da368-405">Attribute</span><span class="sxs-lookup"><span data-stu-id="da368-405">Attribute</span></span>|<span data-ttu-id="da368-406">テキスト</span><span class="sxs-lookup"><span data-stu-id="da368-406">Text</span></span>|<span data-ttu-id="da368-407">CDATA</span><span class="sxs-lookup"><span data-stu-id="da368-407">CDATA</span></span>|<span data-ttu-id="da368-408">マークアップ</span><span class="sxs-lookup"><span data-stu-id="da368-408">Markup</span></span>|<span data-ttu-id="da368-409">EntityReference</span><span class="sxs-lookup"><span data-stu-id="da368-409">EntityReference</span></span>|  
|------|--------------|------------------|--------------------|-------------|---------------|----------|-----------|------------|---------------------|  
|`Document`|<span data-ttu-id="da368-410">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-410">no</span></span>|<span data-ttu-id="da368-411">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-411">no</span></span>|<span data-ttu-id="da368-412">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-412">no</span></span>|<span data-ttu-id="da368-413">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-413">no</span></span>|<span data-ttu-id="da368-414">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-414">no</span></span>|<span data-ttu-id="da368-415">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-415">no</span></span>|<span data-ttu-id="da368-416">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-416">no</span></span>|<span data-ttu-id="da368-417">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-417">no</span></span>|<span data-ttu-id="da368-418">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-418">no</span></span>|  
|`DocumentType`|<span data-ttu-id="da368-419">可</span><span class="sxs-lookup"><span data-stu-id="da368-419">yes</span></span>|<span data-ttu-id="da368-420">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-420">no</span></span>|<span data-ttu-id="da368-421">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-421">no</span></span>|<span data-ttu-id="da368-422">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-422">no</span></span>|<span data-ttu-id="da368-423">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-423">no</span></span>|<span data-ttu-id="da368-424">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-424">no</span></span>|<span data-ttu-id="da368-425">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-425">no</span></span>|<span data-ttu-id="da368-426">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-426">no</span></span>|<span data-ttu-id="da368-427">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-427">no</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="da368-428">[はい] \*</span><span class="sxs-lookup"><span data-stu-id="da368-428">yes\*</span></span>|<span data-ttu-id="da368-429">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-429">no</span></span>|<span data-ttu-id="da368-430">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-430">no</span></span>|<span data-ttu-id="da368-431">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-431">no</span></span>|<span data-ttu-id="da368-432">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-432">no</span></span>|<span data-ttu-id="da368-433">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-433">no</span></span>|<span data-ttu-id="da368-434">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-434">no</span></span>|<span data-ttu-id="da368-435">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-435">no</span></span>|<span data-ttu-id="da368-436">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-436">no</span></span>|  
|`Element`|<span data-ttu-id="da368-437">可</span><span class="sxs-lookup"><span data-stu-id="da368-437">yes</span></span>|<span data-ttu-id="da368-438">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-438">no</span></span>|<span data-ttu-id="da368-439">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-439">no</span></span>|<span data-ttu-id="da368-440">可</span><span class="sxs-lookup"><span data-stu-id="da368-440">yes</span></span>|<span data-ttu-id="da368-441">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-441">no</span></span>|<span data-ttu-id="da368-442">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-442">no</span></span>|<span data-ttu-id="da368-443">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-443">no</span></span>|<span data-ttu-id="da368-444">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-444">no</span></span>|<span data-ttu-id="da368-445">[はい] \* \* \*</span><span class="sxs-lookup"><span data-stu-id="da368-445">yes\*\*\*</span></span>|  
|`Attribute`|<span data-ttu-id="da368-446">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-446">no</span></span>|<span data-ttu-id="da368-447">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-447">no</span></span>|<span data-ttu-id="da368-448">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-448">no</span></span>|<span data-ttu-id="da368-449">[はい] \* \* \*</span><span class="sxs-lookup"><span data-stu-id="da368-449">yes\*\*\*\*</span></span>|<span data-ttu-id="da368-450">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-450">no</span></span>|<span data-ttu-id="da368-451">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-451">no</span></span>|<span data-ttu-id="da368-452">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-452">no</span></span>|<span data-ttu-id="da368-453">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-453">no</span></span>|<span data-ttu-id="da368-454">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-454">no</span></span>|  
|`Text`|<span data-ttu-id="da368-455">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-455">no</span></span>|<span data-ttu-id="da368-456">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-456">no</span></span>|<span data-ttu-id="da368-457">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-457">no</span></span>|<span data-ttu-id="da368-458">可</span><span class="sxs-lookup"><span data-stu-id="da368-458">yes</span></span>|<span data-ttu-id="da368-459">可</span><span class="sxs-lookup"><span data-stu-id="da368-459">yes</span></span>|<span data-ttu-id="da368-460">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-460">no</span></span>|<span data-ttu-id="da368-461">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-461">no</span></span>|<span data-ttu-id="da368-462">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-462">no</span></span>|<span data-ttu-id="da368-463">可</span><span class="sxs-lookup"><span data-stu-id="da368-463">yes</span></span>|  
|`CDATA`|<span data-ttu-id="da368-464">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-464">no</span></span>|<span data-ttu-id="da368-465">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-465">no</span></span>|<span data-ttu-id="da368-466">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-466">no</span></span>|<span data-ttu-id="da368-467">可</span><span class="sxs-lookup"><span data-stu-id="da368-467">yes</span></span>|<span data-ttu-id="da368-468">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-468">no</span></span>|<span data-ttu-id="da368-469">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-469">no</span></span>|<span data-ttu-id="da368-470">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-470">no</span></span>|<span data-ttu-id="da368-471">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-471">no</span></span>|<span data-ttu-id="da368-472">[はい] \* \* \*</span><span class="sxs-lookup"><span data-stu-id="da368-472">yes\*\*\*</span></span>|  
|`Markup**`|<span data-ttu-id="da368-473">可</span><span class="sxs-lookup"><span data-stu-id="da368-473">yes</span></span>|<span data-ttu-id="da368-474">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-474">no</span></span>|<span data-ttu-id="da368-475">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-475">no</span></span>|<span data-ttu-id="da368-476">可</span><span class="sxs-lookup"><span data-stu-id="da368-476">yes</span></span>|<span data-ttu-id="da368-477">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-477">no</span></span>|<span data-ttu-id="da368-478">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-478">no</span></span>|<span data-ttu-id="da368-479">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-479">no</span></span>|<span data-ttu-id="da368-480">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-480">no</span></span>|<span data-ttu-id="da368-481">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-481">no</span></span>|  
|`EntityReference`|<span data-ttu-id="da368-482">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-482">no</span></span>|<span data-ttu-id="da368-483">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-483">no</span></span>|<span data-ttu-id="da368-484">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-484">no</span></span>|<span data-ttu-id="da368-485">可</span><span class="sxs-lookup"><span data-stu-id="da368-485">yes</span></span>|<span data-ttu-id="da368-486">可</span><span class="sxs-lookup"><span data-stu-id="da368-486">yes</span></span>|<span data-ttu-id="da368-487">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-487">no</span></span>|<span data-ttu-id="da368-488">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-488">no</span></span>|<span data-ttu-id="da368-489">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-489">no</span></span>|<span data-ttu-id="da368-490">可</span><span class="sxs-lookup"><span data-stu-id="da368-490">yes</span></span>|  
  
 <span data-ttu-id="da368-491">\* XmlDeclaration ノードはドキュメント ノードの最初の子である必要があります。</span><span class="sxs-lookup"><span data-stu-id="da368-491">\* The XmlDeclaration node must be the first child of the Document node.</span></span>  
  
 <span data-ttu-id="da368-492">\* \* マークアップには、ProcessingInstruction とコメント ノードが含まれています。</span><span class="sxs-lookup"><span data-stu-id="da368-492">\*\* Markup includes ProcessingInstruction and Comment nodes.</span></span>  
  
 <span data-ttu-id="da368-493">EntityReference ノードが属性ノードの子ではない場合にのみ、要素と CDATA のノードが EntityReference ノードで使用できます。</span><span class="sxs-lookup"><span data-stu-id="da368-493">\*\*\* Element and CDATA nodes are only allowed in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
 <span data-ttu-id="da368-494">属性は要素ノードの子ではありません。</span><span class="sxs-lookup"><span data-stu-id="da368-494">\*\*\*\* Attributes are not children of an Element node.</span></span> <span data-ttu-id="da368-495">属性は、要素ノードが属している属性コレクション内に格納されます。</span><span class="sxs-lookup"><span data-stu-id="da368-495">Attributes are contained inside an attribute collection that belongs to an Element node.</span></span>  
  
 <span data-ttu-id="da368-496">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-496">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-497">次の例では、新しい要素を作成し、ドキュメントに挿入します。</span><span class="sxs-lookup"><span data-stu-id="da368-497">The following example creates a new element and inserts it into the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateNode1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateNode1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateNode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da368-498">名前が指定されませんでした。<see langword="XmlNodeType" /> には名前が必要です。または、<paramref name="nodeTypeString" /> が下に一覧表示した文字列ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-498">The name was not provided and the <see langword="XmlNodeType" /> requires a name; or <paramref name="nodeTypeString" /> is not one of the strings listed below.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode CreateNode (System.Xml.XmlNodeType type, string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode CreateNode(valuetype System.Xml.XmlNodeType type, string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNode (type As XmlNodeType, name As String, namespaceURI As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ CreateNode(System::Xml::XmlNodeType type, System::String ^ name, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateNode : System.Xml.XmlNodeType * string * string -&gt; System.Xml.XmlNode&#xA;override this.CreateNode : System.Xml.XmlNodeType * string * string -&gt; System.Xml.XmlNode" Usage="xmlDocument.CreateNode (type, name, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XmlNodeType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="da368-499">新しいノードの <see langword="XmlNodeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-499">The <see langword="XmlNodeType" /> of the new node.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="da368-500">新しいノードの修飾名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-500">The qualified name of the new node.</span>
          </span>
          <span data-ttu-id="da368-501">名前にコロンが含まれている場合、解析結果は <see cref="P:System.Xml.XmlNode.Prefix" /> コンポーネントと <see cref="P:System.Xml.XmlDocument.LocalName" /> コンポーネントになります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-501">If the name contains a colon then it is parsed into <see cref="P:System.Xml.XmlNode.Prefix" /> and <see cref="P:System.Xml.XmlDocument.LocalName" /> components.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="da368-502">新しいノードの名前空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-502">The namespace URI of the new node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-503">指定した <see cref="T:System.Xml.XmlNode" />、<see cref="T:System.Xml.XmlNodeType" />、および <see cref="P:System.Xml.XmlDocument.Name" /> を使用して、<see cref="P:System.Xml.XmlNode.NamespaceURI" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-503">Creates an <see cref="T:System.Xml.XmlNode" /> with the specified <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlDocument.Name" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-504">新しい <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-504">The new <see langword="XmlNode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-505">このメソッドでは、新しいオブジェクトを作成し、ドキュメントのコンテキストが自動的に追加しません、新しいオブジェクト、ドキュメント ツリーに。</span><span class="sxs-lookup"><span data-stu-id="da368-505">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="da368-506">新しいオブジェクトを追加するを明示的に呼び出してノードの挿入方法の 1 つあります。</span><span class="sxs-lookup"><span data-stu-id="da368-506">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="da368-507">次の表は、どのような NodeType は勧告 W3C Extensible Markup Language (XML) 1.0 』 (www.w3.org/TR/1998/REC-xml-19980210) もう 1 つの NodeType [column] 内で [行] を許可します。</span><span class="sxs-lookup"><span data-stu-id="da368-507">The following table shows you what NodeType[row] is allowed inside another NodeType[column] according to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210).</span></span>  
  
||<span data-ttu-id="da368-508">Document</span><span class="sxs-lookup"><span data-stu-id="da368-508">Document</span></span>|<span data-ttu-id="da368-509">DocumentType</span><span class="sxs-lookup"><span data-stu-id="da368-509">DocumentType</span></span>|<span data-ttu-id="da368-510">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="da368-510">XmlDeclaration</span></span>|<span data-ttu-id="da368-511">要素</span><span class="sxs-lookup"><span data-stu-id="da368-511">Element</span></span>|<span data-ttu-id="da368-512">Attribute</span><span class="sxs-lookup"><span data-stu-id="da368-512">Attribute</span></span>|<span data-ttu-id="da368-513">テキスト</span><span class="sxs-lookup"><span data-stu-id="da368-513">Text</span></span>|<span data-ttu-id="da368-514">CDATA</span><span class="sxs-lookup"><span data-stu-id="da368-514">CDATA</span></span>|<span data-ttu-id="da368-515">マークアップ</span><span class="sxs-lookup"><span data-stu-id="da368-515">Markup</span></span>|<span data-ttu-id="da368-516">EntityReference</span><span class="sxs-lookup"><span data-stu-id="da368-516">EntityReference</span></span>|  
|------|--------------|------------------|--------------------|-------------|---------------|----------|-----------|------------|---------------------|  
|`Document`|<span data-ttu-id="da368-517">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-517">no</span></span>|<span data-ttu-id="da368-518">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-518">no</span></span>|<span data-ttu-id="da368-519">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-519">no</span></span>|<span data-ttu-id="da368-520">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-520">no</span></span>|<span data-ttu-id="da368-521">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-521">no</span></span>|<span data-ttu-id="da368-522">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-522">no</span></span>|<span data-ttu-id="da368-523">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-523">no</span></span>|<span data-ttu-id="da368-524">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-524">no</span></span>|<span data-ttu-id="da368-525">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-525">no</span></span>|  
|`DocumentType`|<span data-ttu-id="da368-526">可</span><span class="sxs-lookup"><span data-stu-id="da368-526">yes</span></span>|<span data-ttu-id="da368-527">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-527">no</span></span>|<span data-ttu-id="da368-528">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-528">no</span></span>|<span data-ttu-id="da368-529">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-529">no</span></span>|<span data-ttu-id="da368-530">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-530">no</span></span>|<span data-ttu-id="da368-531">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-531">no</span></span>|<span data-ttu-id="da368-532">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-532">no</span></span>|<span data-ttu-id="da368-533">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-533">no</span></span>|<span data-ttu-id="da368-534">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-534">no</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="da368-535">[はい] \*</span><span class="sxs-lookup"><span data-stu-id="da368-535">yes\*</span></span>|<span data-ttu-id="da368-536">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-536">no</span></span>|<span data-ttu-id="da368-537">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-537">no</span></span>|<span data-ttu-id="da368-538">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-538">no</span></span>|<span data-ttu-id="da368-539">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-539">no</span></span>|<span data-ttu-id="da368-540">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-540">no</span></span>|<span data-ttu-id="da368-541">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-541">no</span></span>|<span data-ttu-id="da368-542">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-542">no</span></span>|<span data-ttu-id="da368-543">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-543">no</span></span>|  
|`Element`|<span data-ttu-id="da368-544">可</span><span class="sxs-lookup"><span data-stu-id="da368-544">yes</span></span>|<span data-ttu-id="da368-545">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-545">no</span></span>|<span data-ttu-id="da368-546">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-546">no</span></span>|<span data-ttu-id="da368-547">可</span><span class="sxs-lookup"><span data-stu-id="da368-547">yes</span></span>|<span data-ttu-id="da368-548">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-548">no</span></span>|<span data-ttu-id="da368-549">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-549">no</span></span>|<span data-ttu-id="da368-550">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-550">no</span></span>|<span data-ttu-id="da368-551">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-551">no</span></span>|<span data-ttu-id="da368-552">[はい] \* \* \*</span><span class="sxs-lookup"><span data-stu-id="da368-552">yes\*\*\*</span></span>|  
|`Attribute`|<span data-ttu-id="da368-553">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-553">no</span></span>|<span data-ttu-id="da368-554">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-554">no</span></span>|<span data-ttu-id="da368-555">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-555">no</span></span>|<span data-ttu-id="da368-556">[はい] \* \* \*</span><span class="sxs-lookup"><span data-stu-id="da368-556">yes\*\*\*\*</span></span>|<span data-ttu-id="da368-557">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-557">no</span></span>|<span data-ttu-id="da368-558">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-558">no</span></span>|<span data-ttu-id="da368-559">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-559">no</span></span>|<span data-ttu-id="da368-560">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-560">no</span></span>|<span data-ttu-id="da368-561">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-561">no</span></span>|  
|`Text`|<span data-ttu-id="da368-562">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-562">no</span></span>|<span data-ttu-id="da368-563">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-563">no</span></span>|<span data-ttu-id="da368-564">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-564">no</span></span>|<span data-ttu-id="da368-565">可</span><span class="sxs-lookup"><span data-stu-id="da368-565">yes</span></span>|<span data-ttu-id="da368-566">可</span><span class="sxs-lookup"><span data-stu-id="da368-566">yes</span></span>|<span data-ttu-id="da368-567">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-567">no</span></span>|<span data-ttu-id="da368-568">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-568">no</span></span>|<span data-ttu-id="da368-569">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-569">no</span></span>|<span data-ttu-id="da368-570">可</span><span class="sxs-lookup"><span data-stu-id="da368-570">yes</span></span>|  
|`CDATA`|<span data-ttu-id="da368-571">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-571">no</span></span>|<span data-ttu-id="da368-572">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-572">no</span></span>|<span data-ttu-id="da368-573">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-573">no</span></span>|<span data-ttu-id="da368-574">可</span><span class="sxs-lookup"><span data-stu-id="da368-574">yes</span></span>|<span data-ttu-id="da368-575">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-575">no</span></span>|<span data-ttu-id="da368-576">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-576">no</span></span>|<span data-ttu-id="da368-577">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-577">no</span></span>|<span data-ttu-id="da368-578">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-578">no</span></span>|<span data-ttu-id="da368-579">[はい] \* \* \*</span><span class="sxs-lookup"><span data-stu-id="da368-579">yes\*\*\*</span></span>|  
|`Markup**`|<span data-ttu-id="da368-580">可</span><span class="sxs-lookup"><span data-stu-id="da368-580">yes</span></span>|<span data-ttu-id="da368-581">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-581">no</span></span>|<span data-ttu-id="da368-582">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-582">no</span></span>|<span data-ttu-id="da368-583">可</span><span class="sxs-lookup"><span data-stu-id="da368-583">yes</span></span>|<span data-ttu-id="da368-584">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-584">no</span></span>|<span data-ttu-id="da368-585">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-585">no</span></span>|<span data-ttu-id="da368-586">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-586">no</span></span>|<span data-ttu-id="da368-587">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-587">no</span></span>|<span data-ttu-id="da368-588">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-588">no</span></span>|  
|`EntityReference`|<span data-ttu-id="da368-589">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-589">no</span></span>|<span data-ttu-id="da368-590">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-590">no</span></span>|<span data-ttu-id="da368-591">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-591">no</span></span>|<span data-ttu-id="da368-592">可</span><span class="sxs-lookup"><span data-stu-id="da368-592">yes</span></span>|<span data-ttu-id="da368-593">可</span><span class="sxs-lookup"><span data-stu-id="da368-593">yes</span></span>|<span data-ttu-id="da368-594">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-594">no</span></span>|<span data-ttu-id="da368-595">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-595">no</span></span>|<span data-ttu-id="da368-596">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-596">no</span></span>|<span data-ttu-id="da368-597">可</span><span class="sxs-lookup"><span data-stu-id="da368-597">yes</span></span>|  
  
 <span data-ttu-id="da368-598">\* XmlDeclaration ノードはドキュメント ノードの最初の子である必要があります。</span><span class="sxs-lookup"><span data-stu-id="da368-598">\* The XmlDeclaration node must be the first child of the Document node.</span></span>  
  
 <span data-ttu-id="da368-599">\* \* マークアップには、ProcessingInstruction とコメント ノードが含まれています。</span><span class="sxs-lookup"><span data-stu-id="da368-599">\*\* Markup includes ProcessingInstruction and Comment nodes.</span></span>  
  
 <span data-ttu-id="da368-600">EntityReference ノードが属性ノードの子ではない場合にのみ、要素と CDATA のノードが EntityReference ノードで使用できます。</span><span class="sxs-lookup"><span data-stu-id="da368-600">\*\*\* Element and CDATA nodes are only allowed in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
 <span data-ttu-id="da368-601">属性は要素ノードの子ではありません。</span><span class="sxs-lookup"><span data-stu-id="da368-601">\*\*\*\* Attributes are not children of an Element node.</span></span> <span data-ttu-id="da368-602">属性は、要素ノードが属している属性コレクション内に格納されます。</span><span class="sxs-lookup"><span data-stu-id="da368-602">Attributes are contained inside an attribute collection that belongs to an Element node.</span></span>  
  
 <span data-ttu-id="da368-603">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-603">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-604">次の例では、新しい要素を作成し、XML ドキュメントに挿入します。</span><span class="sxs-lookup"><span data-stu-id="da368-604">The following example creates a new element and inserts it into an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da368-605">名前が指定されませんでした。<see langword="XmlNodeType" /> には名前が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-605">The name was not provided and the <see langword="XmlNodeType" /> requires a name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode CreateNode (System.Xml.XmlNodeType type, string prefix, string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode CreateNode(valuetype System.Xml.XmlNodeType type, string prefix, string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNode (type As XmlNodeType, prefix As String, name As String, namespaceURI As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ CreateNode(System::Xml::XmlNodeType type, System::String ^ prefix, System::String ^ name, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateNode : System.Xml.XmlNodeType * string * string * string -&gt; System.Xml.XmlNode&#xA;override this.CreateNode : System.Xml.XmlNodeType * string * string * string -&gt; System.Xml.XmlNode" Usage="xmlDocument.CreateNode (type, prefix, name, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XmlNodeType" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="da368-606">新しいノードの <see langword="XmlNodeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-606">The <see langword="XmlNodeType" /> of the new node.</span>
          </span>
        </param>
        <param name="prefix">
          <span data-ttu-id="da368-607">新しいノードのプリフィックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-607">The prefix of the new node.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="da368-608">新しいノードのローカル名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-608">The local name of the new node.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="da368-609">新しいノードの名前空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-609">The namespace URI of the new node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-610">指定した <see cref="T:System.Xml.XmlNode" />、<see cref="T:System.Xml.XmlNodeType" />、<see cref="P:System.Xml.XmlNode.Prefix" />、および <see cref="P:System.Xml.XmlDocument.Name" /> を使用して、<see cref="P:System.Xml.XmlNode.NamespaceURI" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-610">Creates a <see cref="T:System.Xml.XmlNode" /> with the specified <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.Name" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-611">新しい <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-611">The new <see langword="XmlNode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-612">このメソッドでは、新しいオブジェクトを作成し、ドキュメントのコンテキストが自動的に追加しません、新しいオブジェクト、ドキュメント ツリーに。</span><span class="sxs-lookup"><span data-stu-id="da368-612">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="da368-613">新しいオブジェクトを追加するを明示的に呼び出してノードの挿入方法の 1 つあります。</span><span class="sxs-lookup"><span data-stu-id="da368-613">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="da368-614">次の表は、どのような NodeType は勧告 W3C Extensible Markup Language (XML) 1.0 』 (www.w3.org/TR/1998/REC-xml-19980210) もう 1 つの NodeType [column] 内で [行] を許可します。</span><span class="sxs-lookup"><span data-stu-id="da368-614">The following table shows you what NodeType[row] is allowed inside another NodeType[column] according to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210).</span></span>  
  
||<span data-ttu-id="da368-615">Document</span><span class="sxs-lookup"><span data-stu-id="da368-615">Document</span></span>|<span data-ttu-id="da368-616">DocumentType</span><span class="sxs-lookup"><span data-stu-id="da368-616">DocumentType</span></span>|<span data-ttu-id="da368-617">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="da368-617">XmlDeclaration</span></span>|<span data-ttu-id="da368-618">要素</span><span class="sxs-lookup"><span data-stu-id="da368-618">Element</span></span>|<span data-ttu-id="da368-619">Attribute</span><span class="sxs-lookup"><span data-stu-id="da368-619">Attribute</span></span>|<span data-ttu-id="da368-620">テキスト</span><span class="sxs-lookup"><span data-stu-id="da368-620">Text</span></span>|<span data-ttu-id="da368-621">CDATA</span><span class="sxs-lookup"><span data-stu-id="da368-621">CDATA</span></span>|<span data-ttu-id="da368-622">マークアップ</span><span class="sxs-lookup"><span data-stu-id="da368-622">Markup</span></span>|<span data-ttu-id="da368-623">EntityReference</span><span class="sxs-lookup"><span data-stu-id="da368-623">EntityReference</span></span>|  
|------|--------------|------------------|--------------------|-------------|---------------|----------|-----------|------------|---------------------|  
|`Document`|<span data-ttu-id="da368-624">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-624">no</span></span>|<span data-ttu-id="da368-625">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-625">no</span></span>|<span data-ttu-id="da368-626">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-626">no</span></span>|<span data-ttu-id="da368-627">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-627">no</span></span>|<span data-ttu-id="da368-628">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-628">no</span></span>|<span data-ttu-id="da368-629">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-629">no</span></span>|<span data-ttu-id="da368-630">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-630">no</span></span>|<span data-ttu-id="da368-631">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-631">no</span></span>|<span data-ttu-id="da368-632">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-632">no</span></span>|  
|`DocumentType`|<span data-ttu-id="da368-633">可</span><span class="sxs-lookup"><span data-stu-id="da368-633">yes</span></span>|<span data-ttu-id="da368-634">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-634">no</span></span>|<span data-ttu-id="da368-635">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-635">no</span></span>|<span data-ttu-id="da368-636">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-636">no</span></span>|<span data-ttu-id="da368-637">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-637">no</span></span>|<span data-ttu-id="da368-638">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-638">no</span></span>|<span data-ttu-id="da368-639">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-639">no</span></span>|<span data-ttu-id="da368-640">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-640">no</span></span>|<span data-ttu-id="da368-641">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-641">no</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="da368-642">[はい] \*</span><span class="sxs-lookup"><span data-stu-id="da368-642">yes\*</span></span>|<span data-ttu-id="da368-643">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-643">no</span></span>|<span data-ttu-id="da368-644">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-644">no</span></span>|<span data-ttu-id="da368-645">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-645">no</span></span>|<span data-ttu-id="da368-646">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-646">no</span></span>|<span data-ttu-id="da368-647">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-647">no</span></span>|<span data-ttu-id="da368-648">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-648">no</span></span>|<span data-ttu-id="da368-649">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-649">no</span></span>|<span data-ttu-id="da368-650">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-650">no</span></span>|  
|`Element`|<span data-ttu-id="da368-651">可</span><span class="sxs-lookup"><span data-stu-id="da368-651">yes</span></span>|<span data-ttu-id="da368-652">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-652">no</span></span>|<span data-ttu-id="da368-653">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-653">no</span></span>|<span data-ttu-id="da368-654">可</span><span class="sxs-lookup"><span data-stu-id="da368-654">yes</span></span>|<span data-ttu-id="da368-655">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-655">no</span></span>|<span data-ttu-id="da368-656">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-656">no</span></span>|<span data-ttu-id="da368-657">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-657">no</span></span>|<span data-ttu-id="da368-658">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-658">no</span></span>|<span data-ttu-id="da368-659">[はい] \* \* \*</span><span class="sxs-lookup"><span data-stu-id="da368-659">yes\*\*\*</span></span>|  
|`Attribute`|<span data-ttu-id="da368-660">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-660">no</span></span>|<span data-ttu-id="da368-661">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-661">no</span></span>|<span data-ttu-id="da368-662">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-662">no</span></span>|<span data-ttu-id="da368-663">[はい] \* \* \*</span><span class="sxs-lookup"><span data-stu-id="da368-663">yes\*\*\*\*</span></span>|<span data-ttu-id="da368-664">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-664">no</span></span>|<span data-ttu-id="da368-665">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-665">no</span></span>|<span data-ttu-id="da368-666">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-666">no</span></span>|<span data-ttu-id="da368-667">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-667">no</span></span>|<span data-ttu-id="da368-668">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-668">no</span></span>|  
|`Text`|<span data-ttu-id="da368-669">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-669">no</span></span>|<span data-ttu-id="da368-670">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-670">no</span></span>|<span data-ttu-id="da368-671">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-671">no</span></span>|<span data-ttu-id="da368-672">可</span><span class="sxs-lookup"><span data-stu-id="da368-672">yes</span></span>|<span data-ttu-id="da368-673">可</span><span class="sxs-lookup"><span data-stu-id="da368-673">yes</span></span>|<span data-ttu-id="da368-674">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-674">no</span></span>|<span data-ttu-id="da368-675">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-675">no</span></span>|<span data-ttu-id="da368-676">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-676">no</span></span>|<span data-ttu-id="da368-677">可</span><span class="sxs-lookup"><span data-stu-id="da368-677">yes</span></span>|  
|`CDATA`|<span data-ttu-id="da368-678">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-678">no</span></span>|<span data-ttu-id="da368-679">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-679">no</span></span>|<span data-ttu-id="da368-680">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-680">no</span></span>|<span data-ttu-id="da368-681">可</span><span class="sxs-lookup"><span data-stu-id="da368-681">yes</span></span>|<span data-ttu-id="da368-682">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-682">no</span></span>|<span data-ttu-id="da368-683">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-683">no</span></span>|<span data-ttu-id="da368-684">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-684">no</span></span>|<span data-ttu-id="da368-685">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-685">no</span></span>|<span data-ttu-id="da368-686">[はい] \* \* \*</span><span class="sxs-lookup"><span data-stu-id="da368-686">yes\*\*\*</span></span>|  
|`Markup**`|<span data-ttu-id="da368-687">可</span><span class="sxs-lookup"><span data-stu-id="da368-687">yes</span></span>|<span data-ttu-id="da368-688">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-688">no</span></span>|<span data-ttu-id="da368-689">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-689">no</span></span>|<span data-ttu-id="da368-690">可</span><span class="sxs-lookup"><span data-stu-id="da368-690">yes</span></span>|<span data-ttu-id="da368-691">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-691">no</span></span>|<span data-ttu-id="da368-692">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-692">no</span></span>|<span data-ttu-id="da368-693">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-693">no</span></span>|<span data-ttu-id="da368-694">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-694">no</span></span>|<span data-ttu-id="da368-695">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-695">no</span></span>|  
|`EntityReference`|<span data-ttu-id="da368-696">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-696">no</span></span>|<span data-ttu-id="da368-697">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-697">no</span></span>|<span data-ttu-id="da368-698">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-698">no</span></span>|<span data-ttu-id="da368-699">可</span><span class="sxs-lookup"><span data-stu-id="da368-699">yes</span></span>|<span data-ttu-id="da368-700">可</span><span class="sxs-lookup"><span data-stu-id="da368-700">yes</span></span>|<span data-ttu-id="da368-701">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-701">no</span></span>|<span data-ttu-id="da368-702">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-702">no</span></span>|<span data-ttu-id="da368-703">Ｘ</span><span class="sxs-lookup"><span data-stu-id="da368-703">no</span></span>|<span data-ttu-id="da368-704">可</span><span class="sxs-lookup"><span data-stu-id="da368-704">yes</span></span>|  
  
 <span data-ttu-id="da368-705">\* XmlDeclaration ノードはドキュメント ノードの最初の子である必要があります。</span><span class="sxs-lookup"><span data-stu-id="da368-705">\* The XmlDeclaration node must be the first child of the Document node.</span></span>  
  
 <span data-ttu-id="da368-706">\* \* マークアップには、ProcessingInstruction とコメント ノードが含まれています。</span><span class="sxs-lookup"><span data-stu-id="da368-706">\*\* Markup includes ProcessingInstruction and Comment nodes.</span></span>  
  
 <span data-ttu-id="da368-707">EntityReference ノードが属性ノードの子ではない場合にのみ、要素と CDATA のノードが EntityReference ノードで使用できます。</span><span class="sxs-lookup"><span data-stu-id="da368-707">\*\*\* Element and CDATA nodes are only allowed in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
 <span data-ttu-id="da368-708">属性は要素ノードの子ではありません。</span><span class="sxs-lookup"><span data-stu-id="da368-708">\*\*\*\* Attributes are not children of an Element node.</span></span> <span data-ttu-id="da368-709">属性は、要素ノードが属している属性コレクション内に格納されます。</span><span class="sxs-lookup"><span data-stu-id="da368-709">Attributes are contained inside an attribute collection that belongs to the Element node.</span></span>  
  
 <span data-ttu-id="da368-710">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-710">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-711">次の例では、新しい要素をドキュメントに追加します。</span><span class="sxs-lookup"><span data-stu-id="da368-711">The following example adds a new element to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateNode2 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateNode2 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateNode2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da368-712">名前が指定されませんでした。<see langword="XmlNodeType" /> には名前が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-712">The name was not provided and the <see langword="XmlNodeType" /> requires a name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateProcessingInstruction">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlProcessingInstruction CreateProcessingInstruction (string target, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlProcessingInstruction CreateProcessingInstruction(string target, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateProcessingInstruction (target As String, data As String) As XmlProcessingInstruction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlProcessingInstruction ^ CreateProcessingInstruction(System::String ^ target, System::String ^ data);" />
      <MemberSignature Language="F#" Value="abstract member CreateProcessingInstruction : string * string -&gt; System.Xml.XmlProcessingInstruction&#xA;override this.CreateProcessingInstruction : string * string -&gt; System.Xml.XmlProcessingInstruction" Usage="xmlDocument.CreateProcessingInstruction (target, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlProcessingInstruction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="da368-713">処理命令の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-713">The name of the processing instruction.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="da368-714">処理命令のデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-714">The data for the processing instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-715">指定した名前とデータを使用して <see cref="T:System.Xml.XmlProcessingInstruction" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-715">Creates an <see cref="T:System.Xml.XmlProcessingInstruction" /> with the specified name and data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-716">新しい <see langword="XmlProcessingInstruction" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-716">The new <see langword="XmlProcessingInstruction" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-717">このメソッドでは、新しいオブジェクトを作成し、ドキュメントのコンテキストが自動的に追加しません、新しいオブジェクト、ドキュメント ツリーに。</span><span class="sxs-lookup"><span data-stu-id="da368-717">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="da368-718">新しいオブジェクトを追加するを明示的に呼び出してノードの挿入方法の 1 つあります。</span><span class="sxs-lookup"><span data-stu-id="da368-718">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="da368-719">勧告 W3C Extensible Markup Language (XML) 1.0 』 (www.w3.org/TR/1998/REC-xml-19980210) では、ProcessingInstruction ノードは、ドキュメント、要素、および EntityReference ノード内で場合にだけ許可 EntityReference ノードが子ではないです。属性ノード。</span><span class="sxs-lookup"><span data-stu-id="da368-719">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), ProcessingInstruction nodes are only allowed within Document, Element, and EntityReference nodes, when the EntityReference node is not a child of an Attribute node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-720">次の例では、ProcessingInstruction ノードを作成し、ドキュメントに追加します。</span><span class="sxs-lookup"><span data-stu-id="da368-720">The following example creates a ProcessingInstruction node and adds it to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateProcessingInstruction Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateProcessingInstruction Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateProcessingInstruction Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateProcessingInstruction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateProcessingInstruction Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateProcessingInstruction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSignificantWhitespace">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlSignificantWhitespace CreateSignificantWhitespace (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlSignificantWhitespace CreateSignificantWhitespace(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateSignificantWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSignificantWhitespace (text As String) As XmlSignificantWhitespace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlSignificantWhitespace ^ CreateSignificantWhitespace(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member CreateSignificantWhitespace : string -&gt; System.Xml.XmlSignificantWhitespace&#xA;override this.CreateSignificantWhitespace : string -&gt; System.Xml.XmlSignificantWhitespace" Usage="xmlDocument.CreateSignificantWhitespace text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSignificantWhitespace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="da368-721">文字列には、&amp;#20;、&amp;#10;、&amp;#13;、&amp;#9; の文字だけを含める必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-721">The string must contain only the following characters &amp;#20; &amp;#10; &amp;#13; and &amp;#9;</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-722">
            <see cref="T:System.Xml.XmlSignificantWhitespace" /> ノードを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-722">Creates an <see cref="T:System.Xml.XmlSignificantWhitespace" /> node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-723">新しい <see langword="XmlSignificantWhitespace" /> ノード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-723">A new <see langword="XmlSignificantWhitespace" /> node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-724">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-724">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="da368-725">ドキュメントを手動で書式設定するときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="da368-725">It is used when you want to manually format your document.</span></span>  
  
 <span data-ttu-id="da368-726">このメソッドでは、新しいオブジェクトを作成し、ドキュメントのコンテキストが自動的に追加しません、新しいオブジェクト、ドキュメント ツリーに。</span><span class="sxs-lookup"><span data-stu-id="da368-726">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="da368-727">新しいオブジェクトを追加するを明示的に呼び出してノードの挿入方法の 1 つあります。</span><span class="sxs-lookup"><span data-stu-id="da368-727">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-728">次の例では、有意の空白をドキュメントに追加します。</span><span class="sxs-lookup"><span data-stu-id="da368-728">The following example adds significant white space to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateSignificantWhitespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateSignificantWhitespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateSignificantWhitespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateSignificantWhitespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateSignificantWhitespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateSignificantWhitespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTextNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlText CreateTextNode (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlText CreateTextNode(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateTextNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateTextNode (text As String) As XmlText" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlText ^ CreateTextNode(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member CreateTextNode : string -&gt; System.Xml.XmlText&#xA;override this.CreateTextNode : string -&gt; System.Xml.XmlText" Usage="xmlDocument.CreateTextNode text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="da368-729">Text ノードのテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-729">The text for the Text node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-730">指定したテキストを使用して、<see cref="T:System.Xml.XmlText" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-730">Creates an <see cref="T:System.Xml.XmlText" /> with the specified text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-731">新しい <see langword="XmlText" /> ノード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-731">The new <see langword="XmlText" /> node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-732">このメソッドでは、新しいオブジェクトを作成し、ドキュメントのコンテキストが自動的に追加しません、新しいオブジェクト、ドキュメント ツリーに。</span><span class="sxs-lookup"><span data-stu-id="da368-732">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="da368-733">新しいオブジェクトを追加するを明示的に呼び出してノードの挿入方法の 1 つあります。</span><span class="sxs-lookup"><span data-stu-id="da368-733">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="da368-734">勧告 W3C Extensible Markup Language (XML) 1.0 』 (www.w3.org/TR/1998/REC-xml-19980210) では、テキスト ノードは、要素、属性、および EntityReference ノード内でのみ許可します。</span><span class="sxs-lookup"><span data-stu-id="da368-734">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Text nodes are only allowed within Element, Attribute and EntityReference nodes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-735">次の例では、新しい要素を作成し、ドキュメントに追加します。</span><span class="sxs-lookup"><span data-stu-id="da368-735">The following example creates a new element and adds it to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhitespace">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWhitespace CreateWhitespace (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlWhitespace CreateWhitespace(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateWhitespace (text As String) As XmlWhitespace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlWhitespace ^ CreateWhitespace(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member CreateWhitespace : string -&gt; System.Xml.XmlWhitespace&#xA;override this.CreateWhitespace : string -&gt; System.Xml.XmlWhitespace" Usage="xmlDocument.CreateWhitespace text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWhitespace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="da368-736">文字列には、&amp;#20;、&amp;#10;、&amp;#13;、&amp;#9; の文字だけを含める必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-736">The string must contain only the following characters &amp;#20; &amp;#10; &amp;#13; and &amp;#9;</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-737">
            <see cref="T:System.Xml.XmlWhitespace" /> ノードを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-737">Creates an <see cref="T:System.Xml.XmlWhitespace" /> node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-738">新しい <see langword="XmlWhitespace" /> ノード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-738">A new <see langword="XmlWhitespace" /> node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-739">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-739">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="da368-740">ドキュメントを手動で書式設定するときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="da368-740">It is used when you want to manually format your document.</span></span>  
  
 <span data-ttu-id="da368-741">このメソッドでは、新しいオブジェクトを作成し、ドキュメントのコンテキストが自動的に追加しません、新しいオブジェクト、ドキュメント ツリーに。</span><span class="sxs-lookup"><span data-stu-id="da368-741">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="da368-742">新しいオブジェクトを追加するを明示的に呼び出してノードの挿入方法の 1 つあります。</span><span class="sxs-lookup"><span data-stu-id="da368-742">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-743">次の例では、空白文字をドキュメントに追加します。</span><span class="sxs-lookup"><span data-stu-id="da368-743">The following example adds white space to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateWhitespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateWhitespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateWhitespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateWhitespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateWhitespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateWhitespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateXmlDeclaration">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDeclaration CreateXmlDeclaration (string version, string encoding, string standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlDeclaration CreateXmlDeclaration(string version, string encoding, string standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateXmlDeclaration (version As String, encoding As String, standalone As String) As XmlDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlDeclaration ^ CreateXmlDeclaration(System::String ^ version, System::String ^ encoding, System::String ^ standalone);" />
      <MemberSignature Language="F#" Value="abstract member CreateXmlDeclaration : string * string * string -&gt; System.Xml.XmlDeclaration&#xA;override this.CreateXmlDeclaration : string * string * string -&gt; System.Xml.XmlDeclaration" Usage="xmlDocument.CreateXmlDeclaration (version, encoding, standalone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="encoding" Type="System.String" />
        <Parameter Name="standalone" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="version">
          <span data-ttu-id="da368-744">バージョンは "1.0" にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-744">The version must be "1.0".</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="da368-745">エンコーディング属性の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-745">The value of the encoding attribute.</span>
          </span>
          <span data-ttu-id="da368-746">これは、<see cref="T:System.Xml.XmlDocument" /> をファイルまたはストリームに保存するときに使用するエンコーディングです。したがって、<see cref="T:System.Text.Encoding" /> クラスでサポートされる文字列に設定する必要があります。それ以外の場合、<see cref="M:System.Xml.XmlDocument.Save(System.String)" /> は失敗します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-746">This is the encoding that is used when you save the <see cref="T:System.Xml.XmlDocument" /> to a file or a stream; therefore, it must be set to a string supported by the <see cref="T:System.Text.Encoding" /> class, otherwise <see cref="M:System.Xml.XmlDocument.Save(System.String)" /> fails.</span>
          </span>
          <span data-ttu-id="da368-747">この値が <see langword="null" /> または String.Empty の場合は、<see langword="Save" /> メソッドが XML 宣言にエンコーディング属性を書き込まないため、既定のエンコーディング UTF-8 が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-747">If this is <see langword="null" /> or String.Empty, the <see langword="Save" /> method does not write an encoding attribute on the XML declaration and therefore the default encoding, UTF-8, is used.</span>
          </span>
          <span data-ttu-id="da368-748">メモ : <see langword="XmlDocument" /> が <see cref="T:System.IO.TextWriter" /> または <see cref="T:System.Xml.XmlTextWriter" /> に保存される場合、このエンコーディング値は破棄されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-748">Note: If the <see langword="XmlDocument" /> is saved to either a <see cref="T:System.IO.TextWriter" /> or an <see cref="T:System.Xml.XmlTextWriter" />, this encoding value is discarded.</span>
          </span>
          <span data-ttu-id="da368-749">代わりに、<see langword="TextWriter" /> または <see langword="XmlTextWriter" /> のエンコーディングが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-749">Instead, the encoding of the <see langword="TextWriter" /> or the <see langword="XmlTextWriter" /> is used.</span>
          </span>
          <span data-ttu-id="da368-750">これにより、正しいエンコーディングを使用して、書き込まれた XML を読み戻すことができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-750">This ensures that the XML written out can be read back using the correct encoding.</span>
          </span>
        </param>
        <param name="standalone">
          <span data-ttu-id="da368-751">この値は、"yes" または "no" のいずれかにする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-751">The value must be either "yes" or "no".</span>
          </span>
          <span data-ttu-id="da368-752">この値が <see langword="null" /> または String.Empty の場合、<see langword="Save" /> メソッドは XML 宣言にスタンドアロン属性を書き込みません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-752">If this is <see langword="null" /> or String.Empty, the <see langword="Save" /> method does not write a standalone attribute on the XML declaration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-753">指定した値を使用して、<see cref="T:System.Xml.XmlDeclaration" /> ノードを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-753">Creates an <see cref="T:System.Xml.XmlDeclaration" /> node with the specified values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-754">新しい <see langword="XmlDeclaration" /> ノード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-754">The new <see langword="XmlDeclaration" /> node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-755">属性に特殊なプロパティとして公開されている、`XmlDeclaration`ノードではなく<xref:System.Xml.XmlAttribute>ノード。</span><span class="sxs-lookup"><span data-stu-id="da368-755">The attributes are exposed as special properties on the `XmlDeclaration` node, and not as <xref:System.Xml.XmlAttribute> nodes.</span></span>  
  
 <span data-ttu-id="da368-756">このメソッドでは、新しいオブジェクトを作成し、ドキュメントのコンテキストが自動的に追加しません、新しいオブジェクト、ドキュメント ツリーに。</span><span class="sxs-lookup"><span data-stu-id="da368-756">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="da368-757">新しいオブジェクトを追加するを明示的に呼び出してノードの挿入方法の 1 つあります。</span><span class="sxs-lookup"><span data-stu-id="da368-757">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="da368-758">勧告 W3C Extensible Markup Language (XML) 1.0 』 (www.w3.org/TR/1998/REC-xml-19980210)、`XmlDeclaration`ノードは、ドキュメントの最初のノードである必要があります。</span><span class="sxs-lookup"><span data-stu-id="da368-758">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), the `XmlDeclaration` node must be the first node in the document.</span></span>  
  
 <span data-ttu-id="da368-759">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-759">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-760">次の例では、XML 宣言を作成し、ドキュメントに追加します。</span><span class="sxs-lookup"><span data-stu-id="da368-760">The following example creates an XML declaration and adds it to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateXmlDeclaration Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateXmlDeclaration Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateXmlDeclaration Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateXmlDeclaration Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateXmlDeclaration Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateXmlDeclaration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da368-761">
            <paramref name="version" /> または <paramref name="standalone" /> の値が、上記の値以外です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-761">The values of <paramref name="version" /> or <paramref name="standalone" /> are something other than the ones specified above.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="DocumentElement">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement DocumentElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement DocumentElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.DocumentElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentElement As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlElement ^ DocumentElement { System::Xml::XmlElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentElement : System.Xml.XmlElement" Usage="System.Xml.XmlDocument.DocumentElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da368-762">ドキュメントのルート <see cref="T:System.Xml.XmlElement" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-762">Gets the root <see cref="T:System.Xml.XmlElement" /> for the document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da368-763">XML ドキュメント ツリーのルートを表す <see langword="XmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-763">The <see langword="XmlElement" /> that represents the root of the XML document tree.</span>
          </span>
          <span data-ttu-id="da368-764">ルートが存在しない場合は、<see langword="null" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-764">If no root exists, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="da368-765">次の例では、XML ドキュメントのルート要素が表示されます。</span><span class="sxs-lookup"><span data-stu-id="da368-765">The following example displays the root element of the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/VB/source.vb#1)]  
  
 <span data-ttu-id="da368-766">**出力:**</span><span class="sxs-lookup"><span data-stu-id="da368-766">**Output:**</span></span>  
  
```  
<book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book>   
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentType">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocumentType DocumentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocumentType DocumentType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.DocumentType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DocumentType As XmlDocumentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlDocumentType ^ DocumentType { System::Xml::XmlDocumentType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentType : System.Xml.XmlDocumentType" Usage="System.Xml.XmlDocument.DocumentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocumentType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da368-767">DOCTYPE 宣言を格納しているノードを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-767">Gets the node containing the DOCTYPE declaration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da368-768">DocumentType (DOCTYPE 宣言) を格納している <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-768">The <see cref="T:System.Xml.XmlNode" /> containing the DocumentType (DOCTYPE declaration).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-769">`XmlDocument`を持つ 1 つだけの子を持つことができます<xref:System.Xml.XmlNodeType>DocumentType を等しくします。</span><span class="sxs-lookup"><span data-stu-id="da368-769">An `XmlDocument` can have one and only one child with <xref:System.Xml.XmlNodeType> equal to DocumentType.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da368-770">このプロパティは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="da368-770">This property is read-only.</span></span> <span data-ttu-id="da368-771">DocumentType ノードを変更する既存のノードの削除、新しい 1 つを使用して、作成、<xref:System.Xml.XmlDocument.CreateDocumentType%2A>メソッド、ドキュメントに新しいノードを追加します。</span><span class="sxs-lookup"><span data-stu-id="da368-771">To change the DocumentType node, delete the existing node, create a new one using the <xref:System.Xml.XmlDocument.CreateDocumentType%2A> method, and add the new node to the document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-772">次の例では、取得し、ドキュメントの DOCTYPE 宣言を表示します。</span><span class="sxs-lookup"><span data-stu-id="da368-772">The following example gets and displays the DOCTYPE declaration for the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.DocumentType Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.DocumentType Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.DocumentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.DocumentType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlDocumentType" />
      </Docs>
    </Member>
    <Member MemberName="GetElementById">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement GetElementById (string elementId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetElementById(string elementId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.GetElementById(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElementById (elementId As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlElement ^ GetElementById(System::String ^ elementId);" />
      <MemberSignature Language="F#" Value="abstract member GetElementById : string -&gt; System.Xml.XmlElement&#xA;override this.GetElementById : string -&gt; System.Xml.XmlElement" Usage="xmlDocument.GetElementById elementId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementId">
          <span data-ttu-id="da368-773">一致する属性 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-773">The attribute ID to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-774">指定した ID の <see cref="T:System.Xml.XmlElement" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-774">Gets the <see cref="T:System.Xml.XmlElement" /> with the specified ID.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-775">一致する ID の <see langword="XmlElement" />。一致する要素が見つからない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-775">The <see langword="XmlElement" /> with the matching ID or <see langword="null" /> if no matching element is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-776">文書に一致する ID を持つ複数の要素がある場合は、このメソッドは、ドキュメントの最初の一致する要素を返します。</span><span class="sxs-lookup"><span data-stu-id="da368-776">If the document has multiple elements with the matching ID, this method returns the first matching element in the document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da368-777">DOM の実装には、どの属性が型 ID の属性を定義する情報が必要です。</span><span class="sxs-lookup"><span data-stu-id="da368-777">The DOM implementation must have information which defines which attributes are of type ID.</span></span> <span data-ttu-id="da368-778">ID 型の属性は、XSD スキーマまたは Dtd で定義することができますは、製品のこのバージョンは Dtd で定義されているものをのみサポートされます。</span><span class="sxs-lookup"><span data-stu-id="da368-778">Although attributes of type ID can be defined in either XSD schemas or DTDs, this version of the product only supports those defined in DTDs.</span></span> <span data-ttu-id="da368-779">そのため、DTD で定義されていない場合、"ID"でのない名前を持つ属性は ID を入力します。</span><span class="sxs-lookup"><span data-stu-id="da368-779">Attributes with the name "ID" are not of type ID unless so defined in the DTD.</span></span> <span data-ttu-id="da368-780">返すことが既知の型の ID 属性は、かどうかの実装が予想される`null`します。</span><span class="sxs-lookup"><span data-stu-id="da368-780">Implementations where it is unknown whether the attributes are of type ID are expected to return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-781">次の例では、`GetElementById` メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="da368-781">The following example uses the `GetElementById` method.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.GetElementById Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementById Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.GetElementById Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementById Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.GetElementById Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.GetElementById Example/VB/source.vb#1)]  
  
 <span data-ttu-id="da368-782">例では、ファイルを使用して`ids.xml`、入力として。</span><span class="sxs-lookup"><span data-stu-id="da368-782">The example uses the file, `ids.xml`, as input.</span></span>  
  
```xml  
<!DOCTYPE root [  
  <!ELEMENT root ANY>   
  <!ELEMENT Person ANY>   
  <!ELEMENT Customer EMPTY>  
  <!ELEMENT Team EMPTY>  
  <!ATTLIST Person SSN ID #REQUIRED>  
  <!ATTLIST Customer id IDREF #REQUIRED >  
  <!ATTLIST Team members IDREFS #REQUIRED]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetElementsByTagName">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="da368-783">指定した名前に一致するすべての子孫の要素のリストを格納している <see cref="T:System.Xml.XmlNodeList" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-783">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified name.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList GetElementsByTagName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNodeList GetElementsByTagName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.GetElementsByTagName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElementsByTagName (name As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeList ^ GetElementsByTagName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetElementsByTagName : string -&gt; System.Xml.XmlNodeList&#xA;override this.GetElementsByTagName : string -&gt; System.Xml.XmlNodeList" Usage="xmlDocument.GetElementsByTagName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="da368-784">一致する限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-784">The qualified name to match.</span>
          </span>
          <span data-ttu-id="da368-785">一致するノードの <see langword="Name" /> プロパティに一致します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-785">It is matched against the <see langword="Name" /> property of the matching node.</span>
          </span>
          <span data-ttu-id="da368-786">特殊値の "\*" は、すべてのタグに一致します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-786">The special value "\*" matches all tags.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-787">指定した <see cref="T:System.Xml.XmlNodeList" /> に一致するすべての子孫の要素のリストを格納している <see cref="P:System.Xml.XmlDocument.Name" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-787">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlDocument.Name" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-788">一致しているすべてのノードのリストを格納している <see cref="T:System.Xml.XmlNodeList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-788">An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</span>
          </span>
          <span data-ttu-id="da368-789">ノードが <paramref name="name" /> と一致する場合、返されるコレクションは空になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-789">If no nodes match <paramref name="name" />, the returned collection will be empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-790">ノードは、ドキュメントで検出される順序で配置されます。</span><span class="sxs-lookup"><span data-stu-id="da368-790">The nodes are placed in the order in which they would be encountered in the document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da368-791">使用することをお勧め、<xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType>または<xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType>メソッドの代わりに、<xref:System.Xml.XmlDocument.GetElementsByTagName%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="da368-791">It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> method instead of the <xref:System.Xml.XmlDocument.GetElementsByTagName%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-792">次の例では、作成、`XmlDocument`オブジェクトと使用、`GetElementsByTagName`メソッドおよび結果<xref:System.Xml.XmlNodeList>すべてのブック タイトルを表示するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="da368-792">The following example creates a `XmlDocument` object and uses the `GetElementsByTagName` method and the resulting <xref:System.Xml.XmlNodeList> object to display all the book titles.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="da368-793">この例は、`books.xml` ファイルを入力として使用します。</span><span class="sxs-lookup"><span data-stu-id="da368-793">The example uses the `books.xml` file as input.</span></span>  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList GetElementsByTagName (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNodeList GetElementsByTagName(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.GetElementsByTagName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElementsByTagName (localName As String, namespaceURI As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeList ^ GetElementsByTagName(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member GetElementsByTagName : string * string -&gt; System.Xml.XmlNodeList&#xA;override this.GetElementsByTagName : string * string -&gt; System.Xml.XmlNodeList" Usage="xmlDocument.GetElementsByTagName (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="da368-794">一致する LocalName。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-794">The LocalName to match.</span>
          </span>
          <span data-ttu-id="da368-795">特殊値の "\*" は、すべてのタグに一致します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-795">The special value "\*" matches all tags.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="da368-796">一致する NamespaceURI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-796">NamespaceURI to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-797">指定した <see cref="T:System.Xml.XmlNodeList" /> および <see cref="P:System.Xml.XmlDocument.LocalName" /> に一致するすべての子孫の要素のリストを格納している <see cref="P:System.Xml.XmlNode.NamespaceURI" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-797">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlDocument.LocalName" /> and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-798">一致しているすべてのノードのリストを格納している <see cref="T:System.Xml.XmlNodeList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-798">An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</span>
          </span>
          <span data-ttu-id="da368-799">指定した <paramref name="localName" /> および <paramref name="namespaceURI" /> と一致するノードがない場合、返されるコレクションは空になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-799">If no nodes match the specified <paramref name="localName" /> and <paramref name="namespaceURI" />, the returned collection will be empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-800">ノードは、ドキュメント ツリーにおいて発生する順序で配置されます。</span><span class="sxs-lookup"><span data-stu-id="da368-800">The nodes are placed in the order in which they would be encountered in the document tree.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da368-801">使用することをお勧め、<xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType>または<xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType>メソッドの代わりに、<xref:System.Xml.XmlDocument.GetElementsByTagName%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="da368-801">It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> method instead of the <xref:System.Xml.XmlDocument.GetElementsByTagName%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Implementation">
      <MemberSignature Language="C#" Value="public System.Xml.XmlImplementation Implementation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlImplementation Implementation" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.Implementation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Implementation As XmlImplementation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlImplementation ^ Implementation { System::Xml::XmlImplementation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Implementation : System.Xml.XmlImplementation" Usage="System.Xml.XmlDocument.Implementation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlImplementation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da368-802">現在のドキュメントの <see cref="T:System.Xml.XmlImplementation" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-802">Gets the <see cref="T:System.Xml.XmlImplementation" /> object for the current document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da368-803">現在のドキュメントの <see langword="XmlImplementation" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-803">The <see langword="XmlImplementation" /> object for the current document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-804">`XmlDocument` 同じから作成されたオブジェクト`XmlImplementation`同じ共有<xref:System.Xml.XmlNameTable>します。</span><span class="sxs-lookup"><span data-stu-id="da368-804">`XmlDocument` objects created from the same `XmlImplementation` share the same <xref:System.Xml.XmlNameTable>.</span></span> <span data-ttu-id="da368-805">これにより、ユーザーは文字列ではなく、オブジェクトとして属性と要素の名前を比較できます。</span><span class="sxs-lookup"><span data-stu-id="da368-805">This allows users to compare attribute and element names as objects rather than strings.</span></span>  
  
 <span data-ttu-id="da368-806">ただし、`XmlDocument`オブジェクトが同じ実装を共有、別の 1 つのドキュメントからノードを移動するを使用する必要があります、<xref:System.Xml.XmlDocument.ImportNode%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="da368-806">Although the `XmlDocument` objects share the same implementation, to move nodes from one document to another you must use the <xref:System.Xml.XmlDocument.ImportNode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-807">次の例では、作成、新しい`XmlDocument`別のドキュメントの実装を使用します。</span><span class="sxs-lookup"><span data-stu-id="da368-807">The following example creates a new `XmlDocument` using another document's implementation.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.Implementation Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.Implementation Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.Implementation Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.Implementation Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.Implementation Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.Implementation Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ImportNode (System.Xml.XmlNode node, bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode ImportNode(class System.Xml.XmlNode node, bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportNode (node As XmlNode, deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ ImportNode(System::Xml::XmlNode ^ node, bool deep);" />
      <MemberSignature Language="F#" Value="abstract member ImportNode : System.Xml.XmlNode * bool -&gt; System.Xml.XmlNode&#xA;override this.ImportNode : System.Xml.XmlNode * bool -&gt; System.Xml.XmlNode" Usage="xmlDocument.ImportNode (node, deep)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="da368-808">インポートしているノード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-808">The node being imported.</span>
          </span>
        </param>
        <param name="deep">
          <span data-ttu-id="da368-809">詳細クローンを実行する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-809">
              <see langword="true" /> to perform a deep clone; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-810">別のドキュメントから現在のドキュメントにノードをインポートします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-810">Imports a node from another document to the current document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-811">インポートされた <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-811">The imported <see cref="T:System.Xml.XmlNode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-812">返されたノードの親がありません。</span><span class="sxs-lookup"><span data-stu-id="da368-812">The returned node has no parent.</span></span> <span data-ttu-id="da368-813">ソース ノードは変更または元の文書から削除できません。`ImportNode`ソース ノードのコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="da368-813">The source node is not altered or removed from the original document; `ImportNode` creates a copy of the source node.</span></span>  
  
 <span data-ttu-id="da368-814">ノードをインポート、`XmlNode`オブジェクトのドキュメントのインポートによって所有されて<xref:System.Xml.XmlNode.Name%2A>と<xref:System.Xml.XmlNode.NodeType%2A>ソース ノードと同じです。</span><span class="sxs-lookup"><span data-stu-id="da368-814">Importing a node creates an `XmlNode` object owned by the importing document, with <xref:System.Xml.XmlNode.Name%2A> and <xref:System.Xml.XmlNode.NodeType%2A> identical to the source node.</span></span> <span data-ttu-id="da368-815">新しいオブジェクトは名前空間に関連する属性もあります (<xref:System.Xml.XmlNode.Prefix%2A>、 <xref:System.Xml.XmlNode.LocalName%2A>、および<xref:System.Xml.XmlNode.NamespaceURI%2A>)。</span><span class="sxs-lookup"><span data-stu-id="da368-815">The new object also has the attributes related to namespaces (<xref:System.Xml.XmlNode.Prefix%2A>, <xref:System.Xml.XmlNode.LocalName%2A>, and <xref:System.Xml.XmlNode.NamespaceURI%2A>).</span></span>  
  
 <span data-ttu-id="da368-816">インポートされたノードの値とノードの種類によって、`deep`パラメーター、追加情報がコピーされます。</span><span class="sxs-lookup"><span data-stu-id="da368-816">Depending on the node type of the imported node and the value of the `deep` parameter, additional information is copied as appropriate.</span></span> <span data-ttu-id="da368-817">このメソッドを別に、XML または HTML のソースのフラグメントが 1 つのドキュメントからコピーしたかどうか、動作が期待どおりのミラーを試みます (XML の場合も、2 つのドキュメントが、さまざまな Dtd がある可能性があります、認識する)。</span><span class="sxs-lookup"><span data-stu-id="da368-817">This method attempts to mirror the behavior expected if a fragment of XML or HTML source was copied from one document to another (recognizing that, in the XML case, the two documents could have different DTDs).</span></span>  
  
 <span data-ttu-id="da368-818">次の表は、それぞれ固有の動作を示します<xref:System.Xml.XmlNodeType>します。</span><span class="sxs-lookup"><span data-stu-id="da368-818">The following table describes the specific behavior for each <xref:System.Xml.XmlNodeType>.</span></span>  
  
|<span data-ttu-id="da368-819">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="da368-819">XmlNodeType</span></span>|<span data-ttu-id="da368-820">ImportNode(true)</span><span class="sxs-lookup"><span data-stu-id="da368-820">ImportNode(true)</span></span>|<span data-ttu-id="da368-821">ImportNode(false)</span><span class="sxs-lookup"><span data-stu-id="da368-821">ImportNode(false)</span></span>|  
|-----------------|------------------------|-------------------------|  
|<span data-ttu-id="da368-822">Attribute</span><span class="sxs-lookup"><span data-stu-id="da368-822">Attribute</span></span>|<span data-ttu-id="da368-823"><xref:System.Xml.XmlAttribute.Specified%2A>プロパティに設定されて`true`で生成された<xref:System.Xml.XmlAttribute>します。</span><span class="sxs-lookup"><span data-stu-id="da368-823">The <xref:System.Xml.XmlAttribute.Specified%2A> property is set to `true` on the generated <xref:System.Xml.XmlAttribute>.</span></span> <span data-ttu-id="da368-824">ソースの子孫`XmlAttribute`対応するサブツリーが形成再帰的にインポートし、結果として得られるノード再構築します。</span><span class="sxs-lookup"><span data-stu-id="da368-824">The descendants of the source `XmlAttribute` are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</span></span>|<span data-ttu-id="da368-825">`deep`パラメーターには適用されません`XmlAttribute`ノードは、インポート時に子を常に保持します。</span><span class="sxs-lookup"><span data-stu-id="da368-825">The `deep` parameter does not apply to `XmlAttribute` nodes; they always carry their children with them when imported.</span></span>|  
|<span data-ttu-id="da368-826">CData</span><span class="sxs-lookup"><span data-stu-id="da368-826">CData</span></span>|<span data-ttu-id="da368-827">ノードをそのデータと共にコピーします。</span><span class="sxs-lookup"><span data-stu-id="da368-827">Copies the node, including its data.</span></span>|<span data-ttu-id="da368-828">ノードをそのデータと共にコピーします。</span><span class="sxs-lookup"><span data-stu-id="da368-828">Copies the node, including its data.</span></span>|  
|<span data-ttu-id="da368-829">コメント</span><span class="sxs-lookup"><span data-stu-id="da368-829">Comment</span></span>|<span data-ttu-id="da368-830">ノードをそのデータと共にコピーします。</span><span class="sxs-lookup"><span data-stu-id="da368-830">Copies the node, including its data.</span></span>|<span data-ttu-id="da368-831">ノードをそのデータと共にコピーします。</span><span class="sxs-lookup"><span data-stu-id="da368-831">Copies the node, including its data.</span></span>|  
|<span data-ttu-id="da368-832">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="da368-832">DocumentFragment</span></span>|<span data-ttu-id="da368-833">ソース ノードの子孫が再帰的にインポートされます。結果として得られるノードは再アセンブルされ、対応するサブツリーが形成されます。</span><span class="sxs-lookup"><span data-stu-id="da368-833">The descendants of the source node are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</span></span>|<span data-ttu-id="da368-834">空<xref:System.Xml.XmlDocumentFragment>が生成されます。</span><span class="sxs-lookup"><span data-stu-id="da368-834">An empty <xref:System.Xml.XmlDocumentFragment> is generated.</span></span>|  
|<span data-ttu-id="da368-835">DocumentType</span><span class="sxs-lookup"><span data-stu-id="da368-835">DocumentType</span></span>|<span data-ttu-id="da368-836">ノードがデータと共にコピーされます。\*</span><span class="sxs-lookup"><span data-stu-id="da368-836">Copies the node, including its data.\*</span></span>|<span data-ttu-id="da368-837">ノードがデータと共にコピーされます。\*</span><span class="sxs-lookup"><span data-stu-id="da368-837">Copies the node, including its data.\*</span></span>|  
|<span data-ttu-id="da368-838">要素</span><span class="sxs-lookup"><span data-stu-id="da368-838">Element</span></span>|<span data-ttu-id="da368-839">ソース要素とその指定された属性ノードの子孫は、再帰的にインポートされ、結果として得られるノードは再アセンブルされ、対応するサブツリーが形成されます。</span><span class="sxs-lookup"><span data-stu-id="da368-839">The descendants of the source element and its specified attribute nodes are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</span></span><br /><br /> <span data-ttu-id="da368-840">注: 既定の属性はコピーされません。</span><span class="sxs-lookup"><span data-stu-id="da368-840">Note: Default attributes are not copied.</span></span> <span data-ttu-id="da368-841">インポートされるドキュメントでこの要素名に対する既定の属性が定義されている場合は、それらが割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="da368-841">If the document being imported into defines default attributes for this element name, those are assigned.</span></span>|<span data-ttu-id="da368-842">属性ノードがソース要素からインポートされ、生成された指定`XmlAttribute`ノードがアタッチされ、生成された<xref:System.Xml.XmlElement>。</span><span class="sxs-lookup"><span data-stu-id="da368-842">Specified attribute nodes of the source element are imported, and the generated `XmlAttribute` nodes are attached to the generated <xref:System.Xml.XmlElement>.</span></span><br /><br /> <span data-ttu-id="da368-843">注: 既定の属性はコピーされません。</span><span class="sxs-lookup"><span data-stu-id="da368-843">Note: Default attributes are not copied.</span></span> <span data-ttu-id="da368-844">インポートされるドキュメントでこの要素名に対する既定の属性が定義されている場合は、それらが割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="da368-844">If the document being imported into defines default attributes for this element name, those are assigned.</span></span>|  
|<span data-ttu-id="da368-845">EntityReference</span><span class="sxs-lookup"><span data-stu-id="da368-845">EntityReference</span></span>|<span data-ttu-id="da368-846">このメソッドはのみコピー元とコピー先のドキュメントには、エンティティの定義が異なる可能性がある、ため、<xref:System.Xml.XmlEntityReference>ノード。</span><span class="sxs-lookup"><span data-stu-id="da368-846">Because the source and destination documents could have the entities defined differently, this method only copies the <xref:System.Xml.XmlEntityReference> node.</span></span> <span data-ttu-id="da368-847">置換テキストは含まれません。</span><span class="sxs-lookup"><span data-stu-id="da368-847">The replacement text is not included.</span></span> <span data-ttu-id="da368-848">インポート先のドキュメントに同じエンティティが定義されている場合は、その値が割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="da368-848">If the destination document has the entity defined, its value is assigned.</span></span>|<span data-ttu-id="da368-849">このメソッドはのみコピー元とコピー先のドキュメントには、エンティティの定義が異なる可能性がある、ため、<xref:System.Xml.XmlEntityReference>ノード。</span><span class="sxs-lookup"><span data-stu-id="da368-849">Because the source and destination documents could have the entities defined differently, this method only copies the <xref:System.Xml.XmlEntityReference> node.</span></span> <span data-ttu-id="da368-850">置換テキストは含まれません。</span><span class="sxs-lookup"><span data-stu-id="da368-850">The replacement text is not included.</span></span> <span data-ttu-id="da368-851">インポート先のドキュメントに同じエンティティが定義されている場合は、その値が割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="da368-851">If the destination document has the entity defined, its value is assigned.</span></span>|  
|<span data-ttu-id="da368-852">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="da368-852">ProcessingInstruction</span></span>|<span data-ttu-id="da368-853">インポートされたノードから、ターゲットおよびデータの値がコピーされます。</span><span class="sxs-lookup"><span data-stu-id="da368-853">Copies the target and data value from the imported node.</span></span>|<span data-ttu-id="da368-854">インポートされたノードから、ターゲットおよびデータの値がコピーされます。</span><span class="sxs-lookup"><span data-stu-id="da368-854">Copies the target and data value from the imported node.</span></span>|  
|<span data-ttu-id="da368-855">テキスト</span><span class="sxs-lookup"><span data-stu-id="da368-855">Text</span></span>|<span data-ttu-id="da368-856">ノードをそのデータと共にコピーします。</span><span class="sxs-lookup"><span data-stu-id="da368-856">Copies the node, including its data.</span></span>|<span data-ttu-id="da368-857">ノードをそのデータと共にコピーします。</span><span class="sxs-lookup"><span data-stu-id="da368-857">Copies the node, including its data.</span></span>|  
|<span data-ttu-id="da368-858">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="da368-858">SignificantWhitespace</span></span>|<span data-ttu-id="da368-859">ノードをそのデータと共にコピーします。</span><span class="sxs-lookup"><span data-stu-id="da368-859">Copies the node, including its data.</span></span>|<span data-ttu-id="da368-860">ノードをそのデータと共にコピーします。</span><span class="sxs-lookup"><span data-stu-id="da368-860">Copies the node, including its data.</span></span>|  
|<span data-ttu-id="da368-861">Whitespace</span><span class="sxs-lookup"><span data-stu-id="da368-861">Whitespace</span></span>|<span data-ttu-id="da368-862">ノードをそのデータと共にコピーします。</span><span class="sxs-lookup"><span data-stu-id="da368-862">Copies the node, including its data.</span></span>|<span data-ttu-id="da368-863">ノードをそのデータと共にコピーします。</span><span class="sxs-lookup"><span data-stu-id="da368-863">Copies the node, including its data.</span></span>|  
|<span data-ttu-id="da368-864">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="da368-864">XmlDeclaration</span></span>|<span data-ttu-id="da368-865">インポートされたノードから、ターゲットおよびデータの値がコピーされます。</span><span class="sxs-lookup"><span data-stu-id="da368-865">Copies the target and data value from the imported node.</span></span>|<span data-ttu-id="da368-866">インポートされたノードから、ターゲットおよびデータの値がコピーされます。</span><span class="sxs-lookup"><span data-stu-id="da368-866">Copies the target and data value from the imported node.</span></span>|  
|<span data-ttu-id="da368-867">その他のすべてのノード型。</span><span class="sxs-lookup"><span data-stu-id="da368-867">All other node types.</span></span>|<span data-ttu-id="da368-868">これらのノード型はインポートできません。</span><span class="sxs-lookup"><span data-stu-id="da368-868">These node types cannot be imported.</span></span>|<span data-ttu-id="da368-869">これらのノード型はインポートできません。</span><span class="sxs-lookup"><span data-stu-id="da368-869">These node types cannot be imported.</span></span>|  
  
 <span data-ttu-id="da368-870">\* DocumentType ノードをインポートすることができますが、ドキュメントは 1 つの DocumentType をしか。</span><span class="sxs-lookup"><span data-stu-id="da368-870">\*Although DocumentType nodes can be imported, a document can only have one DocumentType.</span></span> <span data-ttu-id="da368-871">ドキュメントが DocumenType ノードを持っている場合は、新しいものを追加する前に削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="da368-871">If the document currently has a DocumenType node, it must be removed before adding a new one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-872">次の例は、元の XML ドキュメントに 2 番目の XML ドキュメントからの book ノードをインポートします。</span><span class="sxs-lookup"><span data-stu-id="da368-872">The following example imports a book node from a second XML document into the original XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.ImportNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.ImportNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.ImportNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.ImportNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.ImportNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.ImportNode Example/VB/source.vb#1)]  
  
 <span data-ttu-id="da368-873">例では、ファイルを使用して`books.xml`、入力として。</span><span class="sxs-lookup"><span data-stu-id="da368-873">The example uses the file, `books.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="da368-874">インポートできないノード型でこのメソッドを呼び出しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-874">Calling this method on a node type which cannot be imported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public override string InnerText { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText {  void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerText : string" Usage="System.Xml.XmlDocument.InnerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da368-875">常に <see cref="T:System.InvalidOperationException" /> をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-875">Throws an <see cref="T:System.InvalidOperationException" /> in all cases.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da368-876">ノードとそのすべての子ノードの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-876">The values of the node and all its child nodes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-877">このプロパティは実装されていません。</span><span class="sxs-lookup"><span data-stu-id="da368-877">This property is not implemented.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="da368-878">常にスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-878">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public override string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.InnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerXml : string with get, set" Usage="System.Xml.XmlDocument.InnerXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da368-879">現在のノードの子を表すマークアップを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-879">Gets or sets the markup representing the children of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da368-880">現在のノードの子のマークアップ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-880">The markup of the children of the current node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-881">このプロパティを設定すると、ノードの子を指定した文字列の解析済みの内容に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="da368-881">Setting this property replaces the children of the node with the parsed contents of the given string.</span></span> <span data-ttu-id="da368-882">文字列の解析は、現在の名前空間コンテキストで実行されます。</span><span class="sxs-lookup"><span data-stu-id="da368-882">The parsing is done in the current namespace context.</span></span>  
  
 <span data-ttu-id="da368-883">`InnerXml` 冗長な名前空間宣言を削除します。</span><span class="sxs-lookup"><span data-stu-id="da368-883">`InnerXml` removes redundant namespace declarations.</span></span> <span data-ttu-id="da368-884">この結果、カット アンド ペースト操作を何度も実行しても、冗長な名前空間宣言によってドキュメント サイズが増加することはありません。</span><span class="sxs-lookup"><span data-stu-id="da368-884">As a result, numerous cut and paste operations do not increase the size of your document with redundant namespace declarations.</span></span> <span data-ttu-id="da368-885">次の XSL ドキュメントを検討してください。</span><span class="sxs-lookup"><span data-stu-id="da368-885">Consider the following XSL document:</span></span>  
  
```xml  
<xsl:stylesheet version="1.0"   
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
     <xsl:template match="stock">  
         ...  
     </xsl:template>  
    </xsl:stylesheet>  
```  
  
 <span data-ttu-id="da368-886">`InnerXml`スタイル シートのノードのプロパティは、次の文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="da368-886">The `InnerXml` property on the stylesheet node returns the following string:</span></span>  
  
```xml  
<xsl:template match="stock"   
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
     ...  
    </xsl:template>  
```  
  
 <span data-ttu-id="da368-887">ノード id を保持するために使用する追加 xmlns:xsl 名前空間の宣言に注意してください。</span><span class="sxs-lookup"><span data-stu-id="da368-887">Notice the additional xmlns:xsl namespace declaration which is used to preserve the node identity.</span></span> <span data-ttu-id="da368-888">この内部の XML 文字列を再挿入する場合、戻る、元のドキュメント。</span><span class="sxs-lookup"><span data-stu-id="da368-888">If you re-insert this inner XML string, you will get back your original document.</span></span> <span data-ttu-id="da368-889">つまり、 `InnerXml` xsl:stylesheet の親要素が既にが xmlns:xsl 名前空間 delcaration、およびために削除を xmlns:xsl 名前空間の宣言が冗長、ことを認識します。</span><span class="sxs-lookup"><span data-stu-id="da368-889">In other words, `InnerXml` recognizes that the xmlns:xsl namespace declaration is redundant, given that the parent xsl:stylesheet element already has the xmlns:xsl namespace delcaration, and therefore removes it.</span></span>  
  
 <span data-ttu-id="da368-890">移動する場合`InnerXml`から既定の名前空間を持つドキュメントに既定の名前空間を持つドキュメント、動作が少し異なります。</span><span class="sxs-lookup"><span data-stu-id="da368-890">If you move `InnerXml` from a document with no default namespace to a document with a default namespace, the behavior is a little different.</span></span> <span data-ttu-id="da368-891">次の XML 文字列を検討してください。</span><span class="sxs-lookup"><span data-stu-id="da368-891">Consider the following XML string:</span></span>  
  
```xml  
<test>  
      <item>123</item>  
    </test>  
```  
  
 <span data-ttu-id="da368-892">`InnerXml` ない名前空間宣言とプレーンな XML 文字列が返されます。</span><span class="sxs-lookup"><span data-stu-id="da368-892">`InnerXml` returns a plain XML string with no namespace declarations:</span></span>  
  
```xml  
<item>123</item>  
```  
  
 <span data-ttu-id="da368-893">ドキュメントに、この文字列を挿入する場合、次のよう、既定の名前空間を場合します。</span><span class="sxs-lookup"><span data-stu-id="da368-893">If you then insert this string into a document that does have a default namespace, such as the following:</span></span>  
  
```xml  
<test2 xmlns="urn:1">  
    </test>  
```  
  
 <span data-ttu-id="da368-894">`InnerXml` 解析コンテキスト、および新しいノードの文字列は、urn: 1 の名前空間を選択します。</span><span class="sxs-lookup"><span data-stu-id="da368-894">`InnerXml` parses the string in context, and the new nodes pick up the urn:1 namespace.</span></span> <span data-ttu-id="da368-895">結果のようになります。</span><span class="sxs-lookup"><span data-stu-id="da368-895">The result looks like this:</span></span>  
  
```xml  
<test2 xmlns="urn:1">  
      <item>123</item>  
    </test>  
```  
  
 <span data-ttu-id="da368-896">要求するときに今すぐ、`InnerXml`戻り、次が得られます。</span><span class="sxs-lookup"><span data-stu-id="da368-896">Now when you ask for the `InnerXml` you get back the following:</span></span>  
  
```xml  
<item xmlns="urn:1">123</item>  
```  
  
 <span data-ttu-id="da368-897">Xmlns を手動で追加する必要があります。 名前空間がないドキュメントからが来ているという事実を保持するために挿入された項目を明示的にする場合 =""宣言し、結果の文字列を挿入します。</span><span class="sxs-lookup"><span data-stu-id="da368-897">If you explicitly want the inserted item to preserve the fact that it came from a document that had no namespace then you need to manually add an xmlns= "" declaration and insert the resulting string:</span></span>  
  
```xml  
<item xmlns="">123</item>  
```  
  
 <span data-ttu-id="da368-898">これは、次のようにすべての結果:</span><span class="sxs-lookup"><span data-stu-id="da368-898">The net effect of all this is as follows:</span></span>  
  
1.  <span data-ttu-id="da368-899">カット アンド ペースト`InnerXml`を使用しないドキュメント間で名前空間がクリーンで単純なと文字列の"xmlns"冗長性は作成されません。</span><span class="sxs-lookup"><span data-stu-id="da368-899">Cutting and pasting `InnerXml` among documents that do not use namespaces is clean and simple and does not create "xmlns" redundancy in your strings.</span></span>  
  
2.  <span data-ttu-id="da368-900">`InnerXml` 1 つ以上の名前空間 (つまり XSL スタイル シート) のあるドキュメント間でコピー アンド ペーストをも使用できます。</span><span class="sxs-lookup"><span data-stu-id="da368-900">`InnerXml` can also be used to cut and paste between documents which have more than one namespace (that is XSL stylesheets).</span></span>  
  
3.  <span data-ttu-id="da368-901">xmlns:xsl 宣言は自動的に、文字列に表示され、ノードの階層に表示されなくなります。</span><span class="sxs-lookup"><span data-stu-id="da368-901">xmlns:xsl declarations automatically appear in your strings and disappear in your node hierarchies.</span></span>  
  
4.  <span data-ttu-id="da368-902">移動する場合に`InnerXml`を既定の名前空間がドキュメントに既定の名前空間を持たないドキュメント、新しいノードを新しい既定の名前空間が選択されます。</span><span class="sxs-lookup"><span data-stu-id="da368-902">In the case where you are moving `InnerXml` from a document that has no default namespace to a document that does have a default namespace, the new nodes will pick up the new default namespace.</span></span>  
  
 <span data-ttu-id="da368-903">場合`InnerXml`設定されている結果のツリーが空の EntityReference ノードを含むドキュメントで現在定義されていないエンティティ参照を含む文字列と。</span><span class="sxs-lookup"><span data-stu-id="da368-903">If `InnerXml` is set with text containing entity references that are not currently defined in the document, the resulting tree will contain empty EntityReference nodes.</span></span>  
  
 <span data-ttu-id="da368-904">このプロパティは、DOM (Document Object Model) に対する Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-904">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="da368-905">このプロパティを設定したときに指定した XML は、整形式ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-905">The XML specified when setting this property is not well-formed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Xml.XmlDocument.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da368-906">現在のノードが読み取り専用かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-906">Gets a value indicating whether the current node is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da368-907">現在のノードが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-907">
              <see langword="true" /> if the current node is read-only; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="da368-908">
            <see langword="XmlDocument" /> ノードは常に <see langword="false" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-908">
              <see langword="XmlDocument" /> nodes always return <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-909">読み取り専用ノードとは 1 つのプロパティ、属性、または子を変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="da368-909">A read-only node is one whose properties, attributes, or children cannot be changed.</span></span> <span data-ttu-id="da368-910">読み取り専用のノードをツリーから削除し、他の場所に挿入できます。</span><span class="sxs-lookup"><span data-stu-id="da368-910">You can remove a read-only node from the tree and insert it somewhere else.</span></span>  
  
 <span data-ttu-id="da368-911">このプロパティは、DOM (Document Object Model) に対する Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-911">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-912">`IsReadOnly` プロパティを使用する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="da368-912">The following example shows how to use the `IsReadOnly` property.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.IsReadOnly Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.IsReadOnly Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.IsReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.IsReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.IsReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.IsReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="da368-913">
            <see cref="T:System.IO.Stream" />、URL、<see cref="T:System.IO.TextReader" />、または <see cref="T:System.Xml.XmlReader" /> から、指定した XML データを読み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-913">Loads the specified XML data from a <see cref="T:System.IO.Stream" />, a URL, a <see cref="T:System.IO.TextReader" />, or an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (System.IO.Stream inStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.IO.Stream inStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Load(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Load (inStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::IO::Stream ^ inStream);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.IO.Stream -&gt; unit&#xA;override this.Load : System.IO.Stream -&gt; unit" Usage="xmlDocument.Load inStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inStream">
          <span data-ttu-id="da368-914">読み込む XML ドキュメントが含まれているストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-914">The stream containing the XML document to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-915">指定したストリームから XML ドキュメントを読み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-915">Loads the XML document from the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="da368-916">`Load`メソッドは有意の空白を常に保持されます。</span><span class="sxs-lookup"><span data-stu-id="da368-916">The `Load` method always preserves significant white space.</span></span> <span data-ttu-id="da368-917"><xref:System.Xml.XmlDocument.PreserveWhitespace%2A>プロパティは、要素のコンテンツ内の空白である、有意の空白文字は保持されているかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="da368-917">The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not insignificant white space, that is white space in element content, is preserved.</span></span> <span data-ttu-id="da368-918">既定値は`false`; 要素のコンテンツ内の空白は保持されません。</span><span class="sxs-lookup"><span data-stu-id="da368-918">The default is `false`; white space in element content is not preserved.</span></span>  
  
 <span data-ttu-id="da368-919">検証型を作成するには検証を実行する場合は、<xref:System.Xml.XmlReader>インスタンスを使用して、<xref:System.Xml.XmlReaderSettings>クラスおよび<xref:System.Xml.XmlReader.Create%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="da368-919">If you want validation to occur, you can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="da368-920">詳細については、<xref:System.Xml.XmlReader> のリファレンス ページの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="da368-920">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="da368-921">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-921">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="da368-922">このメソッドは、入力 (たとえば、および utf-8、ANSI、)、XML の文字列形式を自動的に検出します。</span><span class="sxs-lookup"><span data-stu-id="da368-922">This method automatically detects the string format of the input XML (for example, UTF-8, ANSI, and so on).</span></span> <span data-ttu-id="da368-923">をアプリケーションがストリームの読み取りに使用されるエンコーディングを把握する必要がある場合は、使用を検討して、<xref:System.Xml.XmlTextReader>オブジェクト、ストリームの読み取りにし、使用して、<xref:System.Xml.XmlTextReader.Encoding%2A?displayProperty=nameWithType>エンコーディングを判別するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="da368-923">If your application needs to know which encoding is used to read the stream, consider using an <xref:System.Xml.XmlTextReader> object to read the stream, and then use the <xref:System.Xml.XmlTextReader.Encoding%2A?displayProperty=nameWithType> property to determine the encoding.</span></span> <span data-ttu-id="da368-924">使用する必要がある場合、 <xref:System.Xml.XmlDocument> XML を処理するオブジェクトを使用することができます、<xref:System.Xml.XmlTextReader>オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="da368-924">If you need to use a <xref:System.Xml.XmlDocument> object to work with XML, you can use the <xref:System.Xml.XmlTextReader> object to create one.</span></span> <span data-ttu-id="da368-925">詳細については、次を参照してください。 [XPathDocument および XmlDocument を使用して XML データの読み取り](~/docs/standard/data/xml/reading-xml-data-using-xpathdocument-and-xmldocument.md)します。</span><span class="sxs-lookup"><span data-stu-id="da368-925">For more information, see [Reading XML Data using XPathDocument and XmlDocument](~/docs/standard/data/xml/reading-xml-data-using-xpathdocument-and-xmldocument.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="da368-926">XML 内に読み込みエラーまたは解析エラーがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-926">There is a load or parse error in the XML.</span>
          </span>
          <span data-ttu-id="da368-927">この場合は、<see cref="T:System.IO.FileNotFoundException" /> が発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-927">In this case, a <see cref="T:System.IO.FileNotFoundException" /> is raised.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Schema.ValidationEventArgs" />
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="P:System.Xml.XmlValidatingReader.Schemas" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (System.IO.TextReader txtReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.IO.TextReader txtReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Load(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Load (txtReader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::IO::TextReader ^ txtReader);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.IO.TextReader -&gt; unit&#xA;override this.Load : System.IO.TextReader -&gt; unit" Usage="xmlDocument.Load txtReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="txtReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="txtReader">
          <span data-ttu-id="da368-928">XML データをドキュメントに送るために使用する <see langword="TextReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-928">The <see langword="TextReader" /> used to feed the XML data into the document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-929">指定した <see cref="T:System.IO.TextReader" /> から XML ドキュメントを読み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-929">Loads the XML document from the specified <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="da368-930">`Load`メソッドは有意の空白を常に保持されます。</span><span class="sxs-lookup"><span data-stu-id="da368-930">The `Load` method always preserves significant white space.</span></span> <span data-ttu-id="da368-931"><xref:System.Xml.XmlDocument.PreserveWhitespace%2A>プロパティは、要素のコンテンツ内の空白である、有意の空白文字は保持されているかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="da368-931">The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not insignificant white space, that is white space in element content, is preserved.</span></span> <span data-ttu-id="da368-932">既定値は`false`; 要素のコンテンツ内の空白は保持されません。</span><span class="sxs-lookup"><span data-stu-id="da368-932">The default is `false`; white space in element content is not preserved.</span></span>  
  
 <span data-ttu-id="da368-933">検証型を作成するには検証を実行する場合は、<xref:System.Xml.XmlReader>インスタンスを使用して、<xref:System.Xml.XmlReaderSettings>クラスおよび<xref:System.Xml.XmlReader.Create%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="da368-933">If you want validation to occur, you can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="da368-934">詳細については、<xref:System.Xml.XmlReader> のリファレンス ページの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="da368-934">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="da368-935">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-935">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-936">次の例では、<xref:System.IO.StringReader>に XML データの文字列を読み込むクラスを`XmlDocument`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="da368-936">The following example uses the <xref:System.IO.StringReader> class to load a string of XML data into the `XmlDocument` object.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="da368-937">XML 内に読み込みエラーまたは解析エラーがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-937">There is a load or parse error in the XML.</span>
          </span>
          <span data-ttu-id="da368-938">この場合、ドキュメントは空のままです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-938">In this case, the document remains empty.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamReader" />
        <altmember cref="T:System.Xml.Schema.ValidationEventArgs" />
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="P:System.Xml.XmlValidatingReader.Schemas" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Load (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="abstract member Load : string -&gt; unit&#xA;override this.Load : string -&gt; unit" Usage="xmlDocument.Load filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="da368-939">読み込む XML ドキュメントを格納しているファイルの URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-939">URL for the file containing the XML document to load.</span>
          </span>
          <span data-ttu-id="da368-940">URL には、ローカル ファイルまたは HTTP の URL (Web アドレス) を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-940">The URL can be either a local file or an HTTP URL (a Web address).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-941">指定した URL から XML ドキュメントを読み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-941">Loads the XML document from the specified URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="da368-942">`Load`メソッドは有意の空白を常に保持されます。</span><span class="sxs-lookup"><span data-stu-id="da368-942">The `Load` method always preserves significant white space.</span></span> <span data-ttu-id="da368-943"><xref:System.Xml.XmlDocument.PreserveWhitespace%2A>プロパティは、要素のコンテンツ内の空白である、有意の空白文字は保持されているかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="da368-943">The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not insignificant white space, that is white space in element content, is preserved.</span></span> <span data-ttu-id="da368-944">既定値は`false`; 要素のコンテンツ内の空白は保持されません。</span><span class="sxs-lookup"><span data-stu-id="da368-944">The default is `false`; white space in element content is not preserved.</span></span>  
  
 <span data-ttu-id="da368-945">検証型を作成するには検証を実行する場合は、<xref:System.Xml.XmlReader>インスタンスを使用して、<xref:System.Xml.XmlReaderSettings>クラスおよび<xref:System.Xml.XmlReader.Create%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="da368-945">If you want validation to occur, you can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="da368-946">詳細については、<xref:System.Xml.XmlReader> のリファレンス ページの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="da368-946">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="da368-947">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-947">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="da368-948">XML 内に読み込みエラーまたは解析エラーがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-948">There is a load or parse error in the XML.</span>
          </span>
          <span data-ttu-id="da368-949">ここでは <see cref="T:System.IO.FileNotFoundException" /> が発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-949">In this case, a <see cref="T:System.IO.FileNotFoundException" /> is raised.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da368-950">
            <paramref name="filename" /> は長さ 0 の文字列か、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-950">
              <paramref name="filename" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da368-951">
            <paramref name="filename" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-951">
              <paramref name="filename" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="da368-952">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-952">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="da368-953">指定したパスが無効です (割り当てられていないドライブであるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-953">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="da368-954">ファイルを開くときに、I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-954">An I/O error occurred while opening the file.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="da368-955">
            <paramref name="filename" /> が読み取り専用のファイルを指定しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-955">
              <paramref name="filename" /> specified a file that is read-only.</span>
          </span>
          <span data-ttu-id="da368-956">または</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-956">-or-</span>
          </span>
          <span data-ttu-id="da368-957">この操作は、現在のプラットフォームではサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-957">This operation is not supported on the current platform.</span>
          </span>
          <span data-ttu-id="da368-958">または</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-958">-or-</span>
          </span>
          <span data-ttu-id="da368-959">
            <paramref name="filename" /> はディレクトリを指定しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-959">
              <paramref name="filename" /> specified a directory.</span>
          </span>
          <span data-ttu-id="da368-960">または</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-960">-or-</span>
          </span>
          <span data-ttu-id="da368-961">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-961">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="da368-962">
            <paramref name="filename" /> で指定されたファイルが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-962">The file specified in <paramref name="filename" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="da368-963">
            <paramref name="filename" /> の形式が正しくありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-963">
              <paramref name="filename" /> is in an invalid format.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="da368-964">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-964">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Schema.ValidationEventArgs" />
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="P:System.Xml.XmlValidatingReader.Schemas" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Load (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Xml.XmlReader -&gt; unit&#xA;override this.Load : System.Xml.XmlReader -&gt; unit" Usage="xmlDocument.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="da368-965">XML データをドキュメントに送るために使用する <see langword="XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-965">The <see langword="XmlReader" /> used to feed the XML data into the document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-966">指定した <see cref="T:System.Xml.XmlReader" /> から XML ドキュメントを読み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-966">Loads the XML document from the specified <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="da368-967">`Load`メソッドは有意の空白を常に保持されます。</span><span class="sxs-lookup"><span data-stu-id="da368-967">The `Load` method always preserves significant white space.</span></span> <span data-ttu-id="da368-968"><xref:System.Xml.XmlDocument.PreserveWhitespace%2A>プロパティは、要素のコンテンツ内の空白である、有意の空白文字は保持されているかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="da368-968">The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not insignificant white space, that is white space in element content, is preserved.</span></span> <span data-ttu-id="da368-969">既定値は`false`; 要素のコンテンツ内の空白は保持されません。</span><span class="sxs-lookup"><span data-stu-id="da368-969">The default is `false`; white space in element content is not preserved.</span></span>  
  
 <span data-ttu-id="da368-970">リーダーが初期状態の場合 (<xref:System.Xml.XmlReader.ReadState%2A> ReadState.Initial =)、`Load`リーダーの内容全体を使用して、検出した内容から DOM をビルドします。</span><span class="sxs-lookup"><span data-stu-id="da368-970">If the reader is in the initial state (<xref:System.Xml.XmlReader.ReadState%2A> =ReadState.Initial), `Load` consumes the entire contents of the reader and builds the DOM from what it finds.</span></span>  
  
 <span data-ttu-id="da368-971">場合は、リーダーは"n"の深さでいくつかのノードに既に配置されている、このメソッドは、そのノードと終了タグを"n"の深さを閉じるまでのすべての後続の兄弟を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="da368-971">If the reader is already positioned on some node at depth "n", this method loads that node and all subsequent siblings up to the end tag that closes depth "n".</span></span> <span data-ttu-id="da368-972">これは、次の結果です。</span><span class="sxs-lookup"><span data-stu-id="da368-972">This has the following results.</span></span>  
  
 <span data-ttu-id="da368-973">場合は、現在のノードとその兄弟は、次のようになります。</span><span class="sxs-lookup"><span data-stu-id="da368-973">If the current node and its siblings look like the following:</span></span>  
  
```xml  
<!--comment--><element1>one</element1><element2>two</element2>  
```  
  
 <span data-ttu-id="da368-974">`Load` ドキュメントは、2 つのルート レベル要素を含めることはできませんので、例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="da368-974">`Load` throws an exception because a document cannot have two root level elements.</span></span> <span data-ttu-id="da368-975">場合は、現在のノードとその兄弟は、次のようになります。</span><span class="sxs-lookup"><span data-stu-id="da368-975">If the current node and its siblings look like the following:</span></span>  
  
```xml  
<!--comment--><?process instruction?><!--comment--></endtag>  
```  
  
 <span data-ttu-id="da368-976">`Load` 成功すると、ルート レベルの要素がないため、DOM ツリーに不完全ながあるがします。</span><span class="sxs-lookup"><span data-stu-id="da368-976">`Load` succeeds, but you have an incomplete DOM tree because there is no root level element.</span></span> <span data-ttu-id="da368-977">ドキュメントを保存する前に、ルート レベルの要素をそれ以外の場合追加する必要があります<xref:System.Xml.XmlDocument.Save%2A>例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="da368-977">Before you save the document, you must add a root level element, otherwise <xref:System.Xml.XmlDocument.Save%2A> will throw an exception.</span></span>  
  
 <span data-ttu-id="da368-978">リーダーが配置されてまで読み取りを続行が空白または属性ノード、たとえば、ドキュメントのルート レベルの有効なリーフ ノードで、リーダーが配置されている場合、ルートとして使用することができますをノード上。</span><span class="sxs-lookup"><span data-stu-id="da368-978">If the reader is positioned on a leaf node that is invalid for the root level of a document, for example a white space or attribute node, the reader continues to read until it is positioned on a node that can be used for the root.</span></span> <span data-ttu-id="da368-979">ドキュメントの読み込みは、この位置から開始されます。</span><span class="sxs-lookup"><span data-stu-id="da368-979">The document begins loading at this point.</span></span>  
  
 <span data-ttu-id="da368-980">検証型を作成するには検証を実行する場合は、<xref:System.Xml.XmlReader>インスタンスを使用して、<xref:System.Xml.XmlReaderSettings>クラスおよび<xref:System.Xml.XmlReader.Create%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="da368-980">If you want validation to occur, you can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="da368-981">詳細については、<xref:System.Xml.XmlReader> のリファレンス ページの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="da368-981">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="da368-982">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-982">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-983">次の例では、読み込みの最後の book ノード、`books.xml`ファイル、XML ドキュメントにします。</span><span class="sxs-lookup"><span data-stu-id="da368-983">The following example loads the last book node of the `books.xml` file into the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.Load2 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.Load2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.Load2 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.Load2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.Load2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.Load2 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="da368-984">例では、ファイルを使用して`books.xml`、入力として。</span><span class="sxs-lookup"><span data-stu-id="da368-984">The example uses the file, `books.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="da368-985">XML 内に読み込みエラーまたは解析エラーがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-985">There is a load or parse error in the XML.</span>
          </span>
          <span data-ttu-id="da368-986">この場合、ドキュメントは空のままです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-986">In this case, the document remains empty.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Schema.ValidationEventArgs" />
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="P:System.Xml.XmlValidatingReader.Schemas" />
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public virtual void LoadXml (string xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadXml(string xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.LoadXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadXml (xml As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadXml(System::String ^ xml);" />
      <MemberSignature Language="F#" Value="abstract member LoadXml : string -&gt; unit&#xA;override this.LoadXml : string -&gt; unit" Usage="xmlDocument.LoadXml xml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="da368-987">読み込む XML ドキュメントを格納している文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-987">String containing the XML document to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-988">指定した文字列から XML ドキュメントを読み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-988">Loads the XML document from the specified string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-989">既定では、`LoadXml`メソッドでは、空白や有意の空白は保持されません。</span><span class="sxs-lookup"><span data-stu-id="da368-989">By default the `LoadXml` method does not preserve white space or significant white space.</span></span>  
  
 <span data-ttu-id="da368-990">このメソッドは、Dtd を解析しますが、DTD またはスキーマの検証を実行しません。</span><span class="sxs-lookup"><span data-stu-id="da368-990">This method parses DTDs, but does not do DTD or Schema validation.</span></span> <span data-ttu-id="da368-991">検証型を作成するには検証を実行する場合は、<xref:System.Xml.XmlReader>インスタンスを使用して、<xref:System.Xml.XmlReaderSettings>クラスおよび<xref:System.Xml.XmlReader.Create%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="da368-991">If you want validation to occur, you can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="da368-992">詳細については、<xref:System.Xml.XmlReader> のリファレンス ページの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="da368-992">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="da368-993">ロードする場合、 <xref:System.IO.Stream>、 <xref:System.String>、 <xref:System.IO.TextReader>、または<xref:System.Xml.XmlReader>、このメソッドではなく Load メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="da368-993">If you want to load from a <xref:System.IO.Stream>, <xref:System.String>, <xref:System.IO.TextReader>, or <xref:System.Xml.XmlReader>, use the Load method instead of this method.</span></span>  
  
 <span data-ttu-id="da368-994">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-994">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-995">次の例に XML を読み込んで、`XmlDocument`オブジェクトし、をファイルに保存します。</span><span class="sxs-lookup"><span data-stu-id="da368-995">The following example loads XML into an `XmlDocument` object and saves it out to a file.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="da368-996">XML 内に読み込みエラーまたは解析エラーがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-996">There is a load or parse error in the XML.</span>
          </span>
          <span data-ttu-id="da368-997">この場合、ドキュメントは空のままです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-997">In this case, the document remains empty.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlDocument.PreserveWhitespace" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlDocument.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da368-998">ノードのローカル名を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-998">Gets the local name of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da368-999">
            <see langword="XmlDocument" /> ノードの場合、ローカル名は #document です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-999">For <see langword="XmlDocument" /> nodes, the local name is #document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-1000">返されるローカルの名前は、<xref:System.Xml.XmlDocument.NodeType%2A>ノード。</span><span class="sxs-lookup"><span data-stu-id="da368-1000">The local name returned depends on the <xref:System.Xml.XmlDocument.NodeType%2A> of the node.</span></span> <span data-ttu-id="da368-1001">ノードの種類ごとに返されるローカルの名前を説明した表を表示するには、次を参照してください。、<xref:System.Xml.XmlNode.LocalName%2A>プロパティ、<xref:System.Xml.XmlNode>クラス。</span><span class="sxs-lookup"><span data-stu-id="da368-1001">To see a table describing the local name returned for each of the node types, see the <xref:System.Xml.XmlNode.LocalName%2A> property in the <xref:System.Xml.XmlNode> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlDocument.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da368-1002">ノードの限定名を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1002">Gets the qualified name of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da368-1003">
            <see langword="XmlDocument" /> ノードの場合、名前は #document です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1003">For <see langword="XmlDocument" /> nodes, the name is #document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-1004">返される名前は、<xref:System.Xml.XmlDocument.NodeType%2A>ノード。</span><span class="sxs-lookup"><span data-stu-id="da368-1004">The name returned depends on the <xref:System.Xml.XmlDocument.NodeType%2A> of the node.</span></span> <span data-ttu-id="da368-1005">返されるノードの型の名前を説明した表を表示するには、次を参照してください。、<xref:System.Xml.XmlNode.Name%2A>プロパティ、<xref:System.Xml.XmlNode>クラス。</span><span class="sxs-lookup"><span data-stu-id="da368-1005">To see a table describing the name returned for each of the node types, see the <xref:System.Xml.XmlNode.Name%2A> property in the <xref:System.Xml.XmlNode> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.XmlDocument.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da368-1006">この実装に関連付けられている <see cref="T:System.Xml.XmlNameTable" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1006">Gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this implementation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da368-1007">ドキュメント内の最小単位に分割された文字列を取得できる <see langword="XmlNameTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1007">An <see langword="XmlNameTable" /> enabling you to get the atomized version of a string within the document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-1008">各`XmlDocument`オブジェクトには、<xref:System.Xml.NameTable>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="da368-1008">Each `XmlDocument` object has a <xref:System.Xml.NameTable> object.</span></span> <span data-ttu-id="da368-1009">要素と属性名が格納されている、`NameTable`アトム化された文字列として。</span><span class="sxs-lookup"><span data-stu-id="da368-1009">Element and attribute names are stored in the `NameTable` as atomized strings.</span></span> <span data-ttu-id="da368-1010">つまり、名前がドキュメントで参照されている場合でも複数回には格納 1 回だけで、`NameTable`します。</span><span class="sxs-lookup"><span data-stu-id="da368-1010">This means that even if a name is referenced in the document multiple times it is stored only once in the `NameTable`.</span></span> <span data-ttu-id="da368-1011">たとえば、ドキュメントには、"Customer"という名前の複数の要素が必要がある`NameTable`その名前の要求を受信するたびに同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da368-1011">For example, if the document had multiple elements with the name "Customer", `NameTable` returns the same object whenever it receives a request for that name.</span></span> <span data-ttu-id="da368-1012">その結果、ユーザーは、高い文字列比較ではなく、これらの文字列にオブジェクトの比較を使用してコードを記述できます。</span><span class="sxs-lookup"><span data-stu-id="da368-1012">As a result, users can write code using object comparisons on these strings rather than the more expensive string comparisons.</span></span>  
  
 <span data-ttu-id="da368-1013">最小単位に分割された文字列の詳細については、<xref:System.Xml.XmlNameTable> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="da368-1013">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 <span data-ttu-id="da368-1014">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-1014">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <Member MemberName="NodeChanged">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeChanged As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeChanged;" />
      <MemberSignature Language="F#" Value="member this.NodeChanged : System.Xml.XmlNodeChangedEventHandler " Usage="member this.NodeChanged : System.Xml.XmlNodeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da368-1015">このドキュメントに属するノードの <see cref="P:System.Xml.XmlNode.Value" /> が変更されると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1015">Occurs when the <see cref="P:System.Xml.XmlNode.Value" /> of a node belonging to this document has been changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-1016">このイベントは、値を持つノードのみに適用されます。</span><span class="sxs-lookup"><span data-stu-id="da368-1016">This event only applies to nodes that have a value.</span></span>  
  
 <span data-ttu-id="da368-1017">このイベントでは、ドキュメントに挿入されたかどうか、このドキュメントでは、によって作成されたすべてのノードが含まれます。</span><span class="sxs-lookup"><span data-stu-id="da368-1017">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeChanging">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeChanging As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeChanging;" />
      <MemberSignature Language="F#" Value="member this.NodeChanging : System.Xml.XmlNodeChangedEventHandler " Usage="member this.NodeChanging : System.Xml.XmlNodeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da368-1018">このドキュメントに属するノードの <see cref="P:System.Xml.XmlNode.Value" /> が変更される直前に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1018">Occurs when the <see cref="P:System.Xml.XmlNode.Value" /> of a node belonging to this document is about to be changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-1019">このイベントは、追加のチェックを実行し、必要に応じて、操作を停止して例外をスローできます。</span><span class="sxs-lookup"><span data-stu-id="da368-1019">This event allows the user to do extra checking and, if necessary, throw an exception to stop the operation.</span></span> <span data-ttu-id="da368-1020">例外がスローされた場合、`XmlDocument`を元の状態を返します。</span><span class="sxs-lookup"><span data-stu-id="da368-1020">If an exception is thrown the `XmlDocument` returns to its original state.</span></span> <span data-ttu-id="da368-1021">このイベントは、値を持つノードのみに適用されます。</span><span class="sxs-lookup"><span data-stu-id="da368-1021">This event only applies to nodes that have a value.</span></span>  
  
 <span data-ttu-id="da368-1022">このイベントでは、ドキュメントに挿入されたかどうか、このドキュメントでは、によって作成されたすべてのノードが含まれます。</span><span class="sxs-lookup"><span data-stu-id="da368-1022">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeInserted">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeInserted" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeInserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeInserted As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeInserted;" />
      <MemberSignature Language="F#" Value="member this.NodeInserted : System.Xml.XmlNodeChangedEventHandler " Usage="member this.NodeInserted : System.Xml.XmlNodeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da368-1023">このドキュメントに属するノードが別のノードに挿入されると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1023">Occurs when a node belonging to this document has been inserted into another node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-1024">このイベントでは、ドキュメントに挿入されたかどうか、このドキュメントでは、によって作成されたすべてのノードが含まれます。</span><span class="sxs-lookup"><span data-stu-id="da368-1024">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeInserting">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeInserting" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeInserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeInserting As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeInserting;" />
      <MemberSignature Language="F#" Value="member this.NodeInserting : System.Xml.XmlNodeChangedEventHandler " Usage="member this.NodeInserting : System.Xml.XmlNodeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da368-1025">このドキュメントに属するノードが別のノードに挿入される直前に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1025">Occurs when a node belonging to this document is about to be inserted into another node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-1026">このイベントは、追加のチェックを実行し、必要に応じて、操作を停止して例外をスローできます。</span><span class="sxs-lookup"><span data-stu-id="da368-1026">This event allows the user to do extra checking and, if necessary, throw an exception to stop the operation.</span></span> <span data-ttu-id="da368-1027">例外がスローされた場合、`XmlDocument`を元の状態を返します。</span><span class="sxs-lookup"><span data-stu-id="da368-1027">If an exception is thrown the `XmlDocument` returns to its original state.</span></span>  
  
 <span data-ttu-id="da368-1028">このイベントでは、ドキュメントに挿入されたかどうか、このドキュメントでは、によって作成されたすべてのノードが含まれます。</span><span class="sxs-lookup"><span data-stu-id="da368-1028">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeRemoved">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeRemoved" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeRemoved As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeRemoved;" />
      <MemberSignature Language="F#" Value="member this.NodeRemoved : System.Xml.XmlNodeChangedEventHandler " Usage="member this.NodeRemoved : System.Xml.XmlNodeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da368-1029">このドキュメントに属するノードが親から削除されると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1029">Occurs when a node belonging to this document has been removed from its parent.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-1030">このイベントでは、ドキュメントに挿入されたかどうか、このドキュメントでは、によって作成されたすべてのノードが含まれます。</span><span class="sxs-lookup"><span data-stu-id="da368-1030">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeRemoving">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeRemoving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeRemoving" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeRemoving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeRemoving As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeRemoving;" />
      <MemberSignature Language="F#" Value="member this.NodeRemoving : System.Xml.XmlNodeChangedEventHandler " Usage="member this.NodeRemoving : System.Xml.XmlNodeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da368-1031">このドキュメントに属するノードがドキュメントから削除される直前に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1031">Occurs when a node belonging to this document is about to be removed from the document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-1032">このイベントは、追加のチェックを実行し、必要に応じて、操作を停止して例外をスローできます。</span><span class="sxs-lookup"><span data-stu-id="da368-1032">This event allows the user to do extra checking and, if necessary, throw an exception to stop the operation.</span></span> <span data-ttu-id="da368-1033">例外がスローされた場合、`XmlDocument`を元の状態を返します。</span><span class="sxs-lookup"><span data-stu-id="da368-1033">If an exception is thrown the `XmlDocument` returns to its original state.</span></span>  
  
 <span data-ttu-id="da368-1034">このイベントでは、ドキュメントに挿入されたかどうか、このドキュメントでは、によって作成されたすべてのノードが含まれます。</span><span class="sxs-lookup"><span data-stu-id="da368-1034">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlDocument.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da368-1035">現在のノードの種類を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1035">Gets the type of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da368-1036">ノード型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1036">The node type.</span>
          </span>
          <span data-ttu-id="da368-1037">
            <see langword="XmlDocument" /> ノードの場合、この値は XmlNodeType.Document です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1037">For <see langword="XmlDocument" /> nodes, this value is XmlNodeType.Document.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="OwnerDocument">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlDocument OwnerDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocument OwnerDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.OwnerDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OwnerDocument As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlDocument ^ OwnerDocument { System::Xml::XmlDocument ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnerDocument : System.Xml.XmlDocument" Usage="System.Xml.XmlDocument.OwnerDocument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da368-1038">現在のノードが属する <see cref="T:System.Xml.XmlDocument" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1038">Gets the <see cref="T:System.Xml.XmlDocument" /> to which the current node belongs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da368-1039">
            <see langword="XmlDocument" /> ノード (<see cref="P:System.Xml.XmlDocument.NodeType" /> が XmlNodeType.Document に等しい) の場合、このプロパティは常に <see langword="null" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1039">For <see langword="XmlDocument" /> nodes (<see cref="P:System.Xml.XmlDocument.NodeType" /> equals XmlNodeType.Document), this property always returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode ParentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode ParentNode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.ParentNode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ParentNode As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ ParentNode { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentNode : System.Xml.XmlNode" Usage="System.Xml.XmlDocument.ParentNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da368-1040">このノードの親ノード (親を持つノードの場合) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1040">Gets the parent node of this node (for nodes that can have parents).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da368-1041">常に <see langword="null" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1041">Always returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveWhitespace">
      <MemberSignature Language="C#" Value="public bool PreserveWhitespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.PreserveWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveWhitespace { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreserveWhitespace : bool with get, set" Usage="System.Xml.XmlDocument.PreserveWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da368-1042">要素のコンテンツにある空白を保存するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1042">Gets or sets a value indicating whether to preserve white space in element content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da368-1043">空白を保存する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1043">
              <see langword="true" /> to preserve white space; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="da368-1044">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1044">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-1045">このプロパティは、空白文字を読み込み中に処理する方法を決定し、プロセスを保存します。</span><span class="sxs-lookup"><span data-stu-id="da368-1045">This property determines how white space is handled during the load and save process.</span></span>  
  
 <span data-ttu-id="da368-1046">場合`PreserveWhitespace`は`true`する前に<xref:System.Xml.XmlDocument.Load%2A>または<xref:System.Xml.XmlDocument.LoadXml%2A>が呼び出されると、空白ノードは、保存された、それ以外の場合、このプロパティは`false`空白でない、有意の空白は保持されます。</span><span class="sxs-lookup"><span data-stu-id="da368-1046">If `PreserveWhitespace` is `true` before <xref:System.Xml.XmlDocument.Load%2A> or <xref:System.Xml.XmlDocument.LoadXml%2A> is called, white space nodes are preserved; otherwise, if this property is `false`, significant white space is preserved, white space is not.</span></span>  
  
 <span data-ttu-id="da368-1047">場合`PreserveWhitespace`は`true`する前に<xref:System.Xml.XmlDocument.Save%2A>が呼び出されると、ドキュメント内の空白が出力に保存された、それ以外の場合、このプロパティは`false`、`XmlDocument`自動インデントの出力。</span><span class="sxs-lookup"><span data-stu-id="da368-1047">If `PreserveWhitespace` is `true` before <xref:System.Xml.XmlDocument.Save%2A> is called, white space in the document is preserved in the output; otherwise, if this property is `false`, `XmlDocument` auto-indents the output.</span></span>  
  
 <span data-ttu-id="da368-1048">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-1048">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-1049">次の例では、ファイルから空白文字を削除する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="da368-1049">The following example shows how to strip white space from a file.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.PreserveWhitespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.PreserveWhitespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.PreserveWhitespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.PreserveWhitespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.PreserveWhitespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.PreserveWhitespace Example/VB/source.vb#1)]  
  
 <span data-ttu-id="da368-1050">例では、ファイルを使用して`book.xml`として入力します。</span><span class="sxs-lookup"><span data-stu-id="da368-1050">The example uses the file `book.xml` as input.</span></span>  
  
 [!code-xml[Classic WebData XmlDocument.PreserveWhitespace Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDocument.PreserveWhitespace Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ReadNode (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode ReadNode(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.ReadNode(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadNode (reader As XmlReader) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ ReadNode(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadNode : System.Xml.XmlReader -&gt; System.Xml.XmlNode&#xA;override this.ReadNode : System.Xml.XmlReader -&gt; System.Xml.XmlNode" Usage="xmlDocument.ReadNode reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="da368-1051">XML ソース。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1051">The XML source</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-1052">
            <see cref="T:System.Xml.XmlNode" /> 内の情報に基づいて、<see cref="T:System.Xml.XmlReader" /> オブジェクトを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1052">Creates an <see cref="T:System.Xml.XmlNode" /> object based on the information in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
          <span data-ttu-id="da368-1053">リーダーは、ノードまたは属性に配置されている必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1053">The reader must be positioned on a node or attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da368-1054">新しい <see langword="XmlNode" />。ノードがそれ以上存在しない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1054">The new <see langword="XmlNode" /> or <see langword="null" /> if no more nodes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-1055">1 つの読み取り`XmlNode`指定したリーダーから次のノードで、リーダーが配置とします。</span><span class="sxs-lookup"><span data-stu-id="da368-1055">Reads one `XmlNode` from the given reader and positions the reader on the next node.</span></span> <span data-ttu-id="da368-1056">このメソッドの型を作成する`XmlNode`に一致する、<xref:System.Xml.XmlNode.NodeType%2A>にリーダーが現在配置されています。</span><span class="sxs-lookup"><span data-stu-id="da368-1056">This method creates the type of `XmlNode` matching the <xref:System.Xml.XmlNode.NodeType%2A> on which the reader is currently positioned.</span></span> <span data-ttu-id="da368-1057">(リーダーが初期の状態の場合`ReadNode`最初のノードに、リーダーを進めるし、そのノードで動作します)。</span><span class="sxs-lookup"><span data-stu-id="da368-1057">(If the reader is in the initial state, `ReadNode` advances the reader to the first node and then operates on that node.)</span></span>  
  
 <span data-ttu-id="da368-1058">要素の開始時に、リーダーが配置されている場合`ReadNode`読み取りすべての属性および子ノード、最大、現在のノードの終了タグを含むです。</span><span class="sxs-lookup"><span data-stu-id="da368-1058">If the reader is positioned on the start of an element, `ReadNode` reads all the attributes and any child nodes, up to and including the end tag of the current node.</span></span> <span data-ttu-id="da368-1059">`XmlNode`返されるすべての読み取りを表すサブツリーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="da368-1059">The `XmlNode` returned contains the sub-tree representing everything read.</span></span> <span data-ttu-id="da368-1060">リーダーは終了タグの直後に配置されます。</span><span class="sxs-lookup"><span data-stu-id="da368-1060">The reader is positioned immediately after the end tag.</span></span>  
  
 <span data-ttu-id="da368-1061">`ReadNode` 属性を読み取ることもできますが、ここは変化しません、リーダーを次の属性。</span><span class="sxs-lookup"><span data-stu-id="da368-1061">`ReadNode` can also read attributes, but in this case it does not advance the reader to the next attribute.</span></span> <span data-ttu-id="da368-1062">次の c# コードを記述できます。</span><span class="sxs-lookup"><span data-stu-id="da368-1062">This allows you to write the following C# code:</span></span>  
  
```csharp  
XmlDocument doc = new XmlDocument();  
while (reader.MoveToNextAttribute())  
{  
  XmlNode a = doc.ReadNode(reader);  
  // Do some more processing.  
}  
```  
  
 <span data-ttu-id="da368-1063">`ReadNode` 使用して属性値で呼び出した後つまり`ReadNode`属性に<xref:System.Xml.XmlReader.ReadAttributeValue%2A?displayProperty=nameWithType>返します`false`します。</span><span class="sxs-lookup"><span data-stu-id="da368-1063">`ReadNode` does consume the attribute value though, which means after calling `ReadNode` on an attribute, <xref:System.Xml.XmlReader.ReadAttributeValue%2A?displayProperty=nameWithType> returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-1064">次の例では`ReadNode`新しいノードを作成し、ドキュメントに新しいノードを挿入します。</span><span class="sxs-lookup"><span data-stu-id="da368-1064">The following example uses `ReadNode` to create a new node and then inserts the new node into the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.ReadNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.ReadNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.ReadNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.ReadNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.ReadNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.ReadNode Example/VB/source.vb#1)]  
  
 <span data-ttu-id="da368-1065">例では、ファイルを使用して`cd.xml`、入力として。</span><span class="sxs-lookup"><span data-stu-id="da368-1065">The example uses the file, `cd.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlDocument.ReadNode Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDocument.ReadNode Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="da368-1066">リーダーが、EndElement や EndEntity など、有効な DOM ノードに変換されないノード型に配置されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1066">The reader is positioned on a node type that does not translate to a valid DOM node (for example, EndElement or EndEntity).</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="da368-1067">このメソッドは、継承確認要求です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="da368-1067">This method has an inheritance demand.</span>
            </span>
            <span data-ttu-id="da368-1068">オーバーライドする完全な信頼が必要な<see langword="ReadNode" />メソッド。</span>
            <span class="sxs-lookup">
              <span data-stu-id="da368-1068">Full trust is required to override the <see langword="ReadNode" /> method.</span>
            </span>
            <span data-ttu-id="da368-1069">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="da368-1069">This method is a Microsoft extension to the Document Object Model (DOM).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="da368-1070">指定した位置に XML ドキュメントを保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1070">Saves the XML document to the specified location.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (System.IO.Stream outStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.IO.Stream outStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Save(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save (outStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save(System::IO::Stream ^ outStream);" />
      <MemberSignature Language="F#" Value="abstract member Save : System.IO.Stream -&gt; unit&#xA;override this.Save : System.IO.Stream -&gt; unit" Usage="xmlDocument.Save outStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="outStream">
          <span data-ttu-id="da368-1071">保存先のストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1071">The stream to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-1072">指定したストリームに XML ドキュメントを保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1072">Saves the XML document to the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-1073">場合にのみ、空白文字は保持<xref:System.Xml.XmlDocument.PreserveWhitespace%2A>に設定されている`true`します。</span><span class="sxs-lookup"><span data-stu-id="da368-1073">White space is preserved only if <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="da368-1074">現在の XmlDeclaration`XmlDocument`オブジェクトが保存されたドキュメントのエンコーディング属性を決定します。</span><span class="sxs-lookup"><span data-stu-id="da368-1074">The XmlDeclaration of the current `XmlDocument` object determines the encoding attribute in the saved document.</span></span> <span data-ttu-id="da368-1075">エンコーディング属性の値を取得、<xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="da368-1075">The value of the encoding attribute is taken from the <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="da368-1076">場合、`XmlDocument`は XmlDeclaration がないか、XmlDeclaration がエンコーディング属性を持たない場合、保存されたドキュメントはありませんいずれかのいずれか。</span><span class="sxs-lookup"><span data-stu-id="da368-1076">If the `XmlDocument` does not have an XmlDeclaration, or if the XmlDeclaration does not have an encoding attribute, the saved document will not have one either.</span></span>  
  
 <span data-ttu-id="da368-1077">ドキュメントが保存されると、ノード id を (ローカル名と名前空間 URI) を正しく保持 xmlns 属性が生成されます。</span><span class="sxs-lookup"><span data-stu-id="da368-1077">When the document is saved, xmlns attributes are generated to persist the node identity (local name + namespace URI) correctly.</span></span> <span data-ttu-id="da368-1078">たとえば、次の c# コード</span><span class="sxs-lookup"><span data-stu-id="da368-1078">For example, the following C# code</span></span>  
  
```csharp  
XmlDocument doc = new XmlDocument();  
doc.AppendChild(doc.CreateElement("item","urn:1"));  
doc.Save(Console.Out);  
```  
  
 <span data-ttu-id="da368-1079">この xml 属性を生成`<item xmls="urn:1"/>`します。</span><span class="sxs-lookup"><span data-stu-id="da368-1079">generates this xmls attribute `<item xmls="urn:1"/>`.</span></span>  
  
 <span data-ttu-id="da368-1080">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-1080">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="da368-1081">だけ、<xref:System.Xml.XmlDocument.Save%2A>メソッドは、整形式 XML ドキュメントを適用します。</span><span class="sxs-lookup"><span data-stu-id="da368-1081">Note that only the <xref:System.Xml.XmlDocument.Save%2A> method enforces a well-formed XML document.</span></span> <span data-ttu-id="da368-1082">他のすべての`Save`オーバー ロードは整形式のフラグメントを保証するだけです。</span><span class="sxs-lookup"><span data-stu-id="da368-1082">All other `Save` overloads only guarantee a well-formed fragment.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="da368-1083">操作の結果、整形式の XML ドキュメントにならない場合があります (ドキュメント要素がない、XML 宣言の重複など)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1083">The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Save : System.IO.TextWriter -&gt; unit&#xA;override this.Save : System.IO.TextWriter -&gt; unit" Usage="xmlDocument.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="da368-1084">保存先の <see langword="TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1084">The <see langword="TextWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-1085">指定した <see cref="T:System.IO.TextWriter" /> に XML ドキュメントを保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1085">Saves the XML document to the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-1086">エンコード、`TextWriter`エンコーディングは書き出さを決定します (のエンコーディングに置換されます XmlDeclaration ノードのエンコード、 `TextWriter`)。</span><span class="sxs-lookup"><span data-stu-id="da368-1086">The encoding on the `TextWriter` determines the encoding that is written out (The encoding of the XmlDeclaration node is replaced by the encoding of the `TextWriter`).</span></span> <span data-ttu-id="da368-1087">ないかどうかに指定されてエンコード、 `TextWriter`、`XmlDocument`エンコーディング属性なしで保存されます。</span><span class="sxs-lookup"><span data-stu-id="da368-1087">If there was no encoding specified on the `TextWriter`, the `XmlDocument` is saved without an encoding attribute.</span></span>  
  
 <span data-ttu-id="da368-1088">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-1088">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="da368-1089">だけ、<xref:System.Xml.XmlDocument.Save%2A>メソッドは、整形式 XML ドキュメントを適用します。</span><span class="sxs-lookup"><span data-stu-id="da368-1089">Note that only the <xref:System.Xml.XmlDocument.Save%2A> method enforces a well-formed XML document.</span></span> <span data-ttu-id="da368-1090">他のすべての`Save`オーバー ロードは整形式のフラグメントを保証するだけです。</span><span class="sxs-lookup"><span data-stu-id="da368-1090">All other `Save` overloads only guarantee a well-formed fragment.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="da368-1091">操作の結果、整形式の XML ドキュメントにならない場合があります (ドキュメント要素がない、XML 宣言の重複など)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1091">The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="abstract member Save : string -&gt; unit&#xA;override this.Save : string -&gt; unit" Usage="xmlDocument.Save filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="da368-1092">ドキュメントを保存するファイルの位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1092">The location of the file where you want to save the document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-1093">指定したファイルに XML ドキュメントを保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1093">Saves the XML document to the specified file.</span>
          </span>
          <span data-ttu-id="da368-1094">指定したファイルが存在する場合は、このメソッドはそれを上書きします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1094">If the specified file exists, this method overwrites it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-1095">出力のファイルのみの場合に空白文字は保持<xref:System.Xml.XmlDocument.PreserveWhitespace%2A>に設定されている`true`します。</span><span class="sxs-lookup"><span data-stu-id="da368-1095">White space is preserved in the output file only if <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="da368-1096">現在の XmlDeclaration`XmlDocument`オブジェクトが保存されたドキュメントのエンコーディング属性を決定します。</span><span class="sxs-lookup"><span data-stu-id="da368-1096">The XmlDeclaration of the current `XmlDocument` object determines the encoding attribute in the saved document.</span></span> <span data-ttu-id="da368-1097">エンコーディング属性の値を取得、<xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="da368-1097">The value of the encoding attribute is taken from the <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="da368-1098">場合、`XmlDocument`は XmlDeclaration がないか、XmlDeclaration がエンコーディング属性を持たない場合、保存されたドキュメントはありませんいずれかのいずれか。</span><span class="sxs-lookup"><span data-stu-id="da368-1098">If the `XmlDocument` does not have an XmlDeclaration, or if the XmlDeclaration does not have an encoding attribute, the saved document will not have one either.</span></span>  
  
 <span data-ttu-id="da368-1099">ドキュメントが保存されると、ノード id を (ローカル名と名前空間 URI) を正しく保持 xmlns 属性が生成されます。</span><span class="sxs-lookup"><span data-stu-id="da368-1099">When the document is saved, xmlns attributes are generated to persist the node identity (local name + namespace URI) correctly.</span></span> <span data-ttu-id="da368-1100">たとえば、次の c# コード</span><span class="sxs-lookup"><span data-stu-id="da368-1100">For example, the following C# code</span></span>  
  
```csharp  
XmlDocument doc = new XmlDocument();  
doc.AppendChild(doc.CreateElement("item","urn:1"));  
doc.Save(Console.Out);  
```  
  
 <span data-ttu-id="da368-1101">この xml 属性を生成`<item xmls="urn:1"/>`します。</span><span class="sxs-lookup"><span data-stu-id="da368-1101">generates this xmls attribute `<item xmls="urn:1"/>`.</span></span>  
  
 <span data-ttu-id="da368-1102">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-1102">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="da368-1103">だけ、<xref:System.Xml.XmlDocument.Save%2A>メソッドは、整形式 XML ドキュメントを適用します。</span><span class="sxs-lookup"><span data-stu-id="da368-1103">Note that only the <xref:System.Xml.XmlDocument.Save%2A> method enforces a well-formed XML document.</span></span> <span data-ttu-id="da368-1104">他のすべての`Save`オーバー ロードは整形式のフラグメントを保証するだけです。</span><span class="sxs-lookup"><span data-stu-id="da368-1104">All other `Save` overloads only guarantee a well-formed fragment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-1105">次の例は、XmlDocument オブジェクトに XML を読み込んで、変更し、し、data.xml をという名前のファイルに保存されます。</span><span class="sxs-lookup"><span data-stu-id="da368-1105">The following example loads XML into an XmlDocument object, modifies it, and then saves it to a file named data.xml.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.Save Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.Save Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.Save Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.Save Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.Save Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.Save Example/VB/source.vb#1)]  
  
 <span data-ttu-id="da368-1106">Data.xml ファイルには、次の XML にが含まれます:`<item><name>wrench</name><price>10.95</price></item>`します。</span><span class="sxs-lookup"><span data-stu-id="da368-1106">The data.xml file will contain the following XML: `<item><name>wrench</name><price>10.95</price></item>`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="da368-1107">操作の結果、整形式の XML ドキュメントにならない場合があります (ドキュメント要素がない、XML 宣言の重複など)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1107">The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Save(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="abstract member Save : System.Xml.XmlWriter -&gt; unit&#xA;override this.Save : System.Xml.XmlWriter -&gt; unit" Usage="xmlDocument.Save w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="da368-1108">保存先の <see langword="XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1108">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-1109">指定した <see cref="T:System.Xml.XmlWriter" /> に XML ドキュメントを保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1109">Saves the XML document to the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-1110">場合にのみ、空白文字は保持<xref:System.Xml.XmlDocument.PreserveWhitespace%2A>に設定されている`true`します。</span><span class="sxs-lookup"><span data-stu-id="da368-1110">White space is preserved only if <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="da368-1111">エンコード、`XmlWriter`エンコーディングは書き出さを決定します (のエンコーディングに置換されます XmlDeclaration ノードのエンコード、 `XmlWriter`)。</span><span class="sxs-lookup"><span data-stu-id="da368-1111">The encoding on the `XmlWriter` determines the encoding that is written out (The encoding of the XmlDeclaration node is replaced by the encoding of the `XmlWriter`).</span></span> <span data-ttu-id="da368-1112">ないかどうかに指定されてエンコード、 `XmlWriter`、`XmlDocument`エンコーディング属性なしで保存されます。</span><span class="sxs-lookup"><span data-stu-id="da368-1112">If there was no encoding specified on the `XmlWriter`, the `XmlDocument` is saved without an encoding attribute.</span></span>  
  
 <span data-ttu-id="da368-1113">ドキュメントが保存されると、ノード id を (LocalName + NamespaceURI) を正しく保持 xmlns 属性が生成されます。</span><span class="sxs-lookup"><span data-stu-id="da368-1113">When the document is saved, xmlns attributes are generated to persist the node identity (LocalName + NamespaceURI) correctly.</span></span> <span data-ttu-id="da368-1114">たとえば、次の c# コード</span><span class="sxs-lookup"><span data-stu-id="da368-1114">For example, the following C# code</span></span>  
  
```csharp  
XmlDocument doc = new XmlDocument();  
doc.AppendChild(doc.CreateElement("item","urn:1"));  
doc.Save(Console.Out);  
```  
  
 <span data-ttu-id="da368-1115">この xml 属性が生成されます。</span><span class="sxs-lookup"><span data-stu-id="da368-1115">generates this xmls attribute:</span></span>  
  
```xml  
<item  
    xmls="urn:1"/>  
```  
  
 <span data-ttu-id="da368-1116">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-1116">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="da368-1117">だけ、<xref:System.Xml.XmlDocument.Save%2A>メソッドは、整形式 XML ドキュメントを適用します。</span><span class="sxs-lookup"><span data-stu-id="da368-1117">Note that only the <xref:System.Xml.XmlDocument.Save%2A> method enforces a well-formed XML document.</span></span> <span data-ttu-id="da368-1118">他のすべての`Save`オーバー ロードは整形式のフラグメントを保証するだけです。</span><span class="sxs-lookup"><span data-stu-id="da368-1118">All other `Save` overloads only guarantee a well-formed fragment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-1119">次の例に XML を読み込んで、`XmlDocument`オブジェクトし、をファイルに保存します。</span><span class="sxs-lookup"><span data-stu-id="da368-1119">The following example loads XML into an `XmlDocument` object and saves it out to a file.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="da368-1120">操作の結果、整形式の XML ドキュメントにならない場合があります (ドキュメント要素がない、XML 宣言の重複など)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1120">The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlTextWriter.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public override System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaInfo : System.Xml.Schema.IXmlSchemaInfo" Usage="System.Xml.XmlDocument.SchemaInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da368-1121">ノードの PSVI (Post-Schema-Validation-Infoset) を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1121">Returns the Post-Schema-Validation-Infoset (PSVI) of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da368-1122">ノードの PSVI を表す <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1122">The <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> object representing the PSVI of the node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-1123">このプロパティの PSVI の内容は、ノードが検証された後に設定されます。</span><span class="sxs-lookup"><span data-stu-id="da368-1123">The PSVI contents of this property are set after the node has been validated.</span></span>  
  
 <span data-ttu-id="da368-1124">このプロパティは、DOM (Document Object Model) に対する Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-1124">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet Schemas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public Property Schemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ Schemas { System::Xml::Schema::XmlSchemaSet ^ get(); void set(System::Xml::Schema::XmlSchemaSet ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Schemas : System.Xml.Schema.XmlSchemaSet with get, set" Usage="System.Xml.XmlDocument.Schemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da368-1125">この <see cref="T:System.Xml.XmlDocument" /> に関連付けられている <see cref="T:System.Xml.Schema.XmlSchemaSet" /> オブジェクトを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1125">Gets or sets the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object associated with this <see cref="T:System.Xml.XmlDocument" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da368-1126">この <see cref="T:System.Xml.XmlDocument" /> に関連付けられた、XML スキーマ定義言語 (XSD) のスキーマが格納されている <see cref="T:System.Xml.Schema.XmlSchemaSet" /> オブジェクト。それ以外の場合は空の <see cref="T:System.Xml.Schema.XmlSchemaSet" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1126">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object containing the XML Schema Definition Language (XSD) schemas associated with this <see cref="T:System.Xml.XmlDocument" />; otherwise, an empty <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-1127">含まれているスキーマ、<xref:System.Xml.Schema.XmlSchemaSet>オブジェクトに関連付けられている、<xref:System.Xml.XmlDocument>オブジェクトが検証に使用時に、<xref:System.Xml.XmlDocument.Validate%2A>のメソッド、<xref:System.Xml.XmlDocument>が実行されます。</span><span class="sxs-lookup"><span data-stu-id="da368-1127">The schemas contained in an <xref:System.Xml.Schema.XmlSchemaSet> object associated with an <xref:System.Xml.XmlDocument> object are used for validation when the <xref:System.Xml.XmlDocument.Validate%2A> method of an <xref:System.Xml.XmlDocument> is executed.</span></span>  
  
 <span data-ttu-id="da368-1128">ときに、<xref:System.Xml.XmlDocument>から XML データをオブジェクトが初期化されて、<xref:System.Xml.XmlReader>オブジェクト、<xref:System.Xml.Schema.XmlSchemaSet>からオブジェクトが読み込まれて、<xref:System.Xml.XmlReaderSettings.Schemas%2A>のプロパティ、<xref:System.Xml.XmlReader>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="da368-1128">When an <xref:System.Xml.XmlDocument> object is initialized with XML data from an <xref:System.Xml.XmlReader> object, the <xref:System.Xml.Schema.XmlSchemaSet> object is loaded from the <xref:System.Xml.XmlReaderSettings.Schemas%2A> property of the <xref:System.Xml.XmlReader> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Xml.XmlDocument.Validate" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Validate">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="da368-1129">
            <see cref="T:System.Xml.XmlDocument" /> プロパティに格納されている XML スキーマ定義言語 (XSD) スキーマと照合して <see cref="P:System.Xml.XmlDocument.Schemas" /> を検証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1129">Validates the <see cref="T:System.Xml.XmlDocument" /> against the XML Schema Definition Language (XSD) schemas contained in the <see cref="P:System.Xml.XmlDocument.Schemas" /> property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.Xml.Schema.ValidationEventHandler validationEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Validate(class System.Xml.Schema.ValidationEventHandler validationEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate(System::Xml::Schema::ValidationEventHandler ^ validationEventHandler);" />
      <MemberSignature Language="F#" Value="member this.Validate : System.Xml.Schema.ValidationEventHandler -&gt; unit" Usage="xmlDocument.Validate validationEventHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" />
      </Parameters>
      <Docs>
        <param name="validationEventHandler">
          <span data-ttu-id="da368-1130">スキーマ検証の警告とエラーに関する情報を受け取る <see cref="T:System.Xml.Schema.ValidationEventHandler" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1130">The <see cref="T:System.Xml.Schema.ValidationEventHandler" /> object that receives information about schema validation warnings and errors.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-1131">
            <see cref="T:System.Xml.XmlDocument" /> プロパティに格納されている XML スキーマ定義言語 (XSD) スキーマと照合して <see cref="P:System.Xml.XmlDocument.Schemas" /> を検証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1131">Validates the <see cref="T:System.Xml.XmlDocument" /> against the XML Schema Definition Language (XSD) schemas contained in the <see cref="P:System.Xml.XmlDocument.Schemas" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-1132"><xref:System.Xml.XmlDocument.Validate%2A>メソッド内の XML データの検証、<xref:System.Xml.XmlDocument>に含まれているスキーマに対して、<xref:System.Xml.XmlDocument.Schemas%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="da368-1132">The <xref:System.Xml.XmlDocument.Validate%2A> method validates the XML data in the <xref:System.Xml.XmlDocument> against the schemas contained in the <xref:System.Xml.XmlDocument.Schemas%2A> property.</span></span> <span data-ttu-id="da368-1133"><xref:System.Xml.XmlDocument.Validate%2A>メソッドは、後の infoset 増強を実行します。</span><span class="sxs-lookup"><span data-stu-id="da368-1133">The <xref:System.Xml.XmlDocument.Validate%2A> method performs infoset augmentation.</span></span> <span data-ttu-id="da368-1134">具体的には、検証が成功した後にスキーマの既定値が適用される、テキスト値が必要に応じて、アトミック値に変換および型情報が検証済みの情報項目に関連付けられました。</span><span class="sxs-lookup"><span data-stu-id="da368-1134">Specifically, after successful validation, schema defaults are applied, text values are converted to atomic values as necessary, and type information is associated with validated information items.</span></span> <span data-ttu-id="da368-1135">結果は、以前型指定されていない XML ツリーからサブツリーで、<xref:System.Xml.XmlDocument>型指定されたサブツリーに置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="da368-1135">The result is a previously un-typed XML sub-tree in the <xref:System.Xml.XmlDocument> replaced with a typed sub-tree.</span></span>  
  
 <span data-ttu-id="da368-1136">使用する場合に考慮すべき重要な注意事項を次に、<xref:System.Xml.XmlDocument.Validate%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="da368-1136">The following are important notes to consider when using the <xref:System.Xml.XmlDocument.Validate%2A> method.</span></span>  
  
-   <span data-ttu-id="da368-1137">などのスキーマ位置ヒント`xsi:schemaLocation`または`xsi:noNamespaceSchemaLocation`は無視されます。</span><span class="sxs-lookup"><span data-stu-id="da368-1137">Schema location hints like `xsi:schemaLocation` or `xsi:noNamespaceSchemaLocation` are ignored.</span></span>  
  
-   <span data-ttu-id="da368-1138">インライン スキーマは無視されます。</span><span class="sxs-lookup"><span data-stu-id="da368-1138">Inline schemas are ignored.</span></span>  
  
-   <span data-ttu-id="da368-1139">検証中にスキーマ検証エラーが発生した場合、<xref:System.Xml.XmlDocument>もののいくつかのノードの適切な種類の情報と部分的に有効になります。</span><span class="sxs-lookup"><span data-stu-id="da368-1139">If schema validation errors occur during validation the <xref:System.Xml.XmlDocument> becomes partially validated with some nodes with correct type information and some without.</span></span>  
  
-   <span data-ttu-id="da368-1140">検証プロセスには、一意性と参照制約のチェックが含まれます (`xs:ID`、 `xs:IDREF`、 `xs:key`、 `xs:keyref`、および`xs:unique`)。</span><span class="sxs-lookup"><span data-stu-id="da368-1140">The validation process includes checking for uniqueness and reference constraints (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, and `xs:unique`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-1141"><xref:System.Xml.XmlDocument.Validate%2A> メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="da368-1141">The following example illustrates use of the <xref:System.Xml.XmlDocument.Validate%2A> method.</span></span> <span data-ttu-id="da368-1142">例は、作成、<xref:System.Xml.XmlDocument>関連付けられている XSD スキーマを使用して、格納している、<xref:System.Xml.XmlReaderSettings>と<xref:System.Xml.XmlReader>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="da368-1142">The example creates an <xref:System.Xml.XmlDocument> that contains an associated XSD schema using the <xref:System.Xml.XmlReaderSettings> and <xref:System.Xml.XmlReader> objects.</span></span> <span data-ttu-id="da368-1143">使用して、<xref:System.Xml.XPath.XPathNavigator>スキーマ検証エラーを生成する XML ドキュメント内の要素の型指定された値を正しく変更するクラス。</span><span class="sxs-lookup"><span data-stu-id="da368-1143">The example then uses the <xref:System.Xml.XPath.XPathNavigator> class to incorrectly modify the typed value of an element in the XML document generating a schema validation error.</span></span>  
  
 [!code-cpp[XPathValidation#1](~/samples/snippets/cpp/VS_Snippets_Data/XPathValidation/CPP/XPathValidation.cpp#1)]
 [!code-csharp[XPathValidation#1](~/samples/snippets/csharp/VS_Snippets_Data/XPathValidation/CS/XPathValidation.cs#1)]
 [!code-vb[XPathValidation#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathValidation/VB/XPathValidation.vb#1)]  
  
 <span data-ttu-id="da368-1144">この例では、`contosoBooks.xml`と`contosoBooks.xsd`ファイルを入力として。</span><span class="sxs-lookup"><span data-stu-id="da368-1144">The example takes the `contosoBooks.xml` and `contosoBooks.xsd` files as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
          <span data-ttu-id="da368-1145">スキーマ検証イベントが発生しましたが、<see cref="T:System.Xml.Schema.ValidationEventHandler" /> オブジェクトが指定されていませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1145">A schema validation event occurred and no <see cref="T:System.Xml.Schema.ValidationEventHandler" /> object was specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.Xml.Schema.ValidationEventHandler validationEventHandler, System.Xml.XmlNode nodeToValidate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Validate(class System.Xml.Schema.ValidationEventHandler validationEventHandler, class System.Xml.XmlNode nodeToValidate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate(System::Xml::Schema::ValidationEventHandler ^ validationEventHandler, System::Xml::XmlNode ^ nodeToValidate);" />
      <MemberSignature Language="F#" Value="member this.Validate : System.Xml.Schema.ValidationEventHandler * System.Xml.XmlNode -&gt; unit" Usage="xmlDocument.Validate (validationEventHandler, nodeToValidate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" />
        <Parameter Name="nodeToValidate" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="validationEventHandler">
          <span data-ttu-id="da368-1146">スキーマ検証の警告とエラーに関する情報を受け取る <see cref="T:System.Xml.Schema.ValidationEventHandler" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1146">The <see cref="T:System.Xml.Schema.ValidationEventHandler" /> object that receives information about schema validation warnings and errors.</span>
          </span>
        </param>
        <param name="nodeToValidate">
          <span data-ttu-id="da368-1147">
            <see cref="T:System.Xml.XmlNode" /> から作成された、検証対象の <see cref="T:System.Xml.XmlDocument" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1147">The <see cref="T:System.Xml.XmlNode" /> object created from an <see cref="T:System.Xml.XmlDocument" /> to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-1148">
            <see cref="T:System.Xml.XmlNode" /> プロパティの XML スキーマ定義言語 (XSD) スキーマと照合し、指定された <see cref="P:System.Xml.XmlDocument.Schemas" /> オブジェクトを検証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1148">Validates the <see cref="T:System.Xml.XmlNode" /> object specified against the XML Schema Definition Language (XSD) schemas in the <see cref="P:System.Xml.XmlDocument.Schemas" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-1149"><xref:System.Xml.XmlDocument.Validate%2A>メソッド内の XML データの検証、<xref:System.Xml.XmlNode>オブジェクトに含まれているスキーマに対して、<xref:System.Xml.XmlDocument.Schemas%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="da368-1149">The <xref:System.Xml.XmlDocument.Validate%2A> method validates the XML data in the <xref:System.Xml.XmlNode> object against the schemas contained in the <xref:System.Xml.XmlDocument.Schemas%2A> property.</span></span> <span data-ttu-id="da368-1150"><xref:System.Xml.XmlDocument.Validate%2A>メソッドは、後の infoset 増強を実行します。</span><span class="sxs-lookup"><span data-stu-id="da368-1150">The <xref:System.Xml.XmlDocument.Validate%2A> method performs infoset augmentation.</span></span> <span data-ttu-id="da368-1151">具体的には、検証が成功した後にスキーマの既定値が適用される、テキスト値が必要に応じて、アトミック値に変換および型情報が検証済みの情報項目に関連付けられました。</span><span class="sxs-lookup"><span data-stu-id="da368-1151">Specifically, after successful validation, schema defaults are applied, text values are converted to atomic values as necessary, and type information is associated with validated information items.</span></span> <span data-ttu-id="da368-1152">結果は、以前型指定されていない XML ツリーからサブツリーで、<xref:System.Xml.XmlDocument>型指定されたサブツリーに置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="da368-1152">The result is a previously un-typed XML sub-tree in the <xref:System.Xml.XmlDocument> replaced with a typed sub-tree.</span></span>  
  
 <span data-ttu-id="da368-1153">使用する場合に考慮すべき重要な注意事項を次に、<xref:System.Xml.XmlDocument.Validate%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="da368-1153">The following are important notes to consider when using the <xref:System.Xml.XmlDocument.Validate%2A> method.</span></span>  
  
-   <span data-ttu-id="da368-1154">などのスキーマ位置ヒント`xsi:schemaLocation`または`xsi:noNamespaceSchemaLocation`は無視されます。</span><span class="sxs-lookup"><span data-stu-id="da368-1154">Schema location hints like `xsi:schemaLocation` or `xsi:noNamespaceSchemaLocation` are ignored.</span></span>  
  
-   <span data-ttu-id="da368-1155">インライン スキーマは無視されます。</span><span class="sxs-lookup"><span data-stu-id="da368-1155">Inline schemas are ignored.</span></span>  
  
-   <span data-ttu-id="da368-1156">検証中にスキーマ検証エラーが発生した場合、<xref:System.Xml.XmlDocument>もののいくつかのノードの適切な種類の情報と部分的に有効になります。</span><span class="sxs-lookup"><span data-stu-id="da368-1156">If schema validation errors occur during validation the <xref:System.Xml.XmlDocument> becomes partially validated with some nodes with correct type information and some without.</span></span>  
  
 <span data-ttu-id="da368-1157">検証プロセスには検証するノードがルート ノードの場合、一意性と参照制約のチェックが含まれています (`xs:ID`、 `xs:IDREF`、 `xs:key`、 `xs:keyref`、および`xs:unique`)、それ以外の一意性と参照制約が省略されます。</span><span class="sxs-lookup"><span data-stu-id="da368-1157">If the node to validate is the root node, the validation process includes checking for uniqueness and reference constraints (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, and `xs:unique`); otherwise, uniqueness and reference constraints are omitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-1158">例については、<xref:System.Xml.XmlDocument.Validate%2A>メソッドを参照してください、<xref:System.Xml.XmlDocument.Validate%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="da368-1158">For an example of the <xref:System.Xml.XmlDocument.Validate%2A> method, see the <xref:System.Xml.XmlDocument.Validate%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da368-1159">
            <see cref="T:System.Xml.XmlNode" /> オブジェクト パラメーターが、<see cref="T:System.Xml.XmlDocument" /> から作成されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1159">The <see cref="T:System.Xml.XmlNode" /> object parameter was not created from an <see cref="T:System.Xml.XmlDocument" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="da368-1160">
            <see cref="T:System.Xml.XmlNode" /> オブジェクト パラメーターが要素、属性、ドキュメント フラグメント、ルート ノードのいずれでもありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1160">The <see cref="T:System.Xml.XmlNode" /> object parameter is not an element, attribute, document fragment, or the root node.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
          <span data-ttu-id="da368-1161">スキーマ検証イベントが発生しましたが、<see cref="T:System.Xml.Schema.ValidationEventHandler" /> オブジェクトが指定されていませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1161">A schema validation event occurred and no <see cref="T:System.Xml.Schema.ValidationEventHandler" /> object was specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteContentTo">
      <MemberSignature Language="C#" Value="public override void WriteContentTo (System.Xml.XmlWriter xw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteContentTo(class System.Xml.XmlWriter xw) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.WriteContentTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteContentTo (xw As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteContentTo(System::Xml::XmlWriter ^ xw);" />
      <MemberSignature Language="F#" Value="override this.WriteContentTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlDocument.WriteContentTo xw" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xw" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="xw">
          <span data-ttu-id="da368-1162">保存先の <see langword="XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1162">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-1163">指定した <see cref="T:System.Xml.XmlWriter" /> に <see langword="XmlDocument" /> ノードのすべての子を保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1163">Saves all the children of the <see langword="XmlDocument" /> node to the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-1164">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-1164">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="da368-1165">これは機能的に等価、<xref:System.Xml.XmlDocument.InnerXml%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="da368-1165">It is functionally equivalent to the <xref:System.Xml.XmlDocument.InnerXml%2A> property.</span></span>  
  
 <span data-ttu-id="da368-1166"><xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType>プロパティは、エンコーディングは書き出さを決定します。場合、`Encoding`プロパティには、値はありません、`XmlDocument`エンコードの属性がない場合の書き込み。</span><span class="sxs-lookup"><span data-stu-id="da368-1166">The <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> property determines the encoding that is written out. If the `Encoding` property does not have a value, the `XmlDocument` is written out without an encoding attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-1167">次の例では、画面上のドキュメントを表示します。</span><span class="sxs-lookup"><span data-stu-id="da368-1167">The following example displays the document onscreen.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.WriteContentTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.WriteContentTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.WriteContentTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.WriteContentTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.WriteContentTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.WriteContentTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="override this.WriteTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlDocument.WriteTo w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="da368-1168">保存先の <see langword="XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1168">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da368-1169">指定した <see cref="T:System.Xml.XmlWriter" /> に <see langword="XmlDocument" /> ノードを保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1169">Saves the <see langword="XmlDocument" /> node to the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-1170">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-1170">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="da368-1171">これは機能的に等価、<xref:System.Xml.XmlNode.OuterXml%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="da368-1171">It is functionally equivalent to the <xref:System.Xml.XmlNode.OuterXml%2A> property.</span></span>  
  
 <span data-ttu-id="da368-1172"><xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType>プロパティは、エンコーディングは書き出さを決定します。場合、`Encoding`プロパティには、値はありません、`XmlDocument`エンコードの属性がない場合の書き込み。</span><span class="sxs-lookup"><span data-stu-id="da368-1172">The <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> property determines the encoding that is written out. If the `Encoding` property does not have a value, the `XmlDocument` is written out without an encoding attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-1173">次の例では、画面上のドキュメントを表示します。</span><span class="sxs-lookup"><span data-stu-id="da368-1173">The following example displays the document onscreen.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.WriteTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.WriteTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.WriteTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.WriteTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.WriteTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.WriteTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.XmlDocument.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da368-1174">外部リソースを解決するために使用する <see cref="T:System.Xml.XmlResolver" /> を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1174">Sets the <see cref="T:System.Xml.XmlResolver" /> to use for resolving external resources.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da368-1175">使用する <see langword="XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1175">The <see langword="XmlResolver" /> to use.</span>
          </span>
          <span data-ttu-id="da368-1176">.NET Framework Version 1.1 の場合、完全に信頼されている呼び出し元だけが <see langword="XmlResolver" /> を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1176">In version 1.1 of the.NET Framework, the caller must be fully trusted in order to specify an <see langword="XmlResolver" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da368-1177">`XmlResolver`の Dtd を読み込みまたはエンティティ参照の展開に使用できます。</span><span class="sxs-lookup"><span data-stu-id="da368-1177">The `XmlResolver` can be used to load DTDs or expand entity references.</span></span> <span data-ttu-id="da368-1178">使用して、<xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType>プロパティで資格情報を設定することができます、`XmlResolver`セキュリティで保護されたネットワーク リソースに格納されているリソースにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="da368-1178">Using the <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType> property, you can set credentials on the `XmlResolver` to access resources stored on a secure network resource.</span></span>  
  
-   <span data-ttu-id="da368-1179">ドキュメントの読み込みを使用していない場合、 <xref:System.Xml.XmlReader> (つまり、ストリームを使用して読み込まれた場合、ファイルや)、`XmlResolver`上、`XmlDocument`は常に使用します。</span><span class="sxs-lookup"><span data-stu-id="da368-1179">If the document was not loaded using an <xref:System.Xml.XmlReader> (that is, if it was loaded using a stream, file, and so on) the `XmlResolver` on the `XmlDocument` is always used.</span></span>  
  
-   <span data-ttu-id="da368-1180">ドキュメントが読み込まれた場合、 <xref:System.Xml.XmlTextReader>、に対する競合回避モジュール、 `XmlTextReader` DocumentType ノードのすべての DTD 参照を解決するために使用します。</span><span class="sxs-lookup"><span data-stu-id="da368-1180">If the document was loaded with an <xref:System.Xml.XmlTextReader>, the resolver on the `XmlTextReader` is used to resolve any DTD references in the DocumentType node.</span></span> <span data-ttu-id="da368-1181">競合回避モジュール、`XmlDocument`任意のエンティティ参照の展開に使用されます。</span><span class="sxs-lookup"><span data-stu-id="da368-1181">The resolver on the `XmlDocument` is used to expand any entity references.</span></span>  
  
-   <span data-ttu-id="da368-1182">ドキュメントが読み込まれた場合、 <xref:System.Xml.XmlValidatingReader>、に対する競合回避モジュール、`XmlDocument`は使用されません。</span><span class="sxs-lookup"><span data-stu-id="da368-1182">If the document was loaded with an <xref:System.Xml.XmlValidatingReader>, the resolver on the `XmlDocument` is never used.</span></span>  
  
-   <span data-ttu-id="da368-1183">拡張するクラスを使用して、ドキュメントが読み込まれたかどうか`XmlReader`と`XmlReader`エンティティを解決することはできません (<xref:System.Xml.XmlReader.CanResolveEntity%2A>返します`false`)、`XmlResolver`上、 `XmlDocument` DocumentType ノードのすべての参照を解決するために使用任意のエンティティ参照を展開します。</span><span class="sxs-lookup"><span data-stu-id="da368-1183">If the document was loaded with a class that extends `XmlReader` and the `XmlReader` cannot resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A> returns `false`), the `XmlResolver` on the `XmlDocument` is used to resolve any references in the DocumentType node and to expand any entity references.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da368-1184">場合、`XmlDocument`を使用して読み込まれる、<xref:System.Xml.XmlReader>されていた、`XmlResolver`設定するには、`XmlResolver`上、`XmlReader`によってキャッシュされていない、`XmlDocument`後<xref:System.Xml.XmlDocument.Load%2A>が完了するとします。</span><span class="sxs-lookup"><span data-stu-id="da368-1184">If the `XmlDocument` is loaded using an <xref:System.Xml.XmlReader> which had an `XmlResolver` set to it, the `XmlResolver` on the `XmlReader` is not cached by the `XmlDocument` after <xref:System.Xml.XmlDocument.Load%2A> completes.</span></span>  
  
 <span data-ttu-id="da368-1185">.Net Framework version 1.1 でこのプロパティが設定されていない場合、アプリケーションの信頼レベルは、既定の動作を決定します。</span><span class="sxs-lookup"><span data-stu-id="da368-1185">In version 1.1 of the.NET Framework, if this property is not set, the trust level of the application determines the default behavior.</span></span>  
  
 <span data-ttu-id="da368-1186">`Fully trusted code:` ドキュメントは、既定値を使用して<xref:System.Xml.XmlUrlResolver>をユーザーの資格情報なし。</span><span class="sxs-lookup"><span data-stu-id="da368-1186">`Fully trusted code:` The document uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="da368-1187">ネットワーク リソースへのアクセスを認証が必要な場合は、使用、`XmlResolver`プロパティを指定する、`XmlResolver`のために必要な資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="da368-1187">If authentication is required to access a network resource, use the `XmlResolver` property to specify an `XmlResolver` with the necessary credentials.</span></span>  
  
 <span data-ttu-id="da368-1188">`Semi-trusted code:` `XmlResolver`プロパティに設定されて`null`します。</span><span class="sxs-lookup"><span data-stu-id="da368-1188">`Semi-trusted code:` The `XmlResolver` property is set to `null`.</span></span> <span data-ttu-id="da368-1189">外部リソースは解決されません。</span><span class="sxs-lookup"><span data-stu-id="da368-1189">External resources are not resolved.</span></span>  
  
 <span data-ttu-id="da368-1190">セキュリティの詳細については、`XmlResolver`プロパティを参照してください[外部リソースの解決](~/docs/standard/data/xml/resolving-external-resources.md)します。</span><span class="sxs-lookup"><span data-stu-id="da368-1190">For more information on security and the `XmlResolver` property, see [Resolving External Resources](~/docs/standard/data/xml/resolving-external-resources.md).</span></span>  
  
 <span data-ttu-id="da368-1191">このプロパティは、DOM (Document Object Model) に対する Microsoft 拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="da368-1191">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da368-1192">次の例では、DTD ファイルへの参照を含む XML ドキュメントを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="da368-1192">The following example loads an XML document which includes a reference to a DTD file.</span></span> <span data-ttu-id="da368-1193">`XmlResolver`プロパティを使用して、ネットワーク リソースにアクセスするために必要な資格情報を設定します。</span><span class="sxs-lookup"><span data-stu-id="da368-1193">The `XmlResolver` property is used to set the credentials necessary to access the network resource.</span></span>  
  
 [!code-cpp[XmlDocument.XmlResolver#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlDocument.XmlResolver/CPP/docresolver.cpp#1)]
 [!code-csharp[XmlDocument.XmlResolver#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDocument.XmlResolver/CS/docresolver.cs#1)]
 [!code-vb[XmlDocument.XmlResolver#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDocument.XmlResolver/VB/docresolver.vb#1)]  
  
 <span data-ttu-id="da368-1194">例では、入力として次のデータ ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="da368-1194">The example uses the following data files as input.</span></span>  
  
 `book5.xml`  
  
 [!code-xml[XmlDocument.XmlResolver#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDocument.XmlResolver/XML/book5.xml#2)]  
  
 `books.dtd`  
  
 [!code-xml[XmlDocument.XmlResolver#3](~/samples/snippets/xml/VS_Snippets_Data/XmlDocument.XmlResolver/XML/books.dtd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="da368-1195">このプロパティが <see langword="null" /> に設定されており、外部 DTD またはエンティティが検出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da368-1195">This property is set to <see langword="null" /> and an external DTD or entity is encountered.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlUrlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
  </Members>
</Type>