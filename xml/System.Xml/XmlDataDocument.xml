<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlDataDocument.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f828c165288c4fb1cc2705e29b4a2f0a84315396.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f828c165288c4fb1cc2705e29b4a2f0a84315396</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlDataDocument">
          <source>Allows structured data to be stored, retrieved, and manipulated through a relational <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">リレーショナル <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> を通じて、構造化データを格納、取得、および操作できるようにします。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>This class extends <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>.</source>
          <target state="translated">このクラスは拡張<ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>It enables you to load either relational data or XML data and manipulate that data using the World Wide Web Consortium (W3C) Document Object Model (DOM).</source>
          <target state="translated">リレーショナル データまたは XML データを読み込むし、World Wide Web Consortium (W3C) ドキュメント オブジェクト モデル (DOM) を使用してデータを操作することができます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>The DOM presents data as a hierarchy of node objects.</source>
          <target state="translated">DOM は、ノード オブジェクトの階層としてデータを表示します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>Because <ph id="ph1">`XmlDataDocument`</ph> implements the <ph id="ph2">&lt;xref:System.Xml.XPath.IXPathNavigable&gt;</ph> interface, it can also be used as the source document for the <ph id="ph3">&lt;xref:System.Xml.Xsl.XslTransform&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph>を実装する、<ph id="ph2">&lt;xref:System.Xml.XPath.IXPathNavigable&gt;</ph>インターフェイスのソース ドキュメントとしても使用できます、<ph id="ph3">&lt;xref:System.Xml.Xsl.XslTransform&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source><ph id="ph1">`XmlDataDocument`</ph> has a close affiliation with the <ph id="ph2">`DataSet`</ph> class, which provides a relational view of the loaded XML data.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> 閉じる、会社名を持つ、<ph id="ph2">`DataSet`</ph>読み込まれた XML データのリレーショナル ビューを提供するクラス。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>Any changes made to the <ph id="ph1">`XmlDataDocument`</ph> are reflected in the <ph id="ph2">`DataSet`</ph> and vice versa.</source>
          <target state="translated">加えられた変更、<ph id="ph1">`XmlDataDocument`</ph>に反映されますが、<ph id="ph2">`DataSet`</ph>およびその逆です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>To load a <ph id="ph1">`DataSet`</ph> with XML data, use <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> to build a relational mapping.</source>
          <target state="translated">読み込み、 <ph id="ph1">`DataSet`</ph> XML データを使用して<ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>リレーショナルのマッピングを作成します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>The XML data can then be loaded using <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument.Load%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlDocument.LoadXml%2A&gt;</ph>.</source>
          <target state="translated">使用して、XML データを読み込むことができますし、<ph id="ph1">&lt;xref:System.Xml.XmlDataDocument.Load%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Xml.XmlDocument.LoadXml%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>To load relational data, specify the <ph id="ph1">`DataSet`</ph> containing the relational data as the parameter in the <ph id="ph2">&lt;xref:System.Xml.XmlDataDocument.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">リレーショナル データを読み込むには、指定、<ph id="ph1">`DataSet`</ph>でパラメーターとしてそのリレーショナル データを含む、<ph id="ph2">&lt;xref:System.Xml.XmlDataDocument.%23ctor%2A&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlDataDocument">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor">
          <source>An empty <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is created and associated with the <ph id="ph2">`XmlDataDocument`</ph>.</source>
          <target state="translated">空<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>が作成され、関連付け、<ph id="ph2">`XmlDataDocument`</ph>です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph> to load into <ph id="ph2">&lt;see langword="XmlDataDocument" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DataSet" /&gt;</ph> に読み込む <ph id="ph2">&lt;see langword="XmlDataDocument" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> を使用して、<ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>The <ph id="ph1">`XmlDataDocument`</ph> is synchronized with the specified <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph>が同期されている、指定した<ph id="ph2">`DataSet`</ph>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>Any data in the <ph id="ph1">`DataSet`</ph> is immediately available through the <ph id="ph2">`XmlDataDocument`</ph>.</source>
          <target state="translated">内のデータ、<ph id="ph1">`DataSet`</ph>はから直ちに使用できる、<ph id="ph2">`XmlDataDocument`</ph>です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>Any changes in the <ph id="ph1">`DataSet`</ph> are propagated in the <ph id="ph2">`XmlDataDocument`</ph>.</source>
          <target state="translated">変更、<ph id="ph1">`DataSet`</ph>で反映されますが、<ph id="ph2">`XmlDataDocument`</ph>です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>Any changes made in the <ph id="ph1">`XmlDataDocument`</ph>, provided they match the <ph id="ph2">`DataSet`</ph> schema, are propagated in the <ph id="ph3">`DataSet`</ph>.</source>
          <target state="translated">行った変更、<ph id="ph1">`XmlDataDocument`</ph>と一致していれば、<ph id="ph2">`DataSet`</ph>スキーマ内で伝達される、<ph id="ph3">`DataSet`</ph>です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>The following example loads a customer table into an <ph id="ph1">`XmlDataDocument`</ph>.</source>
          <target state="translated">次の例に customer テーブルの読み込み、<ph id="ph1">`XmlDataDocument`</ph>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>The example uses the SQL Server 2000 Northwind database.</source>
          <target state="translated">この例では、SQL Server 2000 の Northwind データベースを使用します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to recursively clone the subtree under the specified node; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to clone only the node itself.</source>
          <target state="translated">指定したノードの下にあるサブツリーのクローンを順次作成していく場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。指定したノードだけのクローンを作成する場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>Creates a duplicate of the current node.</source>
          <target state="translated">現在のノードの複製を作成します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>The cloned node.</source>
          <target state="translated">クローンとして作成されたノード。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>Cloning the <ph id="ph1">`XmlDataDocument`</ph> also clones the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> schema.</source>
          <target state="translated">複製、<ph id="ph1">`XmlDataDocument`</ph>ものクローンを作成、<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>スキーマです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>If <ph id="ph1">`deep`</ph> is set to <ph id="ph2">`false`</ph>, the cloned <ph id="ph3">`DataSet`</ph> has no data; that is, no rows.</source>
          <target state="translated">場合<ph id="ph1">`deep`</ph>に設定されている<ph id="ph2">`false`</ph>、複製された<ph id="ph3">`DataSet`</ph>持ち、データがありません; である行はありません。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>If <ph id="ph1">`deep`</ph> is set to <ph id="ph2">`true`</ph>, the cloned <ph id="ph3">`DataSet`</ph> is set with the schema and then populated with the data.</source>
          <target state="translated">場合<ph id="ph1">`deep`</ph>に設定されている<ph id="ph2">`true`</ph>、複製された<ph id="ph3">`DataSet`</ph>がスキーマに設定され、データが設定されます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlNode.CloneNode%2A&gt;</ph> in the <ph id="ph2">`XmlNode`</ph> class to see a table describing how this method behaves with each of the different node types.</source>
          <target state="translated">参照してください<ph id="ph1">&lt;xref:System.Xml.XmlNode.CloneNode%2A&gt;</ph>で、<ph id="ph2">`XmlNode`</ph>クラスの別のノードの種類ごとにこのメソッドの動作について説明した表を参照してください。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>The following example loads a <ph id="ph1">`DataSet`</ph> into an <ph id="ph2">`XmlDataDocument`</ph> and then creates a shallow clone of the <ph id="ph3">`XmlDataDocument`</ph>.</source>
          <target state="translated">次の例、<ph id="ph1">`DataSet`</ph>に、<ph id="ph2">`XmlDataDocument`</ph>のシャロー クローンを作成し、<ph id="ph3">`XmlDataDocument`</ph>です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>The example uses the SQL Server 2000 Northwind database.</source>
          <target state="translated">この例では、SQL Server 2000 の Northwind データベースを使用します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>The prefix of the new element.</source>
          <target state="translated">新しい要素のプレフィックス。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>If String.Empty or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, there is no prefix.</source>
          <target state="translated">String.Empty または <ph id="ph1">&lt;see langword="null" /&gt;</ph> の場合、プレフィックスはありません。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>The local name of the new element.</source>
          <target state="translated">新しい要素のローカル名。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>The namespace Uniform Resource Identifier (URI) of the new element.</source>
          <target state="translated">新しい要素の名前空間 URI (Uniform Resource Identifier)。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>If String.Empty or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, there is no namespaceURI.</source>
          <target state="translated">String.Empty または <ph id="ph1">&lt;see langword="null" /&gt;</ph> の場合、namespaceURI はありません。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>Creates an element with the specified <ph id="ph1">&lt;see cref="P:System.Xml.XmlNode.Prefix" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Xml.XmlDocument.LocalName" /&gt;</ph> , and <ph id="ph3">&lt;see cref="P:System.Xml.XmlNode.NamespaceURI" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="P:System.Xml.XmlNode.Prefix" /&gt;</ph>、<ph id="ph2">&lt;see cref="P:System.Xml.XmlDocument.LocalName" /&gt;</ph>、<ph id="ph3">&lt;see cref="P:System.Xml.XmlNode.NamespaceURI" /&gt;</ph> を使用して、要素を作成します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>.</source>
          <target state="translated">新しい <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source><ph id="ph1">`Note to Inheritors`</ph> If you overload this function, it cannot be used for extensibility.</source>
          <target state="translated"><ph id="ph1">`Note to Inheritors`</ph> この関数をオーバー ロードする場合は、拡張機能を使用できません。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>Instead, you can return an element created by the base class, in this case, <ph id="ph1">`XmlDataDocument`</ph>.</source>
          <target state="translated">代わりに、この場合、基本クラスによって作成された要素を返すことができます<ph id="ph1">`XmlDataDocument`</ph>です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>See the following example.</source>
          <target state="translated">次の例を参照してください。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
          <source>The name of the entity reference.</source>
          <target state="translated">エンティティ参照の名前。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Xml.XmlEntityReference" /&gt;</ph> with the specified name.</source>
          <target state="translated">指定した名前を使用して、<ph id="ph1">&lt;see cref="T:System.Xml.XmlEntityReference" /&gt;</ph> を作成します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlEntityReference" /&gt;</ph> with the specified name.</source>
          <target state="translated">指定した名前を持つ <ph id="ph1">&lt;see cref="T:System.Xml.XmlEntityReference" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlEntityReference&gt;</ph> nodes cannot be created for <ph id="ph2">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlEntityReference&gt;</ph> ノードを作成できません<ph id="ph2">&lt;xref:System.Xml.XmlDataDocument&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
          <source>Calling this method throws an exception.</source>
          <target state="translated">このメソッドを呼び出すと、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
          <source>Calling this method.</source>
          <target state="translated">このメソッドを呼び出しています。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph> you want the navigator initially positioned on.</source>
          <target state="translated">ナビゲーターを最初に配置する <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object for navigating this document.</source>
          <target state="translated">このドキュメント内を移動するための、新しい <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> オブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>The <ph id="ph1">&lt;see langword="XPathNavigator" /&gt;</ph> is positioned on the node specified in the <ph id="ph2">&lt;paramref name="node" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XPathNavigator" /&gt;</ph> は、<ph id="ph2">&lt;paramref name="node" /&gt;</ph> パラメーターに指定されたノード上に配置されています。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>An <ph id="ph1">&lt;see langword="XPathNavigator" /&gt;</ph> used to navigate the document.</source>
          <target state="translated">XML ドキュメントに移動するために使用される <ph id="ph1">&lt;see langword="XPathNavigator" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>The <ph id="ph1">`XPathNavigator`</ph> provides read-only, random access to data.</source>
          <target state="translated"><ph id="ph1">`XPathNavigator`</ph>データへの読み取り専用で、ランダム アクセスを提供します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>Because it is optimized for XSLT transformations, it provides performance benefits when used as an input mechanism to the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt;</ph> method.</source>
          <target state="translated">XSLT 変換用に最適化された、利点がパフォーマンスに入力メカニズムとして使用する場合、<ph id="ph1">&lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>To see an XSLT transformation using <ph id="ph1">`XmlDataDocument`</ph> and an <ph id="ph2">`XPathNavigator`</ph>, see the <ph id="ph3">&lt;xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">XSLT 変換を使用してを表示する<ph id="ph1">`XmlDataDocument`</ph>と<ph id="ph2">`XPathNavigator`</ph>を参照してください、<ph id="ph3">&lt;xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> that provides a relational representation of the data in the <ph id="ph2">&lt;see langword="XmlDataDocument" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see langword="XmlDataDocument" /&gt;</ph> のデータのリレーショナル表現を提供する <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>A <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph> that can be used to access the data in the <ph id="ph2">&lt;see langword="XmlDataDocument" /&gt;</ph> using a relational model.</source>
          <target state="translated">リレーショナル モデルを使用して <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph> のデータにアクセスするために使用できる <ph id="ph2">&lt;see langword="XmlDataDocument" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>The <ph id="ph1">`DataSet`</ph> enables you to access the data in the <ph id="ph2">`XmlDataDocument`</ph> using a relational model.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>データにアクセスすることができます、<ph id="ph2">`XmlDataDocument`</ph>リレーショナル モデルを使用します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>This means that you can handle the data as tables and views, rows and columns, relations, and so on.</source>
          <target state="translated">これは、テーブル、ビュー、行、列、リレーション、として、データを処理およびにできることを意味します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>Changes made in the <ph id="ph1">`DataSet`</ph> are immediately visible in the <ph id="ph2">`XmlDataDocument`</ph>.</source>
          <target state="translated">行われた変更によって、<ph id="ph1">`DataSet`</ph>にすぐに表示されて、<ph id="ph2">`XmlDataDocument`</ph>です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>The following example modifies the price of a book using the <ph id="ph1">`DataSet`</ph> methods.</source>
          <target state="translated">次の例を使用して、書籍の価格の変更、<ph id="ph1">`DataSet`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>The example uses the following two files as input.</source>
          <target state="translated">この例では、入力として次の 2 つのファイルを使用します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>The attribute ID to match.</source>
          <target state="translated">一致する属性 ID。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> with the specified ID.</source>
          <target state="translated">指定した ID の <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>This method is not supported by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> class.</source>
          <target state="translated">このメソッドは <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> クラスでサポートされていません。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>Calling this method throws an exception.</source>
          <target state="translated">このメソッドを呼び出すと、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> with the specified ID.</source>
          <target state="translated">指定した ID を持つ <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>This method is not supported by the <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> class.</source>
          <target state="translated">このメソッドは <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> クラスでサポートされていません。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>Calling this method.</source>
          <target state="translated">このメソッドを呼び出しています。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
          <source>The <ph id="ph1">&lt;see langword="DataRow" /&gt;</ph> whose associated <ph id="ph2">&lt;see langword="XmlElement" /&gt;</ph> you want to retrieve.</source>
          <target state="translated">取得する対象の、関連付けられた <ph id="ph1">&lt;see langword="DataRow" /&gt;</ph> を持つ <ph id="ph2">&lt;see langword="XmlElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> associated with the specified <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> に関連付けられている <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
          <source>The <ph id="ph1">&lt;see langword="XmlElement" /&gt;</ph> containing a representation of the specified <ph id="ph2">&lt;see langword="DataRow" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see langword="XmlElement" /&gt;</ph> の表現を格納している <ph id="ph2">&lt;see langword="DataRow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
          <source>The following example loads a <ph id="ph1">`DataSet`</ph> into an <ph id="ph2">`XmlDataDocument`</ph> and then creates an <ph id="ph3">`XmlElement`</ph> representing the first customer record.</source>
          <target state="translated">次の例、<ph id="ph1">`DataSet`</ph>に、<ph id="ph2">`XmlDataDocument`</ph>し、作成、<ph id="ph3">`XmlElement`</ph>最初の顧客レコードを表すです。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
          <source>The example uses the SQL Server 2000 Northwind database.</source>
          <target state="translated">この例では、SQL Server 2000 の Northwind データベースを使用します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
          <source>The qualified name to match.</source>
          <target state="translated">一致する限定名。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
          <source>It is matched against the <ph id="ph1">&lt;see cref="P:System.Xml.XmlDocument.Name" /&gt;</ph> property of the matching node.</source>
          <target state="translated">一致するノードの <ph id="ph1">&lt;see cref="P:System.Xml.XmlDocument.Name" /&gt;</ph> プロパティに一致します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
          <source>The special value "*" matches all tags.</source>
          <target state="translated">特殊値の "*" は、すべてのタグに一致します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> containing a list of all descendant elements that match the specified <ph id="ph2">&lt;see cref="P:System.Xml.XmlDocument.Name" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph2">&lt;see cref="P:System.Xml.XmlDocument.Name" /&gt;</ph> に一致するすべての子孫の要素のリストを格納している <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> containing a list of all matching nodes.</source>
          <target state="translated">一致しているすべてのノードのリストを格納している <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
          <source>It is recommended that you use the <ph id="ph1">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType&gt;</ph> method instead of the <ph id="ph3">&lt;xref:System.Xml.XmlDataDocument.GetElementsByTagName%2A&gt;</ph> method.</source>
          <target state="translated">使用することをお勧め、<ph id="ph1">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType&gt;</ph>または<ph id="ph2">&lt;xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType&gt;</ph>メソッドの代わりに、<ph id="ph3">&lt;xref:System.Xml.XmlDataDocument.GetElementsByTagName%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
          <source>The <ph id="ph1">&lt;see langword="XmlElement" /&gt;</ph> whose associated <ph id="ph2">&lt;see langword="DataRow" /&gt;</ph> you want to retrieve.</source>
          <target state="translated">取得する対象の、関連付けられた <ph id="ph1">&lt;see langword="XmlElement" /&gt;</ph> を持つ <ph id="ph2">&lt;see langword="DataRow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> associated with the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> に関連付けられている <ph id="ph2">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
          <source>The <ph id="ph1">&lt;see langword="DataRow" /&gt;</ph> containing a representation of the <ph id="ph2">&lt;see langword="XmlElement" /&gt;</ph>; <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no <ph id="ph4">&lt;see langword="DataRow" /&gt;</ph> associated with the <ph id="ph5">&lt;see langword="XmlElement" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DataRow" /&gt;</ph> の表現を格納している <ph id="ph2">&lt;see langword="XmlElement" /&gt;</ph>。<ph id="ph3">&lt;see langword="null" /&gt;</ph> に関連付けられた <ph id="ph4">&lt;see langword="DataRow" /&gt;</ph> がない場合は <ph id="ph5">&lt;see langword="XmlElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
          <source>The following example modifies the price of the first book.</source>
          <target state="translated">次の例では、最初の書籍の価格を変更します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
          <source>The example uses the following input files:</source>
          <target state="translated">例では、次の入力ファイルを使用します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlDataDocument">
          <source>Loads the <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> using the specified data source and synchronizes the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with the loaded data.</source>
          <target state="translated">指定したデータ ソースを使用して <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> を読み込み、読み込んだデータと <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> を同期します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>In order to view the XML data relationally, you must first specify a schema to use for data mapping.</source>
          <target state="translated">リレーション形式を XML データを表示するのには、最初にデータのマッピングに使用するスキーマを指定する必要があります。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>This can be done either by calling the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method or by creating the tables and columns within the <ph id="ph2">`DataSet`</ph> manually.</source>
          <target state="translated">これに呼び出すか、<ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>メソッドまたは内の列とテーブルを作成することで、<ph id="ph2">`DataSet`</ph>手動でします。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>This step must be done before calling <ph id="ph1">`Load`</ph>.</source>
          <target state="translated">この手順を呼び出す前に行う必要があります<ph id="ph1">`Load`</ph>です。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source><ph id="ph1">`XmlDataDocument`</ph> does not support creating entity references.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> 作成元のエンティティ参照はサポートされません。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>If the data includes entity references, the <ph id="ph1">`Load`</ph> method resolves and expands any entity references.</source>
          <target state="translated">データには、エンティティ参照が含まれている場合、<ph id="ph1">`Load`</ph>メソッドを解決し、任意のエンティティ参照を展開します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>However, if you are using the <ph id="ph1">`Load`</ph> overload that takes a <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> as an argument, you must specify an <ph id="ph3">`XmlReader`</ph> that can resolve entities.</source>
          <target state="translated">ただし、使用する場合、<ph id="ph1">`Load`</ph>を受け取るオーバー ロード、<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>を引数として指定する必要があります、<ph id="ph3">`XmlReader`</ph>エンティティを解決することができます。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source>The stream containing the XML document to load.</source>
          <target state="translated">読み込む XML ドキュメントが含まれているストリーム。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source>Loads the <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> from the specified stream.</source>
          <target state="translated">指定したストリームから <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> を読み込みます。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source><ph id="ph1">`XmlDataDocument`</ph> does not support creating entity references.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> 作成元のエンティティ参照はサポートされません。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source>If the data includes entity references, the <ph id="ph1">`Load`</ph> method resolves and expands any entity references.</source>
          <target state="translated">データには、エンティティ参照が含まれている場合、<ph id="ph1">`Load`</ph>メソッドを解決し、任意のエンティティ参照を展開します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source>In order to view the XML data relationally, you must first specify a schema to use for data mapping.</source>
          <target state="translated">リレーション形式を XML データを表示するのには、最初にデータのマッピングに使用するスキーマを指定する必要があります。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source>This can be done either by calling the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method or by creating the tables and columns within the <ph id="ph2">`DataSet`</ph> manually.</source>
          <target state="translated">これに呼び出すか、<ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>メソッドまたは内の列とテーブルを作成することで、<ph id="ph2">`DataSet`</ph>手動でします。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source>This step must be done before calling <ph id="ph1">`Load`</ph>.</source>
          <target state="translated">この手順を呼び出す前に行う必要があります<ph id="ph1">`Load`</ph>です。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph> used to feed the XML data into the document.</source>
          <target state="translated">XML データをドキュメントに送るために使用する <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source>Loads the <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> from the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> から <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> を読み込みます。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source><ph id="ph1">`XmlDataDocument`</ph> does not support creating entity references.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> 作成元のエンティティ参照はサポートされません。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source>If the data includes entity references, the <ph id="ph1">`Load`</ph> method resolves and expands any entity references.</source>
          <target state="translated">データには、エンティティ参照が含まれている場合、<ph id="ph1">`Load`</ph>メソッドを解決し、任意のエンティティ参照を展開します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source>In order to view the XML data relationally, you must first specify a schema to use for data mapping.</source>
          <target state="translated">リレーション形式を XML データを表示するのには、最初にデータのマッピングに使用するスキーマを指定する必要があります。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source>This can be done either by calling the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method or by creating the tables and columns within the <ph id="ph2">`DataSet`</ph> manually.</source>
          <target state="translated">これに呼び出すか、<ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>メソッドまたは内の列とテーブルを作成することで、<ph id="ph2">`DataSet`</ph>手動でします。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source>This step must be done before calling <ph id="ph1">`Load`</ph>.</source>
          <target state="translated">この手順を呼び出す前に行う必要があります<ph id="ph1">`Load`</ph>です。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source>The URL of the file containing the XML document to load.</source>
          <target state="translated">読み込む XML ドキュメントを格納しているファイルの URL。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source>Loads the <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> using the specified URL.</source>
          <target state="translated">指定した URL を使用して、<ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> を読み込みます。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source><ph id="ph1">`XmlDataDocument`</ph> does not support creating entity references.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> 作成元のエンティティ参照はサポートされません。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source>If the data includes entity references, the <ph id="ph1">`Load`</ph> method resolves and expands any entity references.</source>
          <target state="translated">データには、エンティティ参照が含まれている場合、<ph id="ph1">`Load`</ph>メソッドを解決し、任意のエンティティ参照を展開します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source>In order to view the XML data relationally, you must first specify a schema to use for data mapping.</source>
          <target state="translated">リレーション形式を XML データを表示するのには、最初にデータのマッピングに使用するスキーマを指定する必要があります。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source>This can be done either by calling the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method or by creating the tables and columns within the <ph id="ph2">`DataSet`</ph> manually.</source>
          <target state="translated">これに呼び出すか、<ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>メソッドまたは内の列とテーブルを作成することで、<ph id="ph2">`DataSet`</ph>手動でします。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source>This step must be done before calling <ph id="ph1">`Load`</ph>.</source>
          <target state="translated">この手順を呼び出す前に行う必要があります<ph id="ph1">`Load`</ph>です。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> containing the XML document to load.</source>
          <target state="translated">読み込む XML ドキュメントを格納している <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>Loads the <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> from the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> から <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> を読み込みます。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source><ph id="ph1">`XmlDataDocument`</ph> does not support creating entity references.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> 作成元のエンティティ参照はサポートされません。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If the data source contains entity references, you must create an <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> with the <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.EntityHandling%2A&gt;</ph> property set to EntityHandling.ExpandEntities (this is the default behavior) and pass the <ph id="ph3">`XmlValidatingReader`</ph> to the <ph id="ph4">`Load`</ph> method.</source>
          <target state="translated">作成する必要がありますが、データ ソースにエンティティ参照が含まれている場合、<ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>で、<ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.EntityHandling%2A&gt;</ph>プロパティ (これは、既定の動作です) で entityhandling.expandentities が使用する設定し、を渡す、<ph id="ph3">`XmlValidatingReader`</ph>を<ph id="ph4">`Load`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If you do not use an <ph id="ph1">`XmlValidatingReader`</ph>, the <ph id="ph2">`Load`</ph> method throws an exception.</source>
          <target state="translated">使用しない場合、 <ph id="ph1">`XmlValidatingReader`</ph>、<ph id="ph2">`Load`</ph>メソッドが例外をスローします。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The <ph id="ph1">`Load`</ph> method always preserves significant white space.</source>
          <target state="translated"><ph id="ph1">`Load`</ph>メソッドは、有意の空白を常に保存します。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;</ph> property determines whether or not white space is preserved.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;</ph>プロパティは、空白文字は保持されているかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The default is <ph id="ph1">`false`</ph>, white space is not preserved.</source>
          <target state="translated">既定値は<ph id="ph1">`false`</ph>、空白文字は保持されません。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If the reader is in the initial state (that is, ReadState=ReadState.Initial), <ph id="ph1">`Load`</ph> consumes the entire contents of the reader and builds the DOM from what it finds.</source>
          <target state="translated">リーダーが初期状態 (つまり、ReadState=ReadState.Initial) の場合<ph id="ph1">`Load`</ph>リーダーの内容全体を使用して、検出した内容からの DOM をビルドします。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If the reader is already positioned on some node at depth "n", then this method loads that node and all subsequent siblings up to the end tag that closes depth "n".</source>
          <target state="translated">"N"の深さでいくつかのノードには、既に、リーダーが配置されて、そのノードと"n"の深さを閉じる終了タグまでのすべての後続の兄弟このメソッドが読み込みます。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>This has the following results.</source>
          <target state="translated">これは、次の結果です。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If the current node and its following siblings look similar to the following:</source>
          <target state="translated">場合は、現在のノードとその次の兄弟には、次のようになります。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source><ph id="ph1">`Load`</ph> throws an exception, because a document cannot have two root-level elements.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> ドキュメントが 2 つのルート レベル要素にはできないため、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If the current node and its following siblings look similar to the following:</source>
          <target state="translated">場合は、現在のノードとその次の兄弟には、次のようになります。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source><ph id="ph1">`Load`</ph> will succeed; however, you will have an incomplete DOM tree, because there is no root-level element.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> 成功します。ただしは、未完了の DOM ツリー ルート レベルの要素がありません。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>You have to add a root-level element before you save the document; otherwise, the <ph id="ph1">&lt;xref:System.Xml.XmlDocument.Save%2A&gt;</ph> method throws an exception.</source>
          <target state="translated">ドキュメントを保存する前に、ルート レベルの要素を追加する必要があります。それ以外の場合、<ph id="ph1">&lt;xref:System.Xml.XmlDocument.Save%2A&gt;</ph>メソッドが例外をスローします。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If the reader is positioned on a leaf node that is invalid for the root level of a document (for example, a white space or attribute node), the reader continues to read until it is positioned on a node that can be used for the root.</source>
          <target state="translated">ドキュメントのルート レベルとしては無効なリーフ ノード (たとえば空白ノードや属性ノード) にリーダーが位置している場合、リーダーはルートとして使用できるノードに移動するまで読み込みを続行します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The document begins loading at this point.</source>
          <target state="translated">ドキュメントの読み込みは、この位置から開始されます。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The following example modifies the price of a book using the <ph id="ph1">`DataSet`</ph> methods.</source>
          <target state="translated">次の例を使用して、書籍の価格の変更、<ph id="ph1">`DataSet`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The example uses the following two input files.</source>
          <target state="translated">次の 2 つの入力ファイルを使用します。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The XML being loaded contains entity references, and the reader cannot resolve entities.</source>
          <target state="translated">読み込まれている XML にエンティティ参照が含まれており、リーダーがエンティティを解決できません。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>