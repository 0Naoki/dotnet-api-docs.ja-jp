<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlUrlResolver.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5de12df15e0a9a0e13f41ecb34cb1de054d727393.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de12df15e0a9a0e13f41ecb34cb1de054d727393</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlUrlResolver">
          <source>Resolves external XML resources named by a Uniform Resource Identifier (URI).</source>
          <target state="translated">URI (Uniform Resource Identifier) で名前が指定された外部 XML リソースを解決します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is used to resolve external XML resources such as entities, document type definitions (DTDs) or schemas.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> エンティティ、ドキュメント型定義 (Dtd) またはスキーマなどの外部の XML リソースの解決に使用されます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>It is also used to process include and import elements found in Extensible StyleSheet Language (XSL) style sheets or XML Schema definition language (XSD) schemas.</source>
          <target state="translated">使用されてもプロセスを含めるし、拡張スタイル シート言語 (XSL) スタイル シートまたは XML スキーマ定義言語 (XSD) スキーマで検出された要素をインポートします。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is the default resolver for all classes in the <ph id="ph2">&lt;xref:System.Xml&gt;</ph> namespace.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 既定の競合回避モジュールのすべてのクラス、<ph id="ph2">&lt;xref:System.Xml&gt;</ph>名前空間。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>It supports the <ph id="ph1">`file://`</ph> and <ph id="ph2">`http://`</ph> protocols and requests from the <ph id="ph3">&lt;xref:System.Net.WebRequest&gt;</ph> class.</source>
          <target state="translated">これは、<ph id="ph1">`file://`</ph> および <ph id="ph2">`http://`</ph> プロトコルをサポートし、<ph id="ph3">&lt;xref:System.Net.WebRequest&gt;</ph> クラスからの要求をサポートします。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> objects can contain sensitive information such as user credentials.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> オブジェクトはユーザー資格情報など、重要な情報を含むことがあります。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>You should be careful when you cache <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> objects and should not pass <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> objects to an untrusted component.</source>
          <target state="translated">注意が必要をキャッシュする場合に<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>オブジェクトおよび渡さないでください<ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>信頼できないコンポーネントのオブジェクト。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>Resolving DTDs</source>
          <target state="translated">Dtd の解決</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>If an XML reader (<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>) is reading an XML file that contains an external DTD, it calls the <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=nameWithType&gt;</ph> method to get a stream representation of the DTD.</source>
          <target state="translated">場合、XML リーダー (<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>) を外部の DTD を含む XML ファイルの読み取りは、呼び出し、 <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=nameWithType&gt;</ph> DTD のストリームの表現を取得します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>If the URI of the DTD is a relative URI, the XML reader calls the <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=nameWithType&gt;</ph> method and returns an absolute URI for the given <ph id="ph2">`relativeUri`</ph> and <ph id="ph3">`baseURi`</ph> parameters.</source>
          <target state="translated">DTD の URI が相対 URI の場合は、XML リーダーを呼び出して、<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=nameWithType&gt;</ph>メソッドの絶対 URI を返すと、指定された<ph id="ph2">`relativeUri`</ph>と<ph id="ph3">`baseURi`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> doesn't know how to resolve the URI, it returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>は、URI を解決する方法がわからない返します<ph id="ph2">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType&gt;</ph> method uses the information in the <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver.Credentials%2A&gt;</ph> property as appropriate to gain access to the resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType&gt;</ph> メソッドでは、必要に応じて <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver.Credentials%2A&gt;</ph> プロパティ内の情報を使用して、リソースにアクセスします。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>There is no <ph id="ph1">`get`</ph> accessor to this property for security reasons.</source>
          <target state="translated">セキュリティ上の理由から、このプロパティへの <ph id="ph1">`get`</ph> アクセサーはありません。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>When overwriting <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>, <bpt id="p1">**</bpt>GetEntity<ept id="p1">**</ept> is the method that utilizes the credential information in the <bpt id="p2">**</bpt>Credentials<ept id="p2">**</ept> property.</source>
          <target state="translated">上書きする場合<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>、 <bpt id="p1">**</bpt>GetEntity<ept id="p1">**</ept>の資格情報を使用するメソッドは、<bpt id="p2">**</bpt>資格情報<ept id="p2">**</ept>プロパティです。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>Resolving all other XML resources is very similar to resolving DTDs.</source>
          <target state="translated">その他のすべての XML リソースの解決は、DTD の解決に非常に似ています。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> negotiates the connection with the external resource and returns a <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> representation of the content.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 外部のリソースへの接続をネゴシエートしを返します、<ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>コンテンツの表現。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>The object that is making the call to <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> interprets the stream.</source>
          <target state="translated">オブジェクトへの呼び出しを行っている<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>ストリームを解釈します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>Extending the XmlUrlResolver class</source>
          <target state="translated">XmlUrlResolver クラスを拡張します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>The default behavior of the <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> class is to resolve an XML data resource from its source, not from cache.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> の既定の動作では、キャッシュではなくソースから XML データ リソースを解決します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>In some cases, resolving a data resource from cache can improve the performance of an application by saving a trip to the data resource's server.</source>
          <target state="translated">場合によっては、キャッシュからデータ リソースを解決することでデータ リソース サーバーへのトリップが不要になるため、アプリケーションのパフォーマンスを高めることができます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>The performance gains here must be weighed against the need for up-to-date content.</source>
          <target state="translated">このパフォーマンスの向上を重視するか、最新コンテンツの必要性を重視するかを検討する必要があります。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>The following example extends <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> and builds a new class, <ph id="ph2">`XmlCachingResolver`</ph>, to retrieve resources from the cache.</source>
          <target state="translated">次の例では拡張<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>、新しいクラスの構築と<ph id="ph2">`XmlCachingResolver`</ph>、キャッシュからリソースを取得します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>This is done by overriding the <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=nameWithType&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">そのために、<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=nameWithType&gt;</ph> プロパティと <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType&gt;</ph> メソッドをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>The caching behavior of the <ph id="ph1">`XmlCachingResolver`</ph> class is implemented in the <ph id="ph2">`GetEntity`</ph> method.</source>
          <target state="translated"><ph id="ph1">`XmlCachingResolver`</ph> クラスのキャッシュ動作を <ph id="ph2">`GetEntity`</ph> メソッドに実装します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>This is done by creating new <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;</ph> objects.</source>
          <target state="translated">そのために、<ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> オブジェクトと <ph id="ph2">&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;</ph> オブジェクトを新しく作成します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>The <ph id="ph1">&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;</ph> object is created using the <ph id="ph2">&lt;xref:System.Net.Cache.HttpRequestCacheLevel.Default&gt;</ph> member of the <ph id="ph3">&lt;xref:System.Net.Cache.HttpRequestCacheLevel&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;</ph> 列挙体の <ph id="ph2">&lt;xref:System.Net.Cache.HttpRequestCacheLevel.Default&gt;</ph> メンバーを使用して、<ph id="ph3">&lt;xref:System.Net.Cache.HttpRequestCacheLevel&gt;</ph> オブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.CachePolicy%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> object is set with the <ph id="ph3">&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.CachePolicy%2A&gt;</ph> オブジェクトの <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> プロパティに <ph id="ph3">&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;</ph> オブジェクトを設定します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>An instance of the <ph id="ph1">`XmlCachingResolver`</ph> class is created with the <ph id="ph2">`Boolean`</ph> <ph id="ph3">`enableHttpCaching`</ph>.</source>
          <target state="translated"><ph id="ph1">`XmlCachingResolver`</ph><ph id="ph2">`Boolean`</ph> を使用して、<ph id="ph3">`enableHttpCaching`</ph> クラスのインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>When this value is set to <ph id="ph1">`true`</ph>, the instance resolves a resource from the default cache if possible.</source>
          <target state="translated">この値に設定すると<ph id="ph1">`true`</ph>インスタンスが可能であれば、既定のキャッシュからのリソースを解決します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>When <ph id="ph1">`enableHttpCaching`</ph> is set to <ph id="ph2">`false`</ph>, the instance uses the default behavior and resolves resources from their source.</source>
          <target state="translated">ときに<ph id="ph1">`enableHttpCaching`</ph>に設定されている<ph id="ph2">`false`</ph>インスタンスが既定の動作を使用し、それらのソースからリソースを解決します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>This example leverages the extensibility of the XML classes in the .NET Framework.</source>
          <target state="translated">この例では、.NET Framework の XML クラスの拡張機能を活用します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>Other classes can be extended and customized to suit the needs of a particular application.</source>
          <target state="translated">他のクラスも、特定のアプリケーションの要件に合わせて拡張し、カスタマイズできます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> that uses an <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with default credentials.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>を使用して、<ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>既定の資格情報を使用します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlUrlResolver" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlUrlResolver" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlUrlResolver.CachePolicy">
          <source>Gets or sets the cache policy for the underlying <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> object.</source>
          <target state="translated">基になる <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> オブジェクトのキャッシュ ポリシーを取得または設定します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlUrlResolver.CachePolicy">
          <source>The cache policy for the underlying web request.</source>
          <target state="translated">基になる Web 要求のキャッシュ ポリシー。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlUrlResolver.Credentials">
          <source>Sets credentials used to authenticate web requests.</source>
          <target state="translated">Web 要求を認証するために使用する資格情報を設定します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlUrlResolver.Credentials">
          <source>The credentials to be used to authenticate web requests.</source>
          <target state="translated">Web 要求を認証するために使用する資格情報。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlUrlResolver.Credentials">
          <source>If this property is not set, the value defaults to <ph id="ph1">&lt;see langword="null" /&gt;</ph>; that is, the <ph id="ph2">&lt;see langword="XmlUrlResolver" /&gt;</ph> has no user credentials.</source>
          <target state="translated">このプロパティが設定されていない場合、既定値は <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。つまり、<ph id="ph2">&lt;see langword="XmlUrlResolver" /&gt;</ph> にはユーザーの資格情報がありません。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlUrlResolver.Credentials">
          <source>If the virtual directory does not require authentication, this property does not need to be set.</source>
          <target state="translated">仮想ディレクトリに認証が必要としない場合このプロパティが設定する必要はありません。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlUrlResolver.Credentials">
          <source>Otherwise, the credentials of the user must be supplied.</source>
          <target state="translated">それ以外の場合、ユーザーの資格情報を指定する必要があります。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlUrlResolver.Credentials">
          <source>You can associate different credentials with different URIs and add them to a cache.</source>
          <target state="translated">別の Uri を持つ別の資格情報を関連付けるでき、それらをキャッシュに追加できます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlUrlResolver.Credentials">
          <source>You can then use the credentials to check authentication for different URIs, regardless of the original source of the XML.</source>
          <target state="translated">資格情報を使用して、XML の送信元に関係なく、別の Uri の認証を確認できます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlUrlResolver.Credentials">
          <source>The following C# code shows how to set the <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.Credentials%2A&gt;</ph> property to a credential cache.</source>
          <target state="translated">次の c# コードを設定する方法を示しています、<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.Credentials%2A&gt;</ph>資格情報のキャッシュするプロパティです。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlUrlResolver.Credentials">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> object with credentials.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>資格情報を持つオブジェクト。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlUrlResolver.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> uses the credentials on the <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> object to access a network resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>上、資格情報を使用して、<ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>ネットワーク リソースにアクセスするオブジェクト。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The URI returned from <ph id="ph1">&lt;see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph> から返された URI。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>Currently not used.</source>
          <target state="translated">現在は使用されていません。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The type of object to return.</source>
          <target state="translated">返すオブジェクトの型。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The current implementation only returns <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> objects.</source>
          <target state="translated">現在の実装では、<ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> オブジェクトだけを返します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>Maps a URI to an object that contains the actual resource.</source>
          <target state="translated">URI を実際のリソースを格納しているオブジェクトにマップします。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>A stream object or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if a type other than stream is specified.</source>
          <target state="translated">ストリーム オブジェクト。ストリーム以外の型が指定された場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>This method is used when the caller wants to map a given URI to an object that contains the resource that the URI represents.</source>
          <target state="translated">このメソッドは、呼び出し元が指定した URI を URI を表すリソースを格納しているオブジェクトにマップするときに使用されます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A&gt;</ph>.</source>
          <target state="translated">このメソッドの非同期バージョンは、<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>Your application can mitigate memory denial of service threats to the <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A&gt;</ph> method by implementing IStream <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt;</ph> to limit the number of bytes read.</source>
          <target state="translated">アプリケーションはメモリ サービス拒否の脅威を緩和できます、 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A&gt;</ph> IStream を実装することによってメソッド<ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt;</ph>読み取られたバイト数を制限します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A&gt;</ph> method.</source>
          <target state="translated">これにより、悪意のあるコードが、無限にバイト ストリームを渡すしようとした位置の状況を防ぐ、<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The following example demonstrates the <ph id="ph1">`GetEntity`</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlResolver.ResolveUri%2A&gt;</ph> methods.</source>
          <target state="translated">次の例で、<ph id="ph1">`GetEntity`</ph>と<ph id="ph2">&lt;xref:System.Xml.XmlResolver.ResolveUri%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source><ph id="ph1">&lt;paramref name="ofObjectToReturn" /&gt;</ph> is neither <ph id="ph2">&lt;see langword="null" /&gt;</ph> nor a <ph id="ph3">&lt;see langword="Stream" /&gt;</ph> type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ofObjectToReturn" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph> でも <ph id="ph3">&lt;see langword="Stream" /&gt;</ph> 型でもありません。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The specified URI is not an absolute URI.</source>
          <target state="translated">指定した URI が絶対 URI ではありません。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source><ph id="ph1">&lt;paramref name="absoluteUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="absoluteUri" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>There is a runtime error (for example, an interrupted server connection).</source>
          <target state="translated">実行時エラー (サーバー接続の中断など) があります。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>The URI returned from <ph id="ph1">&lt;see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph> から返された URI。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>Currently not used.</source>
          <target state="translated">現在は使用されていません。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>The type of object to return.</source>
          <target state="translated">返すオブジェクトの型。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>The current implementation only returns <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> objects.</source>
          <target state="translated">現在の実装では、<ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> オブジェクトだけを返します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>Asynchronously maps a URI to an object that contains the actual resource.</source>
          <target state="translated">URI を実際のリソースを格納しているオブジェクトに非同期にマップします。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>A stream object or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if a type other than stream is specified.</source>
          <target state="translated">ストリーム オブジェクト。ストリーム以外の型が指定された場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlUrlResolver.Proxy">
          <source>Gets or sets the network proxy for the underlying <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> object.</source>
          <target state="translated">基になる <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> オブジェクトのネットワーク プロキシを取得または設定します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlUrlResolver.Proxy">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IWebProxy" /&gt;</ph> to use to access the Internet resource.</source>
          <target state="translated">インターネット リソースにアクセスするために使用する <ph id="ph1">&lt;see cref="T:System.Net.IWebProxy" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
          <source>The base URI used to resolve the relative URI.</source>
          <target state="translated">相対 URI の解決に使用するベース URI。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
          <source>The URI to resolve.</source>
          <target state="translated">解決対象の URI。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
          <source>The URI can be absolute or relative.</source>
          <target state="translated">URI は絶対 URI でも相対 URI でもかまいません。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
          <source>If absolute, this value effectively replaces the <bpt id="p1">&lt;c&gt;</bpt>baseUri<ept id="p1">&lt;/c&gt;</ept> value.</source>
          <target state="translated">絶対 URI の場合は、この値が <bpt id="p1">&lt;c&gt;</bpt>baseUri<ept id="p1">&lt;/c&gt;</ept> 値を効率的に置き換えます。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
          <source>If relative, it combines with the <bpt id="p1">&lt;c&gt;</bpt>baseUri<ept id="p1">&lt;/c&gt;</ept> to make an absolute URI.</source>
          <target state="translated">相対 URI の場合、この値は <bpt id="p1">&lt;c&gt;</bpt>baseUri<ept id="p1">&lt;/c&gt;</ept> と結合して絶対 URI を作成します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
          <source>Resolves the absolute URI from the base and relative URIs.</source>
          <target state="translated">ベース URI および 相対 URI を解決して絶対 URI を返します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
          <source>The absolute URI, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the relative URI cannot be resolved.</source>
          <target state="translated">絶対 URI。相対 URI を解決できない場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
          <source>The absolute URI can be used as the base URI for any subsequent requests for entities that are relative to this URI.</source>
          <target state="translated">絶対 URI は、この URI に対する相対されているエンティティの後続の要求のベース URI として使用できます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
          <source><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;paramref name="relativeUri" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph> または <ph id="ph3">&lt;paramref name="relativeUri" /&gt;</ph> が <ph id="ph4">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
          <source>This method has an inheritance demand.</source>
          <target state="translated">このメソッドでは、継承確認要求があります。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
          <source>Full trust is required to override the <ph id="ph1">&lt;see cref="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph> method.</source>
          <target state="translated">オーバーライドする完全な信頼が必要な<ph id="ph1">&lt;see cref="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph>メソッドです。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>