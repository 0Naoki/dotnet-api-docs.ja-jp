<Type Name="NameTable" FullName="System.Xml.NameTable">
  <TypeSignature Language="C#" Value="public class NameTable : System.Xml.XmlNameTable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NameTable extends System.Xml.XmlNameTable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.NameTable" />
  <TypeSignature Language="VB.NET" Value="Public Class NameTable&#xA;Inherits XmlNameTable" />
  <TypeSignature Language="C++ CLI" Value="public ref class NameTable : System::Xml::XmlNameTable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlNameTable</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d74b6-101">シングルスレッド <see cref="T:System.Xml.XmlNameTable" /> を実装します。</span><span class="sxs-lookup"><span data-stu-id="d74b6-101">Implements a single-threaded <see cref="T:System.Xml.XmlNameTable" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d74b6-102">などのいくつかのクラス<xref:System.Xml.XmlDocument>と<xref:System.Xml.XmlReader>を使用して、`NameTable`属性と要素の名前を格納する内部クラス。</span><span class="sxs-lookup"><span data-stu-id="d74b6-102">Several classes, such as <xref:System.Xml.XmlDocument> and <xref:System.Xml.XmlReader>, use the `NameTable` class internally to store attribute and element names.</span></span> <span data-ttu-id="d74b6-103">要素名または属性名が XML ドキュメントに複数回、出現した場合は、`NameTable` に 1 回だけ格納されます。</span><span class="sxs-lookup"><span data-stu-id="d74b6-103">When an element or attribute name occurs multiple times in an XML document, it is stored only once in the `NameTable`.</span></span>  
  
 <span data-ttu-id="d74b6-104">名前は、共通言語ランタイム (CLR) オブジェクト型として格納されます。</span><span class="sxs-lookup"><span data-stu-id="d74b6-104">The names are stored as common language runtime (CLR) object types.</span></span> <span data-ttu-id="d74b6-105">これにより、負荷の高い文字列比較ではなく、これらの文字列でオブジェクト比較を実行できます。</span><span class="sxs-lookup"><span data-stu-id="d74b6-105">This enables you to do object comparisons on these strings rather than a more expensive string comparison.</span></span> <span data-ttu-id="d74b6-106">これらの文字列オブジェクトが、アトミック化された文字列と呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="d74b6-106">These string objects are referred to as atomized strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d74b6-107">次の例では、次の 2 つの要素名を比較します。</span><span class="sxs-lookup"><span data-stu-id="d74b6-107">The following example compares two element names.</span></span>  
  
 [!code-cpp[NameTable#1](~/samples/snippets/cpp/VS_Snippets_Data/NameTable/CPP/nametable.cpp#1)]
 [!code-csharp[NameTable#1](~/samples/snippets/csharp/VS_Snippets_Data/NameTable/CS/nametable.cs#1)]
 [!code-vb[NameTable#1](~/samples/snippets/visualbasic/VS_Snippets_Data/NameTable/VB/nametable.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.NameTable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d74b6-108"><see langword="NameTable" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d74b6-108">Initializes a new instance of the <see langword="NameTable" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d74b6-109">空の NameTable を構築します。</span><span class="sxs-lookup"><span data-stu-id="d74b6-109">Constructs an empty NameTable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d74b6-110">指定した文字列を最小単位に分割し、<see langword="NameTable" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="d74b6-110">Atomizes the specified string and adds it to the <see langword="NameTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d74b6-111">最小単位に分割された文字列の詳細については、<xref:System.Xml.NameTable> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d74b6-111">For more information on atomized strings, see <xref:System.Xml.NameTable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public override string Add (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string Add(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.NameTable.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Add (key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ Add(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="d74b6-112">追加する文字列。</span><span class="sxs-lookup"><span data-stu-id="d74b6-112">The string to add.</span></span></param>
        <summary><span data-ttu-id="d74b6-113">指定した文字列を最小単位に分割し、<see langword="NameTable" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="d74b6-113">Atomizes the specified string and adds it to the <see langword="NameTable" />.</span></span></summary>
        <returns><span data-ttu-id="d74b6-114">最小単位に分割された文字列。<see langword="NameTable" /> に既に存在している場合は既存の文字列。</span><span class="sxs-lookup"><span data-stu-id="d74b6-114">The atomized string or the existing string if it already exists in the <see langword="NameTable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d74b6-115">最小単位に分割された文字列の詳細については、<xref:System.Xml.NameTable> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d74b6-115">For more information on atomized strings, see <xref:System.Xml.NameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d74b6-116"><paramref name="key" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d74b6-116"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public override string Add (char[] key, int start, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string Add(char[] key, int32 start, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Add (key As Char(), start As Integer, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ Add(cli::array &lt;char&gt; ^ key, int start, int len);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="d74b6-117">追加する文字列を格納している文字配列。</span><span class="sxs-lookup"><span data-stu-id="d74b6-117">The character array containing the string to add.</span></span></param>
        <param name="start"><span data-ttu-id="d74b6-118">文字列の最初の文字を指定する配列の、0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="d74b6-118">The zero-based index into the array specifying the first character of the string.</span></span></param>
        <param name="len"><span data-ttu-id="d74b6-119">文字列の文字数。</span><span class="sxs-lookup"><span data-stu-id="d74b6-119">The number of characters in the string.</span></span></param>
        <summary><span data-ttu-id="d74b6-120">指定した文字列を最小単位に分割し、<see langword="NameTable" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="d74b6-120">Atomizes the specified string and adds it to the <see langword="NameTable" />.</span></span></summary>
        <returns><span data-ttu-id="d74b6-121">最小単位に分割された文字列。または <see langword="NameTable" /> に既に存在している場合は既存の文字列。</span><span class="sxs-lookup"><span data-stu-id="d74b6-121">The atomized string or the existing string if one already exists in the <see langword="NameTable" />.</span></span> <span data-ttu-id="d74b6-122"><paramref name="len" /> が 0 の場合は、String.Empty が返されます。</span><span class="sxs-lookup"><span data-stu-id="d74b6-122">If <paramref name="len" /> is zero, String.Empty is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d74b6-123">最小単位に分割された文字列の詳細については、<xref:System.Xml.NameTable> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d74b6-123">For more information on atomized strings, see <xref:System.Xml.NameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="d74b6-124">0 &gt; <paramref name="start" /></span><span class="sxs-lookup"><span data-stu-id="d74b6-124">0 &gt; <paramref name="start" /></span></span>  
  
 <span data-ttu-id="d74b6-125">- または -</span><span class="sxs-lookup"><span data-stu-id="d74b6-125">-or-</span></span>  
  
 <span data-ttu-id="d74b6-126"><paramref name="start" /> &gt;= <paramref name="key" />.Length</span><span class="sxs-lookup"><span data-stu-id="d74b6-126"><paramref name="start" /> &gt;= <paramref name="key" />.Length</span></span>  
  
 <span data-ttu-id="d74b6-127">- または -</span><span class="sxs-lookup"><span data-stu-id="d74b6-127">-or-</span></span>  
  
 <span data-ttu-id="d74b6-128"><paramref name="len" /> &gt;= <paramref name="key" />.Length</span><span class="sxs-lookup"><span data-stu-id="d74b6-128"><paramref name="len" /> &gt;= <paramref name="key" />.Length</span></span>  
  
 <span data-ttu-id="d74b6-129"><paramref name="len" /> =0 の場合は、上記の条件によって例外がスローされることはありません。</span><span class="sxs-lookup"><span data-stu-id="d74b6-129">The above conditions do not cause an exception to be thrown if <paramref name="len" /> =0.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d74b6-130"><paramref name="len" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="d74b6-130"><paramref name="len" /> &lt; 0.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Get">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d74b6-131">最小単位に分割された文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="d74b6-131">Gets the atomized string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d74b6-132">最小単位に分割された文字列の詳細については、<xref:System.Xml.NameTable> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d74b6-132">For more information on atomized strings, see <xref:System.Xml.NameTable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public override string Get (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string Get(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.NameTable.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Get (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ Get(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d74b6-133">検索対象の名前。</span><span class="sxs-lookup"><span data-stu-id="d74b6-133">The name to find.</span></span></param>
        <summary><span data-ttu-id="d74b6-134">指定した値を持つ最小単位に分割された文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="d74b6-134">Gets the atomized string with the specified value.</span></span></summary>
        <returns><span data-ttu-id="d74b6-135">最小単位に分割された文字列オブジェクト。または文字列がまだ最小単位に分割されていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d74b6-135">The atomized string object or <see langword="null" /> if the string has not already been atomized.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d74b6-136">最小単位に分割された文字列の詳細については、<xref:System.Xml.NameTable> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d74b6-136">For more information on atomized strings, see <xref:System.Xml.NameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d74b6-137"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d74b6-137"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public override string Get (char[] key, int start, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string Get(char[] key, int32 start, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Get (key As Char(), start As Integer, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ Get(cli::array &lt;char&gt; ^ key, int start, int len);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="d74b6-138">検索対象の名前を格納している文字配列。</span><span class="sxs-lookup"><span data-stu-id="d74b6-138">The character array containing the name to find.</span></span></param>
        <param name="start"><span data-ttu-id="d74b6-139">名前の最初の文字を指定する配列の、0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="d74b6-139">The zero-based index into the array specifying the first character of the name.</span></span></param>
        <param name="len"><span data-ttu-id="d74b6-140">名前の文字数。</span><span class="sxs-lookup"><span data-stu-id="d74b6-140">The number of characters in the name.</span></span></param>
        <summary><span data-ttu-id="d74b6-141">指定した配列内の指定した範囲の文字と同じ文字を含む、最小単位に分割された文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="d74b6-141">Gets the atomized string containing the same characters as the specified range of characters in the given array.</span></span></summary>
        <returns><span data-ttu-id="d74b6-142">最小単位に分割された文字列。文字列がまだ最小単位に分割されていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d74b6-142">The atomized string or <see langword="null" /> if the string has not already been atomized.</span></span> <span data-ttu-id="d74b6-143"><paramref name="len" /> が 0 の場合は、String.Empty が返されます。</span><span class="sxs-lookup"><span data-stu-id="d74b6-143">If <paramref name="len" /> is zero, String.Empty is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d74b6-144">最小単位に分割された文字列の詳細については、<xref:System.Xml.NameTable> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d74b6-144">For more information on atomized strings, see <xref:System.Xml.NameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="d74b6-145">0 &gt; <paramref name="start" /></span><span class="sxs-lookup"><span data-stu-id="d74b6-145">0 &gt; <paramref name="start" /></span></span>  
  
 <span data-ttu-id="d74b6-146">- または -</span><span class="sxs-lookup"><span data-stu-id="d74b6-146">-or-</span></span>  
  
 <span data-ttu-id="d74b6-147"><paramref name="start" /> &gt;= <paramref name="key" />.Length</span><span class="sxs-lookup"><span data-stu-id="d74b6-147"><paramref name="start" /> &gt;= <paramref name="key" />.Length</span></span>  
  
 <span data-ttu-id="d74b6-148">- または -</span><span class="sxs-lookup"><span data-stu-id="d74b6-148">-or-</span></span>  
  
 <span data-ttu-id="d74b6-149"><paramref name="len" /> &gt;= <paramref name="key" />.Length</span><span class="sxs-lookup"><span data-stu-id="d74b6-149"><paramref name="len" /> &gt;= <paramref name="key" />.Length</span></span>  
  
 <span data-ttu-id="d74b6-150"><paramref name="len" /> =0 の場合は、上記の条件によって例外がスローされることはありません。</span><span class="sxs-lookup"><span data-stu-id="d74b6-150">The above conditions do not cause an exception to be thrown if <paramref name="len" /> =0.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d74b6-151"><paramref name="len" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="d74b6-151"><paramref name="len" /> &lt; 0.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>