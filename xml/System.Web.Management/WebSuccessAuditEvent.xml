<Type Name="WebSuccessAuditEvent" FullName="System.Web.Management.WebSuccessAuditEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b2409e76e5b7f238291bf0cbfb159fafea5b0b84" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69138148" /></Metadata><TypeSignature Language="C#" Value="public class WebSuccessAuditEvent : System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebSuccessAuditEvent extends System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebSuccessAuditEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebSuccessAuditEvent&#xA;Inherits WebAuditEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebSuccessAuditEvent : System::Web::Management::WebAuditEvent" />
  <TypeSignature Language="F#" Value="type WebSuccessAuditEvent = class&#xA;    inherit WebAuditEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebAuditEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>正常終了したセキュリティ イベントに関する情報を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET の正常性の監視により、運用スタッフと運用スタッフは、デプロイされた Web アプリケーションを管理できます。 名前<xref:System.Web.Management>空間には、アプリケーションの正常性状態データのパッケージ化を行う正常性イベントの種類と、このデータの処理を担当するプロバイダーの種類が含まれます。 また、正常性イベントの管理に役立つサポート型も含まれています。  
  
 クラス<xref:System.Web.Management.WebSuccessAuditEvent>は、セキュリティ関連の操作が正常に行われたときに使用されます。 たとえば、Web 要求の URL 承認が成功したとします。  
  
 次の一覧では、ASP.NET によって発生<xref:System.Web.Management.WebSuccessAuditEvent>する種類のイベントの機能について説明します。  
  
-   ファイルの承認。 成功した条件が監査されます。 ファイルの承認は、Windows Id が要求に関連付けられている場合にのみ、ASP.NET によって試行されます。 関連するイベント監査コードは<xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationSuccess>です。  
  
-   URL 認証。 これは、承認が許可されている URL リソースへのアクセスを意味します。 成功した条件が監査されます。 関連するイベント監査コードは<xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationSuccess>です。  
  
-   その他のセキュリティ条件。 関連するイベントコードの一覧を次に示します。  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>  
  
 が発生すると、ASP.NET の正常性の監視によって、関連する Audit Success Events の`healthMonitoring`パフォーマンスカウンタが増加し、構成を確認して、プロバイダーがイベントをサブスクライブしているかどうかが確認されます。 <xref:System.Web.Management.WebSuccessAuditEvent> プロバイダーがイベントをサブスクライブする場合、ASP.NET はイベントを処理のためにディスパッチします。  
  
> [!NOTE]
>  システムモニター (PerfMon) で Audit Success イベントが発生したパフォーマンスカウンターを表示するには、**[カウンターの追加]** ウィンドウの **[パフォーマンスオブジェクト]** ボックスの一覧で **[ASP.NET]** を選択し、**[成功イベントの監査]** を選択します。パフォーマンスカウンターをクリックし、**[追加]** ボタンをクリックします。 詳細については、「 [Monitoring ASP.NET Application Performance](https://msdn.microsoft.com/library/c96da1d1-6077-48d3-88e2-d9127ed91cf5)」を参照してください。  
  
 成功の監査は予期される条件を表しているため、サブスクライブしたくない場合があります。 サイトのアクセスの監査を提供するために、サブスクライブすることができます。  
  
> [!NOTE]
>  ほとんどの場合、ASP.NET の正常性監視の種類を実装として使用できます。また、 `healthMonitoring`構成セクションで値を指定することによって、正常性監視システムを制御します。 また、正常性監視型から派生して、独自のカスタムイベントおよびプロバイダーを作成することもできます。 <xref:System.Web.Management.WebSuccessAuditEvent>クラスから派生する例については、このトピックで説明する例を参照してください。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.Management.WebSuccessAuditEvent>クラスから派生させてカスタム監査イベントを作成する方法を示しています。  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#1)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#1)]  
  
 次の例は、ASP.NET 正常性監視でイベントを使用できるようにする構成ファイルの抜粋です。  
  
```  
<healthMonitoring   
..enabled="true"  
..heartBeatInterval="0">   
  <providers>  
    <add name="EventLogProvider"   
    type="System.Web.Management.EventLogWebEventProvider,  
    System.Web,Version=2.0.3600.0,Culture=neutral,  
    PublicKeyToken=b03f5f7f11d50a3a"/>  
  </providers>  
  <eventMappings>  
    <add  name="SampleWebSuccessAuditEvent"   
      type="SamplesAspNet.SampleWebSuccessAuditEvent,  
      websuccessauditevent,Version=1.0.1663.31140,   
      Culture=neutral,   
      PublicKeyToken=0d1fa0f69d94de96,   
      processorArchitecture=MSIL"/>  
  </eventMappings>  
  <rules>  
    <add name="Custom Failure Audit Default"  
      eventName=" SampleWebFailureAuditEvent "  
      provider="EventLogProvider"  
      profile="Default"/>    
  </rules>  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebAuditEvent" />
    <altmember cref="T:System.Web.Management.WebFailureAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">ASP.NET の正常性監視の概要</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.Management.WebSuccessAuditEvent" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebSuccessAuditEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebSuccessAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebSuccessAuditEvent : string * obj * int -&gt; System.Web.Management.WebSuccessAuditEvent" Usage="new System.Web.Management.WebSuccessAuditEvent (message, eventSource, eventCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">イベントの説明。</param>
        <param name="eventSource">イベントのソースであるオブジェクト。</param>
        <param name="eventCode">イベントに関連付けられているコード。 カスタム イベントを実装する場合、イベント コードを <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> より大きくする必要があります。</param>
        <summary>指定されたパラメーターを使用して、<see cref="T:System.Web.Management.WebSuccessAuditEvent" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターは、ASP.NET health 監視システムによって内部的に使用されます。 このクラスを使用して<xref:System.Web.Management.WebSuccessAuditEvent>オブジェクトをインスタンス化することはありませんが、このクラスから継承する独自のイベントの種類を実装する場合は、このコンストラクターを呼び出すことができます。  
  
> [!NOTE]
>  コンストラクター <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A>は、コードから直接使用するためのものではありません。 ASP.NET によって呼び出されます。 クラスから派生する<xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A>場合は、コンストラクターを呼び出すことができます。 <xref:System.Web.Management.WebSuccessAuditEvent>  
  
   
  
## Examples  
 次のコード例は、 `SampleWebSuccessAuditEvent`クラスでこのコンストラクターを呼び出す方法を示しています。 このコード例は、 <xref:System.Web.Management.WebSuccessAuditEvent>クラスに対して提供される大規模な例の一部です。  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#2)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebSuccessAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebSuccessAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebSuccessAuditEvent : string * obj * int * int -&gt; System.Web.Management.WebSuccessAuditEvent" Usage="new System.Web.Management.WebSuccessAuditEvent (message, eventSource, eventCode, eventDetailCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">イベントの説明。</param>
        <param name="eventSource">イベントのソースであるオブジェクト。</param>
        <param name="eventCode">イベントに関連付けられているコード。 カスタム イベントを実装する場合、イベント コードを <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> より大きくする必要があります。</param>
        <param name="eventDetailCode">イベントの詳細な識別子を指定する <see cref="T:System.Web.Management.WebEventCodes" /> 値。</param>
        <summary>指定されたパラメーターを使用して、<see cref="T:System.Web.Management.WebSuccessAuditEvent" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターは、ASP.NET health 監視システムによって内部的に使用されます。 このクラスを使用して<xref:System.Web.Management.WebSuccessAuditEvent>オブジェクトをインスタンス化することはありませんが、このクラスから継承する独自のイベントの種類を実装する場合は、このコンストラクターを呼び出すことができます。  
  
> [!NOTE]
>  コンストラクター <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A>は、コードから直接使用するためのものではありません。 ASP.NET によって呼び出されます。 クラスから派生する<xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A>場合は、コンストラクターを呼び出すことができます。 <xref:System.Web.Management.WebSuccessAuditEvent>  
  
   
  
## Examples  
 次のコード例は、 `SampleWebSuccessAuditEvent`クラスでこのコンストラクターを呼び出す方法を示しています。 このコード例は、 <xref:System.Web.Management.WebSuccessAuditEvent>クラスに対して提供される大規模な例の一部です。  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#3)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberSignature Language="F#" Value="override this.IncrementPerfCounters : unit -&gt; unit" Usage="webSuccessAuditEvent.IncrementPerfCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Audit Success Events Raised パフォーマンス カウンターをインクリメントします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Audit Success Events は、アプリケーションの開始後に発生した成功した監査イベントの数を追跡します。 このメソッドは、イベントが<xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A>発生したカウンターをインクリメントする親メソッドも呼び出します。 このカウンターは、発生したイベントの合計数を追跡します。  
  
 これらのパフォーマンスカウンターをシステムモニター (PerfMon) で表示するには、**[カウンターの追加]** ウィンドウの **[パフォーマンスオブジェクト]** ドロップダウンリストから **[ASP.NET]** を選択し、表示するパフォーマンスカウンターを選択して **[追加]** ボタンをクリックします。. 詳細については、「 [Monitoring ASP.NET Application Performance](https://msdn.microsoft.com/library/c96da1d1-6077-48d3-88e2-d9127ed91cf5)」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
