<Type Name="EventLogWebEventProvider" FullName="System.Web.Management.EventLogWebEventProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dfee5df078cf8d34b2a7b9fdbfabe07a4e154262" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51879596" /></Metadata><TypeSignature Language="C#" Value="public sealed class EventLogWebEventProvider : System.Web.Management.WebEventProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventLogWebEventProvider extends System.Web.Management.WebEventProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.EventLogWebEventProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventLogWebEventProvider&#xA;Inherits WebEventProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogWebEventProvider sealed : System::Web::Management::WebEventProvider" />
  <TypeSignature Language="F#" Value="type EventLogWebEventProvider = class&#xA;    inherit WebEventProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebEventProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bec9c-101">ASP.NET 状態監視イベントを Windows アプリケーション イベント ログに記録するイベント プロバイダーを実装します。</span><span class="sxs-lookup"><span data-stu-id="bec9c-101">Implements an event provider that logs ASP.NET health-monitoring events into the Windows Application Event Log.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9c-102">ASP.NET 状態監視には、運用環境と運用スタッフがデプロイされた Web アプリケーションの管理が使用できます。</span><span class="sxs-lookup"><span data-stu-id="bec9c-102">ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</span></span> <span data-ttu-id="bec9c-103"><xref:System.Web.Management>名前空間には、アプリケーションの正常性状態データとのこのデータを処理するプロバイダーの種類をパッケージ化する正常性イベントの種類が含まれています。</span><span class="sxs-lookup"><span data-stu-id="bec9c-103">The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.</span></span> <span data-ttu-id="bec9c-104">正常性イベントの管理を支援するサポート型も含まれています。</span><span class="sxs-lookup"><span data-stu-id="bec9c-104">It also contains supporting types that help during the management of health events.</span></span>  
  
 <span data-ttu-id="bec9c-105"><xref:System.Web.Management.EventLogWebEventProvider>失敗の監査とイベントの正常性の監視が構成されているエラーを既定では、(有効)。</span><span class="sxs-lookup"><span data-stu-id="bec9c-105">The <xref:System.Web.Management.EventLogWebEventProvider>, the failure audit, and the error health-monitoring events are configured (enabled) by default.</span></span> <span data-ttu-id="bec9c-106">つまり、失敗の監査と正常性監視イベントによってログに記録、Windows アプリケーション イベント ログで既定のエラーです。</span><span class="sxs-lookup"><span data-stu-id="bec9c-106">This means that the failure audit and the error health-monitoring events are logged in the Windows Application Event Log by default.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bec9c-107">ほとんどの場合に実装されると、ASP.NET 状態監視の種類を使用することができ、内の値を指定することで、状態監視システムを制御するが、`healthMonitoring`構成セクション。</span><span class="sxs-lookup"><span data-stu-id="bec9c-107">In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section.</span></span> <span data-ttu-id="bec9c-108">独自のカスタム イベントとプロバイダーを作成する正常性監視の種類から派生することもできます。</span><span class="sxs-lookup"><span data-stu-id="bec9c-108">You can also derive from the health-monitoring types to create your own custom events and providers.</span></span> <span data-ttu-id="bec9c-109">カスタム プロバイダーの作成の例は、次を参照してください。[方法: 例を実装、正常性監視カスタム プロバイダー](https://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c)します。</span><span class="sxs-lookup"><span data-stu-id="bec9c-109">For an example of creating a custom provider, see [How to: Implement the Health Monitoring Custom Provider Example](https://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bec9c-110">次の構成ファイルの抜粋は、型のプロバイダーを指定する方法を示します<xref:System.Web.Management.EventLogWebEventProvider>成功の監査イベントを処理します。</span><span class="sxs-lookup"><span data-stu-id="bec9c-110">The following configuration file excerpt shows how to specify a provider of type <xref:System.Web.Management.EventLogWebEventProvider> to handle success audit events.</span></span> <span data-ttu-id="bec9c-111"><xref:System.Web.Management.EventLogWebEventProvider>と監視のエラー監査正常性イベントの種類は、既定で構成されます。</span><span class="sxs-lookup"><span data-stu-id="bec9c-111">The <xref:System.Web.Management.EventLogWebEventProvider> and the failure audit health-event types to monitor are configured by default.</span></span> <span data-ttu-id="bec9c-112">監査の成功を監視する、コード例に示すように、構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="bec9c-112">To monitor the success audits, you need to configure them, as shown in the example code.</span></span>  
  
```  
<healthMonitoring   
  enabled="true" heartbeatInterval="10">  
  
  <rule>  
    <add name="Success Audits Default"  
      eventName="Success Audits"  
      provider="EventLogProvider"  
      profile="Default"  
      minInterval="00:01:00" />  
  </rule>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c"><span data-ttu-id="bec9c-113">ASP.NET 状態監視の概要</span><span class="sxs-lookup"><span data-stu-id="bec9c-113">ASP.NET Health Monitoring Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c"><span data-ttu-id="bec9c-114">ASP.NET 状態監視カスタム プロバイダーのサンプル</span><span class="sxs-lookup"><span data-stu-id="bec9c-114">ASP.NET Health-Monitoring Custom Provider Sample</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/ab894e83-7e2f-4af8-a116-b1bff8f815b2"><span data-ttu-id="bec9c-115">インストールして、ASP.NET プロバイダーの構成</span><span class="sxs-lookup"><span data-stu-id="bec9c-115">Installing and Configuring ASP.NET Providers</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.EventLogWebEventProvider.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="eventLogWebEventProvider.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bec9c-116">イベントをプロバイダーのバッファーからイベント ログに移動します。</span><span class="sxs-lookup"><span data-stu-id="bec9c-116">Moves events from the provider's buffer into the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9c-117">このメソッドが呼び出されると、バッファー内の最後の書き込みまたはイベントの数からすべてをプロバイダーのバッファー内のイベントには、Windows アプリケーション イベント ログに、どれだけ時間に関係なく、直ちに書き込まれますが経過しました。</span><span class="sxs-lookup"><span data-stu-id="bec9c-117">When this method is called, all the events in the provider's buffer are immediately written to the Windows Application Event Log, regardless of how much time has elapsed since last write or how many events are in the buffer.</span></span> <span data-ttu-id="bec9c-118">最後の書き込み時は、フラッシュ操作の時間にリセットされます。</span><span class="sxs-lookup"><span data-stu-id="bec9c-118">The time of the last write is reset to the time of the flushing action.</span></span> <span data-ttu-id="bec9c-119">バッファリング機構が有効でない場合は、このメソッドを呼び出すことはありません効果のいずれか。</span><span class="sxs-lookup"><span data-stu-id="bec9c-119">If the buffering mechanism is not enabled, calling this method does not have any effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.EventLogWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="eventLogWebEventProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="bec9c-120">このプロバイダーを識別するために構成ファイルで使用する名前。</span><span class="sxs-lookup"><span data-stu-id="bec9c-120">The name used in the configuration file to identify this provider.</span></span></param>
        <param name="config"><span data-ttu-id="bec9c-121">構成ファイルでこのプロバイダーに割り当てられる属性を指定する <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span><span class="sxs-lookup"><span data-stu-id="bec9c-121">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that specifies the attributes assigned for this provider in the configuration file.</span></span></param>
        <summary><span data-ttu-id="bec9c-122">このオブジェクトの初期値を設定します。</span><span class="sxs-lookup"><span data-stu-id="bec9c-122">Sets the initial values for this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9c-123">初期化するためにこのメソッドは、<xref:System.Web.Management.EventLogWebEventProvider>構成設定と構成ファイルで指定された名前を使用します。</span><span class="sxs-lookup"><span data-stu-id="bec9c-123">This method is called to initialize the <xref:System.Web.Management.EventLogWebEventProvider> with the configuration settings and name as specified in the configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEvent(class System.Web.Management.WebBaseEvent eventRaised) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.EventLogWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEvent (eventRaised As WebBaseEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ProcessEvent(System::Web::Management::WebBaseEvent ^ eventRaised);" />
      <MemberSignature Language="F#" Value="override this.ProcessEvent : System.Web.Management.WebBaseEvent -&gt; unit" Usage="eventLogWebEventProvider.ProcessEvent eventRaised" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventRaised" Type="System.Web.Management.WebBaseEvent" />
      </Parameters>
      <Docs>
        <param name="eventRaised"><span data-ttu-id="bec9c-124">処理対象の <see cref="T:System.Web.Management.WebBaseEvent" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bec9c-124">The <see cref="T:System.Web.Management.WebBaseEvent" /> object to process.</span></span></param>
        <summary><span data-ttu-id="bec9c-125">プロバイダーに渡されたイベントを処理します。</span><span class="sxs-lookup"><span data-stu-id="bec9c-125">Processes the event passed to the provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9c-126">これを呼び出す ASP.NET 状態監視イベントの処理を開始するメソッドです。</span><span class="sxs-lookup"><span data-stu-id="bec9c-126">This is the method that ASP.NET health monitoring calls to start the processing of the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public override void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.EventLogWebEventProvider.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Shutdown();" />
      <MemberSignature Language="F#" Value="override this.Shutdown : unit -&gt; unit" Usage="eventLogWebEventProvider.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bec9c-127">プロバイダーのシャットダウンに関連するタスクを実行します。</span><span class="sxs-lookup"><span data-stu-id="bec9c-127">Performs tasks associated with shutting down the provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec9c-128">ASP.NET の呼び出し、<xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A>メソッドと Web アプリケーションをホストするアプリケーション ドメインを終了します。</span><span class="sxs-lookup"><span data-stu-id="bec9c-128">ASP.NET calls the <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> method when the application domain hosting the Web application terminates.</span></span> <span data-ttu-id="bec9c-129">メソッドは、アプリケーションを正常に終了するためのタスクを実行します。</span><span class="sxs-lookup"><span data-stu-id="bec9c-129">The method is called to perform tasks that will allow the application to end gracefully.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>