<Type Name="WebApplicationInformation" FullName="System.Web.Management.WebApplicationInformation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f1aeaa62e56d0b8502d057d351bb8c0b9e939f1a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36400561" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WebApplicationInformation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebApplicationInformation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebApplicationInformation" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebApplicationInformation" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebApplicationInformation sealed" />
  <TypeSignature Language="F#" Value="type WebApplicationInformation = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f8369-101">状態イベントに関連付けられている情報を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f8369-101">Provides information associated with health events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8369-102">配置済みの Web アプリケーションの管理を運用環境と運用スタッフは、ASP.NET の状態監視できます。</span><span class="sxs-lookup"><span data-stu-id="f8369-102">ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</span></span> <span data-ttu-id="f8369-103"><xref:System.Web.Management?displayProperty=nameWithType>名前空間には、アプリケーションの正常性状態のデータおよびプロバイダーの種類は、このデータ処理をパッケージ化する正常性イベントの種類が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f8369-103">The <xref:System.Web.Management?displayProperty=nameWithType> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.</span></span> <span data-ttu-id="f8369-104">正常性イベントの管理を支援するサポート型も含まれています。</span><span class="sxs-lookup"><span data-stu-id="f8369-104">It also contains supporting types that help during the management of health events.</span></span>  
  
 <span data-ttu-id="f8369-105">インスタンス、<xref:System.Web.Management.WebApplicationInformation>クラスにはから派生した型のいずれかを使用して取得される情報が含まれて、<xref:System.Web.Management.WebManagementEvent>型です。</span><span class="sxs-lookup"><span data-stu-id="f8369-105">Instances of the <xref:System.Web.Management.WebApplicationInformation> class contain information that is obtained using any of the types derived from the <xref:System.Web.Management.WebManagementEvent> type.</span></span>  
  
 <span data-ttu-id="f8369-106">アプリケーションでは、この型によって提供される保護された情報にアクセスする適切なアクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="f8369-106">Your application needs the appropriate permissions to access protected information provided by this type.</span></span>  
  
 <span data-ttu-id="f8369-107">次は、イベント ログにエラーをアプリケーションの情報を含む ASP.NET を有効にするを使用すると、構成ファイルの抜粋です。</span><span class="sxs-lookup"><span data-stu-id="f8369-107">The following is an excerpt of a configuration file you could use to enable ASP.NET to log error events that contain application information.</span></span>  
  
```  
<healthMonitoring   
  enabled="true" heartBeatInterval="0">  
  
    <rules>  
     <add   
       name="All Errors Default"  
       eventName="All Errors"  
       provider="EventLogProvider"  
       profile="Default"  
       minInterval="00:01:00" />  
    </rules>  
  
</healthMonitoring>  
```  
  
> [!NOTE]
>  <span data-ttu-id="f8369-108">ほとんどの場合はできる実装されると、ASP.NET の稼働状況の監視の種類を使用して、内の値を指定することで、稼働状況の監視システムを制御する、`healthMonitoring`構成セクション。</span><span class="sxs-lookup"><span data-stu-id="f8369-108">In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section.</span></span> <span data-ttu-id="f8369-109">独自のカスタム イベントおよびプロバイダーを作成する正常性の監視の種類からも派生できます。</span><span class="sxs-lookup"><span data-stu-id="f8369-109">You can also derive from the health-monitoring types to create your own custom events and providers.</span></span> <span data-ttu-id="f8369-110">カスタム イベント クラスの作成の例は、このトピックで例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f8369-110">For an example of creating a custom event class, see the example provided in this topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8369-111">次のコード例は、次の 2 つの部分です。</span><span class="sxs-lookup"><span data-stu-id="f8369-111">The following code example has two parts.</span></span> <span data-ttu-id="f8369-112">最初の部分は、ASP.NET カスタム イベントを使用できるようにする構成ファイルの抜粋です。</span><span class="sxs-lookup"><span data-stu-id="f8369-112">The first part is an excerpt of the configuration file that enables ASP.NET to use a custom event.</span></span> <span data-ttu-id="f8369-113">2 つ目を使用してそのカスタム イベントを作成する方法を示します、<xref:System.Web.Management.WebApplicationInformation>クラスです。</span><span class="sxs-lookup"><span data-stu-id="f8369-113">The second shows how to create that custom event by using the <xref:System.Web.Management.WebApplicationInformation> class.</span></span>  
  
 <span data-ttu-id="f8369-114">カスタム イベントは、適切な時点に置き換えられます対応するシステム正常性イベントを発生させるとを確認します。</span><span class="sxs-lookup"><span data-stu-id="f8369-114">Ensure that your custom event is raised at the proper time, that is, when the equivalent system health event it replaces would be raised.</span></span>  
  
```  
<healthMonitoring   
  enabled="true" heartBeatInterval="0">  
  
  <eventMappings>   
    <add name="SampleApplicationInformation"   
        type="SamplesAspNet.SampleWebApplicationInformation, webapplicationinformation, Version=1.0.1585.27289, Culture=neutral, PublicKeyToken=3648e5c763a8239f, processorArchitecture=MSIL"/>   
  </eventMappings>  
  
  <rules>   
    <add name="Custom Application Information"  
      eventName="SampleApplicationInformation"   
      provider="EventLogProvider"    
      profile="Default"/>   
</rules>  
  
</healthMonitoring>  
```  
  
 [!code-csharp[System.Web.Management.WebApplicationInformation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/CS/webapplicationinformation.cs#1)]
 [!code-vb[System.Web.Management.WebApplicationInformation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/VB/webapplicationinformation.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebHeartbeatEvent" />
  </Docs>
  <Members>
    <Member MemberName="ApplicationDomain">
      <MemberSignature Language="C#" Value="public string ApplicationDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationDomain" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebApplicationInformation.ApplicationDomain" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationDomain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationDomain { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationDomain : string" Usage="System.Web.Management.WebApplicationInformation.ApplicationDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8369-115">現在のアプリケーション ドメイン名を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8369-115">Gets the current application domain name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f8369-116">アプリケーション ドメイン名を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8369-116">Gets the application domain name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8369-117">次のコード例では、アプリケーション ドメインの名前を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f8369-117">The following code example shows how to obtain the application domain name.</span></span>  
  
 [!code-csharp[System.Web.Management.WebApplicationInformation#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/CS/webapplicationinformation.cs#4)]
 [!code-vb[System.Web.Management.WebApplicationInformation#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/VB/webapplicationinformation.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationPath">
      <MemberSignature Language="C#" Value="public string ApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebApplicationInformation.ApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationPath : string" Usage="System.Web.Management.WebApplicationInformation.ApplicationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8369-118">アプリケーションの物理パスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8369-118">Gets the application physical path.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f8369-119">アプリケーションの物理パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8369-119">The application physical path.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8369-120">このプロパティには、アクセスする適切なアクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="f8369-120">This property requires appropriate permissions to be accessed.</span></span> <span data-ttu-id="f8369-121">アクセス許可のセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="f8369-121">Refer to the Permissions section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8369-122">次のコード例では、アプリケーションの物理パスを取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f8369-122">The following code example shows how to obtain the application physical path.</span></span>  
  
 [!code-csharp[System.Web.Management.WebApplicationInformation#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/CS/webapplicationinformation.cs#5)]
 [!code-vb[System.Web.Management.WebApplicationInformation#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/VB/webapplicationinformation.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationVirtualPath">
      <MemberSignature Language="C#" Value="public string ApplicationVirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationVirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebApplicationInformation.ApplicationVirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationVirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationVirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationVirtualPath : string" Usage="System.Web.Management.WebApplicationInformation.ApplicationVirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8369-123">アプリケーションの論理パスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8369-123">Gets the application logical path.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f8369-124">アプリケーションの論理パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8369-124">The application logical path.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8369-125">次のコード例では、アプリケーションの論理パスを取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f8369-125">The following code example shows how to obtain the application logical path.</span></span>  
  
 [!code-csharp[System.Web.Management.WebApplicationInformation#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/CS/webapplicationinformation.cs#6)]
 [!code-vb[System.Web.Management.WebApplicationInformation#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/VB/webapplicationinformation.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatToString">
      <MemberSignature Language="C#" Value="public void FormatToString (System.Web.Management.WebEventFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FormatToString(class System.Web.Management.WebEventFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationInformation.FormatToString(System.Web.Management.WebEventFormatter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FormatToString (formatter As WebEventFormatter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FormatToString(System::Web::Management::WebEventFormatter ^ formatter);" />
      <MemberSignature Language="F#" Value="member this.FormatToString : System.Web.Management.WebEventFormatter -&gt; unit" Usage="webApplicationInformation.FormatToString formatter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatter" Type="System.Web.Management.WebEventFormatter" />
      </Parameters>
      <Docs>
        <param name="formatter">
          <span data-ttu-id="f8369-126">Web の状態イベント情報の書式設定に使用するタブとインデントの設定を格納している <see cref="T:System.Web.Management.WebEventFormatter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8369-126">The <see cref="T:System.Web.Management.WebEventFormatter" /> that contains the tab and indentation settings used to format the Web health event information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f8369-127">アプリケーション情報を書式設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8369-127">Formats the application information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8369-128"><xref:System.Web.Management.WebApplicationInformation.FormatToString%2A>メソッドでは、同一の形式を提供イベントについては、イベント データをログに記録され後で、ユーザーに提示する必要がある場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="f8369-128">The <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> method provides a uniform format for event information, which is useful if the event data must be logged and later presented to the user.</span></span> <span data-ttu-id="f8369-129">プロバイダーは、のいずれかを呼び出したときに内部的に呼び出されます、<xref:System.Web.Management.WebBaseEvent.ToString%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f8369-129">It is called internally when the provider invokes one of the <xref:System.Web.Management.WebBaseEvent.ToString%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8369-130">表示するため、カスタム イベントの情報を書式設定と上書き、<xref:System.Web.Management.WebApplicationInformation.FormatToString%2A>メソッドではなく、<xref:System.Web.Management.WebApplicationInformation.ToString%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f8369-130">When formatting your custom event information for display, override the <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> method rather than the <xref:System.Web.Management.WebApplicationInformation.ToString%2A> method.</span></span> <span data-ttu-id="f8369-131">これには、上書きまたは機密性の高いシステム情報の改ざんが回避されます。</span><span class="sxs-lookup"><span data-stu-id="f8369-131">This will avoid overwriting or tampering with sensitive system information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8369-132">次のコード例では、カスタム情報を書式設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f8369-132">The following code example shows how to format custom information.</span></span>  
  
 [!code-csharp[System.Web.Management.WebApplicationInformation#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/CS/webapplicationinformation.cs#9)]
 [!code-vb[System.Web.Management.WebApplicationInformation#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/VB/webapplicationinformation.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebApplicationInformation.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string" Usage="System.Web.Management.WebApplicationInformation.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8369-133">アプリケーションのマシン名を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8369-133">Gets the application machine name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f8369-134">アプリケーションが実行されているマシンの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8369-134">The name of the machine where the application is running.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8369-135">次のコード例では、コンピューター名を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f8369-135">The following code example shows how to obtain the machine name.</span></span>  
  
 [!code-csharp[System.Web.Management.WebApplicationInformation#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/CS/webapplicationinformation.cs#7)]
 [!code-vb[System.Web.Management.WebApplicationInformation#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/VB/webapplicationinformation.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationInformation.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="webApplicationInformation.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f8369-136">イベント情報を表示用に書式設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8369-136">Formats event information for display purposes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f8369-137">イベント情報</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8369-137">The event information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8369-138"><xref:System.Web.Management.WebBaseEvent.ToString%2A>メソッドを呼び出してイベント情報を書式設定、<xref:System.Web.Management.WebApplicationInformation.FormatToString%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f8369-138">The <xref:System.Web.Management.WebBaseEvent.ToString%2A> method formats event information by calling the <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8369-139">表示するため、カスタム イベントの情報を書式設定と上書き、<xref:System.Web.Management.WebApplicationInformation.FormatToString%2A>これではなくメソッド<xref:System.Web.Management.WebApplicationInformation.ToString%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f8369-139">When formatting your custom event information for display, override the <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> method rather than this <xref:System.Web.Management.WebApplicationInformation.ToString%2A> method.</span></span> <span data-ttu-id="f8369-140">これには、上書きまたは機密性の高いシステム情報の改ざんが回避されます。</span><span class="sxs-lookup"><span data-stu-id="f8369-140">This will avoid overwriting or tampering with sensitive system information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8369-141">使用する例については、<xref:System.Web.Management.WebApplicationInformation.ToString%2A>メソッドを参照してください<xref:System.Web.Management.WebEventProvider>です。</span><span class="sxs-lookup"><span data-stu-id="f8369-141">For an example of using the <xref:System.Web.Management.WebApplicationInformation.ToString%2A> method, see <xref:System.Web.Management.WebEventProvider>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrustLevel">
      <MemberSignature Language="C#" Value="public string TrustLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TrustLevel" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebApplicationInformation.TrustLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TrustLevel As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TrustLevel { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TrustLevel : string" Usage="System.Web.Management.WebApplicationInformation.TrustLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8369-142">アプリケーションの信頼レベルを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8369-142">Gets the application trust level.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f8369-143">アプリケーションの信頼レベル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8369-143">The application trust level.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8369-144">このプロパティには、アクセスする適切なアクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="f8369-144">This property requires appropriate permissions to be accessed.</span></span> <span data-ttu-id="f8369-145">アクセス許可のセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="f8369-145">Refer to the Permissions section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8369-146">次の例では、アプリケーションの信頼レベルの情報を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f8369-146">The following example shows how to obtain the application-trust-level information.</span></span>  
  
 [!code-csharp[System.Web.Management.WebApplicationInformation#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/CS/webapplicationinformation.cs#8)]
 [!code-vb[System.Web.Management.WebApplicationInformation#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/VB/webapplicationinformation.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>