<Type Name="WebApplicationLifetimeEvent" FullName="System.Web.Management.WebApplicationLifetimeEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e6cb195aa491274fde6d9c3345aab35feb79e0b1" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51909756" /></Metadata><TypeSignature Language="C#" Value="public class WebApplicationLifetimeEvent : System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebApplicationLifetimeEvent extends System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebApplicationLifetimeEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebApplicationLifetimeEvent&#xA;Inherits WebManagementEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebApplicationLifetimeEvent : System::Web::Management::WebManagementEvent" />
  <TypeSignature Language="F#" Value="type WebApplicationLifetimeEvent = class&#xA;    inherit WebManagementEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebManagementEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="86a23-101">アプリケーションの有効期間中に発生した重要なイベントを表します。</span><span class="sxs-lookup"><span data-stu-id="86a23-101">Represents a significant event in the lifetime of an application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86a23-102">ASP.NET 状態監視には、運用環境と運用スタッフがデプロイされた Web アプリケーションの管理が使用できます。</span><span class="sxs-lookup"><span data-stu-id="86a23-102">ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</span></span> <span data-ttu-id="86a23-103"><xref:System.Web.Management>名前空間には、アプリケーションの正常性状態データとのこのデータを処理するプロバイダーの種類をパッケージ化する正常性イベントの種類が含まれています。</span><span class="sxs-lookup"><span data-stu-id="86a23-103">The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.</span></span> <span data-ttu-id="86a23-104">正常性イベントの管理を支援するサポート型も含まれています。</span><span class="sxs-lookup"><span data-stu-id="86a23-104">It also contains supporting types that help during the management of health events.</span></span>  
  
 <span data-ttu-id="86a23-105">アプリケーションの有効期間イベントには、アプリケーションの起動などのイベントとシャット ダウン イベントが含まれます。</span><span class="sxs-lookup"><span data-stu-id="86a23-105">Application lifetime events include events such as application startup and shutdown events.</span></span> <span data-ttu-id="86a23-106">アプリケーションが終了した場合は、関連するイベント メッセージのフィールドを表示して理由を確認できます。</span><span class="sxs-lookup"><span data-stu-id="86a23-106">If an application is terminated, you can determine why by viewing the related event message field.</span></span>  
  
 <span data-ttu-id="86a23-107">ときに、<xref:System.Web.Management.WebApplicationLifetimeEvent>インスタンスが発生すると、ASP.NET 状態監視アプリケーションの有効期間イベントのパフォーマンス カウンターを更新します。</span><span class="sxs-lookup"><span data-stu-id="86a23-107">When a <xref:System.Web.Management.WebApplicationLifetimeEvent> instance occurs, ASP.NET health monitoring updates the Application Lifetime Events performance counter.</span></span> <span data-ttu-id="86a23-108">これらのイベントを記録するには追加することで、<xref:System.Web.Management.WebApplicationLifetimeEvent>オブジェクトを`rules`のサブセクション、`healthMonitoring`の次の例に示すように、構成ファイルのセクション。</span><span class="sxs-lookup"><span data-stu-id="86a23-108">You can log these events by adding the <xref:System.Web.Management.WebApplicationLifetimeEvent> object to the `rules` subsection of the `healthMonitoring` section of the configuration file, as shown in the following example.</span></span>  
  
```  
<rules>  
  <add name="Application Events"  
    eventName="Application Lifetime Events"  
    provider="EventLogProvider"  
    profile="Default"  
    minInterval="00:01:00" />  
</rules>  
  
```  
  
 <span data-ttu-id="86a23-109">アプリケーションの有効期間イベントのパフォーマンス カウンターには、すべての ASP.NET の有効期間イベントの合計が含まれています。</span><span class="sxs-lookup"><span data-stu-id="86a23-109">The Application Lifetime Events performance counter contains the sum total of all ASP.NET lifetime events.</span></span> <span data-ttu-id="86a23-110">システム モニター (PerfMon) では、このパフォーマンス カウンターを表示する、**カウンターの追加**ウィンドウ選択**ASP.NET**から、**パフォーマンス オブジェクト**ドロップダウン リスト。</span><span class="sxs-lookup"><span data-stu-id="86a23-110">To view this performance counter in System Monitor (PerfMon), in the **Add Counters** window select **ASP.NET** from the **Performance object** drop-down list.</span></span> <span data-ttu-id="86a23-111">選択、**アプリケーションの有効期間イベント**パフォーマンス カウンター、およびクリック、**追加**ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="86a23-111">Select the **Application Lifetime Events** performance counter, and click the **Add** button.</span></span> <span data-ttu-id="86a23-112">詳細については、「を使用して ASP.NET アプリケーションとシステム モニター (PerfMon)」を参照してください[MSDN](https://go.microsoft.com/fwlink/?linkid=37118)します。</span><span class="sxs-lookup"><span data-stu-id="86a23-112">For more information, see "Using the System Monitor (PerfMon) with ASP.NET Applications" on [MSDN](https://go.microsoft.com/fwlink/?linkid=37118).</span></span> <span data-ttu-id="86a23-113">標準でログに記録するイベントを許可するかどうかは<xref:System.Web.Management.EventLogWebEventProvider>、ことで表示するイベント ビューアーを選択して、**アプリケーション**ログ。</span><span class="sxs-lookup"><span data-stu-id="86a23-113">If you allow events to be logged by the standard <xref:System.Web.Management.EventLogWebEventProvider>, you can view them in Event Viewer by selecting the **Application** log.</span></span> <span data-ttu-id="86a23-114">詳細については、次を参照してください。[イベント ビューアー](https://go.microsoft.com/fwlink/?linkid=24845&clcid=0x409) TechNet の Windows Server 2003 のドキュメントにします。</span><span class="sxs-lookup"><span data-stu-id="86a23-114">For more information, see [Event Viewer](https://go.microsoft.com/fwlink/?linkid=24845&clcid=0x409) in the Windows Server 2003 documentation on TechNet.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="86a23-115"><xref:System.Web.Management.WebApplicationLifetimeEvent>オブジェクトが大量のイベント ログを記録するリソースを消費して、システムが低下する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="86a23-115">Because the <xref:System.Web.Management.WebApplicationLifetimeEvent> object is a high-volume event, logging it is resource-intensive and might slow down your system.</span></span> <span data-ttu-id="86a23-116">場合は上書きするには、その他のイベントを発生する可能性も、<xref:System.Web.Management.EventLogWebEventProvider>により大量のイベントと、クラスのイベント ログ機能。</span><span class="sxs-lookup"><span data-stu-id="86a23-116">It can also cause other events to be overwritten in the case of the <xref:System.Web.Management.EventLogWebEventProvider> class due to the high volume of events and the way the event logging works.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86a23-117">ほとんどの場合に実装されると、ASP.NET 状態監視の種類を使用することができ、内の値を指定することで、状態監視システムを制御するが、`healthMonitoring`構成セクション。</span><span class="sxs-lookup"><span data-stu-id="86a23-117">In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section.</span></span> <span data-ttu-id="86a23-118">独自のカスタム イベントとプロバイダーを作成する正常性監視の種類から派生することもできます。</span><span class="sxs-lookup"><span data-stu-id="86a23-118">You can also derive from the health-monitoring types to create your own custom events and providers.</span></span> <span data-ttu-id="86a23-119">派生の例については、<xref:System.Web.Management.WebApplicationLifetimeEvent>クラスをこのトピックで例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="86a23-119">For an example of deriving from the <xref:System.Web.Management.WebApplicationLifetimeEvent> class, see the example provided in this topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86a23-120">次のコード例から派生させる方法を示しています、<xref:System.Web.Management.WebApplicationLifetimeEvent>カスタム イベントを作成するクラス。</span><span class="sxs-lookup"><span data-stu-id="86a23-120">The following code example shows how to derive from the <xref:System.Web.Management.WebApplicationLifetimeEvent> class to create a custom event.</span></span>  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#1)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#1)]  
  
 <span data-ttu-id="86a23-121">次の構成ファイルの抜粋を構成する方法を示しています、`healthMonitoring`を追加する構成ファイルのセクション、`SampleWebApplicationLifetimeEvent`コード上で ASP.NET 状態監視システムを定義します。</span><span class="sxs-lookup"><span data-stu-id="86a23-121">The following configuration-file excerpt shows how to configure the `healthMonitoring` section of a configuration file to add the `SampleWebApplicationLifetimeEvent` code defined above to the ASP.NET health-monitoring system.</span></span> <span data-ttu-id="86a23-122">システムには、イベントを追加するには、新しいエントリを追加することでイベントを定義する必要があります、`eventMappings`セクションし、新しいエントリを追加することによって、イベントをプロバイダーにマップ、`rules`セクション。</span><span class="sxs-lookup"><span data-stu-id="86a23-122">To add the event to the system, you must define the event by adding a new entry to the `eventMappings` section and map the event to a provider by adding a new entry to the `rules` section.</span></span>  
  
```  
<healthMonitoring  
  enabled="true"  
  heartBeatInterval="0">  
  
    <eventMappings>  
       <clear />  
       <!-- Configure the application lifetime event -->  
       <!-- object to handle the Web application events. -->  
       <add name="SampleApplicationLifetimeEvents"  
         type="System.Web.Management.SampleWebApplicationLifetimeEvent,  
         System.Web,Version=2.0.3600.0,  
         Culture=neutral,PublicKeyToken=b03f5f7f11d50a3a" />  
     </eventMappings>  
  
    <rules>  
      <clear/>  
       // Configure the connection between the   
       // application lifetime event object   
       // and the provider that must process it.  
       <add name="Custom Application Events"  
         eventName="SampleApplicationLifetimeEvents"  
         provider="EventLogProvider"  
         profile="Default"  
         minInterval="00:01:00" />  
    </rules>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="86a23-123">表示するため、カスタム イベントの情報を書式設定時に、オーバーライド、<see cref="M:System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)" />メソッドではなく、<see cref="Overload:System.Web.Management.WebBaseEvent.ToString" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="86a23-123">When formatting your custom event information for display, override the <see cref="M:System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)" /> method rather than the <see cref="Overload:System.Web.Management.WebBaseEvent.ToString" /> method.</span></span> <span data-ttu-id="86a23-124">これには、上書きや重要なシステム情報の改ざんが回避されます。</span><span class="sxs-lookup"><span data-stu-id="86a23-124">This will avoid overwriting or tampering with sensitive system information.</span></span></para></block>
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c"><span data-ttu-id="86a23-125">ASP.NET 状態監視の概要</span><span class="sxs-lookup"><span data-stu-id="86a23-125">ASP.NET Health Monitoring Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="86a23-126"><see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="86a23-126">Initializes a new instance of the <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> class.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c"><span data-ttu-id="86a23-127">ASP.NET 状態監視の概要</span><span class="sxs-lookup"><span data-stu-id="86a23-127">ASP.NET Health Monitoring Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebApplicationLifetimeEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebApplicationLifetimeEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebApplicationLifetimeEvent : string * obj * int -&gt; System.Web.Management.WebApplicationLifetimeEvent" Usage="new System.Web.Management.WebApplicationLifetimeEvent (message, eventSource, eventCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="86a23-128">イベントに関連付けられているメッセージ。</span><span class="sxs-lookup"><span data-stu-id="86a23-128">The message associated with the event.</span></span></param>
        <param name="eventSource"><span data-ttu-id="86a23-129">イベントのソースであるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="86a23-129">The object that is the source of the event.</span></span></param>
        <param name="eventCode"><span data-ttu-id="86a23-130">イベントに関連付けられているコード。</span><span class="sxs-lookup"><span data-stu-id="86a23-130">The code associated with the event.</span></span> <span data-ttu-id="86a23-131">カスタム イベントを実装する場合、イベント コードを <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> より大きくする必要があります。</span><span class="sxs-lookup"><span data-stu-id="86a23-131">When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</span></span></param>
        <summary><span data-ttu-id="86a23-132">指定されたパラメーターを使用して <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> クラスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="86a23-132">Initializes the <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> class using the supplied parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86a23-133">このコンス トラクターは、ASP.NET 状態監視システムによって内部的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="86a23-133">This constructor is used internally by the ASP.NET health-monitoring system.</span></span> <span data-ttu-id="86a23-134">インスタンスの作成に利用しないが、<xref:System.Web.Management.WebApplicationLifetimeEvent>が、クラスは、このクラスから継承する独自のイベントの種類を実装する場合に、このコンス トラクターに呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="86a23-134">You will never use it to create an instance of the <xref:System.Web.Management.WebApplicationLifetimeEvent> class, but you can call this constructor when implementing your own event type that inherits from this class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86a23-135"><xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A>コンス トラクターは、コードから直接使用するものはありません。</span><span class="sxs-lookup"><span data-stu-id="86a23-135">The <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> constructor is not intended to be used directly from your code.</span></span> <span data-ttu-id="86a23-136">ASP.NET によって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="86a23-136">It is called by ASP.NET.</span></span> <span data-ttu-id="86a23-137">呼び出すことができます、<xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A>コンス トラクターから派生する場合、<xref:System.Web.Management.WebApplicationLifetimeEvent>クラス。</span><span class="sxs-lookup"><span data-stu-id="86a23-137">You can call the <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> constructor when deriving from the <xref:System.Web.Management.WebApplicationLifetimeEvent> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86a23-138">次のコード例を使用する方法を示しています、<xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A>で ASP.NET のカスタムの正常性イベント。</span><span class="sxs-lookup"><span data-stu-id="86a23-138">The following code example shows how to use the <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> in an ASP.NET custom health event.</span></span> <span data-ttu-id="86a23-139">このコード例は、主を使用する正しい構文を示しています。</span><span class="sxs-lookup"><span data-stu-id="86a23-139">This code example is mainly intended to show the correct syntax to use.</span></span>  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#2)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c"><span data-ttu-id="86a23-140">ASP.NET 状態監視の概要</span><span class="sxs-lookup"><span data-stu-id="86a23-140">ASP.NET Health Monitoring Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebApplicationLifetimeEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebApplicationLifetimeEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebApplicationLifetimeEvent : string * obj * int * int -&gt; System.Web.Management.WebApplicationLifetimeEvent" Usage="new System.Web.Management.WebApplicationLifetimeEvent (message, eventSource, eventCode, eventDetailCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="86a23-141">イベントに関連付けられているメッセージ。</span><span class="sxs-lookup"><span data-stu-id="86a23-141">The message associated with the event.</span></span></param>
        <param name="eventSource"><span data-ttu-id="86a23-142">イベントのソースであるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="86a23-142">The object that is the source of the event.</span></span></param>
        <param name="eventCode"><span data-ttu-id="86a23-143">イベントに関連付けられているコード。</span><span class="sxs-lookup"><span data-stu-id="86a23-143">The code associated with the event.</span></span> <span data-ttu-id="86a23-144">カスタム イベントを実装する場合、イベント コードを <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> より大きくする必要があります。</span><span class="sxs-lookup"><span data-stu-id="86a23-144">When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</span></span></param>
        <param name="eventDetailCode"><span data-ttu-id="86a23-145">イベントの詳細な識別子を指定する <see cref="T:System.Web.Management.WebEventCodes" /> 値。</span><span class="sxs-lookup"><span data-stu-id="86a23-145">The <see cref="T:System.Web.Management.WebEventCodes" /> value that specifies the detailed identifier for the event.</span></span></param>
        <summary><span data-ttu-id="86a23-146">指定されたパラメーターを使用して <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> クラスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="86a23-146">Initializes the <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> class using the supplied parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86a23-147">このコンス トラクターは、ASP.NET 状態監視システムによって内部的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="86a23-147">This constructor is used internally by the ASP.NET health-monitoring system.</span></span> <span data-ttu-id="86a23-148">インスタンスの作成に利用しないが、<xref:System.Web.Management.WebApplicationLifetimeEvent>が、クラスは、このクラスから継承する独自のイベントの種類を実装する場合に、このコンス トラクターに呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="86a23-148">You will never use it to create an instance of the <xref:System.Web.Management.WebApplicationLifetimeEvent> class, but you can call this constructor when implementing your own event type that inherits from this class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86a23-149"><xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A>コンス トラクターは、コードから直接使用するものはありません。</span><span class="sxs-lookup"><span data-stu-id="86a23-149">The <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> constructor is not intended to be used directly from your code.</span></span> <span data-ttu-id="86a23-150">ASP.NET によって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="86a23-150">It is called by ASP.NET.</span></span> <span data-ttu-id="86a23-151">呼び出すことができます、<xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A>コンス トラクターから派生する場合、<xref:System.Web.Management.WebApplicationLifetimeEvent>クラス。</span><span class="sxs-lookup"><span data-stu-id="86a23-151">You can call the <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> constructor when deriving from the <xref:System.Web.Management.WebApplicationLifetimeEvent> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86a23-152">次のコード例を使用する方法を示しています、<xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A>で ASP.NET のカスタムの正常性イベント。</span><span class="sxs-lookup"><span data-stu-id="86a23-152">The following code example shows how to use the <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> in an ASP.NET custom health event.</span></span> <span data-ttu-id="86a23-153">このコード例は、主を使用する正しい構文を示しています。</span><span class="sxs-lookup"><span data-stu-id="86a23-153">This code example is mainly intended to show the correct syntax to use.</span></span>  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#3)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c"><span data-ttu-id="86a23-154">ASP.NET 状態監視の概要</span><span class="sxs-lookup"><span data-stu-id="86a23-154">ASP.NET Health Monitoring Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberSignature Language="F#" Value="override this.IncrementPerfCounters : unit -&gt; unit" Usage="webApplicationLifetimeEvent.IncrementPerfCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="86a23-155">パフォーマンス カウンターをインクリメントするために、内部的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="86a23-155">Used internally to increment performance counters.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c"><span data-ttu-id="86a23-156">ASP.NET 状態監視の概要</span><span class="sxs-lookup"><span data-stu-id="86a23-156">ASP.NET Health Monitoring Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>