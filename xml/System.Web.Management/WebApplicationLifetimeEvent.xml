<Type Name="WebApplicationLifetimeEvent" FullName="System.Web.Management.WebApplicationLifetimeEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9dec4539e083e1e13543ddc121a16aea14f5417d" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70442848" /></Metadata><TypeSignature Language="C#" Value="public class WebApplicationLifetimeEvent : System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebApplicationLifetimeEvent extends System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebApplicationLifetimeEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebApplicationLifetimeEvent&#xA;Inherits WebManagementEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebApplicationLifetimeEvent : System::Web::Management::WebManagementEvent" />
  <TypeSignature Language="F#" Value="type WebApplicationLifetimeEvent = class&#xA;    inherit WebManagementEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebManagementEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="07d83-101">アプリケーションの有効期間中に発生した重要なイベントを表します。</span><span class="sxs-lookup"><span data-stu-id="07d83-101">Represents a significant event in the lifetime of an application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07d83-102">ASP.NET の正常性の監視により、運用スタッフと運用スタッフは、デプロイされた Web アプリケーションを管理できます。</span><span class="sxs-lookup"><span data-stu-id="07d83-102">ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</span></span> <span data-ttu-id="07d83-103">名前<xref:System.Web.Management>空間には、アプリケーションの正常性状態データのパッケージ化を担当する正常性イベントの種類と、このデータの処理を担当するプロバイダーの種類が含まれています。</span><span class="sxs-lookup"><span data-stu-id="07d83-103">The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.</span></span> <span data-ttu-id="07d83-104">また、正常性イベントの管理に役立つサポート型も含まれています。</span><span class="sxs-lookup"><span data-stu-id="07d83-104">It also contains supporting types that help during the management of health events.</span></span>  
  
 <span data-ttu-id="07d83-105">アプリケーションの有効期間イベントには、アプリケーションの起動イベントやシャットダウンイベントなどのイベントが含まれます。</span><span class="sxs-lookup"><span data-stu-id="07d83-105">Application lifetime events include events such as application startup and shutdown events.</span></span> <span data-ttu-id="07d83-106">アプリケーションが終了した場合は、[関連イベントメッセージ] フィールドを表示して原因を特定できます。</span><span class="sxs-lookup"><span data-stu-id="07d83-106">If an application is terminated, you can determine why by viewing the related event message field.</span></span>  
  
 <span data-ttu-id="07d83-107"><xref:System.Web.Management.WebApplicationLifetimeEvent>インスタンスが発生すると、ASP.NET health monitoring はアプリケーションの有効期間イベントのパフォーマンスカウンタを更新します。</span><span class="sxs-lookup"><span data-stu-id="07d83-107">When a <xref:System.Web.Management.WebApplicationLifetimeEvent> instance occurs, ASP.NET health monitoring updates the Application Lifetime Events performance counter.</span></span> <span data-ttu-id="07d83-108">次の例に示すように、 <xref:System.Web.Management.WebApplicationLifetimeEvent>構成ファイルの`rules` `healthMonitoring`セクションのサブセクションにオブジェクトを追加することで、これらのイベントをログに記録できます。</span><span class="sxs-lookup"><span data-stu-id="07d83-108">You can log these events by adding the <xref:System.Web.Management.WebApplicationLifetimeEvent> object to the `rules` subsection of the `healthMonitoring` section of the configuration file, as shown in the following example.</span></span>  
  
```  
<rules>  
  <add name="Application Events"  
    eventName="Application Lifetime Events"  
    provider="EventLogProvider"  
    profile="Default"  
    minInterval="00:01:00" />  
</rules>  
  
```  
  
 <span data-ttu-id="07d83-109">Application Lifetime Events パフォーマンスカウンタには、すべての ASP.NET 有効期間イベントの合計が含まれます。</span><span class="sxs-lookup"><span data-stu-id="07d83-109">The Application Lifetime Events performance counter contains the sum total of all ASP.NET lifetime events.</span></span> <span data-ttu-id="07d83-110">システムモニター (PerfMon) でこのパフォーマンスカウンターを表示するには、**[カウンターの追加]** ウィンドウで、**[パフォーマンスオブジェクト]** ボックスの一覧から **[ASP.NET]** を選択します。</span><span class="sxs-lookup"><span data-stu-id="07d83-110">To view this performance counter in System Monitor (PerfMon), in the **Add Counters** window select **ASP.NET** from the **Performance object** drop-down list.</span></span> <span data-ttu-id="07d83-111">**[アプリケーションの有効期間イベント]** パフォーマンスカウンターを選択し、**[追加]** ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="07d83-111">Select the **Application Lifetime Events** performance counter, and click the **Add** button.</span></span> <span data-ttu-id="07d83-112">詳細については、 [MSDN](https://go.microsoft.com/fwlink/?linkid=37118)の「システムモニター (PerfMon) と ASP.NET アプリケーションの使用」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="07d83-112">For more information, see "Using the System Monitor (PerfMon) with ASP.NET Applications" on [MSDN](https://go.microsoft.com/fwlink/?linkid=37118).</span></span> <span data-ttu-id="07d83-113">標準<xref:System.Web.Management.EventLogWebEventProvider>によってイベントをログに記録できるようにする場合は、**アプリケーション**ログを選択して、イベントを[イベントビューアー](https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2003/cc756915\(v=ws.10\))で表示できます。</span><span class="sxs-lookup"><span data-stu-id="07d83-113">If you allow events to be logged by the standard <xref:System.Web.Management.EventLogWebEventProvider>, you can view them in [Event Viewer](https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2003/cc756915\(v=ws.10\)) by selecting the **Application** log.</span></span>
  
> [!CAUTION]
>  <span data-ttu-id="07d83-114"><xref:System.Web.Management.WebApplicationLifetimeEvent>このオブジェクトは大量のイベントであるため、リソースを大量に消費するため、システムの速度が低下する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="07d83-114">Because the <xref:System.Web.Management.WebApplicationLifetimeEvent> object is a high-volume event, logging it is resource-intensive and might slow down your system.</span></span> <span data-ttu-id="07d83-115">また、大量のイベントが発生し、イベントのログ記録の<xref:System.Web.Management.EventLogWebEventProvider>しくみが原因で、クラスの場合に他のイベントが上書きされることもあります。</span><span class="sxs-lookup"><span data-stu-id="07d83-115">It can also cause other events to be overwritten in the case of the <xref:System.Web.Management.EventLogWebEventProvider> class due to the high volume of events and the way the event logging works.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="07d83-116">ほとんどの場合、ASP.NET の正常性監視の種類を実装として使用できます。また、 `healthMonitoring`構成セクションで値を指定することによって、正常性監視システムを制御します。</span><span class="sxs-lookup"><span data-stu-id="07d83-116">In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section.</span></span> <span data-ttu-id="07d83-117">また、正常性監視型から派生して、独自のカスタムイベントおよびプロバイダーを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="07d83-117">You can also derive from the health-monitoring types to create your own custom events and providers.</span></span> <span data-ttu-id="07d83-118"><xref:System.Web.Management.WebApplicationLifetimeEvent>クラスから派生する例については、このトピックで説明する例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="07d83-118">For an example of deriving from the <xref:System.Web.Management.WebApplicationLifetimeEvent> class, see the example provided in this topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07d83-119"><xref:System.Web.Management.WebApplicationLifetimeEvent>クラスから派生してカスタムイベントを作成する方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="07d83-119">The following code example shows how to derive from the <xref:System.Web.Management.WebApplicationLifetimeEvent> class to create a custom event.</span></span>  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#1)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#1)]  
  
 <span data-ttu-id="07d83-120">次の構成ファイルの抜粋では、構成ファイル`healthMonitoring`のセクションを構成して、上`SampleWebApplicationLifetimeEvent`で定義したコードを ASP.NET health 監視システムに追加する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="07d83-120">The following configuration-file excerpt shows how to configure the `healthMonitoring` section of a configuration file to add the `SampleWebApplicationLifetimeEvent` code defined above to the ASP.NET health-monitoring system.</span></span> <span data-ttu-id="07d83-121">イベントをシステムに追加するには、 `eventMappings`セクションに新しいエントリを追加してイベントを定義し、 `rules`セクションに新しいエントリを追加することによってイベントをプロバイダーにマップする必要があります。</span><span class="sxs-lookup"><span data-stu-id="07d83-121">To add the event to the system, you must define the event by adding a new entry to the `eventMappings` section and map the event to a provider by adding a new entry to the `rules` section.</span></span>  
  
```  
<healthMonitoring  
  enabled="true"  
  heartBeatInterval="0">  
  
    <eventMappings>  
       <clear />  
       <!-- Configure the application lifetime event -->  
       <!-- object to handle the Web application events. -->  
       <add name="SampleApplicationLifetimeEvents"  
         type="System.Web.Management.SampleWebApplicationLifetimeEvent,  
         System.Web,Version=2.0.3600.0,  
         Culture=neutral,PublicKeyToken=b03f5f7f11d50a3a" />  
     </eventMappings>  
  
    <rules>  
      <clear/>  
       // Configure the connection between the   
       // application lifetime event object   
       // and the provider that must process it.  
       <add name="Custom Application Events"  
         eventName="SampleApplicationLifetimeEvents"  
         provider="EventLogProvider"  
         profile="Default"  
         minInterval="00:01:00" />  
    </rules>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="07d83-122">表示するカスタムイベント情報の書式を設定する場合<see cref="M:System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)" />は、 <see cref="Overload:System.Web.Management.WebBaseEvent.ToString" />メソッドではなく、メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="07d83-122">When formatting your custom event information for display, override the <see cref="M:System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)" /> method rather than the <see cref="Overload:System.Web.Management.WebBaseEvent.ToString" /> method.</span></span> <span data-ttu-id="07d83-123">これにより、機密性の高いシステム情報の上書きや改ざんを防ぐことができます。</span><span class="sxs-lookup"><span data-stu-id="07d83-123">This will avoid overwriting or tampering with sensitive system information.</span></span></para></block>
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c"><span data-ttu-id="07d83-124">ASP.NET の正常性監視の概要</span><span class="sxs-lookup"><span data-stu-id="07d83-124">ASP.NET Health Monitoring Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07d83-125"><see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="07d83-125">Initializes a new instance of the <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> class.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c"><span data-ttu-id="07d83-126">ASP.NET の正常性監視の概要</span><span class="sxs-lookup"><span data-stu-id="07d83-126">ASP.NET Health Monitoring Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebApplicationLifetimeEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebApplicationLifetimeEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebApplicationLifetimeEvent : string * obj * int -&gt; System.Web.Management.WebApplicationLifetimeEvent" Usage="new System.Web.Management.WebApplicationLifetimeEvent (message, eventSource, eventCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="07d83-127">イベントに関連付けられているメッセージ。</span><span class="sxs-lookup"><span data-stu-id="07d83-127">The message associated with the event.</span></span></param>
        <param name="eventSource"><span data-ttu-id="07d83-128">イベントのソースであるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="07d83-128">The object that is the source of the event.</span></span></param>
        <param name="eventCode"><span data-ttu-id="07d83-129">イベントに関連付けられているコード。</span><span class="sxs-lookup"><span data-stu-id="07d83-129">The code associated with the event.</span></span> <span data-ttu-id="07d83-130">カスタム イベントを実装する場合、イベント コードを <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> より大きくする必要があります。</span><span class="sxs-lookup"><span data-stu-id="07d83-130">When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</span></span></param>
        <summary><span data-ttu-id="07d83-131">指定されたパラメーターを使用して <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> クラスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="07d83-131">Initializes the <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> class using the supplied parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07d83-132">このコンストラクターは、ASP.NET health 監視システムによって内部的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="07d83-132">This constructor is used internally by the ASP.NET health-monitoring system.</span></span> <span data-ttu-id="07d83-133">このクラスを使用して<xref:System.Web.Management.WebApplicationLifetimeEvent>クラスのインスタンスを作成することはありませんが、このクラスから継承する独自のイベントの種類を実装する場合は、このコンストラクターを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="07d83-133">You will never use it to create an instance of the <xref:System.Web.Management.WebApplicationLifetimeEvent> class, but you can call this constructor when implementing your own event type that inherits from this class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="07d83-134">コンストラクター <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A>は、コードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="07d83-134">The <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> constructor is not intended to be used directly from your code.</span></span> <span data-ttu-id="07d83-135">ASP.NET によって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="07d83-135">It is called by ASP.NET.</span></span> <span data-ttu-id="07d83-136">クラスから派生する<xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A>場合は、コンストラクターを呼び出すことができます。 <xref:System.Web.Management.WebApplicationLifetimeEvent></span><span class="sxs-lookup"><span data-stu-id="07d83-136">You can call the <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> constructor when deriving from the <xref:System.Web.Management.WebApplicationLifetimeEvent> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07d83-137">次のコード例では、 <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> ASP.NET カスタム正常性イベントでを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="07d83-137">The following code example shows how to use the <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> in an ASP.NET custom health event.</span></span> <span data-ttu-id="07d83-138">このコード例は、主に、使用する正しい構文を示すことを目的としています。</span><span class="sxs-lookup"><span data-stu-id="07d83-138">This code example is mainly intended to show the correct syntax to use.</span></span>  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#2)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c"><span data-ttu-id="07d83-139">ASP.NET の正常性監視の概要</span><span class="sxs-lookup"><span data-stu-id="07d83-139">ASP.NET Health Monitoring Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebApplicationLifetimeEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebApplicationLifetimeEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebApplicationLifetimeEvent : string * obj * int * int -&gt; System.Web.Management.WebApplicationLifetimeEvent" Usage="new System.Web.Management.WebApplicationLifetimeEvent (message, eventSource, eventCode, eventDetailCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="07d83-140">イベントに関連付けられているメッセージ。</span><span class="sxs-lookup"><span data-stu-id="07d83-140">The message associated with the event.</span></span></param>
        <param name="eventSource"><span data-ttu-id="07d83-141">イベントのソースであるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="07d83-141">The object that is the source of the event.</span></span></param>
        <param name="eventCode"><span data-ttu-id="07d83-142">イベントに関連付けられているコード。</span><span class="sxs-lookup"><span data-stu-id="07d83-142">The code associated with the event.</span></span> <span data-ttu-id="07d83-143">カスタム イベントを実装する場合、イベント コードを <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> より大きくする必要があります。</span><span class="sxs-lookup"><span data-stu-id="07d83-143">When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</span></span></param>
        <param name="eventDetailCode"><span data-ttu-id="07d83-144">イベントの詳細な識別子を指定する <see cref="T:System.Web.Management.WebEventCodes" /> 値。</span><span class="sxs-lookup"><span data-stu-id="07d83-144">The <see cref="T:System.Web.Management.WebEventCodes" /> value that specifies the detailed identifier for the event.</span></span></param>
        <summary><span data-ttu-id="07d83-145">指定されたパラメーターを使用して <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> クラスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="07d83-145">Initializes the <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> class using the supplied parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07d83-146">このコンストラクターは、ASP.NET health 監視システムによって内部的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="07d83-146">This constructor is used internally by the ASP.NET health-monitoring system.</span></span> <span data-ttu-id="07d83-147">このクラスを使用して<xref:System.Web.Management.WebApplicationLifetimeEvent>クラスのインスタンスを作成することはありませんが、このクラスから継承する独自のイベントの種類を実装する場合は、このコンストラクターを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="07d83-147">You will never use it to create an instance of the <xref:System.Web.Management.WebApplicationLifetimeEvent> class, but you can call this constructor when implementing your own event type that inherits from this class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="07d83-148">コンストラクター <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A>は、コードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="07d83-148">The <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> constructor is not intended to be used directly from your code.</span></span> <span data-ttu-id="07d83-149">ASP.NET によって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="07d83-149">It is called by ASP.NET.</span></span> <span data-ttu-id="07d83-150">クラスから派生する<xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A>場合は、コンストラクターを呼び出すことができます。 <xref:System.Web.Management.WebApplicationLifetimeEvent></span><span class="sxs-lookup"><span data-stu-id="07d83-150">You can call the <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> constructor when deriving from the <xref:System.Web.Management.WebApplicationLifetimeEvent> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07d83-151">次のコード例では、 <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> ASP.NET カスタム正常性イベントでを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="07d83-151">The following code example shows how to use the <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> in an ASP.NET custom health event.</span></span> <span data-ttu-id="07d83-152">このコード例は、主に、使用する正しい構文を示すことを目的としています。</span><span class="sxs-lookup"><span data-stu-id="07d83-152">This code example is mainly intended to show the correct syntax to use.</span></span>  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#3)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c"><span data-ttu-id="07d83-153">ASP.NET の正常性監視の概要</span><span class="sxs-lookup"><span data-stu-id="07d83-153">ASP.NET Health Monitoring Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberSignature Language="F#" Value="override this.IncrementPerfCounters : unit -&gt; unit" Usage="webApplicationLifetimeEvent.IncrementPerfCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07d83-154">パフォーマンス カウンターをインクリメントするために、内部的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="07d83-154">Used internally to increment performance counters.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c"><span data-ttu-id="07d83-155">ASP.NET の正常性監視の概要</span><span class="sxs-lookup"><span data-stu-id="07d83-155">ASP.NET Health Monitoring Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
