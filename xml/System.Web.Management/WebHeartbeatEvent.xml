<Type Name="WebHeartbeatEvent" FullName="System.Web.Management.WebHeartbeatEvent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1235eceb1db290689e8f7de035d8f41260624605" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30537376" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebHeartbeatEvent : System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebHeartbeatEvent extends System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebHeartbeatEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebHeartbeatEvent&#xA;Inherits WebManagementEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebHeartbeatEvent : System::Web::Management::WebManagementEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebManagementEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="548bf-101">定期的に発生する状態監視イベントを定義します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="548bf-101">Defines those health-monitoring events raised at a periodic interval.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="548bf-102">配置済みの Web アプリケーションの管理を運用環境と運用スタッフは、ASP.NET の状態監視できます。</span><span class="sxs-lookup"><span data-stu-id="548bf-102">ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</span></span> <span data-ttu-id="548bf-103"><xref:System.Web.Management>名前空間には、アプリケーションの正常性状態のデータおよびプロバイダーの種類は、このデータ処理をパッケージ化する正常性イベントの種類が含まれています。</span><span class="sxs-lookup"><span data-stu-id="548bf-103">The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.</span></span> <span data-ttu-id="548bf-104">正常性イベントの管理を支援するサポート型も含まれています。</span><span class="sxs-lookup"><span data-stu-id="548bf-104">It also contains supporting types that help during the management of health events.</span></span>  
  
 <span data-ttu-id="548bf-105">ハートビートの状態監視イベントは、ASP.NET の稼働状況の監視システムのタイマーとして機能します。</span><span class="sxs-lookup"><span data-stu-id="548bf-105">The heartbeat health-monitoring events serve as a timer for the ASP.NET health-monitoring system.</span></span> <span data-ttu-id="548bf-106">定義した間隔で発生する、`heartBeatInterval`の属性、`healthMonitoring`構成セクション。</span><span class="sxs-lookup"><span data-stu-id="548bf-106">They are raised at an interval defined by the `heartBeatInterval` attribute of the `healthMonitoring` configuration section.</span></span> <span data-ttu-id="548bf-107"><xref:System.Web.Management.WebHeartbeatEvent>を使用して、<xref:System.Web.Management.WebProcessStatistics>プロセス情報を取得するクラス。</span><span class="sxs-lookup"><span data-stu-id="548bf-107">The <xref:System.Web.Management.WebHeartbeatEvent> uses the <xref:System.Web.Management.WebProcessStatistics> class to obtain process information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="548bf-108">ほとんどの場合はできる実装されると、ASP.NET の稼働状況の監視の種類を使用して、内の値を指定することで、稼働状況の監視システムを制御する、`healthMonitoring`構成セクション。</span><span class="sxs-lookup"><span data-stu-id="548bf-108">In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section.</span></span> <span data-ttu-id="548bf-109">独自のカスタム イベントおよびプロバイダーを作成する正常性の監視の種類からも派生できます。</span><span class="sxs-lookup"><span data-stu-id="548bf-109">You can also derive from the health-monitoring types to create your own custom events and providers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="548bf-110">次の構成ファイルの抜粋の構成を示しています、<xref:System.Web.Management.EventLogWebEventProvider>ハートビート ヘルス イベントを処理できるようにします。</span><span class="sxs-lookup"><span data-stu-id="548bf-110">The following configuration file excerpt shows the configuration for the <xref:System.Web.Management.EventLogWebEventProvider> so it can handle heartbeat health events.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="548bf-111"><xref:System.Web.Management.EventLogWebEventProvider>を監視するハートビート ヘルス イベントの種類が既定で構成されているとします。</span><span class="sxs-lookup"><span data-stu-id="548bf-111">The <xref:System.Web.Management.EventLogWebEventProvider> and the heartbeat health event types to monitor are configured by default.</span></span> <span data-ttu-id="548bf-112">行う必要がある唯一の機能では、ハートビート ヘルス イベントを監視するルールを定義します。</span><span class="sxs-lookup"><span data-stu-id="548bf-112">The only thing you need to do is to define the rule to monitor the heartbeat health events.</span></span> <span data-ttu-id="548bf-113">既定では、エラーのみ監査記録することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="548bf-113">Remember that by default only the failure audits are logged.</span></span>  
  
```  
<healthMonitoring   
  enabled="true" heartbeatInterval="100">  
  <rules>  
    <add name="Heart Beat Events"  
      eventName="Heartbeats"  
      provider="EventLogProvider"  
      profile="Default"  
      minInterval="00:01:00" />  
  </rules>  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebProcessStatistics" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebHeartbeatEvent (string message, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebHeartbeatEvent.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebHeartbeatEvent(System::String ^ message, int eventCode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="548bf-114">イベントの説明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="548bf-114">The description of the event.</span>
          </span>
        </param>
        <param name="eventCode">
          <span data-ttu-id="548bf-115">イベントに関連付けられているコード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="548bf-115">The code associated with the event.</span>
          </span>
          <span data-ttu-id="548bf-116">カスタム イベントを実装する場合、イベント コードを <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> より大きくする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="548bf-116">When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="548bf-117">指定したメッセージおよびイベント コードを使用して、<see cref="T:System.Web.Management.WebHeartbeatEvent" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="548bf-117">Initializes a new instance of the <see cref="T:System.Web.Management.WebHeartbeatEvent" /> class with the given message and event code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessStatistics">
      <MemberSignature Language="C#" Value="public System.Web.Management.WebProcessStatistics ProcessStatistics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Management.WebProcessStatistics ProcessStatistics" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebHeartbeatEvent.ProcessStatistics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessStatistics As WebProcessStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Management::WebProcessStatistics ^ ProcessStatistics { System::Web::Management::WebProcessStatistics ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Management.WebProcessStatistics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="548bf-118">実行中のプロセスに関する主要情報を提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="548bf-118">Provides key information about the running process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="548bf-119">実行中のプロセスの <see cref="T:System.Web.Management.WebProcessStatistics" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="548bf-119">The <see cref="T:System.Web.Management.WebProcessStatistics" /> for the running process.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Management.WebProcessStatistics" />
      </Docs>
    </Member>
  </Members>
</Type>