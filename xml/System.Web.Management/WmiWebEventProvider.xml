<Type Name="WmiWebEventProvider" FullName="System.Web.Management.WmiWebEventProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b323b69301d8e6976b22274fac3677b2f57abfce" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51894143" /></Metadata><TypeSignature Language="C#" Value="public class WmiWebEventProvider : System.Web.Management.WebEventProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WmiWebEventProvider extends System.Web.Management.WebEventProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WmiWebEventProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class WmiWebEventProvider&#xA;Inherits WebEventProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WmiWebEventProvider : System::Web::Management::WebEventProvider" />
  <TypeSignature Language="F#" Value="type WmiWebEventProvider = class&#xA;    inherit WebEventProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebEventProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="923e0-101">ASP.NET 状態監視イベントを WMI (Windows Management Instrumentation) イベントに割り当てるイベント プロバイダーを実装します。</span><span class="sxs-lookup"><span data-stu-id="923e0-101">Implements an event provider that maps ASP.NET health-monitoring events to Windows Management Instrumentation (WMI) events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="923e0-102">ASP.NET 状態監視には、運用環境と運用スタッフがデプロイされた Web アプリケーションの管理が使用できます。</span><span class="sxs-lookup"><span data-stu-id="923e0-102">ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</span></span> <span data-ttu-id="923e0-103"><xref:System.Web.Management>名前空間には、アプリケーションの正常性状態データとのこのデータを処理するプロバイダーの種類をパッケージ化する正常性イベントの種類が含まれています。</span><span class="sxs-lookup"><span data-stu-id="923e0-103">The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.</span></span> <span data-ttu-id="923e0-104">正常性イベントの管理を支援するサポート型も含まれています。</span><span class="sxs-lookup"><span data-stu-id="923e0-104">It also contains supporting types that help during the management of health events.</span></span>  
  
 <span data-ttu-id="923e0-105">ASP.NET では、WMI イベントに正常性監視イベントをマップするのにこのクラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="923e0-105">ASP.NET uses this class to map health-monitoring events to WMI events.</span></span> <span data-ttu-id="923e0-106">構成する必要があります、WMI のサブシステムへの ASP.NET 状態監視イベントの配信を有効にする、<xref:System.Web.Management.WmiWebEventProvider>クラスで適切な設定を追加することで、`<healthMonitoring>`構成ファイルのセクション。</span><span class="sxs-lookup"><span data-stu-id="923e0-106">To enable the delivery of ASP.NET health-monitoring events to the WMI subsystem, you must configure the <xref:System.Web.Management.WmiWebEventProvider> class by adding the appropriate settings in the `<healthMonitoring>` section of the configuration file.</span></span>  
  
 <span data-ttu-id="923e0-107">パラメーターに ASP.NET 状態監視イベントがルーティングされるときに発生した WMI イベントの説明を Aspnet.mof ファイルに含まれる情報、<xref:System.Web.Management.WmiWebEventProvider>クラスし、WMI イベントにマップします。</span><span class="sxs-lookup"><span data-stu-id="923e0-107">The information contained in the Aspnet.mof file describes the parameters of the WMI events raised when ASP.NET health-monitoring events are routed to the <xref:System.Web.Management.WmiWebEventProvider> class and mapped into WMI events.</span></span> <span data-ttu-id="923e0-108">.NET Framework のビルド ディレクトリ、たとえば %windir%\Microsoft.NET\Framework Aspnet.mof ファイルが格納されている\\*BuildNumber*します。</span><span class="sxs-lookup"><span data-stu-id="923e0-108">The Aspnet.mof file is stored in the .NET Framework build directory, for example %windir%\Microsoft.NET\Framework\\*BuildNumber*.</span></span> <span data-ttu-id="923e0-109">WMI イベントとして状態監視イベントをレポートの詳細については、次を参照してください。 [NIB: WMI ASP.NET 状態監視イベントの配信を使用した](https://msdn.microsoft.com/library/e57fea2f-610f-4432-9dd6-dd10a6c5bd10)します。</span><span class="sxs-lookup"><span data-stu-id="923e0-109">For more information about reporting health-monitoring events as WMI events, see [NIB: Using WMI to Deliver ASP.NET Health Monitoring Events](https://msdn.microsoft.com/library/e57fea2f-610f-4432-9dd6-dd10a6c5bd10).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="923e0-110">ほとんどの場合に実装されると、ASP.NET 状態監視の種類を使用することができ、内の値を指定することで、状態監視システムを制御するが、`<healthMonitoring>`構成セクション。</span><span class="sxs-lookup"><span data-stu-id="923e0-110">In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `<healthMonitoring>` configuration section.</span></span> <span data-ttu-id="923e0-111">独自のカスタム イベントとプロバイダーを作成する正常性監視の種類から派生することもできます。</span><span class="sxs-lookup"><span data-stu-id="923e0-111">You can also derive from the health-monitoring types to create your own custom events and providers.</span></span> <span data-ttu-id="923e0-112">カスタム プロバイダーの作成の例は、次を参照してください。[方法: 例を実装、正常性監視カスタム プロバイダー](https://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c)します。</span><span class="sxs-lookup"><span data-stu-id="923e0-112">For an example of creating a custom provider, see [How to: Implement the Health Monitoring Custom Provider Example](https://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="923e0-113">次の例では、ASP.NET 状態監視 Web アプリケーションの正常性イベントの結果としてによって発行された WMI イベントのコンシューマーを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="923e0-113">The following example shows how to create a consumer of WMI events issued by ASP.NET health monitoring as a result of Web-application health events.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="923e0-114"><xref:System.Web.Management.WmiWebEventProvider>クラスと監視の正常性イベントの種類は既定で構成されています。</span><span class="sxs-lookup"><span data-stu-id="923e0-114">The <xref:System.Web.Management.WmiWebEventProvider> class and the health event types to monitor are already configured by default.</span></span> <span data-ttu-id="923e0-115">行う必要があることだけでは、すべての正常性イベント ルールを定義します。</span><span class="sxs-lookup"><span data-stu-id="923e0-115">The only thing you need to do is to define the rule for all the health events.</span></span> <span data-ttu-id="923e0-116">正常性イベントにディスパッチされていないことに注意してください、<xref:System.Web.Management.WmiWebEventProvider>既定のプロバイダー。</span><span class="sxs-lookup"><span data-stu-id="923e0-116">Remember that the health events are not dispatched to the <xref:System.Web.Management.WmiWebEventProvider> provider by default.</span></span>  
  
 [!code-csharp[System.Web.Management.WmiWebEventProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WmiWebEventProvider/CS/WmiWebEventListener.cs#1)]
 [!code-vb[System.Web.Management.WmiWebEventProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WmiWebEventProvider/VB/WmiWebEventListener.vb#1)]  
  
 <span data-ttu-id="923e0-117">次の例は構成ファイルの抜粋を示す、 `<healthMonitoring>` ASP.NET で使用できるようにする構成セクション、<xref:System.Web.Management.WmiWebEventProvider>正常性監視のすべてのイベントを処理するプロバイダー。</span><span class="sxs-lookup"><span data-stu-id="923e0-117">The following example is a configuration file excerpt that shows a `<healthMonitoring>` configuration section that enables ASP.NET to use the <xref:System.Web.Management.WmiWebEventProvider> provider to process all health-monitoring events.</span></span>  
  
```  
<healthMonitoring>  
  <rules>  
    <add   
      name="Using Wmi"  
      eventName="All Events"   
      provider="WmiWebEventProvider"   
      profile="Critical"/>  
  </rules>  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c"><span data-ttu-id="923e0-118">ASP.NET 状態監視の概要</span><span class="sxs-lookup"><span data-stu-id="923e0-118">ASP.NET Health Monitoring Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c"><span data-ttu-id="923e0-119">ASP.NET 状態監視カスタム プロバイダーのサンプル</span><span class="sxs-lookup"><span data-stu-id="923e0-119">ASP.NET Health-Monitoring Custom Provider Sample</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/ab894e83-7e2f-4af8-a116-b1bff8f815b2"><span data-ttu-id="923e0-120">インストールして、ASP.NET プロバイダーの構成</span><span class="sxs-lookup"><span data-stu-id="923e0-120">Installing and Configuring ASP.NET Providers</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WmiWebEventProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WmiWebEventProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="923e0-121"><see cref="T:System.Web.Management.WmiWebEventProvider" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="923e0-121">Initializes a new instance of the <see cref="T:System.Web.Management.WmiWebEventProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="923e0-122">このコンス トラクターは、ASP.NET 状態監視システムによって内部的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="923e0-122">This constructor is used internally by the ASP.NET health-monitoring system.</span></span> <span data-ttu-id="923e0-123">インスタンスの作成に利用しないが、<xref:System.Web.Management.TraceWebEventProvider>が、クラスは、このクラスから継承する独自のプロバイダーの種類を実装するときに、このコンス トラクターに呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="923e0-123">You will never use it to create an instance of the <xref:System.Web.Management.TraceWebEventProvider> class, but you can call this constructor when you implement your own provider type that inherits from this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="wmiWebEventProvider.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="923e0-124">すべてのイベントをプロバイダーのバッファーから削除します。</span><span class="sxs-lookup"><span data-stu-id="923e0-124">Removes all events from the provider's buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="923e0-125">このメソッドが呼び出されると、すべてをプロバイダーのバッファー内のイベントはすぐに削除すると、最後からどれ時間だけが経過したに関係なく書き込みまたはイベントの数のバッファーには。</span><span class="sxs-lookup"><span data-stu-id="923e0-125">When this method is called, all the events in the provider's buffer are immediately removed, regardless of how much time has elapsed since the last write or how many events are in the buffer.</span></span> <span data-ttu-id="923e0-126">最後の書き込み時は、フラッシュ操作の時間にリセットされます。</span><span class="sxs-lookup"><span data-stu-id="923e0-126">The time of the last write is reset to the time of the flushing action.</span></span> <span data-ttu-id="923e0-127">バッファリングのメカニズムが有効でない場合は、このメソッドを呼び出しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="923e0-127">Calling this method when the buffering mechanism is not enabled has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="wmiWebEventProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="923e0-128">このプロバイダーを識別するために構成ファイルで使用する名前。</span><span class="sxs-lookup"><span data-stu-id="923e0-128">The name used in the configuration file to identify this provider.</span></span></param>
        <param name="config"><span data-ttu-id="923e0-129">構成ファイルでこのプロバイダーに割り当てられる属性を指定する <see cref="T:System.Collections.Specialized.NameValueCollection" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="923e0-129">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that specifies the attributes assigned for this provider in the configuration file.</span></span></param>
        <summary><span data-ttu-id="923e0-130">このオブジェクトの初期値を設定します。</span><span class="sxs-lookup"><span data-stu-id="923e0-130">Sets the initial values for this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="923e0-131">ASP.NET の呼び出し、<xref:System.Web.Management.WmiWebEventProvider.Initialize%2A>メソッドを呼び出して、<xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="923e0-131">ASP.NET calls the <xref:System.Web.Management.WmiWebEventProvider.Initialize%2A> method after calling the <xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A> constructor.</span></span> <span data-ttu-id="923e0-132">初期化するためにこのメソッドは、<xref:System.Web.Management.WmiWebEventProvider>構成設定と構成ファイルで指定された名前を持つクラス。</span><span class="sxs-lookup"><span data-stu-id="923e0-132">This method is called to initialize the <xref:System.Web.Management.WmiWebEventProvider> class with the configuration settings and name specified in the configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEvent(class System.Web.Management.WebBaseEvent eventRaised) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEvent (eventRaised As WebBaseEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ProcessEvent(System::Web::Management::WebBaseEvent ^ eventRaised);" />
      <MemberSignature Language="F#" Value="override this.ProcessEvent : System.Web.Management.WebBaseEvent -&gt; unit" Usage="wmiWebEventProvider.ProcessEvent eventRaised" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventRaised" Type="System.Web.Management.WebBaseEvent" />
      </Parameters>
      <Docs>
        <param name="eventRaised"><span data-ttu-id="923e0-133">処理対象の <see cref="T:System.Web.Management.WebBaseEvent" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="923e0-133">The <see cref="T:System.Web.Management.WebBaseEvent" /> object to process.</span></span></param>
        <summary><span data-ttu-id="923e0-134">プロバイダーに渡されたイベントを処理します。</span><span class="sxs-lookup"><span data-stu-id="923e0-134">Processes the event passed to the provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="923e0-135">これを呼び出す ASP.NET 状態監視イベントの処理を開始するメソッドです。</span><span class="sxs-lookup"><span data-stu-id="923e0-135">This is the method that ASP.NET health monitoring calls to start the processing of the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="923e0-136">イベントが発生しませんでした。</span><span class="sxs-lookup"><span data-stu-id="923e0-136">The event could not be raised.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public override void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Shutdown();" />
      <MemberSignature Language="F#" Value="override this.Shutdown : unit -&gt; unit" Usage="wmiWebEventProvider.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="923e0-137">プロバイダーのシャットダウンに関連するタスクを実行します。</span><span class="sxs-lookup"><span data-stu-id="923e0-137">Performs tasks associated with shutting down the provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="923e0-138">ASP.NET の呼び出し、<xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A>メソッドと Web アプリケーションをホストするアプリケーション ドメインを終了します。</span><span class="sxs-lookup"><span data-stu-id="923e0-138">ASP.NET calls the <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> method when the application domain that hosts the Web application terminates.</span></span> <span data-ttu-id="923e0-139">メソッドは、アプリケーションを正常に終了するためのタスクを実行します。</span><span class="sxs-lookup"><span data-stu-id="923e0-139">The method is called to perform tasks that will allow the application to end gracefully.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>