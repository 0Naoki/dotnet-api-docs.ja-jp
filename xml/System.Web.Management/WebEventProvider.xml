<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WebEventProvider.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5552d2ee41fd9d4b1639131e902f83c17fac20224.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">552d2ee41fd9d4b1639131e902f83c17fac20224</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Management.WebEventProvider">
          <source>Provides the base class for non buffered event providers.</source>
          <target state="translated">非バッファー イベント プロバイダーの基本クラスを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WebEventProvider">
          <source>ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</source>
          <target state="translated">配置済みの Web アプリケーションの管理を運用環境と運用スタッフは、ASP.NET の状態監視できます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WebEventProvider">
          <source>The <ph id="ph1">&lt;xref:System.Web.Management&gt;</ph> namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Management&gt;</ph>名前空間には、アプリケーションの正常性状態のデータおよびプロバイダーの種類は、このデータ処理をパッケージ化する正常性イベントの種類が含まれています。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WebEventProvider">
          <source>It also contains supporting types that help during the management of health events.</source>
          <target state="translated">正常性イベントの管理を支援するサポート型も含まれています。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WebEventProvider">
          <source>If you want to customize the health-event processing, you can derive from the <ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider&gt;</ph> class to create your own custom provider.</source>
          <target state="translated">派生できます正常性イベントの処理をカスタマイズする場合、<ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider&gt;</ph>独自のカスタム プロバイダーを作成するクラス。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WebEventProvider">
          <source>In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the <ph id="ph1">`healthMonitoring`</ph> configuration section.</source>
          <target state="translated">ほとんどの場合はできる実装されると、ASP.NET の稼働状況の監視の種類を使用して、内の値を指定することで、稼働状況の監視システムを制御する、<ph id="ph1">`healthMonitoring`</ph>構成セクション。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WebEventProvider">
          <source>You can also derive from the health-monitoring types to create your own custom events and providers.</source>
          <target state="translated">独自のカスタム イベントおよびプロバイダーを作成する正常性の監視の種類からも派生できます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WebEventProvider">
          <source>For an example of deriving from the <ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider&gt;</ph> class, see the example provided in this topic.</source>
          <target state="translated">派生する例については、<ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider&gt;</ph>クラスのこのトピックで例を参照してください。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WebEventProvider">
          <source>The following code example shows how to derive from the <ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider&gt;</ph> class to create a custom provider that writes the configured events to a local file for which appropriate access rights must be granted.</source>
          <target state="translated">次のコード例から派生する方法を示しています、<ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider&gt;</ph>を適切なアクセス権を付与する必要がローカル ファイルに構成されたイベントの書き込みを行うカスタム プロバイダーを作成するクラス。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WebEventProvider">
          <source>This custom provider example is simple and its main intent is to give you as developer full control of its basic mechanisms.</source>
          <target state="translated">このカスタム プロバイダーの例は、単純なと主な目的は、開発者が基本的な機構を完全に制御できるようにすることができます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WebEventProvider">
          <source>In a real-world scenario, you could use this provider and especially the example buffered provider available at <ph id="ph1">&lt;xref:System.Web.Management.BufferedWebEventProvider&gt;</ph>, as a preliminary probe into the behavior of an application.</source>
          <target state="translated">現実のシナリオでは、このプロバイダーと特に、バッファー内のプロバイダーの例で使用可能なを使用でした<ph id="ph1">&lt;xref:System.Web.Management.BufferedWebEventProvider&gt;</ph>アプリケーションの動作に予備プローブとします。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WebEventProvider">
          <source>This can help you during the design stage to gain an understanding of the information available; then later you can direct this information to a more complex provider.</source>
          <target state="translated">使用可能な情報を把握する設計段階で役立ちます後で調べることより複雑なプロバイダーにこの情報をします。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Management.WebEventProvider">
          <source>The following configuration file excerpt shows a <ph id="ph1">`healthMonitoring`</ph> section configuration that enables ASP.NET to use the custom provider defined above to process all health-monitoring events.</source>
          <target state="translated">次の構成ファイルの抜粋、<ph id="ph1">`healthMonitoring`</ph>セクションの構成を上記で定義されたすべての稼働状況の監視イベントを処理するカスタム プロバイダーを使用する ASP.NET を有効にします。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Web.Management.WebEventProvider.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Management.WebEventProvider" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Management.WebEventProvider" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider.%23ctor%2A&gt;</ph> constructor is not intended to be used directly from your code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider.%23ctor%2A&gt;</ph>コンス トラクターは、コードから直接使用するものではありません。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.#ctor">
          <source>It is called by ASP.NET.</source>
          <target state="translated">ASP.NET によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.#ctor">
          <source>You can call the <ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider.%23ctor%2A&gt;</ph> constructor when deriving from the <ph id="ph2">&lt;xref:System.Web.Management.WebEventProvider&gt;</ph> class.</source>
          <target state="translated">呼び出すことができます、<ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider.%23ctor%2A&gt;</ph>コンス トラクターから派生している場合、<ph id="ph2">&lt;xref:System.Web.Management.WebEventProvider&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.#ctor">
          <source>The following code example shows how to use this constructor in a custom event provider.</source>
          <target state="translated">次のコード例では、カスタム イベント プロバイダーでこのコンス トラクターを使用する方法を示します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.Management.WebEventProvider.Flush">
          <source>Moves the events from the provider's buffer into the event log.</source>
          <target state="translated">イベントをプロバイダーのバッファーからイベント ログに移動します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.Flush">
          <source>When this method is called, all the events in the buffer are immediately moved from the buffer to the event log, regardless of how much time has elapsed since last write or how many events are in the buffer.</source>
          <target state="translated">このメソッドが呼び出されると、バッファー内の最後の書き込みまたはイベントの数からバッファー内のイベントがバッファーからどれだけ時間に関係なく、イベント ログにすぐに移動したすべての経過します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.Flush">
          <source>The time of the last write is reset to the time of the flushing action.</source>
          <target state="translated">最後の書き込みの時間は、フラッシュ操作の時間にリセットされます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.Flush">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider.Flush%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider.Flush%2A&gt;</ph> メソッドを使用するコード例を次に示します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.Management.WebBaseEvent" /&gt;</ph> object to process.</source>
          <target state="translated">処理対象の <ph id="ph1">&lt;see cref="T:System.Web.Management.WebBaseEvent" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)">
          <source>Processes the event passed to the provider.</source>
          <target state="translated">プロバイダーに渡されたイベントを処理します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)">
          <source>This is the method that ASP.NET health monitoring calls to start processing the event.</source>
          <target state="translated">これは、イベントの処理を開始するを呼び出す ASP.NET 正常性の監視方法です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)">
          <source>The following code example shows how to implement the <ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider.ProcessEvent%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例は、<ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider.ProcessEvent%2A&gt;</ph> メソッドを実装する方法を示しています。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)">
          <source>This method appends the customized string representation of the event to a specific log file.</source>
          <target state="translated">このメソッドは、特定のログ ファイルをイベントのカスタマイズした文字列形式を追加します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Web.Management.WebEventProvider.Shutdown">
          <source>Performs tasks associated with shutting down the provider.</source>
          <target state="translated">プロバイダーのシャットダウンに関連するタスクを実行します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.Shutdown">
          <source>ASP.NET calls the <ph id="ph1">&lt;xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A&gt;</ph> method when the application domain hosting the Web application terminates.</source>
          <target state="translated">ASP.NET の呼び出し、<ph id="ph1">&lt;xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A&gt;</ph>メソッドは、Web アプリケーションをホストしているアプリケーション ドメインが終了するとします。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.Shutdown">
          <source>The method is called to perform tasks that will allow the application to end gracefully, such as closing resources.</source>
          <target state="translated">メソッドが呼び出されて、リソースを閉じるなどを正常に終了するアプリケーションを許可するタスクを実行します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Management.WebEventProvider.Shutdown">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider.Shutdown%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Management.WebEventProvider.Shutdown%2A&gt;</ph> メソッドを使用するコード例を次に示します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>