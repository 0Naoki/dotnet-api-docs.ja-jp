<Type Name="WebEventProvider" FullName="System.Web.Management.WebEventProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="552d2ee41fd9d4b1639131e902f83c17fac20224" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WebEventProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebEventProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebEventProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebEventProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebEventProvider abstract : System::Configuration::Provider::ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6a3e2-101">非バッファー イベント プロバイダーの基本クラスを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6a3e2-101">Provides the base class for non buffered event providers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3e2-102">配置済みの Web アプリケーションの管理を運用環境と運用スタッフは、ASP.NET の状態監視できます。</span><span class="sxs-lookup"><span data-stu-id="6a3e2-102">ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</span></span> <span data-ttu-id="6a3e2-103"><xref:System.Web.Management>名前空間には、アプリケーションの正常性状態のデータおよびプロバイダーの種類は、このデータ処理をパッケージ化する正常性イベントの種類が含まれています。</span><span class="sxs-lookup"><span data-stu-id="6a3e2-103">The <xref:System.Web.Management> namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data.</span></span> <span data-ttu-id="6a3e2-104">正常性イベントの管理を支援するサポート型も含まれています。</span><span class="sxs-lookup"><span data-stu-id="6a3e2-104">It also contains supporting types that help during the management of health events.</span></span>  
  
 <span data-ttu-id="6a3e2-105">派生できます正常性イベントの処理をカスタマイズする場合、<xref:System.Web.Management.WebEventProvider>独自のカスタム プロバイダーを作成するクラス。</span><span class="sxs-lookup"><span data-stu-id="6a3e2-105">If you want to customize the health-event processing, you can derive from the <xref:System.Web.Management.WebEventProvider> class to create your own custom provider.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a3e2-106">ほとんどの場合はできる実装されると、ASP.NET の稼働状況の監視の種類を使用して、内の値を指定することで、稼働状況の監視システムを制御する、`healthMonitoring`構成セクション。</span><span class="sxs-lookup"><span data-stu-id="6a3e2-106">In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section.</span></span> <span data-ttu-id="6a3e2-107">独自のカスタム イベントおよびプロバイダーを作成する正常性の監視の種類からも派生できます。</span><span class="sxs-lookup"><span data-stu-id="6a3e2-107">You can also derive from the health-monitoring types to create your own custom events and providers.</span></span> <span data-ttu-id="6a3e2-108">派生する例については、<xref:System.Web.Management.WebEventProvider>クラスのこのトピックで例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6a3e2-108">For an example of deriving from the <xref:System.Web.Management.WebEventProvider> class, see the example provided in this topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a3e2-109">次のコード例から派生する方法を示しています、<xref:System.Web.Management.WebEventProvider>を適切なアクセス権を付与する必要がローカル ファイルに構成されたイベントの書き込みを行うカスタム プロバイダーを作成するクラス。</span><span class="sxs-lookup"><span data-stu-id="6a3e2-109">The following code example shows how to derive from the <xref:System.Web.Management.WebEventProvider> class to create a custom provider that writes the configured events to a local file for which appropriate access rights must be granted.</span></span> <span data-ttu-id="6a3e2-110">このカスタム プロバイダーの例は、単純なと主な目的は、開発者が基本的な機構を完全に制御できるようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="6a3e2-110">This custom provider example is simple and its main intent is to give you as developer full control of its basic mechanisms.</span></span> <span data-ttu-id="6a3e2-111">現実のシナリオでは、このプロバイダーと特に、バッファー内のプロバイダーの例で使用可能なを使用でした<xref:System.Web.Management.BufferedWebEventProvider>アプリケーションの動作に予備プローブとします。</span><span class="sxs-lookup"><span data-stu-id="6a3e2-111">In a real-world scenario, you could use this provider and especially the example buffered provider available at <xref:System.Web.Management.BufferedWebEventProvider>, as a preliminary probe into the behavior of an application.</span></span> <span data-ttu-id="6a3e2-112">使用可能な情報を把握する設計段階で役立ちます後で調べることより複雑なプロバイダーにこの情報をします。</span><span class="sxs-lookup"><span data-stu-id="6a3e2-112">This can help you during the design stage to gain an understanding of the information available; then later you can direct this information to a more complex provider.</span></span>  
  
 <span data-ttu-id="6a3e2-113">次の構成ファイルの抜粋、`healthMonitoring`セクションの構成を上記で定義されたすべての稼働状況の監視イベントを処理するカスタム プロバイダーを使用する ASP.NET を有効にします。</span><span class="sxs-lookup"><span data-stu-id="6a3e2-113">The following configuration file excerpt shows a `healthMonitoring` section configuration that enables ASP.NET to use the custom provider defined above to process all health-monitoring events.</span></span>  
  
```  
<healthMonitoring   
  heartBeatInterval="0"   
  enabled="true">  
  
    <providers>  
  
      <add name="SampleWebEventProvider"   
        type="SamplesAspNet.SampleEventProvider,webeventprovider, Version=1.0.1773.33989, Culture=neutral, PublicKeyToken=cf85aa6c978d9dea, processorArchitecture=MSIL" />  
  
    </providers>  
  
    <rules>  
  
      <rule   
        name="Custom Event Provider"  
        eventName="All Events"  
        provider="SampleWebEventProvider"  
        profile="Default" />  
    </rules>  
  
</healthMonitoring>  
```  
  
 [!code-csharp[System.Web.Management.WebEventProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#1)]
 [!code-vb[System.Web.Management.WebEventProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebEventProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebEventProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a3e2-114">
            <see cref="T:System.Web.Management.WebEventProvider" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3e2-114">Initializes a new instance of the <see cref="T:System.Web.Management.WebEventProvider" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3e2-115"><xref:System.Web.Management.WebEventProvider.%23ctor%2A>コンス トラクターは、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="6a3e2-115">The <xref:System.Web.Management.WebEventProvider.%23ctor%2A> constructor is not intended to be used directly from your code.</span></span> <span data-ttu-id="6a3e2-116">ASP.NET によって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="6a3e2-116">It is called by ASP.NET.</span></span> <span data-ttu-id="6a3e2-117">呼び出すことができます、<xref:System.Web.Management.WebEventProvider.%23ctor%2A>コンス トラクターから派生している場合、<xref:System.Web.Management.WebEventProvider>クラスです。</span><span class="sxs-lookup"><span data-stu-id="6a3e2-117">You can call the <xref:System.Web.Management.WebEventProvider.%23ctor%2A> constructor when deriving from the <xref:System.Web.Management.WebEventProvider> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a3e2-118">次のコード例では、カスタム イベント プロバイダーでこのコンス トラクターを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="6a3e2-118">The following code example shows how to use this constructor in a custom event provider.</span></span>  
  
 [!code-csharp[System.Web.Management.WebEventProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#2)]
 [!code-vb[System.Web.Management.WebEventProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public abstract void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventProvider.Flush" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a3e2-119">イベントをプロバイダーのバッファーからイベント ログに移動します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3e2-119">Moves the events from the provider's buffer into the event log.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3e2-120">このメソッドが呼び出されると、バッファー内の最後の書き込みまたはイベントの数からバッファー内のイベントがバッファーからどれだけ時間に関係なく、イベント ログにすぐに移動したすべての経過します。</span><span class="sxs-lookup"><span data-stu-id="6a3e2-120">When this method is called, all the events in the buffer are immediately moved from the buffer to the event log, regardless of how much time has elapsed since last write or how many events are in the buffer.</span></span> <span data-ttu-id="6a3e2-121">最後の書き込みの時間は、フラッシュ操作の時間にリセットされます。</span><span class="sxs-lookup"><span data-stu-id="6a3e2-121">The time of the last write is reset to the time of the flushing action.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a3e2-122"><xref:System.Web.Management.WebEventProvider.Flush%2A> メソッドを使用するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="6a3e2-122">The following code example shows how to use the <xref:System.Web.Management.WebEventProvider.Flush%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Management.WebEventProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#3)]
 [!code-vb[System.Web.Management.WebEventProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="public abstract void ProcessEvent (System.Web.Management.WebBaseEvent raisedEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessEvent(class System.Web.Management.WebBaseEvent raisedEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ProcessEvent (raisedEvent As WebBaseEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ProcessEvent(System::Web::Management::WebBaseEvent ^ raisedEvent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="raisedEvent" Type="System.Web.Management.WebBaseEvent" />
      </Parameters>
      <Docs>
        <param name="raisedEvent">
          <span data-ttu-id="6a3e2-123">処理対象の <see cref="T:System.Web.Management.WebBaseEvent" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3e2-123">The <see cref="T:System.Web.Management.WebBaseEvent" /> object to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a3e2-124">プロバイダーに渡されたイベントを処理します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3e2-124">Processes the event passed to the provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3e2-125">これは、イベントの処理を開始するを呼び出す ASP.NET 正常性の監視方法です。</span><span class="sxs-lookup"><span data-stu-id="6a3e2-125">This is the method that ASP.NET health monitoring calls to start processing the event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a3e2-126">次のコード例は、<xref:System.Web.Management.WebEventProvider.ProcessEvent%2A> メソッドを実装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6a3e2-126">The following code example shows how to implement the <xref:System.Web.Management.WebEventProvider.ProcessEvent%2A> method.</span></span> <span data-ttu-id="6a3e2-127">このメソッドは、特定のログ ファイルをイベントのカスタマイズした文字列形式を追加します。</span><span class="sxs-lookup"><span data-stu-id="6a3e2-127">This method appends the customized string representation of the event to a specific log file.</span></span>  
  
 [!code-csharp[System.Web.Management.WebEventProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#5)]
 [!code-vb[System.Web.Management.WebEventProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public abstract void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventProvider.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Shutdown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a3e2-128">プロバイダーのシャットダウンに関連するタスクを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3e2-128">Performs tasks associated with shutting down the provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3e2-129">ASP.NET の呼び出し、<xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A>メソッドは、Web アプリケーションをホストしているアプリケーション ドメインが終了するとします。</span><span class="sxs-lookup"><span data-stu-id="6a3e2-129">ASP.NET calls the <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> method when the application domain hosting the Web application terminates.</span></span> <span data-ttu-id="6a3e2-130">メソッドが呼び出されて、リソースを閉じるなどを正常に終了するアプリケーションを許可するタスクを実行します。</span><span class="sxs-lookup"><span data-stu-id="6a3e2-130">The method is called to perform tasks that will allow the application to end gracefully, such as closing resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a3e2-131"><xref:System.Web.Management.WebEventProvider.Shutdown%2A> メソッドを使用するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="6a3e2-131">The following code example shows how to use the <xref:System.Web.Management.WebEventProvider.Shutdown%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Management.WebEventProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#4)]
 [!code-vb[System.Web.Management.WebEventProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>