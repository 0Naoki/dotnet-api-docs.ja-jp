<Type Name="DbSkipExpression" FullName="System.Data.Common.CommandTrees.DbSkipExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="218eaeece4103070e13c81d620f39fa702630d21" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30378596" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DbSkipExpression : System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DbSkipExpression extends System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbSkipExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DbSkipExpression&#xA;Inherits DbExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbSkipExpression sealed : System::Data::Common::CommandTrees::DbExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>入力セット内の指定された数の要素をスキップします。 <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> は、入力コレクションが並べ替えキーで指定された順に並べ替えられた後でのみ使用できます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Common.CommandTrees.DbSkipExpression> を使用するには、入力コレクションが既に並べ替えられている必要があります。 並べ替え順序は、<xref:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder%2A> プロパティとして表されます。 <xref:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder%2A> は、<xref:System.Data.Common.CommandTrees.DbSortClause> オブジェクトの一覧です。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class System.Data.Common.CommandTrees.DbExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbSkipExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As DbExpressionVisitor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(System::Data::Common::CommandTrees::DbExpressionVisitor ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">
          <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> のインスタンス。</param>
        <summary>結果値を生成しない式のビジター パターンを実装します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="visitor" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public override TResultType Accept&lt;TResultType&gt; (System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResultType Accept&lt;TResultType&gt;(class System.Data.Common.CommandTrees.DbExpressionVisitor`1&lt;!!TResultType&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbSkipExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResultType) (visitor As DbExpressionVisitor(Of TResultType)) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; override TResultType Accept(System::Data::Common::CommandTrees::DbExpressionVisitor&lt;TResultType&gt; ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResultType">によって生成される結果の種類<c>ビジター</c>です。</typeparam>
        <param name="visitor">特定の型の結果値を生成する、型指定された <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> のインスタンス。</param>
        <summary>特定の型の結果値を生成する式のビジター パターンを実装します。</summary>
        <returns>
          <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> によって生成された、特定の型の結果値。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="visitor" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Count" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbSkipExpression.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpression ^ Count { System::Data::Common::CommandTrees::DbExpression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>入力コレクション内でスキップする要素の数を指定する式を取得または設定します。</summary>
        <value>入力コレクション内でスキップする要素の数を指定する式。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">式は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">式が <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> のコマンド ツリーに関連付けられていません (<see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> または <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> ではありません)。  
  
 または、式の結果型が 64 ビット整数型に等しくないか 64 ビット整数型に昇格できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpressionBinding Input { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpressionBinding Input" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbSkipExpression.Input" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Input As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpressionBinding ^ Input { System::Data::Common::CommandTrees::DbExpressionBinding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>入力セットを指定する <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> を取得します。</summary>
        <value>入力セットを指定する <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortOrder">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbSortClause&gt; SortOrder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; SortOrder" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortOrder As IList(Of DbSortClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ SortOrder { System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbSortClause&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>並べ替え順序を定義する <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> リストを取得します。</summary>
        <value>並べ替え順序を定義する <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> リスト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Common.CommandTrees.DbSkipExpression> を使用するには、入力コレクションが既に並べ替えられている必要があります。 並べ替え順序は、<xref:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder%2A> プロパティとして表されます。 <xref:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder%2A> は、<xref:System.Data.Common.CommandTrees.DbSortClause> オブジェクトの一覧です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>