<Type Name="DbBinaryExpression" FullName="System.Data.Common.CommandTrees.DbBinaryExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cc4a7181427f546aa8caf0f27a050e2daf37d852" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70717787" /></Metadata><TypeSignature Language="C#" Value="public abstract class DbBinaryExpression : System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbBinaryExpression extends System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbBinaryExpression" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbBinaryExpression&#xA;Inherits DbExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbBinaryExpression abstract : System::Data::Common::CommandTrees::DbExpression" />
  <TypeSignature Language="F#" Value="type DbBinaryExpression = class&#xA;    inherit DbExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="af806-101">2 つの式オペランドを受け取る式で求められる基本的な機能を実装します。</span><span class="sxs-lookup"><span data-stu-id="af806-101">Implements the basic functionality required by expressions that accept two expression operands.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Left" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbBinaryExpression.Left" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Left As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpression ^ Left { System::Data::Common::CommandTrees::DbExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Left : System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.DbBinaryExpression.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="af806-102">左辺の引数を定義する <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="af806-102">Gets or sets the <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the left argument.</span></span></summary>
        <value><span data-ttu-id="af806-103">左辺の引数を定義する <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span><span class="sxs-lookup"><span data-stu-id="af806-103">The <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the left argument.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af806-104"><xref:System.Data.Common.CommandTrees.DbBinaryExpression.Left%2A> プロパティが設定されている場合、派生した式の型で行われる型チェックがより厳密になることがあります。</span><span class="sxs-lookup"><span data-stu-id="af806-104">Derived expression types might perform stricter type checks when the <xref:System.Data.Common.CommandTrees.DbBinaryExpression.Left%2A> property is set.</span></span> <span data-ttu-id="af806-105">たとえば、<xref:System.Data.Common.CommandTrees.DbUnionAllExpression> の左辺の式の結果型はコレクション型である必要がありますが、<xref:System.Data.Common.CommandTrees.DbAndExpression> の結果型は Boolean である必要があります。</span><span class="sxs-lookup"><span data-stu-id="af806-105">For example, <xref:System.Data.Common.CommandTrees.DbUnionAllExpression> requires that its left expression has a collection result type, while <xref:System.Data.Common.CommandTrees.DbAndExpression> requires a Boolean result type.</span></span> <span data-ttu-id="af806-106">通常、派生した式の型では、現在の値の結果型に等しくないかこの型に昇格できないような結果型を持つ式を、<xref:System.Data.Common.CommandTrees.DbBinaryExpression.Left%2A> に設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="af806-106">Typically, derived expression types will not allow <xref:System.Data.Common.CommandTrees.DbBinaryExpression.Left%2A> to be set to an expression with a result type that is not equal or promotable to the result type of the current value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="af806-107">式は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="af806-107">The expression is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="af806-108">式が <see cref="T:System.Data.Common.CommandTrees.DbBinaryExpression" /> のコマンド ツリーに関連付けられていません。</span><span class="sxs-lookup"><span data-stu-id="af806-108">The expression is not associated with the command tree of the <see cref="T:System.Data.Common.CommandTrees.DbBinaryExpression" />,</span></span> 
<span data-ttu-id="af806-109">または、式の結果型が、左辺の引数として必要な型に等しくないかこの型に昇格できません。</span><span class="sxs-lookup"><span data-stu-id="af806-109">or its result type is not equal or promotable to the required type for the left argument.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Right { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Right" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbBinaryExpression.Right" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Right As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpression ^ Right { System::Data::Common::CommandTrees::DbExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Right : System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.DbBinaryExpression.Right" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="af806-110">右辺の引数を定義する <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="af806-110">Gets or sets the <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the right argument.</span></span></summary>
        <value><span data-ttu-id="af806-111">右辺の引数を定義する <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span><span class="sxs-lookup"><span data-stu-id="af806-111">The <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the right argument.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af806-112"><xref:System.Data.Common.CommandTrees.DbBinaryExpression.Right%2A> プロパティが設定されている場合、派生した式の型で行われる型チェックがより厳密になることがあります。</span><span class="sxs-lookup"><span data-stu-id="af806-112">Derived expression types might perform stricter type checks when the <xref:System.Data.Common.CommandTrees.DbBinaryExpression.Right%2A> property is set.</span></span> <span data-ttu-id="af806-113">たとえば、<xref:System.Data.Common.CommandTrees.DbUnionAllExpression> の右辺の式の結果型はコレクション型である必要がありますが、<xref:System.Data.Common.CommandTrees.DbAndExpression> の結果型は Boolean である必要があります。</span><span class="sxs-lookup"><span data-stu-id="af806-113">For example, <xref:System.Data.Common.CommandTrees.DbUnionAllExpression> requires that its right expression has a collection result type, while <xref:System.Data.Common.CommandTrees.DbAndExpression> requires a Boolean result type.</span></span> <span data-ttu-id="af806-114">通常、派生した式の型では、現在の値の結果型に等しくないかこの型に昇格できないような結果型を持つ式を、<xref:System.Data.Common.CommandTrees.DbBinaryExpression.Right%2A> に設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="af806-114">Typically, derived expression types will not allow <xref:System.Data.Common.CommandTrees.DbBinaryExpression.Right%2A> to be set to an expression with a result type that is not equal or promotable to the result type of the current value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="af806-115">式は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="af806-115">The expression is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="af806-116">式が <see cref="T:System.Data.Common.CommandTrees.DbBinaryExpression" /> のコマンド ツリーに関連付けられていません。</span><span class="sxs-lookup"><span data-stu-id="af806-116">The expression is not associated with the command tree of the <see cref="T:System.Data.Common.CommandTrees.DbBinaryExpression" />,</span></span> 
<span data-ttu-id="af806-117">または、式の結果型が、右辺の引数として必要な型に等しくないかこの型に昇格できません。</span><span class="sxs-lookup"><span data-stu-id="af806-117">or its result type is not equal or promotable to the required type for the right argument.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
