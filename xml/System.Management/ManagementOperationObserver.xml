<Type Name="ManagementOperationObserver" FullName="System.Management.ManagementOperationObserver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="76b97db3cf852939e3a53c0a57e70a022b68667b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37648591" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ManagementOperationObserver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementOperationObserver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Management.ManagementOperationObserver" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementOperationObserver" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementOperationObserver" />
  <TypeSignature Language="F#" Value="type ManagementOperationObserver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>非同期操作の管理と管理情報の処理、および非同期的に受け取ったイベントの処理を行います。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、非同期のインスタンスの列挙を実行する方法を示します。 この例では、<xref:System.Management.ManagementOperationObserver>管理情報とイベントを非同期的に処理するクラス。  
  
 [!code-csharp[wminet_ManagementOperationObserver#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementOperationObserver/cs/ManagementOperationObserver.cs#1)]
 [!code-vb[wminet_ManagementOperationObserver#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementOperationObserver/vb/ManagementOperationObserver.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementOperationObserver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementOperationObserver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementOperationObserver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Management.ManagementOperationObserver" /> クラスの新しいインスタンスを初期化します。 これは既定のコンストラクターです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework セキュリティ  
 直前の呼び出し元に対する完全な信頼。 このメンバーは、部分的に信頼されているコードから使用することはできません。 詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)します。  
  
   
  
## Examples  
 次の例では、非同期のインスタンスの列挙を実行する方法を示します。 この例では、<xref:System.Management.ManagementOperationObserver>管理情報とイベントを非同期的に処理するクラス。  
  
 [!code-csharp[wminet_ManagementOperationObserver#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementOperationObserver/cs/ManagementOperationObserver.cs#1)]
 [!code-vb[wminet_ManagementOperationObserver#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementOperationObserver/vb/ManagementOperationObserver.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementOperationObserver.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberSignature Language="F#" Value="member this.Cancel : unit -&gt; unit" Usage="managementOperationObserver.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべての保留状態の操作をキャンセルします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework セキュリティ  
 直前の呼び出し元に対する完全な信頼。 このメンバーは、部分的に信頼されているコードから使用することはできません。 詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event System.Management.CompletedEventHandler Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.CompletedEventHandler Completed" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementOperationObserver.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Event Completed As CompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::CompletedEventHandler ^ Completed;" />
      <MemberSignature Language="F#" Value="member this.Completed : System.Management.CompletedEventHandler " Usage="member this.Completed : System.Management.CompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.CompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a>イベント データ  
 イベント ハンドラーが型の引数を受け取る<xref:System.Management.CompletedEventArgs>このイベントに関連するデータを格納しています。 次<xref:System.Management.CompletedEventArgs>プロパティは、このイベントに固有の情報を提供します。  
  
|プロパティ|説明|  
|--------------|-----------------|  
|<xref:System.Management.ManagementEventArgs.Context%2A> (から継承された<xref:System.Management.ManagementEventArgs>)|イベントを発生させた操作からエコー バックされた操作コンテキストを取得します。|  
|<xref:System.Management.CompletedEventArgs.Status%2A>|操作の完了ステータスを取得します。|  
|<xref:System.Management.CompletedEventArgs.StatusObject%2A>|取得または WMI オブジェクト内で追加のステータス情報を設定します。 null でもかまいません。|  
  
## <a name="net-framework-security"></a>.NET Framework セキュリティ  
 直前の呼び出し元に対する完全な信頼。 このメンバーは、部分的に信頼されているコードから使用することはできません。 詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)します。  
  
   
  
## Examples  
 次の例では、非同期のインスタンスの列挙を実行する方法を示します。 この例では、<xref:System.Management.ManagementOperationObserver>管理情報とイベントを非同期的に処理するクラス。  
  
 [!code-csharp[wminet_ManagementOperationObserver_Completed#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementOperationObserver_Completed/cs/ManagementOperationObserver_Completed.cs#1)]
 [!code-vb[wminet_ManagementOperationObserver_Completed#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementOperationObserver_Completed/vb/ManagementOperationObserver_Completed.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectPut">
      <MemberSignature Language="C#" Value="public event System.Management.ObjectPutEventHandler ObjectPut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.ObjectPutEventHandler ObjectPut" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementOperationObserver.ObjectPut" />
      <MemberSignature Language="VB.NET" Value="Public Event ObjectPut As ObjectPutEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::ObjectPutEventHandler ^ ObjectPut;" />
      <MemberSignature Language="F#" Value="member this.ObjectPut : System.Management.ObjectPutEventHandler " Usage="member this.ObjectPut : System.Management.ObjectPutEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ObjectPutEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オブジェクトが正常にコミットされたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a>イベント データ  
 イベント ハンドラーが型の引数を受け取る<xref:System.Management.ObjectPutEventArgs>このイベントに関連するデータを格納しています。 次<xref:System.Management.ObjectPutEventArgs>プロパティは、このイベントに固有の情報を提供します。  
  
|プロパティ|説明|  
|--------------|-----------------|  
|<xref:System.Management.ManagementEventArgs.Context%2A> (から継承された<xref:System.Management.ManagementEventArgs>)|イベントを発生させた操作からエコー バックされた操作コンテキストを取得します。|  
|<xref:System.Management.ObjectPutEventArgs.Path%2A>|出力されたオブジェクトの ID を取得します。|  
  
## <a name="net-framework-security"></a>.NET Framework セキュリティ  
 直前の呼び出し元に対する完全な信頼。 このメンバーは、部分的に信頼されているコードから使用することはできません。 詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectReady">
      <MemberSignature Language="C#" Value="public event System.Management.ObjectReadyEventHandler ObjectReady;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.ObjectReadyEventHandler ObjectReady" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementOperationObserver.ObjectReady" />
      <MemberSignature Language="VB.NET" Value="Public Event ObjectReady As ObjectReadyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::ObjectReadyEventHandler ^ ObjectReady;" />
      <MemberSignature Language="F#" Value="member this.ObjectReady : System.Management.ObjectReadyEventHandler " Usage="member this.ObjectReady : System.Management.ObjectReadyEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ObjectReadyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しいオブジェクトを使用できるときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a>イベント データ  
 イベント ハンドラーが型の引数を受け取る<xref:System.Management.ObjectReadyEventArgs>このイベントに関連するデータを格納しています。 次<xref:System.Management.ObjectReadyEventArgs>プロパティは、このイベントに固有の情報を提供します。  
  
|プロパティ|説明|  
|--------------|-----------------|  
|<xref:System.Management.ManagementEventArgs.Context%2A> (から継承された<xref:System.Management.ManagementEventArgs>)|イベントを発生させた操作からエコー バックされた操作コンテキストを取得します。|  
|<xref:System.Management.ObjectReadyEventArgs.NewObject%2A>|新しく返されたオブジェクトを取得します。|  
  
## <a name="net-framework-security"></a>.NET Framework セキュリティ  
 直前の呼び出し元に対する完全な信頼。 このメンバーは、部分的に信頼されているコードから使用することはできません。 詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)します。  
  
   
  
## Examples  
 次の例では、非同期のインスタンスの列挙を実行する方法を示します。 この例では、<xref:System.Management.ManagementOperationObserver>管理情報とイベントを非同期的に処理するクラス。  
  
 [!code-csharp[wminet_ManagementOperationObserver_ObjectReady#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementOperationObserver_ObjectReady/cs/ManagementOperationObserver_ObjectReady.cs#1)]
 [!code-vb[wminet_ManagementOperationObserver_ObjectReady#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementOperationObserver_ObjectReady/vb/ManagementOperationObserver_ObjectReady.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Progress">
      <MemberSignature Language="C#" Value="public event System.Management.ProgressEventHandler Progress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.ProgressEventHandler Progress" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementOperationObserver.Progress" />
      <MemberSignature Language="VB.NET" Value="Public Event Progress As ProgressEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::ProgressEventHandler ^ Progress;" />
      <MemberSignature Language="F#" Value="member this.Progress : System.Management.ProgressEventHandler " Usage="member this.Progress : System.Management.ProgressEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ProgressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>継続中の操作の進行状況を示すために発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a>イベント データ  
 イベント ハンドラーが型の引数を受け取る<xref:System.Management.ProgressEventArgs>このイベントに関連するデータを格納しています。 次<xref:System.Management.ProgressEventArgs>プロパティは、このイベントに固有の情報を提供します。  
  
|プロパティ|説明|  
|--------------|-----------------|  
|<xref:System.Management.ManagementEventArgs.Context%2A> (から継承された<xref:System.Management.ManagementEventArgs>)|イベントを発生させた操作からエコー バックされた操作コンテキストを取得します。|  
|<xref:System.Management.ProgressEventArgs.Current%2A>|操作によって実行された現在の作業量を取得します。 これは常に <xref:System.Management.ProgressEventArgs.UpperBound%2A> 以下です。|  
|<xref:System.Management.ProgressEventArgs.Message%2A>|操作の進行状況に関するオプションの追加情報を取得または設定します。|  
|<xref:System.Management.ProgressEventArgs.UpperBound%2A>|操作による実行を必要とする作業量の合計を取得します。|  
  
## <a name="net-framework-security"></a>.NET Framework セキュリティ  
 直前の呼び出し元に対する完全な信頼。 このメンバーは、部分的に信頼されているコードから使用することはできません。 詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>