<Type Name="MethodDataCollection" FullName="System.Management.MethodDataCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ccde1b060d427899b0806a0960f4b1e561899811" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52362641" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MethodDataCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MethodDataCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Management.MethodDataCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class MethodDataCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class MethodDataCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type MethodDataCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="8d98a-101">コレクションで使用できる一連のメソッドを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8d98a-101">Represents the set of methods available in the collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d98a-102">次の例では、に関する情報を表示、 **Win32_Process.Create**メソッドを使用して、<xref:System.Management.MethodData>クラス。</span><span class="sxs-lookup"><span data-stu-id="8d98a-102">The following example lists information about the **Win32_Process.Create** method using the <xref:System.Management.MethodData> class.</span></span> <span data-ttu-id="8d98a-103">詳細については、 **Win32_Process**クラスで、MSDN ライブラリで Windows Management Instrumentation のドキュメントを参照してくださいhttp://msdn.microsoft.com/libraryします。</span><span class="sxs-lookup"><span data-stu-id="8d98a-103">For more information on the **Win32_Process** class, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span>  
  
 [!code-csharp[wminet_MethodDataCollection#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_MethodDataCollection/cs/MethodDataCollection.cs#1)]
 [!code-vb[wminet_MethodDataCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_MethodDataCollection/vb/MethodDataCollection.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8d98a-104">
            <see cref="T:System.Management.MethodData" /> に <see cref="T:System.Management.MethodDataCollection" /> オブジェクトを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-104">Adds a <see cref="T:System.Management.MethodData" /> object to the <see cref="T:System.Management.MethodDataCollection" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ methodName);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; unit&#xA;override this.Add : string -&gt; unit" Usage="methodDataCollection.Add methodName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="8d98a-105">追加するメソッドの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-105">The name of the method to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d98a-106">
            <see cref="T:System.Management.MethodData" /> を <see cref="T:System.Management.MethodDataCollection" /> に追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-106">Adds a <see cref="T:System.Management.MethodData" /> to the <see cref="T:System.Management.MethodDataCollection" />.</span>
          </span>
          <span data-ttu-id="8d98a-107">このオーバーロードは、パラメーターのない新しいメソッドをコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-107">This overload will add a new method with no parameters to the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d98a-108">追加<xref:System.Management.MethodData>オブジェクトを<xref:System.Management.MethodDataCollection>クラスのインスタンスがあるない場合にのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="8d98a-108">Adding <xref:System.Management.MethodData> objects to the <xref:System.Management.MethodDataCollection> can only be done when the class has no instances.</span></span> <span data-ttu-id="8d98a-109">それ以外の場合、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-109">Any other case will result in an exception.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="8d98a-110">.NET Framework セキュリティ</span><span class="sxs-lookup"><span data-stu-id="8d98a-110">.NET Framework Security</span></span>  
 <span data-ttu-id="8d98a-111">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="8d98a-111">Full trust for the immediate caller.</span></span> <span data-ttu-id="8d98a-112">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="8d98a-112">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8d98a-113">詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-113">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string methodName, System.Management.ManagementBaseObject inParams, System.Management.ManagementBaseObject outParams);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string methodName, class System.Management.ManagementBaseObject inParams, class System.Management.ManagementBaseObject outParams) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.Add(System.String,System.Management.ManagementBaseObject,System.Management.ManagementBaseObject)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (methodName As String, inParams As ManagementBaseObject, outParams As ManagementBaseObject)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ methodName, System::Management::ManagementBaseObject ^ inParams, System::Management::ManagementBaseObject ^ outParams);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member Add : string * System.Management.ManagementBaseObject * System.Management.ManagementBaseObject -&gt; unit&#xA;override this.Add : string * System.Management.ManagementBaseObject * System.Management.ManagementBaseObject -&gt; unit" Usage="methodDataCollection.Add (methodName, inParams, outParams)" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual void Add (string methodName, System.Management.ManagementBaseObject inParameters, System.Management.ManagementBaseObject outParameters);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string methodName, class System.Management.ManagementBaseObject inParameters, class System.Management.ManagementBaseObject outParameters) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (methodName As String, inParameters As ManagementBaseObject, outParameters As ManagementBaseObject)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ methodName, System::Management::ManagementBaseObject ^ inParameters, System::Management::ManagementBaseObject ^ outParameters);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1" />
      <MemberSignature Language="F#" Value="abstract member Add : string * System.Management.ManagementBaseObject * System.Management.ManagementBaseObject -&gt; unit&#xA;override this.Add : string * System.Management.ManagementBaseObject * System.Management.ManagementBaseObject -&gt; unit" Usage="methodDataCollection.Add (methodName, inParameters, outParameters)" FrameworkAlternate="dotnet-plat-ext-2.1;netframework-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" />
        <Parameter Name="inParams" Type="System.Management.ManagementBaseObject" Index="1" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="inParameters" Type="System.Management.ManagementBaseObject" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1" />
        <Parameter Name="outParams" Type="System.Management.ManagementBaseObject" Index="2" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="outParameters" Type="System.Management.ManagementBaseObject" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="8d98a-114">追加するメソッドの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-114">The name of the method to add.</span>
          </span>
        </param>
        <param name="inParameters">
          <span data-ttu-id="8d98a-115">メソッドの入力パラメーターを保持している <see cref="T:System.Management.ManagementBaseObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-115">The <see cref="T:System.Management.ManagementBaseObject" /> holding the input parameters to the method.</span>
          </span>
        </param>
        <param name="outParameters">
          <span data-ttu-id="8d98a-116">メソッドの出力パラメーターを保持している <see cref="T:System.Management.ManagementBaseObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-116">The <see cref="T:System.Management.ManagementBaseObject" /> holding the output parameters to the method.</span>
          </span>
        </param>
        <param name="inParams">To be added.</param>
        <param name="outParams">To be added.</param>
        <summary>
          <span data-ttu-id="8d98a-117">
            <see cref="T:System.Management.MethodData" /> を <see cref="T:System.Management.MethodDataCollection" /> に追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-117">Adds a <see cref="T:System.Management.MethodData" /> to the <see cref="T:System.Management.MethodDataCollection" />.</span>
          </span>
          <span data-ttu-id="8d98a-118">このオーバーロードは、指定したパラメーター オブジェクトを持つ新しいメソッドをコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-118">This overload will add a new method with the specified parameter objects to the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d98a-119">追加<xref:System.Management.MethodData>オブジェクトを<xref:System.Management.MethodDataCollection>クラスのインスタンスがあるない場合にのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="8d98a-119">Adding <xref:System.Management.MethodData> objects to the <xref:System.Management.MethodDataCollection> can only be done when the class has no instances.</span></span> <span data-ttu-id="8d98a-120">それ以外の場合、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-120">Any other case will result in an exception.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="8d98a-121">.NET Framework セキュリティ</span><span class="sxs-lookup"><span data-stu-id="8d98a-121">.NET Framework Security</span></span>  
 <span data-ttu-id="8d98a-122">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="8d98a-122">Full trust for the immediate caller.</span></span> <span data-ttu-id="8d98a-123">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="8d98a-123">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8d98a-124">詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-124">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8d98a-125">
            <see cref="T:System.Management.MethodDataCollection" /> オブジェクトを配列にコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-125">Copies the <see cref="T:System.Management.MethodDataCollection" /> object into an array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="methodDataCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="8d98a-126">コレクションのコピー先の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-126">The array to which to copy the collection.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="8d98a-127">コピーを開始する位置を示すインデックス</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-127">The index from which to start.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d98a-128">
            <see cref="T:System.Management.MethodDataCollection" /> を配列にコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-128">Copies the <see cref="T:System.Management.MethodDataCollection" /> into an array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="8d98a-129">.NET Framework セキュリティ</span><span class="sxs-lookup"><span data-stu-id="8d98a-129">.NET Framework Security</span></span>  
 <span data-ttu-id="8d98a-130">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="8d98a-130">Full trust for the immediate caller.</span></span> <span data-ttu-id="8d98a-131">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="8d98a-131">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8d98a-132">詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-132">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Management.MethodData[] methodArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Management.MethodData[] methodArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.CopyTo(System.Management.MethodData[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (methodArray As MethodData(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Management::MethodData ^&gt; ^ methodArray, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Management.MethodData[] * int -&gt; unit" Usage="methodDataCollection.CopyTo (methodArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodArray" Type="System.Management.MethodData[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="methodArray">
          <span data-ttu-id="8d98a-133">
            <see cref="T:System.Management.MethodData" /> オブジェクトのコピー先の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-133">The destination array to which to copy the <see cref="T:System.Management.MethodData" /> objects.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="8d98a-134">コピーを開始する位置を示す、コピー先の配列内のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-134">The index in the destination array from which to start the copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d98a-135">
            <see cref="T:System.Management.MethodDataCollection" /> を特別な <see cref="T:System.Management.MethodData" /> 配列にコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-135">Copies the <see cref="T:System.Management.MethodDataCollection" /> to a specialized <see cref="T:System.Management.MethodData" /> array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="8d98a-136">.NET Framework セキュリティ</span><span class="sxs-lookup"><span data-stu-id="8d98a-136">.NET Framework Security</span></span>  
 <span data-ttu-id="8d98a-137">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="8d98a-137">Full trust for the immediate caller.</span></span> <span data-ttu-id="8d98a-138">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="8d98a-138">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8d98a-139">詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-139">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Management.MethodDataCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Management.MethodDataCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d98a-140">
            <see cref="T:System.Management.MethodDataCollection" /> コレクション内のオブジェクトの数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-140">Gets the number of objects in the <see cref="T:System.Management.MethodDataCollection" /> collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d98a-141">コレクション内のオブジェクトの数を表す <see cref="T:System.Int32" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-141">Returns an <see cref="T:System.Int32" /> value representing the number of objects in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="8d98a-142">プロパティ値</span><span class="sxs-lookup"><span data-stu-id="8d98a-142">Property Value</span></span>  
 <span data-ttu-id="8d98a-143">オブジェクトの数、<xref:System.Management.MethodDataCollection>します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-143">The number of objects in the <xref:System.Management.MethodDataCollection>.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="8d98a-144">.NET Framework セキュリティ</span><span class="sxs-lookup"><span data-stu-id="8d98a-144">.NET Framework Security</span></span>  
 <span data-ttu-id="8d98a-145">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="8d98a-145">Full trust for the immediate caller.</span></span> <span data-ttu-id="8d98a-146">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="8d98a-146">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8d98a-147">詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-147">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Management.MethodDataCollection.MethodDataEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.MethodDataCollection/MethodDataEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As MethodDataCollection.MethodDataEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::MethodDataCollection::MethodDataEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Management.MethodDataCollection.MethodDataEnumerator" Usage="methodDataCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.MethodDataCollection+MethodDataEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d98a-148">
            <see cref="T:System.Management.MethodDataCollection" /> の列挙子を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-148">Returns an enumerator for the <see cref="T:System.Management.MethodDataCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d98a-149">コレクション内を列挙する <see cref="T:System.Collections.IEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-149">An <see cref="T:System.Collections.IEnumerator" /> to enumerate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d98a-150">このメソッドを呼び出すたびでは、コレクションに新しい列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-150">Each call to this method returns a new enumerator on the collection.</span></span> <span data-ttu-id="8d98a-151">複数の列挙子は、同じメソッドのコレクションを取得できます。</span><span class="sxs-lookup"><span data-stu-id="8d98a-151">Multiple enumerators can be obtained for the same method collection.</span></span> <span data-ttu-id="8d98a-152">ただし、各列挙子は、列挙子を取得した後に、コレクションに加えられた変更は反映されませんので、コレクションのスナップショットを取得します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-152">However, each enumerator takes a snapshot of the collection, so changes made to the collection after the enumerator was obtained are not reflected.</span></span>  
  
 <span data-ttu-id="8d98a-153">反復処理することができますのみ (Visual Basic .NET のように`For Each`ステートメントまたは c#`For`ステートメント) 前方参照専用で列挙子を 1 回使用します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-153">You can only iterate (as in a Visual Basic .NET `For Each` statement or a C# `For` statement) through a forward-only enumerator one time.</span></span> <span data-ttu-id="8d98a-154">インスタンスを含むメモリは、列挙子を巻き戻しできないように、WMI によって解放されます。</span><span class="sxs-lookup"><span data-stu-id="8d98a-154">The memory containing the instances is released by WMI so that the enumerator cannot be rewound.</span></span> <span data-ttu-id="8d98a-155">そのため、<xref:System.Management.MethodDataCollection.Count%2A>列挙子の巻き戻し必要があるために、メソッドを使用できません。</span><span class="sxs-lookup"><span data-stu-id="8d98a-155">Therefore, the <xref:System.Management.MethodDataCollection.Count%2A> method cannot be used since it requires rewinding the enumerator.</span></span>  
  
 <span data-ttu-id="8d98a-156">呼び出しは許可されませんが、順方向専用の列挙子は、一般にはるかに高速と従来の列挙子より少ないメモリを使用して、<xref:System.Management.MethodDataCollection.MethodDataEnumerator.Reset%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-156">Forward-only enumerators are generally much faster and use less memory than conventional enumerators, but they do not allow calls to <xref:System.Management.MethodDataCollection.MethodDataEnumerator.Reset%2A>.</span></span>  
  
 <span data-ttu-id="8d98a-157">列挙子が巻き戻し可能の場合は、コレクション内のオブジェクトが保持されます列挙体の複数使用できます。</span><span class="sxs-lookup"><span data-stu-id="8d98a-157">If an enumerator is rewindable, the objects in the collection will be kept available for multiple enumerations.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="8d98a-158">.NET Framework セキュリティ</span><span class="sxs-lookup"><span data-stu-id="8d98a-158">.NET Framework Security</span></span>  
 <span data-ttu-id="8d98a-159">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="8d98a-159">Full trust for the immediate caller.</span></span> <span data-ttu-id="8d98a-160">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="8d98a-160">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8d98a-161">詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-161">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Management.MethodDataCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Management.MethodDataCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d98a-162">オブジェクトの同期がとられているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-162">Gets a value that indicates whether the object is synchronized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d98a-163">オブジェクトの同期がとられているかどうかを示す <see cref="T:System.Boolean" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-163">Returns a <see cref="T:System.Boolean" /> value indicating whether the object is synchronized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="8d98a-164">プロパティ値</span><span class="sxs-lookup"><span data-stu-id="8d98a-164">Property Value</span></span>  
 <span data-ttu-id="8d98a-165">`true` オブジェクトが同期されている場合それ以外の場合、`false`します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-165">`true` if the object is synchronized; otherwise, `false`.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="8d98a-166">.NET Framework セキュリティ</span><span class="sxs-lookup"><span data-stu-id="8d98a-166">.NET Framework Security</span></span>  
 <span data-ttu-id="8d98a-167">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="8d98a-167">Full trust for the immediate caller.</span></span> <span data-ttu-id="8d98a-168">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="8d98a-168">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8d98a-169">詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-169">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Management.MethodData this[string methodName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.MethodData Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Management.MethodDataCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(methodName As String) As MethodData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Management::MethodData ^ default[System::String ^] { System::Management::MethodData ^ get(System::String ^ methodName); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Management.MethodData" Usage="System.Management.MethodDataCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.MethodData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="8d98a-170">要求したメソッドの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-170">The name of the method requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d98a-171">指定した <see cref="T:System.Management.MethodData" /> を <see cref="T:System.Management.MethodDataCollection" /> から取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-171">Gets the specified <see cref="T:System.Management.MethodData" /> from the <see cref="T:System.Management.MethodDataCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d98a-172">コレクションから指定されたメソッドのメソッド データを格納している <see cref="T:System.Management.MethodData" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-172">Returns a <see cref="T:System.Management.MethodData" /> containing the method data for a specified method from the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="8d98a-173">プロパティ値</span><span class="sxs-lookup"><span data-stu-id="8d98a-173">Property Value</span></span>  
 <span data-ttu-id="8d98a-174">A<xref:System.Management.MethodData>指定メソッドに関するすべての情報を格納しています。</span><span class="sxs-lookup"><span data-stu-id="8d98a-174">A <xref:System.Management.MethodData> containing all information about the specified method.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="8d98a-175">.NET Framework セキュリティ</span><span class="sxs-lookup"><span data-stu-id="8d98a-175">.NET Framework Security</span></span>  
 <span data-ttu-id="8d98a-176">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="8d98a-176">Full trust for the immediate caller.</span></span> <span data-ttu-id="8d98a-177">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="8d98a-177">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8d98a-178">詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-178">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::String ^ methodName);" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; unit&#xA;override this.Remove : string -&gt; unit" Usage="methodDataCollection.Remove methodName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="8d98a-179">コレクションから削除するメソッドの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-179">The name of the method to remove from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d98a-180">
            <see cref="T:System.Management.MethodData" /> から <see cref="T:System.Management.MethodDataCollection" /> を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-180">Removes a <see cref="T:System.Management.MethodData" /> from the <see cref="T:System.Management.MethodDataCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d98a-181">削除する<xref:System.Management.MethodData>オブジェクトから、<xref:System.Management.MethodDataCollection>クラスのインスタンスがあるない場合にのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="8d98a-181">Removing <xref:System.Management.MethodData> objects from the <xref:System.Management.MethodDataCollection> can only be done when the class has no instances.</span></span> <span data-ttu-id="8d98a-182">それ以外の場合、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-182">Any other case will result in an exception.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="8d98a-183">.NET Framework セキュリティ</span><span class="sxs-lookup"><span data-stu-id="8d98a-183">.NET Framework Security</span></span>  
 <span data-ttu-id="8d98a-184">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="8d98a-184">Full trust for the immediate caller.</span></span> <span data-ttu-id="8d98a-185">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="8d98a-185">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8d98a-186">詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-186">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Management.MethodDataCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Management.MethodDataCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d98a-187">同期に使用するオブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-187">Gets the object to be used for synchronization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d98a-188">同期に使用するオブジェクトを表す <see cref="T:System.Object" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-188">Returns an <see cref="T:System.Object" /> value representing the object to be used for synchronization.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="8d98a-189">プロパティ値</span><span class="sxs-lookup"><span data-stu-id="8d98a-189">Property Value</span></span>  
 <span data-ttu-id="8d98a-190">同期に使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8d98a-190">The object to be used for synchronization.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="8d98a-191">.NET Framework セキュリティ</span><span class="sxs-lookup"><span data-stu-id="8d98a-191">.NET Framework Security</span></span>  
 <span data-ttu-id="8d98a-192">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="8d98a-192">Full trust for the immediate caller.</span></span> <span data-ttu-id="8d98a-193">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="8d98a-193">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="8d98a-194">詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-194">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d98a-195">
            <see cref="T:System.Management.MethodDataCollection" /> を反復処理する <see cref="T:System.Collections.IEnumerator" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-195">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Management.MethodDataCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d98a-196">
            <see cref="T:System.Collections.IEnumerator" /> の <see cref="T:System.Management.MethodDataCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d98a-196">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.MethodDataCollection" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d98a-197">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="8d98a-197">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="8d98a-198">C# 言語の `foreach` ステートメント (Visual Basic の場合は `for each`) を使用することで列挙子の複雑さを回避できます。</span><span class="sxs-lookup"><span data-stu-id="8d98a-198">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="8d98a-199">したがって、列挙子を直接操作するのではなく、`foreach` を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8d98a-199">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="8d98a-200">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="8d98a-200">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="8d98a-201">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="8d98a-201">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="8d98a-202"><xref:System.Collections.IEnumerator.Reset%2A> を実行した場合も、列挙子はこの位置に戻されます。</span><span class="sxs-lookup"><span data-stu-id="8d98a-202"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="8d98a-203">この位置で、呼び出す<xref:System.Collections.IEnumerator.Current%2A>例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="8d98a-203">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="8d98a-204">そのため、<xref:System.Collections.IEnumerator.MoveNext%2A> の値を読み取る前に、<xref:System.Collections.IEnumerator.Current%2A> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="8d98a-204">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="8d98a-205"><xref:System.Collections.IEnumerator.Current%2A> は、<xref:System.Collections.IEnumerator.MoveNext%2A> または <xref:System.Collections.IEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-205"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="8d98a-206"><xref:System.Collections.IEnumerator.MoveNext%2A> は、<xref:System.Collections.IEnumerator.Current%2A> を次の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-206"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="8d98a-207">場合<xref:System.Collections.IEnumerator.MoveNext%2A>列挙子、コレクションの末尾がコレクション内の最後の要素の後に配置されているパスと<xref:System.Collections.IEnumerator.MoveNext%2A>返します`false`します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-207">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="8d98a-208">この位置では、後続の呼び出しで列挙子の場合<xref:System.Collections.IEnumerator.MoveNext%2A>を返すことも`false`します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-208">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="8d98a-209">最後の呼び出し場合<xref:System.Collections.IEnumerator.MoveNext%2A>返される`false`を呼び出すと、<xref:System.Collections.IEnumerator.Current%2A>例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="8d98a-209">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="8d98a-210"><xref:System.Collections.IEnumerator.Current%2A> をコレクションの最初の要素にもう一度設定するには、<xref:System.Collections.IEnumerator.Reset%2A> を呼び出してから <xref:System.Collections.IEnumerator.MoveNext%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-210">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="8d98a-211">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="8d98a-211">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="8d98a-212">無効になり、次の呼び出しは変更を追加するなど、コレクション変更、または要素を削除するには、列挙子が不可能<xref:System.Collections.IEnumerator.MoveNext%2A>または<xref:System.Collections.IEnumerator.Reset%2A>スロー、<xref:System.InvalidOperationException>します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-212">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="8d98a-213">間に、コレクションが変更された場合<xref:System.Collections.IEnumerator.MoveNext%2A>と<xref:System.Collections.IEnumerator.Current%2A>、<xref:System.Collections.IEnumerator.Current%2A>列挙子が既に無効になっている場合でもに設定されている要素を返します。</span><span class="sxs-lookup"><span data-stu-id="8d98a-213">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="8d98a-214">列挙子には、コレクションへの排他アクセスがありません。したがって、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="8d98a-214">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="8d98a-215">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="8d98a-215">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="8d98a-216">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="8d98a-216">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="8d98a-217">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="8d98a-217">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>