<Type Name="EventWatcherOptions" FullName="System.Management.EventWatcherOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="160ad3928964a7f2d883b40c79a7daced5eb7e38" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51872992" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventWatcherOptions : System.Management.ManagementOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventWatcherOptions extends System.Management.ManagementOptions" />
  <TypeSignature Language="DocId" Value="T:System.Management.EventWatcherOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class EventWatcherOptions&#xA;Inherits ManagementOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventWatcherOptions : System::Management::ManagementOptions" />
  <TypeSignature Language="F#" Value="type EventWatcherOptions = class&#xA;    inherit ManagementOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.ManagementOptions</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="44dd6-101">管理イベント ウォッチのオプションを指定します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="44dd6-101">Specifies options for management event watching.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="44dd6-102">次の例は、クライアントがのインスタンスに通知を受信する方法を示しています。 **Win32_Process**イベント クラスであるために作成 **_ _instancecreationevent**します。</span><span class="sxs-lookup"><span data-stu-id="44dd6-102">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="44dd6-103">詳細については、MSDN ライブラリで Windows Management Instrumentation のドキュメントを参照してください。 [ http://msdn.microsoft.com/library](https://msdn.microsoft.com/library)します。</span><span class="sxs-lookup"><span data-stu-id="44dd6-103">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library).</span></span> <span data-ttu-id="44dd6-104">クライアントは <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> メソッドを呼び出して、イベントを同期的に受信します。</span><span class="sxs-lookup"><span data-stu-id="44dd6-104">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="44dd6-105">この例は、コード例の実行中にメモ帳などのプロセスを開始することでテストできます。</span><span class="sxs-lookup"><span data-stu-id="44dd6-105">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_EventWatcherOptions#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EventWatcherOptions/cs/EventWatcherOptions.cs#1)]
 [!code-vb[wminet_EventWatcherOptions#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EventWatcherOptions/vb/EventWatcherOptions.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="44dd6-106">イベント監視用の <see cref="T:System.Management.EventWatcherOptions" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44dd6-106">Initializes a new instance of the <see cref="T:System.Management.EventWatcherOptions" /> class for event watching.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWatcherOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.EventWatcherOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWatcherOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="44dd6-107">イベント ウォッチのための <see cref="T:System.Management.EventWatcherOptions" /> クラスの新しいインスタンスを、既定値を使用して初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44dd6-107">Initializes a new instance of the <see cref="T:System.Management.EventWatcherOptions" /> class for event watching, using default values.</span>
          </span>
          <span data-ttu-id="44dd6-108">これは既定のコンストラクターです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44dd6-108">This is the default constructor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="44dd6-109">.NET Framework セキュリティ</span><span class="sxs-lookup"><span data-stu-id="44dd6-109">.NET Framework Security</span></span>  
 <span data-ttu-id="44dd6-110">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="44dd6-110">Full trust for the immediate caller.</span></span> <span data-ttu-id="44dd6-111">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="44dd6-111">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="44dd6-112">詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)します。</span><span class="sxs-lookup"><span data-stu-id="44dd6-112">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44dd6-113">次の例は、クライアントがのインスタンスに通知を受信する方法を示しています。 **Win32_Process**イベント クラスであるために作成 **_ _instancecreationevent**します。</span><span class="sxs-lookup"><span data-stu-id="44dd6-113">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="44dd6-114">詳細については、MSDN ライブラリで Windows Management Instrumentation のドキュメントを参照してください。 [ http://msdn.microsoft.com/library](https://msdn.microsoft.com/library)します。</span><span class="sxs-lookup"><span data-stu-id="44dd6-114">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library).</span></span> <span data-ttu-id="44dd6-115">クライアントは <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> メソッドを呼び出して、イベントを同期的に受信します。</span><span class="sxs-lookup"><span data-stu-id="44dd6-115">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="44dd6-116">この例は、コード例の実行中にメモ帳などのプロセスを開始することでテストできます。</span><span class="sxs-lookup"><span data-stu-id="44dd6-116">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_EventWatcherOptions#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EventWatcherOptions/cs/EventWatcherOptions.cs#1)]
 [!code-vb[wminet_EventWatcherOptions#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EventWatcherOptions/vb/EventWatcherOptions.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWatcherOptions (System.Management.ManagementNamedValueCollection context, TimeSpan timeout, int blockSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementNamedValueCollection context, valuetype System.TimeSpan timeout, int32 blockSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.EventWatcherOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As ManagementNamedValueCollection, timeout As TimeSpan, blockSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWatcherOptions(System::Management::ManagementNamedValueCollection ^ context, TimeSpan timeout, int blockSize);" />
      <MemberSignature Language="F#" Value="new System.Management.EventWatcherOptions : System.Management.ManagementNamedValueCollection * TimeSpan * int -&gt; System.Management.EventWatcherOptions" Usage="new System.Management.EventWatcherOptions (context, timeout, blockSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Management.ManagementNamedValueCollection" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="blockSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="44dd6-117">プロバイダーに渡されるプロバイダー固有情報を格納しているオプション コンテキスト オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44dd6-117">The options context object containing provider-specific information to be passed through to the provider.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="44dd6-118">次のイベントを待機するタイムアウト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44dd6-118">The time-out to wait for the next events.</span>
          </span>
        </param>
        <param name="blockSize">
          <span data-ttu-id="44dd6-119">各ブロックで待機するイベント数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44dd6-119">The number of events to wait for in each block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44dd6-120">指定した値を使用して、<see cref="T:System.Management.EventWatcherOptions" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44dd6-120">Initializes a new instance of the <see cref="T:System.Management.EventWatcherOptions" /> class with the given values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="44dd6-121">.NET Framework セキュリティ</span><span class="sxs-lookup"><span data-stu-id="44dd6-121">.NET Framework Security</span></span>  
 <span data-ttu-id="44dd6-122">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="44dd6-122">Full trust for the immediate caller.</span></span> <span data-ttu-id="44dd6-123">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="44dd6-123">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="44dd6-124">詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)します。</span><span class="sxs-lookup"><span data-stu-id="44dd6-124">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44dd6-125">次の例は、クライアントがのインスタンスに通知を受信する方法を示しています。 **Win32_Process**イベント クラスであるために作成 **_ _instancecreationevent**します。</span><span class="sxs-lookup"><span data-stu-id="44dd6-125">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="44dd6-126">詳細については、MSDN ライブラリで Windows Management Instrumentation のドキュメントを参照してください。 [ http://msdn.microsoft.com/library](https://msdn.microsoft.com/library)します。</span><span class="sxs-lookup"><span data-stu-id="44dd6-126">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library).</span></span> <span data-ttu-id="44dd6-127">クライアントは <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> メソッドを呼び出して、イベントを同期的に受信します。</span><span class="sxs-lookup"><span data-stu-id="44dd6-127">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="44dd6-128">この例は、コード例の実行中にメモ帳などのプロセスを開始することでテストできます。</span><span class="sxs-lookup"><span data-stu-id="44dd6-128">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_EventWatcherOptions-3#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EventWatcherOptions-3/cs/EventWatcherOptions-3.cs#1)]
 [!code-vb[wminet_EventWatcherOptions-3#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EventWatcherOptions-3/vb/EventWatcherOptions-3.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public int BlockSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Management.EventWatcherOptions.BlockSize" />
      <MemberSignature Language="VB.NET" Value="Public Property BlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BlockSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BlockSize : int with get, set" Usage="System.Management.EventWatcherOptions.BlockSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44dd6-129">ブロック操作のブロック サイズを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44dd6-129">Gets or sets the block size for block operations.</span>
          </span>
          <span data-ttu-id="44dd6-130">イベントを待機する場合、この値は制御を戻す前に待機するイベント数を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44dd6-130">When waiting for events, this value specifies how many events to wait for before returning.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44dd6-131">操作のブロックのブロック サイズを示す <see cref="T:System.Int32" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44dd6-131">Returns an <see cref="T:System.Int32" /> value indicating the block size for a block of operations.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="44dd6-132">プロパティ値</span><span class="sxs-lookup"><span data-stu-id="44dd6-132">Property Value</span></span>  
 <span data-ttu-id="44dd6-133">既定値は 1 です。</span><span class="sxs-lookup"><span data-stu-id="44dd6-133">The default value is 1.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="44dd6-134">.NET Framework セキュリティ</span><span class="sxs-lookup"><span data-stu-id="44dd6-134">.NET Framework Security</span></span>  
 <span data-ttu-id="44dd6-135">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="44dd6-135">Full trust for the immediate caller.</span></span> <span data-ttu-id="44dd6-136">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="44dd6-136">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="44dd6-137">詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)します。</span><span class="sxs-lookup"><span data-stu-id="44dd6-137">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44dd6-138">次の例は、クライアントがのインスタンスに通知を受信する方法を示しています。 **Win32_Process**イベント クラスであるために作成 **_ _instancecreationevent**します。</span><span class="sxs-lookup"><span data-stu-id="44dd6-138">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="44dd6-139">詳細については、MSDN ライブラリで Windows Management Instrumentation のドキュメントを参照してください。 [ http://msdn.microsoft.com/library](https://msdn.microsoft.com/library)します。</span><span class="sxs-lookup"><span data-stu-id="44dd6-139">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library).</span></span> <span data-ttu-id="44dd6-140">クライアントは <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> メソッドを呼び出して、イベントを同期的に受信します。</span><span class="sxs-lookup"><span data-stu-id="44dd6-140">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="44dd6-141">この例は、コード例の実行中にメモ帳などのプロセスを開始することでテストできます。</span><span class="sxs-lookup"><span data-stu-id="44dd6-141">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_EventWatcherOptions_BlockSize#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EventWatcherOptions_BlockSize/cs/EventWatcherOptions_BlockSize.cs#1)]
 [!code-vb[wminet_EventWatcherOptions_BlockSize#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EventWatcherOptions_BlockSize/vb/EventWatcherOptions_BlockSize.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.EventWatcherOptions.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; obj" Usage="eventWatcherOptions.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="44dd6-142">オブジェクトのコピーを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44dd6-142">Returns a copy of the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44dd6-143">クローン作成されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44dd6-143">The cloned object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="44dd6-144">.NET Framework セキュリティ</span><span class="sxs-lookup"><span data-stu-id="44dd6-144">.NET Framework Security</span></span>  
 <span data-ttu-id="44dd6-145">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="44dd6-145">Full trust for the immediate caller.</span></span> <span data-ttu-id="44dd6-146">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="44dd6-146">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="44dd6-147">詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)します。</span><span class="sxs-lookup"><span data-stu-id="44dd6-147">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ICloneable.Clone" />
      </Docs>
    </Member>
  </Members>
</Type>