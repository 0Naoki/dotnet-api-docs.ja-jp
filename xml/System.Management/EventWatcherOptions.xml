<Type Name="EventWatcherOptions" FullName="System.Management.EventWatcherOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1b5d47df3b7e7157f93a94963e9c08fc4a55e2ed" /><Meta Name="ms.sourcegitcommit" Value="9802d4c6745a8ae514b26f144fb3969265b224ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/22/2018" /><Meta Name="ms.locfileid" Value="53749858" /></Metadata><TypeSignature Language="C#" Value="public class EventWatcherOptions : System.Management.ManagementOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventWatcherOptions extends System.Management.ManagementOptions" />
  <TypeSignature Language="DocId" Value="T:System.Management.EventWatcherOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class EventWatcherOptions&#xA;Inherits ManagementOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventWatcherOptions : System::Management::ManagementOptions" />
  <TypeSignature Language="F#" Value="type EventWatcherOptions = class&#xA;    inherit ManagementOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.ManagementOptions</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>管理イベント ウォッチのオプションを指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、クライアントがのインスタンスに通知を受信する方法を示しています。 **Win32_Process**イベント クラスであるために作成 **_ _instancecreationevent**します。 詳細については、MSDN ライブラリで Windows Management Instrumentation のドキュメントを参照してください。 [ http://msdn.microsoft.com/library](https://msdn.microsoft.com/library)します。 クライアントは <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> メソッドを呼び出して、イベントを同期的に受信します。 この例は、コード例の実行中にメモ帳などのプロセスを開始することでテストできます。  
  
 [!code-csharp[wminet_EventWatcherOptions#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EventWatcherOptions/cs/EventWatcherOptions.cs#1)]
 [!code-vb[wminet_EventWatcherOptions#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EventWatcherOptions/vb/EventWatcherOptions.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>イベント監視用の <see cref="T:System.Management.EventWatcherOptions" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWatcherOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.EventWatcherOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWatcherOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>イベント ウォッチのための <see cref="T:System.Management.EventWatcherOptions" /> クラスの新しいインスタンスを、既定値を使用して初期化します。 これは既定のコンストラクターです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework セキュリティ  
 直前の呼び出し元に対する完全な信頼。 このメンバーは、部分的に信頼されているコードから使用することはできません。 詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)します。  
  
   
  
## Examples  
 次の例は、クライアントがのインスタンスに通知を受信する方法を示しています。 **Win32_Process**イベント クラスであるために作成 **_ _instancecreationevent**します。 詳細については、MSDN ライブラリで Windows Management Instrumentation のドキュメントを参照してください。 [ http://msdn.microsoft.com/library](https://msdn.microsoft.com/library)します。 クライアントは <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> メソッドを呼び出して、イベントを同期的に受信します。 この例は、コード例の実行中にメモ帳などのプロセスを開始することでテストできます。  
  
 [!code-csharp[wminet_EventWatcherOptions#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EventWatcherOptions/cs/EventWatcherOptions.cs#1)]
 [!code-vb[wminet_EventWatcherOptions#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EventWatcherOptions/vb/EventWatcherOptions.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWatcherOptions (System.Management.ManagementNamedValueCollection context, TimeSpan timeout, int blockSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementNamedValueCollection context, valuetype System.TimeSpan timeout, int32 blockSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.EventWatcherOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As ManagementNamedValueCollection, timeout As TimeSpan, blockSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWatcherOptions(System::Management::ManagementNamedValueCollection ^ context, TimeSpan timeout, int blockSize);" />
      <MemberSignature Language="F#" Value="new System.Management.EventWatcherOptions : System.Management.ManagementNamedValueCollection * TimeSpan * int -&gt; System.Management.EventWatcherOptions" Usage="new System.Management.EventWatcherOptions (context, timeout, blockSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Management.ManagementNamedValueCollection" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="blockSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">プロバイダーに渡されるプロバイダー固有情報を格納しているオプション コンテキスト オブジェクト。</param>
        <param name="timeout">次のイベントを待機するタイムアウト。</param>
        <param name="blockSize">各ブロックで待機するイベント数。</param>
        <summary>指定した値を使用して、<see cref="T:System.Management.EventWatcherOptions" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework セキュリティ  
 直前の呼び出し元に対する完全な信頼。 このメンバーは、部分的に信頼されているコードから使用することはできません。 詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)します。  
  
   
  
## Examples  
 次の例は、クライアントがのインスタンスに通知を受信する方法を示しています。 **Win32_Process**イベント クラスであるために作成 **_ _instancecreationevent**します。 詳細については、MSDN ライブラリで Windows Management Instrumentation のドキュメントを参照してください。 [ http://msdn.microsoft.com/library](https://msdn.microsoft.com/library)します。 クライアントは <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> メソッドを呼び出して、イベントを同期的に受信します。 この例は、コード例の実行中にメモ帳などのプロセスを開始することでテストできます。  
  
 [!code-csharp[wminet_EventWatcherOptions-3#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EventWatcherOptions-3/cs/EventWatcherOptions-3.cs#1)]
 [!code-vb[wminet_EventWatcherOptions-3#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EventWatcherOptions-3/vb/EventWatcherOptions-3.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public int BlockSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Management.EventWatcherOptions.BlockSize" />
      <MemberSignature Language="VB.NET" Value="Public Property BlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BlockSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BlockSize : int with get, set" Usage="System.Management.EventWatcherOptions.BlockSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ブロック操作のブロック サイズを取得または設定します。 イベントを待機する場合、この値は制御を戻す前に待機するイベント数を指定します。</summary>
        <value>操作のブロックのブロック サイズを示す整数値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a>プロパティ値  
 既定値は 1 です。  
  
## <a name="net-framework-security"></a>.NET Framework セキュリティ  
 直前の呼び出し元に対する完全な信頼。 このメンバーは、部分的に信頼されているコードから使用することはできません。 詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)します。  
  
   
  
## Examples  
 次の例は、クライアントがのインスタンスに通知を受信する方法を示しています。 **Win32_Process**イベント クラスであるために作成 **_ _instancecreationevent**します。 詳細については、MSDN ライブラリで Windows Management Instrumentation のドキュメントを参照してください。 [ http://msdn.microsoft.com/library](https://msdn.microsoft.com/library)します。 クライアントは <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> メソッドを呼び出して、イベントを同期的に受信します。 この例は、コード例の実行中にメモ帳などのプロセスを開始することでテストできます。  
  
 [!code-csharp[wminet_EventWatcherOptions_BlockSize#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EventWatcherOptions_BlockSize/cs/EventWatcherOptions_BlockSize.cs#1)]
 [!code-vb[wminet_EventWatcherOptions_BlockSize#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EventWatcherOptions_BlockSize/vb/EventWatcherOptions_BlockSize.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.EventWatcherOptions.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; obj" Usage="eventWatcherOptions.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>オブジェクトのコピーを返します。</summary>
        <returns>クローン作成されたオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework セキュリティ  
 直前の呼び出し元に対する完全な信頼。 このメンバーは、部分的に信頼されているコードから使用することはできません。 詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ICloneable.Clone" />
      </Docs>
    </Member>
  </Members>
</Type>