<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ManagementObjectCollection.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57a8ff75cb3f7f165003cde60f7d515fe52ac57d4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a8ff75cb3f7f165003cde60f7d515fe52ac57d4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Management.ManagementObjectCollection">
          <source>Represents different collections of management objects retrieved through WMI.</source>
          <target state="translated">WMI を通じて取得される管理オブジェクトの異なるコレクションを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Management.ManagementObjectCollection">
          <source>The objects in this collection are of <ph id="ph1">&lt;see cref="T:System.Management.ManagementBaseObject" /&gt;</ph>-derived types, including <ph id="ph2">&lt;see cref="T:System.Management.ManagementObject" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Management.ManagementClass" /&gt;</ph>.</source>
          <target state="translated">このコレクション内のオブジェクトは、<ph id="ph1">&lt;see cref="T:System.Management.ManagementBaseObject" /&gt;</ph> から派生した型のオブジェクトで、<ph id="ph2">&lt;see cref="T:System.Management.ManagementObject" /&gt;</ph> や <ph id="ph3">&lt;see cref="T:System.Management.ManagementClass" /&gt;</ph> などが含まれます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Management.ManagementObjectCollection">
          <source>The collection can be the result of a WMI query executed through a <ph id="ph1">&lt;see cref="T:System.Management.ManagementObjectSearcher" /&gt;</ph>, or an enumeration of management objects of a specified type retrieved through a <ph id="ph2">&lt;see cref="T:System.Management.ManagementClass" /&gt;</ph> representing that type.</source>
          <target state="translated">コレクションは、<ph id="ph1">&lt;see cref="T:System.Management.ManagementObjectSearcher" /&gt;</ph> で実行された WMI クエリの結果、または指定した型 (型を表す <ph id="ph2">&lt;see cref="T:System.Management.ManagementClass" /&gt;</ph> から取得される) の管理オブジェクトの列挙体になります。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Management.ManagementObjectCollection">
          <source>In addition, this can be a collection of management objects related in a specified way to a specific management object - in this case the collection would be retrieved through a method such as <ph id="ph1">&lt;see cref="M:System.Management.ManagementObject.GetRelated" /&gt;</ph>.</source>
          <target state="translated">また、このコレクションは、指定した方法で特定の管理オブジェクトに関連付けられた管理オブジェクトのコレクションとなることもあります。この場合、コレクションは <ph id="ph1">&lt;see cref="M:System.Management.ManagementObject.GetRelated" /&gt;</ph> などのメソッドで取得されます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Management.ManagementObjectCollection">
          <source>The collection can be walked using the <ph id="ph1">&lt;see cref="T:System.Management.ManagementObjectCollection.ManagementObjectEnumerator" /&gt;</ph> and objects in it can be inspected or manipulated for various management tasks.</source>
          <target state="translated">コレクションは、<ph id="ph1">&lt;see cref="T:System.Management.ManagementObjectCollection.ManagementObjectEnumerator" /&gt;</ph> を使用してウォークすることができ、コレクション内のオブジェクトはさまざまな管理タスクで検査または使用されます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Management.ManagementObjectCollection">
          <source>Copies the collection to an array.</source>
          <target state="translated">配列にコレクションをコピーします。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)">
          <source>An array to copy to.</source>
          <target state="translated">コピー先の配列。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)">
          <source>The index to start from.</source>
          <target state="translated">コピーの開始位置を示すインデックス。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)">
          <source>Copies the collection to an array.</source>
          <target state="translated">配列にコレクションをコピーします。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework セキュリティ</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)">
          <source>Full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Using Libraries from Partially Trusted Code<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>部分信頼コードからライブラリを使用して<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)">
          <source>The target array.</source>
          <target state="translated">対象となる配列。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)">
          <source>The index to start from.</source>
          <target state="translated">コピーの開始位置を示すインデックス。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)">
          <source>Copies the items in the collection to a <ph id="ph1">&lt;see cref="T:System.Management.ManagementBaseObject" /&gt;</ph> array.</source>
          <target state="translated">コレクションの項目を <ph id="ph1">&lt;see cref="T:System.Management.ManagementBaseObject" /&gt;</ph> 配列にコピーします。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework セキュリティ</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)">
          <source>Full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Using Libraries from Partially Trusted Code<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>部分信頼コードからライブラリを使用して<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Management.ManagementObjectCollection.Count">
          <source>Gets a value indicating the number of objects in the collection.</source>
          <target state="translated">コレクション内のオブジェクトの数を示す値を取得します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementObjectCollection.Count">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value indicating the number of objects in the collection.</source>
          <target state="translated">コレクション内のオブジェクトの数を示す <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 値を返します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementObjectCollection.Count">
          <source>This property is very expensive - it requires that all members of the collection be enumerated.</source>
          <target state="translated">このプロパティは非常に不経済 - コレクションのすべてのメンバーを列挙する必要があります。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementObjectCollection.Count">
          <source>Property Value</source>
          <target state="translated">プロパティ値</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementObjectCollection.Count">
          <source>The number of objects in the collection.</source>
          <target state="translated">コレクション内のオブジェクトの数。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementObjectCollection.Count">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework セキュリティ</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementObjectCollection.Count">
          <source>Full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementObjectCollection.Count">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementObjectCollection.Count">
          <source>For more information, see <bpt id="p1">[</bpt>Using Libraries from Partially Trusted Code<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>部分信頼コードからライブラリを使用して<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementObjectCollection.Dispose">
          <source>Releases resources associated with this object.</source>
          <target state="translated">オブジェクトと関連付けられたリソースを解放します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementObjectCollection.Dispose">
          <source>After this method has been called, an attempt to use this object will result in an <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> being thrown.</source>
          <target state="translated">このメソッドを呼び出した後に、このオブジェクトを使用しようとすると、<ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> がスローされます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.Dispose">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework セキュリティ</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.Dispose">
          <source>Full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.Dispose">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Using Libraries from Partially Trusted Code<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>部分信頼コードからライブラリを使用して<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementObjectCollection.Finalize">
          <source>Disposes of resources the object is holding.</source>
          <target state="translated">オブジェクトが保持しているリソースを解放します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementObjectCollection.Finalize">
          <source>This is the destructor for the object.</source>
          <target state="translated">これはオブジェクトのデストラクターです。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementObjectCollection.Finalize">
          <source>Finalizers are expressed using destructor syntax.</source>
          <target state="translated">ファイナライザーは、デストラクター構文を使用して表します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.Finalize">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework セキュリティ</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.Finalize">
          <source>Full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.Finalize">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.Finalize">
          <source>For more information, see <bpt id="p1">[</bpt>Using Libraries from Partially Trusted Code<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>部分信頼コードからライブラリを使用して<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementObjectCollection.GetEnumerator">
          <source>Returns the enumerator for the collection.</source>
          <target state="translated">コレクションの列挙子を返します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementObjectCollection.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that can be used to iterate through the collection.</source>
          <target state="translated">コレクションを反復処理するために使用できる <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.GetEnumerator">
          <source>You can only iterate (as in a Visual Basic .NET <ph id="ph1">`For Each`</ph> statement or a C# <ph id="ph2">`For`</ph> statement) through a forward-only enumerator one time.</source>
          <target state="translated">反復処理することができますのみ (Visual Basic .NET のように<ph id="ph1">`For Each`</ph>ステートメントまたは c#<ph id="ph2">`For`</ph>ステートメント)、順方向専用列挙子を 1 回使用します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.GetEnumerator">
          <source>The memory containing the instances is released by WMI so that the enumerator cannot be rewound.</source>
          <target state="translated">インスタンスを含むメモリは、列挙子を巻き戻しできないように、WMI によって解放されます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.GetEnumerator">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Management.ManagementObjectCollection.Count%2A&gt;</ph> method cannot be used since it requires rewinding the enumerator.</source>
          <target state="translated">したがって、<ph id="ph1">&lt;xref:System.Management.ManagementObjectCollection.Count%2A&gt;</ph>巻き戻し、列挙子を必要となるために、メソッドを使用することはできません。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.GetEnumerator">
          <source>Forward-only enumerators are generally much faster and use less memory than conventional enumerators, but they do not allow calls to  <ph id="ph1">&lt;xref:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Reset%2A&gt;</ph>.</source>
          <target state="translated">呼び出すことはできませんが、順方向専用の列挙子は、一般にはるかに高速および従来の列挙子よりも少ないメモリを使用して<ph id="ph1">&lt;xref:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Reset%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.GetEnumerator">
          <source>If an enumerator is rewindable, the objects in the collection will be kept available for multiple enumerations.</source>
          <target state="translated">列挙子が巻き戻し可能な場合は、コレクション内のオブジェクトが保持されます列挙体の複数使用できます。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.GetEnumerator">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework セキュリティ</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.GetEnumerator">
          <source>Full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.GetEnumerator">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.GetEnumerator">
          <source>For more information, see <bpt id="p1">[</bpt>Using Libraries from Partially Trusted Code<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>部分信頼コードからライブラリを使用して<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Management.ManagementObjectCollection.IsSynchronized">
          <source>Gets a value indicating whether the object is synchronized.</source>
          <target state="translated">オブジェクトの同期がとられているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementObjectCollection.IsSynchronized">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value indicating whether the object is synchronized.</source>
          <target state="translated">オブジェクトの同期がとられているかどうかを示す <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 値を返します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementObjectCollection.IsSynchronized">
          <source>Property Value</source>
          <target state="translated">プロパティ値</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementObjectCollection.IsSynchronized">
          <source><ph id="ph1">`true`</ph>, if the object is synchronized, otherwise <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`true`</ph>、それ以外の場合、オブジェクトが同期される場合<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementObjectCollection.IsSynchronized">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework セキュリティ</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementObjectCollection.IsSynchronized">
          <source>Full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementObjectCollection.IsSynchronized">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementObjectCollection.IsSynchronized">
          <source>For more information, see <bpt id="p1">[</bpt>Using Libraries from Partially Trusted Code<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>部分信頼コードからライブラリを使用して<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Management.ManagementObjectCollection.SyncRoot">
          <source>Gets the object to be used for synchronization.</source>
          <target state="translated">同期に使用するオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementObjectCollection.SyncRoot">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> value that represents the object to be used for synchronization.</source>
          <target state="translated">同期に使用するオブジェクトを表す <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 値を返します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementObjectCollection.SyncRoot">
          <source>Property Value</source>
          <target state="translated">プロパティ値</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementObjectCollection.SyncRoot">
          <source>The object to be used for synchronization.</source>
          <target state="translated">同期に使用するオブジェクト。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementObjectCollection.SyncRoot">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework セキュリティ</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementObjectCollection.SyncRoot">
          <source>Full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementObjectCollection.SyncRoot">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Management.ManagementObjectCollection.SyncRoot">
          <source>For more information, see <bpt id="p1">[</bpt>Using Libraries from Partially Trusted Code<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>部分信頼コードからライブラリを使用して<ept id="p1">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that iterates through the <ph id="ph2">&lt;see cref="T:System.Management.ManagementObjectCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Management.ManagementObjectCollection" /&gt;</ph> を反復処理する <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Management.ManagementObjectCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> の <ph id="ph2">&lt;see cref="T:System.Management.ManagementObjectCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic、C# の場合]</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">C# 言語の <ph id="ph1">`foreach`</ph> ステートメント (Visual Basic の場合は <ph id="ph2">`for each`</ph>) を使用することで列挙子の複雑さを回避できます。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">したがって、列挙子を直接操作するのではなく、<ph id="ph1">`foreach`</ph> を使用することをお勧めします。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> を実行した場合も、列挙子はこの位置に戻されます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">この位置で、呼び出す<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>例外をスローします。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">そのため、<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> の値を読み取る前に、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> または <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> が呼び出されるまでは同じオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> を次の要素に設定します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返します<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列挙子がこの位置では、後続の呼び出しの場合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>を返すことも<ph id="ph2">`false`</ph>します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">場合は、最後の呼び出し<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返される<ph id="ph2">`false`</ph>、呼び出し元<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>例外をスローします。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> をコレクションの最初の要素にもう一度設定するには、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> を呼び出してから <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">コレクションが変更されない限り、列挙子は有効です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">無効になり、次の呼び出しに変更を追加するなど、コレクションを変更、または要素を削除するには、列挙子は回復不可能<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>スロー、<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">間で、コレクションが変更された場合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>、<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>列挙子が既に無効になっている場合でもに設定されている要素を返します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">列挙子には、コレクションへの排他アクセスがありません。したがって、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>