<Type Name="TextBoxBase" FullName="System.Windows.Controls.Primitives.TextBoxBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="81fef11690f80095ee2a1658ac4e2f240b447657" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TextBoxBase : System.Windows.Controls.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract TextBoxBase extends System.Windows.Controls.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.TextBoxBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextBoxBase&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBoxBase abstract : System::Windows::Controls::Control" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Text)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_ContentHost", Type=typeof(System.Windows.FrameworkElement))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c4bf0-101">
        <see cref="T:System.Windows.Controls.TextBox" /> や <see cref="T:System.Windows.Controls.RichTextBox" /> などのテキスト編集コントロールの機能を提供する抽象基本クラス。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4bf0-101">An abstract base class that provides functionality for text editing controls, including <see cref="T:System.Windows.Controls.TextBox" /> and <see cref="T:System.Windows.Controls.RichTextBox" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4bf0-102">次の例は、派生を使用する方法を示します<xref:System.Windows.Controls.TextBox>オブジェクトに[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]です。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-102">The following example demonstrates how to use the derived <xref:System.Windows.Controls.TextBox> object in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[TextBoxBase_Samp#TextBoxBase1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml#textboxbase1)]  
  
 <span data-ttu-id="c4bf0-103">次の例は、派生を使用する方法を示します<xref:System.Windows.Controls.RichTextBox>コード内のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-103">The following example demonstrates how to use the derived <xref:System.Windows.Controls.RichTextBox> object in code.</span></span>  
  
 [!code-csharp[richtextboxsnippets#_RichTextBox_MouseUpDown](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_richtextbox_mouseupdown)]
 [!code-vb[richtextboxsnippets#_RichTextBox_MouseUpDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_richtextbox_mouseupdown)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.TextBox" />
    <altmember cref="T:System.Windows.Controls.RichTextBox" />
  </Docs>
  <Members>
    <Member MemberName="AcceptsReturn">
      <MemberSignature Language="C#" Value="public bool AcceptsReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsReturn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsReturn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-104">ユーザーが Enter キーを押したとき、テキスト編集コントロールがどのように反応するかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-104">Gets or sets a value that indicates how the text editing control responds when the user presses the ENTER key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bf0-105">Enter キーを押すと現在のカーソル位置に新しい行が挿入される場合は <see langword="true" />。それ以外の場合は、Enter キーは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-105">
              <see langword="true" /> if pressing the ENTER key inserts a new line at the current cursor position; otherwise, the ENTER key is ignored.</span>
          </span>
          <span data-ttu-id="c4bf0-106">既定値は、<see cref="T:System.Windows.Controls.TextBox" /> の場合は <see langword="false" />、<see cref="T:System.Windows.Controls.RichTextBox" /> の場合は <see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-106">The default value is <see langword="false" /> for <see cref="T:System.Windows.Controls.TextBox" /> and <see langword="true" /> for <see cref="T:System.Windows.Controls.RichTextBox" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-107">ENTER キーに対応して`VK_RETURN`仮想キー コード。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-107">The ENTER key corresponds to `VK_RETURN` virtual-key code.</span></span>  
  
<a name="dependencyPropertyInfo_AcceptsReturn"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c4bf0-108">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c4bf0-108">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c4bf0-109">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="c4bf0-109">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty>|  
|<span data-ttu-id="c4bf0-110">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="c4bf0-110">Metadata properties set to `true`</span></span>|<span data-ttu-id="c4bf0-111">なし</span><span class="sxs-lookup"><span data-stu-id="c4bf0-111">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.TextBox.TextWrapping" />
      </Docs>
    </Member>
    <Member MemberName="AcceptsReturnProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsReturnProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsReturnProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsReturnProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsReturnProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-112">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-112">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-113">Tab キーが押されたとき、テキスト編集コントロールがどのように反応するかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-113">Gets or sets a value that indicates how the text editing control responds when the user presses the TAB key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bf0-114">Tab キーを押すと現在のカーソル位置にタブ文字が挿入される場合は <see langword="true" />。タブ文字は挿入されず、タブ位置に指定されている次のコントロールにフォーカスが移動する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-114">
              <see langword="true" /> if pressing the TAB key inserts a tab character at the current cursor position; <see langword="false" /> if pressing the TAB key moves the focus to the next control that is marked as a tab stop and does not insert a tab character.</span>
          </span>
          <span data-ttu-id="c4bf0-115">既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-115">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-116">タブ キーに対応して**VK_TAB**仮想キー コード。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-116">The TAB key corresponds to **VK_TAB** virtual-key code.</span></span>  
  
<a name="dependencyPropertyInfo_AcceptsTab"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c4bf0-117">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c4bf0-117">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c4bf0-118">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="c4bf0-118">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty>|  
|<span data-ttu-id="c4bf0-119">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="c4bf0-119">Metadata properties set to `true`</span></span>|<span data-ttu-id="c4bf0-120">なし</span><span class="sxs-lookup"><span data-stu-id="c4bf0-120">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsTabProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsTabProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsTabProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsTabProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-121">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-121">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.AppendText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData">
          <span data-ttu-id="c4bf0-122">テキスト コントロールの現在の内容に追加するテキストを指定する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-122">A string that specifies the text to append to the current contents of the text control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bf0-123">テキスト コントロールの内容に文字列を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-123">Appends a string to the contents of a text control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-124"><xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A>メソッドにより、ユーザーが多数の連結が必要な場合、パフォーマンスを向上できる文字列連結を使用する必要なく、テキスト コントロールの内容にテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-124">The <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> method enables the user to append text to the contents of a text control without using text concatenation, which, can yield better performance when many concatenations are required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4bf0-125"><xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> メソッドの使用方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-125">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> method.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase11](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase11)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoWordSelection">
      <MemberSignature Language="C#" Value="public bool AutoWordSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoWordSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoWordSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoWordSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-126">マウスのドラッグによって単語の一部が選択された場合に、単語の残りの部分を選択するかどうかを指定する値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-126">Gets or sets a value that determines whether when a user selects part of a word by dragging across it with the mouse, the rest of the word is selected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bf0-127">単語の自動選択が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-127">
              <see langword="true" /> if automatic word selection is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c4bf0-128">既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-128">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-129">ときに<xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A>は有効な場合、その単語の一部がマウスを使用して、単語の一部にドラッグして、ユーザーが選択されているたびに、選択範囲が自動的に展開に単語全体を含めます。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-129">When <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> is enabled, every time that part of a word is selected by the user dragging over part of a word using the mouse, the selection is automatically expanded to include the whole word.</span></span> <span data-ttu-id="c4bf0-130">ユーザーは、すぐに逆にマウス ポインターがドラッグされているように、選択がなされる方向によって単語全体の自動選択をオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-130">The user can override automatic selection of a whole word by momentarily reversing the direction in which the mouse pointer is being dragged as the selection is made.</span></span> <span data-ttu-id="c4bf0-131">この操作は、単語全体の自動選択を元に戻します、正確な単語の一部またはすべてを選択することができます。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-131">This action undoes the automatic selection of the whole word, and enables the user to precisely select part or all of the word.</span></span>  
  
 <span data-ttu-id="c4bf0-132">ときに<xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A>は無効になっている、選択範囲が自動的に単語全体を含めるには展開されません。 ここでは、選択範囲は常に決定されます手動でします。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-132">When <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> is disabled, a selection is not automatically expanded to include whole words; in this case, precise selections are always determined manually.</span></span>  
  
 <span data-ttu-id="c4bf0-133">**注:**自動選択では、最初の単語全体でユーザーがドラッグするには影響しません。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-133">**Note:** Auto selection does not affect the first word that the user drags across.</span></span> <span data-ttu-id="c4bf0-134">自動選択が有効になりますこの最初の単語の境界を超えた後にのみをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-134">It is only after this first word boundary is crossed that auto selection takes effect.</span></span>  
  
<a name="dependencyPropertyInfo_AutoWordSelection"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c4bf0-135">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c4bf0-135">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c4bf0-136">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="c4bf0-136">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty>|  
|<span data-ttu-id="c4bf0-137">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="c4bf0-137">Metadata properties set to `true`</span></span>|<span data-ttu-id="c4bf0-138">なし</span><span class="sxs-lookup"><span data-stu-id="c4bf0-138">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoWordSelectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AutoWordSelectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AutoWordSelectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutoWordSelectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AutoWordSelectionProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-139">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-139">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginChange">
      <MemberSignature Language="C#" Value="public void BeginChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginChange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginChange();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-140">変更ブロックを開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-140">Begins a change block.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-141">**注:**を呼び出すと<xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>も呼び出す必要があります<xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A>ブロックの変更を完了するそれ以外の場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-141">**Note:** When you call <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, you must also call <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> to complete the change block otherwise an exception will be thrown.</span></span>  
  
 <span data-ttu-id="c4bf0-142">ブロックの変更は論理的に単一の取り消し単位に複数の変更をグループ化し、テキスト コンテンツまたは選択変更イベントが、ブロックの変更が終了するまで発生していることを防ぎます。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-142">A change block logically groups multiple changes into a single undo unit and prevents text content or selection change events from being raised until after the change block.</span></span> <span data-ttu-id="c4bf0-143">このように別のリスナーによって、同時に変更されているテキスト要素の危険性なしのテキスト要素には複数の編集をすることができます。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-143">This way you can make multiple edits to the text element without the danger of the text element being changed at the same time by another listener.</span></span> <span data-ttu-id="c4bf0-144">ブロックの変更が呼び出すことによって作成された、<xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-144">A change block is created by calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> method.</span></span> <span data-ttu-id="c4bf0-145">呼び出す、<xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>メソッドにより、対応する呼び出しまで、指定された変更ブロックに含まれるすべての後続変更、<xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A>メソッドが行われます。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-145">Calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> method causes all subsequent changes to be included in the specified change block until a corresponding call to the <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> method is made.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4bf0-146">次の例を使用する方法を示しています、<xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>と<xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A>変更ブロックを作成する方法です。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-146">The following example shows how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> methods to create a change block.</span></span>  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/BeginChangeEndChangeExample.cs#beginchangeendchangecodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/beginchangeendchangeexample.vb#beginchangeendchangecodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
      </Docs>
    </Member>
    <Member MemberName="CanRedo">
      <MemberSignature Language="C#" Value="public bool CanRedo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRedo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRedo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRedo { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-147">最新の取り消し操作をやり直すことができるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-147">Gets a value that indicates whether the most recent undo action can be redone.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bf0-148">最新の取り消し操作をやり直すことができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-148">
              <see langword="true" /> if the most recent undo action can be redone; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c4bf0-149">このプロパティには既定値はありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-149">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4bf0-150">次のコード例を使用する方法を示しています、<xref:System.Windows.Controls.Primitives.TextBoxBase.CanRedo%2A>プロパティを最新の元に戻す操作をやり直すことができるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-150">The following code example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.CanRedo%2A> property to determine whether the most recent undo action can be redone.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase9)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUndo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.CanUndo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanUndo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanUndo { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-151">最新の操作を取り消すことができるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-151">Gets a value that indicates whether the most recent action can be undone.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bf0-152">
            <see langword="true" /> 最新の操作が完了しました。 指定できる場合それ以外の場合、<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-152">
              <see langword="true" /> if the most recent action can be undone; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c4bf0-153">このプロパティには既定値はありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-153">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4bf0-154">次のコード例を使用する方法を示しています、<xref:System.Windows.Controls.Primitives.TextBoxBase.CanUndo%2A>できるかどうかを決定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-154">The following code example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.CanUndo%2A> property to determine whether the most recent action can be undone.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase8)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
      </Docs>
    </Member>
    <Member MemberName="CaretBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush CaretBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush CaretBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property CaretBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ CaretBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-155">テキスト ボックスのキャレットの描画に使用するブラシを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-155">Gets or sets the brush that is used to paint the caret of the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bf0-156">テキスト ボックスのキャレットの描画に使用するブラシ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-156">The brush that is used to paint the caret of the text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4bf0-157">次の例を作成、<xref:System.Windows.Controls.TextBox>し、「これは、いくつかのテキストです」ですテキストの追加。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-157">The following example creates a <xref:System.Windows.Controls.TextBox> and adds the text, "This is some text."</span></span> <span data-ttu-id="c4bf0-158">例のセット、<xref:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush%2A>と<xref:System.Windows.Controls.Control.Foreground%2A>のプロパティ、<xref:System.Windows.Controls.TextBox>青にします。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-158">The example sets the <xref:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush%2A> and <xref:System.Windows.Controls.Control.Foreground%2A> properties of a <xref:System.Windows.Controls.TextBox> to blue.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#TextBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#textbox)]   
  
 <span data-ttu-id="c4bf0-159">前の例では、次の図のような出力を生成します。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-159">The preceding example produces output that is like the following illustration.</span></span>  
  
 <span data-ttu-id="c4bf0-160">![青に設定された CaretBrush のあるテキスト ボックス。](~/add/media/textboxcaretbrush.png "された CaretBrush のあるテキスト ボックスが青に設定します。")</span><span class="sxs-lookup"><span data-stu-id="c4bf0-160">![TextBox with CaretBrush set to blue.](~/add/media/textboxcaretbrush.png "TextBox with CaretBrush set to blue.")</span></span>  
<span data-ttu-id="c4bf0-161">青に設定された CaretBrush の TextBox</span><span class="sxs-lookup"><span data-stu-id="c4bf0-161">TextBox with CaretBrush set to blue</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CaretBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CaretBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.CaretBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CaretBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CaretBrushProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-162">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-162">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-163">テキスト編集コントロールの現在の選択内容を <see cref="T:System.Windows.Clipboard" /> にコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-163">Copies the current selection of the text editing control to the <see cref="T:System.Windows.Clipboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-164">コピー操作を選択したテキストをコピー、<xref:System.Windows.Clipboard>です。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-164">A copy operation copies the selected text to the <xref:System.Windows.Clipboard>.</span></span> <span data-ttu-id="c4bf0-165">選択したテキストがテキスト編集コントロールで、プロセスから削除されないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-165">Note that the selected text is not removed from the text editing control in the process.</span></span> <span data-ttu-id="c4bf0-166">同様のメソッド、 <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A>、移動するのには、現在の選択、<xref:System.Windows.Clipboard>し、テキスト、プロセス内のコントロールを編集から、選択したテキストを削除します。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-166">A similar method, <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A>, moves the current selection to the <xref:System.Windows.Clipboard> and removes the selected text from the text editing control in the process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4bf0-167">次の例で使用する方法、<xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A>で選択されているテキストをコピーする方法、<xref:System.Windows.Controls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-167">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A> method to copy the text that is selected in a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase4](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase4)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="c4bf0-168">継承時の完全な信頼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-168">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="c4bf0-169">このメンバーは、部分的に信頼されたコードでは継承できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-169">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Paste" />
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-170">テキスト編集コントロールの現在の選択内容を削除して <see cref="T:System.Windows.Clipboard" /> にコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-170">Removes the current selection from the text editing control and copies it to the <see cref="T:System.Windows.Clipboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-171">切り取り操作はテキスト編集コントロールから現在の選択範囲を削除し、コピーを<xref:System.Windows.Clipboard>です。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-171">A cut operation removes the current selection from the text editing control and copies it to the <xref:System.Windows.Clipboard>.</span></span> <span data-ttu-id="c4bf0-172">選択したテキストが削除されたことに注意してください () から切り取りテキスト、プロセス内のコントロールを編集します。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-172">Note that the selected text is removed (cut) from the text editing control in the process.</span></span> <span data-ttu-id="c4bf0-173">同様のメソッド、 <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A>、現在の選択範囲をクリップボードにコピーが、テキスト編集コントロールから、選択したテキストは削除されません。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-173">A similar method, <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A>, copies the current selection to the Clipboard, but does not remove the selected text from the text editing control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4bf0-174">次の例で使用する方法、<xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A>で選択されているテキストを削除する方法、<xref:System.Windows.Controls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-174">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A> method to delete the text that is selected in a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase5](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase5)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase5)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="c4bf0-175">継承時の完全な信頼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-175">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="c4bf0-176">このメンバーは、部分的に信頼されたコードでは継承できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-176">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Paste" />
      </Docs>
    </Member>
    <Member MemberName="DeclareChangeBlock">
      <MemberSignature Language="C#" Value="public IDisposable DeclareChangeBlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable DeclareChangeBlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
      <MemberSignature Language="VB.NET" Value="Public Function DeclareChangeBlock () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ DeclareChangeBlock();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-177">変更ブロックを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-177">Creates a change block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4bf0-178">新しい変更ブロックを参照する <see cref="T:System.IDisposable" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-178">An <see cref="T:System.IDisposable" /> object that refers to a new change block.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-179">ブロックの変更には、複数の変更を単一の元に戻す単位に論理的にグループ化します。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-179">A change block logically groups multiple changes into a single undo unit.</span></span> <span data-ttu-id="c4bf0-180">ブロックの変更が呼び出すことによって作成された、<xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-180">A change block is created by calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> method.</span></span> <span data-ttu-id="c4bf0-181">呼び出す、<xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>メソッドにより、対応する呼び出しまで、指定された変更ブロックに含まれるすべての後続変更、<xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A>メソッドが行われます。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-181">Calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> method causes all subsequent changes to be included in the specified change block until a corresponding call to the <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> method is made.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
      </Docs>
    </Member>
    <Member MemberName="EndChange">
      <MemberSignature Language="C#" Value="public void EndChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndChange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndChange();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-182">変更ブロックを終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-182">Ends a change block.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-183">**注:**を呼び出すと<xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>も呼び出す必要があります<xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A>ブロックの変更を完了するそれ以外の場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-183">**Note:** When you call <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, you must also call <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> to complete the change block otherwise an exception will be thrown.</span></span>  
  
 <span data-ttu-id="c4bf0-184">ブロックの変更は論理的に単一の取り消し単位に複数の変更をグループ化し、テキスト コンテンツまたは選択変更イベントが、ブロックの変更が終了するまで発生していることを防ぎます。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-184">A change block logically groups multiple changes into a single undo unit and prevents text content or selection change events from being raised until after the change block.</span></span> <span data-ttu-id="c4bf0-185">こうすると、同時に別のプロセスによって変更されているテキスト要素の危険性なしのテキスト要素には複数の編集をすることができます。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-185">This way you can make multiple edits to the text element without the danger of the text element being changed at the same time by another process.</span></span> <span data-ttu-id="c4bf0-186">ブロックの変更が呼び出すことによって作成された、<xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-186">A change block is created by calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> method.</span></span> <span data-ttu-id="c4bf0-187">呼び出す、<xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>メソッドにより、対応する呼び出しまで、指定された変更ブロックに含まれるすべての後続変更、<xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A>メソッドが行われます。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-187">Calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> method causes all subsequent changes to be included in the specified change block until a corresponding call to the <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> method is made.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4bf0-188">次の例を使用する方法を示しています、<xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>と<xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A>変更ブロックを作成する方法です。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-188">The following example shows how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> methods to create a change block.</span></span>  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/BeginChangeEndChangeExample.cs#beginchangeendchangecodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/beginchangeendchangeexample.vb#beginchangeendchangecodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="ExtentHeight">
      <MemberSignature Language="C#" Value="public double ExtentHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-189">表示されるコンテンツ エリアの縦幅を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-189">Gets the vertical size of the visible content area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bf0-190">表示されるコンテンツ エリアの縦幅を[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定する浮動小数点値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-190">A floating-point value that specifies the vertical size of the visible content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="c4bf0-191">スクロールをサポートするようにテキスト編集コントロールが構成されていない場合、このプロパティの値は 0.0 になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-191">The value of this property is 0.0 if the text-editing control is not configured to support scrolling.</span>
          </span>
          <span data-ttu-id="c4bf0-192">このプロパティには既定値はありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-192">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4bf0-193">次の例では、値を読み取る、<xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-193">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="ExtentWidth">
      <MemberSignature Language="C#" Value="public double ExtentWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-194">表示されるコンテンツ エリアの横幅を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-194">Gets the horizontal size of the visible content area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bf0-195">表示されるコンテンツ エリアの横幅を[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定する浮動小数点値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-195">A floating-point value that specifies the horizontal size of the visible content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="c4bf0-196">スクロールをサポートするようにテキスト編集コントロールが構成されていない場合、このプロパティの値は 0.0 になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-196">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span>
          </span>
          <span data-ttu-id="c4bf0-197">このプロパティには既定値はありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-197">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4bf0-198">次の例では、値を読み取る、<xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-198">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffset">
      <MemberSignature Language="C#" Value="public double HorizontalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HorizontalOffset { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-199">水平方向のスクロール位置を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-199">Gets or sets the horizontal scroll position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bf0-200">水平スクロール位置を[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定する浮動小数点値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-200">A floating-point value that specifies the horizontal scroll position, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="c4bf0-201">このプロパティを設定すると、指定した水平オフセットまでテキスト編集コントロールがスクロールします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-201">Setting this property causes the text editing control to scroll to the specified horizontal offset.</span>
          </span>
          <span data-ttu-id="c4bf0-202">このプロパティを読み取ると、現在の水平オフセットが返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-202">Reading this property returns the current horizontal offset.</span>
          </span>
          <span data-ttu-id="c4bf0-203">スクロールをサポートするようにテキスト編集コントロールが構成されていない場合、このプロパティの値は 0.0 になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-203">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span>
          </span>
          <span data-ttu-id="c4bf0-204">このプロパティには既定値はありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-204">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-205">右から左モードで作業している場合、水平方向のオフセットが表示されるテキスト領域の右側から測定されます。それ以外の場合、左から計測されます。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-205">The horizontal offset is measured from the right of the visible text area if you are working in right-to-left mode; otherwise, it is measured from the left.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4bf0-206">次の例では、値を読み取る、<xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-206">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4bf0-207">このプロパティを負の値に設定しようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-207">An attempt is made to set this property to a negative value.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility HorizontalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-208">水平スクロール バーが表示されるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-208">Gets or sets a value that indicates whether a horizontal scroll bar is shown.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bf0-209">
            <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 列挙体によって定義されている値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-209">A value that is defined by the <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> enumeration.</span>
          </span>
          <span data-ttu-id="c4bf0-210">既定値は <see cref="F:System.Windows.Visibility.Hidden" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-210">The default value is <see cref="F:System.Windows.Visibility.Hidden" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_HorizontalScrollBarVisibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c4bf0-211">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c4bf0-211">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c4bf0-212">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="c4bf0-212">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty>|  
|<span data-ttu-id="c4bf0-213">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="c4bf0-213">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="c4bf0-214">次の例は、の値を設定する方法を示します、<xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A>プロパティを使用して[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]です。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-214">The following example demonstrates how to set the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> property by using [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[TextBoxBase_Samp#TextBoxBase1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml#textboxbase1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalScrollBarVisibilityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-215">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-215">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInactiveSelectionHighlightEnabled">
      <MemberSignature Language="C#" Value="public bool IsInactiveSelectionHighlightEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInactiveSelectionHighlightEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsInactiveSelectionHighlightEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInactiveSelectionHighlightEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-216">テキスト ボックスにフォーカスがない場合にテキスト ボックスが選択されたテキストを表示するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-216">Gets or sets a value that indicates whether the text box displays selected text when the text box does not have focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bf0-217">テキスト ボックスにフォーカスがないときにテキスト ボックスが選択されたテキストを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-217">
              <see langword="true" /> if the text box displays selected text when the text box does not have focus; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c4bf0-218">登録済みの既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-218">The registered default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c4bf0-219">新機能に影響を与える値の詳細については、次を参照してください。[依存関係プロパティの値の優先順位](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-219">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsInactiveSelectionHighlightEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c4bf0-220">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c4bf0-220">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c4bf0-221">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="c4bf0-221">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty>|  
|<span data-ttu-id="c4bf0-222">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="c4bf0-222">Metadata properties set to `true`</span></span>|<span data-ttu-id="c4bf0-223">なし</span><span class="sxs-lookup"><span data-stu-id="c4bf0-223">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInactiveSelectionHighlightEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsInactiveSelectionHighlightEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsInactiveSelectionHighlightEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsInactiveSelectionHighlightEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsInactiveSelectionHighlightEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-224">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-224">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-225">テキスト編集コントロールを操作するユーザーに対して、コントロールが読み取り専用であるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-225">Gets or sets a value that indicates whether the text editing control is read-only to a user interacting with the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bf0-226">テキスト編集コントロールの内容がユーザーに対して読み取り専用の場合は <see langword="true" />。それ以外の場合は、テキスト編集コントロールの内容をユーザーが変更できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-226">
              <see langword="true" /> if the contents of the text editing control are read-only to a user; otherwise, the contents of the text editing control can be modified by the user.</span>
          </span>
          <span data-ttu-id="c4bf0-227">既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-227">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-228">この値には、コントロールを操作しているユーザーのみに影響します。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-228">This value only affects a user who is interacting with the control.</span></span> <span data-ttu-id="c4bf0-229">テキスト編集コントロールの内容は、プログラムで常に変更できます。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-229">The contents of a text editing control can always be modified programmatically.</span></span>  
  
<a name="dependencyPropertyInfo_IsReadOnly"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c4bf0-230">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c4bf0-230">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c4bf0-231">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="c4bf0-231">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty>|  
|<span data-ttu-id="c4bf0-232">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="c4bf0-232">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyCaretVisible">
      <MemberSignature Language="C#" Value="public bool IsReadOnlyCaretVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnlyCaretVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnlyCaretVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnlyCaretVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-233">読み取り専用のテキスト ボックスにキャレットが表示されるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-233">Gets or sets a value that indicates whether a read-only text box displays a caret.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bf0-234">読み取り専用のテキスト ボックスにキャレットが表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-234">
              <see langword="true" /> if a read-only text box displays a caret; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c4bf0-235">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-235">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-236">ときに<xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A>は`true`ユーザーがテキストを選択してコピーできます。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-236">When <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> is `true`, a user can still select and copy text.</span></span> <span data-ttu-id="c4bf0-237">場合、<xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A>プロパティに設定されても`true`キャレットは、テキスト ボックスにキーボード フォーカスがある場合、テキスト ボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-237">If the <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> property is also set to `true`, a caret will appear in the text box when the text box has keyboard focus.</span></span> <span data-ttu-id="c4bf0-238">ときに<xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A>は`false`、<xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A>プロパティは影響を与えません。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-238">When <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> is `false`, the <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> property has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyCaretVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyCaretVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyCaretVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyCaretVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyCaretVisibleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-239">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-239">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-240">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-240">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionActive">
      <MemberSignature Language="C#" Value="public bool IsSelectionActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelectionActive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelectionActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelectionActive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-241">テキスト ボックスにフォーカスがあり、選択されたテキストがあるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-241">Gets a value that indicates whether the text box has focus and selected text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bf0-242">テキスト ボックスにフォーカスと選択したテキストがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-242">
              <see langword="true" /> if the text box has focus and selected text; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c4bf0-243">登録済みの既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-243">The registered default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c4bf0-244">新機能に影響を与える値の詳細については、次を参照してください。[依存関係プロパティの値の優先順位](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-244">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsSelectionActive"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c4bf0-245">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c4bf0-245">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c4bf0-246">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="c4bf0-246">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty>|  
|<span data-ttu-id="c4bf0-247">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="c4bf0-247">Metadata properties set to `true`</span></span>|<span data-ttu-id="c4bf0-248">なし</span><span class="sxs-lookup"><span data-stu-id="c4bf0-248">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionActiveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSelectionActiveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSelectionActiveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSelectionActiveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSelectionActiveProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-249">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-249">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUndoEnabled">
      <MemberSignature Language="C#" Value="public bool IsUndoEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUndoEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUndoEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUndoEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-250">テキスト編集コントロールについて、元に戻す機能が有効であるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-250">Gets or sets a value that indicates whether undo support is enabled for the text-editing control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bf0-251">取り消しのサポートが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-251">
              <see langword="true" /> if undo support is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c4bf0-252">既定値は <see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-252">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-253">このプロパティを設定`false`元に戻すスタックをクリアします。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-253">Setting this property to `false` clears the undo stack.</span></span> <span data-ttu-id="c4bf0-254">そのため、元に戻すを無効にし、再度有効にすると、元に戻すコマンドもは機能しません元に戻すを無効にしたときに、元に戻すスタックが空にされたため。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-254">Therefore, if you disable undo and then re-enable it, undo commands still do not work because the undo stack was emptied when you disabled undo.</span></span>  
  
<a name="dependencyPropertyInfo_IsUndoEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c4bf0-255">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c4bf0-255">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c4bf0-256">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="c4bf0-256">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty>|  
|<span data-ttu-id="c4bf0-257">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="c4bf0-257">Metadata properties set to `true`</span></span>|<span data-ttu-id="c4bf0-258">なし</span><span class="sxs-lookup"><span data-stu-id="c4bf0-258">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c4bf0-259">次の例で使用する方法、<xref:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled%2A>プロパティ[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]です。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-259">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled%2A> property in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[TextBoxBase_Samp#TextBoxBase1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml#textboxbase1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
      </Docs>
    </Member>
    <Member MemberName="IsUndoEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsUndoEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsUndoEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsUndoEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsUndoEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-260">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-260">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDown">
      <MemberSignature Language="C#" Value="public void LineDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineDown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-261">コントロールの内容を 1 行ずつ下にスクロールします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-261">Scrolls the contents of the control down by one line.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4bf0-262">次の例で使用する方法、<xref:System.Windows.Controls.Primitives.TextBoxBase.LineDown%2A>の内容をスクロールするメソッド、<xref:System.Windows.Controls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-262">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineDown%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase13](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase13)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      </Docs>
    </Member>
    <Member MemberName="LineLeft">
      <MemberSignature Language="C#" Value="public void LineLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineLeft();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-263">コントロールの内容を 1 行ずつ左にスクロールします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-263">Scrolls the contents of the control to the left by one line.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4bf0-264">次の例で使用する方法、<xref:System.Windows.Controls.Primitives.TextBoxBase.LineLeft%2A>の内容をスクロールするメソッド、<xref:System.Windows.Controls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-264">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineLeft%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase14](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase14)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      </Docs>
    </Member>
    <Member MemberName="LineRight">
      <MemberSignature Language="C#" Value="public void LineRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineRight();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-265">コントロールの内容を 1 行ずつ右にスクロールします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-265">Scrolls the contents of the control to the right by one line.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4bf0-266">次の例で使用する方法、<xref:System.Windows.Controls.Primitives.TextBoxBase.LineRight%2A>の内容をスクロールするメソッド、<xref:System.Windows.Controls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-266">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineRight%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase15](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase15)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      </Docs>
    </Member>
    <Member MemberName="LineUp">
      <MemberSignature Language="C#" Value="public void LineUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineUp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-267">コントロールの内容を 1 行ずつ上にスクロールします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-267">Scrolls the contents of the control upward by one line.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4bf0-268">次の例で使用する方法、<xref:System.Windows.Controls.Primitives.TextBoxBase.LineUp%2A>の内容をスクロールするメソッド、<xref:System.Windows.Controls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-268">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineUp%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase16](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase16)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
      </Docs>
    </Member>
    <Member MemberName="LockCurrentUndoUnit">
      <MemberSignature Language="C#" Value="public void LockCurrentUndoUnit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LockCurrentUndoUnit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      <MemberSignature Language="VB.NET" Value="Public Sub LockCurrentUndoUnit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LockCurrentUndoUnit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-269">アプリケーションの undo スタックの最新の undo 単位をロックします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-269">Locks the most recent undo unit of the undo stack of the application.</span>
          </span>
          <span data-ttu-id="c4bf0-270">これにより、ロックした単位が、その後に追加される undo 単位とマージされなくなります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-270">This prevents the locked unit from being merged with undo units that are added subsequently.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-271">テキスト以外の undo ユニットが、アプリケーションのメインの元に戻すスタックに追加されると、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-271">Call this method when a non-text undo unit is added to the application's main undo stack.</span></span> <span data-ttu-id="c4bf0-272">これにより、ロックした単位が、その後に追加される undo 単位とマージされなくなります。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-272">This prevents the locked unit from being merged with undo units that are added subsequently.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-273">コントロール テンプレートが適用されると呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-273">Is called when a control template is applied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-274"><xref:System.Windows.FrameworkElement.OnApplyTemplate%2A> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-274">Overrides <xref:System.Windows.FrameworkElement.OnApplyTemplate%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c4bf0-275">派生クラスで実装された場合、このメソッドはアプリケーション コードまたは内部プロセスを呼び出すたびに<see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c4bf0-275">When implemented in a derived class, this method is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuOpening">
      <MemberSignature Language="C#" Value="protected override void OnContextMenuOpening (System.Windows.Controls.ContextMenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContextMenuOpening(class System.Windows.Controls.ContextMenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContextMenuOpening (e As ContextMenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContextMenuOpening(System::Windows::Controls::ContextMenuEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ContextMenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4bf0-276">イベントの引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-276">Arguments of the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bf0-277">未処理の <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> ルーティング イベントが、その経路上でこのクラスに到達するたびに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-277">Called whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> routed event reaches this class in its route.</span>
          </span>
          <span data-ttu-id="c4bf0-278">このイベントに対するクラス処理を追加するには、このメソッドを実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-278">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-279">このメソッドには、既定の実装ではありません。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-279">This method has no default implementation.</span></span> <span data-ttu-id="c4bf0-280">継承の中間クラスがこのメソッドを実装している場合は、基本実装を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-280">You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.</span></span>  
  
 <span data-ttu-id="c4bf0-281">このメソッドの目的は、類似した[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]でのイベント パターン \* メソッド: インスタンス ハンドラーではなく、クラス ハンドラーを使用して派生クラスからの一致するイベントを処理することができます。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-281">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it lets you handle the matching event from derived classes by using a class handler instead of an instance handler.</span></span> <span data-ttu-id="c4bf0-282">ここでは、一致するイベントは、ルーティングされたイベントです。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-282">In this case, the matching event is a routed event.</span></span> <span data-ttu-id="c4bf0-283">On のメソッドの実装パターンではルーティング イベントの異なるルーティング イベントを必ずしもハンドラーを呼び出すの要素ではない子要素で発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-283">The implementation pattern of the On\* methods is different for routed events because the routed event might have been raised by a child element, which is not necessarily the element that invokes handlers.</span></span> <span data-ttu-id="c4bf0-284">そのため、実装、イベント引数のソースのプロパティを考慮に入れる必要があります (および再ほとんどの場合、イベントを発生させる必要がありますいないを再試行してください)。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-284">Therefore, your implementation needs to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="c4bf0-285">サブクラス<xref:System.Windows.Controls.Primitives.TextBoxBase>経路イベントが受信したときに、プライベート クラス ハンドラー メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-285">Subclasses of <xref:System.Windows.Controls.Primitives.TextBoxBase> can call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="c4bf0-286">1 つのシナリオでは、イベントの引数を受け取り、処理済みとして意図的にイベントをマークします。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-286">One scenario is to take the arguments of the event and deliberately mark the event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected override void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4bf0-287">イベントに関するデータを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-287">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bf0-288">未処理の <see cref="E:System.Windows.DragDrop.DragEnter" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-288">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="c4bf0-289">このイベントに対するクラス処理を追加するには、このメソッドを実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-289">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected override void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4bf0-290">イベントに関するデータを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-290">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bf0-291">未処理の <see cref="E:System.Windows.DragDrop.DragLeave" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-291">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="c4bf0-292">このイベントに対するクラス処理を追加するには、このメソッドを実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-292">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected override void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4bf0-293">イベントに関するデータを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-293">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bf0-294">未処理の <see cref="E:System.Windows.DragDrop.DragOver" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-294">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="c4bf0-295">このイベントに対するクラス処理を追加するには、このメソッドを実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-295">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected override void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4bf0-296">イベントに関するデータを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-296">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bf0-297">未処理の <see cref="E:System.Windows.DragDrop.DragEnter" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-297">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="c4bf0-298">このイベントに対するクラス処理を追加するには、このメソッドを実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-298">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected override void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4bf0-299">イベントに関するデータを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-299">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bf0-300">未処理の <see cref="E:System.Windows.DragDrop.GiveFeedback" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-300">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="c4bf0-301">このイベントに対するクラス処理を追加するには、このメソッドを実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-301">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4bf0-302">イベントに関するデータを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-302">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bf0-303">未処理の <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-303">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="c4bf0-304">このイベントに対するクラス処理を追加するには、このメソッドを実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-304">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4bf0-305">イベントに関するデータを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-305">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bf0-306">未処理の <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-306">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="c4bf0-307">このイベントに対するクラス処理を追加するには、このメソッドを実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-307">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4bf0-308">イベントに関するデータを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-308">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bf0-309">未処理の <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-309">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="c4bf0-310">このイベントに対するクラス処理を追加するには、このメソッドを実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-310">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4bf0-311">イベントに関するデータを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-311">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bf0-312">
            <see cref="E:System.Windows.UIElement.LostFocus" /> イベントを (指定された引数を使用して) 発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-312">Raises the <see cref="E:System.Windows.UIElement.LostFocus" /> event (using the provided arguments).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4bf0-313">イベントに関するデータを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-313">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bf0-314">未処理の <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-314">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="c4bf0-315">このイベントに対するクラス処理を追加するには、このメソッドを実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-315">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4bf0-316">イベントに関するデータを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-316">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bf0-317">未処理の <see cref="E:System.Windows.Input.Mouse.MouseDown" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-317">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="c4bf0-318">このイベントに対するクラス処理を追加するには、このメソッドを実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-318">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4bf0-319">イベントに関するデータを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-319">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bf0-320">未処理の <see cref="E:System.Windows.Input.Mouse.MouseMove" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-320">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="c4bf0-321">このイベントに対するクラス処理を追加するには、このメソッドを実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-321">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4bf0-322">イベントの引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-322">Arguments of the event.</span>
          </span>
          <span data-ttu-id="c4bf0-323">これらの引数には、押されたマウス ボタンおよび処理済み状態に関する詳細が含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-323">These arguments will include details about which mouse button was depressed, and the handled state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bf0-324">未処理の <see cref="E:System.Windows.Input.Mouse.MouseUp" /> イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-324">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="c4bf0-325">このイベントに対するクラス処理を追加するには、このメソッドを実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-325">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected override void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4bf0-326">このイベントに関連付けられるマウス ホイール引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-326">The mouse wheel arguments that are associated with this event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bf0-327">
            <see cref="E:System.Windows.UIElement.MouseWheel" /> イベントがこのクラス (またはこのクラスを継承するクラス) にルーティングされると呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-327">Is called when a <see cref="E:System.Windows.UIElement.MouseWheel" /> event is routed to this class (or to a class that inherits from this class).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-328"><xref:System.Windows.UIElement.MouseWheel>イベントは、マウス ホイールをロールバックするときに発生します。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-328">The <xref:System.Windows.UIElement.MouseWheel> event occurs when the mouse wheel is rolled.</span></span>  
  
 <span data-ttu-id="c4bf0-329"><xref:System.Windows.UIElement.OnMouseWheel%2A> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-329">Overrides <xref:System.Windows.UIElement.OnMouseWheel%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4bf0-330">イベントのデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-330">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bf0-331">
            <see cref="E:System.Windows.UIElement.KeyDown" /> が発生するときに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-331">Called when the <see cref="E:System.Windows.UIElement.KeyDown" /> occurs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected override void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4bf0-332">イベントに関するデータを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-332">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bf0-333">未処理の <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-333">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached  routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="c4bf0-334">このイベントに対するクラス処理を追加するには、このメソッドを実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-334">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-335">このメソッドには、既定の実装ではありません。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-335">This method has no default implementation.</span></span> <span data-ttu-id="c4bf0-336">継承の中間クラスには、このメソッドが実装されている場合に、実装で base() を呼び出すことはお勧めもします。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-336">Calling base() in your implementation is still recommended, in case an intermediate class in the inheritance implemented this method.</span></span> <span data-ttu-id="c4bf0-337">要件に応じて、特別な処理の前後 base() を呼び出すことがあります。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-337">You may call base() either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="c4bf0-338">このメソッドの目的は、類似した[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]でのイベント パターン \* メソッド: インスタンス ハンドラーではなく、クラス ハンドラーを使用して派生クラスからの一致するイベントを処理することができます。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-338">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it lets you handle the matching event from derived classes by using a class handler instead of an instance handler.</span></span> <span data-ttu-id="c4bf0-339">ここでは、一致するイベントは、ルーティングされたイベントです。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-339">In this case, the matching event is a routed event.</span></span> <span data-ttu-id="c4bf0-340">On のメソッドの実装パターンではルーティング イベントの異なるルーティング イベントを必ずしもハンドラーを呼び出すの要素ではない子要素で発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-340">The implementation pattern of the On\* methods is different for routed events because the routed event may have been raised by a child element, which is not necessarily the element that invokes handlers.</span></span> <span data-ttu-id="c4bf0-341">そのため、実装、イベント引数のソースのプロパティを考慮に入れる必要があります (および再ほとんどの場合、イベントを発生させる必要がありますいないを再試行してください)。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-341">Therefore, your implementation needs to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="c4bf0-342">サブクラス<xref:System.Windows.Controls.Primitives.TextBoxBase>経路イベントが受信したときに、プライベート クラス ハンドラー メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-342">Subclasses of <xref:System.Windows.Controls.Primitives.TextBoxBase> can choose to call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="c4bf0-343">1 つのシナリオでは、イベントの引数およびイベントを処理済みとしてマークします。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-343">One scenario is to take the arguments of the event and mark the event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected override void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4bf0-344">イベントに関するデータを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-344">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bf0-345">未処理の <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-345">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="c4bf0-346">このイベントに対するクラス処理を追加するには、このメソッドを実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-346">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChanged (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChanged(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4bf0-347">
            <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> イベントに関連付けられている引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-347">The arguments that are associated with the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bf0-348">キャレットの位置 (現在の選択の位置) が変わると呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-348">Is called when the caret or current selection changes position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-349">このメソッドを発生させる、<xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-349">This method raises a <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTemplateChanged">
      <MemberSignature Language="C#" Value="protected override void OnTemplateChanged (System.Windows.Controls.ControlTemplate oldTemplate, System.Windows.Controls.ControlTemplate newTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTemplateChanged(class System.Windows.Controls.ControlTemplate oldTemplate, class System.Windows.Controls.ControlTemplate newTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTemplateChanged (oldTemplate As ControlTemplate, newTemplate As ControlTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTemplateChanged(System::Windows::Controls::ControlTemplate ^ oldTemplate, System::Windows::Controls::ControlTemplate ^ newTemplate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldTemplate" Type="System.Windows.Controls.ControlTemplate" />
        <Parameter Name="newTemplate" Type="System.Windows.Controls.ControlTemplate" />
      </Parameters>
      <Docs>
        <param name="oldTemplate">
          <span data-ttu-id="c4bf0-350">現在アクティブなコントロール テンプレートを指定する <see cref="T:System.Windows.Controls.ControlTemplate" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-350">A <see cref="T:System.Windows.Controls.ControlTemplate" /> object that specifies the control template that is currently active.</span>
          </span>
        </param>
        <param name="newTemplate">
          <span data-ttu-id="c4bf0-351">使用する新しいコントロール テンプレートを指定する <see cref="T:System.Windows.Controls.ControlTemplate" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-351">A <see cref="T:System.Windows.Controls.ControlTemplate" /> object that specifies a new control template to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bf0-352">コントロール テンプレートが変更されたときに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-352">Is called when the control template changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-353"><xref:System.Windows.Controls.Control.OnTemplateChanged%2A> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-353">Overrides <xref:System.Windows.Controls.Control.OnTemplateChanged%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextChanged (System.Windows.Controls.TextChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextChanged(class System.Windows.Controls.TextChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextChanged (e As TextChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextChanged(System::Windows::Controls::TextChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.TextChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4bf0-354">
            <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> イベントに関連付けられている引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-354">The arguments that are associated with the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bf0-355">この編集コントロールの内容が変更されると呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-355">Is called when content in this editing control changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-356">このメソッドを発生させる、<xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-356">This method raises a <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected override void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4bf0-357">イベントに関するデータを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-357">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bf0-358">未処理の <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-358">Invoked whenever an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="c4bf0-359">このイベントに対するクラス処理を追加するには、このメソッドを実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-359">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageDown">
      <MemberSignature Language="C#" Value="public void PageDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageDown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-360">コントロールの内容を 1 ページずつ下にスクロールします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-360">Scrolls the contents of the control down by one page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4bf0-361">次の例で使用する方法、<xref:System.Windows.Controls.Primitives.TextBoxBase.PageDown%2A>の内容をスクロールするメソッド、<xref:System.Windows.Controls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-361">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageDown%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase17](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase17)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      </Docs>
    </Member>
    <Member MemberName="PageLeft">
      <MemberSignature Language="C#" Value="public void PageLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageLeft();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-362">コントロールの内容を 1 ページずつ左にスクロールします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-362">Scrolls the contents of the control to the left by one page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4bf0-363">次の例で使用する方法、<xref:System.Windows.Controls.Primitives.TextBoxBase.PageLeft%2A>の内容をスクロールするメソッド、<xref:System.Windows.Controls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-363">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageLeft%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase18](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase18)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase18](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      </Docs>
    </Member>
    <Member MemberName="PageRight">
      <MemberSignature Language="C#" Value="public void PageRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageRight();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-364">コントロールの内容を 1 ページずつ右にスクロールします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-364">Scrolls the contents of the control to the right by one page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4bf0-365">次の例で使用する方法、<xref:System.Windows.Controls.Primitives.TextBoxBase.PageRight%2A>の内容をスクロールするメソッド、<xref:System.Windows.Controls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-365">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageRight%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase19](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase19)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase19](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      </Docs>
    </Member>
    <Member MemberName="PageUp">
      <MemberSignature Language="C#" Value="public void PageUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageUp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-366">コントロールの内容を 1 ページずつ上にスクロールします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-366">Scrolls the contents of the control up by one page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4bf0-367">次の例で使用する方法、<xref:System.Windows.Controls.Primitives.TextBoxBase.PageUp%2A>の内容をスクロールするメソッド、<xref:System.Windows.Controls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-367">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageUp%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase20](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase20)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-368">テキスト編集コントロールの現在の選択箇所にクリップボードの内容を貼り付けます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-368">Pastes the contents of the Clipboard over the current selection in the text editing control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4bf0-369">次の例で使用する方法、<xref:System.Windows.Controls.Primitives.TextBoxBase.Paste%2A>に選択したコンテンツを貼り付けるメソッド、<xref:System.Windows.Controls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-369">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Paste%2A> method to paste selected content into a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase6](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase6)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Copy" />
      </Docs>
    </Member>
    <Member MemberName="Redo">
      <MemberSignature Language="C#" Value="public bool Redo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Redo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
      <MemberSignature Language="VB.NET" Value="Public Function Redo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Redo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-370">最新の取り消しコマンドを取り消します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-370">Undoes the most recent undo command.</span>
          </span>
          <span data-ttu-id="c4bf0-371">つまり、undo スタックの最新の undo 単位をやり直します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-371">In other words, redoes the most recent undo unit on the undo stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4bf0-372">やり直しの操作が正常に実行された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-372">
              <see langword="true" /> if the redo operation was successful; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c4bf0-373">使用できる取り消しコマンドがない場合 (undo スタックが空の場合) には <see langword="false" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-373">This method returns <see langword="false" /> if there is no undo command available (the undo stack is empty).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4bf0-374"><xref:System.Windows.Controls.Primitives.TextBoxBase.Redo%2A> メソッドの使用方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-374">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Redo%2A> method.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase9)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToEnd">
      <MemberSignature Language="C#" Value="public void ScrollToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToEnd ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToEnd();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-375">編集コントロールのビューを内容の最後までスクロールします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-375">Scrolls the view of the editing control to the end of the content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4bf0-376">次の例で使用する方法、<xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd%2A>の内容をスクロールするメソッド、<xref:System.Windows.Controls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-376">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase22](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase22)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase22](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToHome">
      <MemberSignature Language="C#" Value="public void ScrollToHome ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToHome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToHome ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToHome();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-377">編集コントロールのビューをビューポートの先頭までスクロールします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-377">Scrolls the view of the editing control to the beginning of the viewport.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4bf0-378">次の例で使用する方法、<xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome%2A>の内容をスクロールするメソッド、<xref:System.Windows.Controls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-378">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase21](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase21)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToHorizontalOffset">
      <MemberSignature Language="C#" Value="public void ScrollToHorizontalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToHorizontalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHorizontalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToHorizontalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToHorizontalOffset(double offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="c4bf0-379">スクロール先の水平方向オフセットを指定する倍精度浮動小数点型の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-379">A double value that specifies the horizontal offset to scroll to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bf0-380">編集コントロールの内容を、指定された水平方向オフセットまでスクロールします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-380">Scrolls the contents of the editing control to the specified horizontal offset.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToVerticalOffset(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToVerticalOffset">
      <MemberSignature Language="C#" Value="public void ScrollToVerticalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToVerticalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToVerticalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToVerticalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToVerticalOffset(double offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="c4bf0-381">スクロールする垂直オフセットを指定する double 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-381">A double value that specifies the vertical offset to scroll to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bf0-382">指定した垂直方向のオフセットに編集コントロールの内容をスクロールします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-382">Scrolls the contents of the editing control to the specified vertical offset.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHorizontalOffset(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-383">テキスト編集コントロールのすべての内容を選択します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-383">Selects all the contents of the text editing control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4bf0-384">次の例で使用する方法、<xref:System.Windows.Controls.Primitives.TextBoxBase.SelectAll%2A>の内容をすべて選択するメソッド、<xref:System.Windows.Controls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-384">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectAll%2A> method to select all the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase7)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush SelectionBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush SelectionBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ SelectionBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-385">選択されているテキストを強調表示するブラシを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-385">Gets or sets the brush that highlights selected text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bf0-386">選択されているテキストを強調表示するブラシ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-386">The brush that highlights selected text.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-387">設定して選択したテキストを強調表示するブラシを指定することができます、<xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A>と<xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-387">You can specify the brush that highlights selected text by setting the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> properties.</span></span> <span data-ttu-id="c4bf0-388"><xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A>プロパティの不透明度を指定する、<xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A>です。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-388">The <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> property specifies the opacity of the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4bf0-389">次の例を作成、<xref:System.Windows.Controls.TextBox>し、「これは、いくつかのテキストです」ですテキストの追加。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-389">The following example creates a <xref:System.Windows.Controls.TextBox> and adds the text, "This is some text."</span></span> <span data-ttu-id="c4bf0-390">例のセット、<xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A>赤にプロパティと<xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A>プロパティを選択したテキストの外観をカスタマイズする 0.5 にします。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-390">The example sets the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> property to red and the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> property to 0.5 to customize the appearance of selected text.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#TextBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#textbox)]   
  
 <span data-ttu-id="c4bf0-391">次の図は、<xref:System.Windows.Controls.TextBox>前の例のテキストを選択します。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-391">The following illustration shows the <xref:System.Windows.Controls.TextBox> from the preceding example with its text selected.</span></span>  
  
 <span data-ttu-id="c4bf0-392">![Selectionbrush が赤の TextBox](~/add/media/textboxselectionbrush.png "selectionbrush が赤の TextBox")</span><span class="sxs-lookup"><span data-stu-id="c4bf0-392">![TextBox with a red SelectionBrush](~/add/media/textboxselectionbrush.png "TextBox with a red SelectionBrush")</span></span>  
<span data-ttu-id="c4bf0-393">Selectionbrush が赤に設定されたテキスト ボックスで選択したテキスト</span><span class="sxs-lookup"><span data-stu-id="c4bf0-393">Selected text in a TextBox with SelectionBrush set to red</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBrushProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-394">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-394">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChanged As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ SelectionChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-395">テキスト選択が変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-395">Occurs when the text selection has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_SelectionChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c4bf0-396">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="c4bf0-396">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c4bf0-397">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="c4bf0-397">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent>|  
|<span data-ttu-id="c4bf0-398">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="c4bf0-398">Routing strategy</span></span>|<span data-ttu-id="c4bf0-399">バブル</span><span class="sxs-lookup"><span data-stu-id="c4bf0-399">Bubbling</span></span>|  
|<span data-ttu-id="c4bf0-400">Delegate</span><span class="sxs-lookup"><span data-stu-id="c4bf0-400">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="c4bf0-401">次の例は、処理する方法を示します、<xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged>コードを使用してイベント。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-401">The following example demonstrates how to handle the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> event by using code.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase10](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase10)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SelectionChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SelectionChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SelectionChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-402">
            <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> ルーティング イベントを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-402">Identifies the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectionOpacity">
      <MemberSignature Language="C#" Value="public double SelectionOpacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionOpacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionOpacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionOpacity { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-403">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" /> の不透明度を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-403">Gets or sets the opacity of the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bf0-404">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" /> の不透明度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-404">The opacity of the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span>
          </span>
          <span data-ttu-id="c4bf0-405">既定値は 0.4 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-405">The default is 0.4.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-406">場合<xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A>を 0 に設定されている、<xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A>は透過的とは表示されません。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-406">If <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> is set to 0, the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> is transparent and is not visible.</span></span> <span data-ttu-id="c4bf0-407">場合<xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A>1.0 以上に設定されている、<xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A>は非透過的と、選択したテキストが表示されません。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-407">If <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> is set to 1.0 or greater, the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> is opaque and the selected text is not visible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4bf0-408">次の例を作成、<xref:System.Windows.Controls.TextBox>し、「これは、いくつかのテキストです」ですテキストの追加。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-408">The following example creates a <xref:System.Windows.Controls.TextBox> and adds the text, "This is some text."</span></span> <span data-ttu-id="c4bf0-409">例のセット、<xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A>赤にプロパティと<xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A>プロパティを選択したテキストの外観をカスタマイズする 0.5 にします。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-409">The example sets the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> property to red and the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> property to 0.5 to customize the appearance of selected text.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#TextBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#textbox)]   
  
 <span data-ttu-id="c4bf0-410">次の図は、<xref:System.Windows.Controls.TextBox>前の例のテキストを選択します。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-410">The following illustration shows the <xref:System.Windows.Controls.TextBox> from the preceding example with its text selected.</span></span>  
  
 <span data-ttu-id="c4bf0-411">![Selectionbrush が赤の TextBox](~/add/media/textboxselectionbrush.png "selectionbrush が赤の TextBox")</span><span class="sxs-lookup"><span data-stu-id="c4bf0-411">![TextBox with a red SelectionBrush](~/add/media/textboxselectionbrush.png "TextBox with a red SelectionBrush")</span></span>  
<span data-ttu-id="c4bf0-412">SelectionOpacity を 0.5 に設定されたテキスト ボックスで選択したテキスト</span><span class="sxs-lookup"><span data-stu-id="c4bf0-412">Selected text in a TextBox with SelectionOpacity set to 0.5</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionOpacityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionOpacityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionOpacityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionOpacityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionOpacityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-413">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-413">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellCheck">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SpellCheck SpellCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.SpellCheck SpellCheck" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SpellCheck" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpellCheck As SpellCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::SpellCheck ^ SpellCheck { System::Windows::Controls::SpellCheck ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SpellCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-414">
            <see cref="T:System.Windows.Controls.SpellCheck" /> または <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> のテキスト コンテンツのスペル ミスへのアクセスを提供する <see cref="T:System.Windows.Controls.RichTextBox" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-414">Gets a <see cref="T:System.Windows.Controls.SpellCheck" /> object that provides access to spelling errors in the text contents of a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> or <see cref="T:System.Windows.Controls.RichTextBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bf0-415">
            <see cref="T:System.Windows.Controls.SpellCheck" /> または <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> のテキスト コンテンツのスペル ミスへのアクセスを提供する <see cref="T:System.Windows.Controls.RichTextBox" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-415">A <see cref="T:System.Windows.Controls.SpellCheck" /> object that provides access to spelling errors in the text contents of a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> or <see cref="T:System.Windows.Controls.RichTextBox" />.</span>
          </span>
          <span data-ttu-id="c4bf0-416">このプロパティには既定値はありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-416">This property has no default value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Controls.SpellingError" />
        <altmember cref="T:System.Windows.Controls.SpellingReform" />
        <altmember cref="T:System.Windows.Controls.SpellCheck" />
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.TextChangedEventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.TextChangedEventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As TextChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::TextChangedEventHandler ^ TextChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.TextChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-417">テキスト要素内でコンテンツが変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-417">Occurs when content changes in the text element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-418"><xref:System.Windows.Controls.TextBox>、そのテキストを変更; ときに、このイベントが発生の<xref:System.Windows.Controls.RichTextBox>、このイベントは、いずれかのコンテンツまたは変更 (たとえば、画像、テーブル、または背景色) を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-418">For a <xref:System.Windows.Controls.TextBox>, this event occurs when its text changes; for a <xref:System.Windows.Controls.RichTextBox>, this event occurs when any content or formatting changes (for example, images, table, or background color).</span></span>  
  
<a name="routedEventInfo_TextChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="c4bf0-419">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="c4bf0-419">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c4bf0-420">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="c4bf0-420">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent>|  
|<span data-ttu-id="c4bf0-421">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="c4bf0-421">Routing strategy</span></span>|<span data-ttu-id="c4bf0-422">バブル</span><span class="sxs-lookup"><span data-stu-id="c4bf0-422">Bubbling</span></span>|  
|<span data-ttu-id="c4bf0-423">Delegate</span><span class="sxs-lookup"><span data-stu-id="c4bf0-423">Delegate</span></span>|<xref:System.Windows.Controls.TextChangedEventHandler>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.TextChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="TextChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-424">
            <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> ルーティング イベントを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-424">Identifies the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public bool Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Function Undo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-425">最新の取り消しコマンドを取り消します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-425">Undoes the most recent undo command.</span>
          </span>
          <span data-ttu-id="c4bf0-426">つまり、undo スタックの最新の undo 単位を取り消します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-426">In other words, undoes the most recent undo unit on the undo stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4bf0-427">取り消しの操作が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-427">
              <see langword="true" /> if the undo operation was successful; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c4bf0-428">undo スタックが空の場合、このメソッドは <see langword="false" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-428">This method returns <see langword="false" /> if the undo stack is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4bf0-429"><xref:System.Windows.Controls.Primitives.TextBoxBase.Undo%2A> メソッドの使用方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-429">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Undo%2A> method.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase8)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="UndoLimit">
      <MemberSignature Language="C#" Value="public int UndoLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UndoLimit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property UndoLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int UndoLimit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-430">アンドゥ キューに格納されるアクション数を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-430">Gets or sets the number of actions stored in the undo queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bf0-431">アンドゥ キューに格納されるアクション数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-431">The number of actions stored in the undo queue.</span>
          </span>
          <span data-ttu-id="c4bf0-432">既定値は –1 です。これは、アンドゥ キューが利用可能なメモリの量に制限されることを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-432">The default is –1, which means the undo queue is limited to the memory that is available.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-433">設定<xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A>元に戻すキューをクリアします。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-433">Setting <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> clears the undo queue.</span></span> <span data-ttu-id="c4bf0-434">ときに<xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A>設定を-1 アンドゥ キューが使用可能なメモリによってのみ制限されます。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-434">When <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> is set to –1, the undo queue is limited only by the memory that is available.</span></span> <span data-ttu-id="c4bf0-435">ときに<xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A>設定は 0 に元に戻すが無効になって、<xref:System.Windows.Controls.Primitives.TextBoxBase>です。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-435">When <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> is set to 0, undo is disabled on the <xref:System.Windows.Controls.Primitives.TextBoxBase>.</span></span>  
  
 <span data-ttu-id="c4bf0-436"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-436"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="c4bf0-437">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-437">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c4bf0-438">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> は、<see cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" /> を呼び出した後、<see cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" /> を呼び出す前に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-438">
              <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> is set after calling <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" /> and before calling <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UndoLimitProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UndoLimitProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UndoLimitProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UndoLimitProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UndoLimitProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-439">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-439">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> dependency property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-440"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-440"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty> is introduced in the .NET Framework version 3.5.</span></span> <span data-ttu-id="c4bf0-441">詳細については、次を参照してください。[バージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)です。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-441">For more information, see[Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOffset">
      <MemberSignature Language="C#" Value="public double VerticalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double VerticalOffset { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-442">垂直方向のスクロール位置を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-442">Gets or sets the vertical scroll position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bf0-443">垂直スクロール位置を[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定する浮動小数点値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-443">A floating-point value that specifies the vertical scroll position, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="c4bf0-444">このプロパティを設定すると、指定した垂直オフセットまでテキスト編集コントロールがスクロールします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-444">Setting this property causes the text editing control to scroll to the specified vertical offset.</span>
          </span>
          <span data-ttu-id="c4bf0-445">このプロパティを読み取ると、現在の垂直オフセットが返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-445">Reading this property returns the current vertical offset.</span>
          </span>
          <span data-ttu-id="c4bf0-446">スクロールをサポートするようにテキスト編集コントロールが構成されていない場合、このプロパティの値は 0.0 になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-446">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span>
          </span>
          <span data-ttu-id="c4bf0-447">このプロパティには既定値はありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-447">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bf0-448">縦方向のオフセットは、表示されるテキスト領域の一番上から測定されます。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-448">The vertical offset is measured from the top of the visible text area.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4bf0-449">次の例では、値を読み取る、<xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-449">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4bf0-450">このプロパティを負の値に設定しようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-450">An attempt is made to set this property to a negative value.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility VerticalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-451">垂直スクロール バーが表示されるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-451">Gets or sets a value that indicates whether a vertical scroll bar is shown.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bf0-452">
            <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 列挙体によって定義されている値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-452">A value that is defined by the <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> enumeration.</span>
          </span>
          <span data-ttu-id="c4bf0-453">既定値は <see cref="F:System.Windows.Visibility.Hidden" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-453">The default value is <see cref="F:System.Windows.Visibility.Hidden" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_VerticalScrollBarVisibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c4bf0-454">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c4bf0-454">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c4bf0-455">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="c4bf0-455">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty>|  
|<span data-ttu-id="c4bf0-456">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="c4bf0-456">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" />
        <altmember cref="P:System.Windows.Controls.TextBox.TextWrapping" />
        <altmember cref="T:System.Windows.Controls.ScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalScrollBarVisibilityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-457">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-457">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewportHeight">
      <MemberSignature Language="C#" Value="public double ViewportHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-458">スクロール可能なコンテンツ エリアの縦のサイズを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-458">Gets the vertical size of the scrollable content area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bf0-459">スクロール可能なコンテンツ エリアの縦幅を[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定する浮動小数点値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-459">A floating-point value that specifies the vertical size of the scrollable content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="c4bf0-460">スクロールをサポートするようにテキスト編集コントロールが構成されていない場合、このプロパティの値は 0.0 になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-460">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span>
          </span>
          <span data-ttu-id="c4bf0-461">このプロパティには既定値はありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-461">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4bf0-462">次の例では、値を読み取る、<xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-462">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="ViewportWidth">
      <MemberSignature Language="C#" Value="public double ViewportWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bf0-463">スクロール可能なコンテンツ エリアの横幅を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-463">Gets the horizontal size of the scrollable content area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bf0-464">スクロール可能なコンテンツ エリアの横幅を[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定する浮動小数点値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-464">A floating-point value that specifies the horizontal size of the scrollable content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="c4bf0-465">スクロールをサポートするようにテキスト編集コントロールが構成されていない場合、このプロパティの値は 0.0 になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-465">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span>
          </span>
          <span data-ttu-id="c4bf0-466">このプロパティには既定値はありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bf0-466">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4bf0-467">次の例では、値を読み取る、<xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="c4bf0-467">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
  </Members>
</Type>