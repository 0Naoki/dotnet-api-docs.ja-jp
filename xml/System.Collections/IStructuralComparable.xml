<Type Name="IStructuralComparable" FullName="System.Collections.IStructuralComparable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9453bb03072dbb0e96a839cb23cd4e2a2b274978" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69333757" /></Metadata><TypeSignature Language="C#" Value="public interface IStructuralComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralComparable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralComparable" />
  <TypeSignature Language="F#" Value="type IStructuralComparable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>コレクション オブジェクトの構造比較をサポートします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 インターフェイス<xref:System.Collections.IStructuralComparable>を使用すると、コレクションメンバーのカスタマイズされた比較を実装できます。 つまり、並べ替え順序において、1つのコレクションオブジェクトが2番目のコレクションオブジェクトと同じ位置にあるかどうかを正確に定義できます。 その後、インターフェイスを<xref:System.Collections.IStructuralComparable>受け入れるコレクション型でこの定義を使用するように指定できます。  
  
 インターフェイスには、1つの<xref:System.Collections.IStructuralComparable.CompareTo%2A>メンバーがあります。これは、現在のコレクションオブジェクトが並べ替え順序において、2番目のオブジェクトよりも小さいか、同じか、または大きいかを示します。 現在のインスタンスのメンバーまたは要素と2番目のオブジェクトとの実際の比較は、カスタム<xref:System.Collections.IComparer>比較の定義を含むインターフェイスの実装によって実行されます。  
  
> [!NOTE]
>  インターフェイス<xref:System.Collections.IStructuralComparable>では、並べ替えまたは順序付けのための構造的な比較のみがサポートされます。 インターフェイス<xref:System.Collections.IStructuralEquatable>では、構造の等価性のためのカスタム比較がサポートされています。  
  
 .NET Framework には、2つの既定の比較子があります。 一方は<xref:System.Collections.StructuralComparisons.StructuralComparer%2A?displayProperty=nameWithType>プロパティによって返され、もう1つは<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>プロパティによって返されます。  
  
 ジェネリックのタプルクラス (<xref:System.Tuple%601>、 <xref:System.Tuple%602>、<xref:System.Tuple%603>など)、<xref:System.Array>クラスの明示的な実装を提供する、<xref:System.Collections.IStructuralComparable>インターフェイス。 キャスト (c#) または (Visual Basic) では、配列またはタプルの現在のインスタンスに変換して、<xref:System.Collections.IStructuralComparable>インターフェイスの値を提供して、<xref:System.Collections.IComparer>実装への引数として、<xref:System.Collections.IStructuralComparable.CompareTo%2A>メソッドのカスタムの並べ替え順序を定義する、配列またはコレクション。 ただし、呼び出すことはありません、<xref:System.Collections.IStructuralComparable.CompareTo%2A>ほとんどの場合で直接メソッド。 代わりに、<xref:System.Collections.IStructuralComparable.CompareTo%2A>並べ替え方法など、メソッドを呼び出して<xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29>します。 ここを定義する、<xref:System.Collections.IComparer>実装と、並べ替えメソッドまたはコレクション オブジェクトのクラスのコンス トラクターに引数として渡します。 <xref:System.Collections.IStructuralComparable.CompareTo%2A>コレクションが並べ替えられるたびに、カスタム比較子をメソッドが自動的に呼び出されます。  
  
   
  
## Examples  
 次の例では、3 <xref:System.Tuple%606>つの米国の都市の人口データを1960から2000に格納するオブジェクトの配列を作成します。 6つの最初のコンポーネントは、市区町村名です。 残りの5つのコンポーネントは、1960から2000までの10年間隔での母集団を表します。  
  
 `PopulationComparer`クラスには、 <xref:System.Collections.IComparer>により、6つ組の配列をそのいずれかのコンポーネントでソートできるようにするIComparer実装を提供します。 `PopulationComparer`クラスのコンストラクターには  2 つの値があります。 並べ替え順序を定義するコンポーネントとタプルオブジェクトを昇順または降順で並べ替える必要があるかどうかを示すブール値の位置です。  
  
 次に、配列内の要素を並べ替えられていない順序で表示し、3番目のコンポーネント (1970 の母集団) によってそれらを並べ替えて、6番目のコンポーネント (2000 での母集団) で並べ替え、それらを表示します。 この例では、メソッドが<xref:System.Collections.IStructuralComparable.CompareTo%2A>直接呼び出されないことに注意してください。 メソッドは、配列内の各<xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29>組オブジェクトに対してメソッドによって暗黙的に呼び出されます。  
  
 [!code-csharp[System.Tuple\`6.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`6.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.Collections.IStructuralEquatable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralComparer" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj * System.Collections.IComparer -&gt; int" Usage="iStructuralComparable.CompareTo (other, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other">現在のインスタンスと比較するオブジェクト。</param>
        <param name="comparer">現在のコレクション オブジェクトのメンバーを <paramref name="other" /> の対応するメンバーと比較するオブジェクト。</param>
        <summary>現在のコレクション オブジェクトの並べ替え順序での位置が、別のオブジェクトと比べて前か、後か、または同じかを判断します。</summary>
        <returns>現在のコレクション オブジェクトと <paramref name="other" /> との関係を、並べ替え順序で示す符号付き整数。<br /> - 0 よりも小さい場合、現在のインスタンスが <paramref name="other" /> よりも前。<br /> - 0 の場合、現在のインスタンスと <paramref name="other" /> とが等しい。<br /> - 0 よりも大きい場合、現在のインスタンスが <paramref name="other" /> よりも後。  
  
 <list type="table"><listheader><term> 戻り値 
 </term><description> 説明 
 </description></listheader><item><term> -1 
 </term><description> 現在のインスタンスが <paramref name="other" /> よりも前。  
  
 </description></item><item><term> 0 
 </term><description> 現在のインスタンスと <paramref name="other" /> とが等しい。  
  
 </description></item><item><term> 1 
 </term><description> 現在のインスタンスが <paramref name="other" /> よりも後。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Collections.IStructuralComparable.CompareTo%2A>は、配列および組オブジェクトのカスタム構造の比較と並べ替えをサポートしています。 メソッド<xref:System.Collections.IStructuralComparable.CompareTo%2A>は、 `comparer`オブジェクトの<xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType>メソッドを呼び出して、最初の要素またはコンポーネントを開始位置として、個々の配列要素またはタプルコンポーネントを比較します。 次のいずれか<xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType>の条件に<xref:System.Collections.IStructuralComparable.CompareTo%2A>該当する場合、end およびメソッドは、個別の呼び出しで値を返します。  
  
-   この<xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType>メソッドは-1 を返します。  
  
-   この<xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType>メソッドは1を返します。  
  
-   <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType>メソッドは、コレクションオブジェクト内の最後の要素またはコンポーネントに対して呼び出されます。  
  
   
  
## Examples  
 次の例では、3 <xref:System.Tuple%606>つの米国の都市の人口データを1960から2000に格納するオブジェクトの配列を作成します。 6つの最初のコンポーネントは、市区町村名です。 残りの5つのコンポーネントは、1960から2000までの10年間隔での母集団を表します。  
  
 `PopulationComparer`クラスには、 <xref:System.Collections.IComparer>により、6つ組の配列をそのいずれかのコンポーネントでソートできるようにするIComparer実装を提供します。 コンストラクターの`PopulationComparer`クラスには、並べ替え順序を定義するコンポーネントの位置<xref:System.Boolean>と、組オブジェクトを昇順と降順のどちらで並べ替えるかを示す値という2つの値が用意されています。  
  
 次に、配列内の要素を並べ替えられていない順序で表示し、3番目のコンポーネント (1970 の母集団) によってそれらを並べ替えて、6番目のコンポーネント (2000 での母集団) で並べ替え、それらを表示します。 この例では、実装を<xref:System.Collections.IStructuralComparable.CompareTo%2A?displayProperty=nameWithType>直接呼び出していないことに注意してください。 メソッドは、配列内の各<xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29>組オブジェクトに対してメソッドによって暗黙的に呼び出されます。  
  
 [!code-csharp[System.Tuple\`6.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`6.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">このインスタンスと <paramref name="other" /> は型が異なっています。</exception>
        <altmember cref="T:System.Collections.IComparer" />
      </Docs>
    </Member>
  </Members>
</Type>
