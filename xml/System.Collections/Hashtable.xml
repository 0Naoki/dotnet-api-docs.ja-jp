<Type Name="Hashtable" FullName="System.Collections.Hashtable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fadc713d5aa3f816402a0373af174539e582ea63" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37700786" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Hashtable : ICloneable, System.Collections.IDictionary, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Hashtable extends System.Object implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable, class System.ICloneable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Hashtable" />
  <TypeSignature Language="VB.NET" Value="Public Class Hashtable&#xA;Implements ICloneable, IDeserializationCallback, IDictionary, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Hashtable : ICloneable, System::Collections::IDictionary, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Hashtable = class&#xA;    interface IDictionary&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Hashtable/HashtableDebugView))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2def9-101">Represents a collection of key/value pairs that are organized based on the hash code of the key.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2def9-101">Represents a collection of key/value pairs that are organized based on the hash code of the key.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-102">各要素に格納されているキー/値ペアは、<xref:System.Collections.DictionaryEntry>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2def9-102">Each element is a key/value pair stored in a <xref:System.Collections.DictionaryEntry> object.</span></span> <span data-ttu-id="2def9-103">キーには`null`が値を使用できます。</span><span class="sxs-lookup"><span data-stu-id="2def9-103">A key cannot be `null`, but a value can be.</span></span>  
  
 <span data-ttu-id="2def9-104">キーとして使用されるオブジェクト、<xref:System.Collections.Hashtable>をオーバーライドするために必要な<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>メソッド (または<xref:System.Collections.IHashCodeProvider>インターフェイス) と<xref:System.Object.Equals%2A?displayProperty=nameWithType>メソッド (または<xref:System.Collections.IComparer>インターフェイス)。</span><span class="sxs-lookup"><span data-stu-id="2def9-104">The objects used as keys by a <xref:System.Collections.Hashtable> are required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method (or the <xref:System.Collections.IHashCodeProvider> interface) and the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method (or the <xref:System.Collections.IComparer> interface).</span></span> <span data-ttu-id="2def9-105">メソッドとインターフェイスの両方の実装でも、大文字小文字の区別を同じ方法で処理する必要があります。それ以外の場合、<xref:System.Collections.Hashtable>動作場合もあります。</span><span class="sxs-lookup"><span data-stu-id="2def9-105">The implementation of both methods and interfaces must handle case sensitivity the same way; otherwise, the <xref:System.Collections.Hashtable> might behave incorrectly.</span></span> <span data-ttu-id="2def9-106">例では、作成するときに、 <xref:System.Collections.Hashtable>、使用する必要があります、<xref:System.Collections.CaseInsensitiveHashCodeProvider>クラス (または任意の大文字<xref:System.Collections.IHashCodeProvider>実装) で、<xref:System.Collections.CaseInsensitiveComparer>クラス (または任意の大文字<xref:System.Collections.IComparer>実装)。</span><span class="sxs-lookup"><span data-stu-id="2def9-106">For example, when creating a <xref:System.Collections.Hashtable>, you must use the <xref:System.Collections.CaseInsensitiveHashCodeProvider> class (or any case-insensitive <xref:System.Collections.IHashCodeProvider> implementation) with the <xref:System.Collections.CaseInsensitiveComparer> class (or any case-insensitive <xref:System.Collections.IComparer> implementation).</span></span>  
  
 <span data-ttu-id="2def9-107">さらに、これらのメソッドはで、キーが存在している間、同じパラメーターで呼び出されたときに、同じ結果を生成する必要があります、<xref:System.Collections.Hashtable>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-107">Furthermore, these methods must produce the same results when called with the same parameters while the key exists in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="2def9-108">代わりに使用するが、<xref:System.Collections.Hashtable>を持つコンス トラクター、<xref:System.Collections.IEqualityComparer>パラメーター。</span><span class="sxs-lookup"><span data-stu-id="2def9-108">An alternative is to use a <xref:System.Collections.Hashtable> constructor with an <xref:System.Collections.IEqualityComparer> parameter.</span></span> <span data-ttu-id="2def9-109">キーに等しいかどうかに単純に参照の等価性を継承して実装されたかどうか<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>と<xref:System.Object.Equals%2A?displayProperty=nameWithType>があれば十分です。</span><span class="sxs-lookup"><span data-stu-id="2def9-109">If key equality were simply reference equality, the inherited implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> would suffice.</span></span>  
  
 <span data-ttu-id="2def9-110">内のキーとして使用される限りにキー オブジェクトが不変にする必要があります、<xref:System.Collections.Hashtable>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-110">Key objects must be immutable as long as they are used as keys in the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="2def9-111">要素を追加すると、<xref:System.Collections.Hashtable>要素は、キーのハッシュ コードに基づいてバケットに配置されます。</span><span class="sxs-lookup"><span data-stu-id="2def9-111">When an element is added to the <xref:System.Collections.Hashtable>, the element is placed into a bucket based on the hash code of the key.</span></span> <span data-ttu-id="2def9-112">キーの後の参照では、キーのハッシュ コードを使用して、要素を検索するために必要なキーの比較の数を大幅に削減するためだけに 1 つのバケットで検索します。</span><span class="sxs-lookup"><span data-stu-id="2def9-112">Subsequent lookups of the key use the hash code of the key to search in only one particular bucket, thus substantially reducing the number of key comparisons required to find an element.</span></span>  
  
 <span data-ttu-id="2def9-113">テーブル占有率、<xref:System.Collections.Hashtable>バケットする要素の最大比率を決定します。</span><span class="sxs-lookup"><span data-stu-id="2def9-113">The load factor of a <xref:System.Collections.Hashtable> determines the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="2def9-114">小さいロード要因には、増加したメモリの消費量を犠牲の平均検索を高速化時間が発生します。</span><span class="sxs-lookup"><span data-stu-id="2def9-114">Smaller load factors cause faster average lookup times at the cost of increased memory consumption.</span></span> <span data-ttu-id="2def9-115">1.0 の既定のテーブル占有率は、通常、速度とサイズの最適なバランスを提供します。</span><span class="sxs-lookup"><span data-stu-id="2def9-115">The default load factor of 1.0 generally provides the best balance between speed and size.</span></span> <span data-ttu-id="2def9-116">別の占有率をすることもできるときに指定された、<xref:System.Collections.Hashtable>が作成されます。</span><span class="sxs-lookup"><span data-stu-id="2def9-116">A different load factor can also be specified when the <xref:System.Collections.Hashtable> is created.</span></span>  
  
 <span data-ttu-id="2def9-117">要素が追加される、<xref:System.Collections.Hashtable>の実際のテーブル占有率、<xref:System.Collections.Hashtable>が増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-117">As elements are added to a <xref:System.Collections.Hashtable>, the actual load factor of the <xref:System.Collections.Hashtable> increases.</span></span> <span data-ttu-id="2def9-118">ときに、実際のテーブル占有率が、指定したテーブル占有率、バケットの数に達すると、<xref:System.Collections.Hashtable>は 2 回の現在の数より大きい最小の素数を自動的に増加<xref:System.Collections.Hashtable>バケット。</span><span class="sxs-lookup"><span data-stu-id="2def9-118">When the actual load factor reaches the specified load factor, the number of buckets in the <xref:System.Collections.Hashtable> is automatically increased to the smallest prime number that is larger than twice the current number of <xref:System.Collections.Hashtable> buckets.</span></span>  
  
 <span data-ttu-id="2def9-119">内の各キー オブジェクト、<xref:System.Collections.Hashtable>呼び出すことによってアクセスできる独自のハッシュ関数を提供する必要があります<xref:System.Collections.Hashtable.GetHash%2A>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-119">Each key object in the <xref:System.Collections.Hashtable> must provide its own hash function, which can be accessed by calling <xref:System.Collections.Hashtable.GetHash%2A>.</span></span> <span data-ttu-id="2def9-120">ただし、任意のオブジェクトを実装する<xref:System.Collections.IHashCodeProvider>に渡すことができます、<xref:System.Collections.Hashtable>コンス トラクター、およびテーブル内のすべてのオブジェクトに対してハッシュ関数を使用します。</span><span class="sxs-lookup"><span data-stu-id="2def9-120">However, any object implementing <xref:System.Collections.IHashCodeProvider> can be passed to a <xref:System.Collections.Hashtable> constructor, and that hash function is used for all objects in the table.</span></span>  
  
 <span data-ttu-id="2def9-121">容量を<xref:System.Collections.Hashtable>要素の数が、<xref:System.Collections.Hashtable>を保持できます。</span><span class="sxs-lookup"><span data-stu-id="2def9-121">The capacity of a <xref:System.Collections.Hashtable> is the number of elements the <xref:System.Collections.Hashtable> can hold.</span></span> <span data-ttu-id="2def9-122">要素が追加される、<xref:System.Collections.Hashtable>容量が増やされます自動的に再割り当て、必要に応じて。</span><span class="sxs-lookup"><span data-stu-id="2def9-122">As elements are added to a <xref:System.Collections.Hashtable>, the capacity is automatically increased as required through reallocation.</span></span>  
  
 <span data-ttu-id="2def9-123">非常に大きな<xref:System.Collections.Hashtable>オブジェクトを設定して、64 ビット システム上の 20億要素に最大容量を増やすことができます、`enabled`する構成要素の属性`true`実行時環境でします。</span><span class="sxs-lookup"><span data-stu-id="2def9-123">For very large <xref:System.Collections.Hashtable> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the  configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="2def9-124">`foreach` C# 言語のステートメント (`For Each` Visual basic)、コレクション内の要素の型のオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="2def9-124">The `foreach` statement of the C# language (`For Each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="2def9-125">以降の各要素、<xref:System.Collections.Hashtable>キー/値のペアは、要素の型がないと、キーの型または値の型。</span><span class="sxs-lookup"><span data-stu-id="2def9-125">Since each element of the <xref:System.Collections.Hashtable> is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="2def9-126">要素の型は、代わりに、<xref:System.Collections.DictionaryEntry>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-126">Instead, the element type is <xref:System.Collections.DictionaryEntry>.</span></span> <span data-ttu-id="2def9-127">例えば:</span><span class="sxs-lookup"><span data-stu-id="2def9-127">For example:</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ClassExample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/cpp/remarks.cpp#01)]
 [!code-csharp[System.Collections.Hashtable_ClassExample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/cs/remarks.cs#01)]
 [!code-vb[System.Collections.Hashtable_ClassExample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/vb/remarks.vb#01)]  
  
 <span data-ttu-id="2def9-128">`foreach`ステートメントは、コレクションを記述しないからの読み取りのみを許可する列挙子のラッパーです。</span><span class="sxs-lookup"><span data-stu-id="2def9-128">The `foreach` statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</span></span>  
  
 <span data-ttu-id="2def9-129">シリアル化するための列挙子を逆シリアル化、<xref:System.Collections.Hashtable>順序になる要素が発生することができます、呼び出さずに列挙を続行することはできません、<xref:System.Collections.IEnumerator.Reset%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2def9-129">Because serializing and deserializing an enumerator for a <xref:System.Collections.Hashtable> can cause the elements to become reordered, it is not possible to continue enumeration without calling the <xref:System.Collections.IEnumerator.Reset%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2def9-130">キーを継承する、その動作が変更された、絶対の一意性を保証できませんを使用する比較であるため、<xref:System.Type.Equals%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2def9-130">Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the <xref:System.Type.Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2def9-131">次の例では、作成、初期化、およびさまざまな機能を実行する方法を示しています、<xref:System.Collections.Hashtable>とそのキーと値を印刷する方法。</span><span class="sxs-lookup"><span data-stu-id="2def9-131">The following example shows how to create, initialize and perform various functions to a <xref:System.Collections.Hashtable> and how to print out its keys and values.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ClassExample#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/cpp/hashtable_example.cpp#00)]
 [!code-csharp[System.Collections.Hashtable_ClassExample#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/cs/hashtable_example.cs#00)]
 [!code-vb[System.Collections.Hashtable_ClassExample#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/vb/hashtable_example.vb#00)]
 [!code-powershell[System.Collections.Hashtable_ClassExample#00](~/samples/snippets/powershell/VS_Snippets_CLR_System/system.collections.hashtable.class/ps/hashtable.ps1#00)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="2def9-132">
        <see cref="T:System.Collections.Hashtable" /> スレッドが複数のリーダー スレッドと 1 つの書き込みスレッドによって使用される安全です。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2def9-132">
          <see cref="T:System.Collections.Hashtable" /> is thread safe for use by multiple reader threads and a single writing thread.</span>
      </span>
      <span data-ttu-id="2def9-133">スレッド セーフであるマルチ スレッドを使用して、ときに、書き込み (更新) 操作を実行、スレッドの 1 つのみを使用できるロック制御不要の読み取りをライターにシリアル化されるとき、<see cref="T:System.Collections.Hashtable" />します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2def9-133">It is thread safe for multi-thread use when only one of the threads perform write (update) operations, which allows for lock-free reads provided that the writers are serialized to the <see cref="T:System.Collections.Hashtable" />.</span>
      </span>
      <span data-ttu-id="2def9-134">複数のライターのすべての操作をサポートするために、<see cref="T:System.Collections.Hashtable" />によって返されるラッパーを使用する必要があります、<see cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />メソッドを読み取り中のスレッドがないこと、<see cref="T:System.Collections.Hashtable" />オブジェクト。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2def9-134">To support multiple writers all operations on the <see cref="T:System.Collections.Hashtable" /> must be done through the wrapper returned by the <see cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" /> method, provided that there are no threads reading the <see cref="T:System.Collections.Hashtable" /> object.</span>
      </span>
      <span data-ttu-id="2def9-135">コレクションの列挙は、スレッド セーフな方法では本質的にします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2def9-135">Enumerating through a collection is intrinsically not a thread safe procedure.</span>
      </span>
      <span data-ttu-id="2def9-136">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2def9-136">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="2def9-137">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2def9-137">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.IDictionary" />
    <altmember cref="T:System.Collections.IHashCodeProvider" />
    <altmember cref="M:System.Object.GetHashCode" />
    <altmember cref="M:System.Object.Equals(System.Object)" />
    <altmember cref="T:System.Collections.DictionaryEntry" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2" />
    <altmember cref="T:System.Collections.IEqualityComparer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2def9-138">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-138">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2def9-139">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the default initial capacity, load factor, hash code provider, and comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-139">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the default initial capacity, load factor, hash code provider, and comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-140">ハッシュ テーブルの容量は、最適なテーブル占有率に基づくハッシュ テーブルのバケット数を計算に使用されます。</span><span class="sxs-lookup"><span data-stu-id="2def9-140">A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</span></span> <span data-ttu-id="2def9-141">容量を増やすと自動的に必要とします。</span><span class="sxs-lookup"><span data-stu-id="2def9-141">Capacity is automatically increased as required.</span></span>  
  
 <span data-ttu-id="2def9-142">占有率は、バケット数に対する要素の最大比率です。</span><span class="sxs-lookup"><span data-stu-id="2def9-142">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="2def9-143">小さいテーブル占有率が増加したメモリの消費量を犠牲に高速の参照を意味します。</span><span class="sxs-lookup"><span data-stu-id="2def9-143">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="2def9-144">実際のテーブル占有率には、指定したテーブル占有率に達すると、バケット数を現在のバケット数の 2 倍を超える最小の素数を自動的に増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-144">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="2def9-145">ハッシュ コード プロバイダー内のキーのハッシュ コードを省き、<xref:System.Collections.Hashtable>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2def9-145">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="2def9-146">既定のハッシュ コード プロバイダーは、キーの実装の<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-146">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-147">比較演算子は、2 つのキーが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="2def9-147">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="2def9-148">内のすべてのキーを<xref:System.Collections.Hashtable>で一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="2def9-148">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="2def9-149">既定の比較子は、キーの実装の<xref:System.Object.Equals%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-149">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-150">このコンス トラクターは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="2def9-150">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2def9-151">次のコード例では、別を使用してハッシュ テーブルが作成<xref:System.Collections.Hashtable>コンス トラクターと、それぞれに同じ要素が含まれている場合でも、ハッシュ テーブルの動作の違いを示します。</span><span class="sxs-lookup"><span data-stu-id="2def9-151">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CPP/hashtable_ctor.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CS/hashtable_ctor.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/VB/hashtable_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable d" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="2def9-152">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-152">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-153">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-153">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
          <span data-ttu-id="2def9-154">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the default load factor, hash code provider, and comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-154">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the default load factor, hash code provider, and comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-155">初期の容量は、元のディクショナリの要素の数に設定されます。</span><span class="sxs-lookup"><span data-stu-id="2def9-155">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="2def9-156">容量が自動的には、テーブル占有率に基づく必要に応じて増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-156">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="2def9-157">占有率は、バケット数に対する要素の最大比率です。</span><span class="sxs-lookup"><span data-stu-id="2def9-157">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="2def9-158">小さいテーブル占有率が増加したメモリの消費量を犠牲に高速の参照を意味します。</span><span class="sxs-lookup"><span data-stu-id="2def9-158">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="2def9-159">実際のテーブル占有率には、指定したテーブル占有率に達すると、バケット数を現在のバケット数の 2 倍を超える最小の素数を自動的に増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-159">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="2def9-160">ハッシュ コード プロバイダー内のキーのハッシュ コードを省き、<xref:System.Collections.Hashtable>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2def9-160">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="2def9-161">既定のハッシュ コード プロバイダーは、キーの実装の<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-161">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-162">比較演算子は、2 つのキーが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="2def9-162">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="2def9-163">内のすべてのキーを<xref:System.Collections.Hashtable>で一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="2def9-163">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="2def9-164">既定の比較子は、キーの実装の<xref:System.Object.Equals%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-164">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-165">新しい要素<xref:System.Collections.Hashtable>を列挙子が反復処理と同じ順序で並べ替えられますが、<xref:System.Collections.IDictionary>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2def9-165">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="2def9-166">このコンス トラクターは、O (`n`) 操作、`n`内の要素の数が、`d`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="2def9-166">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2def9-167">次のコード例では、別を使用してハッシュ テーブルが作成<xref:System.Collections.Hashtable>コンス トラクターと、それぞれに同じ要素が含まれている場合でも、ハッシュ テーブルの動作の違いを示します。</span><span class="sxs-lookup"><span data-stu-id="2def9-167">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CPP/hashtable_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CS/hashtable_ctordictionary.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/VB/hashtable_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2def9-168">
            <paramref name="d" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-168">
              <paramref name="d" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IEqualityComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable equalityComparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="equalityComparer">
          <span data-ttu-id="2def9-169">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-169">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
          <span data-ttu-id="2def9-170">-or-  <see langword="null" /> to use the default hash code provider and the default comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-170">-or-  <see langword="null" /> to use the default hash code provider and the default comparer.</span>
          </span>
          <span data-ttu-id="2def9-171">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-171">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-172">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the default initial capacity and load factor, and the specified <see cref="T:System.Collections.IEqualityComparer" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-172">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the default initial capacity and load factor, and the specified <see cref="T:System.Collections.IEqualityComparer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-173">ハッシュ テーブルの容量は、最適なテーブル占有率に基づくハッシュ テーブルのバケット数を計算に使用されます。</span><span class="sxs-lookup"><span data-stu-id="2def9-173">A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</span></span> <span data-ttu-id="2def9-174">容量を増やすと自動的に必要とします。</span><span class="sxs-lookup"><span data-stu-id="2def9-174">Capacity is automatically increased as required.</span></span>  
  
 <span data-ttu-id="2def9-175">占有率は、バケット数に対する要素の最大比率です。</span><span class="sxs-lookup"><span data-stu-id="2def9-175">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="2def9-176">小さいテーブル占有率が増加したメモリの消費量を犠牲に高速の参照を意味します。</span><span class="sxs-lookup"><span data-stu-id="2def9-176">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="2def9-177">実際のテーブル占有率には、指定したテーブル占有率に達すると、バケット数を現在のバケット数の 2 倍を超える最小の素数を自動的に増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-177">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="2def9-178"><xref:System.Collections.IEqualityComparer>オブジェクトにはハッシュ コード プロバイダーと比較子の両方が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2def9-178">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="2def9-179">場合、<xref:System.Collections.IEqualityComparer>で使用されて、<xref:System.Collections.Hashtable>コンス トラクター、内のキーとして使用されるオブジェクト、<xref:System.Collections.Hashtable>オブジェクトがオーバーライドする必要はありません、<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>と<xref:System.Object.Equals%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2def9-179">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> object are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="2def9-180">ハッシュ コード プロバイダー内のキーのハッシュ コードを省き、<xref:System.Collections.Hashtable>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-180">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="2def9-181">既定のハッシュ コード プロバイダーは、キーの実装の<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-181">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-182">比較演算子は、2 つのキーが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="2def9-182">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="2def9-183">内のすべてのキーを<xref:System.Collections.Hashtable>で一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="2def9-183">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="2def9-184">既定の比較子は、キーの実装の<xref:System.Object.Equals%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-184">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-185"><xref:System.Collections.IEqualityComparer>大文字の文字列の検索の実行などのシナリオを実現できます。</span><span class="sxs-lookup"><span data-stu-id="2def9-185">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="2def9-186">このコンス トラクターは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="2def9-186">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2def9-187">次のコード例では、別を使用してハッシュ テーブルが作成<xref:System.Collections.Hashtable>コンス トラクターと、それぞれに同じ要素が含まれている場合でも、ハッシュ テーブルの動作の違いを示します。</span><span class="sxs-lookup"><span data-stu-id="2def9-187">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CPP/hashtable_ctor.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CS/hashtable_ctor.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/VB/hashtable_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="2def9-188">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-188">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-189">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, and the default load factor, hash code provider, and comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-189">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, and the default load factor, hash code provider, and comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-190">多くの要素を追加するときにサイズ変更操作を実行する必要がある初期容量を指定する、<xref:System.Collections.Hashtable>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2def9-190">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="2def9-191">容量が自動的には、テーブル占有率に基づく必要に応じて増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-191">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="2def9-192">占有率は、バケット数に対する要素の最大比率です。</span><span class="sxs-lookup"><span data-stu-id="2def9-192">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="2def9-193">小さいテーブル占有率が増加したメモリの消費量を犠牲に高速の参照を意味します。</span><span class="sxs-lookup"><span data-stu-id="2def9-193">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="2def9-194">実際のテーブル占有率には、指定したテーブル占有率に達すると、バケット数を現在のバケット数の 2 倍を超える最小の素数を自動的に増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-194">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="2def9-195">ハッシュ コード プロバイダー内のキーのハッシュ コードを省き、<xref:System.Collections.Hashtable>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-195">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="2def9-196">既定のハッシュ コード プロバイダーは、キーの実装の<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-196">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-197">比較演算子は、2 つのキーが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="2def9-197">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="2def9-198">内のすべてのキーを<xref:System.Collections.Hashtable>で一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="2def9-198">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="2def9-199">既定の比較子は、キーの実装の<xref:System.Object.Equals%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-199">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-200">このコンス トラクターは、O (`n`) 操作、`n`は`capacity`します。</span><span class="sxs-lookup"><span data-stu-id="2def9-200">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2def9-201">次のコード例では、別を使用してハッシュ テーブルが作成<xref:System.Collections.Hashtable>コンス トラクターと、それぞれに同じ要素が含まれている場合でも、ハッシュ テーブルの動作の違いを示します。</span><span class="sxs-lookup"><span data-stu-id="2def9-201">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CPP/hashtable_ctorint.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CS/hashtable_ctorint.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/VB/hashtable_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2def9-202">
            <paramref name="capacity" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-202">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary * System.Collections.IEqualityComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (d, equalityComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="2def9-203">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-203">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="2def9-204">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-204">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
          <span data-ttu-id="2def9-205">-or-  <see langword="null" /> to use the default hash code provider and the default comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-205">-or-  <see langword="null" /> to use the default hash code provider and the default comparer.</span>
          </span>
          <span data-ttu-id="2def9-206">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-206">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-207">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to a new <see cref="T:System.Collections.Hashtable" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-207">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to a new <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
          <span data-ttu-id="2def9-208">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the default load factor and the specified <see cref="T:System.Collections.IEqualityComparer" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-208">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the default load factor and the specified <see cref="T:System.Collections.IEqualityComparer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-209">初期の容量は、元のディクショナリの要素の数に設定されます。</span><span class="sxs-lookup"><span data-stu-id="2def9-209">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="2def9-210">容量が自動的には、テーブル占有率に基づく必要に応じて増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-210">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="2def9-211">占有率は、バケット数に対する要素の最大比率です。</span><span class="sxs-lookup"><span data-stu-id="2def9-211">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="2def9-212">小さいテーブル占有率が増加したメモリの消費量を犠牲に高速の参照を意味します。</span><span class="sxs-lookup"><span data-stu-id="2def9-212">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="2def9-213">実際のテーブル占有率には、指定したテーブル占有率に達すると、バケット数を現在のバケット数の 2 倍を超える最小の素数を自動的に増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-213">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="2def9-214"><xref:System.Collections.IEqualityComparer>オブジェクトにはハッシュ コード プロバイダーと比較子の両方が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2def9-214">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="2def9-215">場合、<xref:System.Collections.IEqualityComparer>で使用されて、<xref:System.Collections.Hashtable>コンス トラクター、内のキーとして使用されるオブジェクト、<xref:System.Collections.Hashtable>オブジェクトがオーバーライドする必要はありません、<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>と<xref:System.Object.Equals%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2def9-215">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> object are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="2def9-216">ハッシュ コード プロバイダー内のキーのハッシュ コードを省き、<xref:System.Collections.Hashtable>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-216">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="2def9-217">既定のハッシュ コード プロバイダーは、キーの実装の<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-217">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-218">比較演算子は、2 つのキーが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="2def9-218">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="2def9-219">内のすべてのキーを<xref:System.Collections.Hashtable>で一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="2def9-219">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="2def9-220">既定の比較子は、キーの実装の<xref:System.Object.Equals%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-220">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-221"><xref:System.Collections.IEqualityComparer>大文字の文字列の検索の実行などのシナリオを実現できます。</span><span class="sxs-lookup"><span data-stu-id="2def9-221">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="2def9-222">新しい要素<xref:System.Collections.Hashtable>を列挙子が反復処理と同じ順序で並べ替えられますが、<xref:System.Collections.IDictionary>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2def9-222">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="2def9-223">このコンス トラクターは、O (`n`) 操作、`n`内の要素の数が、`d`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="2def9-223">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2def9-224">次のコード例では、別を使用してハッシュ テーブルが作成<xref:System.Collections.Hashtable>コンス トラクターと、それぞれに同じ要素が含まれている場合でも、ハッシュ テーブルの動作の違いを示します。</span><span class="sxs-lookup"><span data-stu-id="2def9-224">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CPP/hashtable_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CS/hashtable_ctordictionary.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/VB/hashtable_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2def9-225">
            <paramref name="d" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-225">
              <paramref name="d" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, float loadFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, float32 loadFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, loadFactor As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, float loadFactor);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary * single -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (d, loadFactor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="loadFactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="2def9-226">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-226">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
        </param>
        <param name="loadFactor">
          <span data-ttu-id="2def9-227">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-227">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span>
          </span>
          <span data-ttu-id="2def9-228">The result is the maximum ratio of elements to buckets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-228">The result is the maximum ratio of elements to buckets.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-229">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-229">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
          <span data-ttu-id="2def9-230">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the specified load factor, and the default hash code provider and comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-230">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the specified load factor, and the default hash code provider and comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-231">初期の容量は、元のディクショナリの要素の数に設定されます。</span><span class="sxs-lookup"><span data-stu-id="2def9-231">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="2def9-232">容量が自動的には、テーブル占有率に基づく必要に応じて増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-232">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="2def9-233">占有率は、バケット数に対する要素の最大比率です。</span><span class="sxs-lookup"><span data-stu-id="2def9-233">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="2def9-234">小さいテーブル占有率が増加したメモリの消費量を犠牲に高速の参照を意味します。</span><span class="sxs-lookup"><span data-stu-id="2def9-234">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="2def9-235">1.0 のテーブル占有率は、速度とサイズの最適なバランスです。</span><span class="sxs-lookup"><span data-stu-id="2def9-235">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="2def9-236">実際のテーブル占有率には、指定したテーブル占有率に達すると、バケット数を現在のバケット数の 2 倍を超える最小の素数を自動的に増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-236">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="2def9-237">ハッシュ コード プロバイダー内のキーのハッシュ コードを省き、<xref:System.Collections.Hashtable>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2def9-237">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="2def9-238">既定のハッシュ コード プロバイダーは、キーの実装の<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-238">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-239">比較演算子は、2 つのキーが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="2def9-239">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="2def9-240">内のすべてのキーを<xref:System.Collections.Hashtable>で一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="2def9-240">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="2def9-241">既定の比較子は、キーの実装の<xref:System.Object.Equals%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-241">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-242">新しい要素<xref:System.Collections.Hashtable>を列挙子が反復処理と同じ順序で並べ替えられますが、<xref:System.Collections.IDictionary>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2def9-242">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="2def9-243">このコンス トラクターは、O (`n`) 操作、`n`内の要素の数が、`d`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="2def9-243">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2def9-244">次のコード例では、別を使用してハッシュ テーブルが作成<xref:System.Collections.Hashtable>コンス トラクターと、それぞれに同じ要素が含まれている場合でも、ハッシュ テーブルの動作の違いを示します。</span><span class="sxs-lookup"><span data-stu-id="2def9-244">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CPP/hashtable_ctordictionaryfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CS/hashtable_ctordictionaryfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/VB/hashtable_ctordictionaryfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2def9-245">
            <paramref name="d" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-245">
              <paramref name="d" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2def9-246">
            <paramref name="loadFactor" /> is less than 0.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-246">
              <paramref name="loadFactor" /> is less than 0.1.</span>
          </span>
          <span data-ttu-id="2def9-247">-or-  <paramref name="loadFactor" /> is greater than 1.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-247">-or-  <paramref name="loadFactor" /> is greater than 1.0.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (hcp, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Please use Hashtable(IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="hcp">
          <span data-ttu-id="2def9-248">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-248">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
          <span data-ttu-id="2def9-249">-or-  <see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-249">-or-  <see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="2def9-250">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-250">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span>
          </span>
          <span data-ttu-id="2def9-251">-or-  <see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-251">-or-  <see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-252">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the default initial capacity and load factor, and the specified hash code provider and comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-252">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the default initial capacity and load factor, and the specified hash code provider and comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-253">ハッシュ テーブルの容量は、最適なテーブル占有率に基づくハッシュ テーブルのバケット数を計算に使用されます。</span><span class="sxs-lookup"><span data-stu-id="2def9-253">A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</span></span> <span data-ttu-id="2def9-254">容量を増やすと自動的に必要とします。</span><span class="sxs-lookup"><span data-stu-id="2def9-254">Capacity is automatically increased as required.</span></span>  
  
 <span data-ttu-id="2def9-255">占有率は、バケット数に対する要素の最大比率です。</span><span class="sxs-lookup"><span data-stu-id="2def9-255">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="2def9-256">小さいテーブル占有率が増加したメモリの消費量を犠牲に高速の参照を意味します。</span><span class="sxs-lookup"><span data-stu-id="2def9-256">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="2def9-257">実際のテーブル占有率には、指定したテーブル占有率に達すると、バケット数を現在のバケット数の 2 倍を超える最小の素数を自動的に増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-257">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="2def9-258">ハッシュ コード プロバイダー内のキーのハッシュ コードを省き、<xref:System.Collections.Hashtable>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2def9-258">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="2def9-259">既定のハッシュ コード プロバイダーは、キーの実装の<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-259">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-260">比較演算子は、2 つのキーが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="2def9-260">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="2def9-261">内のすべてのキーを<xref:System.Collections.Hashtable>で一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="2def9-261">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="2def9-262">既定の比較子は、キーの実装の<xref:System.Object.Equals%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-262">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-263">カスタムのハッシュ コード プロバイダーとカスタムの比較子は、大文字の文字列、検索を行うなどのシナリオを有効にします。</span><span class="sxs-lookup"><span data-stu-id="2def9-263">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="2def9-264">このコンス トラクターは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="2def9-264">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2def9-265">次のコード例では、別を使用してハッシュ テーブルが作成<xref:System.Collections.Hashtable>コンス トラクターと、それぞれに同じ要素が含まれている場合でも、ハッシュ テーブルの動作の違いを示します。</span><span class="sxs-lookup"><span data-stu-id="2def9-265">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CPP/hashtable_ctor.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CS/hashtable_ctor.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/VB/hashtable_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int * System.Collections.IEqualityComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (capacity, equalityComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="2def9-266">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-266">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="2def9-267">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-267">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
          <span data-ttu-id="2def9-268">-or-  <see langword="null" /> to use the default hash code provider and the default comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-268">-or-  <see langword="null" /> to use the default hash code provider and the default comparer.</span>
          </span>
          <span data-ttu-id="2def9-269">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-269">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-270">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity and <see cref="T:System.Collections.IEqualityComparer" />, and the default load factor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-270">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity and <see cref="T:System.Collections.IEqualityComparer" />, and the default load factor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-271">多くの要素を追加するときにサイズ変更操作を実行する必要がある初期容量を指定する、<xref:System.Collections.Hashtable>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2def9-271">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="2def9-272">容量が自動的には、テーブル占有率に基づく必要に応じて増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-272">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="2def9-273">占有率は、バケット数に対する要素の最大比率です。</span><span class="sxs-lookup"><span data-stu-id="2def9-273">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="2def9-274">小さいテーブル占有率が増加したメモリの消費量を犠牲に高速の参照を意味します。</span><span class="sxs-lookup"><span data-stu-id="2def9-274">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="2def9-275">実際のテーブル占有率には、指定したテーブル占有率に達すると、バケット数を現在のバケット数の 2 倍を超える最小の素数を自動的に増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-275">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="2def9-276"><xref:System.Collections.IEqualityComparer>オブジェクトにはハッシュ コード プロバイダーと比較子の両方が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2def9-276">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="2def9-277">場合、<xref:System.Collections.IEqualityComparer>で使用されて、<xref:System.Collections.Hashtable>コンス トラクター、内のキーとして使用されるオブジェクト、<xref:System.Collections.Hashtable>をオーバーライドする必要はありません、<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>と<xref:System.Object.Equals%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2def9-277">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="2def9-278">ハッシュ コード プロバイダー内のキーのハッシュ コードを省き、<xref:System.Collections.Hashtable>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-278">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="2def9-279">既定のハッシュ コード プロバイダーは、キーの実装の<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-279">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-280">比較演算子は、2 つのキーが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="2def9-280">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="2def9-281">内のすべてのキーを<xref:System.Collections.Hashtable>で一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="2def9-281">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="2def9-282">既定の比較子は、キーの実装の<xref:System.Object.Equals%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-282">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-283"><xref:System.Collections.IEqualityComparer>大文字の文字列の検索の実行などのシナリオを実現できます。</span><span class="sxs-lookup"><span data-stu-id="2def9-283">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="2def9-284">このコンス トラクターは、O (`n`) 操作、`n`は、`capacity`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="2def9-284">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2def9-285">次のコード例では、別を使用してハッシュ テーブルが作成<xref:System.Collections.Hashtable>コンス トラクターと、それぞれに同じ要素が含まれている場合でも、ハッシュ テーブルの動作の違いを示します。</span><span class="sxs-lookup"><span data-stu-id="2def9-285">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CPP/hashtable_ctorint.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CS/hashtable_ctorint.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/VB/hashtable_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2def9-286">
            <paramref name="capacity" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-286">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, float loadFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, float32 loadFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, loadFactor As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, float loadFactor);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int * single -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (capacity, loadFactor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="loadFactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="2def9-287">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-287">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span>
          </span>
        </param>
        <param name="loadFactor">
          <span data-ttu-id="2def9-288">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-288">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span>
          </span>
          <span data-ttu-id="2def9-289">The result is the maximum ratio of elements to buckets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-289">The result is the maximum ratio of elements to buckets.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-290">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity and load factor, and the default hash code provider and comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-290">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity and load factor, and the default hash code provider and comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-291">多くの要素を追加するときにサイズ変更操作を実行する必要がある初期容量を指定する、<xref:System.Collections.Hashtable>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2def9-291">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="2def9-292">容量が自動的には、テーブル占有率に基づく必要に応じて増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-292">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="2def9-293">占有率は、バケット数に対する要素の最大比率です。</span><span class="sxs-lookup"><span data-stu-id="2def9-293">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="2def9-294">小さいテーブル占有率が増加したメモリの消費量を犠牲に高速の参照を意味します。</span><span class="sxs-lookup"><span data-stu-id="2def9-294">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="2def9-295">1.0 のテーブル占有率は、速度とサイズの最適なバランスです。</span><span class="sxs-lookup"><span data-stu-id="2def9-295">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="2def9-296">実際のテーブル占有率には、指定したテーブル占有率に達すると、バケット数を現在のバケット数の 2 倍を超える最小の素数を自動的に増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-296">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="2def9-297">ハッシュ コード プロバイダー内のキーのハッシュ コードを省き、<xref:System.Collections.Hashtable>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-297">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="2def9-298">既定のハッシュ コード プロバイダーは、キーの実装の<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-298">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-299">比較演算子は、2 つのキーが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="2def9-299">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="2def9-300">内のすべてのキーを<xref:System.Collections.Hashtable>で一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="2def9-300">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="2def9-301">既定の比較子は、キーの実装の<xref:System.Object.Equals%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-301">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-302">このコンス トラクターは、O (`n`) 操作、`n`は、`capacity`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="2def9-302">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2def9-303">次のコード例では、別を使用してハッシュ テーブルが作成<xref:System.Collections.Hashtable>コンス トラクターと、それぞれに同じ要素が含まれている場合でも、ハッシュ テーブルの動作の違いを示します。</span><span class="sxs-lookup"><span data-stu-id="2def9-303">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CPP/hashtable_ctorintfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CS/hashtable_ctorintfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/VB/hashtable_ctorintfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2def9-304">
            <paramref name="capacity" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-304">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2def9-305">-or-  <paramref name="loadFactor" /> is less than 0.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-305">-or-  <paramref name="loadFactor" /> is less than 0.1.</span>
          </span>
          <span data-ttu-id="2def9-306">-or-  <paramref name="loadFactor" /> is greater than 1.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-306">-or-  <paramref name="loadFactor" /> is greater than 1.0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2def9-307">
            <paramref name="capacity" /> is causing an overflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-307">
              <paramref name="capacity" /> is causing an overflow.</span>
          </span>
        </exception>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Hashtable (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Hashtable(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="2def9-308">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Collections.Hashtable" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-308">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="2def9-309">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-309">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-310">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class that is serializable using the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-310">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class that is serializable using the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-311">ハッシュ テーブルの容量は、最適なテーブル占有率に基づくハッシュ テーブルのバケット数を計算に使用されます。</span><span class="sxs-lookup"><span data-stu-id="2def9-311">A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</span></span> <span data-ttu-id="2def9-312">容量を増やすと自動的に必要とします。</span><span class="sxs-lookup"><span data-stu-id="2def9-312">Capacity is automatically increased as required.</span></span>  
  
 <span data-ttu-id="2def9-313">占有率は、バケット数に対する要素の最大比率です。</span><span class="sxs-lookup"><span data-stu-id="2def9-313">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="2def9-314">小さいテーブル占有率が増加したメモリの消費量を犠牲に高速の参照を意味します。</span><span class="sxs-lookup"><span data-stu-id="2def9-314">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="2def9-315">実際のテーブル占有率には、指定したテーブル占有率に達すると、バケット数を現在のバケット数の 2 倍を超える最小の素数を自動的に増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-315">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="2def9-316">ハッシュ コード プロバイダー内のキーのハッシュ コードを省き、<xref:System.Collections.Hashtable>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2def9-316">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="2def9-317">既定のハッシュ コード プロバイダーは、キーの実装の<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-317">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-318">比較演算子は、2 つのキーが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="2def9-318">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="2def9-319">内のすべてのキーを<xref:System.Collections.Hashtable>で一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="2def9-319">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="2def9-320">既定の比較子は、キーの実装の<xref:System.Object.Equals%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-320">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-321">このコンス トラクターは、O (`n`) 操作、`n`は<xref:System.Collections.Hashtable.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-321">This constructor is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 <span data-ttu-id="2def9-322">シリアル化するための列挙子を逆シリアル化、<xref:System.Collections.Hashtable>順序になる要素が発生することができます、呼び出さずに列挙を続行することはできません、<xref:System.Collections.IEnumerator.Reset%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2def9-322">Because serializing and deserializing an enumerator for a <xref:System.Collections.Hashtable> can cause the elements to become reordered, it is not possible to continue enumeration without calling the <xref:System.Collections.IEnumerator.Reset%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2def9-323">
            <paramref name="info" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-323">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary * System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (d, hcp, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Please use Hashtable(IDictionary, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="2def9-324">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-324">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
        </param>
        <param name="hcp">
          <span data-ttu-id="2def9-325">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-325">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
          <span data-ttu-id="2def9-326">-or-  <see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-326">-or-  <see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="2def9-327">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-327">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span>
          </span>
          <span data-ttu-id="2def9-328">-or-  <see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-328">-or-  <see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-329">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-329">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
          <span data-ttu-id="2def9-330">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the default load factor, and the specified hash code provider and comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-330">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the default load factor, and the specified hash code provider and comparer.</span>
          </span>
          <span data-ttu-id="2def9-331">This API is obsolete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-331">This API is obsolete.</span>
          </span>
          <span data-ttu-id="2def9-332">For an alternative, see <see cref="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-332">For an alternative, see <see cref="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-333">初期の容量は、元のディクショナリの要素の数に設定されます。</span><span class="sxs-lookup"><span data-stu-id="2def9-333">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="2def9-334">容量が自動的には、テーブル占有率に基づく必要に応じて増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-334">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="2def9-335">占有率は、バケット数に対する要素の最大比率です。</span><span class="sxs-lookup"><span data-stu-id="2def9-335">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="2def9-336">小さいテーブル占有率が増加したメモリの消費量を犠牲に高速の参照を意味します。</span><span class="sxs-lookup"><span data-stu-id="2def9-336">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="2def9-337">実際のテーブル占有率には、指定したテーブル占有率に達すると、バケット数を現在のバケット数の 2 倍を超える最小の素数を自動的に増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-337">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="2def9-338">ハッシュ コード プロバイダー内のキーのハッシュ コードを省き、<xref:System.Collections.Hashtable>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2def9-338">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="2def9-339">既定のハッシュ コード プロバイダーは、キーの実装の<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-339">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-340">比較演算子は、2 つのキーが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="2def9-340">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="2def9-341">内のすべてのキーを<xref:System.Collections.Hashtable>で一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="2def9-341">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="2def9-342">既定の比較子は、キーの実装の<xref:System.Object.Equals%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-342">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-343">カスタムのハッシュ コード プロバイダーとカスタムの比較子は、大文字の文字列、検索を行うなどのシナリオを有効にします。</span><span class="sxs-lookup"><span data-stu-id="2def9-343">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="2def9-344">新しい要素<xref:System.Collections.Hashtable>を列挙子が反復処理と同じ順序で並べ替えられますが、<xref:System.Collections.IDictionary>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2def9-344">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="2def9-345">このコンス トラクターは、O (`n`) 操作、`n`内の要素の数が、`d`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="2def9-345">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2def9-346">次のコード例では、別を使用してハッシュ テーブルが作成<xref:System.Collections.Hashtable>コンス トラクターと、それぞれに同じ要素が含まれている場合でも、ハッシュ テーブルの動作の違いを示します。</span><span class="sxs-lookup"><span data-stu-id="2def9-346">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CPP/hashtable_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CS/hashtable_ctordictionary.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/VB/hashtable_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2def9-347">
            <paramref name="d" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-347">
              <paramref name="d" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, float loadFactor, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, float32 loadFactor, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, loadFactor As Single, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, float loadFactor, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary * single * System.Collections.IEqualityComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (d, loadFactor, equalityComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="loadFactor" Type="System.Single" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="2def9-348">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-348">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
        </param>
        <param name="loadFactor">
          <span data-ttu-id="2def9-349">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-349">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span>
          </span>
          <span data-ttu-id="2def9-350">The result is the maximum ratio of elements to buckets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-350">The result is the maximum ratio of elements to buckets.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="2def9-351">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-351">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
          <span data-ttu-id="2def9-352">-or-  <see langword="null" /> to use the default hash code provider and the default comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-352">-or-  <see langword="null" /> to use the default hash code provider and the default comparer.</span>
          </span>
          <span data-ttu-id="2def9-353">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-353">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-354">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-354">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
          <span data-ttu-id="2def9-355">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the specified load factor and <see cref="T:System.Collections.IEqualityComparer" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-355">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the specified load factor and <see cref="T:System.Collections.IEqualityComparer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-356">初期の容量は、元のディクショナリの要素の数に設定されます。</span><span class="sxs-lookup"><span data-stu-id="2def9-356">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="2def9-357">容量が自動的には、テーブル占有率に基づく必要に応じて増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-357">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="2def9-358">占有率は、バケット数に対する要素の最大比率です。</span><span class="sxs-lookup"><span data-stu-id="2def9-358">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="2def9-359">小さいテーブル占有率が増加したメモリの消費量を犠牲に高速の参照を意味します。</span><span class="sxs-lookup"><span data-stu-id="2def9-359">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="2def9-360">1.0 のテーブル占有率は、速度とサイズの最適なバランスです。</span><span class="sxs-lookup"><span data-stu-id="2def9-360">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="2def9-361">実際のテーブル占有率には、指定したテーブル占有率に達すると、バケット数を現在のバケット数の 2 倍を超える最小の素数を自動的に増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-361">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="2def9-362"><xref:System.Collections.IEqualityComparer>オブジェクトにはハッシュ コード プロバイダーと比較子の両方が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2def9-362">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="2def9-363">場合、<xref:System.Collections.IEqualityComparer>で使用されて、<xref:System.Collections.Hashtable>コンス トラクター、内のキーとして使用されるオブジェクト、<xref:System.Collections.Hashtable>オブジェクトがオーバーライドする必要はありません、<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>と<xref:System.Object.Equals%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2def9-363">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> object are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="2def9-364">ハッシュ コード プロバイダー内のキーのハッシュ コードを省き、<xref:System.Collections.Hashtable>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-364">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="2def9-365">既定のハッシュ コード プロバイダーは、キーの実装の<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-365">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-366">比較演算子は、2 つのキーが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="2def9-366">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="2def9-367">内のすべてのキーを<xref:System.Collections.Hashtable>で一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="2def9-367">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="2def9-368">既定の比較子は、キーの実装の<xref:System.Object.Equals%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-368">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-369"><xref:System.Collections.IEqualityComparer>大文字の文字列の検索の実行などのシナリオを実現できます。</span><span class="sxs-lookup"><span data-stu-id="2def9-369">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="2def9-370">新しい要素<xref:System.Collections.Hashtable>を列挙子が反復処理と同じ順序で並べ替えられますが、<xref:System.Collections.IDictionary>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2def9-370">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="2def9-371">このコンス トラクターは、O (`n`) 操作、`n`内の要素の数が、`d`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="2def9-371">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2def9-372">次のコード例では、別を使用してハッシュ テーブルが作成<xref:System.Collections.Hashtable>コンス トラクターと、それぞれに同じ要素が含まれている場合でも、ハッシュ テーブルの動作の違いを示します。</span><span class="sxs-lookup"><span data-stu-id="2def9-372">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CPP/hashtable_ctordictionaryfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CS/hashtable_ctordictionaryfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/VB/hashtable_ctordictionaryfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2def9-373">
            <paramref name="d" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-373">
              <paramref name="d" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2def9-374">
            <paramref name="loadFactor" /> is less than 0.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-374">
              <paramref name="loadFactor" /> is less than 0.1.</span>
          </span>
          <span data-ttu-id="2def9-375">-or-  <paramref name="loadFactor" /> is greater than 1.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-375">-or-  <paramref name="loadFactor" /> is greater than 1.0.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int * System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (capacity, hcp, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Please use Hashtable(int, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="2def9-376">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-376">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span>
          </span>
        </param>
        <param name="hcp">
          <span data-ttu-id="2def9-377">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-377">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
          <span data-ttu-id="2def9-378">-or-  <see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-378">-or-  <see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="2def9-379">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-379">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span>
          </span>
          <span data-ttu-id="2def9-380">-or-  <see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-380">-or-  <see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-381">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, hash code provider, comparer, and the default load factor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-381">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, hash code provider, comparer, and the default load factor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-382">多くの要素を追加するときにサイズ変更操作を実行する必要がある初期容量を指定する、<xref:System.Collections.Hashtable>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2def9-382">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="2def9-383">容量が自動的には、テーブル占有率に基づく必要に応じて増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-383">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="2def9-384">占有率は、バケット数に対する要素の最大比率です。</span><span class="sxs-lookup"><span data-stu-id="2def9-384">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="2def9-385">小さいテーブル占有率が増加したメモリの消費量を犠牲に高速の参照を意味します。</span><span class="sxs-lookup"><span data-stu-id="2def9-385">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="2def9-386">実際のテーブル占有率には、指定したテーブル占有率に達すると、バケット数を現在のバケット数の 2 倍を超える最小の素数を自動的に増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-386">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="2def9-387">ハッシュ コード プロバイダー内のキーのハッシュ コードを省き、<xref:System.Collections.Hashtable>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-387">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="2def9-388">既定のハッシュ コード プロバイダーは、キーの実装の<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-388">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-389">比較演算子は、2 つのキーが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="2def9-389">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="2def9-390">内のすべてのキーを<xref:System.Collections.Hashtable>で一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="2def9-390">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="2def9-391">既定の比較子は、キーの実装の<xref:System.Object.Equals%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-391">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-392">カスタムのハッシュ コード プロバイダーとカスタムの比較子は、大文字の文字列、検索を行うなどのシナリオを有効にします。</span><span class="sxs-lookup"><span data-stu-id="2def9-392">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="2def9-393">このコンス トラクターは、O (`n`) 操作、`n`は、`capacity`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="2def9-393">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2def9-394">次のコード例では、別を使用してハッシュ テーブルが作成<xref:System.Collections.Hashtable>コンス トラクターと、それぞれに同じ要素が含まれている場合でも、ハッシュ テーブルの動作の違いを示します。</span><span class="sxs-lookup"><span data-stu-id="2def9-394">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CPP/hashtable_ctorint.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CS/hashtable_ctorint.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/VB/hashtable_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2def9-395">
            <paramref name="capacity" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-395">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, float loadFactor, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, float32 loadFactor, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, loadFactor As Single, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, float loadFactor, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int * single * System.Collections.IEqualityComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (capacity, loadFactor, equalityComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="loadFactor" Type="System.Single" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="2def9-396">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-396">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span>
          </span>
        </param>
        <param name="loadFactor">
          <span data-ttu-id="2def9-397">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-397">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span>
          </span>
          <span data-ttu-id="2def9-398">The result is the maximum ratio of elements to buckets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-398">The result is the maximum ratio of elements to buckets.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="2def9-399">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-399">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
          <span data-ttu-id="2def9-400">-or-  <see langword="null" /> to use the default hash code provider and the default comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-400">-or-  <see langword="null" /> to use the default hash code provider and the default comparer.</span>
          </span>
          <span data-ttu-id="2def9-401">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-401">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-402">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, load factor, and <see cref="T:System.Collections.IEqualityComparer" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-402">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, load factor, and <see cref="T:System.Collections.IEqualityComparer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-403">多くの要素を追加するときにサイズ変更操作を実行する必要がある初期容量を指定する、<xref:System.Collections.Hashtable>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2def9-403">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="2def9-404">容量が自動的には、テーブル占有率に基づく必要に応じて増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-404">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="2def9-405">占有率は、バケット数に対する要素の最大比率です。</span><span class="sxs-lookup"><span data-stu-id="2def9-405">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="2def9-406">小さいテーブル占有率が増加したメモリの消費量を犠牲に高速の参照を意味します。</span><span class="sxs-lookup"><span data-stu-id="2def9-406">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="2def9-407">1.0 のテーブル占有率は、速度とサイズの最適なバランスです。</span><span class="sxs-lookup"><span data-stu-id="2def9-407">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="2def9-408">実際のテーブル占有率には、指定したテーブル占有率に達すると、バケット数を現在のバケット数の 2 倍を超える最小の素数を自動的に増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-408">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="2def9-409"><xref:System.Collections.IEqualityComparer>オブジェクトにはハッシュ コード プロバイダーと比較子の両方が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2def9-409">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="2def9-410">場合、<xref:System.Collections.IEqualityComparer>で使用されて、<xref:System.Collections.Hashtable>コンス トラクター、内のキーとして使用されるオブジェクト、<xref:System.Collections.Hashtable>をオーバーライドする必要はありません、<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>と<xref:System.Object.Equals%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2def9-410">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="2def9-411">ハッシュ コード プロバイダー内のキーのハッシュ コードを省き、<xref:System.Collections.Hashtable>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-411">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="2def9-412">既定のハッシュ コード プロバイダーは、キーの実装の<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-412">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-413">比較演算子は、2 つのキーが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="2def9-413">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="2def9-414">内のすべてのキーを<xref:System.Collections.Hashtable>で一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="2def9-414">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="2def9-415">既定の比較子は、キーの実装の<xref:System.Object.Equals%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-415">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-416"><xref:System.Collections.IEqualityComparer>大文字の文字列の検索の実行などのシナリオを実現できます。</span><span class="sxs-lookup"><span data-stu-id="2def9-416">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="2def9-417">このコンス トラクターは、O (`n`) 操作、`n`は、`capacity`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="2def9-417">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2def9-418">次のコード例では、別を使用してハッシュ テーブルが作成<xref:System.Collections.Hashtable>コンス トラクターと、それぞれに同じ要素が含まれている場合でも、ハッシュ テーブルの動作の違いを示します。</span><span class="sxs-lookup"><span data-stu-id="2def9-418">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CPP/hashtable_ctorintfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CS/hashtable_ctorintfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/VB/hashtable_ctorintfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2def9-419">
            <paramref name="capacity" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-419">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2def9-420">-or-  <paramref name="loadFactor" /> is less than 0.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-420">-or-  <paramref name="loadFactor" /> is less than 0.1.</span>
          </span>
          <span data-ttu-id="2def9-421">-or-  <paramref name="loadFactor" /> is greater than 1.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-421">-or-  <paramref name="loadFactor" /> is greater than 1.0.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, float loadFactor, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, float32 loadFactor, class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, loadFactor As Single, hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, float loadFactor, System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary * single * System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (d, loadFactor, hcp, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Please use Hashtable(IDictionary, float, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="loadFactor" Type="System.Single" />
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="2def9-422">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-422">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
        </param>
        <param name="loadFactor">
          <span data-ttu-id="2def9-423">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-423">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span>
          </span>
          <span data-ttu-id="2def9-424">The result is the maximum ratio of elements to buckets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-424">The result is the maximum ratio of elements to buckets.</span>
          </span>
        </param>
        <param name="hcp">
          <span data-ttu-id="2def9-425">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-425">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
          <span data-ttu-id="2def9-426">-or-  <see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-426">-or-  <see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="2def9-427">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-427">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span>
          </span>
          <span data-ttu-id="2def9-428">-or-  <see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-428">-or-  <see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-429">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-429">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
          <span data-ttu-id="2def9-430">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the specified load factor, hash code provider, and comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-430">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the specified load factor, hash code provider, and comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-431">初期の容量は、元のディクショナリの要素の数に設定されます。</span><span class="sxs-lookup"><span data-stu-id="2def9-431">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="2def9-432">容量が自動的には、テーブル占有率に基づく必要に応じて増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-432">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="2def9-433">占有率は、バケット数に対する要素の最大比率です。</span><span class="sxs-lookup"><span data-stu-id="2def9-433">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="2def9-434">小さいテーブル占有率が増加したメモリの消費量を犠牲に高速の参照を意味します。</span><span class="sxs-lookup"><span data-stu-id="2def9-434">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="2def9-435">1.0 のテーブル占有率は、速度とサイズの最適なバランスです。</span><span class="sxs-lookup"><span data-stu-id="2def9-435">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="2def9-436">実際のテーブル占有率には、指定したテーブル占有率に達すると、バケット数を現在のバケット数の 2 倍を超える最小の素数を自動的に増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-436">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="2def9-437">ハッシュ コード プロバイダー内のキーのハッシュ コードを省き、<xref:System.Collections.Hashtable>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2def9-437">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="2def9-438">既定のハッシュ コード プロバイダーは、キーの実装の<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-438">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-439">比較演算子は、2 つのキーが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="2def9-439">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="2def9-440">内のすべてのキーを<xref:System.Collections.Hashtable>で一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="2def9-440">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="2def9-441">既定の比較子は、キーの実装の<xref:System.Object.Equals%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-441">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-442">カスタムのハッシュ コード プロバイダーとカスタムの比較子は、大文字の文字列、検索を行うなどのシナリオを有効にします。</span><span class="sxs-lookup"><span data-stu-id="2def9-442">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="2def9-443">新しい要素<xref:System.Collections.Hashtable>を列挙子が反復処理と同じ順序で並べ替えられますが、<xref:System.Collections.IDictionary>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2def9-443">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="2def9-444">このコンス トラクターは、O (`n`) 操作、`n`内の要素の数が、`d`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="2def9-444">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2def9-445">次のコード例では、別を使用してハッシュ テーブルが作成<xref:System.Collections.Hashtable>コンス トラクターと、それぞれに同じ要素が含まれている場合でも、ハッシュ テーブルの動作の違いを示します。</span><span class="sxs-lookup"><span data-stu-id="2def9-445">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CPP/hashtable_ctordictionaryfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CS/hashtable_ctordictionaryfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/VB/hashtable_ctordictionaryfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2def9-446">
            <paramref name="d" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-446">
              <paramref name="d" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2def9-447">
            <paramref name="loadFactor" /> is less than 0.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-447">
              <paramref name="loadFactor" /> is less than 0.1.</span>
          </span>
          <span data-ttu-id="2def9-448">-or-  <paramref name="loadFactor" /> is greater than 1.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-448">-or-  <paramref name="loadFactor" /> is greater than 1.0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, float loadFactor, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, float32 loadFactor, class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, loadFactor As Single, hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, float loadFactor, System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int * single * System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (capacity, loadFactor, hcp, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Please use Hashtable(int, float, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="loadFactor" Type="System.Single" />
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="2def9-449">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-449">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span>
          </span>
        </param>
        <param name="loadFactor">
          <span data-ttu-id="2def9-450">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-450">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span>
          </span>
          <span data-ttu-id="2def9-451">The result is the maximum ratio of elements to buckets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-451">The result is the maximum ratio of elements to buckets.</span>
          </span>
        </param>
        <param name="hcp">
          <span data-ttu-id="2def9-452">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-452">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
          <span data-ttu-id="2def9-453">-or-  <see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-453">-or-  <see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="2def9-454">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-454">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span>
          </span>
          <span data-ttu-id="2def9-455">-or-  <see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-455">-or-  <see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-456">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, load factor, hash code provider, and comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-456">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, load factor, hash code provider, and comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-457">多くの要素を追加するときにサイズ変更操作を実行する必要がある初期容量を指定する、<xref:System.Collections.Hashtable>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2def9-457">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="2def9-458">容量が自動的には、テーブル占有率に基づく必要に応じて増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-458">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="2def9-459">占有率は、バケット数に対する要素の最大比率です。</span><span class="sxs-lookup"><span data-stu-id="2def9-459">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="2def9-460">小さいテーブル占有率が増加したメモリの消費量を犠牲に高速の参照を意味します。</span><span class="sxs-lookup"><span data-stu-id="2def9-460">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="2def9-461">1.0 のテーブル占有率は、速度とサイズの最適なバランスです。</span><span class="sxs-lookup"><span data-stu-id="2def9-461">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="2def9-462">実際のテーブル占有率には、指定したテーブル占有率に達すると、バケット数を現在のバケット数の 2 倍を超える最小の素数を自動的に増加します。</span><span class="sxs-lookup"><span data-stu-id="2def9-462">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="2def9-463">ハッシュ コード プロバイダー内のキーのハッシュ コードを省き、<xref:System.Collections.Hashtable>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-463">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="2def9-464">既定のハッシュ コード プロバイダーは、キーの実装の<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-464">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-465">比較演算子は、2 つのキーが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="2def9-465">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="2def9-466">内のすべてのキーを<xref:System.Collections.Hashtable>で一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="2def9-466">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="2def9-467">既定の比較子は、キーの実装の<xref:System.Object.Equals%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-467">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2def9-468">カスタムのハッシュ コード プロバイダーとカスタムの比較子は、大文字の文字列、検索を行うなどのシナリオを有効にします。</span><span class="sxs-lookup"><span data-stu-id="2def9-468">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="2def9-469">このコンス トラクターは、O (`n`) 操作、`n`は、`capacity`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="2def9-469">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2def9-470">次のコード例では、別を使用してハッシュ テーブルが作成<xref:System.Collections.Hashtable>コンス トラクターと、それぞれに同じ要素が含まれている場合でも、ハッシュ テーブルの動作の違いを示します。</span><span class="sxs-lookup"><span data-stu-id="2def9-470">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CPP/hashtable_ctorintfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CS/hashtable_ctorintfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/VB/hashtable_ctorintfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2def9-471">
            <paramref name="capacity" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-471">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
          <span data-ttu-id="2def9-472">-or-  <paramref name="loadFactor" /> is less than 0.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-472">-or-  <paramref name="loadFactor" /> is less than 0.1.</span>
          </span>
          <span data-ttu-id="2def9-473">-or-  <paramref name="loadFactor" /> is greater than 1.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-473">-or-  <paramref name="loadFactor" /> is greater than 1.0.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj * obj -&gt; unit&#xA;override this.Add : obj * obj -&gt; unit" Usage="hashtable.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="2def9-474">The key of the element to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-474">The key of the element to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="2def9-475">The value of the element to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-475">The value of the element to add.</span>
          </span>
          <span data-ttu-id="2def9-476">The value can be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-476">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-477">Adds an element with the specified key and value into the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-477">Adds an element with the specified key and value into the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-478">キーには`null`が値を使用できます。</span><span class="sxs-lookup"><span data-stu-id="2def9-478">A key cannot be `null`, but a value can be.</span></span>  
  
 <span data-ttu-id="2def9-479">オブジェクトの状態とそのハッシュ コード値の相関関係がない必要があります通常しないキーとして使用、します。</span><span class="sxs-lookup"><span data-stu-id="2def9-479">An object that has no correlation between its state and its hash code value should typically not be used as the key.</span></span> <span data-ttu-id="2def9-480">たとえば、文字列オブジェクトは、キーとして使用するための StringBuilder オブジェクトよりも向上。</span><span class="sxs-lookup"><span data-stu-id="2def9-480">For example, String objects are better than StringBuilder objects for use as keys.</span></span>  
  
 <span data-ttu-id="2def9-481">使用することも、<xref:System.Collections.Hashtable.Item%2A>にキーの値を設定して、新しい要素を追加するプロパティが存在しません、 <xref:System.Collections.Hashtable>。 たとえば、`myCollection["myNonexistentKey"] = myValue`します。</span><span class="sxs-lookup"><span data-stu-id="2def9-481">You can also use the <xref:System.Collections.Hashtable.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Hashtable>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="2def9-482">ただしで指定したキーが既に存在する場合、<xref:System.Collections.Hashtable>で、設定、<xref:System.Collections.Hashtable.Item%2A>プロパティには、古い値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="2def9-482">However, if the specified key already exists in the <xref:System.Collections.Hashtable>, setting the <xref:System.Collections.Hashtable.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="2def9-483">これに対し、<xref:System.Collections.Hashtable.Add%2A>メソッドでは、既存の要素は変更しません。</span><span class="sxs-lookup"><span data-stu-id="2def9-483">In contrast, the <xref:System.Collections.Hashtable.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="2def9-484">場合<xref:System.Collections.Hashtable.Count%2A>の容量よりも小さい、 <xref:System.Collections.Hashtable>、このメソッドは o (1) 操作。</span><span class="sxs-lookup"><span data-stu-id="2def9-484">If <xref:System.Collections.Hashtable.Count%2A> is less than the capacity of the <xref:System.Collections.Hashtable>, this method is an O(1) operation.</span></span> <span data-ttu-id="2def9-485">このメソッドになります、O が新しい要素を格納するために、容量が必要な場合 (`n`) 操作、`n`は<xref:System.Collections.Hashtable.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-485">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2def9-486">次の例では、要素を追加する方法を示しています、<xref:System.Collections.Hashtable>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-486">The following example shows how to add elements to the <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Add Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2def9-487">
            <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-487">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2def9-488">An element with the same key already exists in the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-488">An element with the same key already exists in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2def9-489">The <see cref="T:System.Collections.Hashtable" /> is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-489">The <see cref="T:System.Collections.Hashtable" /> is read-only.</span>
          </span>
          <span data-ttu-id="2def9-490">-or-  The <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-490">-or-  The <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Hashtable.Remove(System.Object)" />
        <altmember cref="P:System.Collections.Hashtable.Item(System.Object)" />
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="hashtable.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2def9-491">Removes all elements from the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-491">Removes all elements from the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-492"><xref:System.Collections.Hashtable.Count%2A> 0 に設定し、コレクションの要素からその他のオブジェクトへの参照も解放します。</span><span class="sxs-lookup"><span data-stu-id="2def9-492"><xref:System.Collections.Hashtable.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span> <span data-ttu-id="2def9-493">容量は変更されません。</span><span class="sxs-lookup"><span data-stu-id="2def9-493">The capacity remains unchanged.</span></span>  
  
 <span data-ttu-id="2def9-494">このメソッドは O (`n`) 操作、`n`は<xref:System.Collections.Hashtable.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-494">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2def9-495">次の例の値をクリアする方法を示しています、<xref:System.Collections.Hashtable>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-495">The following example shows how to clear the values of the <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2def9-496">The <see cref="T:System.Collections.Hashtable" /> is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-496">The <see cref="T:System.Collections.Hashtable" /> is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.IDictionary.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="hashtable.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2def9-497">Creates a shallow copy of the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-497">Creates a shallow copy of the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2def9-498">A shallow copy of the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-498">A shallow copy of the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-499">コレクションの簡易コピーは、参照型または値型ですが、参照先のオブジェクトはコピーしないかどうか、コレクションの要素のみをコピーします。</span><span class="sxs-lookup"><span data-stu-id="2def9-499">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="2def9-500">新しいコレクションの参照を元のコレクション内の参照が指す同じオブジェクトを指します。</span><span class="sxs-lookup"><span data-stu-id="2def9-500">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="2def9-501">これに対し、コレクションのディープ コピーを要素をコピーして、要素が直接または間接的に参照するすべて。</span><span class="sxs-lookup"><span data-stu-id="2def9-501">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="2def9-502"><xref:System.Collections.Hashtable>クローンは、同じ数、同じ容量では、同じ<xref:System.Collections.IHashCodeProvider>実装、および同じ<xref:System.Collections.IComparer>実装元として<xref:System.Collections.Hashtable>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-502">The <xref:System.Collections.Hashtable> clone has the same count, the same capacity, the same <xref:System.Collections.IHashCodeProvider> implementation, and the same <xref:System.Collections.IComparer> implementation as the original <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="2def9-503">このメソッドは O (`n`) 操作、`n`は<xref:System.Collections.Hashtable.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-503">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="comparer">
      <MemberSignature Language="C#" Value="protected System.Collections.IComparer comparer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.comparer" />
      <MemberSignature Language="VB.NET" Value="Protected Property comparer As IComparer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IComparer ^ comparer { System::Collections::IComparer ^ get(); void set(System::Collections::IComparer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.comparer : System.Collections.IComparer with get, set" Usage="System.Collections.Hashtable.comparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Please use KeyComparer properties.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2def9-504">Gets or sets the <see cref="T:System.Collections.IComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-504">Gets or sets the <see cref="T:System.Collections.IComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2def9-505">
            <see cref="T:System.Collections.IComparer" />に使用する、<see cref="T:System.Collections.Hashtable" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-505">The <see cref="T:System.Collections.IComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-506">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="2def9-506">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2def9-507">The property is set to a value, but the hash table was created using an <see cref="T:System.Collections.IEqualityComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-507">The property is set to a value, but the hash table was created using an <see cref="T:System.Collections.IEqualityComparer" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IComparer" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="hashtable.Contains key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="2def9-508">The key to locate in the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-508">The key to locate in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-509">Determines whether the <see cref="T:System.Collections.Hashtable" /> contains a specific key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-509">Determines whether the <see cref="T:System.Collections.Hashtable" /> contains a specific key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2def9-510">
            <see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-510">
              <see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-511"><xref:System.Collections.Hashtable.Contains%2A> は、<xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType> を実装します。</span><span class="sxs-lookup"><span data-stu-id="2def9-511"><xref:System.Collections.Hashtable.Contains%2A> implements <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2def9-512">まったく同様に機能<xref:System.Collections.Hashtable.ContainsKey%2A>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-512">It behaves exactly as <xref:System.Collections.Hashtable.ContainsKey%2A>.</span></span>  
  
 <span data-ttu-id="2def9-513">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="2def9-513">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="2def9-514">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>メソッド`item`項目が存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="2def9-514">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="2def9-515">以前のバージョンの .NET Framework では、この判断を使用して行われた、<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>のメソッド、`item`パラメーター コレクション内のオブジェクトにします。</span><span class="sxs-lookup"><span data-stu-id="2def9-515">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2def9-516">次の例を確認する方法を示して かどうか、<xref:System.Collections.Hashtable>特定の要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2def9-516">The following example shows how to determine whether the <xref:System.Collections.Hashtable> contains a specific element.</span></span>  
  
 [!code-cpp[Classic Hashtable.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2def9-517">
            <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-517">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : obj -&gt; bool&#xA;override this.ContainsKey : obj -&gt; bool" Usage="hashtable.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="2def9-518">The key to locate in the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-518">The key to locate in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-519">Determines whether the <see cref="T:System.Collections.Hashtable" /> contains a specific key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-519">Determines whether the <see cref="T:System.Collections.Hashtable" /> contains a specific key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2def9-520">
            <see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-520">
              <see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-521">このメソッドの動作とまったく同じ<xref:System.Collections.Hashtable.Contains%2A>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-521">This method behaves exactly as <xref:System.Collections.Hashtable.Contains%2A>.</span></span>  
  
 <span data-ttu-id="2def9-522">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="2def9-522">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="2def9-523">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>メソッド`item`項目が存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="2def9-523">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="2def9-524">以前のバージョンの .NET Framework では、この判断を使用して行われた、<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>のメソッド、`item`パラメーター コレクション内のオブジェクトにします。</span><span class="sxs-lookup"><span data-stu-id="2def9-524">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2def9-525">次の例を確認する方法を示して かどうか、<xref:System.Collections.Hashtable>特定の要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2def9-525">The following example shows how to determine whether the <xref:System.Collections.Hashtable> contains a specific element.</span></span>  
  
 [!code-cpp[Classic Hashtable.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2def9-526">
            <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-526">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Hashtable.Contains(System.Object)" />
        <altmember cref="M:System.Collections.Hashtable.ContainsValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsValue">
      <MemberSignature Language="C#" Value="public virtual bool ContainsValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.ContainsValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsValue (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ContainsValue : obj -&gt; bool&#xA;override this.ContainsValue : obj -&gt; bool" Usage="hashtable.ContainsValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2def9-527">The value to locate in the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-527">The value to locate in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
          <span data-ttu-id="2def9-528">The value can be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-528">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-529">Determines whether the <see cref="T:System.Collections.Hashtable" /> contains a specific value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-529">Determines whether the <see cref="T:System.Collections.Hashtable" /> contains a specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2def9-530">
            <see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> contains an element with the specified <paramref name="value" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-530">
              <see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> contains an element with the specified <paramref name="value" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-531">要素の値、<xref:System.Collections.Hashtable>を使用して、指定した値と比較されます、<xref:System.Object.Equals%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2def9-531">The values of the elements of the <xref:System.Collections.Hashtable> are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2def9-532">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (`n`) 操作、`n`は<xref:System.Collections.Hashtable.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-532">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 <span data-ttu-id="2def9-533">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>メソッド`item`項目が存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="2def9-533">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="2def9-534">以前のバージョンの .NET Framework では、この判断を使用して行われた、<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>のメソッド、`item`パラメーター コレクション内のオブジェクトにします。</span><span class="sxs-lookup"><span data-stu-id="2def9-534">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2def9-535">次の例を確認する方法を示して かどうか、<xref:System.Collections.Hashtable>特定の要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2def9-535">The following example shows how to determine whether the <xref:System.Collections.Hashtable> contains a specific element.</span></span>  
  
 [!code-cpp[Classic Hashtable.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="hashtable.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="2def9-536">The one-dimensional <see cref="T:System.Array" /> that is the destination of the <see cref="T:System.Collections.DictionaryEntry" /> objects copied from <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-536">The one-dimensional <see cref="T:System.Array" /> that is the destination of the <see cref="T:System.Collections.DictionaryEntry" /> objects copied from <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
          <span data-ttu-id="2def9-537">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-537">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="2def9-538">The zero-based index in <c>array</c> at which copying begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-538">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-539">Copies the <see cref="T:System.Collections.Hashtable" /> elements to a one-dimensional <see cref="T:System.Array" /> instance at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-539">Copies the <see cref="T:System.Collections.Hashtable" /> elements to a one-dimensional <see cref="T:System.Array" /> instance at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-540">要素のコピー先は、<xref:System.Array>を列挙子が反復処理と同じ順序で、<xref:System.Collections.Hashtable>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-540">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="2def9-541">内のキーのみをコピーする、<xref:System.Collections.Hashtable>を使用して、`Hashtable.Keys.CopyTo`します。</span><span class="sxs-lookup"><span data-stu-id="2def9-541">To copy only the keys in the <xref:System.Collections.Hashtable>, use `Hashtable.Keys.CopyTo`.</span></span>  
  
 <span data-ttu-id="2def9-542">値だけをコピーする、<xref:System.Collections.Hashtable>を使用して、`Hashtable.Values.CopyTo`します。</span><span class="sxs-lookup"><span data-stu-id="2def9-542">To copy only the values in the <xref:System.Collections.Hashtable>, use `Hashtable.Values.CopyTo`.</span></span>  
  
 <span data-ttu-id="2def9-543">このメソッドは O (`n`) 操作、`n`は<xref:System.Collections.Hashtable.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-543">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2def9-544">次の例では、キーの一覧またはの値のリストをコピーする方法を示しています、 <xref:System.Collections.Hashtable> 1 次元に<xref:System.Array>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-544">The following example shows how to copy the list of keys or the list of values in a <xref:System.Collections.Hashtable> into a one-dimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Hashtable.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2def9-545">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-545">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2def9-546">
            <paramref name="arrayIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-546">
              <paramref name="arrayIndex" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2def9-547">
            <paramref name="array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-547">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="2def9-548">-or-  The number of elements in the source <see cref="T:System.Collections.Hashtable" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-548">-or-  The number of elements in the source <see cref="T:System.Collections.Hashtable" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="2def9-549">The type of the source <see cref="T:System.Collections.Hashtable" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-549">The type of the source <see cref="T:System.Collections.Hashtable" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="M:System.Collections.Hashtable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Hashtable.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2def9-550">Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-550">Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2def9-551">
            <see cref="T:System.Collections.Hashtable" /> に格納されているキー/値ペアの数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-551">The number of key/value pairs contained in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-552">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="2def9-552">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EqualityComparer">
      <MemberSignature Language="C#" Value="protected System.Collections.IEqualityComparer EqualityComparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEqualityComparer EqualityComparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.EqualityComparer" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property EqualityComparer As IEqualityComparer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IEqualityComparer ^ EqualityComparer { System::Collections::IEqualityComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EqualityComparer : System.Collections.IEqualityComparer" Usage="System.Collections.Hashtable.EqualityComparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEqualityComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2def9-553">Gets the <see cref="T:System.Collections.IEqualityComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-553">Gets the <see cref="T:System.Collections.IEqualityComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2def9-554">
            <see cref="T:System.Collections.IEqualityComparer" />に使用する、<see cref="T:System.Collections.Hashtable" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-554">The <see cref="T:System.Collections.IEqualityComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-555"><xref:System.Collections.IEqualityComparer>の比較子と、ハッシュ コード プロバイダーの両方が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2def9-555">The <xref:System.Collections.IEqualityComparer> includes both the comparer and the hash code provider.</span></span> <span data-ttu-id="2def9-556">場合、<xref:System.Collections.IEqualityComparer>で使用されて、<xref:System.Collections.Hashtable>コンス トラクター、内のキーとして使用されるオブジェクト、<xref:System.Collections.Hashtable>をオーバーライドする必要はありません、<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>と<xref:System.Object.Equals%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2def9-556">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="2def9-557">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="2def9-557">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2def9-558">The property is set to a value, but the hash table was created using an <see cref="T:System.Collections.IHashCodeProvider" /> and an <see cref="T:System.Collections.IComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-558">The property is set to a value, but the hash table was created using an <see cref="T:System.Collections.IHashCodeProvider" /> and an <see cref="T:System.Collections.IComparer" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Comparer" />
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="hashtable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2def9-559">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> that iterates through the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-559">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> that iterates through the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2def9-560">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-560">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-561">[Visual Basic、c#]</span><span class="sxs-lookup"><span data-stu-id="2def9-561">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="2def9-562">C# 言語の `foreach` ステートメント (Visual Basic の場合は `for each`) を使用することで列挙子の複雑さを回避できます。</span><span class="sxs-lookup"><span data-stu-id="2def9-562">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="2def9-563">したがって、列挙子を直接操作するのではなく、`foreach` を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="2def9-563">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="2def9-564">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="2def9-564">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="2def9-565">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="2def9-565">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="2def9-566"><xref:System.Collections.IEnumerator.Reset%2A> を実行した場合も、列挙子はこの位置に戻されます。</span><span class="sxs-lookup"><span data-stu-id="2def9-566"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="2def9-567">この位置では、<xref:System.Collections.IEnumerator.Current%2A> が未定義です。</span><span class="sxs-lookup"><span data-stu-id="2def9-567">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="2def9-568">そのため、<xref:System.Collections.IEnumerator.MoveNext%2A> の値を読み取る前に、<xref:System.Collections.IEnumerator.Current%2A> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="2def9-568">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="2def9-569"><xref:System.Collections.IEnumerator.Current%2A> は、<xref:System.Collections.IEnumerator.MoveNext%2A> または <xref:System.Collections.IEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="2def9-569"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="2def9-570"><xref:System.Collections.IEnumerator.MoveNext%2A> は、<xref:System.Collections.IEnumerator.Current%2A> を次の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="2def9-570"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="2def9-571">場合<xref:System.Collections.IEnumerator.MoveNext%2A>列挙子、コレクションの末尾がコレクション内の最後の要素の後に配置されているパスと<xref:System.Collections.IEnumerator.MoveNext%2A>返します`false`します。</span><span class="sxs-lookup"><span data-stu-id="2def9-571">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="2def9-572">この位置では、後続の呼び出しで列挙子の場合<xref:System.Collections.IEnumerator.MoveNext%2A>を返すことも`false`します。</span><span class="sxs-lookup"><span data-stu-id="2def9-572">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="2def9-573">最後の呼び出し場合<xref:System.Collections.IEnumerator.MoveNext%2A>返される`false`、<xref:System.Collections.IEnumerator.Current%2A>が定義されていません。</span><span class="sxs-lookup"><span data-stu-id="2def9-573">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="2def9-574"><xref:System.Collections.IEnumerator.Current%2A> をコレクションの最初の要素にもう一度設定するには、<xref:System.Collections.IEnumerator.Reset%2A> を呼び出してから <xref:System.Collections.IEnumerator.MoveNext%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="2def9-574">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="2def9-575">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="2def9-575">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="2def9-576">コレクションに対して変更 (要素の追加、変更、削除など) が行われると、列挙子は回復不可能な無効状態になり、その動作は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="2def9-576">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="2def9-577">列挙子には、コレクションへの排他アクセスがありません。したがって、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="2def9-577">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span>  <span data-ttu-id="2def9-578">列挙処理でスレッド セーフを確保するには、列挙処理が終わるまでコレクションをロックできます。</span><span class="sxs-lookup"><span data-stu-id="2def9-578">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="2def9-579">コレクションに対し複数のスレッドがアクセスして読み取りや書き込みを行うことができるようにするには、独自に同期化を実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2def9-579">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="2def9-580">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="2def9-580">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="2def9-581">シリアル化するための列挙子を逆シリアル化、<xref:System.Collections.Hashtable>順序になる要素が発生することができます、呼び出さずに列挙を続行することはできません、<xref:System.Collections.IEnumerator.Reset%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2def9-581">Because serializing and deserializing an enumerator for a <xref:System.Collections.Hashtable> can cause the elements to become reordered, it is not possible to continue enumeration without calling the <xref:System.Collections.IEnumerator.Reset%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2def9-582">次の例の使用を比較する<xref:System.Collections.Hashtable.GetEnumerator%2A>と`foreach`の内容を列挙するために、<xref:System.Collections.Hashtable>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-582">The following example compares the use of <xref:System.Collections.Hashtable.GetEnumerator%2A> and `foreach` to enumerate the contents of a <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic Hashtable Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable Example/CS/source2.cs#2)]
 [!code-vb[Classic Hashtable Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable Example/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetHash">
      <MemberSignature Language="C#" Value="protected virtual int GetHash (object key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 GetHash(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.GetHash(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetHash (key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int GetHash(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member GetHash : obj -&gt; int&#xA;override this.GetHash : obj -&gt; int" Usage="hashtable.GetHash key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="2def9-583">The <see cref="T:System.Object" /> for which a hash code is to be returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-583">The <see cref="T:System.Object" /> for which a hash code is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-584">Returns the hash code for the specified key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-584">Returns the hash code for the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2def9-585">The hash code for <paramref name="key" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-585">The hash code for <paramref name="key" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-586">特定のハッシュ テーブルが作成された場合<xref:System.Collections.IHashCodeProvider>実装では、このメソッドは、そのハッシュ コード プロバイダーを使用。 それ以外の場合、使用して、<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>の実装`key`します。</span><span class="sxs-lookup"><span data-stu-id="2def9-586">If the hash table was created with a specific <xref:System.Collections.IHashCodeProvider> implementation, this method uses that hash code provider; otherwise, it uses the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> implementation of `key`.</span></span>  
  
 <span data-ttu-id="2def9-587">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="2def9-587">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="2def9-588">
            <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-588">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Collections.IHashCodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="hashtable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="2def9-589">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-589">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="2def9-590">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-590">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-591">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-591">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-592">このメソッドは O (`n`) 操作、`n`は<xref:System.Collections.Hashtable.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-592">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2def9-593">
            <paramref name="info" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-593">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2def9-594">The collection was modified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-594">The collection was modified.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2def9-595">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-595">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2def9-596">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-596">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="hcp">
      <MemberSignature Language="C#" Value="protected System.Collections.IHashCodeProvider hcp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IHashCodeProvider hcp" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.hcp" />
      <MemberSignature Language="VB.NET" Value="Protected Property hcp As IHashCodeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IHashCodeProvider ^ hcp { System::Collections::IHashCodeProvider ^ get(); void set(System::Collections::IHashCodeProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.hcp : System.Collections.IHashCodeProvider with get, set" Usage="System.Collections.Hashtable.hcp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Please use EqualityComparer property.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IHashCodeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2def9-597">Gets or sets the object that can dispense hash codes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-597">Gets or sets the object that can dispense hash codes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2def9-598">ハッシュ コードを提供できるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-598">The object that can dispense hash codes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-599">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="2def9-599">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2def9-600">The property is set to a value, but the hash table was created using an <see cref="T:System.Collections.IEqualityComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-600">The property is set to a value, but the hash table was created using an <see cref="T:System.Collections.IEqualityComparer" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Collections.Hashtable.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2def9-601">Gets a value indicating whether the <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-601">Gets a value indicating whether the <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2def9-602">
            <see langword="true" /> が固定サイズの場合は <see cref="T:System.Collections.Hashtable" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-602">
              <see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2def9-603">既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-603">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-604">固定サイズのコレクションでは、コレクションの作成後に要素の追加または削除はできませんが、既存の要素の変更はできます。</span><span class="sxs-lookup"><span data-stu-id="2def9-604">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="2def9-605">固定サイズのコレクションの追加と要素の削除を防止するラッパーは、コレクションは、します。そのため、追加または削除、要素を含む、基になるコレクションに変更された場合、固定サイズ コレクションそれらの変更が反映されます。</span><span class="sxs-lookup"><span data-stu-id="2def9-605">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="2def9-606">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="2def9-606">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.Hashtable.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2def9-607">Gets a value indicating whether the <see cref="T:System.Collections.Hashtable" /> is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-607">Gets a value indicating whether the <see cref="T:System.Collections.Hashtable" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2def9-608">
            <see langword="true" /> が読み取り専用である場合は <see cref="T:System.Collections.Hashtable" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-608">
              <see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2def9-609">既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-609">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-610">読み取り専用のコレクションでは、コレクション作成後に要素の追加、削除、または変更はできません。</span><span class="sxs-lookup"><span data-stu-id="2def9-610">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="2def9-611">読み取り専用のコレクション、コレクションの変更を防止するラッパー コレクションそのため、基になるコレクションの変更が加えられた、読み取り専用コレクションはそれらの変更を反映します。</span><span class="sxs-lookup"><span data-stu-id="2def9-611">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="2def9-612">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="2def9-612">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Collections.Hashtable.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2def9-613">Gets a value indicating whether access to the <see cref="T:System.Collections.Hashtable" /> is synchronized (thread safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-613">Gets a value indicating whether access to the <see cref="T:System.Collections.Hashtable" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2def9-614">
            <see langword="true" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Collections.Hashtable" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-614">
              <see langword="true" /> if access to the <see cref="T:System.Collections.Hashtable" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2def9-615">既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-615">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-616">A <xref:System.Collections.Hashtable> 1 つのライターと複数リーダー同時にサポートできます。</span><span class="sxs-lookup"><span data-stu-id="2def9-616">A <xref:System.Collections.Hashtable> can support one writer and multiple readers concurrently.</span></span> <span data-ttu-id="2def9-617">複数のライターをサポートするために、によって返されるラッパー経由のすべての操作を行う必要がある、<xref:System.Collections.Hashtable.Synchronized%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2def9-617">To support multiple writers, all operations must be done through the wrapper returned by the <xref:System.Collections.Hashtable.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="2def9-618">コレクションの列挙は、スレッド セーフな方法では本質的にします。</span><span class="sxs-lookup"><span data-stu-id="2def9-618">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="2def9-619">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="2def9-619">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="2def9-620">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="2def9-620">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="2def9-621">次のコード例を使用してコレクションをロックする方法を示しています、<xref:System.Collections.Hashtable.SyncRoot%2A>列挙中に。</span><span class="sxs-lookup"><span data-stu-id="2def9-621">The following code example shows how to lock the collection using the <xref:System.Collections.Hashtable.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/remarks.cs#2)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/remarks.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="2def9-622">次の例は、同期する方法を示します、 <xref:System.Collections.Hashtable>、かどうかを<xref:System.Collections.Hashtable>が同期され、同期を使用して、<xref:System.Collections.Hashtable>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-622">The following example shows how to synchronize a <xref:System.Collections.Hashtable>, determine if a <xref:System.Collections.Hashtable> is synchronized, and use a synchronized <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
        <altmember cref="P:System.Collections.Hashtable.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : obj with get, set" Usage="System.Collections.Hashtable.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="2def9-623">The key whose value to get or set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-623">The key whose value to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-624">Gets or sets the value associated with the specified key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-624">Gets or sets the value associated with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2def9-625">指定されたキーに関連付けられている値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-625">The value associated with the specified key.</span>
          </span>
          <span data-ttu-id="2def9-626">指定したキーが見つからない場合を返します。 できるように試みて<see langword="null" />、設定しようとしています。 指定したキーを使用して新しい要素を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-626">If the specified key is not found, attempting to get it returns <see langword="null" />, and attempting to set it creates a new element using the specified key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-627">このプロパティでは、`myCollection[key]` という構文を使用して、コレクション内の特定の要素にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="2def9-627">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="2def9-628">使用することも、<xref:System.Collections.Hashtable.Item%2A>にキーの値を設定して、新しい要素を追加するプロパティが存在しません、 <xref:System.Collections.Hashtable>。 たとえば、`myCollection["myNonexistentKey"] = myValue`します。</span><span class="sxs-lookup"><span data-stu-id="2def9-628">You can also use the <xref:System.Collections.Hashtable.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Hashtable>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="2def9-629">ただしで指定したキーが既に存在する場合、<xref:System.Collections.Hashtable>で、設定、<xref:System.Collections.Hashtable.Item%2A>プロパティには、古い値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="2def9-629">However, if the specified key already exists in the <xref:System.Collections.Hashtable>, setting the <xref:System.Collections.Hashtable.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="2def9-630">これに対し、<xref:System.Collections.Hashtable.Add%2A>メソッドでは、既存の要素は変更しません。</span><span class="sxs-lookup"><span data-stu-id="2def9-630">In contrast, the <xref:System.Collections.Hashtable.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="2def9-631">キーには`null`が値を使用できます。</span><span class="sxs-lookup"><span data-stu-id="2def9-631">A key cannot be `null`, but a value can be.</span></span> <span data-ttu-id="2def9-632">区別するために`null`指定したキーが見つからないため、返されると`null`指定したキーの値が返される`null`を使用して、<xref:System.Collections.Hashtable.Contains%2A>メソッドまたは<xref:System.Collections.Hashtable.ContainsKey%2A>かを判断するメソッド一覧で、キーが存在します。</span><span class="sxs-lookup"><span data-stu-id="2def9-632">To distinguish between `null` that is returned because the specified key is not found and `null` that is returned because the value of the specified key is `null`, use the <xref:System.Collections.Hashtable.Contains%2A> method or the <xref:System.Collections.Hashtable.ContainsKey%2A> method to determine if the key exists in the list.</span></span>  
  
 <span data-ttu-id="2def9-633">このプロパティの値を取得する場合は、o (1) 操作です。プロパティの設定は、o (1) 操作ではもします。</span><span class="sxs-lookup"><span data-stu-id="2def9-633">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 <span data-ttu-id="2def9-634">C# 言語キーワードを使用して実装する代わりに、インデクサーの定義、<xref:System.Collections.IList.Item%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2def9-634">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.IList.Item%2A> property.</span></span> <span data-ttu-id="2def9-635">Visual Basic は、<xref:System.Collections.Hashtable.Item%2A> を既定のプロパティとして実装しており、同様のインデックス機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="2def9-635">Visual Basic implements <xref:System.Collections.Hashtable.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2def9-636">
            <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-636">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2def9-637">The property is set and the <see cref="T:System.Collections.Hashtable" /> is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-637">The property is set and the <see cref="T:System.Collections.Hashtable" /> is read-only.</span>
          </span>
          <span data-ttu-id="2def9-638">-or-  The property is set, <paramref name="key" /> does not exist in the collection, and the <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-638">-or-  The property is set, <paramref name="key" /> does not exist in the collection, and the <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="KeyEquals">
      <MemberSignature Language="C#" Value="protected virtual bool KeyEquals (object item, object key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool KeyEquals(object item, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.KeyEquals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function KeyEquals (item As Object, key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool KeyEquals(System::Object ^ item, System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member KeyEquals : obj * obj -&gt; bool&#xA;override this.KeyEquals : obj * obj -&gt; bool" Usage="hashtable.KeyEquals (item, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="2def9-639">The <see cref="T:System.Object" /> to compare with <c>key</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-639">The <see cref="T:System.Object" /> to compare with <c>key</c>.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="2def9-640">The key in the <see cref="T:System.Collections.Hashtable" /> to compare with <c>item</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-640">The key in the <see cref="T:System.Collections.Hashtable" /> to compare with <c>item</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-641">Compares a specific <see cref="T:System.Object" /> with a specific key in the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-641">Compares a specific <see cref="T:System.Object" /> with a specific key in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2def9-642">
            <see langword="true" /> if <paramref name="item" /> and <paramref name="key" /> are equal; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-642">
              <see langword="true" /> if <paramref name="item" /> and <paramref name="key" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-643">特定のハッシュ テーブルが作成された場合<xref:System.Collections.IComparer>実装では、このメソッドを比較子を使用; である、 <xref:System.Collections.IComparer.Compare%2A> (`item`、 `key`)。</span><span class="sxs-lookup"><span data-stu-id="2def9-643">If the hash table was created with a specific <xref:System.Collections.IComparer> implementation, this method uses that comparer; that is, <xref:System.Collections.IComparer.Compare%2A> (`item`, `key`).</span></span> <span data-ttu-id="2def9-644">それ以外の場合、使用して`item.Equals(key)`します。</span><span class="sxs-lookup"><span data-stu-id="2def9-644">Otherwise, it uses `item.Equals(key)`.</span></span>  
  
 <span data-ttu-id="2def9-645">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="2def9-645">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2def9-646">
            <paramref name="item" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-646">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2def9-647">-or-  <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-647">-or-  <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Collections.IComparer.Compare(System.Object,System.Object)" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Collections.Hashtable.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2def9-648">Gets an <see cref="T:System.Collections.ICollection" /> containing the keys in the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-648">Gets an <see cref="T:System.Collections.ICollection" /> containing the keys in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2def9-649">
            <see cref="T:System.Collections.ICollection" />内のキーを含む、<see cref="T:System.Collections.Hashtable" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-649">An <see cref="T:System.Collections.ICollection" /> containing the keys in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-650">内のキーの順序、<xref:System.Collections.ICollection>は指定しませんが、関連付けられている値と同じ順序、<xref:System.Collections.ICollection>によって返される、<xref:System.Collections.Hashtable.Values%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2def9-650">The order of the keys in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated values in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Hashtable.Values%2A> method.</span></span>  
  
 <span data-ttu-id="2def9-651">返された<xref:System.Collections.ICollection>静的コピーではありません。 代わりに、、<xref:System.Collections.ICollection>は元のキーを逆参照<xref:System.Collections.Hashtable>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-651">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the keys in the original <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="2def9-652">そのため、変更、<xref:System.Collections.Hashtable>に反映される続行、<xref:System.Collections.ICollection>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-652">Therefore, changes to the <xref:System.Collections.Hashtable> continue to be reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="2def9-653">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="2def9-653">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.Hashtable.Values" />
      </Docs>
    </Member>
    <Member MemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="public virtual void OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDeserialization (sender As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDeserialization(System::Object ^ sender);" />
      <MemberSignature Language="F#" Value="abstract member OnDeserialization : obj -&gt; unit&#xA;override this.OnDeserialization : obj -&gt; unit" Usage="hashtable.OnDeserialization sender" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="2def9-654">The source of the deserialization event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-654">The source of the deserialization event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-655">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-655">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-656">このメソッドは O (`n`) 操作、`n`は<xref:System.Collections.Hashtable.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-656">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 <span data-ttu-id="2def9-657">シリアル化するための列挙子を逆シリアル化、<xref:System.Collections.Hashtable>順序になる要素が発生することができます、呼び出さずに列挙を続行することはできません、<xref:System.Collections.IEnumerator.Reset%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2def9-657">Because serializing and deserializing an enumerator for a <xref:System.Collections.Hashtable> can cause the elements to become reordered, it is not possible to continue enumeration without calling the <xref:System.Collections.IEnumerator.Reset%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="2def9-658">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object associated with the current <see cref="T:System.Collections.Hashtable" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-658">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object associated with the current <see cref="T:System.Collections.Hashtable" /> is invalid.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (key As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="hashtable.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="2def9-659">The key of the element to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-659">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-660">Removes the element with the specified key from the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-660">Removes the element with the specified key from the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-661">場合、<xref:System.Collections.Hashtable>指定のキーを持つ要素が含まれていない、<xref:System.Collections.Hashtable>は変更されません。</span><span class="sxs-lookup"><span data-stu-id="2def9-661">If the <xref:System.Collections.Hashtable> does not contain an element with the specified key, the <xref:System.Collections.Hashtable> remains unchanged.</span></span> <span data-ttu-id="2def9-662">例外をスローすることはありません。</span><span class="sxs-lookup"><span data-stu-id="2def9-662">No exception is thrown.</span></span>  
  
 <span data-ttu-id="2def9-663">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="2def9-663">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2def9-664">次の例からの要素を削除する方法を示しています、<xref:System.Collections.Hashtable>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-664">The following example shows how to remove elements from the <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2def9-665">
            <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-665">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2def9-666">The <see cref="T:System.Collections.Hashtable" /> is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-666">The <see cref="T:System.Collections.Hashtable" /> is read-only.</span>
          </span>
          <span data-ttu-id="2def9-667">-or-  The <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-667">-or-  The <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.IDictionary.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.Hashtable Synchronized (System.Collections.Hashtable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Hashtable Synchronized(class System.Collections.Hashtable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (table As Hashtable) As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Hashtable ^ Synchronized(System::Collections::Hashtable ^ table);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Collections.Hashtable -&gt; System.Collections.Hashtable" Usage="System.Collections.Hashtable.Synchronized table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="2def9-668">The <see cref="T:System.Collections.Hashtable" /> to synchronize.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-668">The <see cref="T:System.Collections.Hashtable" /> to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2def9-669">Returns a synchronized (thread-safe) wrapper for the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-669">Returns a synchronized (thread-safe) wrapper for the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2def9-670">A synchronized (thread-safe) wrapper for the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-670">A synchronized (thread-safe) wrapper for the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-671"><xref:System.Collections.Hashtable.Synchronized%2A>メソッドはスレッド セーフの複数のリーダーとライター。</span><span class="sxs-lookup"><span data-stu-id="2def9-671">The <xref:System.Collections.Hashtable.Synchronized%2A> method is thread safe for multiple readers and writers.</span></span> <span data-ttu-id="2def9-672">さらに、同期ラッパーにより、一度に書き込む 1 つだけのライターがあることにします。</span><span class="sxs-lookup"><span data-stu-id="2def9-672">Furthermore, the synchronized wrapper ensures that there is only one writer writing at a time.</span></span>  
  
 <span data-ttu-id="2def9-673">コレクションの列挙は、本質的にスレッド セーフなプロシージャではありません。</span><span class="sxs-lookup"><span data-stu-id="2def9-673">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="2def9-674">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="2def9-674">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="2def9-675">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="2def9-675">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="2def9-676">次のコード例を使用してコレクションをロックする方法を示しています、<xref:System.Collections.Hashtable.SyncRoot%2A>列挙中に。</span><span class="sxs-lookup"><span data-stu-id="2def9-676">The following code example shows how to lock the collection using the <xref:System.Collections.Hashtable.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/remarks.cs#2)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/remarks.vb#2)]  
  
 <span data-ttu-id="2def9-677">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="2def9-677">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2def9-678">次の例は、同期する方法を示します、 <xref:System.Collections.Hashtable>、かどうかを<xref:System.Collections.Hashtable>が同期され、同期を使用して、<xref:System.Collections.Hashtable>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-678">The following example shows how to synchronize a <xref:System.Collections.Hashtable>, determine if a <xref:System.Collections.Hashtable> is synchronized, and use a synchronized <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2def9-679">
            <paramref name="table" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-679">
              <paramref name="table" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Hashtable.IsSynchronized" />
        <altmember cref="P:System.Collections.Hashtable.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Collections.Hashtable.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2def9-680">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-680">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2def9-681">
            <see cref="T:System.Collections.Hashtable" /> へのアクセスの同期に使用できるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-681">An object that can be used to synchronize access to the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-682">同期バージョンを作成する、<xref:System.Collections.Hashtable>を使用して、<xref:System.Collections.Hashtable.Synchronized%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2def9-682">To create a synchronized version of the <xref:System.Collections.Hashtable>, use the <xref:System.Collections.Hashtable.Synchronized%2A> method.</span></span> <span data-ttu-id="2def9-683">ただし、派生クラスは、独自の同期バージョンを提供できます、<xref:System.Collections.Hashtable>を使用して、<xref:System.Collections.Hashtable.SyncRoot%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2def9-683">However, derived classes can provide their own synchronized version of the <xref:System.Collections.Hashtable> using the <xref:System.Collections.Hashtable.SyncRoot%2A> property.</span></span> <span data-ttu-id="2def9-684">同期されたコードで操作を実行する必要があります、<xref:System.Collections.Hashtable.SyncRoot%2A>の<xref:System.Collections.Hashtable>、上で直接、<xref:System.Collections.Hashtable>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-684">The synchronizing code must perform operations on the <xref:System.Collections.Hashtable.SyncRoot%2A> of the <xref:System.Collections.Hashtable>, not directly on the <xref:System.Collections.Hashtable> .</span></span> <span data-ttu-id="2def9-685">これにより、他のオブジェクトから派生したコレクションを適切に操作できるようになります。</span><span class="sxs-lookup"><span data-stu-id="2def9-685">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="2def9-686">具体的には、同時に変更する可能性があるその他のスレッドと適切な同期を維持、<xref:System.Collections.Hashtable>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2def9-686">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Hashtable> object.</span></span>  
  
 <span data-ttu-id="2def9-687">コレクションの列挙は、スレッド セーフな方法では本質的にします。</span><span class="sxs-lookup"><span data-stu-id="2def9-687">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="2def9-688">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="2def9-688">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="2def9-689">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="2def9-689">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="2def9-690">次のコード例を使用してコレクションをロックする方法を示しています、<xref:System.Collections.Hashtable.SyncRoot%2A>列挙中に。</span><span class="sxs-lookup"><span data-stu-id="2def9-690">The following code example shows how to lock the collection using the <xref:System.Collections.Hashtable.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/remarks.cs#2)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/remarks.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Hashtable.IsSynchronized" />
        <altmember cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2def9-691">Returns an enumerator that iterates through a collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-691">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2def9-692">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-692">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-693">[Visual Basic、c#]</span><span class="sxs-lookup"><span data-stu-id="2def9-693">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="2def9-694">C# 言語の `foreach` ステートメント (Visual Basic の場合は `for each`) を使用することで列挙子の複雑さを回避できます。</span><span class="sxs-lookup"><span data-stu-id="2def9-694">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="2def9-695">したがって、列挙子を直接操作するのではなく、`foreach` を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="2def9-695">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="2def9-696">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="2def9-696">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="2def9-697">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="2def9-697">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="2def9-698"><xref:System.Collections.IEnumerator.Reset%2A> を実行した場合も、列挙子はこの位置に戻されます。</span><span class="sxs-lookup"><span data-stu-id="2def9-698"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="2def9-699">この位置で、呼び出す<xref:System.Collections.IEnumerator.Current%2A>例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="2def9-699">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="2def9-700">そのため、<xref:System.Collections.IEnumerator.MoveNext%2A> の値を読み取る前に、<xref:System.Collections.IEnumerator.Current%2A> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="2def9-700">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="2def9-701"><xref:System.Collections.IEnumerator.Current%2A> は、<xref:System.Collections.IEnumerator.MoveNext%2A> または <xref:System.Collections.IEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="2def9-701"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="2def9-702"><xref:System.Collections.IEnumerator.MoveNext%2A> は、<xref:System.Collections.IEnumerator.Current%2A> を次の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="2def9-702"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="2def9-703">場合<xref:System.Collections.IEnumerator.MoveNext%2A>列挙子、コレクションの末尾がコレクション内の最後の要素の後に配置されているパスと<xref:System.Collections.IEnumerator.MoveNext%2A>返します`false`します。</span><span class="sxs-lookup"><span data-stu-id="2def9-703">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="2def9-704">この位置では、後続の呼び出しで列挙子の場合<xref:System.Collections.IEnumerator.MoveNext%2A>を返すことも`false`します。</span><span class="sxs-lookup"><span data-stu-id="2def9-704">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="2def9-705">最後の呼び出し場合<xref:System.Collections.IEnumerator.MoveNext%2A>返される`false`を呼び出すと、<xref:System.Collections.IEnumerator.Current%2A>例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="2def9-705">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="2def9-706"><xref:System.Collections.IEnumerator.Current%2A> をコレクションの最初の要素にもう一度設定するには、<xref:System.Collections.IEnumerator.Reset%2A> を呼び出してから <xref:System.Collections.IEnumerator.MoveNext%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="2def9-706">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="2def9-707">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="2def9-707">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="2def9-708">変更、追加するなど、コレクションに変更を加えるまたは要素を削除するには、列挙子を無効にでき、次の呼び出し場合、<xref:System.Collections.IEnumerator.MoveNext%2A>または<xref:System.Collections.IEnumerator.Reset%2A>スロー、<xref:System.InvalidOperationException>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-708">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator can be invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="2def9-709">間に、コレクションが変更された場合<xref:System.Collections.IEnumerator.MoveNext%2A>と<xref:System.Collections.IEnumerator.Current%2A>、<xref:System.Collections.IEnumerator.Current%2A>列挙子が既に無効になっている場合でもに設定されている要素を返します。</span><span class="sxs-lookup"><span data-stu-id="2def9-709">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="2def9-710">列挙子には、コレクションへの排他アクセスがありません。したがって、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="2def9-710">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="2def9-711">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="2def9-711">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="2def9-712">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="2def9-712">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="2def9-713">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="2def9-713">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.Values" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.ICollection" Usage="System.Collections.Hashtable.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2def9-714">Gets an <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.Hashtable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-714">Gets an <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2def9-715">
            <see cref="T:System.Collections.ICollection" /> 内の値を格納している <see cref="T:System.Collections.Hashtable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2def9-715">An <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2def9-716">内の値の順序、<xref:System.Collections.ICollection>は指定しませんが、関連付けられているキーと同じ順序、<xref:System.Collections.ICollection>によって返される、<xref:System.Collections.Hashtable.Keys%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2def9-716">The order of the values in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated keys in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Hashtable.Keys%2A> method.</span></span>  
  
 <span data-ttu-id="2def9-717">返された<xref:System.Collections.ICollection>静的コピーではありません。 代わりに、、<xref:System.Collections.ICollection>は元の値を逆参照<xref:System.Collections.Hashtable>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-717">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the values in the original <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="2def9-718">そのため、変更、<xref:System.Collections.Hashtable>に反映される続行、<xref:System.Collections.ICollection>します。</span><span class="sxs-lookup"><span data-stu-id="2def9-718">Therefore, changes to the <xref:System.Collections.Hashtable> continue to be reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="2def9-719">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="2def9-719">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.Hashtable.Keys" />
      </Docs>
    </Member>
  </Members>
</Type>