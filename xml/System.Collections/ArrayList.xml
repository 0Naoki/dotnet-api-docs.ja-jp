<Type Name="ArrayList" FullName="System.Collections.ArrayList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9a105732aa94698f5ea781b6eed29feca20656b5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ArrayList : ICloneable, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ArrayList extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ArrayList" />
  <TypeSignature Language="VB.NET" Value="Public Class ArrayList&#xA;Implements ICloneable, IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArrayList : ICloneable, System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.ArrayList/ArrayListDebugView))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="01a8c-101">必要に応じてサイズが動的に拡大される配列を使用して <see cref="T:System.Collections.IList" /> インターフェイスを実装します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="01a8c-101">Implements the <see cref="T:System.Collections.IList" /> interface using an array whose size is dynamically increased as required.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-102"><xref:System.Collections.ArrayList>クラスが異種オブジェクトのコレクションを保持するために設計されています。</span><span class="sxs-lookup"><span data-stu-id="01a8c-102">The <xref:System.Collections.ArrayList> class is designed to hold heterogeneous collections of objects.</span></span> <span data-ttu-id="01a8c-103">ただし、常に提供しません、最適なパフォーマンスです。</span><span class="sxs-lookup"><span data-stu-id="01a8c-103">However, it does not always offer the best performance.</span></span> <span data-ttu-id="01a8c-104">代わりに、次お勧めします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-104">Instead, we recommend the following:</span></span>  
  
-   <span data-ttu-id="01a8c-105">異機種混在環境のオブジェクトのコレクションを表示するを使用して、 `List<Object>` (C# の場合) または`List(Of Object)`(Visual Basic で) を入力します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-105">For a heterogeneous collection of objects, use the `List<Object>` (in C#) or `List(Of Object)` (in Visual Basic) type.</span></span>  
  
-   <span data-ttu-id="01a8c-106">同種のオブジェクトのコレクションを表示するを使用して、<xref:System.Collections.Generic.List%601>クラスです。</span><span class="sxs-lookup"><span data-stu-id="01a8c-106">For a homogeneous collection of objects, use the <xref:System.Collections.Generic.List%601> class.</span></span>  
  
 <span data-ttu-id="01a8c-107">「パフォーマンスに関する考慮事項」セクションを参照して、<xref:System.Collections.Generic.List%601>これらクラスの相対的なパフォーマンス ディスカッションのリファレンス トピックです。</span><span class="sxs-lookup"><span data-stu-id="01a8c-107">See the "Performance Considerations" section in the <xref:System.Collections.Generic.List%601> reference topic for a discussion of the relative performance of these classes.</span></span>  
  
 <span data-ttu-id="01a8c-108"><xref:System.Collections.ArrayList>並べ替えは保証されません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-108">The <xref:System.Collections.ArrayList> is not guaranteed to be sorted.</span></span>  <span data-ttu-id="01a8c-109">並べ替える必要があります、<xref:System.Collections.ArrayList>を呼び出してその<xref:System.Collections.ArrayList.Sort%2A>操作を実行する前にメソッド (など<xref:System.Collections.ArrayList.BinarySearch%2A>) を必要とする、<xref:System.Collections.ArrayList>並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-109">You must sort the <xref:System.Collections.ArrayList> by calling its <xref:System.Collections.ArrayList.Sort%2A> method prior to performing operations (such as <xref:System.Collections.ArrayList.BinarySearch%2A>) that require the <xref:System.Collections.ArrayList> to be sorted.</span></span> <span data-ttu-id="01a8c-110">使用することができますが、新しい要素が追加されると自動的に並べ替えられているコレクションを維持するために、<xref:System.Collections.Generic.SortedSet%601>クラスです。</span><span class="sxs-lookup"><span data-stu-id="01a8c-110">To maintain a collection that is automatically sorted as new elements are added, you can use the <xref:System.Collections.Generic.SortedSet%601> class.</span></span>  
  
 <span data-ttu-id="01a8c-111">容量、<xref:System.Collections.ArrayList>要素の数が、<xref:System.Collections.ArrayList>を保持できます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-111">The capacity of an <xref:System.Collections.ArrayList> is the number of elements the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="01a8c-112">要素が追加されるにつれて、<xref:System.Collections.ArrayList>容量を増やすは自動的に再割り当て、必要に応じて。</span><span class="sxs-lookup"><span data-stu-id="01a8c-112">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required through reallocation.</span></span> <span data-ttu-id="01a8c-113">呼び出すことによって、容量を削減できる<xref:System.Collections.ArrayList.TrimToSize%2A>かを設定して、<xref:System.Collections.ArrayList.Capacity%2A>プロパティに明示的にします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-113">The capacity can be decreased by calling <xref:System.Collections.ArrayList.TrimToSize%2A> or by setting the <xref:System.Collections.ArrayList.Capacity%2A> property explicitly.</span></span>  
  
 <span data-ttu-id="01a8c-114">非常に大きな<xref:System.Collections.ArrayList>オブジェクト、設定して、64 ビット システム上の 20億要素に最大の容量を増やすことができます、`enabled`する構成要素の属性`true`実行時環境でします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-114">For very large <xref:System.Collections.ArrayList> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the  configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="01a8c-115">このコレクション内の要素は、整数インデックスを使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-115">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="01a8c-116">このコレクションのインデックスは 0 から始まります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-116">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="01a8c-117"><xref:System.Collections.ArrayList>コレクションを受け入れる`null`として有効な値です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-117">The <xref:System.Collections.ArrayList> collection accepts `null` as a valid value.</span></span> <span data-ttu-id="01a8c-118">重複する要素こともできます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-118">It also allows duplicate elements.</span></span>  
  
 <span data-ttu-id="01a8c-119">内の要素として多次元配列を使用して、<xref:System.Collections.ArrayList>コレクションはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-119">Using multidimensional arrays as elements in an <xref:System.Collections.ArrayList> collection is not supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-120">次のコード例を作成および初期化する方法を示しています、<xref:System.Collections.ArrayList>およびその値を表示する方法です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-120">The following code example shows how to create and initialize an <xref:System.Collections.ArrayList> and how to display its values.</span></span>  
  
 [!code-cpp[Classic ArrayList Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="01a8c-121">パブリック静的 (<see langword="Shared" /> Visual Basic で) この型のメンバーは、スレッド セーフであります。</span>
      <span class="sxs-lookup">
        <span data-stu-id="01a8c-121">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="01a8c-122">インスタンス メンバーの場合は、スレッド セーフであるとは限りません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="01a8c-122">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="01a8c-123">
        <see cref="T:System.Collections.ArrayList" />コレクションが変更されない限り、複数のリーダーを同時にサポートできます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="01a8c-123">An <see cref="T:System.Collections.ArrayList" /> can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="01a8c-124">スレッド セーフを確保する、 <see cref="T:System.Collections.ArrayList" />、によって返されるラッパーを介してすべての操作を行う必要があります、<see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />メソッドです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="01a8c-124">To guarantee the thread safety of the <see cref="T:System.Collections.ArrayList" />, all operations must be done through the wrapper returned by the <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" /> method.</span>
      </span>
      <span data-ttu-id="01a8c-125">コレクションの列挙は、本質的にスレッド セーフなプロシージャではありません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="01a8c-125">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="01a8c-126">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="01a8c-126">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="01a8c-127">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="01a8c-127">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Collections.Generic.List`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-128">
            <see cref="T:System.Collections.ArrayList" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-128">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-129">空で、既定の初期量を備えた、<see cref="T:System.Collections.ArrayList" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-129">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that is empty and has the default initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-130">容量、<xref:System.Collections.ArrayList>は要素の数を<xref:System.Collections.ArrayList>を保持できます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-130">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="01a8c-131">要素が追加されるにつれて、<xref:System.Collections.ArrayList>容量を増やすは自動的に内部の配列を再割り当てによる要求どおりです。</span><span class="sxs-lookup"><span data-stu-id="01a8c-131">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="01a8c-132">コレクションのサイズを推定できる場合に要素を追加するときにサイズ変更操作の数を実行する必要があるの初期量を指定する、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-132">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="01a8c-133">このコンス トラクターは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-133">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList (System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList(System::Collections::ICollection ^ c);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="01a8c-134">新しいリストに要素が追加された <see cref="T:System.Collections.ICollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-134">The <see cref="T:System.Collections.ICollection" /> whose elements are copied to the new list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-135">指定したコレクションからコピーした要素を格納し、コピーされる要素の数と同じ初期量を備えた、<see cref="T:System.Collections.ArrayList" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-135">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that contains elements copied from the specified collection and that has the same initial capacity as the number of elements copied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-136">容量、<xref:System.Collections.ArrayList>は要素の数を<xref:System.Collections.ArrayList>を保持できます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-136">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="01a8c-137">要素が追加されるにつれて、<xref:System.Collections.ArrayList>容量を増やすは自動的に内部の配列を再割り当てによる要求どおりです。</span><span class="sxs-lookup"><span data-stu-id="01a8c-137">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="01a8c-138">コレクションのサイズを推定できる場合に要素を追加するときにサイズ変更操作の数を実行する必要があるの初期量を指定する、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-138">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="01a8c-139">要素の上にコピー、<xref:System.Collections.ArrayList>によって読み取られる同じ順序で、<xref:System.Collections.IEnumerator>の<xref:System.Collections.ICollection>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-139">The elements are copied onto the <xref:System.Collections.ArrayList> in the same order they are read by the <xref:System.Collections.IEnumerator> of the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="01a8c-140">このコンス トラクターは、O (`n`) 操作では、ここで`n`内の要素の数は、`c`です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-140">This constructor is an O(`n`) operation, where `n` is the number of elements in `c`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01a8c-141">
            <paramref name="c" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-141">
              <paramref name="c" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList(int capacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="01a8c-142">新しいリストに格納できる要素の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-142">The number of elements that the new list can initially store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-143">空で、指定した初期量を備えた、<see cref="T:System.Collections.ArrayList" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-143">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that is empty and has the specified initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-144">容量、<xref:System.Collections.ArrayList>は要素の数を<xref:System.Collections.ArrayList>を保持できます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-144">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="01a8c-145">要素が追加されるにつれて、<xref:System.Collections.ArrayList>容量を増やすは自動的に内部の配列を再割り当てによる要求どおりです。</span><span class="sxs-lookup"><span data-stu-id="01a8c-145">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="01a8c-146">コレクションのサイズを推定できる場合に要素を追加するときにサイズ変更操作の数を実行する必要があるの初期量を指定する、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-146">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="01a8c-147">このコンス トラクターは、O (`n`) 操作では、ここで`n`は`capacity`します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-147">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="01a8c-148">
            <paramref name="capacity" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-148">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Adapter">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Adapter (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Adapter(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Adapter(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Adapter (list As IList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Adapter(System::Collections::IList ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="01a8c-149">ラップする <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-149">The <see cref="T:System.Collections.IList" /> to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-150">特定の <see cref="T:System.Collections.ArrayList" /> 用の <see cref="T:System.Collections.IList" /> ラッパーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-150">Creates an <see cref="T:System.Collections.ArrayList" /> wrapper for a specific <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a8c-151">
            <see cref="T:System.Collections.ArrayList" /> をラップする <see cref="T:System.Collections.IList" /> ラッパー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-151">The <see cref="T:System.Collections.ArrayList" /> wrapper around the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-152"><xref:System.Collections.ArrayList.Adapter%2A> 内容をコピーしません<xref:System.Collections.IList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-152"><xref:System.Collections.ArrayList.Adapter%2A> does not copy the contents of <xref:System.Collections.IList>.</span></span> <span data-ttu-id="01a8c-153">代わりに、それを作成するだけ、<xref:System.Collections.ArrayList>ラッパー<xref:System.Collections.IList>です。 そのため、変更、<xref:System.Collections.IList>にも影響、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-153">Instead, it only creates an <xref:System.Collections.ArrayList> wrapper around <xref:System.Collections.IList>; therefore, changes to the <xref:System.Collections.IList> also affect the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="01a8c-154"><xref:System.Collections.ArrayList>クラスはジェネリック<xref:System.Collections.ArrayList.Reverse%2A>、<xref:System.Collections.ArrayList.BinarySearch%2A>と<xref:System.Collections.ArrayList.Sort%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="01a8c-154">The <xref:System.Collections.ArrayList> class provides generic <xref:System.Collections.ArrayList.Reverse%2A>, <xref:System.Collections.ArrayList.BinarySearch%2A> and <xref:System.Collections.ArrayList.Sort%2A> methods.</span></span> <span data-ttu-id="01a8c-155">このラッパーでこれらのメソッドを使用するための手段を指定できます<xref:System.Collections.IList>。 ただし、上に直接適用される演算よりも効率が低下する可能性がありますラッパーを介してこれらの汎用的な操作を実行する、<xref:System.Collections.IList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-155">This wrapper can be a means to use those methods on <xref:System.Collections.IList>; however, performing these generic operations through the wrapper might be less efficient than operations applied directly on the <xref:System.Collections.IList>.</span></span>  
  
 <span data-ttu-id="01a8c-156">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-156">This method is an O(1) operation.</span></span>  
  
## <a name="version-compatibility"></a><span data-ttu-id="01a8c-157">バージョンの互換性</span><span class="sxs-lookup"><span data-stu-id="01a8c-157">Version Compatibility</span></span>  
 <span data-ttu-id="01a8c-158">.NET framework version 1.0 および 1.1 では、呼び出し、<xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29>メソッド オーバー ロード、<xref:System.Collections.ArrayList>ラッパーにカウントとしてではなく、上限として、2 番目の引数を処理する列挙子が返されます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-158">In the .NET Framework version 1.0 and 1.1, calling the <xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29> method overload on the <xref:System.Collections.ArrayList> wrapper returned an enumerator that treated the second argument as an upper bound rather than as a count.</span></span> <span data-ttu-id="01a8c-159">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] 2 番目の引数は正しくカウントとして扱われます。 します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-159">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] the second argument is correctly treated as a count.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01a8c-160">
            <paramref name="list" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-160">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)" />
        <altmember cref="M:System.Collections.ArrayList.Reverse" />
        <altmember cref="M:System.Collections.ArrayList.Sort" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="01a8c-161">
            <see cref="T:System.Object" /> の末尾に追加する <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-161">The <see cref="T:System.Object" /> to be added to the end of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="01a8c-162">値として <see langword="null" /> を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-162">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-163">
            <see cref="T:System.Collections.ArrayList" /> の末尾にオブジェクトを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-163">Adds an object to the end of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a8c-164">
            <paramref name="value" /> が追加された位置の <see cref="T:System.Collections.ArrayList" /> インデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-164">The <see cref="T:System.Collections.ArrayList" /> index at which the <paramref name="value" /> has been added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-165"><xref:System.Collections.ArrayList> 受け付ける`null`有効な値としてでき、重複する要素。</span><span class="sxs-lookup"><span data-stu-id="01a8c-165"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="01a8c-166">場合<xref:System.Collections.ArrayList.Count%2A>既に同じ<xref:System.Collections.ArrayList.Capacity%2A>、容量、<xref:System.Collections.ArrayList>内部の配列を自動的に再割り当てが増加し、新しい要素が追加される前に、既存の要素が新しい配列にコピーされます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-166">If <xref:System.Collections.ArrayList.Count%2A> already equals <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="01a8c-167">場合<xref:System.Collections.ArrayList.Count%2A>はより小さい<xref:System.Collections.ArrayList.Capacity%2A>、このメソッドは、o (1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-167">If <xref:System.Collections.ArrayList.Count%2A> is less than <xref:System.Collections.ArrayList.Capacity%2A>, this method is an O(1) operation.</span></span> <span data-ttu-id="01a8c-168">容量は、新しい要素を格納するためにする必要があります、このメソッドが O (`n`) 操作、場所`n`は<xref:System.Collections.ArrayList.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-168">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-169">次のコード例は、要素を追加する方法を示しています、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-169">The following code example shows how to add elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="01a8c-170">
            <see cref="T:System.Collections.ArrayList" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-170">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="01a8c-171">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-171">-or-</span>
          </span>
          <span data-ttu-id="01a8c-172">
            <see cref="T:System.Collections.ArrayList" /> は固定サイズです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-172">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(System::Collections::ICollection ^ c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="01a8c-173">
            <see cref="T:System.Collections.ICollection" /> の末尾に要素が追加される <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-173">The <see cref="T:System.Collections.ICollection" /> whose elements should be added to the end of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="01a8c-174">コレクション自体を <see langword="null" /> にすることはできませんが、コレクションに格納する要素は <see langword="null" /> であってもかまいません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-174">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-175">
            <see cref="T:System.Collections.ICollection" /> の要素を <see cref="T:System.Collections.ArrayList" /> の末尾に追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-175">Adds the elements of an <see cref="T:System.Collections.ICollection" /> to the end of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-176"><xref:System.Collections.ArrayList> 受け付ける`null`有効な値としてでき、重複する要素。</span><span class="sxs-lookup"><span data-stu-id="01a8c-176"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="01a8c-177">内の要素の順序、<xref:System.Collections.ICollection>内でも維持される、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-177">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="01a8c-178">場合、新しい<xref:System.Collections.ArrayList.Count%2A>(現在<xref:System.Collections.ArrayList.Count%2A>さらに、コレクションのサイズ) はより大きくなる<xref:System.Collections.ArrayList.Capacity%2A>の容量、<xref:System.Collections.ArrayList>新しい要素では、それに合わせて内部の配列を自動的に再割り当てが増加し、新しい要素が追加される前に、既存の要素が新しい配列にコピーされます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-178">If the new <xref:System.Collections.ArrayList.Count%2A> (the current <xref:System.Collections.ArrayList.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="01a8c-179">場合、<xref:System.Collections.ArrayList>を増やすことがなく、新しい要素に対応できる、 <xref:System.Collections.ArrayList.Capacity%2A>、このメソッドは、O (`n`) 操作、場所`n`を追加する要素の数です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-179">If the <xref:System.Collections.ArrayList> can accommodate the new elements without increasing the <xref:System.Collections.ArrayList.Capacity%2A>, this method is an O(`n`) operation, where `n` is the number of elements to be added.</span></span> <span data-ttu-id="01a8c-180">容量は、新しい要素を格納するためにする必要があります、このメソッドが O (`n` + `m`) 操作、場所`n`を追加する要素の数と`m`は<xref:System.Collections.ArrayList.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-180">If the capacity needs to be increased to accommodate the new elements, this method becomes an O(`n` + `m`) operation, where `n` is the number of elements to be added and `m` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-181">次のコード例は、要素を追加する方法を示しています、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-181">The following code example shows how to add elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01a8c-182">
            <paramref name="c" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-182">
              <paramref name="c" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="01a8c-183">
            <see cref="T:System.Collections.ArrayList" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-183">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="01a8c-184">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-184">-or-</span>
          </span>
          <span data-ttu-id="01a8c-185">
            <see cref="T:System.Collections.ArrayList" /> は固定サイズです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-185">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BinarySearch">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-186">バイナリ サーチ アルゴリズムを使用して、並べ替えられた <see cref="T:System.Collections.ArrayList" /> 内の特定の要素またはその一部を検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-186">Uses a binary search algorithm to locate a specific element in the sorted <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="01a8c-187">検索する <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-187">The <see cref="T:System.Object" /> to locate.</span>
          </span>
          <span data-ttu-id="01a8c-188">値として <see langword="null" /> を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-188">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-189">既定の比較子を使用して、並べ替えられた要素の <see cref="T:System.Collections.ArrayList" /> 全体を検索し、その要素の 0 から始まるインデックスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-189">Searches the entire sorted <see cref="T:System.Collections.ArrayList" /> for an element using the default comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a8c-190">
            <paramref name="value" /> が見つかった場合は、並べ替えられた <see cref="T:System.Collections.ArrayList" /> 内の <paramref name="value" /> の 0 から始まるインデックス。見つからなかった場合は、負の値。これは、<paramref name="value" /> の次に大きい要素のインデックスのビットごとの補数です。ただし、大きい要素が存在しない場合は、<see cref="P:System.Collections.ArrayList.Count" /> のビットごとの補数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-190">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-191">`value`パラメーターとの各要素、<xref:System.Collections.ArrayList>実装する必要があります、<xref:System.IComparable>比較に使用されるインターフェイス。</span><span class="sxs-lookup"><span data-stu-id="01a8c-191">The `value` parameter and each element of the <xref:System.Collections.ArrayList> must implement the <xref:System.IComparable> interface, which is used for comparisons.</span></span> <span data-ttu-id="01a8c-192">要素、<xref:System.Collections.ArrayList>既にによって定義されている並べ替え順序に従って値を昇順に並べ替える必要があります、<xref:System.IComparable>実装です。 それ以外の場合、結果正しく可能性がありますされません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-192">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="01a8c-193">比較する`null`任意の型は許可し、使用する場合は、例外を生成しません、<xref:System.IComparable>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-193">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="01a8c-194">ソート時`null`未満であるその他のオブジェクトと見なされます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-194">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="01a8c-195">場合、<xref:System.Collections.ArrayList>だけが含まれて、同じ値を持つ複数の要素には返します、出現回数、必ずしも 1 つ目のいずれかを返す、出現してのいずれかの可能性があります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-195">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="01a8c-196">場合、 <xref:System.Collections.ArrayList> 、指定した値を含まない、メソッドは、負の整数を返します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-196">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="01a8c-197">この負の整数値を検索する値を超える最初の要素のインデックスを取得するには、ビットごとの補数演算 (~) を適用できます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-197">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="01a8c-198">値を挿入するときに、 <xref:System.Collections.ArrayList>、このインデックスは、並べ替え順序を維持するために、挿入ポイントとして使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-198">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="01a8c-199">このメソッドは、O (ログ`n`) 操作では、ここで`n`は<xref:System.Collections.ArrayList.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-199">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-200">次のコード例は、使用する方法を示しています。<xref:System.Collections.ArrayList.BinarySearch%2A>の特定のオブジェクトを検索する、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-200">The following code example shows how to use <xref:System.Collections.ArrayList.BinarySearch%2A> to locate a specific object in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01a8c-201">
            <paramref name="value" /> と、<see cref="T:System.Collections.ArrayList" /> の要素が、いずれも <see cref="T:System.IComparable" /> インターフェイスを実装していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-201">Neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="01a8c-202">
            <paramref name="value" /> が、<see cref="T:System.Collections.ArrayList" /> の要素と同じ型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-202">
              <paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (value As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="01a8c-203">検索する <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-203">The <see cref="T:System.Object" /> to locate.</span>
          </span>
          <span data-ttu-id="01a8c-204">値として <see langword="null" /> を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-204">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="01a8c-205">要素を比較する場合に使用する <see cref="T:System.Collections.IComparer" /> の実装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-205">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="01a8c-206">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-206">-or-</span>
          </span>
          <span data-ttu-id="01a8c-207">各要素の <see cref="T:System.IComparable" /> 実装である既定の比較子を使用する場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-207">
              <see langword="null" /> to use the default comparer that is the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-208">指定した比較子を使用して、並べ替えられた要素の <see cref="T:System.Collections.ArrayList" /> 全体を検索し、その要素の 0 から始まるインデックスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-208">Searches the entire sorted <see cref="T:System.Collections.ArrayList" /> for an element using the specified comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a8c-209">
            <paramref name="value" /> が見つかった場合は、並べ替えられた <see cref="T:System.Collections.ArrayList" /> 内の <paramref name="value" /> の 0 から始まるインデックス。見つからなかった場合は、負の値。これは、<paramref name="value" /> の次に大きい要素のインデックスのビットごとの補数です。ただし、大きい要素が存在しない場合は、<see cref="P:System.Collections.ArrayList.Count" /> のビットごとの補数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-209">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-210">比較演算子は、要素を比較する方法をカスタマイズします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-210">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="01a8c-211">たとえば、使用することができます、<xref:System.Collections.CaseInsensitiveComparer>大文字と小文字の文字列の検索を実行する比較演算子とインスタンス。</span><span class="sxs-lookup"><span data-stu-id="01a8c-211">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="01a8c-212">場合`comparer`が提供されるの要素、<xref:System.Collections.ArrayList>指定して、指定した値と比較<xref:System.Collections.IComparer>実装します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-212">If `comparer` is provided, the elements of the <xref:System.Collections.ArrayList> are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="01a8c-213">要素、<xref:System.Collections.ArrayList>既にによって定義されている並べ替え順序に従って値を昇順に並べ替える必要があります`comparer`以外の場合、結果が正しくない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-213">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="01a8c-214">場合`comparer`は`null`、比較が行われますを使用して、<xref:System.IComparable>または指定した値によって、要素自体によって提供される実装します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-214">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="01a8c-215">要素、<xref:System.Collections.ArrayList>既にによって定義されている並べ替え順序に従って値を昇順に並べ替える必要があります、<xref:System.IComparable>実装です。 それ以外の場合、結果正しく可能性がありますされません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-215">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="01a8c-216">比較する`null`任意の型は許可し、使用する場合は、例外を生成しません、<xref:System.IComparable>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-216">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="01a8c-217">ソート時`null`未満であるその他のオブジェクトと見なされます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-217">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="01a8c-218">場合、<xref:System.Collections.ArrayList>だけが含まれて、同じ値を持つ複数の要素には返します、出現回数、必ずしも 1 つ目のいずれかを返す、出現してのいずれかの可能性があります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-218">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="01a8c-219">場合、 <xref:System.Collections.ArrayList> 、指定した値を含まない、メソッドは、負の整数を返します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-219">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="01a8c-220">この負の整数値を検索する値を超える最初の要素のインデックスを取得するには、ビットごとの補数演算 (~) を適用できます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-220">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="01a8c-221">値を挿入するときに、 <xref:System.Collections.ArrayList>、このインデックスは、並べ替え順序を維持するために、挿入ポイントとして使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-221">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="01a8c-222">このメソッドは、O (ログ`n`) 操作では、ここで`n`は<xref:System.Collections.ArrayList.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-222">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-223">次の例を作成、<xref:System.Collections.ArrayList>色付き動物のです。</span><span class="sxs-lookup"><span data-stu-id="01a8c-223">The following example creates an <xref:System.Collections.ArrayList> of colored animals.</span></span> <span data-ttu-id="01a8c-224">指定された<xref:System.Collections.IComparer>バイナリ サーチの文字列比較を実行します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-224">The provided <xref:System.Collections.IComparer> performs the string comparison for the binary search.</span></span> <span data-ttu-id="01a8c-225">反復的な検索およびバイナリの検索の両方の結果が表示されます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-225">The results of both an iterative search and a binary search are displayed.</span></span>  
  
 [!code-cpp[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01a8c-226">
            <paramref name="comparer" /> が <see langword="null" /> です。また、<paramref name="value" /> と、<see cref="T:System.Collections.ArrayList" /> の要素が、いずれも <see cref="T:System.IComparable" /> インターフェイスを実装していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-226">
              <paramref name="comparer" /> is <see langword="null" /> and neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="01a8c-227">
            <paramref name="comparer" /> が <see langword="null" /> で、<paramref name="value" /> が<see cref="T:System.Collections.ArrayList" /> の要素と異なる型です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-227">
              <paramref name="comparer" /> is <see langword="null" /> and <paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (int index, int count, object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(int32 index, int32 count, object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (index As Integer, count As Integer, value As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(int index, int count, System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="01a8c-228">検索範囲の開始位置を示す 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-228">The zero-based starting index of the range to search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="01a8c-229">検索する範囲の長さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-229">The length of the range to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="01a8c-230">検索する <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-230">The <see cref="T:System.Object" /> to locate.</span>
          </span>
          <span data-ttu-id="01a8c-231">値として <see langword="null" /> を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-231">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="01a8c-232">要素を比較する場合に使用する <see cref="T:System.Collections.IComparer" /> の実装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-232">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="01a8c-233">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-233">-or-</span>
          </span>
          <span data-ttu-id="01a8c-234">各要素の <see cref="T:System.IComparable" /> 実装である既定の比較子を使用する場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-234">
              <see langword="null" /> to use the default comparer that is the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-235">指定した比較子を使用して、並べ替えられた要素の <see cref="T:System.Collections.ArrayList" /> の 1 つの要素の範囲を検索し、その要素の 0 から始まるインデックスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-235">Searches a range of elements in the sorted <see cref="T:System.Collections.ArrayList" /> for an element using the specified comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a8c-236">
            <paramref name="value" /> が見つかった場合は、並べ替えられた <see cref="T:System.Collections.ArrayList" /> 内の <paramref name="value" /> の 0 から始まるインデックス。見つからなかった場合は、負の値。これは、<paramref name="value" /> の次に大きい要素のインデックスのビットごとの補数です。ただし、大きい要素が存在しない場合は、<see cref="P:System.Collections.ArrayList.Count" /> のビットごとの補数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-236">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-237">比較演算子は、要素を比較する方法をカスタマイズします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-237">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="01a8c-238">たとえば、使用することができます、<xref:System.Collections.CaseInsensitiveComparer>大文字と小文字の文字列の検索を実行する比較演算子とインスタンス。</span><span class="sxs-lookup"><span data-stu-id="01a8c-238">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="01a8c-239">場合`comparer`が提供されるの要素、<xref:System.Collections.ArrayList>指定して、指定した値と比較<xref:System.Collections.IComparer>実装します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-239">If `comparer` is provided, the elements of the <xref:System.Collections.ArrayList> are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="01a8c-240">要素、<xref:System.Collections.ArrayList>既にによって定義されている並べ替え順序に従って値を昇順に並べ替える必要があります`comparer`以外の場合、結果が正しくない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-240">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="01a8c-241">場合`comparer`は`null`、比較が行われますを使用して、<xref:System.IComparable>または指定した値によって、要素自体によって提供される実装します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-241">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="01a8c-242">要素、<xref:System.Collections.ArrayList>既にによって定義されている並べ替え順序に従って値を昇順に並べ替える必要があります、<xref:System.IComparable>実装です。 それ以外の場合、結果正しく可能性がありますされません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-242">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="01a8c-243">比較する`null`任意の型は許可し、使用する場合は、例外を生成しません、<xref:System.IComparable>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-243">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="01a8c-244">ソート時`null`未満であるその他のオブジェクトと見なされます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-244">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="01a8c-245">場合、<xref:System.Collections.ArrayList>だけが含まれて、同じ値を持つ複数の要素には返します、出現回数、必ずしも 1 つ目のいずれかを返す、出現してのいずれかの可能性があります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-245">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="01a8c-246">場合、 <xref:System.Collections.ArrayList> 、指定した値を含まない、メソッドは、負の整数を返します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-246">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="01a8c-247">この負の整数値を検索する値を超える最初の要素のインデックスを取得するには、ビットごとの補数演算 (~) を適用できます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-247">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="01a8c-248">値を挿入するときに、 <xref:System.Collections.ArrayList>、このインデックスは、並べ替え順序を維持するために、挿入ポイントとして使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-248">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="01a8c-249">このメソッドは、O (ログ`n`) 操作では、ここで`n`は`count`します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-249">This method is an O(log `n`) operation, where `n` is `count`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01a8c-250">
            <paramref name="index" /> および <paramref name="count" /> が <see cref="T:System.Collections.ArrayList" /> 内の有効な範囲を示していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-250">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="01a8c-251">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-251">-or-</span>
          </span>
          <span data-ttu-id="01a8c-252">
            <paramref name="comparer" /> が <see langword="null" /> です。また、<paramref name="value" /> と、<see cref="T:System.Collections.ArrayList" /> の要素が、いずれも <see cref="T:System.IComparable" /> インターフェイスを実装していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-252">
              <paramref name="comparer" /> is <see langword="null" /> and neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="01a8c-253">
            <paramref name="comparer" /> が <see langword="null" /> で、<paramref name="value" /> が<see cref="T:System.Collections.ArrayList" /> の要素と異なる型です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-253">
              <paramref name="comparer" /> is <see langword="null" /> and <paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="01a8c-254">
            <paramref name="index" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-254">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="01a8c-255">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-255">-or-</span>
          </span>
          <span data-ttu-id="01a8c-256">
            <paramref name="count" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-256">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public virtual int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Capacity { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-257">
            <see cref="T:System.Collections.ArrayList" /> に格納できる要素の数を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-257">Gets or sets the number of elements that the <see cref="T:System.Collections.ArrayList" /> can contain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="01a8c-258">
            <see cref="T:System.Collections.ArrayList" /> に格納できる要素の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-258">The number of elements that the <see cref="T:System.Collections.ArrayList" /> can contain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-259"><xref:System.Collections.ArrayList.Capacity%2A> 要素の数を<xref:System.Collections.ArrayList>格納できます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-259"><xref:System.Collections.ArrayList.Capacity%2A> is the number of elements that the <xref:System.Collections.ArrayList> can store.</span></span> <span data-ttu-id="01a8c-260"><xref:System.Collections.ArrayList.Count%2A> 実際には、要素の数、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-260"><xref:System.Collections.ArrayList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="01a8c-261"><xref:System.Collections.ArrayList.Capacity%2A> 常により大きいまたは等しい<xref:System.Collections.ArrayList.Count%2A>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-261"><xref:System.Collections.ArrayList.Capacity%2A> is always greater than or equal to <xref:System.Collections.ArrayList.Count%2A>.</span></span> <span data-ttu-id="01a8c-262">場合<xref:System.Collections.ArrayList.Count%2A>を超える<xref:System.Collections.ArrayList.Capacity%2A>要素を追加するには、中に容量が前の要素をコピーし、新しい要素を追加する前に、内部配列の再割り当てによって自動的に増加します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-262">If <xref:System.Collections.ArrayList.Count%2A> exceeds <xref:System.Collections.ArrayList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="01a8c-263">呼び出すことによって、容量を削減できる<xref:System.Collections.ArrayList.TrimToSize%2A>かを設定して、<xref:System.Collections.ArrayList.Capacity%2A>プロパティに明示的にします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-263">The capacity can be decreased by calling <xref:System.Collections.ArrayList.TrimToSize%2A> or by setting the <xref:System.Collections.ArrayList.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="01a8c-264">ときに、値の<xref:System.Collections.ArrayList.Capacity%2A>が設定されている、明示的に指定した容量、それに合わせて内部の配列が再割り当てもします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-264">When the value of <xref:System.Collections.ArrayList.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</span></span>  
  
 <span data-ttu-id="01a8c-265">このプロパティの値を取得する場合は、o (1) 操作です。O は、プロパティの設定 (`n`) 操作、場所`n`新しい容量します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-265">Retrieving the value of this property is an O(1) operation; setting the property is an O(`n`) operation, where `n` is the new capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="01a8c-266">
            <see cref="P:System.Collections.ArrayList.Capacity" /> は <see cref="P:System.Collections.ArrayList.Count" /> より小さい値に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-266">
              <see cref="P:System.Collections.ArrayList.Capacity" /> is set to a value that is less than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="01a8c-267">システムで使用可能なメモリが不足しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-267">There is not enough memory available on the system.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-268">
            <see cref="T:System.Collections.ArrayList" /> からすべての要素を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-268">Removes all elements from the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-269"><xref:System.Collections.ArrayList.Count%2A> 0 に設定し、コレクションの要素から他のオブジェクトへの参照も解放します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-269"><xref:System.Collections.ArrayList.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="01a8c-270"><xref:System.Collections.ArrayList.Capacity%2A> 変更されません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-270"><xref:System.Collections.ArrayList.Capacity%2A> remains unchanged.</span></span>  <span data-ttu-id="01a8c-271">容量をリセットする、 <xref:System.Collections.ArrayList>、呼び出す<xref:System.Collections.ArrayList.TrimToSize%2A>設定や、<xref:System.Collections.ArrayList.Capacity%2A>プロパティを直接です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-271">To reset the capacity of the <xref:System.Collections.ArrayList>, call <xref:System.Collections.ArrayList.TrimToSize%2A> or set the <xref:System.Collections.ArrayList.Capacity%2A> property directly.</span></span> <span data-ttu-id="01a8c-272">空のトリミング<xref:System.Collections.ArrayList>のキャパシティを設定、<xref:System.Collections.ArrayList>を既定の容量。</span><span class="sxs-lookup"><span data-stu-id="01a8c-272">Trimming an empty <xref:System.Collections.ArrayList> sets the capacity of the <xref:System.Collections.ArrayList> to the default capacity.</span></span>  
  
 <span data-ttu-id="01a8c-273">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.ArrayList.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-273">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-274">次のコード例の未使用部分をトリミングする方法を示しています、<xref:System.Collections.ArrayList>の値をクリアする方法と、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-274">The following code example shows how to trim the unused portions of the <xref:System.Collections.ArrayList> and how to clear the values of the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="01a8c-275">
            <see cref="T:System.Collections.ArrayList" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-275">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="01a8c-276">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-276">-or-</span>
          </span>
          <span data-ttu-id="01a8c-277">
            <see cref="T:System.Collections.ArrayList" /> は固定サイズです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-277">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.TrimToSize" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-278">
            <see cref="T:System.Collections.ArrayList" /> の簡易コピーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-278">Creates a shallow copy of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a8c-279">
            <see cref="T:System.Collections.ArrayList" /> の簡易コピー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-279">A shallow copy of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-280">コレクションの簡易コピーは、参照型または値の型が参照先のオブジェクトはコピーしないかどうか、コレクションの要素のみをコピーします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-280">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="01a8c-281">新しいコレクション内の参照は、元のコレクション内の参照をポイントする同じオブジェクトをポイントします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-281">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="01a8c-282">これに対し、コレクションのディープ コピーされた要素をコピーして、要素が直接または間接的に参照するすべてです。</span><span class="sxs-lookup"><span data-stu-id="01a8c-282">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="01a8c-283">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.ArrayList.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-283">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="01a8c-284">
            <see cref="T:System.Object" /> 内で検索される <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-284">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="01a8c-285">値として <see langword="null" /> を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-285">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-286">ある要素が <see cref="T:System.Collections.ArrayList" /> 内に存在するかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-286">Determines whether an element is in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a8c-287">
            <see langword="true" /> が <paramref name="item" /> に存在する場合は <see cref="T:System.Collections.ArrayList" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-287">
              <see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.ArrayList" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-288">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.ArrayList.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-288">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="01a8c-289">このメソッドを呼び出すことで等しいかどうかを判断<xref:System.Object.Equals%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-289">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="01a8c-290">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>メソッド`item`項目が存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-290">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="01a8c-291">.NET Framework の以前のバージョンでは、この決定を使用して行われた、<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>のメソッド、`item`パラメーター コレクション内のオブジェクトにします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-291">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-292">
            <see cref="T:System.Collections.ArrayList" /> またはその一部を 1 次元配列にコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-292">Copies the <see cref="T:System.Collections.ArrayList" /> or a portion of it to a one-dimensional array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="01a8c-293">
            <see cref="T:System.Array" /> から要素がコピーされる 1 次元の <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-293">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="01a8c-294">
            <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-294">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-295">
            <see cref="T:System.Collections.ArrayList" /> 全体を互換性のある 1 次元の <see cref="T:System.Array" /> にコピーします。コピー操作は、コピー先の配列の先頭から始まります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-295">Copies the entire <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the beginning of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-296">指定された配列は、互換性のある型でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-296">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="01a8c-297">このメソッドを使用して<xref:System.Array.Copy%2A?displayProperty=nameWithType>要素のコピー。</span><span class="sxs-lookup"><span data-stu-id="01a8c-297">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="01a8c-298">要素のコピー先は、<xref:System.Array>を列挙子が反復処理する順序と同じ順序で、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-298">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="01a8c-299">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.ArrayList.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-299">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-300">次のコード例をコピーする方法を示しています、 <xref:System.Collections.ArrayList> 1 次元に<xref:System.Array?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-300">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01a8c-301">
            <paramref name="array" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-301">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01a8c-302">
            <paramref name="array" /> が多次元です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-302">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="01a8c-303">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-303">-or-</span>
          </span>
          <span data-ttu-id="01a8c-304">コピー元の <see cref="T:System.Collections.ArrayList" /> の要素数が、コピー先 <paramref name="array" /> に含めることができる要素数を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-304">The number of elements in the source <see cref="T:System.Collections.ArrayList" /> is greater than the number of elements that the destination <paramref name="array" /> can contain.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="01a8c-305">コピー元の <see cref="T:System.Collections.ArrayList" /> の型をコピー先の <paramref name="array" /> の型に自動的にキャストすることはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-305">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="01a8c-306">
            <see cref="T:System.Array" /> から要素がコピーされる 1 次元の <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-306">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="01a8c-307">
            <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-307">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="01a8c-308">コピーの開始位置となる、<c>array</c> の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-308">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-309">
            <see cref="T:System.Collections.ArrayList" /> 全体を、互換性のある 1 次元の <see cref="T:System.Array" /> にコピーします。コピー操作は、コピー先の配列の指定したインデックスから始まる部分に行います。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-309">Copies the entire <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-310">指定された配列は、互換性のある型でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-310">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="01a8c-311">このメソッドを使用して<xref:System.Array.Copy%2A?displayProperty=nameWithType>要素のコピー。</span><span class="sxs-lookup"><span data-stu-id="01a8c-311">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="01a8c-312">要素のコピー先は、<xref:System.Array>を列挙子が反復処理する順序と同じ順序で、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-312">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="01a8c-313">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.ArrayList.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-313">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-314">次のコード例をコピーする方法を示しています、 <xref:System.Collections.ArrayList> 1 次元に<xref:System.Array?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-314">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01a8c-315">
            <paramref name="array" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-315">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="01a8c-316">
            <paramref name="arrayIndex" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-316">
              <paramref name="arrayIndex" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01a8c-317">
            <paramref name="array" /> が多次元です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-317">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="01a8c-318">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-318">-or-</span>
          </span>
          <span data-ttu-id="01a8c-319">コピー元の <see cref="T:System.Collections.ArrayList" /> の要素数が、コピー先 <paramref name="array" /> の <paramref name="arrayIndex" /> から最後までの使用可能領域を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-319">The number of elements in the source <see cref="T:System.Collections.ArrayList" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="01a8c-320">コピー元の <see cref="T:System.Collections.ArrayList" /> の型をコピー先の <paramref name="array" /> の型に自動的にキャストすることはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-320">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (int index, Array array, int arrayIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(int32 index, class System.Array array, int32 arrayIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(int index, Array ^ array, int arrayIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="01a8c-321">コピーを開始するコピー元の <see cref="T:System.Collections.ArrayList" /> 内の、0 から始まるインデックス番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-321">The zero-based index in the source <see cref="T:System.Collections.ArrayList" /> at which copying begins.</span>
          </span>
        </param>
        <param name="array">
          <span data-ttu-id="01a8c-322">
            <see cref="T:System.Collections.ArrayList" /> の要素のコピー先となる 1 次元の <see cref="T:System.Array" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-322">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="01a8c-323">
            <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-323">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="01a8c-324">コピーの開始位置となる、<c>array</c> の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-324">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="01a8c-325">コピーする要素の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-325">The number of elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-326">要素の範囲を <see cref="T:System.Collections.ArrayList" /> から互換性のある 1 次元の <see cref="T:System.Array" /> にコピーします。コピー操作は、コピー先の配列の指定したインデックスから始まります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-326">Copies a range of elements from the <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-327">指定された配列は、互換性のある型でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-327">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="01a8c-328">このメソッドを使用して<xref:System.Array.Copy%2A?displayProperty=nameWithType>要素のコピー。</span><span class="sxs-lookup"><span data-stu-id="01a8c-328">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="01a8c-329">要素のコピー先は、<xref:System.Array>を列挙子が反復処理する順序と同じ順序で、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-329">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="01a8c-330">このメソッドは、O (`n`) 操作では、ここで`n`は`count`します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-330">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-331">次のコード例をコピーする方法を示しています、 <xref:System.Collections.ArrayList> 1 次元に<xref:System.Array?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-331">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01a8c-332">
            <paramref name="array" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-332">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="01a8c-333">
            <paramref name="index" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-333">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="01a8c-334">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-334">-or-</span>
          </span>
          <span data-ttu-id="01a8c-335">
            <paramref name="arrayIndex" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-335">
              <paramref name="arrayIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="01a8c-336">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-336">-or-</span>
          </span>
          <span data-ttu-id="01a8c-337">
            <paramref name="count" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-337">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01a8c-338">
            <paramref name="array" /> が多次元です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-338">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="01a8c-339">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-339">-or-</span>
          </span>
          <span data-ttu-id="01a8c-340">
            <paramref name="index" /> がコピー元の <see cref="T:System.Collections.ArrayList" /> の <see cref="P:System.Collections.ArrayList.Count" /> 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-340">
              <paramref name="index" /> is equal to or greater than the <see cref="P:System.Collections.ArrayList.Count" /> of the source <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="01a8c-341">-または-</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-341">-or-</span>
          </span>
          <span data-ttu-id="01a8c-342">コピー元の <see cref="T:System.Collections.ArrayList" /> の <paramref name="index" /> から最後までの要素数が、コピー先の <paramref name="array" /> の <paramref name="arrayIndex" /> から最後までの使用可能な領域を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-342">The number of elements from <paramref name="index" /> to the end of the source <see cref="T:System.Collections.ArrayList" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="01a8c-343">コピー元の <see cref="T:System.Collections.ArrayList" /> の型をコピー先の <paramref name="array" /> の型に自動的にキャストすることはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-343">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-344">
            <see cref="T:System.Collections.ArrayList" /> に実際に含まれる要素の数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-344">Gets the number of elements actually contained in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="01a8c-345">
            <see cref="T:System.Collections.ArrayList" /> に実際に格納されている要素の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-345">The number of elements actually contained in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-346"><xref:System.Collections.ArrayList.Capacity%2A> 要素の数を<xref:System.Collections.ArrayList>格納できます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-346"><xref:System.Collections.ArrayList.Capacity%2A> is the number of elements that the <xref:System.Collections.ArrayList> can store.</span></span> <span data-ttu-id="01a8c-347"><xref:System.Collections.ArrayList.Count%2A> 実際には、要素の数、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-347"><xref:System.Collections.ArrayList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="01a8c-348"><xref:System.Collections.ArrayList.Capacity%2A> 常により大きいまたは等しい<xref:System.Collections.ArrayList.Count%2A>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-348"><xref:System.Collections.ArrayList.Capacity%2A> is always greater than or equal to <xref:System.Collections.ArrayList.Count%2A>.</span></span> <span data-ttu-id="01a8c-349">場合<xref:System.Collections.ArrayList.Count%2A>を超える<xref:System.Collections.ArrayList.Capacity%2A>要素を追加するには、中に容量が前の要素をコピーし、新しい要素を追加する前に、内部配列の再割り当てによって自動的に増加します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-349">If <xref:System.Collections.ArrayList.Count%2A> exceeds <xref:System.Collections.ArrayList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="01a8c-350">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-350">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FixedSize">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-351">固定サイズのリスト ラッパーを返します。要素を変更することはできますが、追加や削除はできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-351">Returns a list wrapper with a fixed size, where elements are allowed to be modified, but not added or removed.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FixedSize">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList FixedSize (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList FixedSize(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FixedSize (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ FixedSize(System::Collections::ArrayList ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="01a8c-352">ラップする <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-352">The <see cref="T:System.Collections.ArrayList" /> to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-353">固定サイズの <see cref="T:System.Collections.ArrayList" /> ラッパーを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-353">Returns an <see cref="T:System.Collections.ArrayList" /> wrapper with a fixed size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a8c-354">固定サイズの <see cref="T:System.Collections.ArrayList" /> ラッパー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-354">An <see cref="T:System.Collections.ArrayList" /> wrapper with a fixed size.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-355">このラッパーへの追加と、元の削除を防止するために使用できる<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-355">This wrapper can be used to prevent additions to and deletions from the original <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="01a8c-356">要素の変更または置き換えができます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-356">The elements can still be modified or replaced.</span></span>  
  
 <span data-ttu-id="01a8c-357">固定サイズ コレクションが追加および削除する要素を防止するラッパーで単純なコレクションそのための追加または削除、要素を含む、基になるコレクションが変更された場合、固定サイズ コレクションにはそれらの変更が反映されます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-357">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="01a8c-358">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-358">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-359">次のコード例は、固定サイズのラッパーを作成する方法を示しています、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-359">The following code example shows how to create a fixed-size wrapper around an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01a8c-360">
            <paramref name="list" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-360">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FixedSize">
      <MemberSignature Language="C#" Value="public static System.Collections.IList FixedSize (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList FixedSize(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.FixedSize(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FixedSize (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ FixedSize(System::Collections::IList ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="01a8c-361">ラップする <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-361">The <see cref="T:System.Collections.IList" /> to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-362">固定サイズの <see cref="T:System.Collections.IList" /> ラッパーを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-362">Returns an <see cref="T:System.Collections.IList" /> wrapper with a fixed size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a8c-363">固定サイズの <see cref="T:System.Collections.IList" /> ラッパー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-363">An <see cref="T:System.Collections.IList" /> wrapper with a fixed size.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-364">このラッパーへの追加と、元の削除を防止するために使用できる<xref:System.Collections.IList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-364">This wrapper can be used to prevent additions to and deletions from the original <xref:System.Collections.IList>.</span></span> <span data-ttu-id="01a8c-365">要素の変更または置き換えができます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-365">The elements can still be modified or replaced.</span></span>  
  
 <span data-ttu-id="01a8c-366">固定サイズ コレクションが追加および削除する要素を防止するラッパーで単純なコレクションそのための追加または削除、要素を含む、基になるコレクションが変更された場合、固定サイズ コレクションにはそれらの変更が反映されます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-366">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="01a8c-367">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-367">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01a8c-368">
            <paramref name="list" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-368">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-369">
            <see cref="T:System.Collections.ArrayList" /> を反復処理する列挙子を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-369">Returns an enumerator that iterates through the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-370">この <see cref="T:System.Collections.ArrayList" /> の列挙子を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-370">Returns an enumerator for the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a8c-371">
            <see cref="T:System.Collections.IEnumerator" /> 全体の <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-371">An <see cref="T:System.Collections.IEnumerator" /> for the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-372">C# 言語の `foreach` ステートメント (Visual Basic の場合は `for each`) を使用することで列挙子の複雑さを回避できます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-372">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="01a8c-373">したがって、列挙子を直接操作するのではなく、`foreach` を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-373">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="01a8c-374">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-374">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="01a8c-375">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-375">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="01a8c-376"><xref:System.Collections.IEnumerator.Reset%2A> を実行した場合も、列挙子はこの位置に戻されます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-376"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="01a8c-377">この位置では、<xref:System.Collections.IEnumerator.Current%2A> が未定義です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-377">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="01a8c-378">そのため、<xref:System.Collections.IEnumerator.MoveNext%2A> の値を読み取る前に、<xref:System.Collections.IEnumerator.Current%2A> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-378">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="01a8c-379"><xref:System.Collections.IEnumerator.Current%2A> は、<xref:System.Collections.IEnumerator.MoveNext%2A> または <xref:System.Collections.IEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-379"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="01a8c-380"><xref:System.Collections.IEnumerator.MoveNext%2A> は、<xref:System.Collections.IEnumerator.Current%2A> を次の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-380"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="01a8c-381">場合<xref:System.Collections.IEnumerator.MoveNext%2A>列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと<xref:System.Collections.IEnumerator.MoveNext%2A>返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-381">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="01a8c-382">列挙子がこの位置では、後続の呼び出しの場合<xref:System.Collections.IEnumerator.MoveNext%2A>を返すことも`false`します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-382">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="01a8c-383">最後の呼び出し場合<xref:System.Collections.IEnumerator.MoveNext%2A>返される`false`、<xref:System.Collections.IEnumerator.Current%2A>が定義されていません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-383">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="01a8c-384"><xref:System.Collections.IEnumerator.Current%2A> をコレクションの最初の要素にもう一度設定するには、<xref:System.Collections.IEnumerator.Reset%2A> を呼び出してから <xref:System.Collections.IEnumerator.MoveNext%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-384">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="01a8c-385">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-385">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="01a8c-386">コレクションに対して変更 (要素の追加、変更、削除など) が行われると、列挙子は回復不可能な無効状態になり、その動作は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-386">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="01a8c-387">列挙子にはコレクションへの排他アクセス権限はないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-387">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="01a8c-388">列挙処理でスレッド セーフを確保するには、列挙処理が終わるまでコレクションをロックできます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-388">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="01a8c-389">コレクションに対し複数のスレッドがアクセスして読み取りや書き込みを行うことができるようにするには、独自に同期化を実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-389">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="01a8c-390">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-390">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-391">次の例は、列挙子を取得、 <xref:System.Collections.ArrayList>、および内の要素の範囲の列挙子、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-391">The following example gets the enumerator for an <xref:System.Collections.ArrayList>, and the enumerator for a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-csharp[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR/collections.arraylist.getenumerator/cs/program.cs#1)]
 [!code-vb[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/collections.arraylist.getenumerator/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator (index As Integer, count As Integer) As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator(int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="01a8c-392">列挙子が参照する必要のある <see cref="T:System.Collections.ArrayList" /> セクションの開始位置を示す 0 から始まるインデックス番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-392">The zero-based starting index of the <see cref="T:System.Collections.ArrayList" /> section that the enumerator should refer to.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="01a8c-393">列挙子が参照する必要のある <see cref="T:System.Collections.ArrayList" /> セクション内の要素の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-393">The number of elements in the <see cref="T:System.Collections.ArrayList" /> section that the enumerator should refer to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-394">
            <see cref="T:System.Collections.ArrayList" /> 内の要素の範囲の列挙子を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-394">Returns an enumerator for a range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a8c-395">
            <see cref="T:System.Collections.IEnumerator" /> 内の要素の指定した範囲の <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-395">An <see cref="T:System.Collections.IEnumerator" /> for the specified range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-396">`foreach` C# 言語のステートメント (`for each` Visual c で`For Each`Visual Basic) 列挙子の複雑さが隠されています。</span><span class="sxs-lookup"><span data-stu-id="01a8c-396">The `foreach` statement of the C# language (`for each` in Visual C++, `For Each` Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="01a8c-397">したがって、列挙子を直接操作するのではなく、`foreach` を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-397">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="01a8c-398">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-398">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="01a8c-399">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-399">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="01a8c-400"><xref:System.Collections.IEnumerator.Reset%2A> を実行した場合も、列挙子はこの位置に戻されます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-400"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="01a8c-401">この位置では、<xref:System.Collections.IEnumerator.Current%2A> が未定義です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-401">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="01a8c-402">そのため、<xref:System.Collections.IEnumerator.MoveNext%2A> の値を読み取る前に、<xref:System.Collections.IEnumerator.Current%2A> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-402">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="01a8c-403"><xref:System.Collections.IEnumerator.Current%2A> は、<xref:System.Collections.IEnumerator.MoveNext%2A> または <xref:System.Collections.IEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-403"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="01a8c-404"><xref:System.Collections.IEnumerator.MoveNext%2A> は、<xref:System.Collections.IEnumerator.Current%2A> を次の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-404"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="01a8c-405">場合<xref:System.Collections.IEnumerator.MoveNext%2A>列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと<xref:System.Collections.IEnumerator.MoveNext%2A>返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-405">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="01a8c-406">列挙子がこの位置では、後続の呼び出しの場合<xref:System.Collections.IEnumerator.MoveNext%2A>を返すことも`false`します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-406">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="01a8c-407">最後の呼び出し場合<xref:System.Collections.IEnumerator.MoveNext%2A>返される`false`、<xref:System.Collections.IEnumerator.Current%2A>が定義されていません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-407">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="01a8c-408"><xref:System.Collections.IEnumerator.Current%2A> をコレクションの最初の要素にもう一度設定するには、<xref:System.Collections.IEnumerator.Reset%2A> を呼び出してから <xref:System.Collections.IEnumerator.MoveNext%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-408">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="01a8c-409">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-409">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="01a8c-410">コレクションに対して変更 (要素の追加、変更、削除など) が行われると、列挙子は回復不可能な無効状態になり、その動作は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-410">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="01a8c-411">列挙子にはコレクションへの排他アクセス権限はないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-411">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="01a8c-412">列挙処理でスレッド セーフを確保するには、列挙処理が終わるまでコレクションをロックできます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-412">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="01a8c-413">コレクションに対し複数のスレッドがアクセスして読み取りや書き込みを行うことができるようにするには、独自に同期化を実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-413">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="01a8c-414">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-414">This method is an O(1) operation.</span></span>  
  
## <a name="version-compatibility"></a><span data-ttu-id="01a8c-415">バージョンの互換性</span><span class="sxs-lookup"><span data-stu-id="01a8c-415">Version Compatibility</span></span>  
 <span data-ttu-id="01a8c-416">.NET Framework バージョン 1.0 および 1.1 では、列挙子で、<xref:System.Collections.ArrayList>ラッパーによって返される、<xref:System.Collections.ArrayList.Adapter%2A>カウントではなく、上限として、メソッドが 2 番目の引数を処理します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-416">In the .NET Framework versions 1.0 and 1.1, the enumerator for an <xref:System.Collections.ArrayList> wrapper returned by the <xref:System.Collections.ArrayList.Adapter%2A> method treated the second argument as an upper bound rather than as a count.</span></span> <span data-ttu-id="01a8c-417">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] 2 番目の引数は正しくカウントとして扱われます。 します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-417">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] the second argument is correctly treated as a count.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-418">次の例は、列挙子を取得、 <xref:System.Collections.ArrayList>、および内の要素の範囲の列挙子、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-418">The following example gets the enumerator for an <xref:System.Collections.ArrayList>, and the enumerator for a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-csharp[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR/collections.arraylist.getenumerator/cs/program.cs#1)]
 [!code-vb[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/collections.arraylist.getenumerator/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="01a8c-419">
            <paramref name="index" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-419">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="01a8c-420">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-420">-or-</span>
          </span>
          <span data-ttu-id="01a8c-421">
            <paramref name="count" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-421">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01a8c-422">
            <paramref name="index" /> および <paramref name="count" /> は <see cref="T:System.Collections.ArrayList" /> において有効な範囲を指定していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-422">
              <paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetRange">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ArrayList GetRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ArrayList GetRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRange (index As Integer, count As Integer) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ArrayList ^ GetRange(int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="01a8c-423">範囲が開始する位置の、0 から始まる <see cref="T:System.Collections.ArrayList" /> のインデックス番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-423">The zero-based <see cref="T:System.Collections.ArrayList" /> index at which the range starts.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="01a8c-424">範囲内の要素の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-424">The number of elements in the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-425">元の <see cref="T:System.Collections.ArrayList" /> 内の要素のサブセットを表す <see cref="T:System.Collections.ArrayList" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-425">Returns an <see cref="T:System.Collections.ArrayList" /> which represents a subset of the elements in the source <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a8c-426">元の <see cref="T:System.Collections.ArrayList" /> 内の要素のサブセットを表す <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-426">An <see cref="T:System.Collections.ArrayList" /> which represents a subset of the elements in the source <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-427">このメソッドは、要素のコピーを作成できません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-427">This method does not create copies of the elements.</span></span> <span data-ttu-id="01a8c-428">新しい<xref:System.Collections.ArrayList>はソース ビュー ウィンドウのみであり<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-428">The new <xref:System.Collections.ArrayList> is only a view window into the source <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="01a8c-429">ただし、後の変更は、ソース<xref:System.Collections.ArrayList>このビュー ウィンドウから行う必要があります<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-429">However, all subsequent changes to the source <xref:System.Collections.ArrayList> must be done through this view window <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="01a8c-430">変更がソースに直接行われた場合<xref:System.Collections.ArrayList>、ビュー」ウィンドウ<xref:System.Collections.ArrayList>が無効になってはに対する操作を返します、<xref:System.InvalidOperationException>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-430">If changes are made directly to the source <xref:System.Collections.ArrayList>, the view window <xref:System.Collections.ArrayList> is invalidated and any operations on it will return an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="01a8c-431">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-431">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-432">次のコード例は、設定および内の要素の範囲を取得する方法を示しています、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-432">The following code example shows how to set and get a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.SetRange Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.SetRange Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.SetRange Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="01a8c-433">
            <paramref name="index" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-433">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="01a8c-434">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-434">-or-</span>
          </span>
          <span data-ttu-id="01a8c-435">
            <paramref name="count" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-435">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01a8c-436">
            <paramref name="index" /> および <paramref name="count" /> が <see cref="T:System.Collections.ArrayList" /> 内の要素の有効範囲を示していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-436">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-437">
            <see cref="T:System.Collections.ArrayList" /> 全体またはその一部において、最初に値が出現した位置のインデックス番号 (0 から始まる) を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-437">Returns the zero-based index of the first occurrence of a value in the <see cref="T:System.Collections.ArrayList" /> or in a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="01a8c-438">
            <see cref="T:System.Object" /> 内で検索される <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-438">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="01a8c-439">値として <see langword="null" /> を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-439">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-440">指定した <see cref="T:System.Object" /> を検索し、<see cref="T:System.Collections.ArrayList" /> 全体内で最初に見つかった位置の 0 から始まるインデックスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-440">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a8c-441">
            <paramref name="value" /> 全体を対象に <see cref="T:System.Collections.ArrayList" /> を検索し、見つかった場合は、インデックス番号の最も小さい要素の 0 から始まるインデックス番号、それ以外の場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-441">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Collections.ArrayList" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-442"><xref:System.Collections.ArrayList>はフォワード最初の要素を起点と最後の要素で終わる検索します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-442">The <xref:System.Collections.ArrayList> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="01a8c-443">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.ArrayList.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-443">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="01a8c-444">このメソッドを呼び出すことで等しいかどうかを判断<xref:System.Object.Equals%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-444">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="01a8c-445">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>メソッド`item`項目が存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-445">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="01a8c-446">.NET Framework の以前のバージョンでは、この決定を使用して行われた、<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>のメソッド、`item`パラメーター コレクション内のオブジェクトにします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-446">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-447">次のコード例では、指定した要素の最初に見つかった位置のインデックスを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-447">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="01a8c-448">
            <see cref="T:System.Object" /> 内で検索される <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-448">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="01a8c-449">値として <see langword="null" /> を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-449">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="01a8c-450">検索の開始位置を示す 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-450">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="01a8c-451">空のリストでは 0 (ゼロ) は正しい値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-451">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-452">指定した <see cref="T:System.Object" /> を検索し、指定したインデックスから最後の要素までの <see cref="T:System.Collections.ArrayList" /> 内の要素の範囲内で最初に出現する位置の 0 から始まるインデックス番号を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-452">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the specified index to the last element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a8c-453">
            <paramref name="startIndex" /> から最後の要素までの <see cref="T:System.Collections.ArrayList" /> 内の要素の範囲内で <paramref name="value" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号。それ以外の場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-453">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from <paramref name="startIndex" /> to the last element, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-454"><xref:System.Collections.ArrayList>転送を開始位置として検索`startIndex`と最後の要素で終了します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-454">The <xref:System.Collections.ArrayList> is searched forward starting at `startIndex` and ending at the last element.</span></span>  
  
 <span data-ttu-id="01a8c-455">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (`n`) 操作では、ここで`n`から要素の数は、`startIndex`の末尾に、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-455">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is the number of elements from `startIndex` to the end of the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="01a8c-456">このメソッドを呼び出すことで等しいかどうかを判断<xref:System.Object.Equals%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-456">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="01a8c-457">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>メソッド`item`項目が存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-457">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="01a8c-458">.NET Framework の以前のバージョンでは、この決定を使用して行われた、<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>のメソッド、`item`パラメーター コレクション内のオブジェクトにします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-458">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-459">次のコード例では、指定した要素の最初に見つかった位置のインデックスを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-459">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="01a8c-460">
            <paramref name="startIndex" /> が、<see cref="T:System.Collections.ArrayList" /> の有効なインデックスの範囲外です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-460">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="01a8c-461">
            <see cref="T:System.Object" /> 内で検索される <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-461">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="01a8c-462">値として <see langword="null" /> を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-462">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="01a8c-463">検索の開始位置を示す 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-463">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="01a8c-464">空のリストでは 0 (ゼロ) は正しい値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-464">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="01a8c-465">検索対象の範囲内にある要素の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-465">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-466">指定した <see cref="T:System.Object" /> を検索し、指定したインデックスから始まって指定した数の要素を格納する <see cref="T:System.Collections.ArrayList" /> 内の要素の範囲内で最初に出現する位置の 0 から始まるインデックス番号を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-466">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that starts at the specified index and contains the specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a8c-467">
            <paramref name="startIndex" /> から始まって <paramref name="count" /> 個の要素を格納する <see cref="T:System.Collections.ArrayList" /> 内の要素の範囲内で <paramref name="value" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号。それ以外の場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-467">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that starts at <paramref name="startIndex" /> and contains <paramref name="count" /> number of elements, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-468"><xref:System.Collections.ArrayList>転送を開始位置として検索が`startIndex`で終わる`startIndex`plus`count`から 1 を引いた場合`count`が 0 より大きい。</span><span class="sxs-lookup"><span data-stu-id="01a8c-468">The <xref:System.Collections.ArrayList> is searched forward starting at `startIndex` and ending at `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="01a8c-469">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (`n`) 操作では、ここで`n`は`count`します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-469">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
 <span data-ttu-id="01a8c-470">このメソッドを呼び出すことで等しいかどうかを判断<xref:System.Object.Equals%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-470">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="01a8c-471">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>メソッド`item`項目が存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-471">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="01a8c-472">.NET Framework の以前のバージョンでは、この決定を使用して行われた、<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>のメソッド、`item`パラメーター コレクション内のオブジェクトにします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-472">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-473">次のコード例では、指定した要素の最初に見つかった位置のインデックスを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-473">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="01a8c-474">
            <paramref name="startIndex" /> が、<see cref="T:System.Collections.ArrayList" /> の有効なインデックスの範囲外です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-474">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="01a8c-475">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-475">-or-</span>
          </span>
          <span data-ttu-id="01a8c-476">
            <paramref name="count" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-476">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="01a8c-477">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-477">-or-</span>
          </span>
          <span data-ttu-id="01a8c-478">
            <paramref name="startIndex" /> および <paramref name="count" /> が <see cref="T:System.Collections.ArrayList" /> 内の有効な部分を指定していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-478">
              <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="01a8c-479">
            <c>value</c> を挿入する位置を示す、0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-479">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="01a8c-480">挿入する <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-480">The <see cref="T:System.Object" /> to insert.</span>
          </span>
          <span data-ttu-id="01a8c-481">値として <see langword="null" /> を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-481">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-482">
            <see cref="T:System.Collections.ArrayList" /> 内の指定したインデックスの位置に要素を挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-482">Inserts an element into the <see cref="T:System.Collections.ArrayList" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-483"><xref:System.Collections.ArrayList> 受け付ける`null`有効な値としてでき、重複する要素。</span><span class="sxs-lookup"><span data-stu-id="01a8c-483"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="01a8c-484">場合<xref:System.Collections.ArrayList.Count%2A>既に同じ<xref:System.Collections.ArrayList.Capacity%2A>、容量、<xref:System.Collections.ArrayList>内部の配列を自動的に再割り当てが増加し、新しい要素が追加される前に、既存の要素が新しい配列にコピーされます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-484">If <xref:System.Collections.ArrayList.Count%2A> already equals <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="01a8c-485">場合`index`と等しい<xref:System.Collections.ArrayList.Count%2A>、`value`の末尾に追加された<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-485">If `index` is equal to <xref:System.Collections.ArrayList.Count%2A>, `value` is added to the end of <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="01a8c-486">リストなどの連続する要素のコレクションでは、新しい要素を挿入するために、挿入位置より後にある要素の位置が繰り下げられます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-486">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="01a8c-487">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-487">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="01a8c-488">この動作は、要素が概念的にバケットにグループ化されているハッシュ テーブルなどのコレクションには適用されません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-488">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="01a8c-489">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.ArrayList.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-489">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-490">次のコード例に要素を挿入する方法を示しています、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-490">The following code example shows how to insert elements into the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Insert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="01a8c-491">
            <paramref name="index" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-491">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="01a8c-492">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-492">-or-</span>
          </span>
          <span data-ttu-id="01a8c-493">
            <paramref name="index" /> が <see cref="P:System.Collections.ArrayList.Count" /> より大きくなっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-493">
              <paramref name="index" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="01a8c-494">
            <see cref="T:System.Collections.ArrayList" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-494">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="01a8c-495">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-495">-or-</span>
          </span>
          <span data-ttu-id="01a8c-496">
            <see cref="T:System.Collections.ArrayList" /> は固定サイズです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-496">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="InsertRange">
      <MemberSignature Language="C#" Value="public virtual void InsertRange (int index, System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertRange(int32 index, class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertRange (index As Integer, c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertRange(int index, System::Collections::ICollection ^ c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="01a8c-497">新しい要素が挿入される位置の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-497">The zero-based index at which the new elements should be inserted.</span>
          </span>
        </param>
        <param name="c">
          <span data-ttu-id="01a8c-498">
            <see cref="T:System.Collections.ICollection" /> に要素を挿入する <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-498">The <see cref="T:System.Collections.ICollection" /> whose elements should be inserted into the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="01a8c-499">コレクション自体を <see langword="null" /> にすることはできませんが、コレクションに格納する要素は <see langword="null" /> であってもかまいません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-499">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-500">コレクションの要素を <see cref="T:System.Collections.ArrayList" /> 内の指定したインデックスの位置に挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-500">Inserts the elements of a collection into the <see cref="T:System.Collections.ArrayList" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-501"><xref:System.Collections.ArrayList> 受け付ける`null`有効な値としてでき、重複する要素。</span><span class="sxs-lookup"><span data-stu-id="01a8c-501"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="01a8c-502">場合、新しい<xref:System.Collections.ArrayList.Count%2A>(現在<xref:System.Collections.ArrayList.Count%2A>さらに、コレクションのサイズ) はより大きくなる<xref:System.Collections.ArrayList.Capacity%2A>の容量、<xref:System.Collections.ArrayList>新しい要素では、それに合わせて内部の配列を自動的に再割り当てが増加し、新しい要素が追加される前に、既存の要素が新しい配列にコピーされます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-502">If the new <xref:System.Collections.ArrayList.Count%2A> (the current <xref:System.Collections.ArrayList.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="01a8c-503">場合`index`と等しい<xref:System.Collections.ArrayList.Count%2A>の末尾に要素が追加されます<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-503">If `index` is equal to <xref:System.Collections.ArrayList.Count%2A>, the elements are added to the end of <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="01a8c-504">内の要素の順序、<xref:System.Collections.ICollection>内でも維持される、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-504">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="01a8c-505">リストなどの連続する要素のコレクションでは、新しい要素を挿入するために、挿入位置より後にある要素の位置が繰り下げられます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-505">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="01a8c-506">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-506">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="01a8c-507">この動作は、要素が概念的にバケットにグループ化されているハッシュ テーブルなどのコレクションには適用されません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-507">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="01a8c-508">このメソッドは、O (`n` + `m`) 操作、場所`n`を追加する要素の数と`m`は<xref:System.Collections.ArrayList.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-508">This method is an O(`n` + `m`) operation, where `n` is the number of elements to be added and `m` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-509">次のコード例に要素を挿入する方法を示しています、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-509">The following code example shows how to insert elements into the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Insert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01a8c-510">
            <paramref name="c" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-510">
              <paramref name="c" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="01a8c-511">
            <paramref name="index" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-511">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="01a8c-512">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-512">-or-</span>
          </span>
          <span data-ttu-id="01a8c-513">
            <paramref name="index" /> が <see cref="P:System.Collections.ArrayList.Count" /> より大きくなっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-513">
              <paramref name="index" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="01a8c-514">
            <see cref="T:System.Collections.ArrayList" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-514">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="01a8c-515">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-515">-or-</span>
          </span>
          <span data-ttu-id="01a8c-516">
            <see cref="T:System.Collections.ArrayList" /> は固定サイズです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-516">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-517">
            <see cref="T:System.Collections.ArrayList" /> が固定サイズかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-517">Gets a value indicating whether the <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="01a8c-518">
            <see langword="true" /> が固定サイズの場合は <see cref="T:System.Collections.ArrayList" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-518">
              <see langword="true" /> if the <see cref="T:System.Collections.ArrayList" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="01a8c-519">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-519">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-520">固定サイズのコレクションでは、コレクションの作成後に要素の追加または削除はできませんが、既存の要素の変更はできます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-520">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="01a8c-521">固定サイズ コレクションが追加および削除する要素を防止するラッパーで単純なコレクションそのための追加または削除、要素を含む、基になるコレクションが変更された場合、固定サイズ コレクションにはそれらの変更が反映されます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-521">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="01a8c-522">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-522">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-523">次のコード例は、固定サイズのラッパーを作成する方法を示しています、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-523">The following code example shows how to create a fixed-size wrapper around an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-524">
            <see cref="T:System.Collections.ArrayList" /> が読み取り専用かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-524">Gets a value indicating whether the <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="01a8c-525">
            <see langword="true" /> が読み取り専用である場合は <see cref="T:System.Collections.ArrayList" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-525">
              <see langword="true" /> if the <see cref="T:System.Collections.ArrayList" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="01a8c-526">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-526">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-527">読み取り専用のコレクションでは、コレクション作成後に要素の追加、削除、または変更はできません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-527">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="01a8c-528">読み取り専用であるコレクションは、コレクションのコレクションの変更を防止するラッパーです。そのため、基になるコレクションの変更が加えられた、読み取り専用コレクションはそれらの変更を反映します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-528">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="01a8c-529">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-529">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-530">次のコード例は、読み取り専用のラッパーを作成する方法を示しています、<xref:System.Collections.ArrayList>かどうかをする方法と、<xref:System.Collections.ArrayList>は読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-530">The following code example shows how to create a read-only wrapper around an <xref:System.Collections.ArrayList> and how to determine if an <xref:System.Collections.ArrayList> is read-only.</span></span>  
  
 [!code-cpp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-531">
            <see cref="T:System.Collections.ArrayList" /> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-531">Gets a value indicating whether access to the <see cref="T:System.Collections.ArrayList" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="01a8c-532">
            <see langword="true" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Collections.ArrayList" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-532">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ArrayList" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="01a8c-533">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-533">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-534">スレッド セーフを確保する、 <xref:System.Collections.ArrayList>、によって返されるラッパーを介してすべての操作を行う必要があります、<xref:System.Collections.ArrayList.Synchronized%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="01a8c-534">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through the wrapper returned by the <xref:System.Collections.ArrayList.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="01a8c-535">コレクションの列挙は、本質的にスレッド セーフなプロシージャではありません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-535">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="01a8c-536">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-536">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="01a8c-537">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-537">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-538">次のコード例を使用してコレクションをロックする方法を示しています、<xref:System.Collections.ArrayList.SyncRoot%2A>列挙中にします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-538">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="01a8c-539">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-539">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 <span data-ttu-id="01a8c-540">次のコード例は、同期する方法を示します、 <xref:System.Collections.ArrayList>、かどうかを<xref:System.Collections.ArrayList>が同期されているし、同期を使用して<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-540">The following code example shows how to synchronize an <xref:System.Collections.ArrayList>, determine if an <xref:System.Collections.ArrayList> is synchronized and use a synchronized <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="01a8c-541">取得または設定する要素の、0 から始まるインデックス番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-541">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-542">指定したインデックスにある要素を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-542">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="01a8c-543">指定したインデックス位置にある要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-543">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-544"><xref:System.Collections.ArrayList.Item%2A>を返します、<xref:System.Object>ので、操作するために、元の型を戻り値をキャストする必要があります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-544">The <xref:System.Collections.ArrayList.Item%2A> returns an <xref:System.Object>, so you may need to cast the returned value to the original type in order to manipulate it.</span></span> <span data-ttu-id="01a8c-545">重要な点は<xref:System.Collections.ArrayList>厳密に型指定されたコレクションではありません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-545">It is important to note that <xref:System.Collections.ArrayList> is not a strongly-typed collection.</span></span> <span data-ttu-id="01a8c-546">厳密に型指定の代わりには、次を参照してください。<xref:System.Collections.Generic.List%601>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-546">For a strongly-typed alternative, see <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="01a8c-547"><xref:System.Collections.ArrayList> 受け付ける`null`有効な値としてでき、重複する要素。</span><span class="sxs-lookup"><span data-stu-id="01a8c-547"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="01a8c-548">このプロパティでは、`myCollection[index]` という構文を使用して、コレクション内の特定の要素にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-548">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="01a8c-549">C# 言語キーワードを使用して実装する代わりに、インデクサーの定義、<xref:System.Collections.ArrayList.Item%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="01a8c-549">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.ArrayList.Item%2A> property.</span></span> <span data-ttu-id="01a8c-550">Visual Basic は、<xref:System.Collections.ArrayList.Item%2A> を既定のプロパティとして実装しており、同様のインデックス機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-550">Visual Basic implements <xref:System.Collections.ArrayList.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="01a8c-551">このプロパティの値を取得する場合は、o (1) 操作です。プロパティの設定は、o (1) 操作ではもです。</span><span class="sxs-lookup"><span data-stu-id="01a8c-551">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-552">次のコード例を作成、<xref:System.Collections.ArrayList>し、いくつかの項目を追加します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-552">The following code example creates an <xref:System.Collections.ArrayList> and adds several items.</span></span> <span data-ttu-id="01a8c-553">アクセスの要素をこの例は、<xref:System.Collections.ArrayList.Item%2A>プロパティ (c# のインデクサー) と要素を変更するために新しい値を割り当てることによって、<xref:System.Collections.ArrayList.Item%2A>指定したインデックスのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="01a8c-553">The example demonstrates accessing elements with the <xref:System.Collections.ArrayList.Item%2A> property (the indexer in C#), and changing an element by assigning a new value to the <xref:System.Collections.ArrayList.Item%2A> property for a specified index.</span></span> <span data-ttu-id="01a8c-554">例では、ことも示しています、<xref:System.Collections.ArrayList.Item%2A>をアクセスまたは一覧の現在のサイズの外側にある要素を追加するプロパティは使用できません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-554">The example also shows that the <xref:System.Collections.ArrayList.Item%2A> property cannot be used to access or add elements outside the current size of the list.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Item#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/cpp/source.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Item#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/CS/source.cs#1)]
 [!code-vb[System.Collections.ArrayList.Item#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/VB/source.vb#1)]  
  
 <span data-ttu-id="01a8c-555">次の例では、<xref:System.Collections.ArrayList.Item%2A>プロパティ リスト内の項目に値を割り当てるを明示的にします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-555">The following example uses the <xref:System.Collections.ArrayList.Item%2A> property explicitly to assign values to items in the list.</span></span> <span data-ttu-id="01a8c-556">例では、継承するクラスを定義する、<xref:System.Collections.ArrayList>し、一覧の項目を暗号化するためにメソッドを追加します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-556">The example defines a class that inherits an <xref:System.Collections.ArrayList> and adds a method to scramble the list items.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Item#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/cpp/source2.cpp#2)]
 [!code-csharp[System.Collections.ArrayList.Item#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/CS/source2.cs#2)]
 [!code-vb[System.Collections.ArrayList.Item#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="01a8c-557">
            <paramref name="index" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-557">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="01a8c-558">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-558">-or-</span>
          </span>
          <span data-ttu-id="01a8c-559">
            <paramref name="index" /> が <see cref="P:System.Collections.ArrayList.Count" /> 以上になっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-559">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-560">
            <see cref="T:System.Collections.ArrayList" /> 全体またはその一部において、最後に値が出現した位置のインデックス番号 (0 から始まる) を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-560">Returns the zero-based index of the last occurrence of a value in the <see cref="T:System.Collections.ArrayList" /> or in a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="01a8c-561">
            <see cref="T:System.Object" /> 内で検索される <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-561">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="01a8c-562">値として <see langword="null" /> を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-562">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-563">指定した <see cref="T:System.Object" /> を検索し、<see cref="T:System.Collections.ArrayList" /> 全体内で最後に見つかった位置の 0 から始まるインデックスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-563">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a8c-564">
            <paramref name="value" /> が見つかった場合は、<see cref="T:System.Collections.ArrayList" /> 全体で最後に見つかった位置のインデックス番号 (0 から始まる)。それ以外の場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-564">The zero-based index of the last occurrence of <paramref name="value" /> within the entire the <see cref="T:System.Collections.ArrayList" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-565"><xref:System.Collections.ArrayList>後方の最後の要素の最初と最後の最初の要素を検索します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-565">The <xref:System.Collections.ArrayList> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="01a8c-566">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.ArrayList.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-566">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="01a8c-567">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>メソッド`item`項目が存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-567">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="01a8c-568">.NET Framework の以前のバージョンでは、この決定を使用して行われた、<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>のメソッド、`item`パラメーター コレクション内のオブジェクトにします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-568">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-569">次のコード例では、指定した要素の最後に見つかった位置のインデックスを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-569">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="01a8c-570">
            <see cref="T:System.Object" /> 内で検索される <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-570">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="01a8c-571">値として <see langword="null" /> を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-571">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="01a8c-572">後方検索の開始位置を示す 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-572">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-573">指定した <see cref="T:System.Object" /> を検索し、最初の要素から、指定したインデックスまでの <see cref="T:System.Collections.ArrayList" /> 内の要素の範囲内で最後に出現する位置の 0 から始まるインデックス番号を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-573">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a8c-574">最初の要素から <paramref name="startIndex" /> までの <see cref="T:System.Collections.ArrayList" /> 内の要素の範囲内で <paramref name="value" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号。それ以外の場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-574">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the first element to <paramref name="startIndex" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-575"><xref:System.Collections.ArrayList>検索旧バージョンとを開始位置として、`startIndex`と最初の要素で終了します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-575">The <xref:System.Collections.ArrayList> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="01a8c-576">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (`n`) 操作、場所`n`の先頭から要素の数が、<xref:System.Collections.ArrayList>に`startIndex`です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-576">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is the number of elements from the beginning of the <xref:System.Collections.ArrayList> to `startIndex`.</span></span>  
  
 <span data-ttu-id="01a8c-577">このメソッドを呼び出すことで等しいかどうかを判断<xref:System.Object.Equals%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-577">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="01a8c-578">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>メソッド`item`項目が存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-578">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="01a8c-579">.NET Framework の以前のバージョンでは、この決定を使用して行われた、<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>のメソッド、`item`パラメーター コレクション内のオブジェクトにします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-579">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-580">次のコード例では、指定した要素の最後に見つかった位置のインデックスを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-580">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="01a8c-581">
            <paramref name="startIndex" /> が、<see cref="T:System.Collections.ArrayList" /> の有効なインデックスの範囲外です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-581">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="01a8c-582">
            <see cref="T:System.Object" /> 内で検索される <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-582">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="01a8c-583">値として <see langword="null" /> を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-583">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="01a8c-584">逆方向検索の開始位置を示す 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-584">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="01a8c-585">検索対象の範囲内にある要素の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-585">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-586">指定した <see cref="T:System.Object" /> を検索して、指定した数の要素を格納し、指定したインデックスの位置で終了する <see cref="T:System.Collections.ArrayList" /> 内の要素の範囲内で最後に出現する位置の 0 から始まるインデックス番号を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-586">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a8c-587">
            <paramref name="count" /> 個の要素を格納し、<paramref name="startIndex" /> の位置で終了する <see cref="T:System.Collections.ArrayList" /> 内の要素の範囲内で <paramref name="value" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号。それ以外の場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-587">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that contains <paramref name="count" /> number of elements and ends at <paramref name="startIndex" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-588"><xref:System.Collections.ArrayList>検索旧バージョンとを開始位置として、`startIndex`で終わる`startIndex`マイナス`count`1、さらに場合`count`が 0 より大きい。</span><span class="sxs-lookup"><span data-stu-id="01a8c-588">The <xref:System.Collections.ArrayList> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="01a8c-589">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (`n`) 操作では、ここで`n`は`count`します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-589">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
 <span data-ttu-id="01a8c-590">このメソッドを呼び出すことで等しいかどうかを判断<xref:System.Object.Equals%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-590">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="01a8c-591">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>メソッド`item`項目が存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-591">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="01a8c-592">.NET Framework の以前のバージョンでは、この決定を使用して行われた、<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>のメソッド、`item`パラメーター コレクション内のオブジェクトにします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-592">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-593">次のコード例では、指定した要素の最後に見つかった位置のインデックスを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-593">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span> <span data-ttu-id="01a8c-594">注意してください`LastIndexOf`は逆方向検索です。 したがって、`count`以下にする必要があります`startIndex`+ 1 です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-594">Note that `LastIndexOf` is a backward search; therefore, `count` must be less than or equal to `startIndex` + 1.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="01a8c-595">
            <paramref name="startIndex" /> が、<see cref="T:System.Collections.ArrayList" /> の有効なインデックスの範囲外です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-595">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="01a8c-596">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-596">-or-</span>
          </span>
          <span data-ttu-id="01a8c-597">
            <paramref name="count" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-597">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="01a8c-598">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-598">-or-</span>
          </span>
          <span data-ttu-id="01a8c-599">
            <paramref name="startIndex" /> および <paramref name="count" /> が <see cref="T:System.Collections.ArrayList" /> 内の有効な部分を指定していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-599">
              <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadOnly">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-600">読み取り専用のリスト ラッパーを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-600">Returns a list wrapper that is read-only.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList ReadOnly (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList ReadOnly(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ ReadOnly(System::Collections::ArrayList ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="01a8c-601">ラップする <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-601">The <see cref="T:System.Collections.ArrayList" /> to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-602">読み取り専用 <see cref="T:System.Collections.ArrayList" /> ラッパーを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-602">Returns a read-only <see cref="T:System.Collections.ArrayList" /> wrapper.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a8c-603">
            <paramref name="list" /> をラップする読み取り専用の <see cref="T:System.Collections.ArrayList" /> ラッパー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-603">A read-only <see cref="T:System.Collections.ArrayList" /> wrapper around <paramref name="list" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-604">変更を加えるように`list`、公開`list`このラッパーを使用します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-604">To prevent any modifications to `list`, expose `list` only through this wrapper.</span></span>  
  
 <span data-ttu-id="01a8c-605">読み取り専用であるコレクションは、単純なコレクションの変更を防止するラッパー コレクションです。</span><span class="sxs-lookup"><span data-stu-id="01a8c-605">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</span></span> <span data-ttu-id="01a8c-606">基になるコレクションの変更が加えられた、読み取り専用コレクションはそれらの変更を反映します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-606">If changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="01a8c-607">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-607">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-608">次のコード例は、読み取り専用のラッパーを作成する方法を示しています、<xref:System.Collections.ArrayList>かどうかをする方法と、<xref:System.Collections.ArrayList>は読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-608">The following code example shows how to create a read-only wrapper around an <xref:System.Collections.ArrayList> and how to determine if an <xref:System.Collections.ArrayList> is read-only.</span></span>  
  
 [!code-cpp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01a8c-609">
            <paramref name="list" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-609">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Collections.IList ReadOnly (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList ReadOnly(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ ReadOnly(System::Collections::IList ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="01a8c-610">ラップする <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-610">The <see cref="T:System.Collections.IList" /> to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-611">読み取り専用 <see cref="T:System.Collections.IList" /> ラッパーを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-611">Returns a read-only <see cref="T:System.Collections.IList" /> wrapper.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a8c-612">
            <paramref name="list" /> をラップする読み取り専用の <see cref="T:System.Collections.IList" /> ラッパー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-612">A read-only <see cref="T:System.Collections.IList" /> wrapper around <paramref name="list" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-613">変更を加えるように`list`、公開`list`このラッパーを使用します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-613">To prevent any modifications to `list`, expose `list` only through this wrapper.</span></span>  
  
 <span data-ttu-id="01a8c-614">読み取り専用であるコレクションは、単純なコレクションの変更を防止するラッパー コレクションです。</span><span class="sxs-lookup"><span data-stu-id="01a8c-614">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</span></span> <span data-ttu-id="01a8c-615">基になるコレクションの変更が加えられた、読み取り専用コレクションはそれらの変更を反映します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-615">If changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="01a8c-616">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-616">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01a8c-617">
            <paramref name="list" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-617">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="01a8c-618">
            <see cref="T:System.Object" /> から削除する <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-618">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="01a8c-619">値として <see langword="null" /> を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-619">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-620">特定のオブジェクトが <see cref="T:System.Collections.ArrayList" /> 内にあるときに、最初に出現したものを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-620">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-621">場合、 <xref:System.Collections.ArrayList> 、指定したオブジェクトが含まれていない、<xref:System.Collections.ArrayList>は変更されません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-621">If the <xref:System.Collections.ArrayList> does not contain the specified object, the <xref:System.Collections.ArrayList> remains unchanged.</span></span> <span data-ttu-id="01a8c-622">例外をスローすることはありません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-622">No exception is thrown.</span></span>  
  
 <span data-ttu-id="01a8c-623">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.ArrayList.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-623">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="01a8c-624">このメソッドを呼び出すことで等しいかどうかを判断<xref:System.Object.Equals%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-624">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="01a8c-625">リストなどの連続する要素のコレクションでは、空白になった位置を埋めるために、削除された要素の後にある要素の位置が繰り上げられます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-625">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="01a8c-626">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-626">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="01a8c-627">この動作は、要素が概念的にバケットにグループ化されているハッシュ テーブルなどのコレクションには適用されません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-627">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-628">次のコード例は、要素を削除する方法を示しています、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-628">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="01a8c-629">
            <see cref="T:System.Collections.ArrayList" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-629">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="01a8c-630">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-630">-or-</span>
          </span>
          <span data-ttu-id="01a8c-631">
            <see cref="T:System.Collections.ArrayList" /> は固定サイズです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-631">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="01a8c-632">削除する要素の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-632">The zero-based index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-633">
            <see cref="T:System.Collections.ArrayList" /> の指定したインデックスにある要素を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-633">Removes the element at the specified index of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-634">要素が削除されると、コレクションのサイズが調整の値、<xref:System.Collections.ArrayList.Count%2A>プロパティが 1 ずつ減少します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-634">After the element is removed, the size of the collection is adjusted and the value of the <xref:System.Collections.ArrayList.Count%2A> property is decreased by one.</span></span>  
  
 <span data-ttu-id="01a8c-635">リストなどの連続する要素のコレクションでは、空白になった位置を埋めるために、削除された要素の後にある要素の位置が繰り上げられます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-635">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="01a8c-636">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-636">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="01a8c-637">この動作は、要素が概念的にバケットにグループ化されているハッシュ テーブルなどのコレクションには適用されません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-637">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="01a8c-638">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.ArrayList.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-638">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-639">次のコード例は、要素を削除する方法を示しています、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-639">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="01a8c-640">
            <paramref name="index" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-640">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="01a8c-641">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-641">-or-</span>
          </span>
          <span data-ttu-id="01a8c-642">
            <paramref name="index" /> が <see cref="P:System.Collections.ArrayList.Count" /> 以上になっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-642">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="01a8c-643">
            <see cref="T:System.Collections.ArrayList" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-643">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="01a8c-644">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-644">-or-</span>
          </span>
          <span data-ttu-id="01a8c-645">
            <see cref="T:System.Collections.ArrayList" /> は固定サイズです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-645">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public virtual void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveRange(int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="01a8c-646">削除する要素の範囲の開始位置を示す 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-646">The zero-based starting index of the range of elements to remove.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="01a8c-647">削除する要素の数を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-647">The number of elements to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-648">
            <see cref="T:System.Collections.ArrayList" /> から要素の範囲を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-648">Removes a range of elements from the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-649">リストなどの連続する要素のコレクションでは、空白になった位置を埋めるために、削除された要素の後にある要素の位置が繰り上げられます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-649">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="01a8c-650">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-650">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="01a8c-651">この動作は、要素が概念的にバケットにグループ化されているハッシュ テーブルなどのコレクションには適用されません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-651">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="01a8c-652">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.ArrayList.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-652">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-653">次のコード例は、要素を削除する方法を示しています、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-653">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="01a8c-654">
            <paramref name="index" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-654">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="01a8c-655">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-655">-or-</span>
          </span>
          <span data-ttu-id="01a8c-656">
            <paramref name="count" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-656">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01a8c-657">
            <paramref name="index" /> および <paramref name="count" /> が <see cref="T:System.Collections.ArrayList" /> 内の要素の有効範囲を示していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-657">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="01a8c-658">
            <see cref="T:System.Collections.ArrayList" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-658">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="01a8c-659">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-659">-or-</span>
          </span>
          <span data-ttu-id="01a8c-660">
            <see cref="T:System.Collections.ArrayList" /> は固定サイズです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-660">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      </Docs>
    </Member>
    <Member MemberName="Repeat">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Repeat (object value, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Repeat(object value, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Repeat(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Repeat (value As Object, count As Integer) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Repeat(System::Object ^ value, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="01a8c-661">新しい <see cref="T:System.Object" /> で複数回コピーする <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-661">The <see cref="T:System.Object" /> to copy multiple times in the new <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="01a8c-662">値として <see langword="null" /> を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-662">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="01a8c-663">
            <c>value</c> をコピーする回数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-663">The number of times <c>value</c> should be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-664">要素が指定した値のコピーである <see cref="T:System.Collections.ArrayList" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-664">Returns an <see cref="T:System.Collections.ArrayList" /> whose elements are copies of the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a8c-665">
            <paramref name="count" /> 個の要素がある <see cref="T:System.Collections.ArrayList" />。要素はすべて <paramref name="value" /> のコピーです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-665">An <see cref="T:System.Collections.ArrayList" /> with <paramref name="count" /> number of elements, all of which are copies of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-666"><xref:System.Collections.ArrayList> 受け付ける`null`有効な値としてでき、重複する要素。</span><span class="sxs-lookup"><span data-stu-id="01a8c-666"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="01a8c-667">このメソッドは、O (`n`) 操作では、ここで`n`は`count`します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-667">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-668">次のコード例は、作成し、新しい初期化する方法を示しています。<xref:System.Collections.ArrayList>と同じ値です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-668">The following code example shows how to create and initialize a new <xref:System.Collections.ArrayList> with the same value.</span></span>  
  
 [!code-cpp[Classic ArrayList.Repeat Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Repeat Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Repeat Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="01a8c-669">
            <paramref name="count" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-669">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Reverse">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-670">
            <see cref="T:System.Collections.ArrayList" /> またはその一部の要素の順序を反転させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-670">Reverses the order of the elements in the <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public virtual void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reverse();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-671">
            <see cref="T:System.Collections.ArrayList" /> 全体の要素の順序を反転させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-671">Reverses the order of the elements in the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-672">このメソッドを使用して<xref:System.Array.Reverse%2A?displayProperty=nameWithType>、要素の順序を逆になるようにある要素<xref:System.Collections.ArrayList>[i]、i は、範囲内の任意のインデックスに移動<xref:System.Collections.ArrayList>[j] j と等しい`index`  +  `index`  +  `count` -i - 1。</span><span class="sxs-lookup"><span data-stu-id="01a8c-672">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements, such that the element at <xref:System.Collections.ArrayList> [i], where i is any index within the range, moves to <xref:System.Collections.ArrayList> [j], where j equals `index` + `index` + `count` - i - 1.</span></span>  
  
 <span data-ttu-id="01a8c-673">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.ArrayList.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-673">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-674">次のコード例の値の並べ替え順序を反転する方法を示しています、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-674">The following code example shows how to reverse the sort order of the values in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Reverse Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Reverse Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Reverse Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="01a8c-675">
            <see cref="T:System.Collections.ArrayList" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-675">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public virtual void Reverse (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reverse(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reverse (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reverse(int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="01a8c-676">反転させる範囲の開始位置を示す 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-676">The zero-based starting index of the range to reverse.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="01a8c-677">反転させる範囲内にある要素の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-677">The number of elements in the range to reverse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-678">指定した範囲の要素の順序を反転させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-678">Reverses the order of the elements in the specified range.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-679">このメソッドを使用して<xref:System.Array.Reverse%2A?displayProperty=nameWithType>、要素の順序を逆になるようにある要素<xref:System.Collections.ArrayList>[i]、i は、範囲内の任意のインデックスに移動<xref:System.Collections.ArrayList>[j] j と等しい`index`  +  `index`  +  `count` -i - 1。</span><span class="sxs-lookup"><span data-stu-id="01a8c-679">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements, such that the element at <xref:System.Collections.ArrayList> [i], where i is any index within the range, moves to <xref:System.Collections.ArrayList> [j], where j equals `index` + `index` + `count` - i - 1.</span></span>  
  
 <span data-ttu-id="01a8c-680">このメソッドは、O (`n`) 操作では、ここで`n`は`count`します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-680">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-681">次のコード例は、内の要素の範囲内の値の並べ替え順序を反転する方法を示しています、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-681">The following code example shows how to reverse the sort order of the values in a range of elements in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="01a8c-682">
            <paramref name="index" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-682">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="01a8c-683">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-683">-or-</span>
          </span>
          <span data-ttu-id="01a8c-684">
            <paramref name="count" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-684">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01a8c-685">
            <paramref name="index" /> および <paramref name="count" /> が <see cref="T:System.Collections.ArrayList" /> 内の要素の有効範囲を示していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-685">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="01a8c-686">
            <see cref="T:System.Collections.ArrayList" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-686">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetRange">
      <MemberSignature Language="C#" Value="public virtual void SetRange (int index, System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRange(int32 index, class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetRange (index As Integer, c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetRange(int index, System::Collections::ICollection ^ c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="01a8c-687">
            <c>c</c> の要素のコピーを開始する位置を示す、0 から始まる <see cref="T:System.Collections.ArrayList" /> インデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-687">The zero-based <see cref="T:System.Collections.ArrayList" /> index at which to start copying the elements of <c>c</c>.</span>
          </span>
        </param>
        <param name="c">
          <span data-ttu-id="01a8c-688">要素を <see cref="T:System.Collections.ICollection" /> にコピーする <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-688">The <see cref="T:System.Collections.ICollection" /> whose elements to copy to the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="01a8c-689">コレクション自体を <see langword="null" /> にすることはできませんが、コレクションに格納する要素は <see langword="null" /> であってもかまいません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-689">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-690">コレクションの要素を <see cref="T:System.Collections.ArrayList" /> 内の要素の範囲にコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-690">Copies the elements of a collection over a range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-691"><xref:System.Collections.ArrayList> 受け付ける`null`有効な値としてでき、重複する要素。</span><span class="sxs-lookup"><span data-stu-id="01a8c-691"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="01a8c-692">内の要素の順序、<xref:System.Collections.ICollection>内でも維持される、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-692">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="01a8c-693">このメソッドは、O (`n` + 1) 操作では、ここで`n`は<xref:System.Collections.ArrayList.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-693">This method is an O(`n` + 1) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-694">次のコード例は、設定および内の要素の範囲を取得する方法を示しています、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-694">The following code example shows how to set and get a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.SetRange Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.SetRange Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.SetRange Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="01a8c-695">
            <paramref name="index" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-695">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="01a8c-696">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-696">-or-</span>
          </span>
          <span data-ttu-id="01a8c-697">
            <paramref name="index" /> と、<paramref name="c" /> 内の要素の数を合計した値が、<see cref="P:System.Collections.ArrayList.Count" /> よりも大きい値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-697">
              <paramref name="index" /> plus the number of elements in <paramref name="c" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01a8c-698">
            <paramref name="c" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-698">
              <paramref name="c" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="01a8c-699">
            <see cref="T:System.Collections.ArrayList" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-699">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-700">
            <see cref="T:System.Collections.ArrayList" /> またはその一部の要素を並べ替えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-700">Sorts the elements in the <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-701">
            <see cref="T:System.Collections.ArrayList" /> 全体で要素を並べ替えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-701">Sorts the elements in the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-702">このメソッドを使用して<xref:System.Array.Sort%2A?displayProperty=nameWithType>、クイック ソート アルゴリズムを使用します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-702">This method uses <xref:System.Array.Sort%2A?displayProperty=nameWithType>, which uses the QuickSort algorithm.</span></span> <span data-ttu-id="01a8c-703">クイック ソート アルゴリズムは、比較 (不安定な並べ替えとも呼ばれます)、「未満またはと等しい」ことを意味する並べ替え比較操作では、最終的な並べ替えられたリストの最初に現れる必要がありますが 2 つの要素のうちを判断します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-703">The QuickSort algorithm is a comparison sort (also called an unstable sort), which means that a "less than or equal to" comparison operation determines which of two elements should occur first in the final sorted list.</span></span> <span data-ttu-id="01a8c-704">ただし、2 つの要素が等しい場合は、元の順序は保持されません可能性があります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-704">However, if two elements are equal, their original order might not be preserved.</span></span> <span data-ttu-id="01a8c-705">これに対し、安定した並べ替えには、同じである要素の順序が保持されます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-705">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="01a8c-706">安定した並べ替えを実行するのには、カスタムを実装する必要があります<xref:System.Collections.IComparer>でこのメソッドの他のオーバー ロードを使用するインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="01a8c-706">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface to use with the other overloads of this method.</span></span>  
  
 <span data-ttu-id="01a8c-707">平均すると、このメソッドは、O (`n`ログ`n`) 操作、場所`n`は<xref:System.Collections.ArrayList.Count%2A>最悪の場合です。 これは、O (`n`^ 2) 操作です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-707">On average, this method is an O(`n` log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>; in the worst case it is an O(`n`^2) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-708">次のコード例の値を並べ替える方法を示しています、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-708">The following code example shows how to sort the values in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Sort Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Sort Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Sort Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="01a8c-709">
            <see cref="T:System.Collections.ArrayList" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-709">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="01a8c-710">要素を比較する場合に使用する <see cref="T:System.Collections.IComparer" /> の実装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-710">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="01a8c-711">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-711">-or-</span>
          </span>
          <span data-ttu-id="01a8c-712">各要素の <see cref="T:System.IComparable" /> 実装を使用するための null 参照 (Visual Basic の場合は <see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-712">A null reference (<see langword="Nothing" /> in Visual Basic) to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-713">指定した比較子を使用して、<see cref="T:System.Collections.ArrayList" /> 全体内の要素を並べ替えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-713">Sorts the elements in the entire <see cref="T:System.Collections.ArrayList" /> using the specified comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-714">使用して、<xref:System.Collections.ArrayList.Sort%2A>メソッドを実装するカスタムの比較演算子でオブジェクトの一覧を並べ替えることを<xref:System.Collections.IComparer>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="01a8c-714">Use the <xref:System.Collections.ArrayList.Sort%2A> method to  sort a list of objects with a custom comparer that implements the <xref:System.Collections.IComparer> interface.</span></span> <span data-ttu-id="01a8c-715">渡す場合`null`の`comparer`、このメソッドを使用して、<xref:System.IComparable>の各要素によって実装されます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-715">If you pass `null` for `comparer`, this method uses the <xref:System.IComparable> implementation of each element.</span></span> <span data-ttu-id="01a8c-716">この場合、する必要があります、リストに含まれるオブジェクトを実装することを確認して、<xref:System.Collections.IComparer>インターフェイスまたは例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-716">In this case, you must make sure that the objects contained in the list implement the <xref:System.Collections.IComparer> interface or an exception will occur.</span></span>  
  
 <span data-ttu-id="01a8c-717">さらを使用して、<xref:System.IComparable>実装では、リスト (不安定な並べ替えとも呼ばれます) の比較による並べ替えを実行することを意味です。 つまり、2 つの要素が等しい場合、その順序可能性がありますが維持されません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-717">In addition, using the <xref:System.IComparable> implementation means the list performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="01a8c-718">これに対し、安定した並べ替えには、同じである要素の順序が保持されます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-718">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="01a8c-719">安定した並べ替えを実行するのには、カスタムを実装する必要があります<xref:System.Collections.IComparer>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="01a8c-719">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface.</span></span>  
  
 <span data-ttu-id="01a8c-720">平均すると、このメソッドは、O (`n`ログ`n`) 操作、場所`n`は<xref:System.Collections.ArrayList.Count%2A>最悪の場合です。 これは、O (`n`^ 2) 操作です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-720">On average, this method is an O(`n` log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>; in the worst case it is an O(`n`^2) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-721">次のコード例の値を並べ替える方法を示しています、<xref:System.Collections.ArrayList>既定の比較子と並べ替え順序を反転するカスタムの比較演算子を使用します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-721">The following code example shows how to sort the values in an <xref:System.Collections.ArrayList> using the default comparer and a custom comparer that reverses the sort order.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CPP/arraylist_sort2.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CS/arraylist_sort2.cs#1)]
 [!code-vb[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/VB/arraylist_sort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="01a8c-722">
            <see cref="T:System.Collections.ArrayList" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-722">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="01a8c-723">2 つの要素の比較中にエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-723">An error occurred while comparing two elements.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01a8c-724">
            <paramref name="comparer" /> に対して <see langword="null" /> が渡され、リスト内の要素は <see cref="T:System.IComparable" />  を実装しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-724">
              <see langword="null" /> is passed for <paramref name="comparer" />, and the elements in the list do not implement <see cref="T:System.IComparable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (int index, int count, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(int32 index, int32 count, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort (index As Integer, count As Integer, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(int index, int count, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="01a8c-725">並べ替える範囲の開始位置を示す 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-725">The zero-based starting index of the range to sort.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="01a8c-726">並べ替える範囲の長さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-726">The length of the range to sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="01a8c-727">要素を比較する場合に使用する <see cref="T:System.Collections.IComparer" /> の実装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-727">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="01a8c-728">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-728">-or-</span>
          </span>
          <span data-ttu-id="01a8c-729">各要素の <see cref="T:System.IComparable" /> 実装を使用するための null 参照 (Visual Basic の場合は <see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-729">A null reference (<see langword="Nothing" /> in Visual Basic) to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-730">指定した比較子を使用して、<see cref="T:System.Collections.ArrayList" /> 内の要素の範囲内の要素を並べ替えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-730">Sorts the elements in a range of elements in <see cref="T:System.Collections.ArrayList" /> using the specified comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-731">場合`comparer`に設定されている`null`、このメソッドは、(不安定な並べ替えとも呼ばれます) の比較による並べ替えを実行します。 つまり、2 つの要素が等しい場合、その順序可能性がありますが維持されません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-731">If `comparer` is set to `null`, this method performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="01a8c-732">これに対し、安定した並べ替えには、同じである要素の順序が保持されます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-732">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="01a8c-733">安定した並べ替えを実行するのには、カスタムを実装する必要があります<xref:System.Collections.IComparer>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="01a8c-733">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface.</span></span>  
  
 <span data-ttu-id="01a8c-734">平均すると、このメソッドは、O (`n`ログ`n`) 操作、場所`n`は`count`; 最悪のケースで O(n^2) 操作であります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-734">On average, this method is an O(`n` log `n`) operation, where `n` is `count`; in the worst case it is an O(n^2) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-735">次のコード例は、内の要素の範囲の値を並べ替える方法を示しています、<xref:System.Collections.ArrayList>既定の比較子と並べ替え順序を反転するカスタムの比較演算子を使用します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-735">The following code example shows how to sort the values in a range of elements in an <xref:System.Collections.ArrayList> using the default comparer and a custom comparer that reverses the sort order.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/CPP/arraylist_sort3.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/CS/arraylist_sort3.cs#1)]
 [!code-vb[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/VB/arraylist_sort3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="01a8c-736">
            <paramref name="index" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-736">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="01a8c-737">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-737">-or-</span>
          </span>
          <span data-ttu-id="01a8c-738">
            <paramref name="count" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-738">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="01a8c-739">
            <paramref name="index" /> および <paramref name="count" /> は <see cref="T:System.Collections.ArrayList" /> において有効な範囲を指定していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-739">
              <paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="01a8c-740">
            <see cref="T:System.Collections.ArrayList" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-740">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="01a8c-741">2 つの要素の比較中にエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-741">An error occurred while comparing two elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Synchronized">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-742">同期されている (スレッド セーフな) リスト ラッパーを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-742">Returns a list wrapper that is synchronized (thread safe).</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Synchronized (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Synchronized(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Synchronized(System::Collections::ArrayList ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="01a8c-743">同期する <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-743">The <see cref="T:System.Collections.ArrayList" /> to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-744">同期されている (スレッド セーフな) <see cref="T:System.Collections.ArrayList" /> ラッパーを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-744">Returns an <see cref="T:System.Collections.ArrayList" /> wrapper that is synchronized (thread safe).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a8c-745">同期されている (スレッド セーフな) <see cref="T:System.Collections.ArrayList" /> ラッパー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-745">An <see cref="T:System.Collections.ArrayList" /> wrapper that is synchronized (thread safe).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-746">スレッド セーフを確保する、 <xref:System.Collections.ArrayList>、このラッパーを通じて、すべての操作を行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-746">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through this wrapper.</span></span>  
  
 <span data-ttu-id="01a8c-747">コレクションの列挙は、本質的にスレッド セーフなプロシージャではありません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-747">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="01a8c-748">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-748">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="01a8c-749">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-749">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-750">次のコード例を使用してコレクションをロックする方法を示しています、<xref:System.Collections.ArrayList.SyncRoot%2A>列挙中にします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-750">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="01a8c-751">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-751">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="01a8c-752">次のコード例は、同期する方法を示します、 <xref:System.Collections.ArrayList>、かどうかを<xref:System.Collections.ArrayList>が同期されているし、同期を使用して<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-752">The following code example shows how to synchronize an <xref:System.Collections.ArrayList>, determine if an <xref:System.Collections.ArrayList> is synchronized and use a synchronized <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01a8c-753">
            <paramref name="list" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-753">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.IList Synchronized (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList Synchronized(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ Synchronized(System::Collections::IList ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="01a8c-754">同期する <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-754">The <see cref="T:System.Collections.IList" /> to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-755">同期されている (スレッド セーフな) <see cref="T:System.Collections.IList" /> ラッパーを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-755">Returns an <see cref="T:System.Collections.IList" /> wrapper that is synchronized (thread safe).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a8c-756">同期されている (スレッド セーフな) <see cref="T:System.Collections.IList" /> ラッパー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-756">An <see cref="T:System.Collections.IList" /> wrapper that is synchronized (thread safe).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-757">スレッド セーフを確保する、 <xref:System.Collections.ArrayList>、このラッパーを通じて、すべての操作を行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-757">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through this wrapper.</span></span>  
  
 <span data-ttu-id="01a8c-758">コレクションの列挙は、本質的にスレッド セーフなプロシージャではありません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-758">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="01a8c-759">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-759">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="01a8c-760">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-760">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-761">次のコード例を使用してコレクションをロックする方法を示しています、<xref:System.Collections.ArrayList.SyncRoot%2A>列挙中にします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-761">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="01a8c-762">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-762">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01a8c-763">
            <paramref name="list" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-763">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-764">
            <see cref="T:System.Collections.ArrayList" /> へのアクセスを同期するために使用できるオブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-764">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="01a8c-765">
            <see cref="T:System.Collections.ArrayList" /> へのアクセスの同期に使用できるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-765">An object that can be used to synchronize access to the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-766">同期されたバージョンを作成する、<xref:System.Collections.ArrayList>を使用して、<xref:System.Collections.ArrayList.Synchronized%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="01a8c-766">To create a synchronized version of the <xref:System.Collections.ArrayList>, use the <xref:System.Collections.ArrayList.Synchronized%2A> method.</span></span> <span data-ttu-id="01a8c-767">ただし、派生クラスは、独自の同期されたバージョンを指定、<xref:System.Collections.ArrayList>を使用して、<xref:System.Collections.ArrayList.SyncRoot%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="01a8c-767">However, derived classes can provide their own synchronized version of the <xref:System.Collections.ArrayList> using the <xref:System.Collections.ArrayList.SyncRoot%2A> property.</span></span> <span data-ttu-id="01a8c-768">同期されたコードで操作を実行する必要があります、<xref:System.Collections.ArrayList.SyncRoot%2A>の<xref:System.Collections.ArrayList>、上で直接、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-768">The synchronizing code must perform operations on the <xref:System.Collections.ArrayList.SyncRoot%2A> of the <xref:System.Collections.ArrayList>, not directly on the <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="01a8c-769">これにより、他のオブジェクトから派生したコレクションを適切に操作できるようになります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-769">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="01a8c-770">具体的には、同時に変更する可能性がある別スレッドとの適切な同期を維持、<xref:System.Collections.ArrayList>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="01a8c-770">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.ArrayList> object.</span></span>  
  
 <span data-ttu-id="01a8c-771">コレクションの列挙は、本質的にスレッド セーフなプロシージャではありません。</span><span class="sxs-lookup"><span data-stu-id="01a8c-771">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="01a8c-772">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-772">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="01a8c-773">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-773">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-774">次のコード例を使用してコレクションをロックする方法を示しています、<xref:System.Collections.ArrayList.SyncRoot%2A>列挙中にします。</span><span class="sxs-lookup"><span data-stu-id="01a8c-774">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="01a8c-775">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="01a8c-775">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
        <altmember cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToArray">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-776">
            <see cref="T:System.Collections.ArrayList" /> の要素を新しい配列にコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-776">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public virtual object[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToArray () As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ ToArray();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-777">
            <see cref="T:System.Collections.ArrayList" /> の要素を新しい <see cref="T:System.Object" /> 配列にコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-777">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new <see cref="T:System.Object" /> array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a8c-778">
            <see cref="T:System.Object" /> の要素のコピーを格納する <see cref="T:System.Collections.ArrayList" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-778">An <see cref="T:System.Object" /> array containing copies of the elements of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-779">要素のコピーを使用して<xref:System.Array.Copy%2A?displayProperty=nameWithType>、これは、O (`n`) 操作、場所`n`は<xref:System.Collections.ArrayList.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-779">The elements are copied using <xref:System.Array.Copy%2A?displayProperty=nameWithType>, which is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public virtual Array ToArray (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Array ToArray(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ToArray(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Array ^ ToArray(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="01a8c-780">要素を作成およびコピーする対象となる配列の要素 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-780">The element <see cref="T:System.Type" /> of the destination array to create and copy elements to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a8c-781">
            <see cref="T:System.Collections.ArrayList" /> の要素を、指定した要素型の新しい配列にコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-781">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new array of the specified element type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a8c-782">
            <see cref="T:System.Collections.ArrayList" /> の要素のコピーを格納する、指定した要素型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-782">An array of the specified element type containing copies of the elements of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-783">すべてのオブジェクトの<xref:System.Collections.ArrayList>オブジェクトにキャストされます、<xref:System.Type>で指定されている、`type`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="01a8c-783">All of the objects in the <xref:System.Collections.ArrayList> object will be cast to the <xref:System.Type> specified in the `type` parameter.</span></span>  
  
 <span data-ttu-id="01a8c-784">要素のコピーを使用して<xref:System.Array.Copy%2A?displayProperty=nameWithType>、これは、O (`n`) 操作、場所`n`は<xref:System.Collections.ArrayList.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-784">The elements are copied using <xref:System.Array.Copy%2A?displayProperty=nameWithType>, which is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-785">コピーの例を次の要素をコピーする方法を示しています、<xref:System.Collections.ArrayList>を文字列配列。</span><span class="sxs-lookup"><span data-stu-id="01a8c-785">The following copy example shows how to copy the elements of an <xref:System.Collections.ArrayList> to a string array.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.ToArray#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/CPP/arraylist_toarray.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.ToArray#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/CS/arraylist_toarray.cs#1)]
 [!code-vb[System.Collections.ArrayList.ToArray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/VB/arraylist_toarray.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01a8c-786">
            <paramref name="type" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-786">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="01a8c-787">コピー元の <see cref="T:System.Collections.ArrayList" /> の型が、指定した型に自動的にキャストできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-787">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the specified type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="TrimToSize">
      <MemberSignature Language="C#" Value="public virtual void TrimToSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimToSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.TrimToSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimToSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimToSize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="01a8c-788">容量を <see cref="T:System.Collections.ArrayList" /> 内にある実際の要素数に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-788">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a8c-789">このメソッドは、コレクションのメモリ オーバーヘッドを最小要素がコレクションに追加されない場合に使用できます。</span><span class="sxs-lookup"><span data-stu-id="01a8c-789">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span>  
  
 <span data-ttu-id="01a8c-790">リセットする、<xref:System.Collections.ArrayList>を初期状態に呼び出し、<xref:System.Collections.ArrayList.Clear%2A>メソッドを呼び出す前に<xref:System.Collections.ArrayList.TrimToSize%2A>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-790">To reset a <xref:System.Collections.ArrayList> to its initial state, call the <xref:System.Collections.ArrayList.Clear%2A> method before calling <xref:System.Collections.ArrayList.TrimToSize%2A>.</span></span> <span data-ttu-id="01a8c-791">空のトリミング<xref:System.Collections.ArrayList>のキャパシティを設定、<xref:System.Collections.ArrayList>を既定の容量。</span><span class="sxs-lookup"><span data-stu-id="01a8c-791">Trimming an empty <xref:System.Collections.ArrayList> sets the capacity of the <xref:System.Collections.ArrayList> to the default capacity.</span></span>  
  
 <span data-ttu-id="01a8c-792">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.ArrayList.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="01a8c-792">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a8c-793">次のコード例の未使用部分をトリミングする方法を示しています、<xref:System.Collections.ArrayList>の値をクリアする方法と、<xref:System.Collections.ArrayList>です。</span><span class="sxs-lookup"><span data-stu-id="01a8c-793">The following code example shows how to trim the unused portions of the <xref:System.Collections.ArrayList> and how to clear the values of the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="01a8c-794">
            <see cref="T:System.Collections.ArrayList" /> は読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-794">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="01a8c-795">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-795">-or-</span>
          </span>
          <span data-ttu-id="01a8c-796">
            <see cref="T:System.Collections.ArrayList" /> は固定サイズです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a8c-796">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.Clear" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
  </Members>
</Type>