<Type Name="IStructuralEquatable" FullName="System.Collections.IStructuralEquatable">
  <TypeSignature Language="C#" Value="public interface IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralEquatable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralEquatable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralEquatable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="64e73-101">オブジェクトの構造が等価かどうかの比較をサポートするメソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="64e73-101">Defines methods to support the comparison of objects for structural equality.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e73-102">構造の等価では、同じ値が 2 つのオブジェクトが等しいことを意味します。</span><span class="sxs-lookup"><span data-stu-id="64e73-102">Structural equality means that two objects are equal because they have equal values.</span></span> <span data-ttu-id="64e73-103">同じ物理オブジェクトを参照している 2 つのオブジェクト参照が等しいことを示す参照の等価性とは異なります。</span><span class="sxs-lookup"><span data-stu-id="64e73-103">It differs from reference equality, which indicates that two object references are equal because they reference the same physical object.</span></span> <span data-ttu-id="64e73-104"><xref:System.Collections.IStructuralEquatable>インターフェイスでは、コレクション オブジェクトの構造の等価性を確認するカスタムの比較を実装することができます。</span><span class="sxs-lookup"><span data-stu-id="64e73-104">The <xref:System.Collections.IStructuralEquatable> interface enables you to implement customized comparisons to check for the structural equality of collection objects.</span></span> <span data-ttu-id="64e73-105">つまり、構造の等価の定義を作成し、コレクション型を受け入れると、この定義を使用するように指定、<xref:System.Collections.IStructuralEquatable>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="64e73-105">That is, you can create your own definition of structural equality and specify that this definition be used with a collection type that accepts the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="64e73-106">インターフェイスが 2 つのメンバー: <xref:System.Collections.IStructuralEquatable.Equals%2A>、指定されたを使用して、等しいかどうかをテスト<xref:System.Collections.IEqualityComparer>実装と<xref:System.Collections.IStructuralEquatable.GetHashCode%2A>と同じであるオブジェクトの同一のハッシュ コードが返されます。</span><span class="sxs-lookup"><span data-stu-id="64e73-106">The interface has two members: <xref:System.Collections.IStructuralEquatable.Equals%2A>, which tests for equality by using a specified <xref:System.Collections.IEqualityComparer> implementation, and <xref:System.Collections.IStructuralEquatable.GetHashCode%2A>, which returns identical hash codes for objects that are equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64e73-107"><xref:System.Collections.IStructuralEquatable>インターフェイスは、構造の等価のカスタムの比較だけをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="64e73-107">The <xref:System.Collections.IStructuralEquatable> interface supports only custom comparisons for structural equality.</span></span> <span data-ttu-id="64e73-108"><xref:System.Collections.IStructuralComparable>インターフェイスは、並べ替えと順序付けのカスタムの構造比較をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="64e73-108">The <xref:System.Collections.IStructuralComparable> interface supports custom structural comparisons for sorting and ordering.</span></span>  
  
 <span data-ttu-id="64e73-109">.NET Framework も用意されています既定等値比較子によって返される、<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>と<xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="64e73-109">The .NET Framework also provides default equality comparers, which are returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> and <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="64e73-110">詳細については、例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="64e73-110">For more information, see the example.</span></span>  
  
 <span data-ttu-id="64e73-111">ジェネリック組クラス (<xref:System.Tuple%601>、 <xref:System.Tuple%602>、<xref:System.Tuple%603>など)、および<xref:System.Array>クラスの明示的な実装を提供する、<xref:System.Collections.IStructuralEquatable>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="64e73-111">The generic tuple classes (<xref:System.Tuple%601>, <xref:System.Tuple%602>, <xref:System.Tuple%603>, and so on) and the <xref:System.Array> class provide explicit implementations of the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="64e73-112">キャスト (c#) またはへの変換 (Visual Basic) の配列または組の現在のインスタンスによって、<xref:System.Collections.IStructuralEquatable>インターフェイス値を提供して、<xref:System.Collections.IEqualityComparer>実装への引数として、<xref:System.Collections.IStructuralEquatable.Equals%2A>メソッド、配列またはコレクションのカスタムの等値比較を定義することができます。</span><span class="sxs-lookup"><span data-stu-id="64e73-112">By casting (in C#) or converting (in Visual Basic) the current instance of an array or tuple to an <xref:System.Collections.IStructuralEquatable> interface value and providing your <xref:System.Collections.IEqualityComparer> implementation as an argument to the <xref:System.Collections.IStructuralEquatable.Equals%2A> method, you can define a custom equality comparison for the array or collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64e73-113">既定の等値比較子`EqualityComparer<Object>.Default.Equals`、2 つと見なします`NaN`値と等しくなります。</span><span class="sxs-lookup"><span data-stu-id="64e73-113">The default equality comparer, `EqualityComparer<Object>.Default.Equals`, considers two `NaN` values to be equal.</span></span> <span data-ttu-id="64e73-114">ただし、場合によっては、比較することがあります`NaN`値が等しいかどうかを返す`false`値を比較できないことを示します。</span><span class="sxs-lookup"><span data-stu-id="64e73-114">However, in some cases, you may want the comparison of `NaN` values for equality to return `false`, which indicates that the values cannot be compared.</span></span> <span data-ttu-id="64e73-115">次の例では、`NanComparer` インターフェイスを実装する <xref:System.Collections.IStructuralEquatable> クラスを定義しています。</span><span class="sxs-lookup"><span data-stu-id="64e73-115">The following example defines a `NanComparer` class that implements the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="64e73-116">2 つを比較して<xref:System.Double>または 2 つ<xref:System.Single>等値演算子を使用して値。</span><span class="sxs-lookup"><span data-stu-id="64e73-116">It compares two <xref:System.Double> or two <xref:System.Single> values by using the equality operator.</span></span> <span data-ttu-id="64e73-117">既定の等値比較子をその他の種類の値を渡します。</span><span class="sxs-lookup"><span data-stu-id="64e73-117">It passes values of any other type to the default equality comparer.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 <span data-ttu-id="64e73-118">次の例では、3 つの構成要素、2 つの同一の 3 組オブジェクト<xref:System.Double>値。</span><span class="sxs-lookup"><span data-stu-id="64e73-118">The following example creates two identical 3-tuple objects whose components consist of three <xref:System.Double> values.</span></span> <span data-ttu-id="64e73-119">2 番目のコンポーネントの値が<xref:System.Double.NaN?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="64e73-119">The value of the second component is <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="64e73-120">この例では、<xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType>メソッド、およびそれを呼び出す、<xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType>メソッドを 3 回です。</span><span class="sxs-lookup"><span data-stu-id="64e73-120">The example then calls the <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> method, and it calls the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method three times.</span></span> <span data-ttu-id="64e73-121">によって返される既定の等値比較子を渡しますが、初めて、<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="64e73-121">The first time, it passes the default equality comparer that is returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="64e73-122">によって返される既定の等値比較子を渡すこと、2 回目、<xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="64e73-122">The second time, it passes the default equality comparer that is returned by the <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="64e73-123">3 番目の時間では、カスタム渡します`NanComparer`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="64e73-123">The third time, it passes the custom `NanComparer` object.</span></span> <span data-ttu-id="64e73-124">最初の 3 つのメソッド呼び出しを返すように、例からの出力を示しています、`true`が 4 番目の呼び出しが戻る、`false`です。</span><span class="sxs-lookup"><span data-stu-id="64e73-124">As the output from the example shows, the first three method calls return `true`, whereas the fourth call returns `false`.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEqualityComparer" />
    <altmember cref="T:System.Collections.IStructuralComparable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object, comparer As IEqualityComparer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="64e73-125">現在のインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="64e73-125">The object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="64e73-126">現在のインスタンスと <c>other</c> が等しいかどうかを判断するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="64e73-126">An object that determines whether the current instance and <c>other</c> are equal.</span></span></param>
        <summary><span data-ttu-id="64e73-127">オブジェクトが現在のインスタンスと構造的に等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="64e73-127">Determines whether an object is structurally equal to the current instance.</span></span></summary>
        <returns>
          <span data-ttu-id="64e73-128">2 つのオブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="64e73-128"><see langword="true" /> if the two objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e73-129"><xref:System.Collections.IStructuralEquatable.Equals%2A>メソッドは、配列とタプル オブジェクトのカスタムの構造比較をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="64e73-129">The <xref:System.Collections.IStructuralEquatable.Equals%2A> method supports custom structural comparison of array and tuple objects.</span></span> <span data-ttu-id="64e73-130">このメソッドを呼び出します、`comparer`オブジェクトの<xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>配列の各要素または以降の最初の要素またはコンポーネントで、タプル コンポーネントを比較するメソッド。</span><span class="sxs-lookup"><span data-stu-id="64e73-130">This method in turn calls the `comparer` object's <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> method to compare individual array elements or tuple components, starting with the first element or component.</span></span> <span data-ttu-id="64e73-131">個々 の呼び出し<xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>終了と<xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType>メソッド値を返すか、メソッドの呼び出しが戻るとき`false`またはすべての配列の要素または組のコンポーネントが比較された後にします。</span><span class="sxs-lookup"><span data-stu-id="64e73-131">The individual calls to <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> end and the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method returns a value either when a method call returns `false` or after all array elements or tuple components have been compared.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64e73-132">既定の等値比較子`EqualityComparer<Object>.Default.Equals`、2 つと見なします`NaN`値と等しくなります。</span><span class="sxs-lookup"><span data-stu-id="64e73-132">The default equality comparer, `EqualityComparer<Object>.Default.Equals`, considers two `NaN` values to be equal.</span></span> <span data-ttu-id="64e73-133">ただし、場合によっては、比較することがあります`NaN`値が等しいかどうかを返す`false`値を比較できないことを示します。</span><span class="sxs-lookup"><span data-stu-id="64e73-133">However, in some cases, you may want the comparison of `NaN` values for equality to return `false`, which indicates that the values cannot be compared.</span></span> <span data-ttu-id="64e73-134">次の例では、`NanComparer` インターフェイスを実装する <xref:System.Collections.IStructuralEquatable> クラスを定義しています。</span><span class="sxs-lookup"><span data-stu-id="64e73-134">The following example defines a `NanComparer` class that implements the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="64e73-135">2 つを比較して<xref:System.Double>または 2 つ<xref:System.Single>等値演算子を使用して値。</span><span class="sxs-lookup"><span data-stu-id="64e73-135">It compares two <xref:System.Double> or two <xref:System.Single> values by using the equality operator.</span></span> <span data-ttu-id="64e73-136">既定の等値比較子をその他の種類の値を渡します。</span><span class="sxs-lookup"><span data-stu-id="64e73-136">It passes values of any other type to the default equality comparer.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 <span data-ttu-id="64e73-137">次の例では、3 つの構成要素、2 つの同一の 3 組オブジェクト<xref:System.Double>値。</span><span class="sxs-lookup"><span data-stu-id="64e73-137">The following example creates two identical 3-tuple objects whose components consist of three <xref:System.Double> values.</span></span> <span data-ttu-id="64e73-138">2 番目のコンポーネントの値が<xref:System.Double.NaN?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="64e73-138">The value of the second component is <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="64e73-139">この例では、<xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType>メソッド、およびそれを呼び出す、<xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType>メソッドを 3 回です。</span><span class="sxs-lookup"><span data-stu-id="64e73-139">The example then calls the <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> method, and it calls the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method three times.</span></span> <span data-ttu-id="64e73-140">によって返される既定の等値比較子を渡しますが、初めて、<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="64e73-140">The first time, it passes the default equality comparer that is returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="64e73-141">によって返される既定の等値比較子を渡すこと、2 回目、<xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="64e73-141">The second time, it passes the default equality comparer that is returned by the <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="64e73-142">3 番目の時間では、カスタム渡します`NanComparer`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="64e73-142">The third time, it passes the custom `NanComparer` object.</span></span> <span data-ttu-id="64e73-143">最初の 3 つのメソッド呼び出しを返すように、例からの出力を示しています、`true`が 4 番目の呼び出しが戻る、`false`です。</span><span class="sxs-lookup"><span data-stu-id="64e73-143">As the output from the example shows, the first three method calls return `true`, whereas the fourth call returns `false`.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (comparer As IEqualityComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(System::Collections::IEqualityComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="64e73-144">現在のオブジェクトのハッシュ コードを計算するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="64e73-144">An object that computes the hash code of the current object.</span></span></param>
        <summary><span data-ttu-id="64e73-145">現在のインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="64e73-145">Returns a hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="64e73-146">現在のインスタンスのハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="64e73-146">The hash code for the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e73-147">カスタマイズされた比較によって提供される構造の等価性に対応するコレクション オブジェクトのカスタマイズされたハッシュ コードを返すには、このメソッドを実装、<xref:System.Collections.IStructuralEquatable.Equals%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="64e73-147">Implement this method to return customized hash codes for collection objects that correspond to the customized comparison for structural equality provided by the <xref:System.Collections.IStructuralEquatable.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="64e73-148">場合、<see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" />メソッドを返します。<see langword="true" />によって 2 つのオブジェクトの値が返される、 <see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /> 2 つのオブジェクトのメソッドを等しいもする必要があります。</span><span class="sxs-lookup"><span data-stu-id="64e73-148">If the <see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /> method returns <see langword="true" /> for two objects, the values returned by the <see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /> method for the two objects must also be equal.</span></span></para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>