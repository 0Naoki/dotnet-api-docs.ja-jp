<Type Name="IStructuralEquatable" FullName="System.Collections.IStructuralEquatable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="46e9881e5a687f951730fba30e320133ed7f95be" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69333690" /></Metadata><TypeSignature Language="C#" Value="public interface IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralEquatable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralEquatable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type IStructuralEquatable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>オブジェクトの構造上の等価性比較をサポートするメソッドを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 構造的等価性とは、2つのオブジェクトが等しい値を持つために等しいことを意味します。 これは、同じ物理オブジェクトを参照するため、2つのオブジェクト参照が等しいことを示す、参照の等価性とは異なります。 <xref:System.Collections.IStructuralEquatable>インターフェイスを使用すると、コレクションオブジェクトの構造的等価性を確認するためのカスタマイズされた比較を実装できます。 つまり、構造的等価性の独自の定義を作成し、インターフェイスを<xref:System.Collections.IStructuralEquatable>受け入れるコレクション型でこの定義を使用するように指定できます。 インターフェイスには、という<xref:System.Collections.IStructuralEquatable.Equals%2A>2 つのメンバーがあります。これ<xref:System.Collections.IEqualityComparer>は、指定<xref:System.Collections.IStructuralEquatable.GetHashCode%2A>された実装を使用して等しいかどうかをテストし、同じハッシュコードを等しいオブジェクトに対して返すを行います。  
  
> [!NOTE]
>  インターフェイス<xref:System.Collections.IStructuralEquatable>では、構造的等価性のためのカスタム比較のみがサポートされます。 インターフェイス<xref:System.Collections.IStructuralComparable>では、並べ替えと順序付けのためのカスタムの構造的比較がサポートされています。  
  
 .NET Framework には、プロパティ<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>と<xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType>プロパティによって返される既定の等値比較子も用意されています。 詳細については、例を参照してください。  
  
 ジェネリックのタプルクラス (<xref:System.Tuple%601>、 <xref:System.Tuple%602>、<xref:System.Tuple%603>など)、<xref:System.Array>クラスの明示的な実装を提供する、<xref:System.Collections.IStructuralEquatable>インターフェイス。 配列または組C#の現在のインスタンスを<xref:System.Collections.IStructuralEquatable>インターフェイス<xref:System.Collections.IEqualityComparer>値にキャスト (in) または変換 (Visual Basic) し、実装を引数として<xref:System.Collections.IStructuralEquatable.Equals%2A>メソッドに渡すことで、カスタムの等価性を定義できます。配列またはコレクションの比較。  
  
   
  
## Examples  
 既定の等値比較`EqualityComparer<Object>.Default.Equals`子は、 `NaN` 2 つの値が等しいと見なされます。 ただし、場合によっては、値の`NaN`等価性の比較によってが返さ`false`れることがあります。これは、値を比較できないことを示します。 次の例では、 `NanComparer` インターフェイスを実装する <xref:System.Collections.IStructuralEquatable> クラスを定義しています。 等値演算子<xref:System.Double>を使用<xref:System.Single>して、2つまたは2つの値を比較します。 これは、他の型の値を既定の等値比較子に渡します。  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 次の例では、3 <xref:System.Double>つの値で構成されるコンポーネントを持つ2つの同一の3タプルオブジェクトを作成します。 2番目のコンポーネントの値<xref:System.Double.NaN?displayProperty=nameWithType>はです。 この例では、 <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType>メソッドを呼び出し、 <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType>メソッドを3回呼び出します。 最初に、 <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>プロパティによって返される既定の等値比較子を渡します。 2回目は、 <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType>プロパティによって返される既定の等値比較子を渡します。 3回目は、カスタム`NanComparer`オブジェクトを渡します。 例の出力が示すように、最初の3つのメソッド`true`の呼び出しはを返します`false`が、4番目の呼び出しはを返します。  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEqualityComparer" />
    <altmember cref="T:System.Collections.IStructuralComparable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object, comparer As IEqualityComparer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj * System.Collections.IEqualityComparer -&gt; bool" Usage="iStructuralEquatable.Equals (other, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">現在のインスタンスと比較するオブジェクト。</param>
        <param name="comparer">現在のインスタンスと <paramref name="other" /> が等しいかどうかを判断するオブジェクト。</param>
        <summary>オブジェクトが現在のインスタンスと構造的に等しいかどうかを判断します。</summary>
        <returns>2 つのオブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Collections.IStructuralEquatable.Equals%2A>は、配列および組オブジェクトのカスタム構造比較をサポートしています。 次に、このメソッドは`comparer` 、オブジェクト<xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>のメソッドを呼び出して、最初の要素またはコンポーネントを開始位置として、個々の配列要素またはタプルコンポーネントを比較します。 メソッド呼び出しから制御<xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>が戻っ`false`た<xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType>とき、またはすべての配列要素または組コンポーネントが比較された後に、終了する個々の呼び出しとメソッドが値を返します。  
  
   
  
## Examples  
 既定の等値比較`EqualityComparer<Object>.Default.Equals`子は、 `NaN` 2 つの値が等しいと見なされます。 ただし、場合によっては、値の`NaN`等価性の比較によってが返さ`false`れることがあります。これは、値を比較できないことを示します。 次の例では、 `NanComparer` インターフェイスを実装する <xref:System.Collections.IStructuralEquatable> クラスを定義しています。 等値演算子<xref:System.Double>を使用<xref:System.Single>して、2つまたは2つの値を比較します。 これは、他の型の値を既定の等値比較子に渡します。  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 次の例では、3 <xref:System.Double>つの値で構成されるコンポーネントを持つ2つの同一の3タプルオブジェクトを作成します。 2番目のコンポーネントの値<xref:System.Double.NaN?displayProperty=nameWithType>はです。 この例では、 <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType>メソッドを呼び出し、 <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType>メソッドを3回呼び出します。 最初に、 <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>プロパティによって返される既定の等値比較子を渡します。 2回目は、 <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType>プロパティによって返される既定の等値比較子を渡します。 3回目は、カスタム`NanComparer`オブジェクトを渡します。 例の出力が示すように、最初の3つのメソッド`true`の呼び出しはを返します`false`が、4番目の呼び出しはを返します。  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (comparer As IEqualityComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : System.Collections.IEqualityComparer -&gt; int" Usage="iStructuralEquatable.GetHashCode comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">現在のオブジェクトのハッシュ コードを計算するオブジェクト。</param>
        <summary>現在のインスタンスのハッシュ コードを返します。</summary>
        <returns>現在のインスタンスのハッシュ コード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを実装すると、 <xref:System.Collections.IStructuralEquatable.Equals%2A>メソッドによって提供される構造的等価性のカスタマイズされた比較に対応するコレクションオブジェクトのカスタマイズされたハッシュコードを返すことができます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>2つ<see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" />のオブジェクト<see langword="true" />に対してメソッドがを返す場合、 <see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /> 2 つのオブジェクトに対してメソッドによって返される値も同じである必要があります。</para></block>
      </Docs>
    </Member>
  </Members>
</Type>
