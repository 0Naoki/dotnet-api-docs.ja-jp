<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IStructuralEquatable.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e79517aa8dab302204c461cf349e6d34f100645e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e79517aa8dab302204c461cf349e6d34f100645e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.IStructuralEquatable">
          <source>Defines methods to support the comparison of objects for structural equality.</source>
          <target state="translated">オブジェクトの構造が等価かどうかの比較をサポートするメソッドを定義します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>Structural equality means that two objects are equal because they have equal values.</source>
          <target state="translated">構造の等価では、同じ値が 2 つのオブジェクトが等しいことを意味します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>It differs from reference equality, which indicates that two object references are equal because they reference the same physical object.</source>
          <target state="translated">同じ物理オブジェクトを参照している 2 つのオブジェクト参照が等しいことを示す参照の等価性とは異なります。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface enables you to implement customized comparisons to check for the structural equality of collection objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph>インターフェイスでは、コレクション オブジェクトの構造の等価性を確認するカスタムの比較を実装することができます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>That is, you can create your own definition of structural equality and specify that this definition be used with a collection type that accepts the <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">つまり、構造の等価の定義を作成し、コレクション型を受け入れると、この定義を使用するように指定、<ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The interface has two members: <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph>, which tests for equality by using a specified <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> implementation, and <ph id="ph3">&lt;xref:System.Collections.IStructuralEquatable.GetHashCode%2A&gt;</ph>, which returns identical hash codes for objects that are equal.</source>
          <target state="translated">インターフェイスが 2 つのメンバー: <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph>、指定されたを使用して、等しいかどうかをテスト<ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph>実装と<ph id="ph3">&lt;xref:System.Collections.IStructuralEquatable.GetHashCode%2A&gt;</ph>と同じであるオブジェクトの同一のハッシュ コードが返されます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface supports only custom comparisons for structural equality.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph>インターフェイスは、構造の等価のカスタムの比較だけをサポートしています。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interface supports custom structural comparisons for sorting and ordering.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IStructuralComparable&gt;</ph>インターフェイスは、並べ替えと順序付けのカスタムの構造比較をサポートしています。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The .NET Framework also provides default equality comparers, which are returned by the <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
          <target state="translated">.NET Framework も用意されています既定等値比較子によって返される、<ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>For more information, see the example.</source>
          <target state="translated">詳細については、例を参照してください。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The generic tuple classes (<ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%602&gt;</ph>, <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph>, and so on) and the <ph id="ph4">&lt;xref:System.Array&gt;</ph> class provide explicit implementations of the <ph id="ph5">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">ジェネリック組クラス (<ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph>、 <ph id="ph2">&lt;xref:System.Tuple%602&gt;</ph>、<ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph>など)、および<ph id="ph4">&lt;xref:System.Array&gt;</ph>クラスの明示的な実装を提供する、<ph id="ph5">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>By casting (in C#) or converting (in Visual Basic) the current instance of an array or tuple to an <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface value and providing your <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> implementation as an argument to the <ph id="ph3">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph> method, you can define a custom equality comparison for the array or collection.</source>
          <target state="translated">キャスト (c#) またはへの変換 (Visual Basic) の配列または組の現在のインスタンスによって、<ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph>インターフェイス値を提供して、<ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph>実装への引数として、<ph id="ph3">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph>メソッド、配列またはコレクションのカスタムの等値比較を定義することができます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The default equality comparer, <ph id="ph1">`EqualityComparer&lt;Object&gt;.Default.Equals`</ph>, considers two <ph id="ph2">`NaN`</ph> values to be equal.</source>
          <target state="translated">既定の等値比較子<ph id="ph1">`EqualityComparer&lt;Object&gt;.Default.Equals`</ph>、2 つと見なします<ph id="ph2">`NaN`</ph>値と等しくなります。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>However, in some cases, you may want the comparison of <ph id="ph1">`NaN`</ph> values for equality to return <ph id="ph2">`false`</ph>, which indicates that the values cannot be compared.</source>
          <target state="translated">ただし、場合によっては、比較することがあります<ph id="ph1">`NaN`</ph>値が等しいかどうかを返す<ph id="ph2">`false`</ph>値を比較できないことを示します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The following example defines a <ph id="ph1">`NanComparer`</ph> class that implements the <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">次の例では、<ph id="ph1">`NanComparer`</ph> インターフェイスを実装する <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> クラスを定義しています。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>It compares two <ph id="ph1">&lt;xref:System.Double&gt;</ph> or two <ph id="ph2">&lt;xref:System.Single&gt;</ph> values by using the equality operator.</source>
          <target state="translated">2 つを比較して<ph id="ph1">&lt;xref:System.Double&gt;</ph>または 2 つ<ph id="ph2">&lt;xref:System.Single&gt;</ph>等値演算子を使用して値。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>It passes values of any other type to the default equality comparer.</source>
          <target state="translated">既定の等値比較子をその他の種類の値を渡します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The following example creates two identical 3-tuple objects whose components consist of three <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">次の例では、3 つの構成要素、2 つの同一の 3 組オブジェクト<ph id="ph1">&lt;xref:System.Double&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The value of the second component is <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">2 番目のコンポーネントの値が<ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The example then calls the <ph id="ph1">&lt;xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType&gt;</ph> method, and it calls the <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType&gt;</ph> method three times.</source>
          <target state="translated">この例では、<ph id="ph1">&lt;xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType&gt;</ph>メソッド、およびそれを呼び出す、<ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType&gt;</ph>メソッドを 3 回です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The first time, it passes the default equality comparer that is returned by the <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">によって返される既定の等値比較子を渡しますが、初めて、<ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The second time, it passes the default equality comparer that is returned by the <ph id="ph1">&lt;xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">によって返される既定の等値比較子を渡すこと、2 回目、<ph id="ph1">&lt;xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The third time, it passes the custom <ph id="ph1">`NanComparer`</ph> object.</source>
          <target state="translated">3 番目の時間では、カスタム渡します<ph id="ph1">`NanComparer`</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>As the output from the example shows, the first three method calls return <ph id="ph1">`true`</ph>, whereas the fourth call returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">最初の 3 つのメソッド呼び出しを返すように、例からの出力を示しています、<ph id="ph1">`true`</ph>が 4 番目の呼び出しが戻る、<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The object to compare with the current instance.</source>
          <target state="translated">現在のインスタンスと比較するオブジェクト。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>An object that determines whether the current instance and <bpt id="p1">&lt;c&gt;</bpt>other<ept id="p1">&lt;/c&gt;</ept> are equal.</source>
          <target state="translated">現在のインスタンスと <bpt id="p1">&lt;c&gt;</bpt>other<ept id="p1">&lt;/c&gt;</ept> が等しいかどうかを判断するオブジェクト。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>Determines whether an object is structurally equal to the current instance.</source>
          <target state="translated">オブジェクトが現在のインスタンスと構造的に等しいかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two objects are equal; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">2 つのオブジェクトが等しい場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph> method supports custom structural comparison of array and tuple objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph>メソッドは、配列とタプル オブジェクトのカスタムの構造比較をサポートしています。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>This method in turn calls the <ph id="ph1">`comparer`</ph> object's <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> method to compare individual array elements or tuple components, starting with the first element or component.</source>
          <target state="translated">このメソッドを呼び出します、<ph id="ph1">`comparer`</ph>オブジェクトの<ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph>配列の各要素または以降の最初の要素またはコンポーネントで、タプル コンポーネントを比較するメソッド。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The individual calls to <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> end and the <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType&gt;</ph> method returns a value either when a method call returns <ph id="ph3">`false`</ph> or after all array elements or tuple components have been compared.</source>
          <target state="translated">個々 の呼び出し<ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph>終了と<ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType&gt;</ph>メソッド値を返すか、メソッドの呼び出しが戻るとき<ph id="ph3">`false`</ph>またはすべての配列の要素または組のコンポーネントが比較された後にします。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The default equality comparer, <ph id="ph1">`EqualityComparer&lt;Object&gt;.Default.Equals`</ph>, considers two <ph id="ph2">`NaN`</ph> values to be equal.</source>
          <target state="translated">既定の等値比較子<ph id="ph1">`EqualityComparer&lt;Object&gt;.Default.Equals`</ph>、2 つと見なします<ph id="ph2">`NaN`</ph>値と等しくなります。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>However, in some cases, you may want the comparison of <ph id="ph1">`NaN`</ph> values for equality to return <ph id="ph2">`false`</ph>, which indicates that the values cannot be compared.</source>
          <target state="translated">ただし、場合によっては、比較することがあります<ph id="ph1">`NaN`</ph>値が等しいかどうかを返す<ph id="ph2">`false`</ph>値を比較できないことを示します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The following example defines a <ph id="ph1">`NanComparer`</ph> class that implements the <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">次の例では、<ph id="ph1">`NanComparer`</ph> インターフェイスを実装する <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> クラスを定義しています。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>It compares two <ph id="ph1">&lt;xref:System.Double&gt;</ph> or two <ph id="ph2">&lt;xref:System.Single&gt;</ph> values by using the equality operator.</source>
          <target state="translated">2 つを比較して<ph id="ph1">&lt;xref:System.Double&gt;</ph>または 2 つ<ph id="ph2">&lt;xref:System.Single&gt;</ph>等値演算子を使用して値。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>It passes values of any other type to the default equality comparer.</source>
          <target state="translated">既定の等値比較子をその他の種類の値を渡します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The following example creates two identical 3-tuple objects whose components consist of three <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">次の例では、3 つの構成要素、2 つの同一の 3 組オブジェクト<ph id="ph1">&lt;xref:System.Double&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The value of the second component is <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">2 番目のコンポーネントの値が<ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The example then calls the <ph id="ph1">&lt;xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType&gt;</ph> method, and it calls the <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType&gt;</ph> method three times.</source>
          <target state="translated">この例では、<ph id="ph1">&lt;xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType&gt;</ph>メソッド、およびそれを呼び出す、<ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType&gt;</ph>メソッドを 3 回です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The first time, it passes the default equality comparer that is returned by the <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">によって返される既定の等値比較子を渡しますが、初めて、<ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The second time, it passes the default equality comparer that is returned by the <ph id="ph1">&lt;xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">によって返される既定の等値比較子を渡すこと、2 回目、<ph id="ph1">&lt;xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The third time, it passes the custom <ph id="ph1">`NanComparer`</ph> object.</source>
          <target state="translated">3 番目の時間では、カスタム渡します<ph id="ph1">`NanComparer`</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>As the output from the example shows, the first three method calls return <ph id="ph1">`true`</ph>, whereas the fourth call returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">最初の 3 つのメソッド呼び出しを返すように、例からの出力を示しています、<ph id="ph1">`true`</ph>が 4 番目の呼び出しが戻る、<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)">
          <source>An object that computes the hash code of the current object.</source>
          <target state="translated">現在のオブジェクトのハッシュ コードを計算するオブジェクト。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)">
          <source>Returns a hash code for the current instance.</source>
          <target state="translated">現在のインスタンスのハッシュ コードを返します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)">
          <source>The hash code for the current instance.</source>
          <target state="translated">現在のインスタンスのハッシュ コード。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)">
          <source>Implement this method to return customized hash codes for collection objects that correspond to the customized comparison for structural equality provided by the <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph> method.</source>
          <target state="translated">カスタマイズされた比較によって提供される構造の等価性に対応するコレクション オブジェクトのカスタマイズされたハッシュ コードを返すには、このメソッドを実装、<ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)">
          <source>If the <ph id="ph1">&lt;see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /&gt;</ph> method returns <ph id="ph2">&lt;see langword="true" /&gt;</ph> for two objects, the values returned by the <ph id="ph3">&lt;see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /&gt;</ph> method for the two objects must also be equal.</source>
          <target state="translated">場合、<ph id="ph1">&lt;see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /&gt;</ph>メソッドを返します。<ph id="ph2">&lt;see langword="true" /&gt;</ph>によって 2 つのオブジェクトの値が返される、 <ph id="ph3">&lt;see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /&gt;</ph> 2 つのオブジェクトのメソッドを等しいもする必要があります。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>