<Type Name="IStructuralEquatable" FullName="System.Collections.IStructuralEquatable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="48c20add28584c8e5d37f867a88a02cba28814ce" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58717185" /></Metadata><TypeSignature Language="C#" Value="public interface IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralEquatable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralEquatable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type IStructuralEquatable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>オブジェクトの構造上の等価性比較をサポートするメソッドを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 構造の等値と等しい値があるため、2 つのオブジェクトが等しいことを意味します。 同じ物理オブジェクトを参照するため、2 つのオブジェクト参照が等しいことを示す参照の等価性とは異なります。 <xref:System.Collections.IStructuralEquatable>インターフェイスでは、コレクション オブジェクトの構造の等値をチェックするカスタムの比較を実装することができます。 構造の等値の定義を作成し、コレクション型を受け取ると、この定義を使用するように指定、<xref:System.Collections.IStructuralEquatable>インターフェイス。 インターフェイスが 2 つのメンバーには:<xref:System.Collections.IStructuralEquatable.Equals%2A>を使用して、指定して、等しいかどうかをテスト<xref:System.Collections.IEqualityComparer>実装、および<xref:System.Collections.IStructuralEquatable.GetHashCode%2A>と同じであるオブジェクトの同一のハッシュ コードが返されます。  
  
> [!NOTE]
>  <xref:System.Collections.IStructuralEquatable>インターフェイスは、構造的等値のカスタムの比較だけをサポートしています。 <xref:System.Collections.IStructuralComparable>インターフェイスは、並べ替えと順序付けのカスタムの構造比較をサポートしています。  
  
 .NET Framework が等値比較子によって返されるも既定に提供します、<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>と<xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType>プロパティ。 詳細については、例を参照してください。  
  
 ジェネリックのタプルクラス (<xref:System.Tuple%601>、 <xref:System.Tuple%602>、<xref:System.Tuple%603>など)、<xref:System.Array>クラスの明示的な実装を提供する、<xref:System.Collections.IStructuralEquatable>インターフェイス。 キャスト (C#) または (Visual Basic) では、配列または組の現在のインスタンスに変換して、<xref:System.Collections.IStructuralEquatable>インターフェイスの値を提供して、<xref:System.Collections.IEqualityComparer>実装への引数として、<xref:System.Collections.IStructuralEquatable.Equals%2A>メソッド、カスタムに等しいかどうかを定義することができます配列またはコレクションの比較。  
  
   
  
## Examples  
 既定の等値比較子`EqualityComparer<Object>.Default.Equals`、2 つと見なします`NaN`等しい値です。 ただし、場合によっては、することも、比較の`NaN`値が等しいかどうかを返す`false`値を比較できないことを示します。 次の例では、 `NanComparer` インターフェイスを実装する <xref:System.Collections.IStructuralEquatable> クラスを定義しています。 2 つを比較<xref:System.Double>または 2 つ<xref:System.Single>等値演算子を使用して値。 既定の等値比較子をその他の種類の値を渡します。  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 次の例は、3 つの構成要素、2 つの同一の 3 組オブジェクトを作成します。<xref:System.Double>値。 2 番目のコンポーネントの値が<xref:System.Double.NaN?displayProperty=nameWithType>します。 例を呼び出して、<xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType>メソッドをおよびそれを呼び出す、<xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType>メソッドが 3 回です。 によって返される既定の等値比較子を渡す、最初に、<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>プロパティ。 によって返される既定の等値比較子を渡す、2 回目、<xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType>プロパティ。 3 番目の時間では、カスタム渡します`NanComparer`オブジェクト。 最初の 3 つのメソッド呼び出しを返す、出力の例に示すよう`true`4 番目の呼び出しが返されますが、`false`します。  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEqualityComparer" />
    <altmember cref="T:System.Collections.IStructuralComparable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object, comparer As IEqualityComparer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj * System.Collections.IEqualityComparer -&gt; bool" Usage="iStructuralEquatable.Equals (other, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">現在のインスタンスと比較するオブジェクト。</param>
        <param name="comparer">現在のインスタンスと <paramref name="other" /> が等しいかどうかを判断するオブジェクト。</param>
        <summary>オブジェクトが現在のインスタンスと構造的に等しいかどうかを判断します。</summary>
        <returns>2 つのオブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.IStructuralEquatable.Equals%2A>メソッドは、配列と組のオブジェクトのカスタムの構造比較をサポートしています。 このメソッドを呼び出します、`comparer`オブジェクトの<xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>配列の各要素または以降の最初の要素またはコンポーネントでは、タプル コンポーネントを比較するメソッド。 個々 の呼び出しを<xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>終了と<xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType>メソッド値を返すか、メソッドの呼び出しが返されるときに`false`またはすべての要素の配列またはタプル コンポーネントが比較された後にします。  
  
   
  
## Examples  
 既定の等値比較子`EqualityComparer<Object>.Default.Equals`、2 つと見なします`NaN`等しい値です。 ただし、場合によっては、することも、比較の`NaN`値が等しいかどうかを返す`false`値を比較できないことを示します。 次の例では、 `NanComparer` インターフェイスを実装する <xref:System.Collections.IStructuralEquatable> クラスを定義しています。 2 つを比較<xref:System.Double>または 2 つ<xref:System.Single>等値演算子を使用して値。 既定の等値比較子をその他の種類の値を渡します。  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 次の例は、3 つの構成要素、2 つの同一の 3 組オブジェクトを作成します。<xref:System.Double>値。 2 番目のコンポーネントの値が<xref:System.Double.NaN?displayProperty=nameWithType>します。 例を呼び出して、<xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType>メソッドをおよびそれを呼び出す、<xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType>メソッドが 3 回です。 によって返される既定の等値比較子を渡す、最初に、<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>プロパティ。 によって返される既定の等値比較子を渡す、2 回目、<xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType>プロパティ。 3 番目の時間では、カスタム渡します`NanComparer`オブジェクト。 最初の 3 つのメソッド呼び出しを返す、出力の例に示すよう`true`4 番目の呼び出しが返されますが、`false`します。  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (comparer As IEqualityComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : System.Collections.IEqualityComparer -&gt; int" Usage="iStructuralEquatable.GetHashCode comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">現在のオブジェクトのハッシュ コードを計算するオブジェクト。</param>
        <summary>現在のインスタンスのハッシュ コードを返します。</summary>
        <returns>現在のインスタンスのハッシュ コード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドから、カスタマイズされたによって提供される構造の等値比較に対応するコレクション オブジェクトのカスタマイズされたハッシュ コードを返す実装、<xref:System.Collections.IStructuralEquatable.Equals%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>場合、<see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" />メソッドを返します。<see langword="true" />によって 2 つのオブジェクトの値が返される、 <see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /> 2 つのオブジェクトのメソッドと同じある必要があります。</para></block>
      </Docs>
    </Member>
  </Members>
</Type>