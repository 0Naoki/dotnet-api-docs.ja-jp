<Type Name="IStructuralEquatable" FullName="System.Collections.IStructuralEquatable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="46e9881e5a687f951730fba30e320133ed7f95be" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70476478" /></Metadata><TypeSignature Language="C#" Value="public interface IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralEquatable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralEquatable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type IStructuralEquatable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c37dd-101">オブジェクトの構造上の等価性比較をサポートするメソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="c37dd-101">Defines methods to support the comparison of objects for structural equality.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c37dd-102">構造的等価性とは、2つのオブジェクトが等しい値を持つために等しいことを意味します。</span><span class="sxs-lookup"><span data-stu-id="c37dd-102">Structural equality means that two objects are equal because they have equal values.</span></span> <span data-ttu-id="c37dd-103">これは、同じ物理オブジェクトを参照するため、2つのオブジェクト参照が等しいことを示す、参照の等価性とは異なります。</span><span class="sxs-lookup"><span data-stu-id="c37dd-103">It differs from reference equality, which indicates that two object references are equal because they reference the same physical object.</span></span> <span data-ttu-id="c37dd-104"><xref:System.Collections.IStructuralEquatable>インターフェイスを使用すると、コレクションオブジェクトの構造的等価性を確認するためのカスタマイズされた比較を実装できます。</span><span class="sxs-lookup"><span data-stu-id="c37dd-104">The <xref:System.Collections.IStructuralEquatable> interface enables you to implement customized comparisons to check for the structural equality of collection objects.</span></span> <span data-ttu-id="c37dd-105">つまり、構造的等価性の独自の定義を作成し、インターフェイスを<xref:System.Collections.IStructuralEquatable>受け入れるコレクション型でこの定義を使用するように指定できます。</span><span class="sxs-lookup"><span data-stu-id="c37dd-105">That is, you can create your own definition of structural equality and specify that this definition be used with a collection type that accepts the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="c37dd-106">インターフェイスには、という<xref:System.Collections.IStructuralEquatable.Equals%2A>2 つのメンバーがあります。これ<xref:System.Collections.IEqualityComparer>は、指定<xref:System.Collections.IStructuralEquatable.GetHashCode%2A>された実装を使用して等しいかどうかをテストし、同じハッシュコードを等しいオブジェクトに対して返すを行います。</span><span class="sxs-lookup"><span data-stu-id="c37dd-106">The interface has two members: <xref:System.Collections.IStructuralEquatable.Equals%2A>, which tests for equality by using a specified <xref:System.Collections.IEqualityComparer> implementation, and <xref:System.Collections.IStructuralEquatable.GetHashCode%2A>, which returns identical hash codes for objects that are equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c37dd-107">インターフェイス<xref:System.Collections.IStructuralEquatable>では、構造的等価性のためのカスタム比較のみがサポートされます。</span><span class="sxs-lookup"><span data-stu-id="c37dd-107">The <xref:System.Collections.IStructuralEquatable> interface supports only custom comparisons for structural equality.</span></span> <span data-ttu-id="c37dd-108">インターフェイス<xref:System.Collections.IStructuralComparable>では、並べ替えと順序付けのためのカスタムの構造的比較がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="c37dd-108">The <xref:System.Collections.IStructuralComparable> interface supports custom structural comparisons for sorting and ordering.</span></span>  
  
 <span data-ttu-id="c37dd-109">.NET Framework には、プロパティ<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>と<xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType>プロパティによって返される既定の等値比較子も用意されています。</span><span class="sxs-lookup"><span data-stu-id="c37dd-109">The .NET Framework also provides default equality comparers, which are returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> and <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="c37dd-110">詳細については、例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c37dd-110">For more information, see the example.</span></span>  
  
 <span data-ttu-id="c37dd-111">ジェネリックのタプルクラス (<xref:System.Tuple%601>、 <xref:System.Tuple%602>、<xref:System.Tuple%603>など)、<xref:System.Array>クラスの明示的な実装を提供する、<xref:System.Collections.IStructuralEquatable>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="c37dd-111">The generic tuple classes (<xref:System.Tuple%601>, <xref:System.Tuple%602>, <xref:System.Tuple%603>, and so on) and the <xref:System.Array> class provide explicit implementations of the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="c37dd-112">配列または組C#の現在のインスタンスを<xref:System.Collections.IStructuralEquatable>インターフェイス<xref:System.Collections.IEqualityComparer>値にキャスト (in) または変換 (Visual Basic) し、実装を引数として<xref:System.Collections.IStructuralEquatable.Equals%2A>メソッドに渡すことで、カスタムの等価性を定義できます。配列またはコレクションの比較。</span><span class="sxs-lookup"><span data-stu-id="c37dd-112">By casting (in C#) or converting (in Visual Basic) the current instance of an array or tuple to an <xref:System.Collections.IStructuralEquatable> interface value and providing your <xref:System.Collections.IEqualityComparer> implementation as an argument to the <xref:System.Collections.IStructuralEquatable.Equals%2A> method, you can define a custom equality comparison for the array or collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c37dd-113">既定の等値比較`EqualityComparer<Object>.Default.Equals`子は、 `NaN` 2 つの値が等しいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="c37dd-113">The default equality comparer, `EqualityComparer<Object>.Default.Equals`, considers two `NaN` values to be equal.</span></span> <span data-ttu-id="c37dd-114">ただし、場合によっては、値の`NaN`等価性の比較によってが返さ`false`れることがあります。これは、値を比較できないことを示します。</span><span class="sxs-lookup"><span data-stu-id="c37dd-114">However, in some cases, you may want the comparison of `NaN` values for equality to return `false`, which indicates that the values cannot be compared.</span></span> <span data-ttu-id="c37dd-115">次の例では、 `NanComparer` インターフェイスを実装する <xref:System.Collections.IStructuralEquatable> クラスを定義しています。</span><span class="sxs-lookup"><span data-stu-id="c37dd-115">The following example defines a `NanComparer` class that implements the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="c37dd-116">等値演算子<xref:System.Double>を使用<xref:System.Single>して、2つまたは2つの値を比較します。</span><span class="sxs-lookup"><span data-stu-id="c37dd-116">It compares two <xref:System.Double> or two <xref:System.Single> values by using the equality operator.</span></span> <span data-ttu-id="c37dd-117">これは、他の型の値を既定の等値比較子に渡します。</span><span class="sxs-lookup"><span data-stu-id="c37dd-117">It passes values of any other type to the default equality comparer.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 <span data-ttu-id="c37dd-118">次の例では、3 <xref:System.Double>つの値で構成されるコンポーネントを持つ2つの同一の3タプルオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="c37dd-118">The following example creates two identical 3-tuple objects whose components consist of three <xref:System.Double> values.</span></span> <span data-ttu-id="c37dd-119">2番目のコンポーネントの値<xref:System.Double.NaN?displayProperty=nameWithType>はです。</span><span class="sxs-lookup"><span data-stu-id="c37dd-119">The value of the second component is <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c37dd-120">この例では、 <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType>メソッドを呼び出し、 <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType>メソッドを3回呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c37dd-120">The example then calls the <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> method, and it calls the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method three times.</span></span> <span data-ttu-id="c37dd-121">最初に、 <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>プロパティによって返される既定の等値比較子を渡します。</span><span class="sxs-lookup"><span data-stu-id="c37dd-121">The first time, it passes the default equality comparer that is returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="c37dd-122">2回目は、 <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType>プロパティによって返される既定の等値比較子を渡します。</span><span class="sxs-lookup"><span data-stu-id="c37dd-122">The second time, it passes the default equality comparer that is returned by the <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="c37dd-123">3回目は、カスタム`NanComparer`オブジェクトを渡します。</span><span class="sxs-lookup"><span data-stu-id="c37dd-123">The third time, it passes the custom `NanComparer` object.</span></span> <span data-ttu-id="c37dd-124">例の出力が示すように、最初の3つのメソッド`true`の呼び出しはを返します`false`が、4番目の呼び出しはを返します。</span><span class="sxs-lookup"><span data-stu-id="c37dd-124">As the output from the example shows, the first three method calls return `true`, whereas the fourth call returns `false`.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEqualityComparer" />
    <altmember cref="T:System.Collections.IStructuralComparable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object, comparer As IEqualityComparer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj * System.Collections.IEqualityComparer -&gt; bool" Usage="iStructuralEquatable.Equals (other, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="c37dd-125">現在のインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c37dd-125">The object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="c37dd-126">現在のインスタンスと <paramref name="other" /> が等しいかどうかを判断するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c37dd-126">An object that determines whether the current instance and <paramref name="other" /> are equal.</span></span></param>
        <summary><span data-ttu-id="c37dd-127">オブジェクトが現在のインスタンスと構造的に等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="c37dd-127">Determines whether an object is structurally equal to the current instance.</span></span></summary>
        <returns><span data-ttu-id="c37dd-128">2 つのオブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c37dd-128"><see langword="true" /> if the two objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c37dd-129">メソッド<xref:System.Collections.IStructuralEquatable.Equals%2A>は、配列および組オブジェクトのカスタム構造比較をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c37dd-129">The <xref:System.Collections.IStructuralEquatable.Equals%2A> method supports custom structural comparison of array and tuple objects.</span></span> <span data-ttu-id="c37dd-130">次に、このメソッドは`comparer` 、オブジェクト<xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>のメソッドを呼び出して、最初の要素またはコンポーネントを開始位置として、個々の配列要素またはタプルコンポーネントを比較します。</span><span class="sxs-lookup"><span data-stu-id="c37dd-130">This method in turn calls the `comparer` object's <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> method to compare individual array elements or tuple components, starting with the first element or component.</span></span> <span data-ttu-id="c37dd-131">メソッド呼び出しから制御<xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>が戻っ`false`た<xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType>とき、またはすべての配列要素または組コンポーネントが比較された後に、終了する個々の呼び出しとメソッドが値を返します。</span><span class="sxs-lookup"><span data-stu-id="c37dd-131">The individual calls to <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> end and the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method returns a value either when a method call returns `false` or after all array elements or tuple components have been compared.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c37dd-132">既定の等値比較`EqualityComparer<Object>.Default.Equals`子は、 `NaN` 2 つの値が等しいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="c37dd-132">The default equality comparer, `EqualityComparer<Object>.Default.Equals`, considers two `NaN` values to be equal.</span></span> <span data-ttu-id="c37dd-133">ただし、場合によっては、値の`NaN`等価性の比較によってが返さ`false`れることがあります。これは、値を比較できないことを示します。</span><span class="sxs-lookup"><span data-stu-id="c37dd-133">However, in some cases, you may want the comparison of `NaN` values for equality to return `false`, which indicates that the values cannot be compared.</span></span> <span data-ttu-id="c37dd-134">次の例では、 `NanComparer` インターフェイスを実装する <xref:System.Collections.IStructuralEquatable> クラスを定義しています。</span><span class="sxs-lookup"><span data-stu-id="c37dd-134">The following example defines a `NanComparer` class that implements the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="c37dd-135">等値演算子<xref:System.Double>を使用<xref:System.Single>して、2つまたは2つの値を比較します。</span><span class="sxs-lookup"><span data-stu-id="c37dd-135">It compares two <xref:System.Double> or two <xref:System.Single> values by using the equality operator.</span></span> <span data-ttu-id="c37dd-136">これは、他の型の値を既定の等値比較子に渡します。</span><span class="sxs-lookup"><span data-stu-id="c37dd-136">It passes values of any other type to the default equality comparer.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 <span data-ttu-id="c37dd-137">次の例では、3 <xref:System.Double>つの値で構成されるコンポーネントを持つ2つの同一の3タプルオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="c37dd-137">The following example creates two identical 3-tuple objects whose components consist of three <xref:System.Double> values.</span></span> <span data-ttu-id="c37dd-138">2番目のコンポーネントの値<xref:System.Double.NaN?displayProperty=nameWithType>はです。</span><span class="sxs-lookup"><span data-stu-id="c37dd-138">The value of the second component is <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c37dd-139">この例では、 <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType>メソッドを呼び出し、 <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType>メソッドを3回呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c37dd-139">The example then calls the <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> method, and it calls the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method three times.</span></span> <span data-ttu-id="c37dd-140">最初に、 <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>プロパティによって返される既定の等値比較子を渡します。</span><span class="sxs-lookup"><span data-stu-id="c37dd-140">The first time, it passes the default equality comparer that is returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="c37dd-141">2回目は、 <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType>プロパティによって返される既定の等値比較子を渡します。</span><span class="sxs-lookup"><span data-stu-id="c37dd-141">The second time, it passes the default equality comparer that is returned by the <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="c37dd-142">3回目は、カスタム`NanComparer`オブジェクトを渡します。</span><span class="sxs-lookup"><span data-stu-id="c37dd-142">The third time, it passes the custom `NanComparer` object.</span></span> <span data-ttu-id="c37dd-143">例の出力が示すように、最初の3つのメソッド`true`の呼び出しはを返します`false`が、4番目の呼び出しはを返します。</span><span class="sxs-lookup"><span data-stu-id="c37dd-143">As the output from the example shows, the first three method calls return `true`, whereas the fourth call returns `false`.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (comparer As IEqualityComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : System.Collections.IEqualityComparer -&gt; int" Usage="iStructuralEquatable.GetHashCode comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="c37dd-144">現在のオブジェクトのハッシュ コードを計算するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c37dd-144">An object that computes the hash code of the current object.</span></span></param>
        <summary><span data-ttu-id="c37dd-145">現在のインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="c37dd-145">Returns a hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="c37dd-146">現在のインスタンスのハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="c37dd-146">The hash code for the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c37dd-147">このメソッドを実装すると、 <xref:System.Collections.IStructuralEquatable.Equals%2A>メソッドによって提供される構造的等価性のカスタマイズされた比較に対応するコレクションオブジェクトのカスタマイズされたハッシュコードを返すことができます。</span><span class="sxs-lookup"><span data-stu-id="c37dd-147">Implement this method to return customized hash codes for collection objects that correspond to the customized comparison for structural equality provided by the <xref:System.Collections.IStructuralEquatable.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c37dd-148">2つ<see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" />のオブジェクト<see langword="true" />に対してメソッドがを返す場合、 <see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /> 2 つのオブジェクトに対してメソッドによって返される値も同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="c37dd-148">If the <see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /> method returns <see langword="true" /> for two objects, the values returned by the <see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /> method for the two objects must also be equal.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
