<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDictionaryEnumerator.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b2d0fecde47c341daee391322afe4409d14433c5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b2d0fecde47c341daee391322afe4409d14433c5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.IDictionaryEnumerator">
          <source>Enumerates the elements of a nongeneric dictionary.</source>
          <target state="translated">非ジェネリック ディクショナリの要素を列挙します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic、C# の場合]</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">C# 言語の <ph id="ph1">`foreach`</ph> ステートメント (Visual Basic の場合は <ph id="ph2">`for each`</ph>) を使用することで列挙子の複雑さを回避できます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended instead of directly manipulating the enumerator.</source>
          <target state="translated">したがってを使用して<ph id="ph1">`foreach`</ph>列挙子を直接操作するのではなくをお勧めします。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>メソッドがこの位置に戻さも、列挙子を表示します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>At this position, calling the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property throws an exception.</source>
          <target state="translated">この位置で、呼び出し、<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>プロパティは例外をスローします。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">そのため、呼び出す必要があります、<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>メソッドの値を読み取る前に、コレクションの最初の要素に列挙子を進める<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> または <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> が呼び出されるまでは同じオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> を次の要素に設定します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返します<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列挙子がこの位置では、後続の呼び出しの場合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>を返すことも<ph id="ph2">`false`</ph>します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">場合は、最後の呼び出し<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返される<ph id="ph2">`false`</ph>、呼び出し元<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>例外をスローします。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> をコレクションの最初の要素にもう一度設定するには、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> を呼び出してから <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">コレクションが変更されない限り、列挙子は有効です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">無効になり、次の呼び出しに変更を追加するなど、コレクションを変更、または要素を削除するには、列挙子は回復不可能<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>スロー、<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">間で、コレクションが変更された場合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>、<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>列挙子が既に無効になっている場合でもに設定されている要素を返します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列挙子にはコレクションへの排他アクセス権限はないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>This code example shows how to define a dictionary enumerator that implements the <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> interface.</source>
          <target state="translated">このコード例を実装する、ディクショナリ列挙子を定義する方法を示します、<ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.IEnumerator.Current" /&gt;</ph> property that is inherited from <ph id="ph2">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> returns an <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph> that is a boxed <ph id="ph4">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph>, similar to the return value of the <ph id="ph5">&lt;see cref="P:System.Collections.IDictionaryEnumerator.Entry" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Collections.IEnumerator.Current" /&gt;</ph>から継承されたプロパティ<ph id="ph2">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>を返します、<ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>は、ボックス化された<ph id="ph4">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph>と同様の戻り値に、<ph id="ph5">&lt;see cref="P:System.Collections.IDictionaryEnumerator.Entry" /&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionaryEnumerator.Entry">
          <source>Gets both the key and the value of the current dictionary entry.</source>
          <target state="translated">現在のディクショナリ エントリのキーと値の両方を取得します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Entry">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> containing both the key and the value of the current dictionary entry.</source>
          <target state="translated">現在のディクショナリ エントリのキーと値の両方を格納している <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Entry">
          <source>After an enumerator is created or after the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method must be called to advance the enumerator to the first element of the collection before reading the value of the <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> property; otherwise, <ph id="ph4">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> is undefined.</source>
          <target state="translated">列挙子を作成した後、または後に、<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>メソッドが呼び出されると、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>列挙子の値を読み取る前に、コレクションの最初の要素に進めるメソッドを呼び出す必要があります、<ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph>プロパティ以外の場合、<ph id="ph4">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph>が定義されていません。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Entry">
          <source><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> also throws an exception if the last call to <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph3">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> または例外をスロー、最後の呼び出し<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返される<ph id="ph3">`false`</ph>コレクションの末尾を示します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Entry">
          <source><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> does not move the position of the enumerator, and consecutive calls to <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> return the same object until either <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> 連続して呼び出すと、列挙子の位置を移動しません<ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph>されるまで、同じオブジェクトを返す<ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>または<ph id="ph4">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>と呼びます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionaryEnumerator.Entry">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> is positioned before the first entry of the dictionary or after the last entry.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> が、ディクショナリの最初のエントリの前、または最後のエントリの後に位置しています。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Entry">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.IEnumerator.Current" /&gt;</ph> property that is inherited from <ph id="ph2">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> returns an <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph> that is a boxed <ph id="ph4">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph>, similar to the return value of the <ph id="ph5">&lt;see cref="P:System.Collections.IDictionaryEnumerator.Entry" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Collections.IEnumerator.Current" /&gt;</ph>から継承されたプロパティ<ph id="ph2">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>を返します、<ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>は、ボックス化された<ph id="ph4">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph>と同様の戻り値に、<ph id="ph5">&lt;see cref="P:System.Collections.IDictionaryEnumerator.Entry" /&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionaryEnumerator.Key">
          <source>Gets the key of the current dictionary entry.</source>
          <target state="translated">現在のディクショナリ エントリのキーを取得します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Key">
          <source>The key of the current element of the enumeration.</source>
          <target state="translated">列挙体の現在の要素のキー。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Key">
          <source>After an enumerator is created or after the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method must be called to advance the enumerator to the first element of the collection before reading the value of the <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph> property; otherwise, <ph id="ph4">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph> is undefined.</source>
          <target state="translated">列挙子を作成した後、または後に、<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>メソッドが呼び出されると、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>列挙子の値を読み取る前に、コレクションの最初の要素に進めるメソッドを呼び出す必要があります、<ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph>プロパティ以外の場合、<ph id="ph4">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph>が定義されていません。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Key">
          <source><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph> also throws an exception if the last call to <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph3">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph> または例外をスロー、最後の呼び出し<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返される<ph id="ph3">`false`</ph>コレクションの末尾を示します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Key">
          <source><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph> does not move the position of the enumerator, and consecutive calls to <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph> return the same object until either <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph> 連続して呼び出すと、列挙子の位置を移動しません<ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph>されるまで、同じオブジェクトを返す<ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>または<ph id="ph4">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>と呼びます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionaryEnumerator.Key">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> is positioned before the first entry of the dictionary or after the last entry.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> が、ディクショナリの最初のエントリの前、または最後のエントリの後に位置しています。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionaryEnumerator.Value">
          <source>Gets the value of the current dictionary entry.</source>
          <target state="translated">現在のディクショナリ エントリの値を取得します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Value">
          <source>The value of the current element of the enumeration.</source>
          <target state="translated">列挙体の現在の要素の値。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Value">
          <source>After an enumerator is created or after the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method must be called to advance the enumerator to the first element of the collection before reading the value of the <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph> property; otherwise, <ph id="ph4">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph> is undefined.</source>
          <target state="translated">列挙子を作成した後、または後に、<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>メソッドが呼び出されると、<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>列挙子の値を読み取る前に、コレクションの最初の要素に進めるメソッドを呼び出す必要があります、<ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph>プロパティ以外の場合、<ph id="ph4">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph>が定義されていません。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Value">
          <source><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph> also throws an exception if the last call to <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph3">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph> または例外をスロー、最後の呼び出し<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返される<ph id="ph3">`false`</ph>コレクションの末尾を示します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Value">
          <source><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph> does not move the position of the enumerator, and consecutive calls to <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph> return the same object until either <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph> 連続して呼び出すと、列挙子の位置を移動しません<ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph>されるまで、同じオブジェクトを返す<ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>または<ph id="ph4">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>と呼びます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionaryEnumerator.Value">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> is positioned before the first entry of the dictionary or after the last entry.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> が、ディクショナリの最初のエントリの前、または最後のエントリの後に位置しています。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>