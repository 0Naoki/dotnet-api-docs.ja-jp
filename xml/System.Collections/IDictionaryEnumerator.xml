<Type Name="IDictionaryEnumerator" FullName="System.Collections.IDictionaryEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a642820a95491366cd520c8088dc9a410e449138" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70468758" /></Metadata><TypeSignature Language="C#" Value="public interface IDictionaryEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDictionaryEnumerator implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IDictionaryEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDictionaryEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDictionaryEnumerator : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type IDictionaryEnumerator = interface&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="219c7-101">非ジェネリック ディクショナリの要素を列挙します。</span><span class="sxs-lookup"><span data-stu-id="219c7-101">Enumerates the elements of a nongeneric dictionary.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="219c7-102">C# 言語の `foreach` ステートメント (Visual Basic の場合は `for each`) を使用することで列挙子の複雑さを回避できます。</span><span class="sxs-lookup"><span data-stu-id="219c7-102">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="219c7-103">そのため、 `foreach`列挙子を直接操作するのではなく、を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="219c7-103">Therefore, using `foreach` is recommended instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="219c7-104">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="219c7-104">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="219c7-105">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="219c7-105">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="219c7-106"><xref:System.Collections.IEnumerator.Reset%2A> メソッドは、この位置に列挙子を戻します。</span><span class="sxs-lookup"><span data-stu-id="219c7-106">The <xref:System.Collections.IEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span> <span data-ttu-id="219c7-107">この位置では、<xref:System.Collections.IEnumerator.Current%2A> は未定義です。</span><span class="sxs-lookup"><span data-stu-id="219c7-107">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="219c7-108">そのため、<xref:System.Collections.IEnumerator.Current%2A> の値を読み取る前に、<xref:System.Collections.IEnumerator.MoveNext%2A> メソッドを呼び出し、列挙子をコレクションの最初の要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="219c7-108">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="219c7-109"><xref:System.Collections.IEnumerator.Current%2A> は、<xref:System.Collections.IEnumerator.MoveNext%2A> または <xref:System.Collections.IEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="219c7-109"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="219c7-110"><xref:System.Collections.IEnumerator.MoveNext%2A> は、<xref:System.Collections.IEnumerator.Current%2A> を次の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="219c7-110"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="219c7-111"><xref:System.Collections.IEnumerator.MoveNext%2A> がコレクションの末尾を通過した場合、列挙子がコレクション内の最後の要素の後に配置され、<xref:System.Collections.IEnumerator.MoveNext%2A> は `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="219c7-111">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="219c7-112">列挙子がこの位置にある場合、後続の <xref:System.Collections.IEnumerator.MoveNext%2A> 呼び出しも `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="219c7-112">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="219c7-113">の最後の呼び出し<xref:System.Collections.IEnumerator.MoveNext%2A>が返さ`false`れた場合、 <xref:System.Collections.IEnumerator.Current%2A>が未定義になります。</span><span class="sxs-lookup"><span data-stu-id="219c7-113">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="219c7-114"><xref:System.Collections.IEnumerator.Current%2A> をコレクションの最初の要素にもう一度設定するには、<xref:System.Collections.IEnumerator.Reset%2A> を呼び出してから <xref:System.Collections.IEnumerator.MoveNext%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="219c7-114">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="219c7-115">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="219c7-115">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="219c7-116">要素の追加、変更、削除などの変更がコレクションに対して行われた場合、列挙子はなりに<xref:System.Collections.IEnumerator.MoveNext%2A>無効化され、次のまたは<xref:System.Collections.IEnumerator.Reset%2A>の呼び出しでがスロー <xref:System.InvalidOperationException>されます。</span><span class="sxs-lookup"><span data-stu-id="219c7-116">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>
  
 <span data-ttu-id="219c7-117">列挙子にはコレクションへの排他アクセス権限はないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="219c7-117">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="219c7-118">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="219c7-118">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="219c7-119">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="219c7-119">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="219c7-120">このコード例では、 <xref:System.Collections.IDictionaryEnumerator>インターフェイスを実装するディクショナリ列挙子を定義する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="219c7-120">This code example shows how to define a dictionary enumerator that implements the <xref:System.Collections.IDictionaryEnumerator> interface.</span></span>  
  
 [!code-cpp[Dictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#1)]
 [!code-csharp[Dictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#1)]
 [!code-vb[Dictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="219c7-121"><see cref="T:System.Object" /> <see cref="T:System.Collections.DictionaryEntry" />から<see cref="P:System.Collections.IEnumerator.Current" /> 継承されたプロパティは、ボックス化されたを返します。 <see cref="T:System.Collections.IEnumerator" /></span><span class="sxs-lookup"><span data-stu-id="219c7-121">The <see cref="P:System.Collections.IEnumerator.Current" /> property that is inherited from <see cref="T:System.Collections.IEnumerator" /> returns an <see cref="T:System.Object" /> that is a boxed <see cref="T:System.Collections.DictionaryEntry" />.</span></span> <span data-ttu-id="219c7-122">これは<see cref="P:System.Collections.IDictionaryEnumerator.Entry" />プロパティに似てい<see cref="T:System.Object" />ますが`Entry` 、で<see cref="T:System.Collections.DictionaryEntry" />はなくが返される点が異なります。</span><span class="sxs-lookup"><span data-stu-id="219c7-122">It is similar to the <see cref="P:System.Collections.IDictionaryEnumerator.Entry" /> property, except that `Entry` returns a <see cref="T:System.Collections.DictionaryEntry" /> rather than an <see cref="T:System.Object" />.</span></span></para></block>
    <altmember cref="T:System.Collections.IDictionary" />
    <altmember cref="T:System.Collections.IEnumerator" />
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
  </Docs>
  <Members>
    <Member MemberName="Entry">
      <MemberSignature Language="C#" Value="public System.Collections.DictionaryEntry Entry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.DictionaryEntry Entry" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionaryEnumerator.Entry" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entry As DictionaryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::DictionaryEntry Entry { System::Collections::DictionaryEntry get(); };" />
      <MemberSignature Language="F#" Value="member this.Entry : System.Collections.DictionaryEntry" Usage="System.Collections.IDictionaryEnumerator.Entry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.DictionaryEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="219c7-123">現在のディクショナリ エントリのキーと値の両方を取得します。</span><span class="sxs-lookup"><span data-stu-id="219c7-123">Gets both the key and the value of the current dictionary entry.</span></span></summary>
        <value><span data-ttu-id="219c7-124">現在のディクショナリ エントリのキーと値の両方を格納している <see cref="T:System.Collections.DictionaryEntry" />。</span><span class="sxs-lookup"><span data-stu-id="219c7-124">A <see cref="T:System.Collections.DictionaryEntry" /> containing both the key and the value of the current dictionary entry.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="219c7-125"><xref:System.Collections.IDictionaryEnumerator.Entry%2A>は、次のいずれかの条件下では未定義です。</span><span class="sxs-lookup"><span data-stu-id="219c7-125"><xref:System.Collections.IDictionaryEnumerator.Entry%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="219c7-126">列挙子は、列挙子が作成された直後に、コレクション内の最初の要素の前に配置されます。</span><span class="sxs-lookup"><span data-stu-id="219c7-126">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created.</span></span> <span data-ttu-id="219c7-127"><xref:System.Collections.IEnumerator.MoveNext%2A>の<xref:System.Collections.IDictionaryEnumerator.Entry%2A>値を読み取る前に、列挙子をコレクションの最初の要素に進めるには、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="219c7-127"><xref:System.Collections.IEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IDictionaryEnumerator.Entry%2A>.</span></span>  
  
-   <span data-ttu-id="219c7-128">コレクションの末尾を<xref:System.Collections.IEnumerator.MoveNext%2A>示す`false`、返されたの最後の呼び出し。</span><span class="sxs-lookup"><span data-stu-id="219c7-128">The last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="219c7-129">コレクションに加えられた変更 (要素の追加、変更、削除など) が原因で、列挙子が無効になります。</span><span class="sxs-lookup"><span data-stu-id="219c7-129">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="219c7-130"><xref:System.Collections.IDictionaryEnumerator.Entry%2A> は、<xref:System.Collections.IEnumerator.MoveNext%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="219c7-130"><xref:System.Collections.IDictionaryEnumerator.Entry%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="219c7-131"><xref:System.Collections.IEnumerator.MoveNext%2A> は、<xref:System.Collections.IDictionaryEnumerator.Entry%2A> を次の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="219c7-131"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IDictionaryEnumerator.Entry%2A> to the next element.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="219c7-132"><see cref="T:System.Object" /> <see cref="T:System.Collections.DictionaryEntry" />から<see cref="P:System.Collections.IEnumerator.Current" /> 継承されたプロパティは、ボックス化されたを返します。 <see cref="T:System.Collections.IEnumerator" /></span><span class="sxs-lookup"><span data-stu-id="219c7-132">The <see cref="P:System.Collections.IEnumerator.Current" /> property that is inherited from <see cref="T:System.Collections.IEnumerator" /> returns an <see cref="T:System.Object" /> that is a boxed <see cref="T:System.Collections.DictionaryEntry" />.</span></span> <span data-ttu-id="219c7-133">これは<see cref="P:System.Collections.IDictionaryEnumerator.Entry" />プロパティに似てい<see cref="T:System.Object" />ますが`Entry` 、で<see cref="T:System.Collections.DictionaryEntry" />はなくが返される点が異なります。</span><span class="sxs-lookup"><span data-stu-id="219c7-133">It is similar to the <see cref="P:System.Collections.IDictionaryEnumerator.Entry" /> property, except that `Entry` returns a <see cref="T:System.Collections.DictionaryEntry" /> rather than an <see cref="T:System.Object" />.</span></span></para></block>
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Key" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Value" />
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="219c7-134"><see cref="T:System.Collections.IDictionaryEnumerator" /> が、ディクショナリの最初のエントリの前、または最後のエントリの後に位置しています。</span><span class="sxs-lookup"><span data-stu-id="219c7-134">The <see cref="T:System.Collections.IDictionaryEnumerator" /> is positioned before the first entry of the dictionary or after the last entry.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public object Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Key" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionaryEnumerator.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Key { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Key : obj" Usage="System.Collections.IDictionaryEnumerator.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="219c7-135">現在のディクショナリ エントリのキーを取得します。</span><span class="sxs-lookup"><span data-stu-id="219c7-135">Gets the key of the current dictionary entry.</span></span></summary>
        <value><span data-ttu-id="219c7-136">列挙体の現在の要素のキー。</span><span class="sxs-lookup"><span data-stu-id="219c7-136">The key of the current element of the enumeration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
 <span data-ttu-id="219c7-137"><xref:System.Collections.IDictionaryEnumerator.Key%2A>は、次のいずれかの条件下では未定義です。</span><span class="sxs-lookup"><span data-stu-id="219c7-137"><xref:System.Collections.IDictionaryEnumerator.Key%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="219c7-138">列挙子は、列挙子が作成された直後に、コレクション内の最初の要素の前に配置されます。</span><span class="sxs-lookup"><span data-stu-id="219c7-138">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created.</span></span> <span data-ttu-id="219c7-139"><xref:System.Collections.IEnumerator.MoveNext%2A>の<xref:System.Collections.IDictionaryEnumerator.Key%2A>値を読み取る前に、列挙子をコレクションの最初の要素に進めるには、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="219c7-139"><xref:System.Collections.IEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IDictionaryEnumerator.Key%2A>.</span></span>  
  
-   <span data-ttu-id="219c7-140">コレクションの末尾を<xref:System.Collections.IEnumerator.MoveNext%2A>示す`false`、返されたの最後の呼び出し。</span><span class="sxs-lookup"><span data-stu-id="219c7-140">The last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="219c7-141">コレクションに加えられた変更 (要素の追加、変更、削除など) が原因で、列挙子が無効になります。</span><span class="sxs-lookup"><span data-stu-id="219c7-141">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="219c7-142"><xref:System.Collections.IDictionaryEnumerator.Key%2A> は、<xref:System.Collections.IEnumerator.MoveNext%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="219c7-142"><xref:System.Collections.IDictionaryEnumerator.Key%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="219c7-143"><xref:System.Collections.IEnumerator.MoveNext%2A>は<xref:System.Collections.IDictionaryEnumerator.Key%2A> 、列挙体の次の要素のキーに設定されます。</span><span class="sxs-lookup"><span data-stu-id="219c7-143"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IDictionaryEnumerator.Key%2A> to the key of the next element in enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Value" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Entry" />
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="219c7-144"><see cref="T:System.Collections.IDictionaryEnumerator" /> が、ディクショナリの最初のエントリの前、または最後のエントリの後に位置しています。</span><span class="sxs-lookup"><span data-stu-id="219c7-144">The <see cref="T:System.Collections.IDictionaryEnumerator" /> is positioned before the first entry of the dictionary or after the last entry.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionaryEnumerator.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Collections.IDictionaryEnumerator.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="219c7-145">現在のディクショナリ エントリの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="219c7-145">Gets the value of the current dictionary entry.</span></span></summary>
        <value><span data-ttu-id="219c7-146">列挙体の現在の要素の値。</span><span class="sxs-lookup"><span data-stu-id="219c7-146">The value of the current element of the enumeration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="219c7-147"><xref:System.Collections.IDictionaryEnumerator.Value%2A>は、次のいずれかの条件下では未定義です。</span><span class="sxs-lookup"><span data-stu-id="219c7-147"><xref:System.Collections.IDictionaryEnumerator.Value%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="219c7-148">列挙子は、列挙子が作成された直後に、コレクション内の最初の要素の前に配置されます。</span><span class="sxs-lookup"><span data-stu-id="219c7-148">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created.</span></span> <span data-ttu-id="219c7-149"><xref:System.Collections.IEnumerator.MoveNext%2A>の<xref:System.Collections.IDictionaryEnumerator.Value%2A>値を読み取る前に、列挙子をコレクションの最初の要素に進めるには、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="219c7-149"><xref:System.Collections.IEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IDictionaryEnumerator.Value%2A>.</span></span>  
  
-   <span data-ttu-id="219c7-150">コレクションの末尾を<xref:System.Collections.IEnumerator.MoveNext%2A>示す`false`、返されたの最後の呼び出し。</span><span class="sxs-lookup"><span data-stu-id="219c7-150">The last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="219c7-151">コレクションに加えられた変更 (要素の追加、変更、削除など) が原因で、列挙子が無効になります。</span><span class="sxs-lookup"><span data-stu-id="219c7-151">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="219c7-152"><xref:System.Collections.IDictionaryEnumerator.Value%2A> は、<xref:System.Collections.IEnumerator.MoveNext%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="219c7-152"><xref:System.Collections.IDictionaryEnumerator.Value%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="219c7-153"><xref:System.Collections.IEnumerator.MoveNext%2A>は<xref:System.Collections.IDictionaryEnumerator.Value%2A> 、列挙体の次の要素の値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="219c7-153"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IDictionaryEnumerator.Value%2A> to the value of the next element in enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Key" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Entry" />
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="219c7-154"><see cref="T:System.Collections.IDictionaryEnumerator" /> が、ディクショナリの最初のエントリの前、または最後のエントリの後に位置しています。</span><span class="sxs-lookup"><span data-stu-id="219c7-154">The <see cref="T:System.Collections.IDictionaryEnumerator" /> is positioned before the first entry of the dictionary or after the last entry.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
