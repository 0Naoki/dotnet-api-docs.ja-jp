<Type Name="Queue" FullName="System.Collections.Queue">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="35a21c57df8f37e412b63620230c911fe166fb4d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Queue : ICloneable, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Queue extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Queue" />
  <TypeSignature Language="VB.NET" Value="Public Class Queue&#xA;Implements ICloneable, ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class Queue : ICloneable, System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Queue/QueueDebugView))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ccc3f-101">Represents a first-in, first-out collection of objects.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ccc3f-101">Represents a first-in, first-out collection of objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc3f-102">このクラスは、循環を配列として、キューを実装します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-102">This class implements a queue as a circular array.</span></span> <span data-ttu-id="ccc3f-103">オブジェクトに格納されている、<xref:System.Collections.Queue>が一方の端に挿入され、他から削除します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-103">Objects stored in a <xref:System.Collections.Queue> are inserted at one end and removed from the other.</span></span>  
  
 <span data-ttu-id="ccc3f-104">キューおよびスタックは場合に役立ちますについて; 一時的な保存する必要があります。つまり、可能性がある場合の値を取得後に要素を破棄します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-104">Queues and stacks are useful when you need temporary storage for information; that is, when you might want to discard an element after retrieving its value.</span></span> <span data-ttu-id="ccc3f-105">使用して<xref:System.Collections.Queue>かどうかは、これが、コレクションに格納される順序と同じ順序での情報にアクセスする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-105">Use <xref:System.Collections.Queue> if you need to access the information in the same order that it is stored in the collection.</span></span> <span data-ttu-id="ccc3f-106">使用して<xref:System.Collections.Stack>逆の順序で、情報にアクセスする必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-106">Use <xref:System.Collections.Stack> if you need to access the information in reverse order.</span></span> <span data-ttu-id="ccc3f-107">使用して<xref:System.Collections.Concurrent.ConcurrentQueue%601>または<xref:System.Collections.Concurrent.ConcurrentStack%601>同時に複数のスレッドからコレクションにアクセスする必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-107">Use <xref:System.Collections.Concurrent.ConcurrentQueue%601> or <xref:System.Collections.Concurrent.ConcurrentStack%601> if you need to access the collection from multiple threads concurrently.</span></span>  
  
 <span data-ttu-id="ccc3f-108">次の 3 つの主要な操作を実行できる、<xref:System.Collections.Queue>とその要素。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-108">Three main operations can be performed on a <xref:System.Collections.Queue> and its elements:</span></span>  
  
-   <span data-ttu-id="ccc3f-109"><xref:System.Collections.Queue.Enqueue%2A> 末尾に要素を追加、<xref:System.Collections.Queue>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-109"><xref:System.Collections.Queue.Enqueue%2A> adds an element to the end of the <xref:System.Collections.Queue>.</span></span>  
  
-   <span data-ttu-id="ccc3f-110"><xref:System.Collections.Queue.Dequeue%2A> 先頭から最も古い要素を削除、<xref:System.Collections.Queue>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-110"><xref:System.Collections.Queue.Dequeue%2A> removes the oldest element from the start of the <xref:System.Collections.Queue>.</span></span>  
  
-   <span data-ttu-id="ccc3f-111"><xref:System.Collections.Queue.Peek%2A> 先頭にある最も古い要素を返します、<xref:System.Collections.Queue>からは削除されませんが、<xref:System.Collections.Queue>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-111"><xref:System.Collections.Queue.Peek%2A> returns the oldest element that is at the start of the <xref:System.Collections.Queue> but does not remove it from the <xref:System.Collections.Queue>.</span></span>  
  
 <span data-ttu-id="ccc3f-112">容量、<xref:System.Collections.Queue>要素の数が、<xref:System.Collections.Queue>を保持できます。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-112">The capacity of a <xref:System.Collections.Queue> is the number of elements the <xref:System.Collections.Queue> can hold.</span></span> <span data-ttu-id="ccc3f-113">要素が追加されるにつれて、<xref:System.Collections.Queue>容量を増やすは自動的に再割り当て、必要に応じて。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-113">As elements are added to a <xref:System.Collections.Queue>, the capacity is automatically increased as required through reallocation.</span></span>  <span data-ttu-id="ccc3f-114">呼び出すことによって、容量を削減できる<xref:System.Collections.Queue.TrimToSize%2A>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-114">The capacity can be decreased by calling <xref:System.Collections.Queue.TrimToSize%2A>.</span></span>  
  
 <span data-ttu-id="ccc3f-115">増加率より大きな空き領域が必要な場合に、現在の容量を乗算する数です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-115">The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</span></span>  <span data-ttu-id="ccc3f-116">増加率が決まるときに、<xref:System.Collections.Queue>を構築します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-116">The growth factor is determined when the <xref:System.Collections.Queue> is constructed.</span></span> <span data-ttu-id="ccc3f-117">既定の増加率は 2.0 です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-117">The default growth factor is 2.0.</span></span> <span data-ttu-id="ccc3f-118">容量、<xref:System.Collections.Queue>少なくとも最低 4 で、増加率に関係なく、常に増加します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-118">The capacity of the <xref:System.Collections.Queue> will always increase by at least a minimum of four, regardless of the growth factor.</span></span> <span data-ttu-id="ccc3f-119">たとえば、 <xref:System.Collections.Queue> 1.0 の増加率が常に高まります容量 4 でより大きな空き領域が必要な場合です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-119">For example, a <xref:System.Collections.Queue> with a growth factor of 1.0 will always increase in capacity by four when a greater capacity is required.</span></span>  
  
 <span data-ttu-id="ccc3f-120"><xref:System.Collections.Queue> 受け付ける`null`有効な値としてでき、重複する要素。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-120"><xref:System.Collections.Queue> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="ccc3f-121">このコレクションの汎用のバージョンについては、次を参照してください。 <xref:System.Collections.Generic.Queue%601?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ccc3f-121">For the generic version of this collection, see <xref:System.Collections.Generic.Queue%601?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccc3f-122">次の例は、作成し、値を追加する方法を示しています、<xref:System.Collections.Queue>とその値を印刷する方法です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-122">The following example shows how to create and add values to a <xref:System.Collections.Queue> and how to print out its values.</span></span>  
  
 [!code-cpp[Classic Queue Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue Example/CS/source.cs#1)]
 [!code-vb[Classic Queue Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="ccc3f-123">パブリック静的 (<see langword="Shared" /> Visual Basic で) この型のメンバーは、スレッド セーフであります。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ccc3f-123">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="ccc3f-124">インスタンス メンバーの場合は、スレッド セーフであるとは限りません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ccc3f-124">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="ccc3f-125">スレッド セーフを確保する、 <see cref="T:System.Collections.Queue" />、によって返されるラッパーを介してすべての操作を行う必要があります、<see cref="M:System.Collections.Queue.Synchronized(System.Collections.Queue)" />メソッドです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ccc3f-125">To guarantee the thread safety of the <see cref="T:System.Collections.Queue" />, all operations must be done through the wrapper returned by the <see cref="M:System.Collections.Queue.Synchronized(System.Collections.Queue)" /> method.</span>
      </span>
      <span data-ttu-id="ccc3f-126">コレクションの列挙は、本質的にスレッド セーフなプロシージャではありません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ccc3f-126">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="ccc3f-127">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ccc3f-127">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="ccc3f-128">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ccc3f-128">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.Generic.Queue`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ccc3f-129">Initializes a new instance of the <see cref="T:System.Collections.Queue" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-129">Initializes a new instance of the <see cref="T:System.Collections.Queue" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Queue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Queue();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ccc3f-130">Initializes a new instance of the <see cref="T:System.Collections.Queue" /> class that is empty, has the default initial capacity, and uses the default growth factor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-130">Initializes a new instance of the <see cref="T:System.Collections.Queue" /> class that is empty, has the default initial capacity, and uses the default growth factor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc3f-131">容量、<xref:System.Collections.Queue>要素の数が、<xref:System.Collections.Queue>を保持できます。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-131">The capacity of a <xref:System.Collections.Queue> is the number of elements the <xref:System.Collections.Queue> can hold.</span></span>  <span data-ttu-id="ccc3f-132">要素が追加されるにつれて、<xref:System.Collections.Queue>容量を増やすは自動的に再割り当て、必要に応じて。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-132">As elements are added to a <xref:System.Collections.Queue>, the capacity is automatically increased as required through reallocation.</span></span>  <span data-ttu-id="ccc3f-133">呼び出すことによって、容量を削減できる<xref:System.Collections.Queue.TrimToSize%2A>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-133">The capacity can be decreased by calling <xref:System.Collections.Queue.TrimToSize%2A>.</span></span>  
  
 <span data-ttu-id="ccc3f-134">増加率より大きな空き領域が必要な場合に、現在の容量を乗算する数です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-134">The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</span></span>  <span data-ttu-id="ccc3f-135">増加率が決まるときに、<xref:System.Collections.Queue>を構築します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-135">The growth factor is determined when the <xref:System.Collections.Queue> is constructed.</span></span>  
  
 <span data-ttu-id="ccc3f-136">このコンス トラクターは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-136">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Queue (System.Collections.ICollection col);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection col) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (col As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Queue(System::Collections::ICollection ^ col);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="col" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="col">
          <span data-ttu-id="ccc3f-137">The <see cref="T:System.Collections.ICollection" /> to copy elements from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-137">The <see cref="T:System.Collections.ICollection" /> to copy elements from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc3f-138">Initializes a new instance of the <see cref="T:System.Collections.Queue" /> class that contains elements copied from the specified collection, has the same initial capacity as the number of elements copied, and uses the default growth factor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-138">Initializes a new instance of the <see cref="T:System.Collections.Queue" /> class that contains elements copied from the specified collection, has the same initial capacity as the number of elements copied, and uses the default growth factor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc3f-139">容量、<xref:System.Collections.Queue>要素の数が、<xref:System.Collections.Queue>を保持できます。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-139">The capacity of a <xref:System.Collections.Queue> is the number of elements the <xref:System.Collections.Queue> can hold.</span></span>  <span data-ttu-id="ccc3f-140">要素が追加されるにつれて、<xref:System.Collections.Queue>容量を増やすは自動的に再割り当て、必要に応じて。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-140">As elements are added to a <xref:System.Collections.Queue>, the capacity is automatically increased as required through reallocation.</span></span>  <span data-ttu-id="ccc3f-141">呼び出すことによって、容量を削減できる<xref:System.Collections.Queue.TrimToSize%2A>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-141">The capacity can be decreased by calling <xref:System.Collections.Queue.TrimToSize%2A>.</span></span>  
  
 <span data-ttu-id="ccc3f-142">増加率より大きな空き領域が必要な場合に、現在の容量を乗算する数です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-142">The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</span></span>  <span data-ttu-id="ccc3f-143">増加率が決まるときに、<xref:System.Collections.Queue>を構築します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-143">The growth factor is determined when the <xref:System.Collections.Queue> is constructed.</span></span>  
  
 <span data-ttu-id="ccc3f-144">要素の上にコピー、<xref:System.Collections.Queue>によって読み取られる同じ順序で、<xref:System.Collections.IEnumerator>の<xref:System.Collections.ICollection>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-144">The elements are copied onto the <xref:System.Collections.Queue> in the same order they are read by the <xref:System.Collections.IEnumerator> of the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="ccc3f-145">このコンス トラクターは、O (`n`) 操作では、ここで`n`内の要素の数は、`col`です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-145">This constructor is an O(`n`) operation, where `n` is the number of elements in `col`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ccc3f-146">
            <paramref name="col" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-146">
              <paramref name="col" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Queue (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Queue(int capacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="ccc3f-147">The initial number of elements that the <see cref="T:System.Collections.Queue" /> can contain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-147">The initial number of elements that the <see cref="T:System.Collections.Queue" /> can contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc3f-148">Initializes a new instance of the <see cref="T:System.Collections.Queue" /> class that is empty, has the specified initial capacity, and uses the default growth factor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-148">Initializes a new instance of the <see cref="T:System.Collections.Queue" /> class that is empty, has the specified initial capacity, and uses the default growth factor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc3f-149">容量、<xref:System.Collections.Queue>要素の数が、<xref:System.Collections.Queue>を保持できます。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-149">The capacity of a <xref:System.Collections.Queue> is the number of elements the <xref:System.Collections.Queue> can hold.</span></span>  <span data-ttu-id="ccc3f-150">要素が追加されるにつれて、<xref:System.Collections.Queue>容量を増やすは自動的に再割り当て、必要に応じて。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-150">As elements are added to a <xref:System.Collections.Queue>, the capacity is automatically increased as required through reallocation.</span></span>  <span data-ttu-id="ccc3f-151">呼び出すことによって、容量を削減できる<xref:System.Collections.Queue.TrimToSize%2A>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-151">The capacity can be decreased by calling <xref:System.Collections.Queue.TrimToSize%2A>.</span></span>  
  
 <span data-ttu-id="ccc3f-152">増加率より大きな空き領域が必要な場合に、現在の容量を乗算する数です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-152">The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</span></span>  <span data-ttu-id="ccc3f-153">増加率が決まるときに、<xref:System.Collections.Queue>を構築します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-153">The growth factor is determined when the <xref:System.Collections.Queue> is constructed.</span></span>  
  
 <span data-ttu-id="ccc3f-154">コレクションのサイズを推定できる場合に要素を追加するときにサイズ変更操作の数を実行する必要があるの初期量を指定する、<xref:System.Collections.Queue>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-154">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Queue>.</span></span>  
  
 <span data-ttu-id="ccc3f-155">このコンス トラクターは、O (`n`) 操作では、ここで`n`は`capacity`します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-155">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ccc3f-156">
            <paramref name="capacity" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-156">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Queue (int capacity, float growFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, float32 growFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.#ctor(System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, growFactor As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Queue(int capacity, float growFactor);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="growFactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="ccc3f-157">The initial number of elements that the <see cref="T:System.Collections.Queue" /> can contain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-157">The initial number of elements that the <see cref="T:System.Collections.Queue" /> can contain.</span>
          </span>
        </param>
        <param name="growFactor">
          <span data-ttu-id="ccc3f-158">The factor by which the capacity of the <see cref="T:System.Collections.Queue" /> is expanded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-158">The factor by which the capacity of the <see cref="T:System.Collections.Queue" /> is expanded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc3f-159">Initializes a new instance of the <see cref="T:System.Collections.Queue" /> class that is empty, has the specified initial capacity, and uses the specified growth factor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-159">Initializes a new instance of the <see cref="T:System.Collections.Queue" /> class that is empty, has the specified initial capacity, and uses the specified growth factor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc3f-160">容量、<xref:System.Collections.Queue>要素の数が、<xref:System.Collections.Queue>を保持できます。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-160">The capacity of a <xref:System.Collections.Queue> is the number of elements the <xref:System.Collections.Queue> can hold.</span></span>  <span data-ttu-id="ccc3f-161">要素が追加されるにつれて、<xref:System.Collections.Queue>容量を増やすは自動的に再割り当て、必要に応じて。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-161">As elements are added to a <xref:System.Collections.Queue>, the capacity is automatically increased as required through reallocation.</span></span>  <span data-ttu-id="ccc3f-162">呼び出すことによって、容量を削減できる<xref:System.Collections.Queue.TrimToSize%2A>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-162">The capacity can be decreased by calling <xref:System.Collections.Queue.TrimToSize%2A>.</span></span>  
  
 <span data-ttu-id="ccc3f-163">増加率より大きな空き領域が必要な場合に、現在の容量を乗算する数です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-163">The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</span></span>  <span data-ttu-id="ccc3f-164">増加率が決まるときに、<xref:System.Collections.Queue>を構築します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-164">The growth factor is determined when the <xref:System.Collections.Queue> is constructed.</span></span> <span data-ttu-id="ccc3f-165">容量、<xref:System.Collections.Queue>増加率に関係なくの最小値は常にだけ増加させる; 1.0 の増加率が防ぐことはできません、<xref:System.Collections.Queue>のサイズを大きくします。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-165">The capacity of the <xref:System.Collections.Queue> will always increase by a minimum value, regardless of the growth factor; a growth factor of 1.0 will not prevent the <xref:System.Collections.Queue> from increasing in size.</span></span>  
  
 <span data-ttu-id="ccc3f-166">コレクションのサイズを推定できる場合に要素を追加するときにサイズ変更操作の数を実行する必要があるの初期量を指定する、<xref:System.Collections.Queue>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-166">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Queue>.</span></span>  
  
 <span data-ttu-id="ccc3f-167">このコンス トラクターは、O (`n`) 操作では、ここで`n`は`capacity`します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-167">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ccc3f-168">
            <paramref name="capacity" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-168">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
          <span data-ttu-id="ccc3f-169">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-169">-or-</span>
          </span>
          <span data-ttu-id="ccc3f-170">
            <paramref name="growFactor" /> is less than 1.0 or greater than 10.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-170">
              <paramref name="growFactor" /> is less than 1.0 or greater than 10.0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ccc3f-171">Removes all objects from the <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-171">Removes all objects from the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc3f-172"><xref:System.Collections.Queue.Count%2A> 0 に設定し、コレクションの要素から他のオブジェクトへの参照も解放します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-172"><xref:System.Collections.Queue.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="ccc3f-173">容量はそのまま残ります。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-173">The capacity remains unchanged.</span></span> <span data-ttu-id="ccc3f-174">容量をリセットする、 <xref:System.Collections.Queue>、呼び出す<xref:System.Collections.Queue.TrimToSize%2A>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-174">To reset the capacity of the <xref:System.Collections.Queue>, call <xref:System.Collections.Queue.TrimToSize%2A>.</span></span> <span data-ttu-id="ccc3f-175">空のトリミング<xref:System.Collections.Queue>のキャパシティを設定、<xref:System.Collections.Queue>を既定の容量。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-175">Trimming an empty <xref:System.Collections.Queue> sets the capacity of the <xref:System.Collections.Queue> to the default capacity.</span></span>  
  
 <span data-ttu-id="ccc3f-176">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.Queue.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-176">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Queue.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccc3f-177">次の例の値をクリアする方法を示しています、<xref:System.Collections.Queue>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-177">The following example shows how to clear the values of the <xref:System.Collections.Queue>.</span></span>  
  
 [!code-cpp[Classic Queue.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic Queue.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Queue.TrimToSize" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ccc3f-178">Creates a shallow copy of the <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-178">Creates a shallow copy of the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccc3f-179">A shallow copy of the <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-179">A shallow copy of the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc3f-180">コレクションの簡易コピーは、参照型または値の型が参照先のオブジェクトはコピーしないかどうか、コレクションの要素のみをコピーします。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-180">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="ccc3f-181">新しいコレクション内の参照は、元のコレクション内の参照をポイントする同じオブジェクトをポイントします。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-181">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="ccc3f-182">これに対し、コレクションのディープ コピーされた要素をコピーして、要素が直接または間接的に参照するすべてです。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-182">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="ccc3f-183">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.Queue.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-183">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Queue.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="ccc3f-184">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-184">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.Queue" />.</span>
          </span>
          <span data-ttu-id="ccc3f-185">The value can be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-185">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc3f-186">Determines whether an element is in the <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-186">Determines whether an element is in the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccc3f-187">
            <see langword="true" /> if <paramref name="obj" /> is found in the <see cref="T:System.Collections.Queue" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-187">
              <see langword="true" /> if <paramref name="obj" /> is found in the <see cref="T:System.Collections.Queue" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc3f-188">このメソッドを呼び出すことで等しいかどうかを判断<xref:System.Object.Equals%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-188">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ccc3f-189">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.Queue.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-189">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Queue.Count%2A>.</span></span>  
  
 <span data-ttu-id="ccc3f-190">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>メソッド`obj`を決定するかどうか`item`が存在します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-190">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `obj` to determine whether `item` exists.</span></span> <span data-ttu-id="ccc3f-191">.NET Framework の以前のバージョンでは、この決定を使用して行われた、<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>のメソッド、`obj`パラメーター コレクション内のオブジェクトにします。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-191">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `obj` parameter on the objects in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="ccc3f-192">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-192">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Queue" />.</span>
          </span>
          <span data-ttu-id="ccc3f-193">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-193">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="ccc3f-194">The zero-based index in <c>array</c> at which copying begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-194">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc3f-195">Copies the <see cref="T:System.Collections.Queue" /> elements to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-195">Copies the <see cref="T:System.Collections.Queue" /> elements to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc3f-196">要素のコピー先は、<xref:System.Array>を列挙子が反復処理する順序と同じ順序で、<xref:System.Collections.Queue>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-196">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Queue>.</span></span>  
  
 <span data-ttu-id="ccc3f-197">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.Queue.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-197">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Queue.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccc3f-198">次の例をコピーする方法を示しています、<xref:System.Collections.Queue>を 1 次元配列にします。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-198">The following example shows how to copy a <xref:System.Collections.Queue> into a one-dimensional array.</span></span>  
  
 [!code-cpp[Classic Queue.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Queue.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ccc3f-199">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-199">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ccc3f-200">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-200">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ccc3f-201">
            <paramref name="array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-201">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="ccc3f-202">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-202">-or-</span>
          </span>
          <span data-ttu-id="ccc3f-203">The number of elements in the source <see cref="T:System.Collections.Queue" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-203">The number of elements in the source <see cref="T:System.Collections.Queue" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="ccc3f-204">The type of the source <see cref="T:System.Collections.Queue" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-204">The type of the source <see cref="T:System.Collections.Queue" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Queue.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccc3f-205">Gets the number of elements contained in the <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-205">Gets the number of elements contained in the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccc3f-206">
            <see cref="T:System.Collections.Queue" /> に格納されている要素の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-206">The number of elements contained in the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc3f-207">容量、<xref:System.Collections.Queue>は要素の数を<xref:System.Collections.Queue>格納できます。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-207">The capacity of a <xref:System.Collections.Queue> is the number of elements that the <xref:System.Collections.Queue> can store.</span></span> <span data-ttu-id="ccc3f-208"><xref:System.Collections.Queue.Count%2A> 実際には、要素の数、<xref:System.Collections.Queue>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-208"><xref:System.Collections.Queue.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Queue>.</span></span>  
  
 <span data-ttu-id="ccc3f-209">容量、<xref:System.Collections.Queue>は常により大きいまたは等しい<xref:System.Collections.Queue.Count%2A>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-209">The capacity of a <xref:System.Collections.Queue> is always greater than or equal to <xref:System.Collections.Queue.Count%2A>.</span></span> <span data-ttu-id="ccc3f-210">場合<xref:System.Collections.Queue.Count%2A>要素を追加するときに、容量を超える場合、容量は前の要素をコピーし、新しい要素を追加する前に、内部配列の再割り当てによって自動的に増加します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-210">If <xref:System.Collections.Queue.Count%2A> exceeds the capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span> <span data-ttu-id="ccc3f-211">これは増加率を現在の容量を乗算することによって新しい容量を決定ときに決定されます、<xref:System.Collections.Queue>を構築します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-211">The new capacity is determined by multiplying the current capacity by the growth factor, which is determined when the <xref:System.Collections.Queue> is constructed.</span></span> <span data-ttu-id="ccc3f-212">容量、<xref:System.Collections.Queue>増加率に関係なくの最小値は常にだけ増加させる; 1.0 の増加率が防ぐことはできません、<xref:System.Collections.Queue>のサイズを大きくします。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-212">The capacity of the <xref:System.Collections.Queue> will always increase by a minimum value, regardless of the growth factor; a growth factor of 1.0 will not prevent the <xref:System.Collections.Queue> from increasing in size.</span></span>  
  
 <span data-ttu-id="ccc3f-213">呼び出すことによって、容量を削減できる<xref:System.Collections.Queue.TrimToSize%2A>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-213">The capacity can be decreased by calling <xref:System.Collections.Queue.TrimToSize%2A>.</span></span>  
  
 <span data-ttu-id="ccc3f-214">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-214">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dequeue">
      <MemberSignature Language="C#" Value="public virtual object Dequeue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dequeue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.Dequeue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Dequeue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Dequeue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ccc3f-215">Removes and returns the object at the beginning of the <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-215">Removes and returns the object at the beginning of the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccc3f-216">The object that is removed from the beginning of the <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-216">The object that is removed from the beginning of the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc3f-217">このメソッドは <xref:System.Collections.Queue.Peek%2A> メソッドに類似していますが、<xref:System.Collections.Queue.Peek%2A> は <xref:System.Collections.Queue> を変更しません。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-217">This method is similar to the <xref:System.Collections.Queue.Peek%2A> method, but <xref:System.Collections.Queue.Peek%2A> does not modify the <xref:System.Collections.Queue>.</span></span>  
  
 <span data-ttu-id="ccc3f-218">`null` 追加することができます、<xref:System.Collections.Queue>値として。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-218">`null` can be added to the <xref:System.Collections.Queue> as a value.</span></span> <span data-ttu-id="ccc3f-219">Null 値との末尾を識別する、 <xref:System.Collections.Queue>、確認、<xref:System.Collections.Queue.Count%2A>プロパティまたは catch、 <xref:System.InvalidOperationException>、ときにスローする、<xref:System.Collections.Queue>が空です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-219">To distinguish between a null value and the end of the <xref:System.Collections.Queue>, check the <xref:System.Collections.Queue.Count%2A> property or catch the <xref:System.InvalidOperationException>, which is thrown when the <xref:System.Collections.Queue> is empty.</span></span>  
  
 <span data-ttu-id="ccc3f-220">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-220">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccc3f-221">次の例は、要素を追加する方法を示しています、 <xref:System.Collections.Queue>、要素を削除、 <xref:System.Collections.Queue>、またはの先頭の要素を表示、<xref:System.Collections.Queue>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-221">The following example shows how to add elements to the <xref:System.Collections.Queue>, remove elements from the <xref:System.Collections.Queue>, or view the element at the beginning of the <xref:System.Collections.Queue>.</span></span>  
  
 [!code-cpp[Classic Queue.Enqueue Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue.Enqueue Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/CS/source.cs#1)]
 [!code-vb[Classic Queue.Enqueue Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ccc3f-222">The <see cref="T:System.Collections.Queue" /> is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-222">The <see cref="T:System.Collections.Queue" /> is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Queue.Enqueue(System.Object)" />
        <altmember cref="M:System.Collections.Queue.Peek" />
      </Docs>
    </Member>
    <Member MemberName="Enqueue">
      <MemberSignature Language="C#" Value="public virtual void Enqueue (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Enqueue(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.Enqueue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Enqueue (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Enqueue(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="ccc3f-223">The object to add to the <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-223">The object to add to the <see cref="T:System.Collections.Queue" />.</span>
          </span>
          <span data-ttu-id="ccc3f-224">The value can be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-224">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc3f-225">Adds an object to the end of the <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-225">Adds an object to the end of the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc3f-226">容量、<xref:System.Collections.Queue>要素の数が、<xref:System.Collections.Queue>を保持できます。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-226">The capacity of a <xref:System.Collections.Queue> is the number of elements the <xref:System.Collections.Queue> can hold.</span></span>  <span data-ttu-id="ccc3f-227">要素が追加されるにつれて、<xref:System.Collections.Queue>容量を増やすは自動的に再割り当て、必要に応じて。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-227">As elements are added to a <xref:System.Collections.Queue>, the capacity is automatically increased as required through reallocation.</span></span>  <span data-ttu-id="ccc3f-228">呼び出すことによって、容量を削減できる<xref:System.Collections.Queue.TrimToSize%2A>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-228">The capacity can be decreased by calling <xref:System.Collections.Queue.TrimToSize%2A>.</span></span>  
  
 <span data-ttu-id="ccc3f-229">増加率より大きな空き領域が必要な場合に、現在の容量を乗算する数です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-229">The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</span></span>  <span data-ttu-id="ccc3f-230">増加率が決まるときに、<xref:System.Collections.Queue>を構築します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-230">The growth factor is determined when the <xref:System.Collections.Queue> is constructed.</span></span> <span data-ttu-id="ccc3f-231">容量、<xref:System.Collections.Queue>増加率に関係なくの最小値は常にだけ増加させる; 1.0 の増加率が防ぐことはできません、<xref:System.Collections.Queue>のサイズを大きくします。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-231">The capacity of the <xref:System.Collections.Queue> will always increase by a minimum value, regardless of the growth factor; a growth factor of 1.0 will not prevent the <xref:System.Collections.Queue> from increasing in size.</span></span>  
  
 <span data-ttu-id="ccc3f-232">場合<xref:System.Collections.Queue.Count%2A>が小さい内部配列の容量よりも、このメソッドは、o (1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-232">If <xref:System.Collections.Queue.Count%2A> is less than the capacity of the internal array, this method is an O(1) operation.</span></span> <span data-ttu-id="ccc3f-233">内部の配列は、新しい要素のために再割り当てする必要がある、このメソッドが O (`n`) 操作では、ここで`n`は<xref:System.Collections.Queue.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-233">If the internal array needs to be reallocated to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Queue.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccc3f-234">次の例は、要素を追加する方法を示しています、 <xref:System.Collections.Queue>、要素を削除、 <xref:System.Collections.Queue>、またはの先頭の要素を表示、<xref:System.Collections.Queue>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-234">The following example shows how to add elements to the <xref:System.Collections.Queue>, remove elements from the <xref:System.Collections.Queue>, or view the element at the beginning of the <xref:System.Collections.Queue>.</span></span>  
  
 [!code-cpp[Classic Queue.Enqueue Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue.Enqueue Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/CS/source.cs#1)]
 [!code-vb[Classic Queue.Enqueue Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Queue.Dequeue" />
        <altmember cref="M:System.Collections.Queue.Peek" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ccc3f-235">Returns an enumerator that iterates through the <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-235">Returns an enumerator that iterates through the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccc3f-236">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-236">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc3f-237">C# 言語の `foreach` ステートメント (Visual Basic の場合は `for each`) を使用することで列挙子の複雑さを回避できます。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-237">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="ccc3f-238">したがって、列挙子を直接操作するのではなく、`foreach` を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-238">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="ccc3f-239">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-239">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="ccc3f-240">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-240">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="ccc3f-241"><xref:System.Collections.IEnumerator.Reset%2A> を実行した場合も、列挙子はこの位置に戻されます。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-241"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="ccc3f-242">この位置では、<xref:System.Collections.IEnumerator.Current%2A> が未定義です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-242">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="ccc3f-243">そのため、<xref:System.Collections.IEnumerator.MoveNext%2A> の値を読み取る前に、<xref:System.Collections.IEnumerator.Current%2A> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-243">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="ccc3f-244"><xref:System.Collections.IEnumerator.Current%2A> は、<xref:System.Collections.IEnumerator.MoveNext%2A> または <xref:System.Collections.IEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-244"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="ccc3f-245"><xref:System.Collections.IEnumerator.MoveNext%2A> は、<xref:System.Collections.IEnumerator.Current%2A> を次の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-245"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="ccc3f-246">場合<xref:System.Collections.IEnumerator.MoveNext%2A>列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと<xref:System.Collections.IEnumerator.MoveNext%2A>返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-246">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="ccc3f-247">列挙子がこの位置では、後続の呼び出しの場合<xref:System.Collections.IEnumerator.MoveNext%2A>を返すことも`false`します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-247">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="ccc3f-248">最後の呼び出し場合<xref:System.Collections.IEnumerator.MoveNext%2A>返される`false`、<xref:System.Collections.IEnumerator.Current%2A>が定義されていません。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-248">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="ccc3f-249"><xref:System.Collections.IEnumerator.Current%2A> をコレクションの最初の要素にもう一度設定するには、<xref:System.Collections.IEnumerator.Reset%2A> を呼び出してから <xref:System.Collections.IEnumerator.MoveNext%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-249">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="ccc3f-250">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-250">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="ccc3f-251">コレクションに対して変更 (要素の追加、変更、削除など) が行われると、列挙子は回復不可能な無効状態になり、その動作は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-251">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="ccc3f-252">列挙子にはコレクションへの排他アクセス権限はないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-252">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="ccc3f-253">列挙処理でスレッド セーフを確保するには、列挙処理が終わるまでコレクションをロックできます。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-253">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="ccc3f-254">コレクションに対し複数のスレッドがアクセスして読み取りや書き込みを行うことができるようにするには、独自に同期化を実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-254">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="ccc3f-255">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-255">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Queue.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccc3f-256">Gets a value indicating whether access to the <see cref="T:System.Collections.Queue" /> is synchronized (thread safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-256">Gets a value indicating whether access to the <see cref="T:System.Collections.Queue" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccc3f-257">
            <see langword="true" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Collections.Queue" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-257">
              <see langword="true" /> if access to the <see cref="T:System.Collections.Queue" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ccc3f-258">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-258">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc3f-259">スレッド セーフを確保する、 <xref:System.Collections.Queue>、によって返されるラッパーを介してすべての操作を行う必要があります、<xref:System.Collections.Queue.Synchronized%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-259">To guarantee the thread safety of the <xref:System.Collections.Queue>, all operations must be done through the wrapper returned by the <xref:System.Collections.Queue.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="ccc3f-260">コレクションの列挙は、本質的にスレッド セーフなプロシージャではありません。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-260">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="ccc3f-261">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-261">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="ccc3f-262">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-262">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccc3f-263">次のコード例を使用してコレクションをロックする方法を示しています、<xref:System.Collections.Queue.SyncRoot%2A>列挙中にします。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-263">The following code example shows how to lock the collection using the <xref:System.Collections.Queue.SyncRoot%2A> during the entire enumeration.</span></span> <span data-ttu-id="ccc3f-264">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-264">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 [!code-cpp[Classic Queue.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic Queue.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic Queue.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="ccc3f-265">次の例は、同期する方法を示します、 <xref:System.Collections.Queue>、かどうかを<xref:System.Collections.Queue>が同期されているし、同期を使用して<xref:System.Collections.Queue>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-265">The following example shows how to synchronize a <xref:System.Collections.Queue>, determine if a <xref:System.Collections.Queue> is synchronized, and use a synchronized <xref:System.Collections.Queue>.</span></span>  
  
 [!code-cpp[Classic Queue.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic Queue.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Queue.SyncRoot" />
        <altmember cref="M:System.Collections.Queue.Synchronized(System.Collections.Queue)" />
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public virtual object Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Peek () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Peek();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ccc3f-266">Returns the object at the beginning of the <see cref="T:System.Collections.Queue" /> without removing it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-266">Returns the object at the beginning of the <see cref="T:System.Collections.Queue" /> without removing it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccc3f-267">The object at the beginning of the <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-267">The object at the beginning of the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc3f-268">このメソッドは <xref:System.Collections.Queue.Dequeue%2A> メソッドに類似していますが、<xref:System.Collections.Queue.Peek%2A> は <xref:System.Collections.Queue> を変更しません。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-268">This method is similar to the <xref:System.Collections.Queue.Dequeue%2A> method, but <xref:System.Collections.Queue.Peek%2A> does not modify the <xref:System.Collections.Queue>.</span></span>  
  
 <span data-ttu-id="ccc3f-269">`null` 追加することができます、<xref:System.Collections.Queue>値として。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-269">`null` can be added to the <xref:System.Collections.Queue> as a value.</span></span> <span data-ttu-id="ccc3f-270">Null 値との末尾を識別する、 <xref:System.Collections.Queue>、確認、<xref:System.Collections.Queue.Count%2A>プロパティまたは catch、 <xref:System.InvalidOperationException>、ときにスローする、<xref:System.Collections.Queue>が空です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-270">To distinguish between a null value and the end of the <xref:System.Collections.Queue>, check the <xref:System.Collections.Queue.Count%2A> property or catch the <xref:System.InvalidOperationException>, which is thrown when the <xref:System.Collections.Queue> is empty.</span></span>  
  
 <span data-ttu-id="ccc3f-271">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-271">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccc3f-272">次の例は、要素を追加する方法を示しています、 <xref:System.Collections.Queue>、要素を削除、 <xref:System.Collections.Queue>、またはの先頭の要素を表示、<xref:System.Collections.Queue>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-272">The following example shows how to add elements to the <xref:System.Collections.Queue>, remove elements from the <xref:System.Collections.Queue>, or view the element at the beginning of the <xref:System.Collections.Queue>.</span></span>  
  
 [!code-cpp[Classic Queue.Enqueue Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue.Enqueue Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/CS/source.cs#1)]
 [!code-vb[Classic Queue.Enqueue Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ccc3f-273">The <see cref="T:System.Collections.Queue" /> is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-273">The <see cref="T:System.Collections.Queue" /> is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Queue.Enqueue(System.Object)" />
        <altmember cref="M:System.Collections.Queue.Dequeue" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.Queue Synchronized (System.Collections.Queue queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Queue Synchronized(class System.Collections.Queue queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.Synchronized(System.Collections.Queue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Queue ^ Synchronized(System::Collections::Queue ^ queue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Queue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queue" Type="System.Collections.Queue" />
      </Parameters>
      <Docs>
        <param name="queue">
          <span data-ttu-id="ccc3f-274">The <see cref="T:System.Collections.Queue" /> to synchronize.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-274">The <see cref="T:System.Collections.Queue" /> to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc3f-275">Returns a new <see cref="T:System.Collections.Queue" /> that wraps the original queue, and is thread safe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-275">Returns a new <see cref="T:System.Collections.Queue" /> that wraps the original queue, and is thread safe.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccc3f-276">A <see cref="T:System.Collections.Queue" /> wrapper that is synchronized (thread safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-276">A <see cref="T:System.Collections.Queue" /> wrapper that is synchronized (thread safe).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc3f-277">このメソッドによって返されるラッパーは、スレッド セーフな方法で実行されるように操作が実行される前に、キューをロックします。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-277">The wrapper returned by this method locks the queue before an operation is performed so that it is performed in a thread-safe manner.</span></span>  
  
 <span data-ttu-id="ccc3f-278">スレッド セーフを確保する、 <xref:System.Collections.Queue>、このラッパーのみを通じてすべての操作を行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-278">To guarantee the thread safety of the <xref:System.Collections.Queue>, all operations must be done through this wrapper only.</span></span>  
  
 <span data-ttu-id="ccc3f-279">コレクションの列挙は、本質的にスレッド セーフなプロシージャではありません。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-279">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="ccc3f-280">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-280">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="ccc3f-281">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-281">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccc3f-282">次のコード例を使用してコレクションをロックする方法を示しています、<xref:System.Collections.Queue.SyncRoot%2A>列挙中にします。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-282">The following code example shows how to lock the collection using the <xref:System.Collections.Queue.SyncRoot%2A> during the entire enumeration.</span></span> <span data-ttu-id="ccc3f-283">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-283">This method is an O(1) operation.</span></span>  
  
 [!code-cpp[Classic Queue.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic Queue.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic Queue.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="ccc3f-284">次の例は、同期する方法を示します、 <xref:System.Collections.Queue>、かどうかを<xref:System.Collections.Queue>が同期されているし、同期を使用して<xref:System.Collections.Queue>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-284">The following example shows how to synchronize a <xref:System.Collections.Queue>, determine if a <xref:System.Collections.Queue> is synchronized and use a synchronized <xref:System.Collections.Queue>.</span></span>  
  
 [!code-cpp[Classic Queue.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic Queue.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ccc3f-285">
            <paramref name="queue" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-285">
              <paramref name="queue" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Queue.IsSynchronized" />
        <altmember cref="P:System.Collections.Queue.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Queue.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccc3f-286">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-286">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccc3f-287">
            <see cref="T:System.Collections.Queue" /> へのアクセスの同期に使用できるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-287">An object that can be used to synchronize access to the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc3f-288">同期されたバージョンを作成する、<xref:System.Collections.Queue>を使用して、<xref:System.Collections.Queue.Synchronized%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-288">To create a synchronized version of the <xref:System.Collections.Queue>, use the <xref:System.Collections.Queue.Synchronized%2A> method.</span></span> <span data-ttu-id="ccc3f-289">ただし、派生クラスは、独自の同期されたバージョンを指定、<xref:System.Collections.Queue>を使用して、<xref:System.Collections.Queue.SyncRoot%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-289">However, derived classes can provide their own synchronized version of the <xref:System.Collections.Queue> using the <xref:System.Collections.Queue.SyncRoot%2A> property.</span></span> <span data-ttu-id="ccc3f-290">同期されたコードで操作を実行する必要があります、<xref:System.Collections.Queue.SyncRoot%2A>の<xref:System.Collections.Queue>、上で直接、<xref:System.Collections.Queue>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-290">The synchronizing code must perform operations on the <xref:System.Collections.Queue.SyncRoot%2A> of the <xref:System.Collections.Queue>, not directly on the <xref:System.Collections.Queue>.</span></span> <span data-ttu-id="ccc3f-291">これにより、他のオブジェクトから派生したコレクションを適切に操作できるようになります。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-291">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="ccc3f-292">具体的には、同時に変更する可能性がある別スレッドとの適切な同期を維持、<xref:System.Collections.Queue>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-292">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Queue> object.</span></span>  
  
 <span data-ttu-id="ccc3f-293">コレクションの列挙は、本質的にスレッド セーフなプロシージャではありません。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-293">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="ccc3f-294">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-294">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="ccc3f-295">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-295">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccc3f-296">次のコード例を使用してコレクションをロックする方法を示しています、<xref:System.Collections.Queue.SyncRoot%2A>列挙中にします。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-296">The following code example shows how to lock the collection using the <xref:System.Collections.Queue.SyncRoot%2A> during the entire enumeration.</span></span> <span data-ttu-id="ccc3f-297">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-297">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 [!code-cpp[Classic Queue.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic Queue.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic Queue.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Queue.IsSynchronized" />
        <altmember cref="M:System.Collections.Queue.Synchronized(System.Collections.Queue)" />
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public virtual object[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToArray () As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ ToArray();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ccc3f-298">Copies the <see cref="T:System.Collections.Queue" /> elements to a new array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-298">Copies the <see cref="T:System.Collections.Queue" /> elements to a new array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccc3f-299">A new array containing elements copied from the <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-299">A new array containing elements copied from the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc3f-300"><xref:System.Collections.Queue>は変更されません。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-300">The <xref:System.Collections.Queue> is not modified.</span></span> <span data-ttu-id="ccc3f-301">先頭から要素の順序と同じ新しい配列の要素の順序は、<xref:System.Collections.Queue>の末尾にします。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-301">The order of the elements in the new array is the same as the order of the elements from the beginning of the <xref:System.Collections.Queue> to its end.</span></span>  
  
 <span data-ttu-id="ccc3f-302">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.Queue.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-302">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Queue.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccc3f-303">次の例をコピーする方法を示しています、<xref:System.Collections.Queue>を 1 次元配列にします。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-303">The following example shows how to copy a <xref:System.Collections.Queue> into a one-dimensional array.</span></span>  
  
 [!code-cpp[Classic Queue.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Queue.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimToSize">
      <MemberSignature Language="C#" Value="public virtual void TrimToSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimToSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.TrimToSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimToSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimToSize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ccc3f-304">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-304">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc3f-305">このメソッドは、キューのメモリ オーバーヘッドを最小のキューに新しい要素が追加されない場合に使用できます。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-305">This method can be used to minimize a queue's memory overhead if no new elements will be added to the queue.</span></span>  
  
 <span data-ttu-id="ccc3f-306">リセットする、<xref:System.Collections.Queue>を初期状態に呼び出し、<xref:System.Collections.Queue.Clear%2A>メソッドを呼び出す前に<xref:System.Collections.Queue.TrimToSize%2A>です。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-306">To reset a <xref:System.Collections.Queue> to its initial state, call the <xref:System.Collections.Queue.Clear%2A> method before calling <xref:System.Collections.Queue.TrimToSize%2A>.</span></span> <span data-ttu-id="ccc3f-307">空のトリミング<xref:System.Collections.Queue>のキャパシティを設定、<xref:System.Collections.Queue>を既定の容量。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-307">Trimming an empty <xref:System.Collections.Queue> sets the capacity of the <xref:System.Collections.Queue> to the default capacity.</span></span>  
  
 <span data-ttu-id="ccc3f-308">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.Queue.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="ccc3f-308">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Queue.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ccc3f-309">The <see cref="T:System.Collections.Queue" /> is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc3f-309">The <see cref="T:System.Collections.Queue" /> is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Queue.Clear" />
        <altmember cref="P:System.Collections.Queue.Count" />
      </Docs>
    </Member>
  </Members>
</Type>