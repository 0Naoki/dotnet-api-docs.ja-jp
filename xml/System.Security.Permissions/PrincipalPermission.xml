<Type Name="PrincipalPermission" FullName="System.Security.Permissions.PrincipalPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="45b5687ef69d2ec0515650362cb1c7e8b7f92ad2" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70312639" /></Metadata><TypeSignature Language="C#" Value="public sealed class PrincipalPermission : System.Security.IPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PrincipalPermission extends System.Object implements class System.Security.IPermission, class System.Security.ISecurityEncodable, class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.PrincipalPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PrincipalPermission&#xA;Implements IPermission, IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrincipalPermission sealed : System::Security::IPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type PrincipalPermission = class&#xA;    interface IPermission&#xA;    interface IUnrestrictedPermission&#xA;    interface ISecurityEncodable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.IPermission</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="29f49-101">宣言セキュリティ アクションと強制セキュリティ アクションの両方のために定義された言語構成要素を使用して、アクティブ プリンシパル (<see cref="T:System.Security.Principal.IPrincipal" /> のトピックを参照) をチェックできるようにします。</span><span class="sxs-lookup"><span data-stu-id="29f49-101">Allows checks against the active principal (see <see cref="T:System.Security.Principal.IPrincipal" />) using the language constructs defined for both declarative and imperative security actions.</span></span> <span data-ttu-id="29f49-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="29f49-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29f49-103">Id 情報 (ユーザー名とロール) をコンストラクターに渡すことで<xref:System.Security.Permissions.PrincipalPermission> 、を使用して、アクティブなプリンシパルの id がこの情報と一致することを要求できます。</span><span class="sxs-lookup"><span data-stu-id="29f49-103">By passing identity information (user name and role) to the constructor, <xref:System.Security.Permissions.PrincipalPermission> can be used to demand that the identity of the active principal matches this information.</span></span>  
  
 <span data-ttu-id="29f49-104">アクティブな<xref:System.Security.Principal.IPrincipal>と関連付けら<xref:System.Security.Principal.IIdentity>れているを一致させるには、指定した id とロールの両方が一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="29f49-104">To match the active <xref:System.Security.Principal.IPrincipal> and associated <xref:System.Security.Principal.IIdentity>, both the specified identity and role must match.</span></span> <span data-ttu-id="29f49-105">Id `null`文字列が使用されている場合は、任意の id と一致する要求として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="29f49-105">If `null` identity string is used, it is interpreted as a request to match any identity.</span></span> <span data-ttu-id="29f49-106">Role 文字列`null`の使用は、どのロールとも一致します。</span><span class="sxs-lookup"><span data-stu-id="29f49-106">Use of `null` role string will match any role.</span></span> <span data-ttu-id="29f49-107">暗黙的に、また`null`は`name` `role` の<xref:System.Security.Permissions.PrincipalPermission>パラメーターを渡すと、任意<xref:System.Security.Principal.IPrincipal>のの id およびロールと一致します。</span><span class="sxs-lookup"><span data-stu-id="29f49-107">By implication, passing `null` parameter for `name` or `role` to <xref:System.Security.Permissions.PrincipalPermission> will match the identity and roles in any <xref:System.Security.Principal.IPrincipal>.</span></span> <span data-ttu-id="29f49-108">が、認証されたエンティティ<xref:System.Security.Permissions.PrincipalPermission>と認証されて<xref:System.Security.Principal.IIdentity>いないエンティティのどちらを表しているかを判断するためにのみ、を構築することもできます。</span><span class="sxs-lookup"><span data-stu-id="29f49-108">It is also possible to construct a <xref:System.Security.Permissions.PrincipalPermission> that only determines whether the <xref:System.Security.Principal.IIdentity> represents an authenticated or unauthenticated entity.</span></span> <span data-ttu-id="29f49-109">この場合、 `name`および`role`は無視されます。</span><span class="sxs-lookup"><span data-stu-id="29f49-109">In this case, `name` and `role` are ignored.</span></span>  
  
 <span data-ttu-id="29f49-110">他のほとんどのアクセス<xref:System.Security.Permissions.PrincipalPermission>許可とは<xref:System.Security.CodeAccessPermission>異なり、はを拡張しません。</span><span class="sxs-lookup"><span data-stu-id="29f49-110">Unlike most other permissions, <xref:System.Security.Permissions.PrincipalPermission> does not extend <xref:System.Security.CodeAccessPermission>.</span></span> <span data-ttu-id="29f49-111">ただし、インターフェイスは<xref:System.Security.IPermission>実装されています。</span><span class="sxs-lookup"><span data-stu-id="29f49-111">It does, however, implement the <xref:System.Security.IPermission> interface.</span></span> <span data-ttu-id="29f49-112">これは、 <xref:System.Security.Permissions.PrincipalPermission>がコードアクセス許可ではなく、実行しているアセンブリの id に基づいて付与されていないためです。</span><span class="sxs-lookup"><span data-stu-id="29f49-112">This is because <xref:System.Security.Permissions.PrincipalPermission> is not a code access permission; that is, it is not granted based on the identity of the executing assembly.</span></span> <span data-ttu-id="29f49-113">代わりに、コードアクセスとコード id のアクセス<xref:System.Security.Permissions.PrincipalPermission.Demand%2A>許可に<xref:System.Security.Permissions.PrincipalPermission.Intersect%2A>対するアクションの実行方法と一貫性のある方法で、コードが現在のユーザー id に対してアクション (、 <xref:System.Security.Permissions.PrincipalPermission.Union%2A>、など) を実行できるようにします。</span><span class="sxs-lookup"><span data-stu-id="29f49-113">Instead, it allows code to perform actions (<xref:System.Security.Permissions.PrincipalPermission.Demand%2A>, <xref:System.Security.Permissions.PrincipalPermission.Union%2A>, <xref:System.Security.Permissions.PrincipalPermission.Intersect%2A>, and so on) against the current user identity in a manner consistent with the way those actions are performed for code access and code identity permissions.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29f49-114">プリンシパルのアクセス許可を要求する前に、現在のアプリケーションドメインのプリンシパルポリシーを列挙値<xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="29f49-114">Prior to a demand for principal permission it is necessary to set the current application domain's principal policy to the enumeration value <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>.</span></span> <span data-ttu-id="29f49-115">既定では、プリンシパルポリシーはに<xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>設定されています。</span><span class="sxs-lookup"><span data-stu-id="29f49-115">By default, the principal policy is set to <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>.</span></span> <span data-ttu-id="29f49-116">プリンシパルポリシーをに<xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>設定しなかった場合、プリンシパルのアクセス許可に対する要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="29f49-116">If you do not set the principal policy to <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, a demand for principal permission will fail.</span></span> <span data-ttu-id="29f49-117">プリンシパルのアクセス許可が要求される前に、次のコードを実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="29f49-117">The following code should be executed before the principal permission is demanded:</span></span>  
>   
>  `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`  
  
   
  
## Examples  
 <span data-ttu-id="29f49-118">次の例では、アクティブなプリンシパルが管理者である必要があります。</span><span class="sxs-lookup"><span data-stu-id="29f49-118">The following example requires the active principal to be an administrator.</span></span> <span data-ttu-id="29f49-119">パラメーターはです`null`。これにより、管理者であるすべてのユーザーが要求を渡すことができます。 `name`</span><span class="sxs-lookup"><span data-stu-id="29f49-119">The `name` parameter is `null`, which enables any user who is an administrator to pass the demand.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29f49-120">Windows Vista では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。</span><span class="sxs-lookup"><span data-stu-id="29f49-120">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="29f49-121">ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="29f49-121">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="29f49-122">既定では、ユーザーは標準ユーザー ロールに所属します。</span><span class="sxs-lookup"><span data-stu-id="29f49-122">By default, you are in the standard user role.</span></span> <span data-ttu-id="29f49-123">管理者であることを要求するコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="29f49-123">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="29f49-124">この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。</span><span class="sxs-lookup"><span data-stu-id="29f49-124">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermission Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermission Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermission Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.PrincipalPermissionAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29f49-125"><see cref="T:System.Security.Permissions.PrincipalPermission" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="29f49-125">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.PrincipalPermission : System.Security.Permissions.PermissionState -&gt; System.Security.Permissions.PrincipalPermission" Usage="new System.Security.Permissions.PrincipalPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="29f49-126"><see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="29f49-126">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</span></span></param>
        <summary><span data-ttu-id="29f49-127"><see cref="T:System.Security.Permissions.PrincipalPermission" /> を指定して、<see cref="T:System.Security.Permissions.PermissionState" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="29f49-127">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29f49-128">`None`は、認証されて<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A>いないプリンシパルにのみ一致します (は空<xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A>の`false`文字列 ("")、no <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A>、is)。</span><span class="sxs-lookup"><span data-stu-id="29f49-128">`None` matches only the unauthenticated principal (<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> is the empty string (""), no <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A>, <xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A> is `false`).</span></span> <span data-ttu-id="29f49-129">`Unrestricted`すべてのプリンシパル (<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> is `null`、 <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> is `null`) に一致します。</span><span class="sxs-lookup"><span data-stu-id="29f49-129">`Unrestricted` matches all principals (<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> is `null`, <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> is `null`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29f49-130">このコンストラクターは、他のアクセス許可の設計との一貫性を維持するために用意されていますが、実際には役に立ちません。</span><span class="sxs-lookup"><span data-stu-id="29f49-130">This constructor is included for consistency with the design of other permissions, but is not useful in practice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29f49-131"><paramref name="state" /> パラメーターが正しい <see cref="T:System.Security.Permissions.PermissionState" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="29f49-131">The <paramref name="state" /> parameter is not a valid <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalPermission (string name, string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, role As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalPermission(System::String ^ name, System::String ^ role);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.PrincipalPermission : string * string -&gt; System.Security.Permissions.PrincipalPermission" Usage="new System.Security.Permissions.PrincipalPermission (name, role)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="29f49-132"><see cref="T:System.Security.Principal.IPrincipal" /> オブジェクトのユーザーの名前。</span><span class="sxs-lookup"><span data-stu-id="29f49-132">The name of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user.</span></span></param>
        <param name="role"><span data-ttu-id="29f49-133"><see cref="T:System.Security.Principal.IPrincipal" /> オブジェクトのユーザーのロール。たとえば、管理者。</span><span class="sxs-lookup"><span data-stu-id="29f49-133">The role of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user (for example, Administrator).</span></span></param>
        <summary><span data-ttu-id="29f49-134">指定した <paramref name="name" /> と <paramref name="role" /> を使用して <see cref="T:System.Security.Permissions.PrincipalPermission" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="29f49-134">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class for the specified <paramref name="name" /> and <paramref name="role" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29f49-135">このアクセス許可がアクティブ`role`な<xref:System.Security.Principal.IPrincipal>と関連付けられている<xref:System.Security.Principal.IIdentity>と一致するためには、パラメーターとパラメーターの両方が一致している必要があります。`name`</span><span class="sxs-lookup"><span data-stu-id="29f49-135">Both the `name` parameter and the `role` parameter must match for this permission to match the active <xref:System.Security.Principal.IPrincipal> and associated <xref:System.Security.Principal.IIdentity>.</span></span> <span data-ttu-id="29f49-136">ロール`name`内`null`のユーザーを確認するには、をに設定します。</span><span class="sxs-lookup"><span data-stu-id="29f49-136">Set `name` to `null` to check for any user in a role.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29f49-137">次の例では、アクティブなプリンシパルが管理者である必要があります。</span><span class="sxs-lookup"><span data-stu-id="29f49-137">The following example requires the active principal to be an administrator.</span></span> <span data-ttu-id="29f49-138">パラメーターはです`null`。これにより、管理者であるすべてのユーザーが要求を渡すことができます。 `name`</span><span class="sxs-lookup"><span data-stu-id="29f49-138">The `name` parameter is `null`, which enables any user who is an administrator to pass the demand.</span></span>  
  
 <span data-ttu-id="29f49-139">**メモ**Windows Vista では、ユーザーアカウント制御 (UAC) によってユーザーの特権が決定されます。</span><span class="sxs-lookup"><span data-stu-id="29f49-139">**Note** In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="29f49-140">ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="29f49-140">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="29f49-141">既定では、ユーザーは標準ユーザー ロールに所属します。</span><span class="sxs-lookup"><span data-stu-id="29f49-141">By default, you are in the standard user role.</span></span> <span data-ttu-id="29f49-142">管理者であることを要求するコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="29f49-142">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="29f49-143">この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。</span><span class="sxs-lookup"><span data-stu-id="29f49-143">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermission Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermission Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermission Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalPermission (string name, string role, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string role, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, role As String, isAuthenticated As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalPermission(System::String ^ name, System::String ^ role, bool isAuthenticated);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.PrincipalPermission : string * string * bool -&gt; System.Security.Permissions.PrincipalPermission" Usage="new System.Security.Permissions.PrincipalPermission (name, role, isAuthenticated)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="29f49-144"><see cref="T:System.Security.Principal.IPrincipal" /> オブジェクトのユーザーの名前。</span><span class="sxs-lookup"><span data-stu-id="29f49-144">The name of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user.</span></span></param>
        <param name="role"><span data-ttu-id="29f49-145"><see cref="T:System.Security.Principal.IPrincipal" /> オブジェクトのユーザーのロール。たとえば、管理者。</span><span class="sxs-lookup"><span data-stu-id="29f49-145">The role of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user (for example, Administrator).</span></span></param>
        <param name="isAuthenticated"><span data-ttu-id="29f49-146">ユーザーが認証されていることを示すには <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="29f49-146"><see langword="true" /> to signify that the user is authenticated; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="29f49-147">指定した <paramref name="name" />、<paramref name="role" />、および認証ステータスを使用して <see cref="T:System.Security.Permissions.PrincipalPermission" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="29f49-147">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class for the specified <paramref name="name" />, <paramref name="role" />, and authentication status.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29f49-148">このアクセス許可がアクティブ`role`な<xref:System.Security.Principal.IPrincipal>と関連付けられている<xref:System.Security.Principal.IIdentity>と一致するためには、パラメーターとパラメーターの両方が一致している必要があります。`name`</span><span class="sxs-lookup"><span data-stu-id="29f49-148">Both the `name` parameter and the `role` parameter must match for this permission to match the active <xref:System.Security.Principal.IPrincipal> and associated <xref:System.Security.Principal.IIdentity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission&#xA;override this.Copy : unit -&gt; System.Security.IPermission" Usage="principalPermission.Copy " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Copy</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29f49-149">現在のアクセス許可の同一のコピーを作成して返します。</span><span class="sxs-lookup"><span data-stu-id="29f49-149">Creates and returns an identical copy of the current permission.</span></span></summary>
        <returns><span data-ttu-id="29f49-150">現在のアクセス許可のコピー。</span><span class="sxs-lookup"><span data-stu-id="29f49-150">A copy of the current permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29f49-151">アクセス許可のコピーは、元のアクセス許可と同じプリンシパルと id を表します。</span><span class="sxs-lookup"><span data-stu-id="29f49-151">A copy of the permission represents the same principal and identity as the original permission.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Demand();" />
      <MemberSignature Language="F#" Value="abstract member Demand : unit -&gt; unit&#xA;override this.Demand : unit -&gt; unit" Usage="principalPermission.Demand " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29f49-152">現在のプリンシパルが、現在のアクセス許可によって指定されたプリンシパルと一致しているかどうかを実行時に判断します。</span><span class="sxs-lookup"><span data-stu-id="29f49-152">Determines at run time whether the current principal matches the principal specified by the current permission.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29f49-153">が発生しなかった<xref:System.Security.Permissions.PrincipalPermission.Demand%2A>場合、は成功します。 <xref:System.Security.SecurityException></span><span class="sxs-lookup"><span data-stu-id="29f49-153">If no <xref:System.Security.SecurityException> is raised, <xref:System.Security.Permissions.PrincipalPermission.Demand%2A> succeeds.</span></span>  
  
 <span data-ttu-id="29f49-154">このメソッドは、呼び出し元のスレッドにアタッチされているプリンシパルに対して機能します。</span><span class="sxs-lookup"><span data-stu-id="29f49-154">This method acts against the principal attached to the calling thread.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="29f49-155"><xref:System.Security.Permissions.PrincipalPermission.Demand%2A>メソッドを呼び出す前に、現在のアプリケーションドメインのプリンシパルポリシーを列挙値<xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="29f49-155">Prior to calling the <xref:System.Security.Permissions.PrincipalPermission.Demand%2A> method, it is necessary to set the current application domain's principal policy to the enumeration value <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>.</span></span> <span data-ttu-id="29f49-156">既定では、プリンシパルポリシーはに<xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>設定されています。</span><span class="sxs-lookup"><span data-stu-id="29f49-156">By default the principal policy is set to <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>.</span></span> <span data-ttu-id="29f49-157">プリンシパルポリシーをに<xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>設定しなかった場合、プリンシパルのアクセス許可に対する要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="29f49-157">If you do not set the principal policy to <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, a demand for principal permission will fail.</span></span> <span data-ttu-id="29f49-158">プリンシパルアクセス許可の要求が発生する前に、次のコードを実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="29f49-158">The following code should be executed before the demand for principal permission occurs:</span></span>  
>   
>  `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="29f49-159">現在のプリンシパルが、現在のアクセス許可によって指定されるプリンシパルのセキュリティ チェックに合格していません。</span><span class="sxs-lookup"><span data-stu-id="29f49-159">The current principal does not pass the security check for the principal specified by the current permission.</span></span>  
  
<span data-ttu-id="29f49-160">- または -</span><span class="sxs-lookup"><span data-stu-id="29f49-160">-or-</span></span> 
<span data-ttu-id="29f49-161">現在の <see cref="T:System.Security.Principal.IPrincipal" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="29f49-161">The current <see cref="T:System.Security.Principal.IPrincipal" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="principalPermission.Equals o" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-3.0" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="principalPermission.Equals obj" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-3.0" />
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="29f49-162">現在の <see cref="T:System.Security.Permissions.PrincipalPermission" /> と比較する <see cref="T:System.Security.Permissions.PrincipalPermission" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="29f49-162">The <see cref="T:System.Security.Permissions.PrincipalPermission" /> object to compare with the current <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span></span></param>
        <param name="obj"><span data-ttu-id="29f49-163">現在の <see cref="T:System.Security.Permissions.PrincipalPermission" /> と比較する <see cref="T:System.Security.Permissions.PrincipalPermission" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="29f49-163">The <see cref="T:System.Security.Permissions.PrincipalPermission" /> object to compare with the current <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span></span></param>
        <summary><span data-ttu-id="29f49-164">指定した <see cref="T:System.Security.Permissions.PrincipalPermission" /> オブジェクトが、現在の <see cref="T:System.Security.Permissions.PrincipalPermission" /> と等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="29f49-164">Determines whether the specified <see cref="T:System.Security.Permissions.PrincipalPermission" /> object is equal to the current <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span></span></summary>
        <returns><span data-ttu-id="29f49-165">指定した <see cref="T:System.Security.Permissions.PrincipalPermission" /> が現在の <see cref="T:System.Security.Permissions.PrincipalPermission" /> オブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="29f49-165"><see langword="true" /> if the specified <see cref="T:System.Security.Permissions.PrincipalPermission" /> is equal to the current <see cref="T:System.Security.Permissions.PrincipalPermission" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29f49-166">詳細については、「<xref:System.Object.Equals%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29f49-166">For more information, see <xref:System.Object.Equals%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public void FromXml (System.Security.SecurityElement elem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXml(class System.Security.SecurityElement elem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FromXml (elem As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FromXml(System::Security::SecurityElement ^ elem);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="principalPermission.FromXml elem" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elem" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="elem"><span data-ttu-id="29f49-167">アクセス許可の再構築に使用する XML エンコード。</span><span class="sxs-lookup"><span data-stu-id="29f49-167">The XML encoding to use to reconstruct the permission.</span></span></param>
        <summary><span data-ttu-id="29f49-168">XML エンコードから指定された状態で、アクセス許可を再構築します。</span><span class="sxs-lookup"><span data-stu-id="29f49-168">Reconstructs a permission with a specified state from an XML encoding.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29f49-169"><paramref name="elem" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="29f49-169">The <paramref name="elem" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29f49-170"><paramref name="elem" /> パラメーターが有効なアクセス許可要素ではありません。</span><span class="sxs-lookup"><span data-stu-id="29f49-170">The <paramref name="elem" /> parameter is not a valid permission element.</span></span>  
  
<span data-ttu-id="29f49-171">- または -</span><span class="sxs-lookup"><span data-stu-id="29f49-171">-or-</span></span> 
<span data-ttu-id="29f49-172"><paramref name="elem" /> パラメーターのバージョン番号が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="29f49-172">The <paramref name="elem" /> parameter's version number is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="principalPermission.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29f49-173">ハッシュ アルゴリズムや、ハッシュ テーブルのようなデータ構造での使用に適している、<see cref="T:System.Security.Permissions.PrincipalPermission" /> オブジェクトのハッシュ コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="29f49-173">Gets a hash code for the <see cref="T:System.Security.Permissions.PrincipalPermission" /> object that is suitable for use in hashing algorithms and data structures such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="29f49-174">現在の <see cref="T:System.Security.Permissions.PrincipalPermission" /> オブジェクトのハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="29f49-174">A hash code for the current <see cref="T:System.Security.Permissions.PrincipalPermission" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29f49-175">同じアクセス許可の2つのインスタンスのハッシュコードは異なる場合があるため、2つ<xref:System.Security.Permissions.PrincipalPermission>のオブジェクトの比較にハッシュコードを使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="29f49-175">The hash code for two instances of the same permission might be different, hence a hash code should not be used to compare two <xref:System.Security.Permissions.PrincipalPermission> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="principalPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Intersect(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="29f49-176">現在のアクセス許可との共通部分のあるアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="29f49-176">A permission to intersect with the current permission.</span></span> <span data-ttu-id="29f49-177">これは、現在のアクセス許可と同じ型であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="29f49-177">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="29f49-178">現在のアクセス許可と指定したアクセス許可の積集合となるアクセス許可を作成して返します。</span><span class="sxs-lookup"><span data-stu-id="29f49-178">Creates and returns a permission that is the intersection of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="29f49-179">現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="29f49-179">A new permission that represents the intersection of the current permission and the specified permission.</span></span> <span data-ttu-id="29f49-180">積集合が空である場合、この新しいアクセス許可は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="29f49-180">This new permission will be <see langword="null" /> if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29f49-181">2人のユーザーが交差しないため、この方法<xref:System.Security.Permissions.PrincipalPermission>はには適していません。</span><span class="sxs-lookup"><span data-stu-id="29f49-181">Because two users never intersect, this method is not useful for <xref:System.Security.Permissions.PrincipalPermission>.</span></span> <span data-ttu-id="29f49-182">たとえば、オブジェクトに適用された</span><span class="sxs-lookup"><span data-stu-id="29f49-182">For example,</span></span>  
  
 [!code-cpp[System.Security.Permissions.PrincipalPermission#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cpp/remarks.cpp#1)]
 [!code-csharp[System.Security.Permissions.PrincipalPermission#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cs/remarks.cs#1)]
 [!code-vb[System.Security.Permissions.PrincipalPermission#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.permissions.principalpermission/vb/remarks.vb#1)]  
  
 <span data-ttu-id="29f49-183">上記の式は、次の式と同じです。</span><span class="sxs-lookup"><span data-stu-id="29f49-183">is equivalent to</span></span>  
  
 [!code-cpp[System.Security.Permissions.PrincipalPermission#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cpp/remarks.cpp#2)]
 [!code-csharp[System.Security.Permissions.PrincipalPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cs/remarks.cs#2)]
 [!code-vb[System.Security.Permissions.PrincipalPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.permissions.principalpermission/vb/remarks.vb#2)]  
  
 <span data-ttu-id="29f49-184">Bob と Louise の両方を同時に表すことができないためです。</span><span class="sxs-lookup"><span data-stu-id="29f49-184">because no identity can simultaneously represent both Bob and Louise.</span></span> <span data-ttu-id="29f49-185">実際には`pp1.Demand()` 、認証されていないプリンシパル (名前が空の文字列 ("")) が管理者ロールで動作することが許可されている場合にのみ、が成功します。</span><span class="sxs-lookup"><span data-stu-id="29f49-185">In effect, `pp1.Demand()` only succeeds if an unauthenticated principal (with name equal to the empty string ("")) is allowed to act in the Administrator role.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29f49-186"><paramref name="target" /> パラメーターが <see langword="null" /> ではなく、現在のアクセス許可と同じクラスのインスタンスでもありません。</span><span class="sxs-lookup"><span data-stu-id="29f49-186">The <paramref name="target" /> parameter is not <see langword="null" /> and is not an instance of the same class as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool&#xA;override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="principalPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="29f49-187">サブセットの関係にあるかどうかをテストするアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="29f49-187">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="29f49-188">このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="29f49-188">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="29f49-189">現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="29f49-189">Determines whether the current permission is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="29f49-190">現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="29f49-190"><see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29f49-191">現在のアクセス許可に対して成功したすべての要求も、指定したアクセス許可に対して成功した場合、現在のアクセス許可は、指定したアクセス許可のサブセットになります。</span><span class="sxs-lookup"><span data-stu-id="29f49-191">The current permission is a subset of the specified permission if all demands that succeed for the current permission also succeed for the specified permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29f49-192">次の例では、 <xref:System.Security.Permissions.PrincipalPermission> 3 つの異なるユーザーに対応するのインスタンスを定義します。</span><span class="sxs-lookup"><span data-stu-id="29f49-192">The following example defines instances of <xref:System.Security.Permissions.PrincipalPermission> corresponding to three distinct users.</span></span> <span data-ttu-id="29f49-193">その後、2つのインスタンスがユーザーのグループとして作成されます。</span><span class="sxs-lookup"><span data-stu-id="29f49-193">Two additional instances are then created as groups of users.</span></span> <span data-ttu-id="29f49-194">`pp1`bob、Louise、および`pp2` Greg を表す bob と Louise を表します。</span><span class="sxs-lookup"><span data-stu-id="29f49-194">`pp1` represents Bob and Louise, `pp2` represents Bob, Louise, and Greg.</span></span>  
  
 [!code-cpp[Classic PrincipalPermission.IsSubsetOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermission.IsSubsetOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermission.IsSubsetOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermission.IsSubsetOf Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermission.IsSubsetOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermission.IsSubsetOf Example/VB/source.vb#1)]  
  
 <span data-ttu-id="29f49-195">上記の宣言`pp1.IsSubsetOf(pp2)`では、はを`pp2.IsSubsetOf(pp1)`返し`false` `true`、はを返します。</span><span class="sxs-lookup"><span data-stu-id="29f49-195">With the preceding declarations, `pp1.IsSubsetOf(pp2)` returns `true`, and `pp2.IsSubsetOf(pp1)` returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29f49-196"><paramref name="target" /> パラメーターが、現在のアクセス許可と異なる型のオブジェクトを指定しています。</span><span class="sxs-lookup"><span data-stu-id="29f49-196">The <paramref name="target" /> parameter is an object that is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="principalPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29f49-197">現在のアクセス許可が無制限かどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="29f49-197">Returns a value indicating whether the current permission is unrestricted.</span></span></summary>
        <returns><span data-ttu-id="29f49-198">現在のアクセス許可が無制限である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="29f49-198"><see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29f49-199">すべての<xref:System.Security.Permissions.PrincipalPermission>プリンシパルが無制限に一致します。</span><span class="sxs-lookup"><span data-stu-id="29f49-199">An unrestricted <xref:System.Security.Permissions.PrincipalPermission> matches any principal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="principalPermission.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29f49-200">現在のアクセス許可を表す文字列を作成して返します。</span><span class="sxs-lookup"><span data-stu-id="29f49-200">Creates and returns a string representing the current permission.</span></span></summary>
        <returns><span data-ttu-id="29f49-201">現在のアクセス許可の表現。</span><span class="sxs-lookup"><span data-stu-id="29f49-201">A representation of the current permission.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="principalPermission.ToXml " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.ToXml</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29f49-202">アクセス許可とその現在の状態の XML エンコードを作成します。</span><span class="sxs-lookup"><span data-stu-id="29f49-202">Creates an XML encoding of the permission and its current state.</span></span></summary>
        <returns><span data-ttu-id="29f49-203">状態情報を含む、アクセス許可の XML エンコード。</span><span class="sxs-lookup"><span data-stu-id="29f49-203">An XML encoding of the permission, including any state information.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Union (System.Security.IPermission other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Union(class System.Security.IPermission other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (other As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Union(System::Security::IPermission ^ other);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="principalPermission.Union other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Union(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="29f49-204">現在のアクセス許可と結合するアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="29f49-204">A permission to combine with the current permission.</span></span> <span data-ttu-id="29f49-205">これは、現在のアクセス許可と同じ型であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="29f49-205">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="29f49-206">現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</span><span class="sxs-lookup"><span data-stu-id="29f49-206">Creates a permission that is the union of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="29f49-207">現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="29f49-207">A new permission that represents the union of the current permission and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29f49-208"><xref:System.Security.Permissions.PrincipalPermission.Union%2A>個々<xref:System.Security.Permissions.PrincipalPermission>のオブジェクトの特定のセットの条件を表すアクセス許可を作成します。</span><span class="sxs-lookup"><span data-stu-id="29f49-208"><xref:System.Security.Permissions.PrincipalPermission.Union%2A> creates a permission representing the criteria of a given set of individual <xref:System.Security.Permissions.PrincipalPermission> objects.</span></span> <span data-ttu-id="29f49-209">これは、テストする一連の条件を表すコンパクトに便利です。</span><span class="sxs-lookup"><span data-stu-id="29f49-209">It is useful for compactly representing a set of conditions to test.</span></span> <span data-ttu-id="29f49-210">たとえば、宣言を使用して</span><span class="sxs-lookup"><span data-stu-id="29f49-210">For example, with the declarations</span></span>  
  
 [!code-cpp[System.Security.Permissions.PrincipalPermission#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cpp/remarks.cpp#3)]
 [!code-csharp[System.Security.Permissions.PrincipalPermission#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cs/remarks.cs#3)]
 [!code-vb[System.Security.Permissions.PrincipalPermission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.permissions.principalpermission/vb/remarks.vb#3)]  
  
 <span data-ttu-id="29f49-211">`(ppBob.Union(ppLouise)).Demand()`現在のプリンシパルが管理者のロールまたは管理者ロールの Louise の Bob を表している場合、は成功します。</span><span class="sxs-lookup"><span data-stu-id="29f49-211">`(ppBob.Union(ppLouise)).Demand()` will succeed if the current principal represents Bob in the role of Administrator or Louise in the role of Administrator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29f49-212"><paramref name="other" /> パラメーターが、現在のアクセス許可と異なる型のオブジェクトを指定しています。</span><span class="sxs-lookup"><span data-stu-id="29f49-212">The <paramref name="other" /> parameter is an object that is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
