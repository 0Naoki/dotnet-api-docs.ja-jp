<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ReflectionPermissionFlag.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59ea8a0435690e232ce077bff445bd216d32b3a29.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ea8a0435690e232ce077bff445bd216d32b3a29</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>Specifies the permitted use of the <ph id="ph1">&lt;see cref="N:System.Reflection" /&gt;</ph> and <ph id="ph2">&lt;see cref="N:System.Reflection.Emit" /&gt;</ph> namespaces.</source>
          <target state="translated">使用を許可する <ph id="ph1">&lt;see cref="N:System.Reflection" /&gt;</ph> 名前空間および <ph id="ph2">&lt;see cref="N:System.Reflection.Emit" /&gt;</ph> 名前空間を指定します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>This enumeration is used by the <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermissionAttribute&gt;</ph> classes.</source>
          <target state="translated">この列挙体を使って、<ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>と<ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermissionAttribute&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>If no <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> is granted, reflection is allowed on all types and members, but invocation operations are allowed only on visible types and members.</source>
          <target state="translated">ない場合は<ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>が付与されるすべての型とメンバーに対するリフレクションを使用できるが、参照できる型およびメンバーに対してのみ呼び出し操作を許可します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>For more information, see <bpt id="p1">[</bpt>Security Considerations for Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>.</source>
          <target state="translated">詳しくは、「<bpt id="p1">[</bpt>リフレクションに関するセキュリティ上の考慮事項<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>Because <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> can provide access to private class members, we recommend that you grant <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> to Internet code only with the RestrictedMemberAccess flag, and not with any other flags.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>アクセスを提供できますを付与することお勧めをプライベート クラス メンバーに<ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>のみ RestrictedMemberAccess フラグとその他の任意のフラグではなく、インターネット コードにします。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>The RestrictedMemberAccess flag is introduced in the <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph>.</source>
          <target state="translated">RestrictedMemberAccess フラグがで導入された、<ph id="ph1">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>To use this flag, your application should target the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.</source>
          <target state="translated">このフラグを使用するアプリケーションを対象する必要があります、<ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph>またはそれ以降。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>AllFlags does not include the RestrictedMemberAccess flag.</source>
          <target state="translated">AllFlags では、RestrictedMemberAccess フラグは含まれません。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>To get a mask that includes all flags in this enumeration, you must use the combination of AllFlags with RestrictedMemberAccess.</source>
          <target state="translated">この列挙体ですべてのフラグを含むマスクを取得するには、RestrictedMemberAccess を AllFlags の組み合わせを使用する必要があります。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph>, the ReflectionEmit flag is no longer required to emit code, unless debug symbols are emitted.</source>
          <target state="translated">以降で、 <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph>、ReflectionEmit フラグが不要になった、コードを出力する場合を除き、デバッグ シンボルが生成されます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>To use this feature, your application should target the <ph id="ph1">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]</ph> or later.</source>
          <target state="translated">この機能を使用するアプリケーションを対象する必要があります、<ph id="ph1">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]</ph>またはそれ以降。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>Starting with the <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>, the TypeInformation flag is no longer required to reflect on nonpublic types and members; the flag has been marked obsolete.</source>
          <target state="translated">以降で、 <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>、TypeInformation フラグが非パブリックの型とメンバーに反映させる必要はなくなりました。 フラグが残されています。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess&gt;</ph> enumeration to initialize a new instance of the <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess&gt;</ph> class that represents the right to perform restricted member access.</source>
          <target state="translated">次の例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess&gt;</ph>列挙体の新しいインスタンスを初期化するために、<ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess&gt;</ph>制限付きメンバー アクセスを実行する権限を表すクラスです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>This example is part of a larger example that is provided for the <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.AllFlags&gt;</ph> class.</source>
          <target state="translated">この例は提供されている長い例の一部である、<ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.AllFlags&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>For an example that shows how to use the RestrictedMemberAccess flag with Internet code, see <bpt id="p1">[</bpt>Walkthrough: Emitting Code in Partial Trust Scenarios<ept id="p1">](~/docs/framework/reflection-and-codedom/walkthrough-emitting-code-in-partial-trust-scenarios.md)</ept>.</source>
          <target state="translated">インターネットのコードで RestrictedMemberAccess フラグを使用する方法を示す、例では、次を参照してください。<bpt id="p1">[</bpt>チュートリアル: 部分信頼シナリオでのコードの生成<ept id="p1">](~/docs/framework/reflection-and-codedom/walkthrough-emitting-code-in-partial-trust-scenarios.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags">
          <source><ph id="ph1">&lt;see langword="TypeInformation" /&gt;</ph> , <ph id="ph2">&lt;see langword="MemberAccess" /&gt;</ph>, and <ph id="ph3">&lt;see langword="ReflectionEmit" /&gt;</ph> are set.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="TypeInformation" /&gt;</ph>、<ph id="ph2">&lt;see langword="MemberAccess" /&gt;</ph>、および <ph id="ph3">&lt;see langword="ReflectionEmit" /&gt;</ph> が設定されています。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags">
          <source><ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" /&gt;</ph> does not include <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" /&gt;</ph> に <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" /&gt;</ph> は含まれません。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess">
          <source>Invocation operations on all members are allowed, regardless of grant set.</source>
          <target state="translated">許可セットに関係なく、すべてのメンバーに対する呼び出し操作が許可されます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess">
          <source>If this flag is not set, invocation operations are allowed only on visible members.</source>
          <target state="translated">このフラグを設定しないと、呼び出し操作は参照できるメンバーに対してのみ許可されます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags">
          <source>Enumeration of types and members is allowed.</source>
          <target state="translated">型およびメンバーの列挙が許可されます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags">
          <source>Invocation operations are allowed on visible types and members.</source>
          <target state="translated">呼び出し操作は参照できる型およびメンバーに対して許可されます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit">
          <source>Emitting debug symbols is allowed.</source>
          <target state="translated">デバッグ記号の出力が許可されます。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit">
          <source>Beginning with the <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this flag is no longer required to emit code.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph> 以降では、コードの出力にこのフラグを指定する必要がなくなりました。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess">
          <source>Restricted member access is provided for partially trusted code.</source>
          <target state="translated">部分的に信頼されたコードに対して、制限付きメンバー アクセスが提供されます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess">
          <source>Partially trusted code can access nonpublic types and members, but only if the grant set of the partially trusted code includes all permissions in the grant set of the assembly that contains the nonpublic types and members being accessed.</source>
          <target state="translated">部分的に信頼されたコードを使用して、非パブリックな型とメンバーにアクセスできます。ただし、部分的に信頼されたコードの許可セットに、アクセス対象の非パブリックな型とメンバーを含むアセンブリの許可セット内のすべての権限が含まれている場合に限定されます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess">
          <source>This flag is new in the <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph>.</source>
          <target state="translated">このフラグは <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph> で新たに追加されました。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation">
          <source>This flag is obsolete.</source>
          <target state="translated">このフラグは、互換性のために残されています。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation">
          <source>No flags are necessary to enumerate types and members and to examine their metadata.</source>
          <target state="translated">型とメンバーを列挙し、そのメタデータを確認する際には、フラグは不要です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation">
          <source>Use <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" /&gt;</ph> instead.</source>
          <target state="translated">代わりに、<ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" /&gt;</ph> を使用してください。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>