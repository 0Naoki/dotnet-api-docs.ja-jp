<Type Name="PrincipalPermissionAttribute" FullName="System.Security.Permissions.PrincipalPermissionAttribute">
  <TypeSignature Language="C#" Value="public sealed class PrincipalPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PrincipalPermissionAttribute extends System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.PrincipalPermissionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PrincipalPermissionAttribute&#xA;Inherits CodeAccessSecurityAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrincipalPermissionAttribute sealed : System::Security::Permissions::CodeAccessSecurityAttribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Permissions.CodeAccessSecurityAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="90f0f-101"><see cref="T:System.Security.Permissions.PrincipalPermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。</span><span class="sxs-lookup"><span data-stu-id="90f0f-101">Allows security actions for <see cref="T:System.Security.Permissions.PrincipalPermission" /> to be applied to code using declarative security.</span></span> <span data-ttu-id="90f0f-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="90f0f-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90f0f-103"><xref:System.Security.Permissions.PrincipalPermissionAttribute> 宣言によって、コードを実行しているユーザーが指定されたロールに属していることを要求または認証済みであるために使用します。</span><span class="sxs-lookup"><span data-stu-id="90f0f-103"><xref:System.Security.Permissions.PrincipalPermissionAttribute> can be used to declaratively demand that users running your code belong to a specified role or have been authenticated.</span></span> <span data-ttu-id="90f0f-104">使用<xref:System.Security.Permissions.PermissionState.Unrestricted>を作成、<xref:System.Security.Permissions.PrincipalPermission>で<xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A>に設定`true`と<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A>と<xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A>'éý'`null`です。</span><span class="sxs-lookup"><span data-stu-id="90f0f-104">Use of <xref:System.Security.Permissions.PermissionState.Unrestricted> creates a <xref:System.Security.Permissions.PrincipalPermission> with <xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A> set to `true` and <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> and <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> set to `null`.</span></span>  
  
 <span data-ttu-id="90f0f-105">許可されている宣言のスコープによって異なります、<xref:System.Security.Permissions.SecurityAction>のために使用します。</span><span class="sxs-lookup"><span data-stu-id="90f0f-105">The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.</span></span> <span data-ttu-id="90f0f-106"><xref:System.Security.Permissions.PrincipalPermissionAttribute> アセンブリ レベルで適用できません。</span><span class="sxs-lookup"><span data-stu-id="90f0f-106"><xref:System.Security.Permissions.PrincipalPermissionAttribute> cannot be applied at the assembly level.</span></span>  
  
 <span data-ttu-id="90f0f-107">セキュリティ属性によって宣言されたセキュリティ情報は、属性の対象のメタデータに格納され、実行時に、システムによってアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="90f0f-107">The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time.</span></span> <span data-ttu-id="90f0f-108">セキュリティ属性は、宣言型セキュリティにのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="90f0f-108">Security attributes are used only for declarative security.</span></span> <span data-ttu-id="90f0f-109">命令型のセキュリティのアクセス許可の対応するクラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="90f0f-109">For imperative security, use the corresponding permission class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="90f0f-110">プリンシパル アクセス許可を要求するには、このクラスを使用する前に、列挙値にプリンシパルに現在のアプリケーション ドメインのポリシーを設定する必要があります<xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>です。</span><span class="sxs-lookup"><span data-stu-id="90f0f-110">Before you use this class to demand principal permission, you must set the current application domain's principal policy to the enumeration value <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>.</span></span> <span data-ttu-id="90f0f-111">既定では、プリンシパル ポリシー éý ' è<xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>です。</span><span class="sxs-lookup"><span data-stu-id="90f0f-111">By default, the principal policy is set to <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>.</span></span> <span data-ttu-id="90f0f-112">プリンシパルのポリシー設定しない場合<xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>、プリンシパルのアクセス許可の要求は失敗します。</span><span class="sxs-lookup"><span data-stu-id="90f0f-112">If you do not set the principal policy to <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, a demand for principal permission will fail.</span></span> <span data-ttu-id="90f0f-113">プリンシパルのアクセス許可を要求する前に、次のコードを実行する必要があります。 `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`</span><span class="sxs-lookup"><span data-stu-id="90f0f-113">The following code should be executed before the principal permission is demanded: `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90f0f-114">次の例を示していますが、どのように<xref:System.Security.Permissions.PrincipalPermissionAttribute>クラスは、現在のユーザー管理者であることを要求する宣言によって使用します。</span><span class="sxs-lookup"><span data-stu-id="90f0f-114">The following example demonstrates how the <xref:System.Security.Permissions.PrincipalPermissionAttribute> class is used declaratively to demand that the current user be an administrator.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90f0f-115">Windows Vista では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。</span><span class="sxs-lookup"><span data-stu-id="90f0f-115">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="90f0f-116">ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="90f0f-116">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="90f0f-117">既定では、ユーザーは標準ユーザー ロールに所属します。</span><span class="sxs-lookup"><span data-stu-id="90f0f-117">By default, you are in the standard user role.</span></span> <span data-ttu-id="90f0f-118">管理者であることを要求するコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="90f0f-118">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="90f0f-119">この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。</span><span class="sxs-lookup"><span data-stu-id="90f0f-119">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.PrincipalPermission" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalPermissionAttribute (System.Security.Permissions.SecurityAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.SecurityAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As SecurityAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalPermissionAttribute(System::Security::Permissions::SecurityAction action);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="90f0f-120"><see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="90f0f-120">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</span></span></param>
        <summary><span data-ttu-id="90f0f-121">指定した <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> を使用して、<see cref="T:System.Security.Permissions.SecurityAction" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="90f0f-121">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90f0f-122">`Demand`、 `InheritanceDemand`、および`LinkDemand`の唯一の値は、<xref:System.Security.Permissions.SecurityAction>この属性の意味を持つことです。</span><span class="sxs-lookup"><span data-stu-id="90f0f-122">`Demand`, `InheritanceDemand`, and `LinkDemand` are the only values of <xref:System.Security.Permissions.SecurityAction> that have meaning for this attribute.</span></span> <span data-ttu-id="90f0f-123">その他のアクションは、アクセス許可がコード アクセス許可には適用されません。</span><span class="sxs-lookup"><span data-stu-id="90f0f-123">Other actions do not apply to permissions that are not code access permissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90f0f-124">次の例で使用する方法、<xref:System.Security.Permissions.PrincipalPermissionAttribute.%23ctor%2A>コンス トラクターを現在のユーザー管理者であることを要求します。</span><span class="sxs-lookup"><span data-stu-id="90f0f-124">The following example demonstrates how to use the <xref:System.Security.Permissions.PrincipalPermissionAttribute.%23ctor%2A> constructor to demand that the current user be an administrator.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90f0f-125">Windows Vista では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。</span><span class="sxs-lookup"><span data-stu-id="90f0f-125">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="90f0f-126">ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="90f0f-126">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="90f0f-127">既定では、ユーザーは標準ユーザー ロールに所属します。</span><span class="sxs-lookup"><span data-stu-id="90f0f-127">By default, you are in the standard user role.</span></span> <span data-ttu-id="90f0f-128">管理者であることを要求するコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="90f0f-128">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="90f0f-129">この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。</span><span class="sxs-lookup"><span data-stu-id="90f0f-129">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticated">
      <MemberSignature Language="C#" Value="public bool Authenticated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticated" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticated { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90f0f-130">現在のプリンシパルが、基になるロール ベース セキュリティ プロバイダーによって認証されているかどうかを示す値を取得するか、設定します。</span><span class="sxs-lookup"><span data-stu-id="90f0f-130">Gets or sets a value indicating whether the current principal has been authenticated by the underlying role-based security provider.</span></span></summary>
        <value>
          <span data-ttu-id="90f0f-131">現在のプリンシパルが認証されている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="90f0f-131"><see langword="true" /> if the current principal has been authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermission">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission CreatePermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission CreatePermission() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermissionAttribute.CreatePermission" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreatePermission () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ CreatePermission();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90f0f-132">新しい <see cref="T:System.Security.Permissions.PrincipalPermission" /> を作成して返します。</span><span class="sxs-lookup"><span data-stu-id="90f0f-132">Creates and returns a new <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span></span></summary>
        <returns><span data-ttu-id="90f0f-133">この属性に対応する <see cref="T:System.Security.Permissions.PrincipalPermission" />。</span><span class="sxs-lookup"><span data-stu-id="90f0f-133">A <see cref="T:System.Security.Permissions.PrincipalPermission" /> that corresponds to this attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90f0f-134">このメソッドは、アプリケーション コードからではなく、セキュリティ システムによってのみ呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="90f0f-134">This method should only be called by the security system, never by application code.</span></span>  
  
 <span data-ttu-id="90f0f-135">コンパイル時に、属性は、セキュリティの宣言をメタデータのシリアル化された形式に変換されます。</span><span class="sxs-lookup"><span data-stu-id="90f0f-135">At compile time, attributes convert security declarations to a serialized form in metadata.</span></span> <span data-ttu-id="90f0f-136">メタデータの宣言セキュリティ データは、この属性に対応する権限をこのメソッドが返すから作成されます。</span><span class="sxs-lookup"><span data-stu-id="90f0f-136">Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90f0f-137">現在のプリンシパルに関連付けられた ID の名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="90f0f-137">Gets or sets the name of the identity associated with the current principal.</span></span></summary>
        <value><span data-ttu-id="90f0f-138">基になるロール ベースのセキュリティ プロバイダーによって提供される名前に一致する名前。</span><span class="sxs-lookup"><span data-stu-id="90f0f-138">A name to match against that provided by the underlying role-based security provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90f0f-139">認証プロバイダーが Windows NT 場合<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A>("domainname \username"形式) で、ユーザーの Windows NT のログイン名と同じです。</span><span class="sxs-lookup"><span data-stu-id="90f0f-139">If the authentication provider is Windows NT, <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> is the same as the user's Windows NT login name (in the form "DomainName\UserName").</span></span> <span data-ttu-id="90f0f-140">使用している認証プロバイダーと、現在のプリンシパルの id を決定する方法を確認するホストのドキュメントを確認してください。</span><span class="sxs-lookup"><span data-stu-id="90f0f-140">Check the documentation of your host to determine which authentication provider it uses and how it determines the identity of the current principal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public string Role { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Role" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Role" />
      <MemberSignature Language="VB.NET" Value="Public Property Role As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Role { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90f0f-141">指定されたセキュリティ ロールのメンバーシップを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="90f0f-141">Gets or sets membership in a specified security role.</span></span></summary>
        <value><span data-ttu-id="90f0f-142">基になるロール ベースのセキュリティ プロバイダーからのロールの名前。</span><span class="sxs-lookup"><span data-stu-id="90f0f-142">The name of a role from the underlying role-based security provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90f0f-143">利用可能な役割は、ホストによって使用中の認証プロバイダーに基づくは異なります。</span><span class="sxs-lookup"><span data-stu-id="90f0f-143">The available roles will differ based on the authentication provider in use by the host.</span></span> <span data-ttu-id="90f0f-144">認証プロバイダーが Windows NT の場合は、ロールは、Windows NT ユーザー グループ (フォーム"DomainName\GroupName") です。</span><span class="sxs-lookup"><span data-stu-id="90f0f-144">If the authentication provider is Windows NT, roles are Windows NT user groups (in the form "DomainName\GroupName").</span></span> <span data-ttu-id="90f0f-145">使用している認証プロバイダーとロールのユーザーが所属できる新機能を確認するホストのドキュメントを確認してください。</span><span class="sxs-lookup"><span data-stu-id="90f0f-145">Check the documentation of your host to determine which authentication provider it uses and what roles users can belong to.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>