<Type Name="FileIOPermissionAttribute" FullName="System.Security.Permissions.FileIOPermissionAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2b979e392cf91cad73cd23195039e2411f57a138" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37630673" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FileIOPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit FileIOPermissionAttribute extends System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.FileIOPermissionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileIOPermissionAttribute&#xA;Inherits CodeAccessSecurityAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileIOPermissionAttribute sealed : System::Security::Permissions::CodeAccessSecurityAttribute" />
  <TypeSignature Language="F#" Value="type FileIOPermissionAttribute = class&#xA;    inherit CodeAccessSecurityAttribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Permissions.CodeAccessSecurityAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Security.Permissions.FileIOPermission" /> のセキュリティ アクションを、宣言セキュリティを使用してコードに適用できるようにします。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ファイルとディレクトリは、絶対パスを使用して指定されます。 ファイルにアクセスするときに、ファイルを作成または開くときにセキュリティ チェックが実行されます。 ファイルを閉じてから再度開く場合を除き、セキュリティ チェックは再度行われません。 読み取りと書き込みが複数回を実行中に 1 回だけが行われるファイルを開くために、セキュリティ チェックがアプリケーションのパフォーマンスの影響を最小化、ファイルが初回アクセス時に、アクセス許可を確認します。  
  
 許可されている宣言のスコープによって異なります、<xref:System.Security.Permissions.SecurityAction>のために使用します。  
  
 セキュリティ属性で宣言されているセキュリティ情報は、属性のターゲットのメタデータに格納され、実行時に、システムによってアクセスされます。 セキュリティ属性は、宣言型セキュリティに対してのみ使用されます。 強制セキュリティは、対応するアクセス許可クラスを使用します。  
  
> [!CAUTION]
>  `Unrestricted` <xref:System.Security.Permissions.FileIOPermission> 単一の特定のファイルへのアクセスに使用できる複数のパス名を含む、ファイル システム内のすべてのパスのアクセス許可を付与します。 <xref:System.Security.CodeAccessPermission.Deny%2A>へのアクセスをファイルにする必要があります`Deny`ファイルへのすべての有効なパス。 たとえば場合、 \\\server\share がネットワーク ドライブの X にマップされている`Deny`へのアクセスを\\必要があります、\server\share\file `Deny` \\\server\share\file、X:\file および使用できるその他の任意のパスにアクセスする、ファイルです。  
  
   
  
## Examples  
 次のコード例は、要求する方法を示します<xref:System.Security.Permissions.FileIOPermission>を使用して、<xref:System.Security.Permissions.FileIOPermissionAttribute>コードに付与するだけの権限を示すクラス。  
  
 [!code-cpp[Classic FileIOPermissionAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileIOPermissionAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileIOPermissionAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileIOPermissionAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic FileIOPermissionAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileIOPermissionAttribute Example/VB/source.vb#1)]  
  
 次の例は、呼び出し元のコードが無制限になっていることを要求する方法を示しています。<xref:System.Security.Permissions.FileIOPermission>します。 通常、マネージ ライブラリ (Dll) メソッドまたはクラスを有害なコードから保護するためでは、要求を行います。  
  
 [!code-cpp[Classic FileIOPermissionAttribute Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileIOPermissionAttribute Example/CPP/source.cpp#2)]
 [!code-csharp[Classic FileIOPermissionAttribute Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileIOPermissionAttribute Example/CS/source.cs#2)]
 [!code-vb[Classic FileIOPermissionAttribute Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileIOPermissionAttribute Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.FileIOPermission" />
    <altmember cref="T:System.Security.Permissions.FileIOPermissionAccess" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileIOPermissionAttribute (System.Security.Permissions.SecurityAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.SecurityAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.FileIOPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As SecurityAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileIOPermissionAttribute(System::Security::Permissions::SecurityAction action);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.FileIOPermissionAttribute : System.Security.Permissions.SecurityAction -&gt; System.Security.Permissions.FileIOPermissionAttribute" Usage="new System.Security.Permissions.FileIOPermissionAttribute action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" />
      </Parameters>
      <Docs>
        <param name="action">
          <see cref="T:System.Security.Permissions.SecurityAction" /> 値のいずれか 1 つ。</param>
        <summary>
          <see cref="T:System.Security.Permissions.FileIOPermissionAttribute" /> を指定して、<see cref="T:System.Security.Permissions.SecurityAction" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例の複数のインスタンスを作成し、<xref:System.Security.Permissions.FileIOPermissionAttribute>さまざまなレベルのファイル I/O アクセス許可を設定するクラス。  
  
 [!code-cpp[System.Security.Permissions.FileIOPermissionAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CPP/fileiopermissionattribute.cpp#1)]
 [!code-csharp[System.Security.Permissions.FileIOPermissionAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CS/fileiopermissionattribute.cs#1)]
 [!code-vb[System.Security.Permissions.FileIOPermissionAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/VB/fileiopermissionattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="action" /> パラメーターが、有効な <see cref="T:System.Security.Permissions.SecurityAction" /> ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public string All { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string All" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.All" />
      <MemberSignature Language="VB.NET" Value="Public Property All As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ All { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.All : string with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.All" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("use newer properties")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>文字列値で指定されるファイルまたはディレクトリへのフル アクセスを取得または設定します。</summary>
        <value>フル アクセスのための、ファイルまたはディレクトリの絶対パス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、1 つのファイルまたはディレクトリへのアクセスを設定します。 追加の属性を使用すると、追加のファイルおよびディレクトリを指定します。  
  
   
  
## Examples  
 次のコード例のセット、<xref:System.Security.Permissions.FileIOPermissionAttribute.All%2A>プロパティを指定されたディレクトリへのフル アクセスを付与します。  
  
 [!code-cpp[System.Security.Permissions.FileIOPermissionAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CPP/fileiopermissionattribute.cpp#6)]
 [!code-csharp[System.Security.Permissions.FileIOPermissionAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CS/fileiopermissionattribute.cs#6)]
 [!code-vb[System.Security.Permissions.FileIOPermissionAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/VB/fileiopermissionattribute.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">このプロパティでは、GET メソッドがサポートされていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="AllFiles">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.FileIOPermissionAccess AllFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Permissions.FileIOPermissionAccess AllFiles" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.AllFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property AllFiles As FileIOPermissionAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::FileIOPermissionAccess AllFiles { System::Security::Permissions::FileIOPermissionAccess get(); void set(System::Security::Permissions::FileIOPermissionAccess value); };" />
      <MemberSignature Language="F#" Value="member this.AllFiles : System.Security.Permissions.FileIOPermissionAccess with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.AllFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.FileIOPermissionAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>すべてのファイルへの許可されたアクセスを取得または設定します。</summary>
        <value>すべてのファイルのアクセス許可を表す <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 値のビットごとの組み合わせ。 既定値は、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得またはローカル コンピューターとネットワーク ドライブ上のすべてのファイルへのアクセス許可を設定します。  
  
 個人<xref:System.Security.Permissions.FileIOPermissionAccess>をビット単位で値を決定できます`AND`操作。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllLocalFiles">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.FileIOPermissionAccess AllLocalFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Permissions.FileIOPermissionAccess AllLocalFiles" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.AllLocalFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property AllLocalFiles As FileIOPermissionAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::FileIOPermissionAccess AllLocalFiles { System::Security::Permissions::FileIOPermissionAccess get(); void set(System::Security::Permissions::FileIOPermissionAccess value); };" />
      <MemberSignature Language="F#" Value="member this.AllLocalFiles : System.Security.Permissions.FileIOPermissionAccess with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.AllLocalFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.FileIOPermissionAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>すべてのローカル ファイルへの許可されたアクセスを取得または設定します。</summary>
        <value>すべてのローカル ファイルに対するアクセス許可を表す <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 値のビットごとの組み合わせ。 既定値は、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ローカル ファイルは、ローカル コンピューター上に含まれているファイルです。 ネットワーク ドライブからアクセスされないすべてのファイルは、ローカル ファイルです。  
  
 個人<xref:System.Security.Permissions.FileIOPermissionAccess>をビット単位で値を決定できます`AND`操作。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public string Append { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Append" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.Append" />
      <MemberSignature Language="VB.NET" Value="Public Property Append As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Append { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Append : string with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.Append" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>文字列値で指定されるファイルまたはディレクトリへの追加アクセスを取得または設定します。</summary>
        <value>追加アクセスのための、ファイルまたはディレクトリの絶対パス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、1 つのファイルまたはディレクトリへのアクセスを設定します。 追加の属性を使用すると、追加のファイルおよびディレクトリを指定します。  
  
   
  
## Examples  
 次のコード例のセット、<xref:System.Security.Permissions.FileIOPermissionAttribute.Append%2A>プロパティを付与する<xref:System.Security.Permissions.FileIOPermissionAccess.Append>指定したディレクトリ内のファイルへのアクセス。  
  
 [!code-cpp[System.Security.Permissions.FileIOPermissionAttribute#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CPP/fileiopermissionattribute.cpp#4)]
 [!code-csharp[System.Security.Permissions.FileIOPermissionAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CS/fileiopermissionattribute.cs#4)]
 [!code-vb[System.Security.Permissions.FileIOPermissionAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/VB/fileiopermissionattribute.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeAccessControl">
      <MemberSignature Language="C#" Value="public string ChangeAccessControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChangeAccessControl" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.ChangeAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Property ChangeAccessControl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChangeAccessControl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ChangeAccessControl : string with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.ChangeAccessControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アクセス制御情報を変更できるファイルまたはディレクトリを取得または設定します。</summary>
        <value>アクセス制御情報を変更できるファイルまたはディレクトリの絶対パス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または 1 つのファイルまたはディレクトリへのアクセスを設定します。 使用して追加<xref:System.Security.Permissions.FileIOPermissionAttribute>追加のファイルおよびディレクトリを指定する属性。  
  
> [!IMPORTANT]
>  アクセス制御リスト (ACL) には、個人またはグループがある、または権限がない、特定のファイルとそのプロパティに特定のアクションをユーザーがについて説明します。  ACL を変更することは重要なアクセス許可し、慎重に付与する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermission">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission CreatePermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission CreatePermission() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.FileIOPermissionAttribute.CreatePermission" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreatePermission () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ CreatePermission();" />
      <MemberSignature Language="F#" Value="override this.CreatePermission : unit -&gt; System.Security.IPermission" Usage="fileIOPermissionAttribute.CreatePermission " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>新しい <see cref="T:System.Security.Permissions.FileIOPermission" /> を作成して返します。</summary>
        <returns>この属性に対応する <see cref="T:System.Security.Permissions.FileIOPermission" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、アプリケーション コードからではなく、セキュリティ システムによってのみ呼び出す必要があります。  
  
 コンパイル時に、属性は、セキュリティ宣言をメタデータにシリアル化された形式に変換されます。 メタデータの宣言型セキュリティ データは、この属性に対応するこのメソッドから返される権限から作成されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">アクセスを制限するファイルまたはディレクトリのパス情報に、無効な文字やワイルドカード文字が含まれています。</exception>
      </Docs>
    </Member>
    <Member MemberName="PathDiscovery">
      <MemberSignature Language="C#" Value="public string PathDiscovery { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathDiscovery" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery" />
      <MemberSignature Language="VB.NET" Value="Public Property PathDiscovery As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathDiscovery { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PathDiscovery : string with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パス探索を与えるファイルまたはディレクトリを取得または設定します。</summary>
        <value>ファイルまたはディレクトリの絶対パス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パスの検出では、パス自体の情報へのアクセスを制御します。 これにより、ユーザー名などのパス中の機密情報だけではなく、パスによって判明するディレクトリ構造についての情報も保護されます。 この値は、パスによって表されたファイルまたはフォルダーへのアクセスを与えません。  
  
> [!NOTE]
>  パフォーマンス上の理由から、<xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A>しないファイルへのディレクトリにのみ付与する必要があります。 たとえば、 <xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A> C:\test C:\test などのパスにアクセス許可を付与\\、C:\test\example.txt などのファイルにありません。  
  
 このプロパティは、1 つのファイルまたはディレクトリへのアクセスを設定します。 追加の属性を使用すると、追加のファイルおよびディレクトリを指定します。  
  
   
  
## Examples  
 次のコード例のセット、<xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A>プロパティを付与する<xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery>指定したディレクトリ内のファイルへのアクセス。  
  
 [!code-cpp[System.Security.Permissions.FileIOPermissionAttribute#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CPP/fileiopermissionattribute.cpp#3)]
 [!code-csharp[System.Security.Permissions.FileIOPermissionAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CS/fileiopermissionattribute.cs#3)]
 [!code-vb[System.Security.Permissions.FileIOPermissionAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/VB/fileiopermissionattribute.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public string Read { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Read" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.Read" />
      <MemberSignature Language="VB.NET" Value="Public Property Read As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Read { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Read : string with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.Read" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>文字列値が指定するファイルまたはディレクトリへの読み取りアクセスを取得または設定します。</summary>
        <value>読み取りアクセスのための、ファイルまたはディレクトリの絶対パス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、1 つのファイルまたはディレクトリへのアクセスを設定します。 追加の属性を使用すると、追加のファイルおよびディレクトリを指定します。  
  
   
  
## Examples  
 次の例のセット、<xref:System.Security.Permissions.FileIOPermissionAttribute.Read%2A>プロパティを付与する<xref:System.Security.Permissions.FileIOPermissionAccess.Read>指定したディレクトリ内のファイルへのアクセス。  
  
 [!code-cpp[System.Security.Permissions.FileIOPermissionAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CPP/fileiopermissionattribute.cpp#2)]
 [!code-csharp[System.Security.Permissions.FileIOPermissionAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CS/fileiopermissionattribute.cs#2)]
 [!code-vb[System.Security.Permissions.FileIOPermissionAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/VB/fileiopermissionattribute.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewAccessControl">
      <MemberSignature Language="C#" Value="public string ViewAccessControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ViewAccessControl" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.ViewAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewAccessControl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ViewAccessControl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ViewAccessControl : string with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.ViewAccessControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アクセス制御情報を表示できるファイルまたはディレクトリを取得または設定します。</summary>
        <value>アクセス制御情報を表示できるファイルまたはディレクトリの絶対パス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得または 1 つのファイルまたはディレクトリへのアクセスを設定します。 使用して追加<xref:System.Security.Permissions.FileIOPermissionAttribute>追加のファイルおよびディレクトリを指定する属性。  
  
> [!IMPORTANT]
>  アクセス制御リスト (ACL) には、個人またはグループがある、または権限がない、特定のファイルとそのプロパティに特定のアクションをユーザーがについて説明します。  ACL を表示する機能は、重要なアクセス許可し、慎重に付与する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewAndModify">
      <MemberSignature Language="C#" Value="public string ViewAndModify { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ViewAndModify" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.ViewAndModify" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewAndModify As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ViewAndModify { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ViewAndModify : string with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.ViewAndModify" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ファイル データを表示して変更できるファイルまたはディレクトリを取得または設定します。</summary>
        <value>ファイル データを表示して変更できるファイルまたはディレクトリの絶対パス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの設定、 <xref:System.Security.Permissions.FileIOPermissionAttribute.Append%2A>、 <xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A>、 <xref:System.Security.Permissions.FileIOPermissionAttribute.Read%2A>、および<xref:System.Security.Permissions.FileIOPermissionAttribute.Write%2A>1 つのファイルまたはディレクトリのプロパティ。 使用して追加<xref:System.Security.Permissions.FileIOPermissionAttribute>追加のファイルおよびディレクトリを指定する属性。 アクセス権は、ファイルのデータだけです。アクセス コントロールのプロパティを含めない<xref:System.Security.Permissions.FileIOPermissionAttribute.ViewAccessControl%2A>と<xref:System.Security.Permissions.FileIOPermissionAttribute.ChangeAccessControl%2A>します。  
  
> [!NOTE]
>  `get`アクセサーでは、c# コンパイラとの互換性が提供されます。 C# コンパイラでは、属性のプロパティを読み取り/書き込みが必要です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see langword="get" /> アクセサーが呼び出されています。 このアクセサーは、C# コンパイラとの互換性のためだけに用意されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public string Write { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Write" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.Write" />
      <MemberSignature Language="VB.NET" Value="Public Property Write As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Write { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Write : string with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.Write" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>文字列値が指定するファイルまたはディレクトリへの書き込みアクセスを取得または設定します。</summary>
        <value>書き込みアクセスのための、ファイルまたはディレクトリの絶対パス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、1 つのファイルまたはディレクトリへのアクセスを設定します。 追加の属性を使用すると、追加のファイルおよびディレクトリを指定します。  
  
   
  
## Examples  
 次の例のセット、<xref:System.Security.Permissions.FileIOPermissionAttribute.Write%2A>プロパティを付与する<xref:System.Security.Permissions.FileIOPermissionAccess.Write>指定したディレクトリ内のファイルへのアクセス。  
  
 [!code-cpp[System.Security.Permissions.FileIOPermissionAttribute#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CPP/fileiopermissionattribute.cpp#5)]
 [!code-csharp[System.Security.Permissions.FileIOPermissionAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CS/fileiopermissionattribute.cs#5)]
 [!code-vb[System.Security.Permissions.FileIOPermissionAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/VB/fileiopermissionattribute.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>