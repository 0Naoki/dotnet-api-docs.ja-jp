<Type Name="KeyContainerPermissionAccessEntryEnumerator" FullName="System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
  <TypeSignature Language="C#" Value="public sealed class KeyContainerPermissionAccessEntryEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit KeyContainerPermissionAccessEntryEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class KeyContainerPermissionAccessEntryEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyContainerPermissionAccessEntryEnumerator sealed : System::Collections::IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="25e54-101"><see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 内の <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" /> オブジェクトの列挙子を表します。</span><span class="sxs-lookup"><span data-stu-id="25e54-101">Represents the enumerator for <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> objects in a <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25e54-102">列挙子は、コレクション内のデータを読み取るだけを許可します。</span><span class="sxs-lookup"><span data-stu-id="25e54-102">Enumerators allow only reading the data in the collection.</span></span> <span data-ttu-id="25e54-103">列挙子を使用して、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="25e54-103">Enumerators cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="25e54-104">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="25e54-104">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="25e54-105"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>メソッドがこの位置に戻さも、列挙子を表示します。</span><span class="sxs-lookup"><span data-stu-id="25e54-105">The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span> <span data-ttu-id="25e54-106">この位置で、呼び出し、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>プロパティは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="25e54-106">At this position, calling the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property throws an exception.</span></span> <span data-ttu-id="25e54-107">そのため、呼び出す必要があります、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>メソッドの値を読み取る前に、コレクションの最初の要素に列挙子を進める、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="25e54-107">Therefore, you must call the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property.</span></span>  
  
 <span data-ttu-id="25e54-108"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> は、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> または <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="25e54-108"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> returns the same object until either <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> or <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="25e54-109"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> は、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> を次の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="25e54-109"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> sets <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="25e54-110">コレクションの末尾を過ぎると、列挙子はコレクションの最後の要素の後ろに配置され、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> を呼び出すと `false` が返されます。</span><span class="sxs-lookup"><span data-stu-id="25e54-110">After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="25e54-111">場合は、最後の呼び出し<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>返される`false`、呼び出し元<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="25e54-111">If the last call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="25e54-112">リセットする<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>コレクションの最初の要素を呼び出す<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>への呼び出しを続けて<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>です。</span><span class="sxs-lookup"><span data-stu-id="25e54-112">To reset <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> to the first element of the collection, call <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> followed by a call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="25e54-113">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="25e54-113">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="25e54-114">無効になり、次の呼び出しに変更を追加するなど、コレクションを変更、または要素を削除するには、列挙子は回復不可能<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>または<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>スロー、<xref:System.InvalidOperationException>です。</span><span class="sxs-lookup"><span data-stu-id="25e54-114">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> or <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="25e54-115">呼び出し元のコレクションが変更された場合<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>と<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>列挙子が既に無効になっている場合でもが現在設定される、要素を返します。</span><span class="sxs-lookup"><span data-stu-id="25e54-115">If the collection is modified between calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> and <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>, <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> returns the element to which it is currently set, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="25e54-116">列挙子にはコレクションへの排他アクセス権限はないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="25e54-116">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="25e54-117">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="25e54-117">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="25e54-118">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="25e54-118">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyContainerPermissionAccessEntryEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyContainerPermissionAccessEntryEnumerator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.KeyContainerPermissionAccessEntry Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Permissions.KeyContainerPermissionAccessEntry Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As KeyContainerPermissionAccessEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::KeyContainerPermissionAccessEntry ^ Current { System::Security::Permissions::KeyContainerPermissionAccessEntry ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.KeyContainerPermissionAccessEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25e54-119">コレクション内の現在のエントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="25e54-119">Gets the current entry in the collection.</span></span></summary>
        <value><span data-ttu-id="25e54-120">コレクション内の現在の <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="25e54-120">The current <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> object in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25e54-121">列挙子の作成時に、オブジェクトを指していませんので、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>プロパティが無効である場合は、アクセス例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="25e54-121">When the enumerator is created, it does not point to an object, so the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property is not valid and will throw an exception if it is accessed.</span></span> <span data-ttu-id="25e54-122">最初に呼び出す必要があります、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>メソッドをコレクションの最初のオブジェクトにカーソルを合わせます。</span><span class="sxs-lookup"><span data-stu-id="25e54-122">You must first call the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> method to position the cursor at the first object in the collection.</span></span>  
  
 <span data-ttu-id="25e54-123">取得する、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>なしの介在する呼び出しで複数回プロパティ<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>は同じを返します<xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>オブジェクトごとにします。</span><span class="sxs-lookup"><span data-stu-id="25e54-123">Getting the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property multiple times with no intervening calls to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> will return the same <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> object each time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="25e54-124"><see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> メソッドを先に呼び出す前に <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> プロパティにアクセスしています。</span><span class="sxs-lookup"><span data-stu-id="25e54-124">The <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> property is accessed before first calling the <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> method.</span></span> <span data-ttu-id="25e54-125">カーソルは、コレクション内の最初のオブジェクトより前に位置しています。</span><span class="sxs-lookup"><span data-stu-id="25e54-125">The cursor is located before the first object in the collection.</span></span>  
  
 <span data-ttu-id="25e54-126">- または -</span><span class="sxs-lookup"><span data-stu-id="25e54-126">-or-</span></span>  
  
 <span data-ttu-id="25e54-127"><see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> メソッドの呼び出しが <see langword="false" /> を返した (カーソルがコレクション内の最後のオブジェクトの後ろに配置されていることを示す) 後で <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> プロパティにアクセスしています。</span><span class="sxs-lookup"><span data-stu-id="25e54-127">The <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> property is accessed after a call to the <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> method returns <see langword="false" />, which indicates that the cursor is located after the last object in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="25e54-128">コレクションの次の要素に移動します。</span><span class="sxs-lookup"><span data-stu-id="25e54-128">Moves to the next element in the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="25e54-129">列挙子が次の要素に正常に進んだ場合は <see langword="true" />。列挙子がコレクションの末尾を越えた場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="25e54-129"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25e54-130"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>メソッドを返します。`false`コレクション内にオブジェクトが存在しない場合は直ちにです。</span><span class="sxs-lookup"><span data-stu-id="25e54-130">The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> method returns `false` immediately if there are no objects in the collection.</span></span>  
  
 <span data-ttu-id="25e54-131"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> 返します`true`コレクションの末尾に達するまでします。</span><span class="sxs-lookup"><span data-stu-id="25e54-131"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> returns `true` until it has reached the end of the collection.</span></span> <span data-ttu-id="25e54-132">これは、後、返します`false`連続する呼び出しごとにします。</span><span class="sxs-lookup"><span data-stu-id="25e54-132">It then returns `false` for each successive call.</span></span> <span data-ttu-id="25e54-133">ただし、いったん<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>が返されました`false`へのアクセス、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>プロパティは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="25e54-133">However, once <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> has returned `false`, accessing the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property throws an exception.</span></span>  
  
 <span data-ttu-id="25e54-134">作成時に、列挙子が 1 つ目の前に位置付けられます<xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>コレクション、および最初の呼び出しでオブジェクト<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>コレクション内の最初のオブジェクトに、列挙子を配置します。</span><span class="sxs-lookup"><span data-stu-id="25e54-134">Upon creation, an enumerator is positioned before the first <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> object in the collection, and the first call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> positions the enumerator to the first object in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="25e54-135">列挙子をコレクションの先頭にリセットします。</span><span class="sxs-lookup"><span data-stu-id="25e54-135">Resets the enumerator to the beginning of the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25e54-136">列挙子は、順方向専用の方向に移動します。</span><span class="sxs-lookup"><span data-stu-id="25e54-136">An enumerator moves in a forward-only direction.</span></span> <span data-ttu-id="25e54-137">コレクションの先頭に戻るには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="25e54-137">Use this method to return to the beginning of the collection.</span></span>  
  
 <span data-ttu-id="25e54-138"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>メソッドがコレクション内の最初のオブジェクトにカーソルを位置付けます。</span><span class="sxs-lookup"><span data-stu-id="25e54-138">The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> method positions the cursor at the first object in the collection.</span></span> <span data-ttu-id="25e54-139">呼び出した後<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>を呼び出す必要はありません<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>に最初のオブジェクトにカーソルを前方に移動します。</span><span class="sxs-lookup"><span data-stu-id="25e54-139">After calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>, you do not need to call <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> to move the cursor forward to the first object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IEnumerator.Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25e54-140">コレクション内の現在のオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="25e54-140">Gets the current object in the collection.</span></span></summary>
        <value><span data-ttu-id="25e54-141">コレクション内の現在のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="25e54-141">The current object in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25e54-142">このメソッドを呼び出す必要はありません。使用して、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>プロパティ代わりにします。</span><span class="sxs-lookup"><span data-stu-id="25e54-142">Do not call this method; use the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>