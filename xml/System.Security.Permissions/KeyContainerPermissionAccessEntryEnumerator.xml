<Type Name="KeyContainerPermissionAccessEntryEnumerator" FullName="System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4d0c33ac8a96ebef807b5622035db82bed89a305" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37463322" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class KeyContainerPermissionAccessEntryEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit KeyContainerPermissionAccessEntryEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class KeyContainerPermissionAccessEntryEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyContainerPermissionAccessEntryEnumerator sealed : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type KeyContainerPermissionAccessEntryEnumerator = class&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="21f5c-101">Represents the enumerator for <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> objects in a <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="21f5c-101">Represents the enumerator for <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> objects in a <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21f5c-102">列挙子は、コレクション内のデータの読み取りのみを許可します。</span><span class="sxs-lookup"><span data-stu-id="21f5c-102">Enumerators allow only reading the data in the collection.</span></span> <span data-ttu-id="21f5c-103">列挙子を使用して、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="21f5c-103">Enumerators cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="21f5c-104">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="21f5c-104">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="21f5c-105"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>メソッドは、この位置に戻さ列挙子を表示することもできます。</span><span class="sxs-lookup"><span data-stu-id="21f5c-105">The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span> <span data-ttu-id="21f5c-106">この位置で、呼び出し、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>プロパティは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="21f5c-106">At this position, calling the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property throws an exception.</span></span> <span data-ttu-id="21f5c-107">そのため、呼び出す必要がある、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>メソッドの値を読み取る前に、コレクションの最初の要素を列挙子を進める、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="21f5c-107">Therefore, you must call the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property.</span></span>  
  
 <span data-ttu-id="21f5c-108"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> は、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> または <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="21f5c-108"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> returns the same object until either <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> or <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="21f5c-109"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> は、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> を次の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="21f5c-109"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> sets <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="21f5c-110">コレクションの末尾を過ぎると、列挙子はコレクションの最後の要素の後ろに配置され、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> を呼び出すと `false` が返されます。</span><span class="sxs-lookup"><span data-stu-id="21f5c-110">After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="21f5c-111">最後の呼び出し場合<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>返される`false`を呼び出すと、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="21f5c-111">If the last call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="21f5c-112">リセットする<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>コレクションの最初の要素を呼び出す<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>への呼び出しに続く<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>します。</span><span class="sxs-lookup"><span data-stu-id="21f5c-112">To reset <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> to the first element of the collection, call <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> followed by a call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="21f5c-113">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="21f5c-113">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="21f5c-114">無効になり、次の呼び出しは変更を追加するなど、コレクション変更、または要素を削除するには、列挙子が不可能<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>または<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>スロー、<xref:System.InvalidOperationException>します。</span><span class="sxs-lookup"><span data-stu-id="21f5c-114">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> or <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="21f5c-115">呼び出す間、コレクションが変更された場合<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>と<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>列挙子が既に無効になっている場合でも、これは現在に設定する、要素を返します。</span><span class="sxs-lookup"><span data-stu-id="21f5c-115">If the collection is modified between calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> and <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>, <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> returns the element to which it is currently set, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="21f5c-116">列挙子にはコレクションへの排他アクセス権限はないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="21f5c-116">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="21f5c-117">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="21f5c-117">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="21f5c-118">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="21f5c-118">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyContainerPermissionAccessEntryEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyContainerPermissionAccessEntryEnumerator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.KeyContainerPermissionAccessEntry Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Permissions.KeyContainerPermissionAccessEntry Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As KeyContainerPermissionAccessEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::KeyContainerPermissionAccessEntry ^ Current { System::Security::Permissions::KeyContainerPermissionAccessEntry ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Security.Permissions.KeyContainerPermissionAccessEntry" Usage="System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.KeyContainerPermissionAccessEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21f5c-119">Gets the current entry in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21f5c-119">Gets the current entry in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="21f5c-120">現在<see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" />コレクション内のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21f5c-120">The current <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> object in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21f5c-121">オブジェクトにポイントはありません、列挙子が作成されると、そのため、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>プロパティが無効であり、アクセスする場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="21f5c-121">When the enumerator is created, it does not point to an object, so the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property is not valid and will throw an exception if it is accessed.</span></span> <span data-ttu-id="21f5c-122">最初に呼び出す必要があります、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>メソッドをコレクションの最初のオブジェクトにカーソルを置きます。</span><span class="sxs-lookup"><span data-stu-id="21f5c-122">You must first call the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> method to position the cursor at the first object in the collection.</span></span>  
  
 <span data-ttu-id="21f5c-123">取得、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>ない中間の呼び出しで複数回プロパティ<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>は同じを返します<xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>オブジェクトごとにします。</span><span class="sxs-lookup"><span data-stu-id="21f5c-123">Getting the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property multiple times with no intervening calls to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> will return the same <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> object each time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="21f5c-124">The <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> property is accessed before first calling the <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21f5c-124">The <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> property is accessed before first calling the <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> method.</span>
          </span>
          <span data-ttu-id="21f5c-125">The cursor is located before the first object in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21f5c-125">The cursor is located before the first object in the collection.</span>
          </span>
          <span data-ttu-id="21f5c-126">-or-  The <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> property is accessed after a call to the <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> method returns <see langword="false" />, which indicates that the cursor is located after the last object in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21f5c-126">-or-  The <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> property is accessed after a call to the <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> method returns <see langword="false" />, which indicates that the cursor is located after the last object in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="keyContainerPermissionAccessEntryEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="21f5c-127">Moves to the next element in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21f5c-127">Moves to the next element in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="21f5c-128">
            <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21f5c-128">
              <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21f5c-129"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>メソッドを返します。`false`コレクション内のオブジェクトがない場合にすぐにします。</span><span class="sxs-lookup"><span data-stu-id="21f5c-129">The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> method returns `false` immediately if there are no objects in the collection.</span></span>  
  
 <span data-ttu-id="21f5c-130"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> 返します`true`コレクションの末尾に達するまでです。</span><span class="sxs-lookup"><span data-stu-id="21f5c-130"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> returns `true` until it has reached the end of the collection.</span></span> <span data-ttu-id="21f5c-131">これは、後、返します`false`連続した呼び出しごとにします。</span><span class="sxs-lookup"><span data-stu-id="21f5c-131">It then returns `false` for each successive call.</span></span> <span data-ttu-id="21f5c-132">ただし、したら<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>が返される`false`へのアクセス、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>プロパティは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="21f5c-132">However, once <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> has returned `false`, accessing the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property throws an exception.</span></span>  
  
 <span data-ttu-id="21f5c-133">1 つ目の前に作成した場合、列挙子が配置されている<xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>オブジェクト コレクション、および最初の呼び出しで<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>コレクション内の最初のオブジェクトに列挙子を移動します。</span><span class="sxs-lookup"><span data-stu-id="21f5c-133">Upon creation, an enumerator is positioned before the first <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> object in the collection, and the first call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> positions the enumerator to the first object in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="keyContainerPermissionAccessEntryEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="21f5c-134">Resets the enumerator to the beginning of the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21f5c-134">Resets the enumerator to the beginning of the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21f5c-135">列挙子は、順方向専用の方向に移動します。</span><span class="sxs-lookup"><span data-stu-id="21f5c-135">An enumerator moves in a forward-only direction.</span></span> <span data-ttu-id="21f5c-136">コレクションの先頭に戻るには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="21f5c-136">Use this method to return to the beginning of the collection.</span></span>  
  
 <span data-ttu-id="21f5c-137"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>メソッドは、コレクションの最初のオブジェクトにカーソルを位置付けます。</span><span class="sxs-lookup"><span data-stu-id="21f5c-137">The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> method positions the cursor at the first object in the collection.</span></span> <span data-ttu-id="21f5c-138">呼び出した後<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>を呼び出す必要はありません<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>に最初のオブジェクトにカーソルを前方に移動します。</span><span class="sxs-lookup"><span data-stu-id="21f5c-138">After calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>, you do not need to call <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> to move the cursor forward to the first object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IEnumerator.Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System.Collections.IEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21f5c-139">Gets the current object in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21f5c-139">Gets the current object in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="21f5c-140">コレクション内の現在のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21f5c-140">The current object in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21f5c-141">このメソッドを呼び出さないでください。使用して、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>プロパティ代わりにします。</span><span class="sxs-lookup"><span data-stu-id="21f5c-141">Do not call this method; use the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>