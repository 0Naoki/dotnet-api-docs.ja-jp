<Type Name="EventParameterType" FullName="System.Speech.Synthesis.TtsEngine.EventParameterType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8400458ce175b78e8dd9477c646c184c735c0185" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70436208" /></Metadata><TypeSignature Language="C#" Value="public enum EventParameterType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed EventParameterType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.EventParameterType" />
  <TypeSignature Language="VB.NET" Value="Public Enum EventParameterType" />
  <TypeSignature Language="C++ CLI" Value="public enum class EventParameterType" />
  <TypeSignature Language="F#" Value="type EventParameterType = " />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>音声合成イベントに渡されるデータ ポインターの型を列挙します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

列挙`EventParameterType`体は、オブジェクトを<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>構築するときに使用されます。 `parameterType` <xref:System.IntPtr>の`EventParameterType` コンストラクターに引数として渡された列挙体メンバーは、コンストラクターの引数 (である必要があります) の解釈方法を指定します。 <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>  `param2`  
  
の`EventParameterType`選択は、の<xref:System.Speech.Synthesis.TtsEngine.TtsEventId?displayProperty=nameWithType>メンバーによって指定された、要求されるイベントの種類によって決まります。  
  
の使用`EventParameterType`方法の詳細については、のドキュメントを参照してください。<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>  
  
> [!NOTE]
>  現時点では、 <xref:System.Speech.Synthesis>名前空間のメンバーを使用して記述されたマネージ合成音声エンジンのインスタンスは、構築後にリソースを変更することはできません。    
  
## Examples  
 次の例は、を<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>継承し、、、 <xref:System.Speech.Synthesis.TtsEngine.FragmentState>、および<xref:System.Speech.Synthesis.TtsEngine.TtsEventId>を<xref:System.Speech.Synthesis.TtsEngine.TextFragment>使用<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>しているカスタム音声合成実装の一部です。  
  
 の実装<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  
  
1.  インスタンスの<xref:System.Speech.Synthesis.TtsEngine.TextFragment>配列を受け取り、基になる合成エンジン<xref:System.Speech.Synthesis.TtsEngine.TextFragment>の`Speak`メソッドに渡されるインスタンスの新しい配列を作成します。  
  
2.  <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> <xref:System.Speech.Synthesis.TtsEngine.FragmentState> <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak> <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>各インスタンスのプロパティによって返されるのプロパティによって検出された列挙値がの場合、実装 <xref:System.Speech.Synthesis.TtsEngine.TextFragment>  
  
    -   読み上げられるテキストの Americanism を Britishisms に変換します。  
  
    -   実装<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> に提供 <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> されるインターフェイスのプロパティがイベントの種類をサポートしている場合は、のインスタンスを使用して、シンセサイザーの進行状況メーターを作成するためのイベントを作成します。 <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary>  
  
         によって<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> <xref:System.Speech.Synthesis.TtsEngine.EventParameterType> `LogSpeechEvent`返されるメンバー値を含むのパラメーターは、メソッドによって生成されるイベントをログに記録するために使用されます。 <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A>  
  
3.  その後、変更<xref:System.Speech.Synthesis.TtsEngine.TextFragment>された配列を使用して音声レンダリングエンジンが呼び出されます。  
  
```csharp
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
         LogSpeechEvent(spEvent.EventId,   
                        spEvent.ParameterType,   
                        spEvent.Param1,  
                        spEvent.Param2);  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
  </Docs>
  <Members>
    <Member MemberName="Object">
      <MemberSignature Language="C#" Value="Object" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.EventParameterType Object = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Object" />
      <MemberSignature Language="VB.NET" Value="Object" />
      <MemberSignature Language="C++ CLI" Value="Object" />
      <MemberSignature Language="F#" Value="Object = 2" Usage="System.Speech.Synthesis.TtsEngine.EventParameterType.Object" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.EventParameterType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>現在サポートされていません。</summary>
      </Docs>
    </Member>
    <Member MemberName="Pointer">
      <MemberSignature Language="C#" Value="Pointer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.EventParameterType Pointer = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Pointer" />
      <MemberSignature Language="VB.NET" Value="Pointer" />
      <MemberSignature Language="C++ CLI" Value="Pointer" />
      <MemberSignature Language="F#" Value="Pointer = 3" Usage="System.Speech.Synthesis.TtsEngine.EventParameterType.Pointer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.EventParameterType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>現在サポートされていません。</summary>
      </Docs>
    </Member>
    <Member MemberName="String">
      <MemberSignature Language="C#" Value="String" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.EventParameterType String = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.EventParameterType.String" />
      <MemberSignature Language="VB.NET" Value="String" />
      <MemberSignature Language="C++ CLI" Value="String" />
      <MemberSignature Language="F#" Value="String = 4" Usage="System.Speech.Synthesis.TtsEngine.EventParameterType.String" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.EventParameterType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> に対する引数 <paramref name="param2" /> は、<see langword="System.IntPtr" /> オブジェクトを参照する <see langword="System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni" /> を使用して作成された <see langword="System.String" /> であることを示します。<paramref name="param1" /> は任意の値を受け取ることができます。</summary>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="Token" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.EventParameterType Token = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Token" />
      <MemberSignature Language="VB.NET" Value="Token" />
      <MemberSignature Language="C++ CLI" Value="Token" />
      <MemberSignature Language="F#" Value="Token = 1" Usage="System.Speech.Synthesis.TtsEngine.EventParameterType.Token" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.EventParameterType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> の <paramref name="param2" /> 引数が、音声 (<see cref="T:System.Speech.Synthesis.VoiceInfo" />) など、リソースを表わす Windows Desktop Speech Technology オブジェクトである、Windows Desktop Speech Technology トークンを参照する <see cref="Overload:System.Runtime.InteropServices.Marshal.PtrToStructure" /> を使用して作成された <see cref="T:System.IntPtr" /> であることを示します。 <paramref name="param1" /> は任意の値を取ります。</summary>
      </Docs>
    </Member>
    <Member MemberName="Undefined">
      <MemberSignature Language="C#" Value="Undefined" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.EventParameterType Undefined = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Undefined" />
      <MemberSignature Language="VB.NET" Value="Undefined" />
      <MemberSignature Language="C++ CLI" Value="Undefined" />
      <MemberSignature Language="F#" Value="Undefined = 0" Usage="System.Speech.Synthesis.TtsEngine.EventParameterType.Undefined" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.EventParameterType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> に対する引数 <paramref name="param2" /> が未定義であることを示します。 通常、<paramref name="param1" /> と <paramref name="param2" /> は無視されます。 ただし、<see cref="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId" /> が <see cref="F:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary" /> の場合、進行状況バー イベントを生成できます。 <paramref name="param1" /> は、現在の単語の長さが含まれる整数になります。<paramref name="param2" /> は、現在の単語のオフセットが含まれる整数を参照する <see cref="T:System.IntPtr" /> になります。</summary>
      </Docs>
    </Member>
  </Members>
</Type>
