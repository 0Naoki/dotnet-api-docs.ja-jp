<Type Name="TraceFilter" FullName="System.Diagnostics.TraceFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7ca255b51a6e19bd19b607d741b37f014a068305" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39884719" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TraceFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TraceFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceFilter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TraceFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceFilter abstract" />
  <TypeSignature Language="F#" Value="type TraceFilter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6a9e5-101">トレース フィルター実装の基本クラスを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6a9e5-101">Provides the base class for trace filter implementations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a9e5-102">フィルターの追加レイヤーを提供するトレース リスナーがトレース フィルターを使用できるトレース スイッチでは提供されません。</span><span class="sxs-lookup"><span data-stu-id="6a9e5-102">Trace filters can be used by trace listeners to provide an extra layer of filtering beyond that provided by trace switches.</span></span> <span data-ttu-id="6a9e5-103">リスナーのトレース リスナーのトレースのフィルターが見つかりません<xref:System.Diagnostics.TraceListener.Filter%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6a9e5-103">The trace filter for a trace listener can be found in the listener's <xref:System.Diagnostics.TraceListener.Filter%2A> property.</span></span> <span data-ttu-id="6a9e5-104">トレース スイッチは、トレースがトレース リスナーに送信するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="6a9e5-104">Trace switches determine if a trace is to be sent to the trace listeners.</span></span> <span data-ttu-id="6a9e5-105">トレース フィルターを使用すると、個別のトレース リスナーをトレースが関連付けられている出力メディアに書き込まれるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="6a9e5-105">Trace filters allow the individual trace listeners to determine whether or not the trace is to be written to the associated output medium.</span></span> <span data-ttu-id="6a9e5-106">たとえば、各トレース フィルターによって決定される、トレースを書き込むことができますによってコンソールに、 <xref:System.Diagnostics.ConsoleTraceListener>、により、イベント ログへ、<xref:System.Diagnostics.EventLogTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="6a9e5-106">For example, as determined by each trace filter, a trace may be written to the console by a <xref:System.Diagnostics.ConsoleTraceListener>, but not to the event log by a <xref:System.Diagnostics.EventLogTraceListener>.</span></span>  
  
 <span data-ttu-id="6a9e5-107">フィルターを継承するクラス、<xref:System.Diagnostics.TraceFilter>クラスから継承するトレース リスナーで使用できる、<xref:System.Diagnostics.TraceListener>クラスをトレースするイベントのフィルター処理を実行します。</span><span class="sxs-lookup"><span data-stu-id="6a9e5-107">Filters that inherit from the <xref:System.Diagnostics.TraceFilter> class can be used by trace listeners that inherit from the <xref:System.Diagnostics.TraceListener> class to perform filtering of events being traced.</span></span> <span data-ttu-id="6a9e5-108"><xref:System.Diagnostics.TraceFilter> 1 つのメソッドを含む<xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>、イベント データを受け取り、イベントをトレースするかどうかを示すフラグを返します。</span><span class="sxs-lookup"><span data-stu-id="6a9e5-108"><xref:System.Diagnostics.TraceFilter> contains a single method, <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>, which takes event data and returns a flag indicating whether the event should be traced.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TraceFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TraceFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a9e5-109">
            <see cref="T:System.Diagnostics.TraceFilter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a9e5-109">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceFilter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldTrace">
      <MemberSignature Language="C#" Value="public abstract bool ShouldTrace (System.Diagnostics.TraceEventCache cache, string source, System.Diagnostics.TraceEventType eventType, int id, string formatOrMessage, object[] args, object data1, object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldTrace(class System.Diagnostics.TraceEventCache cache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string formatOrMessage, object[] args, object data1, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ShouldTrace (cache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, formatOrMessage As String, args As Object(), data1 As Object, data As Object()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ShouldTrace(System::Diagnostics::TraceEventCache ^ cache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ formatOrMessage, cli::array &lt;System::Object ^&gt; ^ args, System::Object ^ data1, cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member ShouldTrace : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] * obj * obj[] -&gt; bool" Usage="traceFilter.ShouldTrace (cache, source, eventType, id, formatOrMessage, args, data1, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="formatOrMessage" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="data1" Type="System.Object" />
        <Parameter Name="data" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="cache">
          <span data-ttu-id="6a9e5-110">トレース イベントの情報を含む <see cref="T:System.Diagnostics.TraceEventCache" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a9e5-110">The <see cref="T:System.Diagnostics.TraceEventCache" /> that contains information for the trace event.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="6a9e5-111">ソースの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a9e5-111">The name of the source.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="6a9e5-112">トレースを発生させたイベントのタイプを指定する <see cref="T:System.Diagnostics.TraceEventType" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a9e5-112">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="6a9e5-113">トレース識別子番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a9e5-113">A trace identifier number.</span>
          </span>
        </param>
        <param name="formatOrMessage">
          <span data-ttu-id="6a9e5-114">
            <c>args</c> パラメーターによって指定された引数の配列を書き込むために使用する書式、または書き込むメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a9e5-114">Either the format to use for writing an array of arguments specified by the <c>args</c> parameter, or a message to write.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="6a9e5-115">引数オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a9e5-115">An array of argument objects.</span>
          </span>
        </param>
        <param name="data1">
          <span data-ttu-id="6a9e5-116">トレース データ オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a9e5-116">A trace data object.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="6a9e5-117">トレース データ オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a9e5-117">An array of trace data objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a9e5-118">派生クラスでのオーバーライドの際に、トレース リスナーでイベントをトレースするかどうかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a9e5-118">When overridden in a derived class, determines whether the trace listener should trace the event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a9e5-119">指定したイベントをトレースする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a9e5-119">
              <see langword="true" /> to trace the specified event; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6a9e5-120">次のコード例は、オーバーライドする方法を示します、<xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>メソッドをイベントのトレース イベントの種類と等しいときにトレースが発生するかを示す<xref:System.Diagnostics.TraceEventType.Error?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="6a9e5-120">The following code example shows how to override the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method to indicate tracing should occur when the trace event type of the event is equal to <xref:System.Diagnostics.TraceEventType.Error?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[System.Diagnostics.TraceFilter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.diagnostics.tracefilter/cpp/source.cpp#2)]
 [!code-csharp[System.Diagnostics.TraceFilter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.tracefilter/cs/source.cs#2)]
 [!code-vb[System.Diagnostics.TraceFilter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.tracefilter/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6a9e5-121">
            <para>このメソッドの実装を返す必要があります<see langword="true" />場合は、渡されたパラメーターによって指定されたイベントをトレースする必要があります。それ以外の場合、メソッドが返す必要があります<see langword="false" />します。たとえば、リスナーに渡すのエラー イベントのみを許可するフィルターを調べて必要があります、<paramref name="eventType" />パラメーターおよび戻り値<see langword="true" />トレース イベントの種類のレベル設定されている場合<see cref="F:System.Diagnostics.TraceEventType.Error" />'http://contosocertdemo.com/caggqrkc.html 大きい; それ以外の場合、または<see langword="false" />。処理するメソッドの実装を準備する必要があります<see langword="null" />で、次のパラメーター: <paramref name="args" />、 <paramref name="data1" />、 <paramref name="data" />、 <paramref name="formatOrMessage" />、および<paramref name="cache" />します。パラメーターの値が場合<see langword="null" />パラメーターは、イベントの一部ではありません。たとえば場合、<paramref name="args" />パラメーターが<see langword="null" />イベントに任意の引数がないことを示します。場合、<paramref name="data" />パラメーターが<see langword="null" />、1 つまたはゼロのデータ オブジェクトが存在し、します。見つかったは 1 つのデータ オブジェクトがある場合、<paramref name="data1" />パラメーター。1 つのデータ オブジェクトとデータ オブジェクトの配列を区別する理由は、パフォーマンスのためです。同様に、通常 1 つのオブジェクトをトレースすると、専用の場合、オブジェクトの配列を作成する理由はありません。場合、<paramref name="data" />パラメーターでない<see langword="null" />、<paramref name="data1" />パラメーターもない必要があります<see langword="null" />します。保証されます、<paramref name="source" />パラメーターでない<see langword="null" />と空の文字列ではありません ("")。メソッドの実装が必要に応じて、次の例外をスローします。-<see cref="T:System.ArgumentNullException" />場合<paramref name="source" />は<see langword="null" />します。 -<see cref="T:System.ArgumentException" />場合<paramref name="eventType" />のいずれかではない、<see cref="T:System.Diagnostics.TraceEventType" />値。 メソッドの実装に関係のない例外です。たとえば、<see cref="T:System.Threading.ThreadAbortException" />します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6a9e5-121">
              <para>Implementations of this method should return <see langword="true" /> if the event specified by the passed parameters should be traced. Otherwise the method should return <see langword="false" />. For example, a filter that allows only error events to pass through to the listener should inspect the <paramref name="eventType" /> parameter and return <see langword="true" /> if the trace event type level is set to <see cref="F:System.Diagnostics.TraceEventType.Error" /> or greater; otherwise, it should return <see langword="false" />.  Implementations of the method should be prepared to handle <see langword="null" /> in the following parameters: <paramref name="args" />, <paramref name="data1" />, <paramref name="data" />, <paramref name="formatOrMessage" />, and <paramref name="cache" />. If the parameter value is <see langword="null" />, the parameter is not part of the event. For example, if the <paramref name="args" /> parameter is <see langword="null" />, it means that the event does not have any arguments. If the <paramref name="data" /> parameter is <see langword="null" />, then there are either one or no data objects. If there is one data object, it will be found in the <paramref name="data1" /> parameter. The reason for the distinction between a single data object and an array of data objects is for performance. There is no reason to create an object array if only one object is traced, as is normally the case. If the <paramref name="data" /> parameter is not <see langword="null" />, the <paramref name="data1" /> parameter must also not be <see langword="null" />.  It is guaranteed that the <paramref name="source" /> parameter is not <see langword="null" /> and not an empty string ("").  Implementations of the method can optionally throw the following exceptions:  -   <see cref="T:System.ArgumentNullException" /> if <paramref name="source" /> is <see langword="null" />.  -   <see cref="T:System.ArgumentException" /> if <paramref name="eventType" /> is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> values.  -   Exceptions unrelated to the implementation of the method. For example, a <see cref="T:System.Threading.ThreadAbortException" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>