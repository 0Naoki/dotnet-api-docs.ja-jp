<Type Name="CorrelationManager" FullName="System.Diagnostics.CorrelationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fc23e0e887d53ae76f77bdcfae6edac0990ad5e5" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39862512" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CorrelationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CorrelationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.CorrelationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class CorrelationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class CorrelationManager" />
  <TypeSignature Language="F#" Value="type CorrelationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>論理トランザクションの一部であるトレースを相互に関連付けます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 1 つの論理操作から生成されたトレースは、異なる論理操作からのトレースと区別するために操作の一意の id でタグ付けできます。 たとえば、ASP.NET 要求によってグループ関連のトレースに役立つ場合があります。 <xref:System.Diagnostics.CorrelationManager>クラスはスレッド バインド コンテキストに、論理操作 id を格納し、ストアドの id を持つスレッドによって生成された各トレース イベントを自動的にタグ付けに使用するメソッドを提供します。  
  
 論理演算をネストすることもできます。 <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A>プロパティは入れ子になった論理操作 id のスタックを公開します。 呼び出しごとに、<xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A>メソッドは、スタックに新しい論理操作 id をプッシュします。 呼び出しごとに、<xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A>メソッドがスタックからの論理操作の id が表示されます。  
  
> [!NOTE]
>  論理操作の id は、論理操作の id の型の使用を許可しているオブジェクトです。  
  
   
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Diagnostics.CorrelationManager>トレースされるイベントに関連付けられた論理操作を識別するクラス。 2 つの論理操作を開始すると、メイン スレッドとワーカー スレッドで他のいずれか。 両方の論理操作では、エラー イベントが記録されます。  
  
 [!code-cpp[System.Diagnostics.CorrelationManager#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.CorrelationManager/cpp/correlationmanager.cpp#1)]
 [!code-csharp[System.Diagnostics.CorrelationManager#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.CorrelationManager/cs/program.cs#1)]
 [!code-vb[System.Diagnostics.CorrelationManager#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.CorrelationManager/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActivityId">
      <MemberSignature Language="C#" Value="public Guid ActivityId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ActivityId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.CorrelationManager.ActivityId" />
      <MemberSignature Language="VB.NET" Value="Public Property ActivityId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ActivityId { Guid get(); void set(Guid value); };" />
      <MemberSignature Language="F#" Value="member this.ActivityId : Guid with get, set" Usage="System.Diagnostics.CorrelationManager.ActivityId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グローバル アクティビティの ID を取得または設定します。</summary>
        <value>グローバル アクティビティを識別する <see cref="T:System.Guid" /> 構造体。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.CorrelationManager.ActivityId%2A>プロパティを取得およびグローバルのアクティビティ id を設定、<xref:System.Runtime.Remoting.Messaging.CallContext>スレッド。 <xref:System.Diagnostics.CorrelationManager.ActivityId%2A>のオーバーライドのトレース リスナーでトレース転送操作で使用、<xref:System.Diagnostics.TraceListener.TraceTransfer%2A>メソッドなど、<xref:System.Diagnostics.XmlWriterTraceListener>クラス。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalOperationStack">
      <MemberSignature Language="C#" Value="public System.Collections.Stack LogicalOperationStack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Stack LogicalOperationStack" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.CorrelationManager.LogicalOperationStack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalOperationStack As Stack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Stack ^ LogicalOperationStack { System::Collections::Stack ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalOperationStack : System.Collections.Stack" Usage="System.Diagnostics.CorrelationManager.LogicalOperationStack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Stack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>呼び出しコンテキストから論理的な操作のスタックを取得します。</summary>
        <value>呼び出しコンテキストの論理的な操作のスタックを表す <see cref="T:System.Collections.Stack" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出しごとに、<xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A>メソッドに新しい論理操作 id のプッシュ、<xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A>プロパティのスタック。 呼び出しごとに、<xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A>メソッドがスタックからの論理操作の id が表示されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartLogicalOperation">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>スレッドで論理的な操作を開始します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartLogicalOperation">
      <MemberSignature Language="C#" Value="public void StartLogicalOperation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartLogicalOperation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.CorrelationManager.StartLogicalOperation" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartLogicalOperation ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartLogicalOperation();" />
      <MemberSignature Language="F#" Value="member this.StartLogicalOperation : unit -&gt; unit" Usage="correlationManager.StartLogicalOperation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>スレッドで論理的な操作を開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 論理操作を開始するには、自動的に生成された GUID を使用して、論理操作の識別子。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartLogicalOperation">
      <MemberSignature Language="C#" Value="public void StartLogicalOperation (object operationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartLogicalOperation(object operationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.CorrelationManager.StartLogicalOperation(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartLogicalOperation (operationId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartLogicalOperation(System::Object ^ operationId);" />
      <MemberSignature Language="F#" Value="member this.StartLogicalOperation : obj -&gt; unit" Usage="correlationManager.StartLogicalOperation operationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="operationId">演算を識別するオブジェクト。</param>
        <summary>指定した ID を使用し、スレッドで論理的な操作を開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `operationId`パラメーターがなど、任意のオブジェクトを指定できます、<xref:System.String>操作をトレース目的で識別できるようにします。 によって表されるオブジェクト`operationId`に追加されます、<xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A>プロパティ。  
  
   
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%28System.Object%29>メソッドによって、メイン スレッドに関連付けられる論理操作を初期化します。 完全なコード例については、<xref:System.Diagnostics.CorrelationManager>クラス。  
  
 [!code-csharp[System.Diagnostics.CorrelationManager#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.CorrelationManager/cs/program.cs#2)]
 [!code-vb[System.Diagnostics.CorrelationManager#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.CorrelationManager/vb/module1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="operationId" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="StopLogicalOperation">
      <MemberSignature Language="C#" Value="public void StopLogicalOperation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopLogicalOperation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.CorrelationManager.StopLogicalOperation" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopLogicalOperation ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopLogicalOperation();" />
      <MemberSignature Language="F#" Value="member this.StopLogicalOperation : unit -&gt; unit" Usage="correlationManager.StopLogicalOperation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の論理的な操作を停止します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 論理操作は停止され、論理操作の id はから削除、<xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Diagnostics.CorrelationManager.LogicalOperationStack" /> プロパティが空のスタックです。</exception>
      </Docs>
    </Member>
  </Members>
</Type>