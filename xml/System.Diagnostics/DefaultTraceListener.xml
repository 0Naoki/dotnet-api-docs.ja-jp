<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DefaultTraceListener.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e581445bf8b73278f54dd2d25bd773d01ccd85e1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e581445bf8b73278f54dd2d25bd773d01ccd85e1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>Provides the default output methods and behavior for tracing.</source>
          <target state="translated">トレースの動作と既定の出力メソッドを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>An instance of this class is automatically added to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collections.</source>
          <target state="translated">このクラスのインスタンスが自動的に追加する、<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>Explicitly adding a second <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> causes duplicate messages in the debugger output window and duplicate message boxes for asserts.</source>
          <target state="translated">秒を明示的に追加する<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>重複するデバッガーの出力ウィンドウにメッセージの原因と重複するメッセージ ボックスをアサートします。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph> methods emit the message to the Win32 <ph id="ph3">`OutputDebugString`</ph> function and to the <ph id="ph4">&lt;xref:System.Diagnostics.Debugger.Log%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">既定では、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph>メソッドは、Win32 にメッセージを出力<ph id="ph3">`OutputDebugString`</ph>関数および、<ph id="ph4">&lt;xref:System.Diagnostics.Debugger.Log%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>For information about the <ph id="ph1">`OutputDebugString`</ph> function, see the Platform SDK or MSDN.</source>
          <target state="translated">については、<ph id="ph1">`OutputDebugString`</ph>機能、プラットフォーム SDK または MSDN を参照してください。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%2A&gt;</ph> method, by default, displays a message box when the application is running in a user interface mode; it also emits the message using <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%2A&gt;</ph>メソッド、既定では、メッセージ ボックスを表示、アプリケーションのユーザー インターフェイス モードで実行中です。 メッセージを使用して、出力<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The display of the message box for <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> method calls depends on the presence of the <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">メッセージ ボックスの表示<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph>メソッドの呼び出しは、の有無によって異なります、<ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>に含まれていない、<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>コレクション、メッセージ ボックスは表示されません。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>clear&gt; element<ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, by the <bpt id="p2">[</bpt><ph id="ph3">\&lt;</ph>remove&gt; element<ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph4">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph5">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph6">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>で削除することができます、 <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>オフ &gt; 要素<ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>により、 <bpt id="p2">[</bpt><ph id="ph3">\&lt;</ph>削除 &gt; 要素<ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>、または呼び出すことによって、<ph id="ph4">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph>メソッドを<ph id="ph5">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>プロパティ (<ph id="ph6">`System.Diagnostics.Trace.Listeners.Clear()`</ph>)。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>You must enable tracing or debugging to use a trace listener.</source>
          <target state="translated">トレースまたはトレース リスナーを使用してデバッグを有効にする必要があります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The following syntax is compiler specific.</source>
          <target state="translated">次の構文は、コンパイラに固有です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</source>
          <target state="translated">以外は、c# または Visual Basic コンパイラを使用する場合は、コンパイラのドキュメントを参照してください。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>To enable debugging in C#, add the <ph id="ph1">`/d:DEBUG`</ph> flag to the compiler command line when you compile your code, or add <ph id="ph2">`#define DEBUG`</ph> to the top of your file.</source>
          <target state="translated">C# でのデバッグを有効にするには追加、<ph id="ph1">`/d:DEBUG`</ph>フラグを追加したり、コードをコンパイルすると、コンパイラのコマンドライン<ph id="ph2">`#define DEBUG`</ph>ファイルの先頭にします。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>In Visual Basic, add the <ph id="ph1">`/d:DEBUG=True`</ph> flag to the compiler command line.</source>
          <target state="translated">Visual basic では、追加、<ph id="ph1">`/d:DEBUG=True`</ph>フラグをコンパイラ コマンドライン。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>To enable tracing in C#, add the <ph id="ph1">`/d:TRACE`</ph> flag to the compiler command line when you compile your code, or add <ph id="ph2">`#define TRACE`</ph> to the top of your file.</source>
          <target state="translated">C# でのトレースを有効にするには追加、<ph id="ph1">`/d:TRACE`</ph>フラグを追加したり、コードをコンパイルすると、コンパイラのコマンドライン<ph id="ph2">`#define TRACE`</ph>ファイルの先頭にします。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>In Visual Basic, add the <ph id="ph1">`/d:TRACE=True`</ph> flag to the compiler command line.</source>
          <target state="translated">Visual basic では、追加、<ph id="ph1">`/d:TRACE=True`</ph>フラグをコンパイラ コマンドライン。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>To add a trace listener, edit the configuration file that corresponds to the name of your application.</source>
          <target state="translated">トレース リスナーを追加するには、アプリケーションの名前に対応する構成ファイルを編集します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</source>
          <target state="translated">このファイル内でことができます、リスナーを追加、その型およびパラメーターの設定、リスナーの削除またはオフにするアプリケーションで設定したすべてのリスナーです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The configuration file should be formatted similar to the following example:</source>
          <target state="translated">構成ファイルに次の例のようにフォーマットする必要があります。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The following code example calculates binomial coefficients, which are values used in probability and statistics.</source>
          <target state="translated">次のコード例では、確率と統計情報で使用される値を実行するための二項の係数を計算します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>This example uses a <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> to trace results and log errors.</source>
          <target state="translated">この例では、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>結果をトレースしたり、エラー ログに記録します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>It creates a new <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>, adds it to the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collection, and sets the <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A&gt;</ph> property to the log file specified in the command-line arguments.</source>
          <target state="translated">新たに作成、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>に追加、<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph>コレクション、およびセット、<ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A&gt;</ph>プロパティをコマンドライン引数で指定されたログ ファイルにします。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>If an error is detected while processing the input parameter, or if the <ph id="ph1">`CalcBinomial`</ph> function throws an exception, the <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%2A&gt;</ph> method logs and displays an error message.</source>
          <target state="translated">入力パラメーターの処理中にエラーが検出された場合、または、<ph id="ph1">`CalcBinomial`</ph>関数は、例外をスロー、<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%2A&gt;</ph>メソッドをログに記録し、エラー メッセージが表示されます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, the error message is also written to the console.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A&gt;</ph>プロパティは<ph id="ph2">`false`</ph>、エラー メッセージは、コンソールに書き込まれます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>When the result is calculated successfully, the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29&gt;</ph> methods write the results to the log file.</source>
          <target state="translated">結果が正常に、計算されると、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29&gt;</ph>と<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29&gt;</ph>メソッドは、ログ ファイルに結果を書き込みます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph> methods cause trace information to be written only to the <ph id="ph4">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph>メソッドにのみ書き込まれるトレース情報が発生する、<ph id="ph4">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>To write trace information to all listeners in the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collection, use the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Fail%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Write%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Diagnostics.Trace.WriteLine%2A&gt;</ph> methods of the <ph id="ph5">&lt;xref:System.Diagnostics.Trace&gt;</ph> class.</source>
          <target state="translated">すべてのリスナーにトレース情報を書き込む、<ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph>収集、使用、 <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Fail%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Write%2A&gt;</ph>、および<ph id="ph4">&lt;xref:System.Diagnostics.Trace.WriteLine%2A&gt;</ph>のメソッド、<ph id="ph5">&lt;xref:System.Diagnostics.Trace&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>This class is thread safe.</source>
          <target state="translated">このクラスは、スレッド セーフです。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.DefaultTraceListener" /&gt;</ph> class with "Default" as its <ph id="ph2">&lt;see cref="P:System.Diagnostics.TraceListener.Name" /&gt;</ph> property value.</source>
          <target state="translated">"Default" を <ph id="ph1">&lt;see cref="T:System.Diagnostics.DefaultTraceListener" /&gt;</ph> プロパティ値として使用して、<ph id="ph2">&lt;see cref="P:System.Diagnostics.TraceListener.Name" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.#ctor">
          <source>The following code example removes the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> provided by the application from the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collection and then creates a new <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> and adds it to the <ph id="ph4">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collection.</source>
          <target state="translated">次のコード例を削除、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>からアプリケーションによって提供される、<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph>コレクションし、新たに作成および<ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>に追加し、<ph id="ph4">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled">
          <source>Gets or sets a value indicating whether the application is running in user-interface mode.</source>
          <target state="translated">アプリケーションがユーザー インターフェイス モードで実行されているかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if user-interface mode is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ユーザー インターフェイス モードが有効な場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled">
          <source>The following code example calls a function that calls the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29&gt;</ph> method to log an error message if the function throws an exception.</source>
          <target state="translated">次のコード例を呼び出す関数を呼び出す、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29&gt;</ph>関数が例外をスローした場合、エラー メッセージを記録するメソッド。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, the method also writes the error message to the console.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A&gt;</ph>プロパティは<ph id="ph2">`false`</ph>メソッドがコンソールにも、エラー メッセージを書き込みます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>Emits or displays a message and a stack trace for an assertion that always fails.</source>
          <target state="translated">常に失敗するアサーションのメッセージとスタック トレースを出力または表示します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)">
          <source>The message to emit or display.</source>
          <target state="translated">出力または表示するメッセージ。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)">
          <source>Emits or displays a message and a stack trace for an assertion that always fails.</source>
          <target state="translated">常に失敗するアサーションのメッセージとスタック トレースを出力または表示します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)">
          <source>By default, this method sends the <ph id="ph1">`message`</ph> parameter and a stack trace to a message box (when the application runs in user-interface mode) and to the <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> instance.</source>
          <target state="translated">このメソッドは既定では、送信、<ph id="ph1">`message`</ph>パラメーターおよび (アプリケーションは、ユーザー インターフェイス モードで実行されます) 場合は、メッセージ ボックスにされ、スタック トレース、<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)">
          <source>The following code example writes an error message to a <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> using the <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%29&gt;</ph> method.</source>
          <target state="translated">次のコード例は、エラー メッセージを書き込みます、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>を使用して、<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%29&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)">
          <source>The method also writes the message to the console if a user interface is not available.</source>
          <target state="translated">メソッドは、ユーザー インターフェイスが使用できない場合もメッセージと、コンソールに書き込みます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
          <source>The message to emit or display.</source>
          <target state="translated">出力または表示するメッセージ。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
          <source>The detailed message to emit or display.</source>
          <target state="translated">出力または表示する詳細メッセージ。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
          <source>Emits or displays detailed messages and a stack trace for an assertion that always fails.</source>
          <target state="translated">常に失敗するアサーションの詳細メッセージとスタック トレースを出力または表示します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
          <source>By default, this method sends the <ph id="ph1">`message`</ph> parameter, the <ph id="ph2">`detailMessage`</ph> parameter, and a stack trace to a message box (when the application runs in user-interface mode) and to the <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> instance.</source>
          <target state="translated">このメソッドは既定では、送信、<ph id="ph1">`message`</ph>パラメーター、<ph id="ph2">`detailMessage`</ph>パラメーター、および (アプリケーションは、ユーザー インターフェイス モードで実行されます) 場合は、メッセージ ボックスにされ、スタック トレース、<ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
          <source>The following code example calls a function that calls the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29&gt;</ph> method to log a detailed error message if the function throws an exception.</source>
          <target state="translated">次のコード例を呼び出す関数を呼び出して、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29&gt;</ph>関数が例外をスローした場合は、詳細なエラー メッセージを記録するメソッド。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
          <source>The method writes the message to the console if a user interface is not available.</source>
          <target state="translated">メソッドは、ユーザー インターフェイスが使用できない場合に、コンソールにメッセージを書き込みます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.DefaultTraceListener.LogFileName">
          <source>Gets or sets the name of a log file to write trace or debug messages to.</source>
          <target state="translated">トレース メッセージまたはデバッグ メッセージを書き込むログ ファイルの名前を取得または設定します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DefaultTraceListener.LogFileName">
          <source>The name of a log file to write trace or debug messages to.</source>
          <target state="translated">トレースまたはデバッグ メッセージを書き込むログ ファイルの名前。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DefaultTraceListener.LogFileName">
          <source>The following code example creates a new <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>, adds it to the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collection, and sets the <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A&gt;</ph> property to the log file specified in the command-line arguments.</source>
          <target state="translated">次のコード例が新たに作成<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>に追加、<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph>コレクション、およびセット、<ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A&gt;</ph>プロパティをコマンドライン引数で指定されたログ ファイルにします。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Write(System.String)">
          <source>The message to write to <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> および <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph> に書き込むメッセージ。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Write(System.String)">
          <source>Writes the output to the <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> function and to the <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph> method.</source>
          <target state="translated">出力を <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> 関数と <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph> メソッドに書き込みます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Write(System.String)">
          <source>For information about the Win32 <ph id="ph1">`OutputDebugString`</ph> debugging function, see "OutputDebugString" in the Platform SDK or MSDN.</source>
          <target state="translated">については、Win32<ph id="ph1">`OutputDebugString`</ph>関数をデバッグ プラットフォーム SDK または MSDN で"OutputDebugString"を参照してください。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Write(System.String)">
          <source>The following code example formats the results of a function and uses the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29&gt;</ph> method to write the first part of the message to a <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">次のコード例は、関数の結果を書式化してを使用して、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29&gt;</ph>メソッドへのメッセージの最初の部分を書き込む、<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
          <source>The message to write to <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> および <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph> に書き込むメッセージ。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
          <source>Writes the output to the <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> function and to the <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph> method, followed by a carriage return and line feed (\r\n).</source>
          <target state="translated">出力を <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> 関数と <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph> メソッドに書き込み、続けて復帰とライン フィード (\r\n) を書き込みます。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
          <source>The default line terminator is a carriage return followed by a line feed (\r\n).</source>
          <target state="translated">既定の行終端記号は、キャリッジ リターンの次に改行が付いた形です (\r\n)。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
          <source>For information about the Win32 <ph id="ph1">`OutputDebugString`</ph> debugging function, see the Platform SDK or MSDN.</source>
          <target state="translated">については、Win32<ph id="ph1">`OutputDebugString`</ph>関数をデバッグ プラットフォーム SDK または MSDN を参照してください。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
          <source>This method sets the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">このメソッドを設定、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
          <source>The following code example formats the results of a function and uses the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29&gt;</ph> method to write the last part of the message to a <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">次のコード例は、関数の結果を書式化してを使用して、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29&gt;</ph>メソッドへのメッセージの最後の部分を書き込む、<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>