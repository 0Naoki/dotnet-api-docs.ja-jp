<Type Name="DefaultTraceListener" FullName="System.Diagnostics.DefaultTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="300b94df0a7a0909d14e59e287b7790d0321bc71" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58738004" /></Metadata><TypeSignature Language="C#" Value="public class DefaultTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi DefaultTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DefaultTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultTraceListener : System::Diagnostics::TraceListener" />
  <TypeSignature Language="F#" Value="type DefaultTraceListener = class&#xA;    inherit TraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="96db0-101">トレースの動作と既定の出力メソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="96db0-101">Provides the default output methods and behavior for tracing.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96db0-102">このクラスのインスタンスは自動的に追加、<xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType>と<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>コレクション。</span><span class="sxs-lookup"><span data-stu-id="96db0-102">An instance of this class is automatically added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collections.</span></span> <span data-ttu-id="96db0-103">2 つ目を明示的に追加<xref:System.Diagnostics.DefaultTraceListener>の重複するメッセージ ボックスが行われ、エラーの原因には、デバッガーの出力ウィンドウにメッセージが重複しています。</span><span class="sxs-lookup"><span data-stu-id="96db0-103">Explicitly adding a second <xref:System.Diagnostics.DefaultTraceListener> causes duplicate messages in the debugger output window and duplicate message boxes for asserts.</span></span>  
  
 <span data-ttu-id="96db0-104">既定で、<xref:System.Diagnostics.DefaultTraceListener.Write%2A>と<xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A>メソッドは、Win32 にメッセージを出力`OutputDebugString`関数と、<xref:System.Diagnostics.Debugger.Log%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="96db0-104">By default, the <xref:System.Diagnostics.DefaultTraceListener.Write%2A> and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> methods emit the message to the Win32 `OutputDebugString` function and to the <xref:System.Diagnostics.Debugger.Log%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="96db0-105">については、`OutputDebugString`関数、Platform SDK または MSDN を参照してください。</span><span class="sxs-lookup"><span data-stu-id="96db0-105">For information about the `OutputDebugString` function, see the Platform SDK or MSDN.</span></span>  
  
 <span data-ttu-id="96db0-106"><xref:System.Diagnostics.DefaultTraceListener.Fail%2A>メソッドでは、既定では、メッセージ ボックスを表示、アプリケーションがユーザー インターフェイス モードで実行されている場合は、出力メッセージを使用して、<xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A>します。</span><span class="sxs-lookup"><span data-stu-id="96db0-106">The <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> method, by default, displays a message box when the application is running in a user interface mode; it also emits the message using <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96db0-107">メッセージ ボックスの表示<xref:System.Diagnostics.Debug.Assert%2A>と<xref:System.Diagnostics.Debug.Fail%2A>メソッドの呼び出しがの存在に依存、<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="96db0-107">The display of the message box for <xref:System.Diagnostics.Debug.Assert%2A> and <xref:System.Diagnostics.Debug.Fail%2A> method calls depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="96db0-108">場合、<xref:System.Diagnostics.DefaultTraceListener>内にない、<xref:System.Diagnostics.Trace.Listeners%2A>コレクション、メッセージ ボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="96db0-108">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="96db0-109"><xref:System.Diagnostics.DefaultTraceListener>して削除できる、 [\<オフ > 要素](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)により、 [\<削除 > 要素](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)、または呼び出すことによって、<xref:System.Diagnostics.TraceListenerCollection.Clear%2A>メソッドを<xref:System.Diagnostics.Trace.Listeners%2A>プロパティ (`System.Diagnostics.Trace.Listeners.Clear()`)。</span><span class="sxs-lookup"><span data-stu-id="96db0-109">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\<clear> element](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), by the [\<remove> element](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="96db0-110">トレース出力またはデバッグ トレース リスナーの使用を有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="96db0-110">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="96db0-111">次の構文では、特定のコンパイラです。</span><span class="sxs-lookup"><span data-stu-id="96db0-111">The following syntax is compiler specific.</span></span> <span data-ttu-id="96db0-112">C# または Visual Basic 以外のコンパイラを使用する場合は、コンパイラは、ドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="96db0-112">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="96db0-113">C# でのデバッグを有効にするには追加、`/d:DEBUG`フラグをコードのコンパイルまたは追加するときに、コンパイラのコマンドライン`#define DEBUG`ファイルの先頭にします。</span><span class="sxs-lookup"><span data-stu-id="96db0-113">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="96db0-114">Visual basic では、追加、`/d:DEBUG=True`フラグをコンパイラ コマンドライン。</span><span class="sxs-lookup"><span data-stu-id="96db0-114">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="96db0-115">C# でのトレースを有効にするには追加、`/d:TRACE`フラグをコードのコンパイルまたは追加するときに、コンパイラのコマンドライン`#define TRACE`ファイルの先頭にします。</span><span class="sxs-lookup"><span data-stu-id="96db0-115">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="96db0-116">Visual basic では、追加、`/d:TRACE=True`フラグをコンパイラ コマンドライン。</span><span class="sxs-lookup"><span data-stu-id="96db0-116">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="96db0-117">トレース リスナーを追加するには、アプリケーションの名前に対応する構成ファイルを編集します。</span><span class="sxs-lookup"><span data-stu-id="96db0-117">To add a trace listener, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="96db0-118">このファイルでことができます、リスナーを追加、その型とパラメーターの設定、リスナーを削除またはオフにするアプリケーションによって以前に設定するすべてのリスナー。</span><span class="sxs-lookup"><span data-stu-id="96db0-118">Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="96db0-119">構成ファイルは、次の例のようなフォーマットする必要があります。</span><span class="sxs-lookup"><span data-stu-id="96db0-119">The configuration file should be formatted similar to the following example:</span></span>  
  
```xml  
<configuration>  
<system.diagnostics>  
  <trace autoflush="false" indentsize="4">  
    <listeners>  
      <remove name="Default" />  
      <add name="myListener"  type="System.Diagnostics.TextWriterTraceListener"    initializeData="c:\myListener.log" />  
    </listeners>  
  </trace>  
</system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="96db0-120">次のコード例では、確率と統計情報で使用される値を実行するための二項の係数を計算します。</span><span class="sxs-lookup"><span data-stu-id="96db0-120">The following code example calculates binomial coefficients, which are values used in probability and statistics.</span></span> <span data-ttu-id="96db0-121">この例では、<xref:System.Diagnostics.DefaultTraceListener>を結果のトレース、エラー ログに記録します。</span><span class="sxs-lookup"><span data-stu-id="96db0-121">This example uses a <xref:System.Diagnostics.DefaultTraceListener> to trace results and log errors.</span></span> <span data-ttu-id="96db0-122">新たに作成、<xref:System.Diagnostics.DefaultTraceListener>に追加します、<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>コレクション、およびセット、<xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A>プロパティをコマンドライン引数で指定されたログ ファイル。</span><span class="sxs-lookup"><span data-stu-id="96db0-122">It creates a new <xref:System.Diagnostics.DefaultTraceListener>, adds it to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection, and sets the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> property to the log file specified in the command-line arguments.</span></span>  
  
 <span data-ttu-id="96db0-123">入力パラメーターの処理中にエラーが検出された場合、または場合、`CalcBinomial`関数は、例外をスロー、<xref:System.Diagnostics.DefaultTraceListener.Fail%2A>メソッドは、ログに記録し、エラー メッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="96db0-123">If an error is detected while processing the input parameter, or if the `CalcBinomial` function throws an exception, the <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> method logs and displays an error message.</span></span> <span data-ttu-id="96db0-124">場合、<xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A>プロパティは`false`、エラー メッセージがコンソールにも書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="96db0-124">If the <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A> property is `false`, the error message is also written to the console.</span></span> <span data-ttu-id="96db0-125">正常に結果を計算するとき、<xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29>と<xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29>メソッドは、ログ ファイルに結果を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="96db0-125">When the result is calculated successfully, the <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> methods write the results to the log file.</span></span>  
  
 <span data-ttu-id="96db0-126"><xref:System.Diagnostics.DefaultTraceListener.Fail%2A>、 <xref:System.Diagnostics.DefaultTraceListener.Write%2A>、および<xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A>メソッドによりにのみ書き込まれるトレース情報、<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="96db0-126">The <xref:System.Diagnostics.DefaultTraceListener.Fail%2A>, <xref:System.Diagnostics.DefaultTraceListener.Write%2A>, and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> methods cause trace information to be written only to the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="96db0-127">すべてのリスナーにトレース情報を書き込む、<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>収集、使用、 <xref:System.Diagnostics.Trace.Fail%2A>、 <xref:System.Diagnostics.Trace.Write%2A>、および<xref:System.Diagnostics.Trace.WriteLine%2A>のメソッド、<xref:System.Diagnostics.Trace>クラス。</span><span class="sxs-lookup"><span data-stu-id="96db0-127">To write trace information to all listeners in the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection, use the <xref:System.Diagnostics.Trace.Fail%2A>, <xref:System.Diagnostics.Trace.Write%2A>, and <xref:System.Diagnostics.Trace.WriteLine%2A> methods of the <xref:System.Diagnostics.Trace> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#11)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#11)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="96db0-128">このクラスは、スレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="96db0-128">This class is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
    <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96db0-129">"Default" を <see cref="T:System.Diagnostics.DefaultTraceListener" /> プロパティ値として使用して、<see cref="P:System.Diagnostics.TraceListener.Name" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="96db0-129">Initializes a new instance of the <see cref="T:System.Diagnostics.DefaultTraceListener" /> class with "Default" as its <see cref="P:System.Diagnostics.TraceListener.Name" /> property value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="96db0-130">次のコード例の削除、<xref:System.Diagnostics.DefaultTraceListener>からアプリケーションによって提供される、<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>コレクションし、新しいを作成します<xref:System.Diagnostics.DefaultTraceListener>に追加します、<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>コレクション。</span><span class="sxs-lookup"><span data-stu-id="96db0-130">The following code example removes the <xref:System.Diagnostics.DefaultTraceListener> provided by the application from the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection and then creates a new <xref:System.Diagnostics.DefaultTraceListener> and adds it to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#3)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="AssertUiEnabled">
      <MemberSignature Language="C#" Value="public bool AssertUiEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AssertUiEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property AssertUiEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AssertUiEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AssertUiEnabled : bool with get, set" Usage="System.Diagnostics.DefaultTraceListener.AssertUiEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("AssertUiEnabled defaults to False; should follow Environment.UserInteractive.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96db0-131">アプリケーションがユーザー インターフェイス モードで実行されているかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="96db0-131">Gets or sets a value indicating whether the application is running in user-interface mode.</span></span></summary>
        <value><span data-ttu-id="96db0-132">ユーザー インターフェイス モードが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="96db0-132"><see langword="true" /> if user-interface mode is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="96db0-133">次のコード例を呼び出す関数を呼び出し、<xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29>関数が例外をスローした場合、エラー メッセージを記録するメソッド。</span><span class="sxs-lookup"><span data-stu-id="96db0-133">The following code example calls a function that calls the <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> method to log an error message if the function throws an exception.</span></span> <span data-ttu-id="96db0-134">場合、<xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A>プロパティは`false`メソッドがコンソールにも、エラー メッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="96db0-134">If the <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A> property is `false`, the method also writes the error message to the console.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#8)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96db0-135">常に失敗するアサーションのメッセージとスタック トレースを出力または表示します。</span><span class="sxs-lookup"><span data-stu-id="96db0-135">Emits or displays a message and a stack trace for an assertion that always fails.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Fail : string -&gt; unit" Usage="defaultTraceListener.Fail message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="96db0-136">出力または表示するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="96db0-136">The message to emit or display.</span></span></param>
        <summary><span data-ttu-id="96db0-137">常に失敗するアサーションのメッセージとスタック トレースを出力または表示します。</span><span class="sxs-lookup"><span data-stu-id="96db0-137">Emits or displays a message and a stack trace for an assertion that always fails.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96db0-138">このメソッドは既定では、送信、`message`パラメーターとスタック トレース (する場合、アプリケーションは、ユーザー インターフェイス モードで実行) は、メッセージ ボックスに、<xref:System.Diagnostics.DefaultTraceListener>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="96db0-138">By default, this method sends the `message` parameter and a stack trace to a message box (when the application runs in user-interface mode) and to the <xref:System.Diagnostics.DefaultTraceListener> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96db0-139">次のコード例は、エラー メッセージを書き込みます、<xref:System.Diagnostics.DefaultTraceListener>を使用して、<xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="96db0-139">The following code example writes an error message to a <xref:System.Diagnostics.DefaultTraceListener> using the <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%29> method.</span></span> <span data-ttu-id="96db0-140">メソッドは、ユーザー インターフェイスが使用できない場合も、メッセージと、コンソールに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="96db0-140">The method also writes the message to the console if a user interface is not available.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#6)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="override this.Fail : string * string -&gt; unit" Usage="defaultTraceListener.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="96db0-141">出力または表示するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="96db0-141">The message to emit or display.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="96db0-142">出力または表示する詳細メッセージ。</span><span class="sxs-lookup"><span data-stu-id="96db0-142">The detailed message to emit or display.</span></span></param>
        <summary><span data-ttu-id="96db0-143">常に失敗するアサーションの詳細メッセージとスタック トレースを出力または表示します。</span><span class="sxs-lookup"><span data-stu-id="96db0-143">Emits or displays detailed messages and a stack trace for an assertion that always fails.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96db0-144">このメソッドは既定では、送信、`message`パラメーター、`detailMessage`パラメーター、およびスタック トレース (する場合、アプリケーションは、ユーザー インターフェイス モードで実行) は、メッセージ ボックスに、<xref:System.Diagnostics.DefaultTraceListener>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="96db0-144">By default, this method sends the `message` parameter, the `detailMessage` parameter, and a stack trace to a message box (when the application runs in user-interface mode) and to the <xref:System.Diagnostics.DefaultTraceListener> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96db0-145">次のコード例を呼び出す関数を呼び出し、<xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29>関数が例外をスローした場合、詳細なエラー メッセージを記録するメソッド。</span><span class="sxs-lookup"><span data-stu-id="96db0-145">The following code example calls a function that calls the <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> method to log a detailed error message if the function throws an exception.</span></span> <span data-ttu-id="96db0-146">メソッドは、ユーザー インターフェイスが使用できない場合に、コンソールにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="96db0-146">The method writes the message to the console if a user interface is not available.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#8)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="LogFileName">
      <MemberSignature Language="C#" Value="public string LogFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogFileName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DefaultTraceListener.LogFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LogFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LogFileName : string with get, set" Usage="System.Diagnostics.DefaultTraceListener.LogFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96db0-147">トレース メッセージまたはデバッグ メッセージを書き込むログ ファイルの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="96db0-147">Gets or sets the name of a log file to write trace or debug messages to.</span></span></summary>
        <value><span data-ttu-id="96db0-148">トレースまたはデバッグ メッセージを書き込むログ ファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="96db0-148">The name of a log file to write trace or debug messages to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="96db0-149">次のコード例を作成する新しい<xref:System.Diagnostics.DefaultTraceListener>に追加します、<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>コレクション、およびセット、<xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A>プロパティをコマンドライン引数で指定されたログ ファイル。</span><span class="sxs-lookup"><span data-stu-id="96db0-149">The following code example creates a new <xref:System.Diagnostics.DefaultTraceListener>, adds it to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection, and sets the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> property to the log file specified in the command-line arguments.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#4)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="defaultTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="96db0-150"><see langword="OutputDebugString" /> および <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> に書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="96db0-150">The message to write to <see langword="OutputDebugString" /> and <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</span></span></param>
        <summary><span data-ttu-id="96db0-151">出力を <see langword="OutputDebugString" /> 関数と <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> メソッドに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="96db0-151">Writes the output to the <see langword="OutputDebugString" /> function and to the <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96db0-152">については、Win32`OutputDebugString`関数のデバッグ、プラットフォーム SDK または MSDN で"OutputDebugString"を参照してください。</span><span class="sxs-lookup"><span data-stu-id="96db0-152">For information about the Win32 `OutputDebugString` debugging function, see "OutputDebugString" in the Platform SDK or MSDN.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96db0-153">次のコード例は、関数の結果を書式設定、使用して、<xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29>へのメッセージの最初の部分を記述するメソッド、<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="96db0-153">The following code example formats the results of a function and uses the <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> method to write the first part of the message to a <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/CS/defaulttracelistener.cs#4)]
 [!code-vb[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/VB/defaulttracelistener.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="defaultTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="96db0-154"><see langword="OutputDebugString" /> および <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> に書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="96db0-154">The message to write to <see langword="OutputDebugString" /> and <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</span></span></param>
        <summary><span data-ttu-id="96db0-155">出力を <see langword="OutputDebugString" /> 関数と <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> メソッドに書き込み、続けて復帰とライン フィード (\r\n) を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="96db0-155">Writes the output to the <see langword="OutputDebugString" /> function and to the <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> method, followed by a carriage return and line feed (\r\n).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96db0-156">既定の行終端記号は、キャリッジ リターンの次に改行が付いた形です (\r\n)。</span><span class="sxs-lookup"><span data-stu-id="96db0-156">The default line terminator is a carriage return followed by a line feed (\r\n).</span></span>  
  
 <span data-ttu-id="96db0-157">については、Win32`OutputDebugString`関数のデバッグ プラットフォーム SDK または MSDN を参照してください。</span><span class="sxs-lookup"><span data-stu-id="96db0-157">For information about the Win32 `OutputDebugString` debugging function, see the Platform SDK or MSDN.</span></span>  
  
 <span data-ttu-id="96db0-158">このメソッドは、設定、<xref:System.Diagnostics.TraceListener.NeedIndent%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="96db0-158">This method sets the <xref:System.Diagnostics.TraceListener.NeedIndent%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96db0-159">次のコード例は、関数の結果を書式設定、使用して、<xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29>へのメッセージの最後の部分を記述するメソッド、<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="96db0-159">The following code example formats the results of a function and uses the <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> method to write the last part of the message to a <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/CS/defaulttracelistener.cs#4)]
 [!code-vb[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/VB/defaulttracelistener.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
  </Members>
</Type>