<Type Name="EventLogInstaller" FullName="System.Diagnostics.EventLogInstaller">
  <Metadata><Meta Name="ms.openlocfilehash" Value="88596074c0bd24dd3f2dd67de13860ad50ec959d" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51902866" /></Metadata><TypeSignature Language="C#" Value="public class EventLogInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventLogInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLogInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type EventLogInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5b3b4-101">アプリケーションが実行時に読み書きするイベント ログをインストールおよび構成できます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-101">Allows you to install and configure an event log that your application reads from or writes to when running.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b3b4-102"><xref:System.Diagnostics.EventLogInstaller>を使って、 [Installutil.exe (インストーラー ツール)](~/docs/framework/tools/installutil-exe-installer-tool.md)イベント ログをインストールするときにします。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-102">The <xref:System.Diagnostics.EventLogInstaller> is used by the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) when installing an event log.</span></span> <span data-ttu-id="5b3b4-103"><xref:System.Diagnostics.EventLogInstaller>クラスがイベント ログをローカル コンピューター上でのみインストールできます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-103">The <xref:System.Diagnostics.EventLogInstaller> class can install event logs only on the local computer.</span></span>  
  
 <span data-ttu-id="5b3b4-104">使用して、<xref:System.Diagnostics.EventLogInstaller>クラスのアプリケーション イベント ログに書き込むときに、アプリケーションのイベント ログ インストーラーを使用して、イベント ログからの読み取りに必要なことはできません。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-104">Use the <xref:System.Diagnostics.EventLogInstaller> class when your application writes to an event log; it is not necessary to use an event log installer for your application to read from an event log.</span></span> <span data-ttu-id="5b3b4-105">アプリケーションとサービスは、アプリケーション ログまたはカスタムのログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-105">Applications and services should write to the Application log or a custom log.</span></span> <span data-ttu-id="5b3b4-106">デバイス ドライバーは、システム ログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-106">Device drivers should write to the System log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b3b4-107">セキュリティ ログとは、読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-107">The Security log is read-only.</span></span>  
  
 <span data-ttu-id="5b3b4-108">インストーラーで指定したイベント ソースを作成する、<xref:System.Diagnostics.EventLogInstaller.Source%2A>プロパティとで指定されたイベント ログのレジスタ<xref:System.Diagnostics.EventLogInstaller.Log%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-108">The installer creates the event source that you specify in the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property and registers it for the event log specified in <xref:System.Diagnostics.EventLogInstaller.Log%2A> property.</span></span> <span data-ttu-id="5b3b4-109">この動作は、呼び出しに似ています<xref:System.Diagnostics.EventLog.CreateEventSource%2A>上、<xref:System.Diagnostics.EventLog>コンポーネント。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-109">This behavior is similar to calling <xref:System.Diagnostics.EventLog.CreateEventSource%2A> on the <xref:System.Diagnostics.EventLog> component.</span></span>  
  
 <span data-ttu-id="5b3b4-110">使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>と<xref:System.Diagnostics.EventLog.WriteEntry%2A>メソッド、イベント ログにイベントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-110">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods to write events to an event log.</span></span> <span data-ttu-id="5b3b4-111">イベントを書き込むイベント ソースを指定する必要があります。作成し、ソースと最初のエントリを書き込む前に、イベント ソースを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-111">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="5b3b4-112">アプリケーションのインストール中に新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-112">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="5b3b4-113">これにより、登録済みのイベント ソースの一覧とその構成を更新するオペレーティング システムまでの時間です。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-113">This allows time for the operating system to refresh its list of registered event sources and their configurations.</span></span> <span data-ttu-id="5b3b4-114">オペレーティング システムでは、イベントのソースの一覧は更新されていない場合は、書き込み操作は失敗、新しいソースを持つイベントを記述しようとしました。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-114">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="5b3b4-115">使用して新しいソースを構成することができます、 <xref:System.Diagnostics.EventLogInstaller>、またはを使用して、<xref:System.Diagnostics.EventLog.CreateEventSource%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-115">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="5b3b4-116">新しいイベント ソースを作成するコンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-116">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="5b3b4-117">既存のイベント ログまたは新しいイベント ログのイベント ソースを作成することができます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-117">You can create an event source for an existing event log or a new event log.</span></span> <span data-ttu-id="5b3b4-118">新しいイベント ログの新しいソースを作成するときに、システムがそのログのソースを登録しますが、最初のエントリが書き込まれるまで、ログは作成されません。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-118">When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="5b3b4-119">継承されるプロジェクト インストーラー クラスを作成、イベント ログをインストールする<xref:System.Configuration.Install.Installer>、設定、 <xref:System.ComponentModel.RunInstallerAttribute> 、クラスに対する`true`します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-119">To install an event log, create a project installer class that inherits from <xref:System.Configuration.Install.Installer>, and set the <xref:System.ComponentModel.RunInstallerAttribute> for the class to `true`.</span></span> <span data-ttu-id="5b3b4-120">プロジェクト内に作成、<xref:System.Diagnostics.EventLogInstaller>の各イベント ログをアプリケーションはへの書き込みし、プロジェクト インストーラー クラスにインスタンスを追加します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-120">Within your project, create an <xref:System.Diagnostics.EventLogInstaller> for each event log that your application will write to and add the instance to your project installer class.</span></span>  
  
 <span data-ttu-id="5b3b4-121">ときに、 [Installutil.exe (インストーラー ツール)](~/docs/framework/tools/installutil-exe-installer-tool.md)が呼び出されると、検索、<xref:System.ComponentModel.RunInstallerAttribute>します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-121">When the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) is called, it looks at the <xref:System.ComponentModel.RunInstallerAttribute>.</span></span> <span data-ttu-id="5b3b4-122">場合は`true`、ツールのインストールのすべての項目、<xref:System.Configuration.Install.Installer.Installers%2A>プロジェクト インストーラーに関連付けられているコレクション。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-122">If it is `true`, the tool installs all the items in the <xref:System.Configuration.Install.Installer.Installers%2A> collection that are associated with your project installer.</span></span> <span data-ttu-id="5b3b4-123">場合<xref:System.ComponentModel.RunInstallerAttribute>は`false`、プロジェクト インストーラーが無視されます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-123">If <xref:System.ComponentModel.RunInstallerAttribute> is `false`, the tool ignores the project installer.</span></span>  
  
 <span data-ttu-id="5b3b4-124">他のプロパティを変更する、<xref:System.Diagnostics.EventLogInstaller>前に、または後にインスタンスを追加するか、<xref:System.Configuration.Install.Installer.Installers%2A>インストーラー ツールを実行する前に、プロジェクト インストーラーのコレクション。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-124">You modify other properties of an <xref:System.Diagnostics.EventLogInstaller> either before or after adding the instance to the <xref:System.Configuration.Install.Installer.Installers%2A> collection of your project installer, but before the installer tool runs.</span></span> <span data-ttu-id="5b3b4-125">設定する必要があります、<xref:System.Diagnostics.EventLogInstaller.Source%2A>プロパティの場合は、アプリケーションは、イベント ログに書き込む場合は。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-125">You must set the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property if your application will be writing to the event log.</span></span>  
  
 <span data-ttu-id="5b3b4-126">使用して、 <xref:System.Diagnostics.EventLogInstaller> ; 新規または既存のイベント ログの新しいソースを登録する使用しないでください<xref:System.Diagnostics.EventLogInstaller>を既存のソースを変更します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-126">Use <xref:System.Diagnostics.EventLogInstaller> to register a new source for a new or existing event log; do not use <xref:System.Diagnostics.EventLogInstaller> to change an existing source.</span></span> <span data-ttu-id="5b3b4-127"><xref:System.Diagnostics.EventLogInstaller>クラスは、指定したインストールのプロパティと一致する既存のソースの構成プロパティを変更しません。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-127">The <xref:System.Diagnostics.EventLogInstaller> class does not modify the configuration properties of an existing source to match the specified installation properties.</span></span> <span data-ttu-id="5b3b4-128"><xref:System.Diagnostics.EventLogInstaller.Install%2A>場合、メソッドが例外をスロー、<xref:System.Diagnostics.EventLogInstaller.Source%2A>コンピューター上のさまざまなイベント ログに登録されているソース名と一致するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-128">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method throws an exception if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is registered for a different event log on the computer.</span></span> <span data-ttu-id="5b3b4-129"><xref:System.Diagnostics.EventLogInstaller.Install%2A>メソッドが、ソースを登録していない場合、<xref:System.Diagnostics.EventLogInstaller.Source%2A>で指定された同じイベント ログに既に登録されているソース名と一致するプロパティ、<xref:System.Diagnostics.EventLogInstaller.Log%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-129">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method does not register the source if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is already registered for the same event log specified in the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property.</span></span>  
  
 <span data-ttu-id="5b3b4-130">イベント ソースは、イベント カテゴリ、メッセージ文字列のローカライズされたリソース ファイルを登録できます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-130">You can register the event source with localized resource files for your event category and message strings.</span></span> <span data-ttu-id="5b3b4-131">アプリケーションでは、実際の文字列を指定するのではなく、リソースの識別子を使用してイベント ログ エントリを書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-131">Your application can write event log entries using resource identifiers, rather than specifying the actual string.</span></span> <span data-ttu-id="5b3b4-132">イベント ビューアーでは、リソース識別子を使用して、検索し、現在の言語設定に基づいてローカライズされたリソース ファイルから、対応する文字列を表示します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-132">The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings.</span></span> <span data-ttu-id="5b3b4-133">イベント カテゴリ、メッセージ、およびパラメーターの挿入文字列に個別のファイルを登録する、または 3 つすべての種類の文字列に同じリソース ファイルを登録することができます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-133">You can register a separate file for event categories, messages, and parameter insertion strings, or you can register the same resource file for all three types of strings.</span></span> <span data-ttu-id="5b3b4-134">使用して、 <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A>、 <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>、 <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>、および<xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A>ローカライズされたエントリをイベント ログに書き込むソースを構成するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-134">Use the <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A>, <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>, <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>, and <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> properties to configure the source to write localized entries to the event log.</span></span> <span data-ttu-id="5b3b4-135">アプリケーションがイベント ログに直接文字列値を書き込む場合は、これらのプロパティを設定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-135">If your application writes strings values directly to the event log, you do not need to set these properties.</span></span>  
  
 <span data-ttu-id="5b3b4-136">ソースは、ローカライズされたエントリを書き込むか、または直接の文字列を書き込むように構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-136">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="5b3b4-137">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2 つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-137">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="5b3b4-138">たとえば、リソース ファイルでは、1 つのソースを構成およびでは、そのソースを使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッドをイベント ログのリソース識別子を使用してエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-138">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="5b3b4-139">リソース ファイルがない場合、別のソースを作成し、そのソースを使って、<xref:System.Diagnostics.EventLog.WriteEntry%2A>そのソースを使用して、イベント ログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-139">Create a different source without resource files and then use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
 <span data-ttu-id="5b3b4-140">通常、呼び出すことはありませんのメソッド、<xref:System.Diagnostics.EventLogInstaller>コード内からクラスは、一般に Installutil.exe によってのみ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-140">Typically, you do not call the methods of the <xref:System.Diagnostics.EventLogInstaller> class from within your code; they are generally called only by Installutil.exe.</span></span> <span data-ttu-id="5b3b4-141">ツールが自動的に呼び出し、<xref:System.Diagnostics.EventLogInstaller.Install%2A>インストール プロセス中にメソッド。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-141">The tool automatically calls the <xref:System.Diagnostics.EventLogInstaller.Install%2A> method during the installation process.</span></span> <span data-ttu-id="5b3b4-142">バックアップ実行の障害を必要に応じて、呼び出すことによって、<xref:System.Diagnostics.EventLogInstaller.Rollback%2A>の例外を生成したオブジェクトのメソッド。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-142">It backs out failures, if necessary, by calling the <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> method for the object that generated the exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b3b4-143">次のコード例では、新しいイベント ソースのインストールのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-143">The following code example sets the installation properties for a new event source.</span></span> <span data-ttu-id="5b3b4-144">コード例が、ソース名と、イベント ログ名を設定し、追加、<xref:System.Diagnostics.EventLogInstaller>を<xref:System.Configuration.Install.Installer.Installers%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-144">The code example sets the source name and the event log name, and adds the <xref:System.Diagnostics.EventLogInstaller> to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span>  
  
 [!code-cpp[EventLogInstaller#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogInstaller/CPP/eventloginstaller.cpp#1)]
 [!code-csharp[EventLogInstaller#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogInstaller/CS/eventloginstaller.cs#1)]
 [!code-vb[EventLogInstaller#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogInstaller/VB/eventloginstaller.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.EventLog" />
    <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
    <related type="Article" href="~/docs/framework/tools/installutil-exe-installer-tool.md"><span data-ttu-id="5b3b4-145">Installutil.exe (インストーラー ツール)</span><span class="sxs-lookup"><span data-stu-id="5b3b4-145">Installutil.exe (Installer Tool)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5b3b4-146"><see cref="T:System.Diagnostics.EventLogInstaller" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-146">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLogInstaller" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryCount">
      <MemberSignature Language="C#" Value="public int CategoryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CategoryCount" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CategoryCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryCount : int with get, set" Usage="System.Diagnostics.EventLogInstaller.CategoryCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b3b4-147">カテゴリ リソース ファイル内のカテゴリの数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-147">Gets or sets the number of categories in the category resource file.</span></span></summary>
        <value><span data-ttu-id="5b3b4-148">カテゴリ リソース ファイル内のカテゴリの数。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-148">The number of categories in the category resource file.</span></span> <span data-ttu-id="5b3b4-149">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-149">The default value is zero.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b3b4-150">使用して、<xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A>と<xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>でイベントを書き込むプロパティがカテゴリ文字列をローカライズします。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-150">Use the <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> and <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> properties to write events with localized category strings.</span></span> <span data-ttu-id="5b3b4-151">イベント ビューアーでは、イベントを記述するときに、カテゴリを指定した場合、イベント エントリのカテゴリが表示されます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-151">The Event Viewer displays the category for an event entry, if you supply a category when you write the event.</span></span> <span data-ttu-id="5b3b4-152">イベント ログのカテゴリは、イベントをフィルター、またはイベントに関する情報を提供するアプリケーション定義の文字列です。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-152">Event log categories are application-defined strings that help filter events, or provide information on an event.</span></span> <span data-ttu-id="5b3b4-153">たとえば、アプリケーションでは、異なるコンポーネントまたは操作ごとに個別のカテゴリを定義できます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-153">For example, your application can define separate categories for different components or different operations.</span></span>  
  
 <span data-ttu-id="5b3b4-154">イベントのカテゴリは省略可能です。アプリケーションではカテゴリを使用しない場合は設定しないで、<xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A>と<xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-154">Event categories are optional; if your application does not use categories, do not set the <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> and <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> properties.</span></span>  
  
 <span data-ttu-id="5b3b4-155">イベント メッセージを定義して、イベントのリソース ファイルの構築の詳細については、プラットフォーム SDK のドキュメントで「メッセージ コンパイラ」トピックを参照してください。 [ http://msdn.microsoft.com](https://msdn.microsoft.com/)します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-155">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](https://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b3b4-156">次のコード例では、新しいイベント ソースのインストールのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-156">The following code example sets the installation properties for a new event source.</span></span> <span data-ttu-id="5b3b4-157">コード例では、イベント ソース名、イベント ログ名、およびリソース ファイルのローカライズされたイベントのテキストを設定します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-157">The code example sets the event source name, event log name, and resource file for localized event text.</span></span>  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 <span data-ttu-id="5b3b4-158">コード例では、リソース ライブラリ EventLogMsgs.dll に組み込まれている次のメッセージ テキスト ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-158">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="5b3b4-159">メッセージのテキスト ファイルは、メッセージ リソース ファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-159">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="5b3b4-160">メッセージのテキスト ファイルでは、リソース識別子とカテゴリ、イベント メッセージ、およびパラメーターの挿入文字列のテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-160">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryCount" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="CategoryResourceFile">
      <MemberSignature Language="C#" Value="public string CategoryResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b3b4-161">ソースのカテゴリ文字列が格納されたリソース ファイルのパスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-161">Gets or sets the path of the resource file that contains category strings for the source.</span></span></summary>
        <value><span data-ttu-id="5b3b4-162">カテゴリ リソース ファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-162">The path of the category resource file.</span></span> <span data-ttu-id="5b3b4-163">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-163">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b3b4-164">使用して、<xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A>と<xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>でイベントを書き込むプロパティがカテゴリ文字列をローカライズします。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-164">Use the <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> and <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> properties to write events with localized category strings.</span></span> <span data-ttu-id="5b3b4-165">イベント ビューアーでは、イベントを記述するときに、カテゴリを指定する場合、イベント エントリのカテゴリが表示されます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-165">The Event Viewer displays the category for an event entry if you supply a category when you write the event.</span></span> <span data-ttu-id="5b3b4-166">イベント ログのカテゴリは、イベントをフィルター、またはイベントに関する情報を提供するアプリケーション定義の文字列です。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-166">Event log categories are application-defined strings that help filter events, or provide information about an event.</span></span> <span data-ttu-id="5b3b4-167">たとえば、アプリケーションでは、異なるコンポーネントまたは操作ごとに個別のカテゴリがあります。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-167">For example, your application might have separate categories for different components or different operations.</span></span>  
  
 <span data-ttu-id="5b3b4-168">イベントのカテゴリは省略可能です。アプリケーションではカテゴリを使用しない場合は設定しないで、<xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A>と<xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-168">Event categories are optional; if your application does not use categories, do not set the <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> and <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> properties.</span></span>  
  
 <span data-ttu-id="5b3b4-169">イベント メッセージを定義して、イベントのリソース ファイルの構築の詳細については、プラットフォーム SDK のドキュメントで「メッセージ コンパイラ」トピックを参照してください。 [ http://msdn.microsoft.com](https://msdn.microsoft.com/)します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-169">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](https://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b3b4-170">次のコード例では、新しいイベント ソースのインストールのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-170">The following code example sets the installation properties for a new event source.</span></span> <span data-ttu-id="5b3b4-171">コード例では、イベント ソース名、イベント ログ名、およびリソース ファイルのローカライズされたイベントのテキストを設定します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-171">The code example sets the event source name, event log name, and resource file for localized event text.</span></span>  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 <span data-ttu-id="5b3b4-172">コード例では、リソース ライブラリ EventLogMsgs.dll に組み込まれている次のメッセージ テキスト ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-172">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="5b3b4-173">メッセージのテキスト ファイルは、メッセージ リソース ファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-173">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="5b3b4-174">メッセージのテキスト ファイルでは、リソース識別子とカテゴリ、イベント メッセージ、およびパラメーターの挿入文字列のテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-174">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="eventLogInstaller.CopyFromComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="5b3b4-175"><see cref="T:System.ComponentModel.IComponent" /> にテンプレートとして使用する <see cref="T:System.Diagnostics.EventLogInstaller" />。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-175">An <see cref="T:System.ComponentModel.IComponent" /> to use as a template for the <see cref="T:System.Diagnostics.EventLogInstaller" />.</span></span></param>
        <summary><span data-ttu-id="5b3b4-176">インストール時に必要な <see cref="T:System.Diagnostics.EventLog" /> コンポーネントのプロパティ値をイベント ログにコピーします。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-176">Copies the property values of an <see cref="T:System.Diagnostics.EventLog" /> component that are required at installation time for an event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b3b4-177">によって指定されたコンポーネント、`component`パラメーターである必要があります、 <xref:System.Diagnostics.EventLog>。 そうしないと、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-177">The component specified by the `component` parameter must be an <xref:System.Diagnostics.EventLog>; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="5b3b4-178">通常、呼び出すことはありませんのメソッド、<xref:System.Diagnostics.EventLogInstaller>からは、コード内で一般的に呼び出されるだけで、 [Installutil.exe (インストーラー ツール)](~/docs/framework/tools/installutil-exe-installer-tool.md)します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-178">Typically, you do not call the methods of the <xref:System.Diagnostics.EventLogInstaller> from within your code; they are generally called only by the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md).</span></span> <span data-ttu-id="5b3b4-179"><xref:System.Diagnostics.EventLogInstaller.CopyFromComponent%2A> Installutil.exe でのプロパティ値を設定するため、 <xref:System.Diagnostics.EventLogInstaller> 、既存の値に<xref:System.Diagnostics.EventLog>します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-179"><xref:System.Diagnostics.EventLogInstaller.CopyFromComponent%2A> is used by Installutil.exe to set the property values for the <xref:System.Diagnostics.EventLogInstaller> to the values of an existing <xref:System.Diagnostics.EventLog>.</span></span>  
  
 <span data-ttu-id="5b3b4-180">場合、<xref:System.Diagnostics.EventLog.Log%2A>の<xref:System.Diagnostics.EventLog>は空の文字列は、渡された ("") を設定する必要があります、<xref:System.Diagnostics.EventLog.Log%2A>インストーラーが実行される前に有効な値にプロパティ。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-180">If the <xref:System.Diagnostics.EventLog.Log%2A> of the <xref:System.Diagnostics.EventLog> that is passed in is an empty string (""), you must set the <xref:System.Diagnostics.EventLog.Log%2A> property to a valid value before the installer executes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5b3b4-181">指定したコンポーネントが <see cref="T:System.Diagnostics.EventLog" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-181">The specified component is not an <see cref="T:System.Diagnostics.EventLog" />.</span></span>  
  
<span data-ttu-id="5b3b4-182">- または -</span><span class="sxs-lookup"><span data-stu-id="5b3b4-182">-or-</span></span> 
<span data-ttu-id="5b3b4-183">指定したコンポーネントの <see cref="P:System.Diagnostics.EventLog.Log" /> プロパティまたは <see cref="P:System.Diagnostics.EventLog.Source" /> プロパティが <see langword="null" /> または空です。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-183">The <see cref="P:System.Diagnostics.EventLog.Log" /> or <see cref="P:System.Diagnostics.EventLog.Source" /> property of the specified component is either <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver"><span data-ttu-id="5b3b4-184">ロールバックまたはアンインストール操作を実行するために必要な情報を保存するために使用する <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-184">An <see cref="T:System.Collections.IDictionary" /> used to save information needed to perform a rollback or uninstall operation.</span></span></param>
        <summary><span data-ttu-id="5b3b4-185">インストールを実行し、レジストリにイベント ログ情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-185">Performs the installation and writes event log information to the registry.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b3b4-186"><xref:System.Diagnostics.EventLogInstaller.Install%2A>メソッドがイベント ログ情報をレジストリに書き込むしで指定されているログにイベント ログを関連付けます、<xref:System.Diagnostics.EventLogInstaller.Log%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-186">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method writes event log information to the registry, and associates the event log with a log that is specified by the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property.</span></span> <span data-ttu-id="5b3b4-187">ログが存在しない (および、ソースが指定された) 場合<xref:System.Diagnostics.EventLogInstaller.Install%2A>ログを作成し、新しいソースを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-187">If the log does not already exist (and a source is specified), <xref:System.Diagnostics.EventLogInstaller.Install%2A> creates a log and associates the new source with it.</span></span>  
  
 <span data-ttu-id="5b3b4-188">通常、呼び出すことはありませんのメソッド、<xref:System.Diagnostics.EventLogInstaller>からは、コード内で一般的に呼び出されるだけで、 [Installutil.exe (インストーラー ツール)](~/docs/framework/tools/installutil-exe-installer-tool.md)します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-188">Typically, you do not call the methods of the <xref:System.Diagnostics.EventLogInstaller> from within your code; they are generally called only by the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md).</span></span> <span data-ttu-id="5b3b4-189">ツールが自動的に呼び出し、<xref:System.Diagnostics.EventLogInstaller.Install%2A>インストールされているイベント ログに関連付けられている情報をレジストリに書き込むインストール プロセス中にメソッド。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-189">The tool automatically calls the <xref:System.Diagnostics.EventLogInstaller.Install%2A> method during the installation process to write registry information that is associated with the event log being installed.</span></span> <span data-ttu-id="5b3b4-190">インストールはトランザクション キューですので、障害が発生したインストール プロジェクト コンポーネントのインストール中に、以前にインストールされているすべてのコンポーネントはロールバックをインストール前の状態にします。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-190">Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously-installed components are rolled back to their pre-installation states.</span></span> <span data-ttu-id="5b3b4-191">これは、各コンポーネントを呼び出すことによって実現<xref:System.Diagnostics.EventLogInstaller.Rollback%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-191">This is accomplished by calling each component's <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> method.</span></span>  
  
 <span data-ttu-id="5b3b4-192">使用して、 <xref:System.Diagnostics.EventLogInstaller> ; 新規または既存のイベント ログの新しいソースを登録する使用しないでください<xref:System.Diagnostics.EventLogInstaller>を既存のソースを変更します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-192">Use <xref:System.Diagnostics.EventLogInstaller> to register a new source for a new or existing event log; do not use <xref:System.Diagnostics.EventLogInstaller> to change an existing source.</span></span> <span data-ttu-id="5b3b4-193"><xref:System.Diagnostics.EventLogInstaller>クラスは、指定したインストールのプロパティと一致する既存のソースの構成プロパティを変更しません。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-193">The <xref:System.Diagnostics.EventLogInstaller> class does not modify the configuration properties of an existing source to match the specified installation properties.</span></span> <span data-ttu-id="5b3b4-194"><xref:System.Diagnostics.EventLogInstaller.Install%2A>場合、メソッドが例外をスロー、<xref:System.Diagnostics.EventLogInstaller.Source%2A>コンピューター上のさまざまなイベント ログに登録されているソース名と一致するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-194">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method throws an exception if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is registered for a different event log on the computer.</span></span> <span data-ttu-id="5b3b4-195"><xref:System.Diagnostics.EventLogInstaller.Install%2A>メソッドで場合、ソースの登録をスキップ、<xref:System.Diagnostics.EventLogInstaller.Source%2A>で指定された同じイベント ログに既に登録されているソース名と一致するプロパティ、<xref:System.Diagnostics.EventLogInstaller.Log%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-195">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method skips registering the source if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is already registered for the same event log specified in the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property.</span></span>  
  
 <span data-ttu-id="5b3b4-196">アプリケーションのインストールに使用して、プロジェクト インストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>プロパティが既にインストールされているコンポーネントに関する情報を自動的に維持します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-196">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> property to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="5b3b4-197">渡される状態情報を取得するにはこの<xref:System.Diagnostics.EventLogInstaller.Install%2A>として、`stateSaver`パラメーターは継続的に各ツールをインストールするように更新<xref:System.Diagnostics.EventLogInstaller>します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-197">This state information, which is passed to <xref:System.Diagnostics.EventLogInstaller.Install%2A> as the `stateSaver` parameter, is continuously updated as the tool installs each <xref:System.Diagnostics.EventLogInstaller>.</span></span> <span data-ttu-id="5b3b4-198">通常、この状態情報を明示的に変更するコードの必要はありません。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-198">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="5b3b4-199">インストーラーが使用しようとしているプラットフォームが Windows NT 4.0 以降ではありません。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-199">The platform the installer is trying to use is not Windows NT 4.0 or later.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5b3b4-200"><see cref="P:System.Diagnostics.EventLogInstaller.Source" /> プロパティに指定された名前は、別のイベント ログに既に登録されています。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-200">The name specified in the <see cref="P:System.Diagnostics.EventLogInstaller.Source" /> property is already registered for a different event log.</span></span></exception>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberSignature Language="F#" Value="override this.IsEquivalentInstaller : System.Configuration.Install.ComponentInstaller -&gt; bool" Usage="eventLogInstaller.IsEquivalentInstaller otherInstaller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller"><span data-ttu-id="5b3b4-201">比較対象のインストーラー。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-201">The installer to compare.</span></span></param>
        <summary><span data-ttu-id="5b3b4-202">インストーラーが指定した別のインストーラーと同じソースを参照しているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-202">Determines whether an installer and another specified installer refer to the same source.</span></span></summary>
        <returns><span data-ttu-id="5b3b4-203">対象となるインストーラーと <paramref name="otherInstaller" /> パラメーターで指定されたインストーラーが同じソースをインストールまたはアンインストールする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-203"><see langword="true" /> if this installer and the installer specified by the <paramref name="otherInstaller" /> parameter would install or uninstall the same source; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b3b4-204">通常、呼び出すことはありませんのメソッド、<xref:System.Diagnostics.EventLogInstaller>からは、コード内で一般的に呼び出されるインストーラー ツール (Installutil.exe) によってのみです。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-204">Typically, you do not call the methods of the <xref:System.Diagnostics.EventLogInstaller> from within your code; they are generally called only by the Installer tool (Installutil.exe).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public string Log { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Log" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.Log" />
      <MemberSignature Language="VB.NET" Value="Public Property Log As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Log { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Log : string with get, set" Usage="System.Diagnostics.EventLogInstaller.Log" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b3b4-205">ソースを設定するログの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-205">Gets or sets the name of the log to set the source to.</span></span></summary>
        <value><span data-ttu-id="5b3b4-206">ログの名前。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-206">The name of the log.</span></span> <span data-ttu-id="5b3b4-207">ログ名には、アプリケーション ログ名、システム ログ名、またはカスタム ログ名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-207">This can be Application, System, or a custom log name.</span></span> <span data-ttu-id="5b3b4-208">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-208">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b3b4-209">使用することができます、<xref:System.Diagnostics.EventLogInstaller.Log%2A>プロパティで指定したソースを関連付ける、<xref:System.Diagnostics.EventLogInstaller.Source%2A>プロパティ、既存のログまたはローカル コンピューターの新しいログ。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-209">You can use the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property to associate the source you specify in the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property with either an existing log or a new log on the local computer.</span></span> <span data-ttu-id="5b3b4-210">[Installutil.exe (インストーラー ツール)](~/docs/framework/tools/installutil-exe-installer-tool.md)この情報を使用して、ソース コンピューターのレジストリのログインをマップします。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-210">The [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) uses this information to map the source to the log in the computer's registry.</span></span> <span data-ttu-id="5b3b4-211">アプリケーションとサービスは、アプリケーション ログまたはカスタムのログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-211">Applications and services should write to the Application log or a custom log.</span></span> <span data-ttu-id="5b3b4-212">デバイス ドライバーは、システム ログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-212">Device drivers should write to the System log.</span></span>  
  
 <span data-ttu-id="5b3b4-213">エントリをイベント ログに書き込むには、ソースを作成して、イベント ログに登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-213">To write entries to an event log, you must create a source and register it with an event log.</span></span> <span data-ttu-id="5b3b4-214">イベント ソースは、一度に 1 つのログに書き込むだけことができます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-214">An event source can only write to one log at a time.</span></span> <span data-ttu-id="5b3b4-215">インストーラーの値を使用して、<xref:System.Diagnostics.EventLogInstaller.Source%2A>プロパティ エントリの有効なソースとしてイベント ログとアプリケーションを登録します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-215">The installer uses the value of the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property to register your application with the event log as a valid source of entries.</span></span> <span data-ttu-id="5b3b4-216">インストーラーを実行する前にログの名前を指定しない場合、インストーラーはアプリケーション ログに、ソースを登録します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-216">If you do not specify a log name before the installer runs, the installer registers your source to the Application log.</span></span> <span data-ttu-id="5b3b4-217">新しいソースと既存のログを指定する場合、インストーラーは新しいイベント ソースを作成し、ログを指定すると関連付けます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-217">If you specify a new source and an existing log, the installer creates a new event source and associates it with the log you specify.</span></span> <span data-ttu-id="5b3b4-218">新しいソースと新しいログの両方を指定する場合は、インストーラーがレジストリで、新しいログを新しいソースを関連付けますが、最初のエントリが書き込まれるまで、ログは作成されません。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-218">If you specify both a new source and a new log, the installer associates the new source with the new log in the registry, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="5b3b4-219">オペレーティング システムは、イベント ログをファイルとして格納します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-219">The operating system stores event logs as files.</span></span> <span data-ttu-id="5b3b4-220">使用すると<xref:System.Diagnostics.EventLogInstaller>または<xref:System.Diagnostics.EventLog.CreateEventSource%2A>新しいイベント ログでは、関連付けられているファイルを作成する方法は、指定したコンピューター上の %SystemRoot%\System32\Config ディレクトリに格納されます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-220">When you use <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</span></span> <span data-ttu-id="5b3b4-221">最初の 8 文字を付加して、ファイル名が設定されて、 <xref:System.Diagnostics.EventLogInstaller.Log%2A> ".evt"ファイル名拡張子を持つプロパティです。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-221">The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property with the ".evt" file name extension.</span></span>  
  
 <span data-ttu-id="5b3b4-222">使用して、 <xref:System.Diagnostics.EventLogInstaller> ; 新規または既存のイベント ログの新しいソースを登録する使用しないでください<xref:System.Diagnostics.EventLogInstaller>を既存のソースを変更します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-222">Use <xref:System.Diagnostics.EventLogInstaller> to register a new source for a new or existing event log; do not use <xref:System.Diagnostics.EventLogInstaller> to change an existing source.</span></span> <span data-ttu-id="5b3b4-223"><xref:System.Diagnostics.EventLogInstaller>クラスは、指定したインストールのプロパティと一致する既存のソースの構成プロパティを変更しません。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-223">The <xref:System.Diagnostics.EventLogInstaller> class does not modify the configuration properties of an existing source to match the specified installation properties.</span></span> <span data-ttu-id="5b3b4-224"><xref:System.Diagnostics.EventLogInstaller.Install%2A>場合、メソッドが例外をスロー、<xref:System.Diagnostics.EventLogInstaller.Source%2A>コンピューター上のさまざまなイベント ログに登録されているソース名と一致するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-224">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method throws an exception if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is registered for a different event log on the computer.</span></span> <span data-ttu-id="5b3b4-225"><xref:System.Diagnostics.EventLogInstaller.Install%2A>メソッドが、ソースを登録していない場合、<xref:System.Diagnostics.EventLogInstaller.Source%2A>で指定された同じイベント ログに既に登録されているソース名と一致するプロパティ、<xref:System.Diagnostics.EventLogInstaller.Log%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-225">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method does not register the source if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is already registered for the same event log specified in the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property.</span></span>  
  
 <span data-ttu-id="5b3b4-226">イベント ログとソースの動作に関する情報の詳細を参照してください、<xref:System.Diagnostics.EventLog>クラスのドキュメント、<xref:System.Diagnostics.EventLog.Log%2A>と<xref:System.Diagnostics.EventLog.Source%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-226">For more detailed information about the behaviors of event logs and sources, see the <xref:System.Diagnostics.EventLog> class documentation for the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.Source%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="T:System.Diagnostics.EventLog" />
      </Docs>
    </Member>
    <Member MemberName="MessageResourceFile">
      <MemberSignature Language="C#" Value="public string MessageResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MessageResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessageResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b3b4-227">ソースのメッセージ書式指定文字列が格納されたリソース ファイルのパスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-227">Gets or sets the path of the resource file that contains message formatting strings for the source.</span></span></summary>
        <value><span data-ttu-id="5b3b4-228">メッセージ リソース ファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-228">The path of the message resource file.</span></span> <span data-ttu-id="5b3b4-229">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-229">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b3b4-230">使用して、<xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>ローカライズされたイベント メッセージを書き込むイベント ログ ソースを構成するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-230">Use the <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> property to configure an event log source to write localized event messages.</span></span> <span data-ttu-id="5b3b4-231">イベント メッセージは、ユーザーにイベントを記述するアプリケーション定義の文字列です。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-231">Event messages are application-defined strings that describe the event to the user.</span></span>  
  
 <span data-ttu-id="5b3b4-232">アプリケーションでは、リソース識別子を使用してイベント ログ エントリを書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-232">Your application can write event log entries using resource identifiers.</span></span> <span data-ttu-id="5b3b4-233">リソース識別子であるメッセージのインデックスを作成、<xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-233">A resource identifier indexes a message located in the <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>.</span></span> <span data-ttu-id="5b3b4-234">イベント ビューアーでは、リソース識別子を使用して、検索し、現在の言語設定に基づいてローカライズされたリソース ファイルから、対応する文字列を表示します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-234">The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings.</span></span>  
  
 <span data-ttu-id="5b3b4-235">イベント ソースは、ローカライズされたエントリを書き込むか、または直接の文字列を書き込むように構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-235">The event source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="5b3b4-236">使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メッセージ リソース ファイルで構成されているソースのローカライズされたエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-236">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write localized entries for a source configured with a message resource file.</span></span>  
  
 <span data-ttu-id="5b3b4-237">書き込み中の場合、アプリケーション イベント メッセージ文字列を直接リソース識別子を使用して、ローカライズされたリソース ファイル内ではなくは設定しないでください、<xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-237">If your application writes event message strings directly, rather than using a resource identifier in a localized resource file, do not set the <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> property.</span></span>  
  
 <span data-ttu-id="5b3b4-238">場合、<xref:System.Diagnostics.EventLog.MachineName%2A>プロパティは、ローカル コンピューターの識別子 (".")、.NET Framework では、リモート コンピューター上のリソース ファイルが前提としています。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-238">If the <xref:System.Diagnostics.EventLog.MachineName%2A> property is not the local computer identifier ("."), the .NET Framework assumes that the resource file is on a remote computer.</span></span> <span data-ttu-id="5b3b4-239">場合、<xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>プロパティの値には、ドライブ文字が含まれています、リソース ファイルは上にあると見なされます、 \\ \\< machinename\>\\< ドライブ\>$ 共有 (たとえば、 \\\server。\c$)。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-239">If the <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> property value contains a drive letter, the resource file is assumed to be on the \\\\<machinename\>\\<drive\>$ share (for example, \\\server\c$).</span></span> <span data-ttu-id="5b3b4-240">リソース ファイルが上に存在すると見なされますが、値に文字列の %systemroot% が含まれている場合、 \\ \\< machinename\>\admin$ 共有 (たとえば、 \\\server\admin$)。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-240">If the value contains the string %systemroot%, the resource file is assumed to be on the \\\\<machinename\>\admin$ share (for example, \\\server\admin$).</span></span>  
  
 <span data-ttu-id="5b3b4-241">イベント メッセージを定義して、イベントのリソース ファイルの構築の詳細については、プラットフォーム SDK のドキュメントで「メッセージ コンパイラ」トピックを参照してください。 [ http://msdn.microsoft.com](https://msdn.microsoft.com/)します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-241">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](https://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b3b4-242">次のコード例では、新しいイベント ソースのインストールのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-242">The following code example sets the installation properties for a new event source.</span></span> <span data-ttu-id="5b3b4-243">コード例では、イベント ソース名、イベント ログ名、およびリソース ファイルのローカライズされたイベントのテキストを設定します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-243">The code example sets the event source name, event log name, and resource file for localized event text.</span></span>  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 <span data-ttu-id="5b3b4-244">コード例では、リソース ライブラリ EventLogMsgs.dll に組み込まれている次のメッセージ テキスト ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-244">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="5b3b4-245">メッセージのテキスト ファイルは、メッセージ リソース ファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-245">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="5b3b4-246">メッセージのテキスト ファイルでは、リソース識別子とカテゴリ、イベント メッセージ、およびパラメーターの挿入文字列のテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-246">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="ParameterResourceFile">
      <MemberSignature Language="C#" Value="public string ParameterResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.ParameterResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.ParameterResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b3b4-247">ソースのメッセージ パラメーター文字列が格納されたリソース ファイルのパスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-247">Gets or sets the path of the resource file that contains message parameter strings for the source.</span></span></summary>
        <value><span data-ttu-id="5b3b4-248">メッセージ パラメーター リソース ファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-248">The path of the message parameter resource file.</span></span> <span data-ttu-id="5b3b4-249">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-249">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b3b4-250">使用して、<xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A>でローカライズされたイベント メッセージを書き込むイベント ログ ソースを構成するプロパティがパラメーター文字列を挿入します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-250">Use the <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> property to configure an event log source to write localized event messages with inserted parameter strings.</span></span> <span data-ttu-id="5b3b4-251">指定された各ローカライズされたイベント メッセージ、<xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>プロパティは、挿入文字列のプレース ホルダーを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-251">Each localized event message specified in the <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> property can contain placeholders for insertion strings.</span></span> <span data-ttu-id="5b3b4-252">これらのプレース ホルダーを使用して、位置とイベント メッセージ内の言語に依存しない文字列のリソース識別子を指定します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-252">These placeholders are used to specify the position and resource identifier for a language-independent string within the event message.</span></span> <span data-ttu-id="5b3b4-253">イベント ビューアーでは、プレース ホルダーを置き換えますから対応する文字列を使用した、<xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A>ローカライズされたイベント エントリのイベント ログ メッセージの形式。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-253">The Event Viewer replaces the placeholders with the corresponding strings from the <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> and formats the event log message for the localized event entry.</span></span>  
  
 <span data-ttu-id="5b3b4-254">たとえば、メッセージのテキスト ファイルの次のセクションでは、パラメーター プレース ホルダーを含む文字列を定義します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-254">For example, the following section of a message text file defines a string with a parameter placeholder:</span></span>  
  
```  
  
MessageId = 1501  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_STARTING  
Language=English  
Component %%6050 is starting.  
.  
```  
  
 <span data-ttu-id="5b3b4-255">パラメーター リソース ファイル内では次に示すように挿入文字列のプレース ホルダーに対応するリソース識別子で定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-255">Within the parameter resource file, the insertion string must be defined with the resource identifier that corresponds to the placeholder, as shown below:</span></span>  
  
```  
MessageId = 6050  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_NAME_MSGID  
Language=English  
TRIGGER.EXE  
.  
```  
  
 <span data-ttu-id="5b3b4-256">イベント ソースは、ローカライズされたエントリを書き込むか、または直接の文字列を書き込むように構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-256">The event source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="5b3b4-257">使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メッセージ リソース ファイルで構成されているソースのローカライズされたエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-257">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write localized entries for a source configured with a message resource file.</span></span>  
  
 <span data-ttu-id="5b3b4-258">アプリケーションが、イベント ログに直接イベント メッセージ文字列を書き込む場合、または場合、<xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>メッセージが含まれていないパラメーターの挿入のプレース ホルダーで設定しないでください、<xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-258">If your application writes event message strings directly to the event log, or if your <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> does not contain messages with parameter insertion placeholders, do not set the <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> property.</span></span>  
  
 <span data-ttu-id="5b3b4-259">イベント メッセージを定義して、イベントのリソース ファイルの構築の詳細については、プラットフォーム SDK のドキュメントで「メッセージ コンパイラ」トピックを参照してください。 [ http://msdn.microsoft.com](https://msdn.microsoft.com/)します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-259">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](https://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b3b4-260">次のコード例では、新しいイベント ソースのインストールのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-260">The following code example sets the installation properties for a new event source.</span></span> <span data-ttu-id="5b3b4-261">コード例では、イベント ソース名、イベント ログ名、およびリソース ファイルのローカライズされたイベントのテキストを設定します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-261">The code example sets the event source name, event log name, and resource file for localized event text.</span></span>  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 <span data-ttu-id="5b3b4-262">コード例では、リソース ライブラリ EventLogMsgs.dll に組み込まれている次のメッセージ テキスト ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-262">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="5b3b4-263">メッセージのテキスト ファイルは、メッセージ リソース ファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-263">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="5b3b4-264">メッセージのテキスト ファイルでは、リソース識別子とカテゴリ、イベント メッセージ、およびパラメーターの挿入文字列のテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-264">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span> <span data-ttu-id="5b3b4-265">具体的には、リソース id 1004 に対して定義されているメッセージは、リソース識別子 5002 に対して定義されたパラメーター文字列のプレース ホルダーを使用します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-265">Specifically, the message defined for resource identifier 1004 uses a placeholder for a parameter string defined for resource identifier 5002.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="5b3b4-266">インストール前のコンピューターの状態を格納している <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-266">An <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer.</span></span></param>
        <summary><span data-ttu-id="5b3b4-267">インストール プロシージャがレジストリに書き込んだイベント ログ情報をロールバックして、コンピューターをインストール前の状態に復元します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-267">Restores the computer to the state it was in before the installation by rolling back the event log information that the installation procedure wrote to the registry.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b3b4-268"><xref:System.Diagnostics.EventLogInstaller.Rollback%2A>メソッドの効果を元に戻します、<xref:System.Diagnostics.EventLogInstaller.Install%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-268">The <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> method undoes the effects of the <xref:System.Diagnostics.EventLogInstaller.Install%2A> method.</span></span> <span data-ttu-id="5b3b4-269"><xref:System.Diagnostics.EventLogInstaller.Rollback%2A> インストールのプロジェクト内の任意コンポーネントのインストールが失敗した場合が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-269"><xref:System.Diagnostics.EventLogInstaller.Rollback%2A> is called if the installation of any component in the installation project fails.</span></span> <span data-ttu-id="5b3b4-270"><xref:System.Diagnostics.EventLogInstaller.Install%2A>メソッド作成するか、イベント ログとイベント ソースのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-270">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method creates or sets the properties for an event log and event source.</span></span> <span data-ttu-id="5b3b4-271"><xref:System.Diagnostics.EventLogInstaller.Rollback%2A> イベント ログとソースを削除しますか、既存のソースのプロパティをインストール前の値にリセットします。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-271"><xref:System.Diagnostics.EventLogInstaller.Rollback%2A> either deletes the event log and source or resets the properties of a pre-existing source to its pre-installation values.</span></span>  
  
 <span data-ttu-id="5b3b4-272">通常、呼び出すことはありませんのメソッド、<xref:System.Diagnostics.EventLogInstaller>からは、コード内で一般的に呼び出されるだけで、 [Installutil.exe (インストーラー ツール)](~/docs/framework/tools/installutil-exe-installer-tool.md)します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-272">Typically, you do not call the methods of the <xref:System.Diagnostics.EventLogInstaller> from within your code; they are generally called only by the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md).</span></span> <span data-ttu-id="5b3b4-273">ツールの呼び出し、<xref:System.Diagnostics.EventLogInstaller.Rollback%2A>メソッドは、インストール プロセスが既に行った変更を元に戻すをインストールする同じまたは別のコンポーネントが失敗したとします。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-273">The tool calls the <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> method, when this or another component has failed to install, to undo any changes that the installation process has already made.</span></span>  
  
 <span data-ttu-id="5b3b4-274">アプリケーションのインストールに使用して、プロジェクト インストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>プロパティが既にインストールされているコンポーネントに関する情報を自動的に維持します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-274">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> property to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="5b3b4-275">渡される状態情報を取得するにはこの<xref:System.Diagnostics.EventLogInstaller.Rollback%2A>として、`savedState`ツールが順番に継続的に、パラメーターが更新の各バックアップ<xref:System.Diagnostics.EventLogInstaller>します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-275">This state information, which is passed to <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> as the `savedState` parameter, is continuously updated as the tool rolls back each <xref:System.Diagnostics.EventLogInstaller>.</span></span> <span data-ttu-id="5b3b4-276">通常、この状態情報を明示的に変更するコードの必要はありません。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-276">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="System.Diagnostics.EventLogInstaller.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b3b4-277">ログに登録するソース名を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-277">Gets or sets the source name to register with the log.</span></span></summary>
        <value><span data-ttu-id="5b3b4-278">エントリのソースとしてイベント ログに登録する名前。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-278">The name to register with the event log as a source of entries.</span></span> <span data-ttu-id="5b3b4-279">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-279">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b3b4-280">イベント ソースは、ログのイベントを示します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-280">The event source indicates what logs the event.</span></span> <span data-ttu-id="5b3b4-281">アプリケーションの名前またはアプリケーションが大規模なコンポーネントの名前で多くの場合は。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-281">It is often the name of the application, or the name of a component within a large application.</span></span>  
  
 <span data-ttu-id="5b3b4-282">インストーラーの値を使用して、<xref:System.Diagnostics.EventLogInstaller.Source%2A>プロパティ エントリの有効なソースとしてイベント ログとアプリケーションを登録します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-282">The installer uses the value of the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property to register your application with the event log as a valid source of entries.</span></span> <span data-ttu-id="5b3b4-283">新しいソース名には、既存のソース名または既存のイベント ログ名を一致ことはできません。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-283">A new source name cannot match an existing source name or an existing event log name.</span></span> <span data-ttu-id="5b3b4-284">同時に、各ソースは 1 つのイベント ログに書き込むだけできます。ただし、アプリケーションでは、複数のソースを使用して、複数のイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-284">Each source can only write to one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="5b3b4-285">たとえば、アプリケーションでは、別のイベント ログまたは別のリソース ファイル用に構成された複数のソースを必要があります。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-285">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span>  
  
 <span data-ttu-id="5b3b4-286">アプリケーションとサービスは、アプリケーション ログまたはカスタムのログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-286">Applications and services should write to the Application log or a custom log.</span></span> <span data-ttu-id="5b3b4-287">デバイス ドライバーは、システム ログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-287">Device drivers should write to the System log.</span></span> <span data-ttu-id="5b3b4-288">インストーラーを実行する前にログの名前を指定しない場合、インストーラーはアプリケーション ログに、ソースを登録します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-288">If you do not specify a log name before the installer runs, the installer registers your source to the Application log.</span></span> <span data-ttu-id="5b3b4-289">システムに登録されていないログの名前を指定する場合、<xref:System.Diagnostics.EventLogInstaller.Source%2A>ログが最初のエントリが書き込まれるまで、ログは作成されません。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-289">If you specify the name of a log that does not exist, the system registers the <xref:System.Diagnostics.EventLogInstaller.Source%2A> to that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="5b3b4-290">使用して、 <xref:System.Diagnostics.EventLogInstaller> ; 新規または既存のイベント ログの新しいソースを登録する使用しないでください<xref:System.Diagnostics.EventLogInstaller>を既存のソースを変更します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-290">Use <xref:System.Diagnostics.EventLogInstaller> to register a new source for a new or existing event log; do not use <xref:System.Diagnostics.EventLogInstaller> to change an existing source.</span></span> <span data-ttu-id="5b3b4-291"><xref:System.Diagnostics.EventLogInstaller>クラスは、指定したインストールのプロパティと一致する既存のソースの構成プロパティを変更しません。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-291">The <xref:System.Diagnostics.EventLogInstaller> class does not modify the configuration properties of an existing source to match the specified installation properties.</span></span> <span data-ttu-id="5b3b4-292"><xref:System.Diagnostics.EventLogInstaller.Install%2A>場合、メソッドが例外をスロー、<xref:System.Diagnostics.EventLogInstaller.Source%2A>コンピューター上のさまざまなイベント ログに登録されているソース名と一致するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-292">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method throws an exception if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is registered for a different event log on the computer.</span></span> <span data-ttu-id="5b3b4-293"><xref:System.Diagnostics.EventLogInstaller.Install%2A>メソッドが、ソースを登録していない場合、<xref:System.Diagnostics.EventLogInstaller.Source%2A>で指定された同じイベント ログに既に登録されているソース名と一致するプロパティ、<xref:System.Diagnostics.EventLogInstaller.Log%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-293">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method does not register the source if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is already registered for the same event log specified in the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property.</span></span>  
  
 <span data-ttu-id="5b3b4-294">イベント ログとソースの動作に関する情報の詳細を参照してください、<xref:System.Diagnostics.EventLog>クラスのドキュメント、<xref:System.Diagnostics.EventLog.Log%2A>と<xref:System.Diagnostics.EventLog.Source%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-294">For more detailed information about the behaviors of event logs and sources, see the <xref:System.Diagnostics.EventLog> class documentation for the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.Source%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="T:System.Diagnostics.EventLog" />
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Uninstall : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Uninstall savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="5b3b4-295">インストール前のコンピューターの状態を格納している <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-295">An <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer.</span></span></param>
        <summary><span data-ttu-id="5b3b4-296">レジストリからイベント ログ情報を削除して、コンポーネントを削除します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-296">Removes an installation by removing event log information from the registry.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b3b4-297">場合、<xref:System.Diagnostics.EventLogInstaller.UninstallAction%2A>プロパティの値が`Remove`、<xref:System.Diagnostics.EventLogInstaller.Uninstall%2A>メソッドは、ソースとする場合、インストーラーによって作成される関連するログを削除、<xref:System.Diagnostics.EventLogInstaller.Log%2A>と<xref:System.Diagnostics.EventLogInstaller.Source%2A>プロパティは、新しいイベント ログとソースの作成を指定します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-297">If the <xref:System.Diagnostics.EventLogInstaller.UninstallAction%2A> property value is `Remove`, the <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> method deletes the source and the associated log that the installer created if the <xref:System.Diagnostics.EventLogInstaller.Log%2A> and <xref:System.Diagnostics.EventLogInstaller.Source%2A> properties specified the creation of a new event log and source.</span></span>  
  
 <span data-ttu-id="5b3b4-298">通常、呼び出すことはありませんのメソッド、<xref:System.Diagnostics.EventLogInstaller>からは、コード内で一般的に呼び出されるだけで、 [Installutil.exe (インストーラー ツール)](~/docs/framework/tools/installutil-exe-installer-tool.md)アンインストール モードでします。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-298">Typically, you do not call the methods of the <xref:System.Diagnostics.EventLogInstaller> from within your code; they are generally called only by the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) in uninstall mode.</span></span> <span data-ttu-id="5b3b4-299">ツールが自動的に呼び出し、<xref:System.Diagnostics.EventLogInstaller.Uninstall%2A>システムのインストールをインストール前の状態に影響を受けた部分を復元する方法。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-299">The tool automatically calls the <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> method to restore the parts of the system that were affected by the installation to their pre-installation states.</span></span> <span data-ttu-id="5b3b4-300">これをアンインストールして、イベント ログに関連付けられているレジストリ情報の削除が含まれます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-300">This includes deleting registry information that is associated with the event log being uninstalled.</span></span>  
  
 <span data-ttu-id="5b3b4-301">アプリケーションのアンインストールは日常的なプロジェクト インストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>プロパティが既にアンインストールされているコンポーネントに関する情報を自動的に維持します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-301">An application's uninstall routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> property to automatically maintain information about the components that have already been uninstalled.</span></span> <span data-ttu-id="5b3b4-302">渡される状態情報を取得するにはこの<xref:System.Diagnostics.EventLogInstaller.Uninstall%2A>として、`savedState`ツールをアンインストールしますそれぞれにパラメーターは引き続き更新<xref:System.Diagnostics.EventLogInstaller>します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-302">This state information, which is passed to <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> as the `savedState` parameter, is continuously updated as the tool uninstalls each <xref:System.Diagnostics.EventLogInstaller>.</span></span> <span data-ttu-id="5b3b4-303">通常、この状態情報を明示的に変更するコードの必要はありません。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-303">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="UninstallAction">
      <MemberSignature Language="C#" Value="public System.Configuration.Install.UninstallAction UninstallAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Install.UninstallAction UninstallAction" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.UninstallAction" />
      <MemberSignature Language="VB.NET" Value="Public Property UninstallAction As UninstallAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Install::UninstallAction UninstallAction { System::Configuration::Install::UninstallAction get(); void set(System::Configuration::Install::UninstallAction value); };" />
      <MemberSignature Language="F#" Value="member this.UninstallAction : System.Configuration.Install.UninstallAction with get, set" Usage="System.Diagnostics.EventLogInstaller.UninstallAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Install.UninstallAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b3b4-304"><see href="https://docs.microsoft.com/dotnet/framework/tools/installutil-exe-installer-tool">Installutil.exe (インストーラー ツール)</see> がアンインストール時にイベント ログを削除するか、インストールされた状態のままにしておくかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-304">Gets or sets a value that indicates whether the <see href="https://docs.microsoft.com/dotnet/framework/tools/installutil-exe-installer-tool">Installutil.exe (Installer Tool)</see> should remove the event log or leave it in its installed state at uninstall time.</span></span></summary>
        <value><span data-ttu-id="5b3b4-305"><see cref="T:System.Configuration.Install.UninstallAction" /> がアンインストールされるときにイベント ログをどの状態にするか示す <see cref="T:System.Diagnostics.EventLog" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-305">One of the <see cref="T:System.Configuration.Install.UninstallAction" /> values that indicates what state to leave the event log in when the <see cref="T:System.Diagnostics.EventLog" /> is uninstalled.</span></span> <span data-ttu-id="5b3b4-306">既定値は、<see langword="Remove" /> です。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-306">The default is <see langword="Remove" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b3b4-307">イベント ログをインストールするときに、既存のログに必要に応じて接続できます。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-307">When you install an event log, you can optionally connect it to an existing log.</span></span> <span data-ttu-id="5b3b4-308">これを行う場合は、ログがインストール前の状態に戻る必要があるかどうか、または、現在のインストール後の状態に残すかどうかを決める必要があります。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-308">If you do so, you must decide whether the log should return to its pre-installation state, or remain in its current, post-installation state.</span></span> <span data-ttu-id="5b3b4-309">インストール前の状態、イベント ログを返すように選択した場合、インストール時のイベント ログ エントリへの変更は復元されません。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-309">If you elect to return the event log to its pre-installation state, changes to the event log entries at installation are not restored.</span></span> <span data-ttu-id="5b3b4-310">関連付けられているイベント ログのプロパティのみをリセットすることができます、<xref:System.Diagnostics.EventLogInstaller>インストール前の値にします。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-310">You can reset only the event log properties that are associated with the <xref:System.Diagnostics.EventLogInstaller> to their pre-installation values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="5b3b4-311"><see cref="P:System.Diagnostics.EventLogInstaller.UninstallAction" /> に無効な値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-311"><see cref="P:System.Diagnostics.EventLogInstaller.UninstallAction" /> contains an invalid value.</span></span> <span data-ttu-id="5b3b4-312">このプロパティの有効な値は、<see langword="Remove" /> と <see langword="NoAction" /> だけです。</span><span class="sxs-lookup"><span data-stu-id="5b3b4-312">The only valid values for this property are <see langword="Remove" /> and <see langword="NoAction" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>