<Type Name="EventLogInstaller" FullName="System.Diagnostics.EventLogInstaller">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ebf5fa22cda84c35fafbe169edaec4cdc04e0480" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69076287" /></Metadata><TypeSignature Language="C#" Value="public class EventLogInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventLogInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLogInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type EventLogInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="238f5-101">アプリケーションが実行時に読み書きするイベント ログをインストールおよび構成できます。</span><span class="sxs-lookup"><span data-stu-id="238f5-101">Allows you to install and configure an event log that your application reads from or writes to when running.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="238f5-102">は<xref:System.Diagnostics.EventLogInstaller> 、イベントログをインストールするときに[installutil.exe (インストーラーツール)](~/docs/framework/tools/installutil-exe-installer-tool.md)によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="238f5-102">The <xref:System.Diagnostics.EventLogInstaller> is used by the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) when installing an event log.</span></span> <span data-ttu-id="238f5-103">クラス<xref:System.Diagnostics.EventLogInstaller>は、ローカルコンピューターにのみイベントログをインストールできます。</span><span class="sxs-lookup"><span data-stu-id="238f5-103">The <xref:System.Diagnostics.EventLogInstaller> class can install event logs only on the local computer.</span></span>  
  
 <span data-ttu-id="238f5-104">クラスは<xref:System.Diagnostics.EventLogInstaller> 、アプリケーションがイベントログに書き込むときに使用します。アプリケーションがイベントログを読み取るときに、イベントログのインストーラーを使用する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="238f5-104">Use the <xref:System.Diagnostics.EventLogInstaller> class when your application writes to an event log; it is not necessary to use an event log installer for your application to read from an event log.</span></span> <span data-ttu-id="238f5-105">アプリケーションとサービスは、アプリケーションログまたはカスタムログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="238f5-105">Applications and services should write to the Application log or a custom log.</span></span> <span data-ttu-id="238f5-106">デバイスドライバーは、システムログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="238f5-106">Device drivers should write to the System log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="238f5-107">セキュリティログは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="238f5-107">The Security log is read-only.</span></span>  
  
 <span data-ttu-id="238f5-108">インストーラーによって、 <xref:System.Diagnostics.EventLogInstaller.Source%2A>プロパティで指定したイベントソースが作成され、[プロパティ] で<xref:System.Diagnostics.EventLogInstaller.Log%2A>指定したイベントログに登録されます。</span><span class="sxs-lookup"><span data-stu-id="238f5-108">The installer creates the event source that you specify in the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property and registers it for the event log specified in <xref:System.Diagnostics.EventLogInstaller.Log%2A> property.</span></span> <span data-ttu-id="238f5-109">この動作は、 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> <xref:System.Diagnostics.EventLog>コンポーネントでを呼び出す場合と似ています。</span><span class="sxs-lookup"><span data-stu-id="238f5-109">This behavior is similar to calling <xref:System.Diagnostics.EventLog.CreateEventSource%2A> on the <xref:System.Diagnostics.EventLog> component.</span></span>  
  
 <span data-ttu-id="238f5-110">イベントログ<xref:System.Diagnostics.EventLog.WriteEvent%2A>に<xref:System.Diagnostics.EventLog.WriteEntry%2A>イベントを書き込むには、メソッドとメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="238f5-110">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods to write events to an event log.</span></span> <span data-ttu-id="238f5-111">イベントを書き込むには、イベントソースを指定する必要があります。ソースとの最初のエントリを書き込む前に、イベントソースを作成して構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="238f5-111">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="238f5-112">アプリケーションのインストール時に新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="238f5-112">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="238f5-113">これにより、オペレーティングシステムが登録済みのイベントソースとその構成の一覧を更新できるようになります。</span><span class="sxs-lookup"><span data-stu-id="238f5-113">This allows time for the operating system to refresh its list of registered event sources and their configurations.</span></span> <span data-ttu-id="238f5-114">オペレーティングシステムがイベントソースの一覧を更新しておらず、新しいソースでイベントを作成しようとすると、書き込み操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="238f5-114">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="238f5-115"><xref:System.Diagnostics.EventLogInstaller>を使用するか、 <xref:System.Diagnostics.EventLog.CreateEventSource%2A>メソッドを使用して、新しいソースを構成できます。</span><span class="sxs-lookup"><span data-stu-id="238f5-115">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="238f5-116">新しいイベントソースを作成するには、コンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="238f5-116">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="238f5-117">既存のイベントログまたは新しいイベントログのイベントソースを作成できます。</span><span class="sxs-lookup"><span data-stu-id="238f5-117">You can create an event source for an existing event log or a new event log.</span></span> <span data-ttu-id="238f5-118">新しいイベントログ用に新しいソースを作成すると、そのログのソースが登録されますが、最初のエントリが書き込まれるまでログは作成されません。</span><span class="sxs-lookup"><span data-stu-id="238f5-118">When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="238f5-119">イベントログをインストールするには、から<xref:System.Configuration.Install.Installer>継承されるプロジェクトインストーラークラスを作成し、クラス<xref:System.ComponentModel.RunInstallerAttribute>のを`true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="238f5-119">To install an event log, create a project installer class that inherits from <xref:System.Configuration.Install.Installer>, and set the <xref:System.ComponentModel.RunInstallerAttribute> for the class to `true`.</span></span> <span data-ttu-id="238f5-120">プロジェクト内で、アプリケーションが<xref:System.Diagnostics.EventLogInstaller>書き込む各イベントログのを作成し、そのインスタンスをプロジェクトインストーラークラスに追加します。</span><span class="sxs-lookup"><span data-stu-id="238f5-120">Within your project, create an <xref:System.Diagnostics.EventLogInstaller> for each event log that your application will write to and add the instance to your project installer class.</span></span>  
  
 <span data-ttu-id="238f5-121">[Installutil.exe (インストーラーツール)](~/docs/framework/tools/installutil-exe-installer-tool.md)が呼び出さ<xref:System.ComponentModel.RunInstallerAttribute>れると、が表示されます。</span><span class="sxs-lookup"><span data-stu-id="238f5-121">When the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) is called, it looks at the <xref:System.ComponentModel.RunInstallerAttribute>.</span></span> <span data-ttu-id="238f5-122">存在する場合`true`、このツールは、プロジェクトのインストーラーに<xref:System.Configuration.Install.Installer.Installers%2A>関連付けられているコレクション内のすべての項目をインストールします。</span><span class="sxs-lookup"><span data-stu-id="238f5-122">If it is `true`, the tool installs all the items in the <xref:System.Configuration.Install.Installer.Installers%2A> collection that are associated with your project installer.</span></span> <span data-ttu-id="238f5-123"><xref:System.ComponentModel.RunInstallerAttribute> が`false`の場合、このツールはプロジェクトインストーラーを無視します。</span><span class="sxs-lookup"><span data-stu-id="238f5-123">If <xref:System.ComponentModel.RunInstallerAttribute> is `false`, the tool ignores the project installer.</span></span>  
  
 <span data-ttu-id="238f5-124">の<xref:System.Diagnostics.EventLogInstaller>その他のプロパティは、プロジェクトインストーラーの<xref:System.Configuration.Install.Installer.Installers%2A>コレクションにインスタンスを追加する前または後に、インストーラーツールを実行する前に変更します。</span><span class="sxs-lookup"><span data-stu-id="238f5-124">You modify other properties of an <xref:System.Diagnostics.EventLogInstaller> either before or after adding the instance to the <xref:System.Configuration.Install.Installer.Installers%2A> collection of your project installer, but before the installer tool runs.</span></span> <span data-ttu-id="238f5-125">アプリケーションがイベントログ<xref:System.Diagnostics.EventLogInstaller.Source%2A>に書き込む場合は、プロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="238f5-125">You must set the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property if your application will be writing to the event log.</span></span>  
  
 <span data-ttu-id="238f5-126">新規または既存のイベントログの新しいソースを登録<xref:System.Diagnostics.EventLogInstaller> するには、を使用します。既存のソースを変更する場合は、を使用しないでください。<xref:System.Diagnostics.EventLogInstaller></span><span class="sxs-lookup"><span data-stu-id="238f5-126">Use <xref:System.Diagnostics.EventLogInstaller> to register a new source for a new or existing event log; do not use <xref:System.Diagnostics.EventLogInstaller> to change an existing source.</span></span> <span data-ttu-id="238f5-127">クラス<xref:System.Diagnostics.EventLogInstaller>は、指定されたインストールプロパティに一致するように、既存のソースの構成プロパティを変更しません。</span><span class="sxs-lookup"><span data-stu-id="238f5-127">The <xref:System.Diagnostics.EventLogInstaller> class does not modify the configuration properties of an existing source to match the specified installation properties.</span></span> <span data-ttu-id="238f5-128">この<xref:System.Diagnostics.EventLogInstaller.Install%2A>メソッドは、プロパティが<xref:System.Diagnostics.EventLogInstaller.Source%2A>コンピューター上の別のイベントログに登録されているソース名と一致する場合、例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="238f5-128">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method throws an exception if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is registered for a different event log on the computer.</span></span> <span data-ttu-id="238f5-129">プロパティが、 <xref:System.Diagnostics.EventLogInstaller.Log%2A>プロパティで指定されて<xref:System.Diagnostics.EventLogInstaller.Source%2A>いる同じイベントログに既に登録されているソース名と一致する場合、メソッドはソースを登録しません。<xref:System.Diagnostics.EventLogInstaller.Install%2A></span><span class="sxs-lookup"><span data-stu-id="238f5-129">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method does not register the source if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is already registered for the same event log specified in the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property.</span></span>  
  
 <span data-ttu-id="238f5-130">イベントソースは、イベントカテゴリとメッセージ文字列のローカライズされたリソースファイルに登録できます。</span><span class="sxs-lookup"><span data-stu-id="238f5-130">You can register the event source with localized resource files for your event category and message strings.</span></span> <span data-ttu-id="238f5-131">アプリケーションでは、実際の文字列を指定するのではなく、リソース識別子を使用してイベントログエントリを書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="238f5-131">Your application can write event log entries using resource identifiers, rather than specifying the actual string.</span></span> <span data-ttu-id="238f5-132">イベントビューアーは、リソース識別子を使用して、ローカライズされたリソースファイルの対応する文字列を検索し、現在の言語設定に基づいて表示します。</span><span class="sxs-lookup"><span data-stu-id="238f5-132">The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings.</span></span> <span data-ttu-id="238f5-133">イベントカテゴリ、メッセージ、およびパラメーター挿入文字列用に別のファイルを登録するか、3種類のすべての文字列に同じリソースファイルを登録できます。</span><span class="sxs-lookup"><span data-stu-id="238f5-133">You can register a separate file for event categories, messages, and parameter insertion strings, or you can register the same resource file for all three types of strings.</span></span> <span data-ttu-id="238f5-134">、 、、および<xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A>の<xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A>各プロパティを使用して、ローカライズされたエントリをイベントログに書き込むようにソースを構成します。 <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A></span><span class="sxs-lookup"><span data-stu-id="238f5-134">Use the <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A>, <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>, <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>, and <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> properties to configure the source to write localized entries to the event log.</span></span> <span data-ttu-id="238f5-135">アプリケーションが文字列値をイベントログに直接書き込む場合は、これらのプロパティを設定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="238f5-135">If your application writes strings values directly to the event log, you do not need to set these properties.</span></span>  
  
 <span data-ttu-id="238f5-136">ソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="238f5-136">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="238f5-137">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="238f5-137">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="238f5-138">たとえば、リソースファイルを使用して1つのソースを構成し、その<xref:System.Diagnostics.EventLog.WriteEvent%2A>ソースをメソッドで使用して、リソース識別子を使用してエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="238f5-138">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="238f5-139">リソースファイルを含まない別のソースを作成し、 <xref:System.Diagnostics.EventLog.WriteEntry%2A>メソッドでそのソースを使用して、そのソースを使用して、イベントログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="238f5-139">Create a different source without resource files and then use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
 <span data-ttu-id="238f5-140">通常は、コード内から<xref:System.Diagnostics.EventLogInstaller>クラスのメソッドを呼び出さず、通常は installutil.exe によってのみ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="238f5-140">Typically, you do not call the methods of the <xref:System.Diagnostics.EventLogInstaller> class from within your code; they are generally called only by Installutil.exe.</span></span> <span data-ttu-id="238f5-141">このツールでは、 <xref:System.Diagnostics.EventLogInstaller.Install%2A>インストールプロセス中にメソッドが自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="238f5-141">The tool automatically calls the <xref:System.Diagnostics.EventLogInstaller.Install%2A> method during the installation process.</span></span> <span data-ttu-id="238f5-142">必要に応じて、例外を生成したオブジェクト<xref:System.Diagnostics.EventLogInstaller.Rollback%2A>のメソッドを呼び出すことによって、エラーをバックアップします。</span><span class="sxs-lookup"><span data-stu-id="238f5-142">It backs out failures, if necessary, by calling the <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> method for the object that generated the exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="238f5-143">次のコード例では、新しいイベントソースのインストールプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="238f5-143">The following code example sets the installation properties for a new event source.</span></span> <span data-ttu-id="238f5-144">このコード例では、ソース名とイベントログ名を設定し、 <xref:System.Diagnostics.EventLogInstaller>を<xref:System.Configuration.Install.Installer.Installers%2A>コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="238f5-144">The code example sets the source name and the event log name, and adds the <xref:System.Diagnostics.EventLogInstaller> to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span>  
  
 [!code-cpp[EventLogInstaller#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogInstaller/CPP/eventloginstaller.cpp#1)]
 [!code-csharp[EventLogInstaller#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogInstaller/CS/eventloginstaller.cs#1)]
 [!code-vb[EventLogInstaller#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogInstaller/VB/eventloginstaller.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.EventLog" />
    <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
    <related type="Article" href="~/docs/framework/tools/installutil-exe-installer-tool.md"><span data-ttu-id="238f5-145">Installutil.exe (インストーラー ツール)</span><span class="sxs-lookup"><span data-stu-id="238f5-145">Installutil.exe (Installer Tool)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="238f5-146"><see cref="T:System.Diagnostics.EventLogInstaller" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="238f5-146">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLogInstaller" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryCount">
      <MemberSignature Language="C#" Value="public int CategoryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CategoryCount" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CategoryCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryCount : int with get, set" Usage="System.Diagnostics.EventLogInstaller.CategoryCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="238f5-147">カテゴリ リソース ファイル内のカテゴリの数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="238f5-147">Gets or sets the number of categories in the category resource file.</span></span></summary>
        <value><span data-ttu-id="238f5-148">カテゴリ リソース ファイル内のカテゴリの数。</span><span class="sxs-lookup"><span data-stu-id="238f5-148">The number of categories in the category resource file.</span></span> <span data-ttu-id="238f5-149">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="238f5-149">The default value is zero.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="238f5-150">プロパティと<xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>プロパティを使用して、ローカライズされたカテゴリ文字列を持つイベントを作成します。</span><span class="sxs-lookup"><span data-stu-id="238f5-150">Use the <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> and <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> properties to write events with localized category strings.</span></span> <span data-ttu-id="238f5-151">イベントの書き込み時にカテゴリを指定した場合、イベントビューアーにはイベントエントリのカテゴリが表示されます。</span><span class="sxs-lookup"><span data-stu-id="238f5-151">The Event Viewer displays the category for an event entry, if you supply a category when you write the event.</span></span> <span data-ttu-id="238f5-152">イベントログカテゴリは、イベントのフィルター処理やイベントに関する情報の提供に役立つアプリケーション定義の文字列です。</span><span class="sxs-lookup"><span data-stu-id="238f5-152">Event log categories are application-defined strings that help filter events, or provide information on an event.</span></span> <span data-ttu-id="238f5-153">たとえば、アプリケーションでは、さまざまなコンポーネントまたは異なる操作に対して個別のカテゴリを定義できます。</span><span class="sxs-lookup"><span data-stu-id="238f5-153">For example, your application can define separate categories for different components or different operations.</span></span>  
  
 <span data-ttu-id="238f5-154">イベントカテゴリは省略可能です。アプリケーションでカテゴリを使用しない場合は、プロパティ<xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A>と<xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>プロパティを設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="238f5-154">Event categories are optional; if your application does not use categories, do not set the <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> and <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> properties.</span></span>  
  
 <span data-ttu-id="238f5-155">イベントメッセージの定義とイベントリソースファイルの作成の詳細については、Platform SDK ドキュメント[http://msdn.microsoft.com](https://msdn.microsoft.com/)() の「Message Compiler (メッセージコンパイラ)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="238f5-155">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](https://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="238f5-156">次のコード例では、新しいイベントソースのインストールプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="238f5-156">The following code example sets the installation properties for a new event source.</span></span> <span data-ttu-id="238f5-157">このコード例では、ローカライズされたイベントテキストのイベントソース名、イベントログ名、およびリソースファイルを設定します。</span><span class="sxs-lookup"><span data-stu-id="238f5-157">The code example sets the event source name, event log name, and resource file for localized event text.</span></span>  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 <span data-ttu-id="238f5-158">このコード例では、リソースライブラリ EventLogMsgs に組み込まれている次のメッセージテキストファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="238f5-158">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="238f5-159">メッセージテキストファイルは、メッセージリソースファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="238f5-159">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="238f5-160">メッセージテキストファイルは、カテゴリ、イベントメッセージ、およびパラメーター挿入文字列のリソース識別子とテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="238f5-160">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryCount" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="CategoryResourceFile">
      <MemberSignature Language="C#" Value="public string CategoryResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="238f5-161">ソースのカテゴリ文字列が格納されたリソース ファイルのパスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="238f5-161">Gets or sets the path of the resource file that contains category strings for the source.</span></span></summary>
        <value><span data-ttu-id="238f5-162">カテゴリ リソース ファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="238f5-162">The path of the category resource file.</span></span> <span data-ttu-id="238f5-163">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="238f5-163">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="238f5-164">プロパティと<xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>プロパティを使用して、ローカライズされたカテゴリ文字列を持つイベントを作成します。</span><span class="sxs-lookup"><span data-stu-id="238f5-164">Use the <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> and <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> properties to write events with localized category strings.</span></span> <span data-ttu-id="238f5-165">イベントを記述するときにカテゴリを指定すると、イベントビューアーによってイベントエントリのカテゴリが表示されます。</span><span class="sxs-lookup"><span data-stu-id="238f5-165">The Event Viewer displays the category for an event entry if you supply a category when you write the event.</span></span> <span data-ttu-id="238f5-166">イベントログカテゴリは、イベントのフィルター処理やイベントに関する情報の提供に役立つアプリケーション定義の文字列です。</span><span class="sxs-lookup"><span data-stu-id="238f5-166">Event log categories are application-defined strings that help filter events, or provide information about an event.</span></span> <span data-ttu-id="238f5-167">たとえば、アプリケーションによっては、コンポーネントや操作ごとに異なるカテゴリが存在する場合があります。</span><span class="sxs-lookup"><span data-stu-id="238f5-167">For example, your application might have separate categories for different components or different operations.</span></span>  
  
 <span data-ttu-id="238f5-168">イベントカテゴリは省略可能です。アプリケーションでカテゴリを使用しない場合は、プロパティ<xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A>と<xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>プロパティを設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="238f5-168">Event categories are optional; if your application does not use categories, do not set the <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> and <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> properties.</span></span>  
  
 <span data-ttu-id="238f5-169">イベントメッセージの定義とイベントリソースファイルの作成の詳細については、Platform SDK ドキュメント[http://msdn.microsoft.com](https://msdn.microsoft.com/)() の「Message Compiler (メッセージコンパイラ)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="238f5-169">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](https://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="238f5-170">次のコード例では、新しいイベントソースのインストールプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="238f5-170">The following code example sets the installation properties for a new event source.</span></span> <span data-ttu-id="238f5-171">このコード例では、ローカライズされたイベントテキストのイベントソース名、イベントログ名、およびリソースファイルを設定します。</span><span class="sxs-lookup"><span data-stu-id="238f5-171">The code example sets the event source name, event log name, and resource file for localized event text.</span></span>  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 <span data-ttu-id="238f5-172">このコード例では、リソースライブラリ EventLogMsgs に組み込まれている次のメッセージテキストファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="238f5-172">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="238f5-173">メッセージテキストファイルは、メッセージリソースファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="238f5-173">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="238f5-174">メッセージテキストファイルは、カテゴリ、イベントメッセージ、およびパラメーター挿入文字列のリソース識別子とテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="238f5-174">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="eventLogInstaller.CopyFromComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="238f5-175"><see cref="T:System.ComponentModel.IComponent" /> にテンプレートとして使用する <see cref="T:System.Diagnostics.EventLogInstaller" />。</span><span class="sxs-lookup"><span data-stu-id="238f5-175">An <see cref="T:System.ComponentModel.IComponent" /> to use as a template for the <see cref="T:System.Diagnostics.EventLogInstaller" />.</span></span></param>
        <summary><span data-ttu-id="238f5-176">インストール時に必要な <see cref="T:System.Diagnostics.EventLog" /> コンポーネントのプロパティ値をイベント ログにコピーします。</span><span class="sxs-lookup"><span data-stu-id="238f5-176">Copies the property values of an <see cref="T:System.Diagnostics.EventLog" /> component that are required at installation time for an event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="238f5-177">`component`パラメーターで指定するコンポーネントはである必要<xref:System.Diagnostics.EventLog>があります。それ以外の場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="238f5-177">The component specified by the `component` parameter must be an <xref:System.Diagnostics.EventLog>; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="238f5-178">通常は、コード内<xref:System.Diagnostics.EventLogInstaller>からのメソッドを呼び出さず、通常は[installutil.exe (インストーラーツール)](~/docs/framework/tools/installutil-exe-installer-tool.md)によってのみ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="238f5-178">Typically, you do not call the methods of the <xref:System.Diagnostics.EventLogInstaller> from within your code; they are generally called only by the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md).</span></span> <span data-ttu-id="238f5-179"><xref:System.Diagnostics.EventLogInstaller.CopyFromComponent%2A>installutil.exe でを使用して、 <xref:System.Diagnostics.EventLogInstaller>のプロパティ値を既存<xref:System.Diagnostics.EventLog>のの値に設定します。</span><span class="sxs-lookup"><span data-stu-id="238f5-179"><xref:System.Diagnostics.EventLogInstaller.CopyFromComponent%2A> is used by Installutil.exe to set the property values for the <xref:System.Diagnostics.EventLogInstaller> to the values of an existing <xref:System.Diagnostics.EventLog>.</span></span>  
  
 <span data-ttu-id="238f5-180">渡されたのが空の文字列 ("") である場合<xref:System.Diagnostics.EventLog.Log%2A> 、インストーラーを実行する前に、プロパティを有効な値に設定する必要があります。 <xref:System.Diagnostics.EventLog> <xref:System.Diagnostics.EventLog.Log%2A></span><span class="sxs-lookup"><span data-stu-id="238f5-180">If the <xref:System.Diagnostics.EventLog.Log%2A> of the <xref:System.Diagnostics.EventLog> that is passed in is an empty string (""), you must set the <xref:System.Diagnostics.EventLog.Log%2A> property to a valid value before the installer executes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="238f5-181">指定したコンポーネントが <see cref="T:System.Diagnostics.EventLog" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="238f5-181">The specified component is not an <see cref="T:System.Diagnostics.EventLog" />.</span></span>  
  
<span data-ttu-id="238f5-182">または</span><span class="sxs-lookup"><span data-stu-id="238f5-182">-or-</span></span> 
<span data-ttu-id="238f5-183">指定したコンポーネントの <see cref="P:System.Diagnostics.EventLog.Log" /> プロパティまたは <see cref="P:System.Diagnostics.EventLog.Source" /> プロパティが <see langword="null" /> または空です。</span><span class="sxs-lookup"><span data-stu-id="238f5-183">The <see cref="P:System.Diagnostics.EventLog.Log" /> or <see cref="P:System.Diagnostics.EventLog.Source" /> property of the specified component is either <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver"><span data-ttu-id="238f5-184">ロールバックまたはアンインストール操作を実行するために必要な情報を保存するために使用する <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="238f5-184">An <see cref="T:System.Collections.IDictionary" /> used to save information needed to perform a rollback or uninstall operation.</span></span></param>
        <summary><span data-ttu-id="238f5-185">インストールを実行し、レジストリにイベント ログ情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="238f5-185">Performs the installation and writes event log information to the registry.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="238f5-186">メソッド<xref:System.Diagnostics.EventLogInstaller.Install%2A>は、イベントログ情報をレジストリに書き込み、イベントログを<xref:System.Diagnostics.EventLogInstaller.Log%2A>プロパティで指定されたログに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="238f5-186">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method writes event log information to the registry, and associates the event log with a log that is specified by the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property.</span></span> <span data-ttu-id="238f5-187">ログがまだ存在せず、ソースが指定されている場合<xref:System.Diagnostics.EventLogInstaller.Install%2A>は、によってログが作成され、新しいソースが関連付けられます。</span><span class="sxs-lookup"><span data-stu-id="238f5-187">If the log does not already exist (and a source is specified), <xref:System.Diagnostics.EventLogInstaller.Install%2A> creates a log and associates the new source with it.</span></span>  
  
 <span data-ttu-id="238f5-188">通常は、コード内<xref:System.Diagnostics.EventLogInstaller>からのメソッドを呼び出さず、通常は[installutil.exe (インストーラーツール)](~/docs/framework/tools/installutil-exe-installer-tool.md)によってのみ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="238f5-188">Typically, you do not call the methods of the <xref:System.Diagnostics.EventLogInstaller> from within your code; they are generally called only by the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md).</span></span> <span data-ttu-id="238f5-189">インストールプロセス中に自動的<xref:System.Diagnostics.EventLogInstaller.Install%2A>にメソッドが呼び出され、インストールされているイベントログに関連付けられているレジストリ情報が書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="238f5-189">The tool automatically calls the <xref:System.Diagnostics.EventLogInstaller.Install%2A> method during the installation process to write registry information that is associated with the event log being installed.</span></span> <span data-ttu-id="238f5-190">インストールはトランザクションであるため、インストール中にインストールプロジェクトコンポーネントでエラーが発生した場合は、以前にインストールされたすべてのコンポーネントがインストール前の状態にロールバックされます。</span><span class="sxs-lookup"><span data-stu-id="238f5-190">Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously-installed components are rolled back to their pre-installation states.</span></span> <span data-ttu-id="238f5-191">これは、各コンポーネントの<xref:System.Diagnostics.EventLogInstaller.Rollback%2A>メソッドを呼び出すことによって実現されます。</span><span class="sxs-lookup"><span data-stu-id="238f5-191">This is accomplished by calling each component's <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> method.</span></span>  
  
 <span data-ttu-id="238f5-192">新規または既存のイベントログの新しいソースを登録<xref:System.Diagnostics.EventLogInstaller> するには、を使用します。既存のソースを変更する場合は、を使用しないでください。<xref:System.Diagnostics.EventLogInstaller></span><span class="sxs-lookup"><span data-stu-id="238f5-192">Use <xref:System.Diagnostics.EventLogInstaller> to register a new source for a new or existing event log; do not use <xref:System.Diagnostics.EventLogInstaller> to change an existing source.</span></span> <span data-ttu-id="238f5-193">クラス<xref:System.Diagnostics.EventLogInstaller>は、指定されたインストールプロパティに一致するように、既存のソースの構成プロパティを変更しません。</span><span class="sxs-lookup"><span data-stu-id="238f5-193">The <xref:System.Diagnostics.EventLogInstaller> class does not modify the configuration properties of an existing source to match the specified installation properties.</span></span> <span data-ttu-id="238f5-194">この<xref:System.Diagnostics.EventLogInstaller.Install%2A>メソッドは、プロパティが<xref:System.Diagnostics.EventLogInstaller.Source%2A>コンピューター上の別のイベントログに登録されているソース名と一致する場合、例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="238f5-194">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method throws an exception if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is registered for a different event log on the computer.</span></span> <span data-ttu-id="238f5-195">プロパティ<xref:System.Diagnostics.EventLogInstaller.Install%2A>が<xref:System.Diagnostics.EventLogInstaller.Source%2A> 、 <xref:System.Diagnostics.EventLogInstaller.Log%2A>プロパティで指定されている同じイベントログに既に登録されているソース名と一致する場合、メソッドはソースの登録をスキップします。</span><span class="sxs-lookup"><span data-stu-id="238f5-195">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method skips registering the source if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is already registered for the same event log specified in the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property.</span></span>  
  
 <span data-ttu-id="238f5-196">アプリケーションのインストールルーチンでは、プロジェクトインストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>プロパティを使用して、既にインストールされているコンポーネントに関する情報を自動的に管理します。</span><span class="sxs-lookup"><span data-stu-id="238f5-196">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> property to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="238f5-197">この状態情報は、 <xref:System.Diagnostics.EventLogInstaller.Install%2A> `stateSaver`パラメーターとしてに渡され、ツールによってインストールされる<xref:System.Diagnostics.EventLogInstaller>たびに更新されます。</span><span class="sxs-lookup"><span data-stu-id="238f5-197">This state information, which is passed to <xref:System.Diagnostics.EventLogInstaller.Install%2A> as the `stateSaver` parameter, is continuously updated as the tool installs each <xref:System.Diagnostics.EventLogInstaller>.</span></span> <span data-ttu-id="238f5-198">通常、コードでこの状態情報を明示的に変更する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="238f5-198">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="238f5-199">インストーラーが使用しようとしているプラットフォームが Windows NT 4.0 以降ではありません。</span><span class="sxs-lookup"><span data-stu-id="238f5-199">The platform the installer is trying to use is not Windows NT 4.0 or later.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="238f5-200"><see cref="P:System.Diagnostics.EventLogInstaller.Source" /> プロパティに指定された名前は、別のイベント ログに既に登録されています。</span><span class="sxs-lookup"><span data-stu-id="238f5-200">The name specified in the <see cref="P:System.Diagnostics.EventLogInstaller.Source" /> property is already registered for a different event log.</span></span></exception>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberSignature Language="F#" Value="override this.IsEquivalentInstaller : System.Configuration.Install.ComponentInstaller -&gt; bool" Usage="eventLogInstaller.IsEquivalentInstaller otherInstaller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller"><span data-ttu-id="238f5-201">比較対象のインストーラー。</span><span class="sxs-lookup"><span data-stu-id="238f5-201">The installer to compare.</span></span></param>
        <summary><span data-ttu-id="238f5-202">インストーラーが指定した別のインストーラーと同じソースを参照しているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="238f5-202">Determines whether an installer and another specified installer refer to the same source.</span></span></summary>
        <returns><span data-ttu-id="238f5-203">対象となるインストーラーと <paramref name="otherInstaller" /> パラメーターで指定されたインストーラーが同じソースをインストールまたはアンインストールする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="238f5-203"><see langword="true" /> if this installer and the installer specified by the <paramref name="otherInstaller" /> parameter would install or uninstall the same source; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="238f5-204">通常、コード内<xref:System.Diagnostics.EventLogInstaller>からのメソッドは呼び出さないでください。通常、インストーラーツール (installutil.exe) によってのみ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="238f5-204">Typically, you do not call the methods of the <xref:System.Diagnostics.EventLogInstaller> from within your code; they are generally called only by the Installer tool (Installutil.exe).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public string Log { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Log" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.Log" />
      <MemberSignature Language="VB.NET" Value="Public Property Log As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Log { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Log : string with get, set" Usage="System.Diagnostics.EventLogInstaller.Log" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="238f5-205">ソースを設定するログの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="238f5-205">Gets or sets the name of the log to set the source to.</span></span></summary>
        <value><span data-ttu-id="238f5-206">ログの名前。</span><span class="sxs-lookup"><span data-stu-id="238f5-206">The name of the log.</span></span> <span data-ttu-id="238f5-207">ログ名には、アプリケーション ログ名、システム ログ名、またはカスタム ログ名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="238f5-207">This can be Application, System, or a custom log name.</span></span> <span data-ttu-id="238f5-208">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="238f5-208">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="238f5-209">プロパティを使用<xref:System.Diagnostics.EventLogInstaller.Log%2A>して、 <xref:System.Diagnostics.EventLogInstaller.Source%2A>プロパティで指定したソースを、ローカルコンピューター上の既存のログまたは新しいログに関連付けることができます。</span><span class="sxs-lookup"><span data-stu-id="238f5-209">You can use the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property to associate the source you specify in the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property with either an existing log or a new log on the local computer.</span></span> <span data-ttu-id="238f5-210">[Installutil.exe (インストーラーツール)](~/docs/framework/tools/installutil-exe-installer-tool.md)は、この情報を使用して、ソースをコンピューターのレジストリのログにマップします。</span><span class="sxs-lookup"><span data-stu-id="238f5-210">The [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) uses this information to map the source to the log in the computer's registry.</span></span> <span data-ttu-id="238f5-211">アプリケーションとサービスは、アプリケーションログまたはカスタムログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="238f5-211">Applications and services should write to the Application log or a custom log.</span></span> <span data-ttu-id="238f5-212">デバイスドライバーは、システムログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="238f5-212">Device drivers should write to the System log.</span></span>  
  
 <span data-ttu-id="238f5-213">イベントログにエントリを書き込むには、ソースを作成し、イベントログに登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="238f5-213">To write entries to an event log, you must create a source and register it with an event log.</span></span> <span data-ttu-id="238f5-214">イベントソースは、一度に1つのログにのみ書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="238f5-214">An event source can only write to one log at a time.</span></span> <span data-ttu-id="238f5-215">インストーラーでは、 <xref:System.Diagnostics.EventLogInstaller.Source%2A>プロパティの値を使用して、アプリケーションをエントリの有効なソースとしてイベントログに登録します。</span><span class="sxs-lookup"><span data-stu-id="238f5-215">The installer uses the value of the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property to register your application with the event log as a valid source of entries.</span></span> <span data-ttu-id="238f5-216">インストーラーを実行する前にログ名を指定しないと、インストーラーによってソースがアプリケーションログに登録されます。</span><span class="sxs-lookup"><span data-stu-id="238f5-216">If you do not specify a log name before the installer runs, the installer registers your source to the Application log.</span></span> <span data-ttu-id="238f5-217">新しいソースと既存のログを指定すると、インストーラーによって新しいイベントソースが作成され、指定したログに関連付けられます。</span><span class="sxs-lookup"><span data-stu-id="238f5-217">If you specify a new source and an existing log, the installer creates a new event source and associates it with the log you specify.</span></span> <span data-ttu-id="238f5-218">新しいソースと新しいログの両方を指定すると、インストーラーによって新しいソースがレジストリの新しいログに関連付けられますが、最初のエントリが書き込まれるまでログは作成されません。</span><span class="sxs-lookup"><span data-stu-id="238f5-218">If you specify both a new source and a new log, the installer associates the new source with the new log in the registry, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="238f5-219">オペレーティングシステムは、イベントログをファイルとして保存します。</span><span class="sxs-lookup"><span data-stu-id="238f5-219">The operating system stores event logs as files.</span></span> <span data-ttu-id="238f5-220">または<xref:System.Diagnostics.EventLogInstaller>メソッドを使用して新しいイベントログを作成すると、関連付けられているファイルは、指定したコンピューターの%SystemRoot%\System32\Config ディレクトリに格納されます。 <xref:System.Diagnostics.EventLog.CreateEventSource%2A></span><span class="sxs-lookup"><span data-stu-id="238f5-220">When you use <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</span></span> <span data-ttu-id="238f5-221">ファイル名は、 <xref:System.Diagnostics.EventLogInstaller.Log%2A>プロパティの最初の8文字に ".evt" というファイル名拡張子を追加することによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="238f5-221">The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property with the ".evt" file name extension.</span></span>  
  
 <span data-ttu-id="238f5-222">新規または既存のイベントログの新しいソースを登録<xref:System.Diagnostics.EventLogInstaller> するには、を使用します。既存のソースを変更する場合は、を使用しないでください。<xref:System.Diagnostics.EventLogInstaller></span><span class="sxs-lookup"><span data-stu-id="238f5-222">Use <xref:System.Diagnostics.EventLogInstaller> to register a new source for a new or existing event log; do not use <xref:System.Diagnostics.EventLogInstaller> to change an existing source.</span></span> <span data-ttu-id="238f5-223">クラス<xref:System.Diagnostics.EventLogInstaller>は、指定されたインストールプロパティに一致するように、既存のソースの構成プロパティを変更しません。</span><span class="sxs-lookup"><span data-stu-id="238f5-223">The <xref:System.Diagnostics.EventLogInstaller> class does not modify the configuration properties of an existing source to match the specified installation properties.</span></span> <span data-ttu-id="238f5-224">この<xref:System.Diagnostics.EventLogInstaller.Install%2A>メソッドは、プロパティが<xref:System.Diagnostics.EventLogInstaller.Source%2A>コンピューター上の別のイベントログに登録されているソース名と一致する場合、例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="238f5-224">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method throws an exception if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is registered for a different event log on the computer.</span></span> <span data-ttu-id="238f5-225">プロパティが、 <xref:System.Diagnostics.EventLogInstaller.Log%2A>プロパティで指定されて<xref:System.Diagnostics.EventLogInstaller.Source%2A>いる同じイベントログに既に登録されているソース名と一致する場合、メソッドはソースを登録しません。<xref:System.Diagnostics.EventLogInstaller.Install%2A></span><span class="sxs-lookup"><span data-stu-id="238f5-225">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method does not register the source if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is already registered for the same event log specified in the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property.</span></span>  
  
 <span data-ttu-id="238f5-226">イベントログとソースの動作の詳細については、プロパティ<xref:System.Diagnostics.EventLog> <xref:System.Diagnostics.EventLog.Log%2A>と<xref:System.Diagnostics.EventLog.Source%2A>プロパティのクラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="238f5-226">For more detailed information about the behaviors of event logs and sources, see the <xref:System.Diagnostics.EventLog> class documentation for the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.Source%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="T:System.Diagnostics.EventLog" />
      </Docs>
    </Member>
    <Member MemberName="MessageResourceFile">
      <MemberSignature Language="C#" Value="public string MessageResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MessageResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessageResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="238f5-227">ソースのメッセージ書式指定文字列が格納されたリソース ファイルのパスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="238f5-227">Gets or sets the path of the resource file that contains message formatting strings for the source.</span></span></summary>
        <value><span data-ttu-id="238f5-228">メッセージ リソース ファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="238f5-228">The path of the message resource file.</span></span> <span data-ttu-id="238f5-229">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="238f5-229">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="238f5-230">プロパティを<xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>使用して、ローカライズされたイベントメッセージを書き込むようにイベントログソースを構成します。</span><span class="sxs-lookup"><span data-stu-id="238f5-230">Use the <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> property to configure an event log source to write localized event messages.</span></span> <span data-ttu-id="238f5-231">イベントメッセージは、ユーザーにイベントを記述するアプリケーション定義の文字列です。</span><span class="sxs-lookup"><span data-stu-id="238f5-231">Event messages are application-defined strings that describe the event to the user.</span></span>  
  
 <span data-ttu-id="238f5-232">アプリケーションでは、リソース識別子を使用してイベントログエントリを書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="238f5-232">Your application can write event log entries using resource identifiers.</span></span> <span data-ttu-id="238f5-233">リソース識別子は、 <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>にあるメッセージにインデックスを付けます。</span><span class="sxs-lookup"><span data-stu-id="238f5-233">A resource identifier indexes a message located in the <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>.</span></span> <span data-ttu-id="238f5-234">イベントビューアーは、リソース識別子を使用して、ローカライズされたリソースファイルの対応する文字列を検索し、現在の言語設定に基づいて表示します。</span><span class="sxs-lookup"><span data-stu-id="238f5-234">The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings.</span></span>  
  
 <span data-ttu-id="238f5-235">イベントソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="238f5-235">The event source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="238f5-236"><xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッドを使用して、メッセージリソースファイルで構成されたソースのローカライズされたエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="238f5-236">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write localized entries for a source configured with a message resource file.</span></span>  
  
 <span data-ttu-id="238f5-237">アプリケーションで、ローカライズされたリソースファイル内のリソース識別子を使用せずに、イベントメッセージ文字列を直接書き込む<xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>場合は、プロパティを設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="238f5-237">If your application writes event message strings directly, rather than using a resource identifier in a localized resource file, do not set the <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> property.</span></span>  
  
 <span data-ttu-id="238f5-238"><xref:System.Diagnostics.EventLog.MachineName%2A>プロパティがローカルコンピューター識別子 (".") でない場合、.NET Framework は、リソースファイルがリモートコンピューター上にあることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="238f5-238">If the <xref:System.Diagnostics.EventLog.MachineName%2A> property is not the local computer identifier ("."), the .NET Framework assumes that the resource file is on a remote computer.</span></span> <span data-ttu-id="238f5-239">\> \\\> \\\\ \\プロパティ値にドライブ文字が含まれている場合、リソースファイルは < machinename < drive $ share (たとえば、\ server) 上にあると見なされます。 <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>\c $)。</span><span class="sxs-lookup"><span data-stu-id="238f5-239">If the <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> property value contains a drive letter, the resource file is assumed to be on the \\\\<machinename\>\\<drive\>$ share (for example, \\\server\c$).</span></span> <span data-ttu-id="238f5-240">値に文字列% systemroot% が含まれている場合\\、リソースファイルは\\< machinename\>\ admin $ 共有 (たとえば、 \\\ \ \ 管理 $) にあると見なされます。</span><span class="sxs-lookup"><span data-stu-id="238f5-240">If the value contains the string %systemroot%, the resource file is assumed to be on the \\\\<machinename\>\admin$ share (for example, \\\server\admin$).</span></span>  
  
 <span data-ttu-id="238f5-241">イベントメッセージの定義とイベントリソースファイルの作成の詳細については、Platform SDK ドキュメント[http://msdn.microsoft.com](https://msdn.microsoft.com/)() の「Message Compiler (メッセージコンパイラ)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="238f5-241">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](https://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="238f5-242">次のコード例では、新しいイベントソースのインストールプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="238f5-242">The following code example sets the installation properties for a new event source.</span></span> <span data-ttu-id="238f5-243">このコード例では、ローカライズされたイベントテキストのイベントソース名、イベントログ名、およびリソースファイルを設定します。</span><span class="sxs-lookup"><span data-stu-id="238f5-243">The code example sets the event source name, event log name, and resource file for localized event text.</span></span>  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 <span data-ttu-id="238f5-244">このコード例では、リソースライブラリ EventLogMsgs に組み込まれている次のメッセージテキストファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="238f5-244">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="238f5-245">メッセージテキストファイルは、メッセージリソースファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="238f5-245">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="238f5-246">メッセージテキストファイルは、カテゴリ、イベントメッセージ、およびパラメーター挿入文字列のリソース識別子とテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="238f5-246">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="ParameterResourceFile">
      <MemberSignature Language="C#" Value="public string ParameterResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.ParameterResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.ParameterResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="238f5-247">ソースのメッセージ パラメーター文字列が格納されたリソース ファイルのパスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="238f5-247">Gets or sets the path of the resource file that contains message parameter strings for the source.</span></span></summary>
        <value><span data-ttu-id="238f5-248">メッセージ パラメーター リソース ファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="238f5-248">The path of the message parameter resource file.</span></span> <span data-ttu-id="238f5-249">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="238f5-249">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="238f5-250">プロパティを<xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A>使用して、挿入されたパラメーター文字列を使用してローカライズされたイベントメッセージを書き込むようにイベントログソースを構成します。</span><span class="sxs-lookup"><span data-stu-id="238f5-250">Use the <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> property to configure an event log source to write localized event messages with inserted parameter strings.</span></span> <span data-ttu-id="238f5-251">プロパティで指定される<xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>ローカライズされた各イベントメッセージには、挿入文字列のプレースホルダーを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="238f5-251">Each localized event message specified in the <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> property can contain placeholders for insertion strings.</span></span> <span data-ttu-id="238f5-252">これらのプレースホルダーは、イベントメッセージ内の言語に依存しない文字列の位置とリソース識別子を指定するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="238f5-252">These placeholders are used to specify the position and resource identifier for a language-independent string within the event message.</span></span> <span data-ttu-id="238f5-253">イベントビューアーは、プレースホルダーをの<xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A>対応する文字列に置き換え、ローカライズされたイベントエントリのイベントログメッセージを書式設定します。</span><span class="sxs-lookup"><span data-stu-id="238f5-253">The Event Viewer replaces the placeholders with the corresponding strings from the <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> and formats the event log message for the localized event entry.</span></span>  
  
 <span data-ttu-id="238f5-254">たとえば、メッセージテキストファイルの次のセクションでは、パラメータープレースホルダーを含む文字列を定義しています。</span><span class="sxs-lookup"><span data-stu-id="238f5-254">For example, the following section of a message text file defines a string with a parameter placeholder:</span></span>  
  
```  
  
MessageId = 1501  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_STARTING  
Language=English  
Component %%6050 is starting.  
.  
```  
  
 <span data-ttu-id="238f5-255">パラメーターリソースファイル内では、次に示すように、プレースホルダーに対応するリソース識別子を使用して挿入文字列を定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="238f5-255">Within the parameter resource file, the insertion string must be defined with the resource identifier that corresponds to the placeholder, as shown below:</span></span>  
  
```  
MessageId = 6050  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_NAME_MSGID  
Language=English  
TRIGGER.EXE  
.  
```  
  
 <span data-ttu-id="238f5-256">イベントソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="238f5-256">The event source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="238f5-257"><xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッドを使用して、メッセージリソースファイルで構成されたソースのローカライズされたエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="238f5-257">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write localized entries for a source configured with a message resource file.</span></span>  
  
 <span data-ttu-id="238f5-258">アプリケーションでイベントメッセージ文字列をイベントログに直接書き込む場合、またはに<xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>パラメーター挿入プレースホルダーを含むメッセージが含まれていない場合<xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A>は、プロパティを設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="238f5-258">If your application writes event message strings directly to the event log, or if your <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> does not contain messages with parameter insertion placeholders, do not set the <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> property.</span></span>  
  
 <span data-ttu-id="238f5-259">イベントメッセージの定義とイベントリソースファイルの作成の詳細については、Platform SDK ドキュメント[http://msdn.microsoft.com](https://msdn.microsoft.com/)() の「Message Compiler (メッセージコンパイラ)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="238f5-259">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](https://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="238f5-260">次のコード例では、新しいイベントソースのインストールプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="238f5-260">The following code example sets the installation properties for a new event source.</span></span> <span data-ttu-id="238f5-261">このコード例では、ローカライズされたイベントテキストのイベントソース名、イベントログ名、およびリソースファイルを設定します。</span><span class="sxs-lookup"><span data-stu-id="238f5-261">The code example sets the event source name, event log name, and resource file for localized event text.</span></span>  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 <span data-ttu-id="238f5-262">このコード例では、リソースライブラリ EventLogMsgs に組み込まれている次のメッセージテキストファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="238f5-262">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="238f5-263">メッセージテキストファイルは、メッセージリソースファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="238f5-263">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="238f5-264">メッセージテキストファイルは、カテゴリ、イベントメッセージ、およびパラメーター挿入文字列のリソース識別子とテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="238f5-264">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span> <span data-ttu-id="238f5-265">具体的には、リソース識別子1004に定義されたメッセージは、リソース識別子5002に定義されているパラメーター文字列のプレースホルダーを使用します。</span><span class="sxs-lookup"><span data-stu-id="238f5-265">Specifically, the message defined for resource identifier 1004 uses a placeholder for a parameter string defined for resource identifier 5002.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="238f5-266">インストール前のコンピューターの状態を格納している <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="238f5-266">An <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer.</span></span></param>
        <summary><span data-ttu-id="238f5-267">インストール プロシージャがレジストリに書き込んだイベント ログ情報をロールバックして、コンピューターをインストール前の状態に復元します。</span><span class="sxs-lookup"><span data-stu-id="238f5-267">Restores the computer to the state it was in before the installation by rolling back the event log information that the installation procedure wrote to the registry.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="238f5-268">メソッド<xref:System.Diagnostics.EventLogInstaller.Rollback%2A>は、 <xref:System.Diagnostics.EventLogInstaller.Install%2A>メソッドの効果を元に戻します。</span><span class="sxs-lookup"><span data-stu-id="238f5-268">The <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> method undoes the effects of the <xref:System.Diagnostics.EventLogInstaller.Install%2A> method.</span></span> <span data-ttu-id="238f5-269"><xref:System.Diagnostics.EventLogInstaller.Rollback%2A>は、インストールプロジェクトのコンポーネントのインストールが失敗した場合に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="238f5-269"><xref:System.Diagnostics.EventLogInstaller.Rollback%2A> is called if the installation of any component in the installation project fails.</span></span> <span data-ttu-id="238f5-270">メソッド<xref:System.Diagnostics.EventLogInstaller.Install%2A>は、イベントログとイベントソースのプロパティを作成または設定します。</span><span class="sxs-lookup"><span data-stu-id="238f5-270">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method creates or sets the properties for an event log and event source.</span></span> <span data-ttu-id="238f5-271"><xref:System.Diagnostics.EventLogInstaller.Rollback%2A>イベントログとソースを削除するか、既存のソースのプロパティをインストール前の値にリセットします。</span><span class="sxs-lookup"><span data-stu-id="238f5-271"><xref:System.Diagnostics.EventLogInstaller.Rollback%2A> either deletes the event log and source or resets the properties of a pre-existing source to its pre-installation values.</span></span>  
  
 <span data-ttu-id="238f5-272">通常は、コード内<xref:System.Diagnostics.EventLogInstaller>からのメソッドを呼び出さず、通常は[installutil.exe (インストーラーツール)](~/docs/framework/tools/installutil-exe-installer-tool.md)によってのみ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="238f5-272">Typically, you do not call the methods of the <xref:System.Diagnostics.EventLogInstaller> from within your code; they are generally called only by the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md).</span></span> <span data-ttu-id="238f5-273">このツールは、 <xref:System.Diagnostics.EventLogInstaller.Rollback%2A>このコンポーネントまたは別のコンポーネントのインストールが失敗したときにメソッドを呼び出し、インストールプロセスによって既に行われた変更を元に戻すことができます。</span><span class="sxs-lookup"><span data-stu-id="238f5-273">The tool calls the <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> method, when this or another component has failed to install, to undo any changes that the installation process has already made.</span></span>  
  
 <span data-ttu-id="238f5-274">アプリケーションのインストールルーチンでは、プロジェクトインストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>プロパティを使用して、既にインストールされているコンポーネントに関する情報を自動的に管理します。</span><span class="sxs-lookup"><span data-stu-id="238f5-274">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> property to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="238f5-275">この状態情報は、 <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> `savedState`パラメーターとしてに渡され、ツール<xref:System.Diagnostics.EventLogInstaller>によってロールバックされると継続的に更新されます。</span><span class="sxs-lookup"><span data-stu-id="238f5-275">This state information, which is passed to <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> as the `savedState` parameter, is continuously updated as the tool rolls back each <xref:System.Diagnostics.EventLogInstaller>.</span></span> <span data-ttu-id="238f5-276">通常、コードでこの状態情報を明示的に変更する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="238f5-276">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="System.Diagnostics.EventLogInstaller.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="238f5-277">ログに登録するソース名を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="238f5-277">Gets or sets the source name to register with the log.</span></span></summary>
        <value><span data-ttu-id="238f5-278">エントリのソースとしてイベント ログに登録する名前。</span><span class="sxs-lookup"><span data-stu-id="238f5-278">The name to register with the event log as a source of entries.</span></span> <span data-ttu-id="238f5-279">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="238f5-279">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="238f5-280">イベントソースは、イベントをログに記録するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="238f5-280">The event source indicates what logs the event.</span></span> <span data-ttu-id="238f5-281">多くの場合、アプリケーションの名前、または大規模なアプリケーション内のコンポーネントの名前です。</span><span class="sxs-lookup"><span data-stu-id="238f5-281">It is often the name of the application, or the name of a component within a large application.</span></span>  
  
 <span data-ttu-id="238f5-282">インストーラーでは、 <xref:System.Diagnostics.EventLogInstaller.Source%2A>プロパティの値を使用して、アプリケーションをエントリの有効なソースとしてイベントログに登録します。</span><span class="sxs-lookup"><span data-stu-id="238f5-282">The installer uses the value of the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property to register your application with the event log as a valid source of entries.</span></span> <span data-ttu-id="238f5-283">新しいソース名は、既存のソース名または既存のイベントログ名と一致することはできません。</span><span class="sxs-lookup"><span data-stu-id="238f5-283">A new source name cannot match an existing source name or an existing event log name.</span></span> <span data-ttu-id="238f5-284">各ソースは、一度に1つのイベントログにのみ書き込むことができます。ただし、アプリケーションで複数のソースを使用して複数のイベントログに書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="238f5-284">Each source can only write to one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="238f5-285">たとえば、アプリケーションによっては、異なるイベントログまたは異なるリソースファイル用に複数のソースが構成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="238f5-285">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span>  
  
 <span data-ttu-id="238f5-286">アプリケーションとサービスは、アプリケーションログまたはカスタムログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="238f5-286">Applications and services should write to the Application log or a custom log.</span></span> <span data-ttu-id="238f5-287">デバイスドライバーは、システムログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="238f5-287">Device drivers should write to the System log.</span></span> <span data-ttu-id="238f5-288">インストーラーを実行する前にログ名を指定しないと、インストーラーによってソースがアプリケーションログに登録されます。</span><span class="sxs-lookup"><span data-stu-id="238f5-288">If you do not specify a log name before the installer runs, the installer registers your source to the Application log.</span></span> <span data-ttu-id="238f5-289">存在しないログの名前を指定した場合、システムはをそのログ<xref:System.Diagnostics.EventLogInstaller.Source%2A>に登録しますが、最初のエントリが書き込まれるまでログは作成されません。</span><span class="sxs-lookup"><span data-stu-id="238f5-289">If you specify the name of a log that does not exist, the system registers the <xref:System.Diagnostics.EventLogInstaller.Source%2A> to that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="238f5-290">新規または既存のイベントログの新しいソースを登録<xref:System.Diagnostics.EventLogInstaller> するには、を使用します。既存のソースを変更する場合は、を使用しないでください。<xref:System.Diagnostics.EventLogInstaller></span><span class="sxs-lookup"><span data-stu-id="238f5-290">Use <xref:System.Diagnostics.EventLogInstaller> to register a new source for a new or existing event log; do not use <xref:System.Diagnostics.EventLogInstaller> to change an existing source.</span></span> <span data-ttu-id="238f5-291">クラス<xref:System.Diagnostics.EventLogInstaller>は、指定されたインストールプロパティに一致するように、既存のソースの構成プロパティを変更しません。</span><span class="sxs-lookup"><span data-stu-id="238f5-291">The <xref:System.Diagnostics.EventLogInstaller> class does not modify the configuration properties of an existing source to match the specified installation properties.</span></span> <span data-ttu-id="238f5-292">この<xref:System.Diagnostics.EventLogInstaller.Install%2A>メソッドは、プロパティが<xref:System.Diagnostics.EventLogInstaller.Source%2A>コンピューター上の別のイベントログに登録されているソース名と一致する場合、例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="238f5-292">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method throws an exception if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is registered for a different event log on the computer.</span></span> <span data-ttu-id="238f5-293">プロパティが、 <xref:System.Diagnostics.EventLogInstaller.Log%2A>プロパティで指定されて<xref:System.Diagnostics.EventLogInstaller.Source%2A>いる同じイベントログに既に登録されているソース名と一致する場合、メソッドはソースを登録しません。<xref:System.Diagnostics.EventLogInstaller.Install%2A></span><span class="sxs-lookup"><span data-stu-id="238f5-293">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method does not register the source if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is already registered for the same event log specified in the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property.</span></span>  
  
 <span data-ttu-id="238f5-294">イベントログとソースの動作の詳細については、プロパティ<xref:System.Diagnostics.EventLog> <xref:System.Diagnostics.EventLog.Log%2A>と<xref:System.Diagnostics.EventLog.Source%2A>プロパティのクラスのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="238f5-294">For more detailed information about the behaviors of event logs and sources, see the <xref:System.Diagnostics.EventLog> class documentation for the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.Source%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="T:System.Diagnostics.EventLog" />
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Uninstall : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Uninstall savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="238f5-295">インストール前のコンピューターの状態を格納している <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="238f5-295">An <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer.</span></span></param>
        <summary><span data-ttu-id="238f5-296">レジストリからイベント ログ情報を削除して、コンポーネントを削除します。</span><span class="sxs-lookup"><span data-stu-id="238f5-296">Removes an installation by removing event log information from the registry.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="238f5-297">`Remove` <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> <xref:System.Diagnostics.EventLogInstaller.Log%2A>プロパティの値がの場合、メソッドは、プロパティと<xref:System.Diagnostics.EventLogInstaller.Source%2A>プロパティが新しいイベントログとソースの作成を指定した場合に、インストーラーによって作成されたソースと関連付けられたログを削除します。 <xref:System.Diagnostics.EventLogInstaller.UninstallAction%2A></span><span class="sxs-lookup"><span data-stu-id="238f5-297">If the <xref:System.Diagnostics.EventLogInstaller.UninstallAction%2A> property value is `Remove`, the <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> method deletes the source and the associated log that the installer created if the <xref:System.Diagnostics.EventLogInstaller.Log%2A> and <xref:System.Diagnostics.EventLogInstaller.Source%2A> properties specified the creation of a new event log and source.</span></span>  
  
 <span data-ttu-id="238f5-298">通常は、コード内からのメソッドを呼び<xref:System.Diagnostics.EventLogInstaller>出さないでください。通常、アンインストールモードでは、 [installutil.exe (インストーラーツール)](~/docs/framework/tools/installutil-exe-installer-tool.md)によってのみ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="238f5-298">Typically, you do not call the methods of the <xref:System.Diagnostics.EventLogInstaller> from within your code; they are generally called only by the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) in uninstall mode.</span></span> <span data-ttu-id="238f5-299">ツールは自動的に<xref:System.Diagnostics.EventLogInstaller.Uninstall%2A>メソッドを呼び出し、インストールの影響を受けたシステムの部分をインストール前の状態に復元します。</span><span class="sxs-lookup"><span data-stu-id="238f5-299">The tool automatically calls the <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> method to restore the parts of the system that were affected by the installation to their pre-installation states.</span></span> <span data-ttu-id="238f5-300">これには、アンインストールするイベントログに関連するレジストリ情報の削除が含まれます。</span><span class="sxs-lookup"><span data-stu-id="238f5-300">This includes deleting registry information that is associated with the event log being uninstalled.</span></span>  
  
 <span data-ttu-id="238f5-301">アプリケーションのアンインストールルーチンは、プロジェクトインストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>プロパティを使用して、既にアンインストールされているコンポーネントに関する情報を自動的に管理します。</span><span class="sxs-lookup"><span data-stu-id="238f5-301">An application's uninstall routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> property to automatically maintain information about the components that have already been uninstalled.</span></span> <span data-ttu-id="238f5-302">この状態情報は、 <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> `savedState`パラメーターとしてに渡され、ツールによってそれぞれ<xref:System.Diagnostics.EventLogInstaller>がアンインストールされると継続的に更新されます。</span><span class="sxs-lookup"><span data-stu-id="238f5-302">This state information, which is passed to <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> as the `savedState` parameter, is continuously updated as the tool uninstalls each <xref:System.Diagnostics.EventLogInstaller>.</span></span> <span data-ttu-id="238f5-303">通常、コードでこの状態情報を明示的に変更する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="238f5-303">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="UninstallAction">
      <MemberSignature Language="C#" Value="public System.Configuration.Install.UninstallAction UninstallAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Install.UninstallAction UninstallAction" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.UninstallAction" />
      <MemberSignature Language="VB.NET" Value="Public Property UninstallAction As UninstallAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Install::UninstallAction UninstallAction { System::Configuration::Install::UninstallAction get(); void set(System::Configuration::Install::UninstallAction value); };" />
      <MemberSignature Language="F#" Value="member this.UninstallAction : System.Configuration.Install.UninstallAction with get, set" Usage="System.Diagnostics.EventLogInstaller.UninstallAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Install.UninstallAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="238f5-304"><see href="https://docs.microsoft.com/dotnet/framework/tools/installutil-exe-installer-tool">Installutil.exe (インストーラー ツール)</see> がアンインストール時にイベント ログを削除するか、インストールされた状態のままにしておくかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="238f5-304">Gets or sets a value that indicates whether the <see href="https://docs.microsoft.com/dotnet/framework/tools/installutil-exe-installer-tool">Installutil.exe (Installer Tool)</see> should remove the event log or leave it in its installed state at uninstall time.</span></span></summary>
        <value><span data-ttu-id="238f5-305"><see cref="T:System.Configuration.Install.UninstallAction" /> がアンインストールされるときにイベント ログをどの状態にするか示す <see cref="T:System.Diagnostics.EventLog" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="238f5-305">One of the <see cref="T:System.Configuration.Install.UninstallAction" /> values that indicates what state to leave the event log in when the <see cref="T:System.Diagnostics.EventLog" /> is uninstalled.</span></span> <span data-ttu-id="238f5-306">既定値は、<see langword="Remove" /> です。</span><span class="sxs-lookup"><span data-stu-id="238f5-306">The default is <see langword="Remove" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="238f5-307">イベントログをインストールするときに、必要に応じて既存のログに接続することができます。</span><span class="sxs-lookup"><span data-stu-id="238f5-307">When you install an event log, you can optionally connect it to an existing log.</span></span> <span data-ttu-id="238f5-308">その場合は、ログをインストール前の状態に戻すか、現在のインストール後の状態のままにするかを決定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="238f5-308">If you do so, you must decide whether the log should return to its pre-installation state, or remain in its current, post-installation state.</span></span> <span data-ttu-id="238f5-309">イベントログをインストール前の状態に戻すことを選択した場合、インストール時にイベントログエントリに加えられた変更は復元されません。</span><span class="sxs-lookup"><span data-stu-id="238f5-309">If you elect to return the event log to its pre-installation state, changes to the event log entries at installation are not restored.</span></span> <span data-ttu-id="238f5-310">に関連付けられているイベントログのプロパティのみを<xref:System.Diagnostics.EventLogInstaller> 、インストール前の値にリセットできます。</span><span class="sxs-lookup"><span data-stu-id="238f5-310">You can reset only the event log properties that are associated with the <xref:System.Diagnostics.EventLogInstaller> to their pre-installation values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="238f5-311"><see cref="P:System.Diagnostics.EventLogInstaller.UninstallAction" /> に無効な値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="238f5-311"><see cref="P:System.Diagnostics.EventLogInstaller.UninstallAction" /> contains an invalid value.</span></span> <span data-ttu-id="238f5-312">このプロパティの有効な値は、<see langword="Remove" /> と <see langword="NoAction" /> だけです。</span><span class="sxs-lookup"><span data-stu-id="238f5-312">The only valid values for this property are <see langword="Remove" /> and <see langword="NoAction" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
