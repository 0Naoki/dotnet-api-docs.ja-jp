<Type Name="PerformanceCounterCategory" FullName="System.Diagnostics.PerformanceCounterCategory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e94d195b781774061ea6330e18870337002350ad" />
    <Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="12/05/2018" />
    <Meta Name="ms.locfileid" Value="52907543" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PerformanceCounterCategory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PerformanceCounterCategory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.PerformanceCounterCategory" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PerformanceCounterCategory" />
  <TypeSignature Language="C++ CLI" Value="public ref class PerformanceCounterCategory sealed" />
  <TypeSignature Language="F#" Value="type PerformanceCounterCategory = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>パフォーマンス カウンターのカテゴリを定義するパフォーマンス オブジェクトを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  パフォーマンス カウンターを作成、削除する名前付きミュー テックスを使用して、基になるコードの同期が必要です。 高い特権を持つアプリケーションは、名前付きミュー テックスをロックする場合、に作成したり、パフォーマンス カウンターを削除しようとすると、ロックが解放されるまでの応答を停止するアプリケーション。 この問題を回避するには、決して付与<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode>信頼されていないコードへのアクセスを許可します。 さらに、<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode>アクセス許可は、可能性のあるにより、他のアクセス許可をバイパスすることし、信頼性の高いコードにのみ付与する必要があります。  
  
 <xref:System.Diagnostics.PerformanceCounterCategory>インスタンスの<xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>パフォーマンス ビューアー アプリケーションのカウンターの追加 ダイアログ ボックスの パフォーマンス オブジェクト フィールドにプロパティが表示されます。  
  
 <xref:System.Diagnostics.PerformanceCounterCategory>クラス カウンターと、コンピューター上のカテゴリと対話するためのいくつかのメソッドを提供します。 <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A>メソッドを使用すると、カスタム カテゴリを定義します。 <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A>メソッドは、コンピューターからカテゴリを削除する方法を提供します。 <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A>メソッドでは、カテゴリの一覧を表示することができます、 <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A> 1 つのカテゴリに関連付けられているすべてのカウンタおよびインスタンス データを取得します。  
  
 パフォーマンス カウンターは、アプリケーションに関するパフォーマンス データを公開します。 カテゴリには、(プロセッサ、ディスク、およびメモリ) などの物理コンポーネントとプロセスとスレッド) などのシステム オブジェクトが含まれます。 同じパフォーマンス オブジェクトに関連するシステム カウンターは、共通のフォーカスを示すカテゴリに分類されます。 インスタンスを作成する場合、<xref:System.Diagnostics.PerformanceCounter>クラス、まずを指定するが、コンポーネントがやり取りすると、およびそのカテゴリからカウンターを選択し、カテゴリ。  
  
 たとえば、Windows カウンターの 1 つのカテゴリは、Memory カテゴリです。 このカテゴリ内のシステム カウンターは、使用できるバイト数とキャッシュのバイト数などのメモリ データを追跡します。 インスタンスを作成すると、アプリケーションでキャッシュされたバイト数を使用する場合は、<xref:System.Diagnostics.PerformanceCounter>コンポーネントは、Memory カテゴリに接続およびに適切なカウンター (この例では、キャッシュされたバイト数) でそのカテゴリを選択してください。  
  
 システム、多くその他のカウンター カテゴリで使用できるカテゴリはおそらくを操作する最も頻繁には、キャッシュ、メモリ、オブジェクト、PhysicalDisk、プロセス、プロセッサ、サーバー、システム、およびスレッドのカテゴリ。  
  
> [!IMPORTANT]
>  <xref:System.Diagnostics.PerformanceCounter.RemoveInstance%2A>メソッドで、<xref:System.Diagnostics.PerformanceCounter>クラスは、カウンターを解放し、カウンターのインスタンスを再利用はそのカテゴリの再利用するオプションがオンの場合。 別のプロセスまたはコードの別の部分は counter インスタンスに書き込もうとした場合は、競合状態が発生する可能性があります。  
  
> [!NOTE]
>  アプリケーションのインストール中に、アプリケーションの実行中ではなく、新しいパフォーマンス カウンター カテゴリを作成することを強くお勧めします。 これにより、登録済みのパフォーマンス カウンター カテゴリの一覧を更新するオペレーティング システムまでの時間です。 一覧が更新されていない場合、カテゴリを使用する試行は失敗します。  
  
> [!NOTE]
>  パフォーマンス カウンターのカテゴリにインストールされている、[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]独自のメモリを持っている各パフォーマンス カウンター カテゴリ別の共有メモリを使用します。 別の共有メモリのサイズを指定するには、レジストリ キー hkey_local_machine \system\currentcontrolset\services FileMappingSize をという名前の DWORD を作成して\\*\<カテゴリ名 >* \パフォーマンス。 FileMappingSize 値は、カテゴリの共有メモリのサイズに設定されます。 既定のサイズは 131072 10 進数です。 FileMappingSize 値が存在しない場合、`fileMappingSize`属性の値、 `performanceCounters` Machine.config ファイルで指定された要素を使用すると、構成ファイルの処理に追加のオーバーヘッドを発生させます。 レジストリでファイル マップのサイズを設定して、アプリケーションの起動時のパフォーマンスの向上を実現できます。 ファイル マップのサイズの詳細については、次を参照してください。 [ &lt;performanceCounters&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/performancecounters-element.md)します。  
  
   
  
## Examples  
 次のコード例を決定するかどうかを<xref:System.Diagnostics.PerformanceCounter>とその<xref:System.Diagnostics.PerformanceCounterCategory>ローカル コンピューターまたは別のコンピューター上に存在します。 これらのオブジェクトは、ローカル コンピューターに存在しない場合は、例では、必要に応じてそれらを作成します。 使用して、<xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A>メソッドを決定するかどうか、<xref:System.Diagnostics.PerformanceCounterCategory>存在します。  場合、<xref:System.Diagnostics.PerformanceCounterCategory>が存在しないカウンター名が指定されていないか、例では、コンピューターがリモート コンピューターの場合は、終了するとします。  
  
 場合、<xref:System.Diagnostics.PerformanceCounter>名が指定されて、この例では、<xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A>メソッドをユーザーに結果を表示します。 場合、<xref:System.Diagnostics.PerformanceCounter>が存在しないユーザーが削除して再作成、<xref:System.Diagnostics.PerformanceCounterCategory>新しい<xref:System.Diagnostics.PerformanceCounter>します。 使用して、カテゴリを削除する場合は、ユーザーは、<xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A>メソッド。  
  
 例を新しい作成これで、要求された場合<xref:System.Diagnostics.PerformanceCounterCategory>と<xref:System.Diagnostics.PerformanceCounter>を使用して、<xref:System.Diagnostics.PerformanceCounterCategory.Create%2A>メソッド。 例では、インスタンス名が指定されている場合、<xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A>メソッド結果を表示します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.Class#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.Class/CS/perfcountercatcreateexist.cs#27)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.Class#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.Class/VB/perfcountercatcreateexist.vb#27)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.PerformanceCounter" />
    <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
    <altmember cref="T:System.Diagnostics.CounterSample" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounterCategory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Diagnostics.PerformanceCounterCategory" />クラス、リーフ、<see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />プロパティを空とセット、<see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />プロパティをローカル コンピューターにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>これを関連付ける前にプロパティを設定する必要があります<xref:System.Diagnostics.PerformanceCounterCategory>サーバー上のパフォーマンス オブジェクトのインスタンス。 それ以外の場合は、例外がスローされます。  
  
   
  
## Examples  
 次のコード例を受け入れる、<xref:System.Diagnostics.PerformanceCounterCategory>名と、コマンドラインからコンピューター名。  作成、<xref:System.Diagnostics.PerformanceCounterCategory>そのプロパティを表示し、指定されたパラメーターの数の適切なコンス トラクターのオーバー ロードを使用します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンス カウンター カテゴリを読み取る。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounterCategory(System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounterCategory : string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="new System.Diagnostics.PerformanceCounterCategory categoryName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">パフォーマンス カウンターのカテゴリ、またはこれを関連付けられる、パフォーマンス オブジェクトの名前<see cref="T:System.Diagnostics.PerformanceCounterCategory" />インスタンス。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Diagnostics.PerformanceCounterCategory" />クラス、セット、<see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />プロパティを指定した値に設定、<see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />プロパティをローカル コンピューターにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を受け入れる、<xref:System.Diagnostics.PerformanceCounterCategory>名と、コマンドラインからコンピューター名。 作成、<xref:System.Diagnostics.PerformanceCounterCategory>そのプロパティを表示し、指定されたパラメーターの数の適切なコンス トラクター オーバー ロードを使用します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" />空の文字列 ("")。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> が <see langword="null" /> です。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">カテゴリ名などのカテゴリの情報を読み取る。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory (string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounterCategory(System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounterCategory : string * string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="new System.Diagnostics.PerformanceCounterCategory (categoryName, machineName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">パフォーマンス カウンターのカテゴリ、またはこれを関連付けられる、パフォーマンス オブジェクトの名前<see cref="T:System.Diagnostics.PerformanceCounterCategory" />インスタンス。</param>
        <param name="machineName">パフォーマンス カウンター カテゴリと関連するカウンターが存在するコンピューター。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Diagnostics.PerformanceCounterCategory" />クラスとセット、<see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />と<see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />プロパティの値を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を受け入れる、<xref:System.Diagnostics.PerformanceCounterCategory>名と、コマンドラインからコンピューター名。 作成、<xref:System.Diagnostics.PerformanceCounterCategory>そのプロパティを表示し、指定されたパラメーターの数の適切なコンス トラクター オーバー ロードを使用します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" />空の文字列 ("")。  
  
- または - 
<paramref name="machineName" />構文が無効です。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> が <see langword="null" /> です。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">コンピューターとカテゴリ名などのカテゴリの情報を読み取る。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CategoryHelp">
      <MemberSignature Language="C#" Value="public string CategoryHelp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryHelp" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryHelp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CategoryHelp As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryHelp { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CategoryHelp : string" Usage="System.Diagnostics.PerformanceCounterCategory.CategoryHelp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カテゴリのヘルプ テキストを取得します。</summary>
        <value>このカテゴリを測定するパフォーマンス オブジェクトの説明。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を作成、<xref:System.Diagnostics.PerformanceCounterCategory>で、<xref:System.Diagnostics.PerformanceCounterCategory.%23ctor>します。 ユーザーが要求、<xref:System.Diagnostics.PerformanceCounterCategory>およびコンピューターの名前を設定し、<xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>と<xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>入力された値からのプロパティ。 値を表示し、 <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>、 <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>、および<xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A>プロパティ、またはその場合、エラー メッセージを表示、<xref:System.Diagnostics.PerformanceCounterCategory>にアクセスできません。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティが <see langword="null" /> です。 カテゴリ ヘルプを取得する前に、カテゴリ名を設定する必要があります。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API 呼び出しに失敗しました。</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.CounterHelp" />
      </Docs>
    </Member>
    <Member MemberName="CategoryName">
      <MemberSignature Language="C#" Value="public string CategoryName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryName : string with get, set" Usage="System.Diagnostics.PerformanceCounterCategory.CategoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはこのカテゴリを定義するパフォーマンス オブジェクトの名前を設定します。</summary>
        <value>パフォーマンス カウンターのカテゴリ、またはこれを関連付けられる、パフォーマンス オブジェクトの名前<see cref="T:System.Diagnostics.PerformanceCounterCategory" />インスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を作成、<xref:System.Diagnostics.PerformanceCounterCategory>で、<xref:System.Diagnostics.PerformanceCounterCategory.%23ctor>します。 ユーザーが要求、<xref:System.Diagnostics.PerformanceCounterCategory>およびコンピューターの名前を設定し、<xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>と<xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>入力された値からのプロパティ。 値を表示し、 <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>、 <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>、および<xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A>プロパティ、またはその場合、エラー メッセージを表示、<xref:System.Diagnostics.PerformanceCounterCategory>にアクセスできません。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />空の文字列 ("")。</exception>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> が <see langword="null" /> です。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンス カウンター カテゴリを読み取る。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CategoryType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounterCategoryType CategoryType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.PerformanceCounterCategoryType CategoryType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CategoryType As PerformanceCounterCategoryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::PerformanceCounterCategoryType CategoryType { System::Diagnostics::PerformanceCounterCategoryType get(); };" />
      <MemberSignature Language="F#" Value="member this.CategoryType : System.Diagnostics.PerformanceCounterCategoryType" Usage="System.Diagnostics.PerformanceCounterCategory.CategoryType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategoryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パフォーマンス カウンター カテゴリの種類を取得します。</summary>
        <value>
          <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" /> 値のいずれか 1 つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.PerformanceCounterCategory.CategoryType%2A>プロパティを示すかどうか、<xref:System.Diagnostics.PerformanceCounterCategory>オブジェクトが複数のインスタンスがあることができます。 指定できる値は<xref:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance>、 <xref:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance>、または<xref:System.Diagnostics.PerformanceCounterCategoryType.Unknown>します。  
  
 パフォーマンス カウンター カテゴリの 2 種類があります。 単一インスタンスと複数インスタンス。 作成され、別のインスタンスが追加されると複数インスタンスになりますが、既定では、カテゴリ、単一インスタンスです。 カテゴリは、アプリケーションがセットアップされ、実行時にインスタンスが追加されるときに作成されます。 .NET Framework version 1.0 および 1.1 でないまたは単一インスタンスのマルチ インスタンス パフォーマンス カウンターのカテゴリを確認するために必要です。 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]、<xref:System.Diagnostics.PerformanceCounterCategoryType>パフォーマンス カウンターが複数のインスタンスを持つかどうかを示す列挙体を使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CounterExists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したカウンターが特定のカテゴリに登録されているかどうかを判断します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public bool CounterExists (string counterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CounterExists(string counterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CounterExists (counterName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CounterExists(System::String ^ counterName);" />
      <MemberSignature Language="F#" Value="member this.CounterExists : string -&gt; bool" Usage="performanceCounterCategory.CounterExists counterName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">検索するパフォーマンス カウンターの名前。</param>
        <summary>指定したカウンターが付いていますが、このカテゴリに登録されているかどうかを決定する、<see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />と<see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />プロパティ。</summary>
        <returns>
          <see langword="true" /> 指定されたカテゴリに、カウンターが登録されているかどうか、<see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />と<see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />プロパティ、それ以外の<see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定する必要があります、<xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>このメソッドを呼び出す前に、プロパティ。 それ以外の場合は、例外がスローされます。  
  
 設定していない場合、<xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>プロパティでは、このメソッドは、ローカル コンピューターを使用して (".")。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 には、Performance Monitor Users グループのメンバーであるか、管理者特権を持つ必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする、特権を昇格することを避けるためには、Performance Monitor Users グループに追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには標準ユーザーから管理者に、特権を昇格する必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例を決定するかどうかを<xref:System.Diagnostics.PerformanceCounter>が存在します。 与えられた場合、コマンドラインからカテゴリ名、カウンター名、およびコンピューター名を取得とします。 作成、<xref:System.Diagnostics.PerformanceCounterCategory>オブジェクト、適切なを使用して<xref:System.Diagnostics.PerformanceCounterCategory.%23ctor%2A>します。 次を使用して、<xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%28System.String%29>判断するメソッドかどうか、指定した<xref:System.Diagnostics.PerformanceCounter>が存在し、ユーザーに通知されます。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatobjexists.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatobjcountexists.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="counterName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティが設定されていません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API 呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public static bool CounterExists (string counterName, string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CounterExists(string counterName, string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CounterExists (counterName As String, categoryName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CounterExists(System::String ^ counterName, System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member CounterExists : string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.CounterExists (counterName, categoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">検索するパフォーマンス カウンターの名前。</param>
        <param name="categoryName">パフォーマンス カウンターのカテゴリ、または指定したパフォーマンス カウンターが関連付けられているパフォーマンス オブジェクトの名前。</param>
        <summary>指定したカウンターが、ローカル コンピューター上の指定したカテゴリに登録されているかどうかを判断します。</summary>
        <returns>
          <see langword="true" />、カウンターがローカル コンピューター上の指定したカテゴリに登録されている場合それ以外の場合、<see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 には、Performance Monitor Users グループのメンバーであるか、管理者特権を持つ必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする、特権を昇格することを避けるためには、Performance Monitor Users グループに追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには標準ユーザーから管理者に、特権を昇格する必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例を決定するかどうかを<xref:System.Diagnostics.PerformanceCounter>が存在します。 与えられた場合、コマンドラインからカテゴリ名、カウンター名、およびコンピューター名を取得とします。 静的なオーバー ロードを使用して、<xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A>メソッドを決定するかどうか、指定した<xref:System.Diagnostics.PerformanceCounter>名に存在する、<xref:System.Diagnostics.PerformanceCounterCategory>します。 オーバー ロードは、コンピューター名が提供されているかどうかに基づいて選択されます。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatcounterexists.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatcountexists.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> が <see langword="null" /> です。  
  
- または - 
<paramref name="counterName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" />空の文字列 ("")。</exception>
        <exception cref="T:System.InvalidOperationException">カテゴリ名が存在しません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API 呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンス カウンター カテゴリを読み取る。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public static bool CounterExists (string counterName, string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CounterExists(string counterName, string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CounterExists (counterName As String, categoryName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CounterExists(System::String ^ counterName, System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member CounterExists : string * string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.CounterExists (counterName, categoryName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">検索するパフォーマンス カウンターの名前。</param>
        <param name="categoryName">パフォーマンス カウンターのカテゴリ、または指定したパフォーマンス カウンターが関連付けられているパフォーマンス オブジェクトの名前。</param>
        <param name="machineName">パフォーマンス カウンター カテゴリと関連するカウンターが存在するコンピューターの名前。</param>
        <summary>指定したカウンターがリモート コンピューター上の指定したカテゴリに登録されているかどうかを判断します。</summary>
        <returns>
          <see langword="true" />、カウンターが指定したコンピューター上の指定したカテゴリに登録されている場合それ以外の場合、<see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 には、Performance Monitor Users グループのメンバーであるか、管理者特権を持つ必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする、特権を昇格することを避けるためには、Performance Monitor Users グループに追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには標準ユーザーから管理者に、特権を昇格する必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例を決定するかどうかを<xref:System.Diagnostics.PerformanceCounter>が存在します。 与えられた場合、コマンドラインからカテゴリ名、カウンター名、およびコンピューター名を取得とします。 静的なオーバー ロードを使用して、<xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A>メソッドを決定するかどうか、指定した<xref:System.Diagnostics.PerformanceCounter>名に存在する、<xref:System.Diagnostics.PerformanceCounterCategory>します。 オーバー ロードは、コンピューター名が提供されているかどうかに基づいて選択されます。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatcounterexists.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatcountexists.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> が <see langword="null" /> です。  
  
- または - 
<paramref name="counterName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" />空の文字列 ("")。  
  
- または - 
<paramref name="machineName" /> が無効です。</exception>
        <exception cref="T:System.InvalidOperationException">カテゴリ名が存在しません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API 呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンス カウンター カテゴリを読み取る。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>システムでカスタム パフォーマンス カウンターのカテゴリと 1 つまたは複数のカウンターを登録します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.CounterCreationDataCollection counterData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, class System.Diagnostics.CounterCreationDataCollection counterData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, counterData As CounterCreationDataCollection) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::Diagnostics::CounterCreationDataCollection ^ counterData);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * System.Diagnostics.CounterCreationDataCollection -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, counterData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use another overload that uses PerformanceCounterCategoryType instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="counterData" Type="System.Diagnostics.CounterCreationDataCollection" />
      </Parameters>
      <Docs>
        <param name="categoryName">作成し、システムを登録するカスタム パフォーマンス カウンター カテゴリの名前。</param>
        <param name="categoryHelp">カスタムのカテゴリの説明。</param>
        <param name="counterData">A<see cref="T:System.Diagnostics.CounterCreationDataCollection" />新しいカテゴリの一部として作成するカウンターを指定します。</param>
        <summary>ローカル コンピューターの指定したカウンターを格納しているカスタム パフォーマンス カウンター カテゴリを登録します。</summary>
        <returns>A<see cref="T:System.Diagnostics.PerformanceCounterCategory" />新しいカスタム カテゴリ、またはパフォーマンス オブジェクトに関連付けられています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 には、Performance Monitor Users グループのメンバーであるか、管理者特権を持つ必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする、特権を昇格することを避けるためには、Performance Monitor Users グループに追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには標準ユーザーから管理者に、特権を昇格する必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例を決定するかどうかを<xref:System.Diagnostics.PerformanceCounterCategory>"orders"という名前のオブジェクトが存在します。 そうでないを作成する場合、<xref:System.Diagnostics.PerformanceCounterCategory>オブジェクトを使用して、<xref:System.Diagnostics.CounterCreationDataCollection>を 2 つのパフォーマンス カウンターを含むオブジェクト。  
  
 [!code-cpp[PerfCounter_ccd#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter_ccd#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter_ccd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">内で指定されているカウンター名、<paramref name="counterData" />コレクションが<see langword="null" />または空の文字列 ("")。  
  
- または - 
内で指定されているカウンター、<paramref name="counterData" />コレクションは既に存在します。  
  
- または - 
<paramref name="counterName" />パラメーターが無効な構文です。 円記号文字 ("\\") が含まれているか、長さが 80 文字を超えています。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">カテゴリは、ローカル コンピューターに既に存在します。  
  
- または - 
レイアウト、<paramref name="counterData" />コレクションが基本カウンターに対して適切ではありません。 カウンターのタイプが <see langword="AverageCount64" />、<see langword="AverageTimer32" />、<see langword="CounterMultiTimer" />、<see langword="CounterMultiTimerInverse" />、<see langword="CounterMultiTimer100Ns" />、<see langword="CounterMultiTimer100NsInverse" />、<see langword="RawFraction" />、<see langword="SampleFraction" />、または <see langword="SampleCounter" /> の場合は、直後にベース カウンター タイプのいずれか (<see langword="AverageBase" />、<see langword="MultiBase" />、<see langword="RawBase" />、または <see langword="SampleBase" />) が必要です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API 呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンス カウンター カテゴリの管理タスクを実行します。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" /> (関連する列挙体)</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, System.Diagnostics.CounterCreationDataCollection counterData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, valuetype System.Diagnostics.PerformanceCounterCategoryType categoryType, class System.Diagnostics.CounterCreationDataCollection counterData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, categoryType As PerformanceCounterCategoryType, counterData As CounterCreationDataCollection) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::Diagnostics::PerformanceCounterCategoryType categoryType, System::Diagnostics::CounterCreationDataCollection ^ counterData);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * System.Diagnostics.PerformanceCounterCategoryType * System.Diagnostics.CounterCreationDataCollection -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, categoryType, counterData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="categoryType" Type="System.Diagnostics.PerformanceCounterCategoryType" />
        <Parameter Name="counterData" Type="System.Diagnostics.CounterCreationDataCollection" />
      </Parameters>
      <Docs>
        <param name="categoryName">作成し、システムを登録するカスタム パフォーマンス カウンター カテゴリの名前。</param>
        <param name="categoryHelp">カスタムのカテゴリの説明。</param>
        <param name="categoryType">
          <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" /> 値のいずれか 1 つ。</param>
        <param name="counterData">A<see cref="T:System.Diagnostics.CounterCreationDataCollection" />新しいカテゴリの一部として作成するカウンターを指定します。</param>
        <summary>ローカル コンピューターの指定したカウンターを格納しているカスタム パフォーマンス カウンター カテゴリを登録します。</summary>
        <returns>A<see cref="T:System.Diagnostics.PerformanceCounterCategory" />新しいカスタム カテゴリ、またはパフォーマンス オブジェクトに関連付けられています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `categoryType`パラメーターは、または複数インスタンスのパフォーマンス カウンター カテゴリの単一インスタンスがかどうかを指定します。 作成され、別のインスタンスが追加されると複数インスタンスになりますが、既定では、カテゴリ、単一インスタンスです。 カテゴリは、アプリケーションがセットアップされ、実行時にインスタンスが追加されるときに作成されます。 .NET Framework version 1.0 および 1.1 でないまたは単一インスタンスのマルチ インスタンス パフォーマンス カウンターのカテゴリを確認するために必要です。 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]、<xref:System.Diagnostics.PerformanceCounterCategoryType>パフォーマンス カウンターが複数のインスタンスを持つかどうかを示す列挙体を使用します。  
  
 パフォーマンス カウンターのカテゴリにインストールされている、[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]独自のメモリを持っている各パフォーマンス カウンター カテゴリ別の共有メモリを使用します。  別の共有メモリのサイズを指定するには、レジストリ キー hkey_local_machine \system\currentcontrolset\services FileMappingSize をという名前の DWORD を作成して\\*\<カテゴリ名 >* \パフォーマンス。 FileMappingSize 値は、カテゴリの共有メモリのサイズに設定されます。 既定のサイズは 131072 10 進数です。 FileMappingSize 値が存在しない場合、`fileMappingSize`属性の値、 `performanceCounters` Machine.config ファイルで指定された要素を使用すると、構成ファイルの処理に追加のオーバーヘッドを発生させます。 レジストリでファイル マップのサイズを設定して、アプリケーションの起動時のパフォーマンスの向上を実現できます。  
  
> [!NOTE]
>  アプリケーションのインストール中に、アプリケーションの実行中ではなく、新しいパフォーマンス カウンター カテゴリを作成することを強くお勧めします。 これにより、登録済みのパフォーマンス カウンター カテゴリの一覧を更新するオペレーティング システムまでの時間です。 一覧が更新されていない場合、カテゴリを使用する試行は失敗します。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 には、Performance Monitor Users グループのメンバーであるか、管理者特権を持つ必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする、特権を昇格することを避けるためには、Performance Monitor Users グループに追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには標準ユーザーから管理者に、特権を昇格する必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例の使用を示しています、<xref:System.Diagnostics.PerformanceCounterCategory.Create%2A>メソッド。 例では、カスタム、1 秒あたりの注文の数のマルチ インスタンス パフォーマンス カウンター カテゴリを作成する方法を示します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategoryType#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/CS/program.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategoryType#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/VB/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">内で指定されているカウンター名、<paramref name="counterData" />コレクションが<see langword="null" />または空の文字列 ("")。  
  
- または - 
内で指定されているカウンター、<paramref name="counterData" />コレクションは既に存在します。  
  
- または - 
 <paramref name="counterName" /> 無効な構文があります。 円記号文字 ("\\") が含まれているか、長さが 80 文字を超えています。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> は <see langword="null" /> です。  
  
- または - 
 <paramref name="counterData" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="categoryType" /> 値が次の値の範囲外です: <see langword="MultiInstance" />、 <see langword="SingleInstance" />、または<see langword="Unknown" />します。</exception>
        <exception cref="T:System.InvalidOperationException">カテゴリは、ローカル コンピューターに既に存在します。  
  
- または - 
レイアウト、<paramref name="counterData" />コレクションが基本カウンターに対して適切ではありません。 カウンターのタイプが <see langword="AverageCount64" />、<see langword="AverageTimer32" />、<see langword="CounterMultiTimer" />、<see langword="CounterMultiTimerInverse" />、<see langword="CounterMultiTimer100Ns" />、<see langword="CounterMultiTimer100NsInverse" />、<see langword="RawFraction" />、<see langword="SampleFraction" />、または <see langword="SampleCounter" /> の場合は、直後にベース カウンター タイプのいずれか (<see langword="AverageBase" />、<see langword="MultiBase" />、<see langword="RawBase" />、または <see langword="SampleBase" />) が必要です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API 呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンス カウンター カテゴリの管理タスクを実行します。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" /> (関連する列挙体)</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, string counterName, string counterHelp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, string counterName, string counterHelp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, counterName As String, counterHelp As String) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::String ^ counterName, System::String ^ counterHelp);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * string * string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, counterName, counterHelp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use another overload that uses PerformanceCounterCategoryType instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, string counterName, string counterHelp) instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="counterHelp" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">作成し、システムを登録するカスタム パフォーマンス カウンター カテゴリの名前。</param>
        <param name="categoryHelp">カスタムのカテゴリの説明。</param>
        <param name="counterName">型の新しいカウンターの名前<see langword="NumberOfItems32" />、新しいカテゴリの一部として作成します。</param>
        <param name="counterHelp">新しいカスタム カテゴリに関連付けられているカウンターの説明。</param>
        <summary>型の 1 つのカウンターを格納しているカスタム パフォーマンス カウンター カテゴリを登録します<see langword="NumberOfItems32" />ローカル コンピューター上です。</summary>
        <returns>A<see cref="T:System.Diagnostics.PerformanceCounterCategory" />新しいシステム カテゴリ、またはパフォーマンス オブジェクトに関連付けられています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 には、Performance Monitor Users グループのメンバーであるか、管理者特権を持つ必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする、特権を昇格することを避けるためには、Performance Monitor Users グループに追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには標準ユーザーから管理者に、特権を昇格する必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例を作成、<xref:System.Diagnostics.PerformanceCounterCategory>とシングル<xref:System.Diagnostics.PerformanceCounter>ごとに、ヘルプ テキストを使用して、<xref:System.Diagnostics.PerformanceCounterCategory.Create%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29>メソッド。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatcreate.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatcreate.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="counterName" /> が <see langword="null" /> または空の文字列 ("") です。  
  
- または - 
指定されているカウンター<paramref name="counterName" />既に存在します。  
  
- または - 
 <paramref name="counterName" /> 無効な構文があります。 円記号文字 ("\\") が含まれているか、長さが 80 文字を超えています。</exception>
        <exception cref="T:System.InvalidOperationException">カテゴリは、ローカル コンピューターに既に存在します。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> は <see langword="null" /> です。  
  
- または - 
 <paramref name="counterHelp" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API 呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンス カウンター カテゴリの管理タスクを実行します。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" /> (関連する列挙体)</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.CounterHelp" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, string counterName, string counterHelp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, valuetype System.Diagnostics.PerformanceCounterCategoryType categoryType, string counterName, string counterHelp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, categoryType As PerformanceCounterCategoryType, counterName As String, counterHelp As String) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::Diagnostics::PerformanceCounterCategoryType categoryType, System::String ^ counterName, System::String ^ counterHelp);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * System.Diagnostics.PerformanceCounterCategoryType * string * string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, categoryType, counterName, counterHelp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="categoryType" Type="System.Diagnostics.PerformanceCounterCategoryType" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="counterHelp" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">作成し、システムを登録するカスタム パフォーマンス カウンター カテゴリの名前。</param>
        <param name="categoryHelp">カスタムのカテゴリの説明。</param>
        <param name="categoryType">カテゴリが <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" />、<see cref="F:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance" />、または <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance" /> のいずれであるかを指定する、<see cref="F:System.Diagnostics.PerformanceCounterCategoryType.Unknown" /> 値の 1 つ。</param>
        <param name="counterName">新しいカテゴリの一部として作成する新しいカウンターの名前。</param>
        <param name="counterHelp">新しいカスタム カテゴリに関連付けられているカウンターの説明。</param>
        <summary>型の 1 つのカウンターを格納しているカスタム パフォーマンス カウンター カテゴリを登録します<see cref="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32" />ローカル コンピューター上です。</summary>
        <returns>A<see cref="T:System.Diagnostics.PerformanceCounterCategory" />新しいシステム カテゴリ、またはパフォーマンス オブジェクトに関連付けられています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `categoryType`パラメーターは、または複数インスタンスのパフォーマンス カウンター カテゴリの単一インスタンスがかどうかを指定します。 作成され、別のインスタンスが追加されると複数インスタンスになりますが、既定では、カテゴリ、単一インスタンスです。 カテゴリは、アプリケーションがセットアップされ、実行時にインスタンスが追加されるときに作成されます。 .NET Framework version 1.0 および 1.1 でないまたは単一インスタンスのマルチ インスタンス パフォーマンス カウンターのカテゴリを確認するために必要です。 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]、<xref:System.Diagnostics.PerformanceCounterCategoryType>パフォーマンス カウンターが複数のインスタンスを持つかどうかを示す列挙体を使用します。  
  
 パフォーマンス カウンターのカテゴリにインストールされている、[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]独自のメモリを持っている各パフォーマンス カウンター カテゴリ別の共有メモリを使用します。 別の共有メモリのサイズを指定するには、レジストリ キー hkey_local_machine \system\currentcontrolset\services FileMappingSize をという名前の DWORD を作成して\\*\<カテゴリ名 >* \パフォーマンス。 FileMappingSize 値は、カテゴリの共有メモリのサイズに設定されます。 既定のサイズは 131072 10 進数です。 FileMappingSize 値が存在しない場合、`fileMappingSize`属性の値、 `performanceCounters` Machine.config ファイルで指定された要素を使用すると、構成ファイルの処理に追加のオーバーヘッドを発生させます。 レジストリでファイル マップのサイズを設定して、アプリケーションの起動時のパフォーマンスの向上を実現できます。  
  
> [!NOTE]
>  アプリケーションのインストール中に、アプリケーションの実行中ではなく、新しいパフォーマンス カウンター カテゴリを作成することを強くお勧めします。 これにより、登録済みのパフォーマンス カウンター カテゴリの一覧を更新するオペレーティング システムまでの時間です。 一覧が更新されていない場合、カテゴリを使用する試行は失敗します。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 には、Performance Monitor Users グループのメンバーであるか、管理者特権を持つ必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする、特権を昇格することを避けるためには、Performance Monitor Users グループに追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには標準ユーザーから管理者に、特権を昇格する必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例の使用を示しています、<xref:System.Diagnostics.PerformanceCounterCategory.Create%2A>メソッド。 例では、カスタムの 1 つのインスタンスのパフォーマンス カウンター カテゴリを作成する方法を示します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategoryType#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/CS/program.cs#3)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategoryType#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/VB/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="counterName" /> が <see langword="null" /> または空の文字列 ("") です。  
  
- または - 
指定されているカウンター<paramref name="counterName" />既に存在します。  
  
- または - 
 <paramref name="counterName" /> 無効な構文があります。 円記号文字 ("\\") が含まれているか、長さが 80 文字を超えています。</exception>
        <exception cref="T:System.InvalidOperationException">カテゴリは、ローカル コンピューターに既に存在します。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> は <see langword="null" /> です。  
  
- または - 
 <paramref name="counterHelp" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API 呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンス カウンター カテゴリの管理タスクを実行します。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" /> (関連する列挙体)</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Delete (categoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Delete(System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member Delete : string -&gt; unit" Usage="System.Diagnostics.PerformanceCounterCategory.Delete categoryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">削除するカスタム パフォーマンス カウンター カテゴリの名前。</param>
        <summary>ローカル コンピューターから、カテゴリとそれに関連付けられているカウンターを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 システムからは、カスタム パフォーマンス カウンター カテゴリのみを削除できます。 カテゴリからカウンターを削除することはできません。 これを行うには、カテゴリを削除しを保持するカウンターのカテゴリを再作成します。 例外を回避するには、削除しようとする前に、カテゴリが存在することを確認します。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 には、Performance Monitor Users グループのメンバーであるか、管理者特権を持つ必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする、特権を昇格することを避けるためには、Performance Monitor Users グループに追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには標準ユーザーから管理者に、特権を昇格する必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A>を削除する方法、 <xref:System.Diagnostics.PerformanceCounterCategory> 、<xref:System.Diagnostics.PerformanceCounter>それに含まれるオブジェクト。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatDelete.cs#6)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatdelete.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" />パラメーターが無効な構文です。 円記号文字 ("\\") が含まれているか、長さが 80 文字を超えています。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API 呼び出しに失敗しました。</exception>
        <exception cref="T:System.InvalidOperationException">カスタム カテゴリではないために、カテゴリを削除できません。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンス カウンター カテゴリを読み取る。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" /> (関連する列挙体)</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Exists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>システムで、カテゴリが登録されているかどうかを判断します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (categoryName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member Exists : string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.Exists categoryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">検索するパフォーマンス カウンター カテゴリの名前。</param>
        <summary>ローカル コンピューターで、カテゴリが登録されているかどうかを判断します。</summary>
        <returns>
          <see langword="true" /> 場合は、カテゴリが登録されています。それ以外の場合、<see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用、<xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A>マシン上のすべてのパフォーマンス カウンターが可用性のチェック中にパフォーマンスが大幅に低下メソッドが発生します。 パフォーマンス カウンターを作成する場合は、カウンターにアクセスするときに存在するカテゴリと仮定すると、アプリケーションをインストールすると、パフォーマンス カウンターを作成して、グローバル検索のパフォーマンス カウンターを回避できます。 パフォーマンス カウンターから読み取るときに、パフォーマンス カウンターの検索を回避する方法はありません。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 には、Performance Monitor Users グループのメンバーであるか、管理者特権を持つ必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする、特権を昇格することを避けるためには、Performance Monitor Users グループに追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには標準ユーザーから管理者に、特権を昇格する必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例を決定するかどうかを<xref:System.Diagnostics.PerformanceCounterCategory>"orders"という名前のオブジェクトが存在します。 そうでないを作成する場合、<xref:System.Diagnostics.PerformanceCounterCategory>オブジェクトを使用して、<xref:System.Diagnostics.CounterCreationDataCollection>を 2 つのパフォーマンス カウンターを含むオブジェクト。  
  
 [!code-cpp[PerfCounter_ccd#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter_ccd#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter_ccd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> パラメーターが空の文字列 ("") です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API 呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンス カウンター カテゴリを読み取る。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (categoryName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member Exists : string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.Exists (categoryName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">検索するパフォーマンス カウンター カテゴリの名前。</param>
        <param name="machineName">カテゴリをチェックするコンピューターの名前。</param>
        <summary>指定したコンピューター上のカテゴリが登録されているかどうかを判断します。</summary>
        <returns>
          <see langword="true" /> 場合は、カテゴリが登録されています。それ以外の場合、<see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用、<xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A>マシン上のすべてのパフォーマンス カウンターが可用性のチェック中にパフォーマンスが大幅に低下メソッドが発生します。 パフォーマンス カウンターを作成する場合は、カウンターにアクセスするときに存在するカテゴリと仮定すると、アプリケーションをインストールすると、パフォーマンス カウンターを作成して、グローバル検索のパフォーマンス カウンターを回避できます。 パフォーマンス カウンターから読み取るときに、パフォーマンス カウンターの検索を回避する方法はありません。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 には、Performance Monitor Users グループのメンバーであるか、管理者特権を持つ必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする、特権を昇格することを避けるためには、Performance Monitor Users グループに追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには標準ユーザーから管理者に、特権を昇格する必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次の例を決定するかどうかを<xref:System.Diagnostics.PerformanceCounterCategory>という名前のオブジェクト`Orders`が存在します。 例では、作成しますが、存在しない場合、<xref:System.Diagnostics.PerformanceCounterCategory>オブジェクトを使用して、<xref:System.Diagnostics.CounterCreationDataCollection>を 2 つのパフォーマンス カウンターを含むオブジェクト。  
  
 [!code-cpp[PerfCounter_ccd#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter_ccd#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter_ccd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> パラメーターが空の文字列 ("") です。  
  
- または - 
<paramref name="machineName" /> パラメーターが正しくありません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API 呼び出しに失敗しました。</exception>
        <exception cref="T:System.IO.IOException">ネットワーク パスが見つかりません。</exception>
        <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。  
  
- または - 
管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンス カウンター カテゴリを読み取る。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCategories">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>コンピューターに登録されているパフォーマンス カウンター カテゴリの一覧を取得します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCategories">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory[] GetCategories ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory[] GetCategories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCategories" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCategories () As PerformanceCounterCategory()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::PerformanceCounterCategory ^&gt; ^ GetCategories();" />
      <MemberSignature Language="F#" Value="static member GetCategories : unit -&gt; System.Diagnostics.PerformanceCounterCategory[]" Usage="System.Diagnostics.PerformanceCounterCategory.GetCategories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ローカル コンピューターに登録されているパフォーマンス カウンター カテゴリの一覧を取得します。</summary>
        <returns>配列の<see cref="T:System.Diagnostics.PerformanceCounterCategory" />ローカル コンピューターに登録されているカテゴリを示すオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 には、Performance Monitor Users グループのメンバーであるか、管理者特権を持つ必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする、特権を昇格することを避けるためには、Performance Monitor Users グループに追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには標準ユーザーから管理者に、特権を昇格する必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A>の配列を返すメソッドを<xref:System.Diagnostics.PerformanceCounterCategory>ローカル コンピューターまたは指定したコンピューターからのオブジェクト。 変換、<xref:System.Diagnostics.PerformanceCounterCategory>を並べ替え、ユーザーの表示、カテゴリ名の配列の配列。 <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A>コンピューター名が指定されたかどうかに基づいてオーバー ロードを選択します。  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountergetcat.cpp#2)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountergetcat.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcat.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API 呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンス カウンター カテゴリを読み取る。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetCategories">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory[] GetCategories (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory[] GetCategories(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCategories (machineName As String) As PerformanceCounterCategory()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::PerformanceCounterCategory ^&gt; ^ GetCategories(System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member GetCategories : string -&gt; System.Diagnostics.PerformanceCounterCategory[]" Usage="System.Diagnostics.PerformanceCounterCategory.GetCategories machineName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName">検索対象のコンピューター。</param>
        <summary>指定したコンピューターに登録されているパフォーマンス カウンター カテゴリの一覧を取得します。</summary>
        <returns>配列の<see cref="T:System.Diagnostics.PerformanceCounterCategory" />指定したコンピューターに登録されているカテゴリを示すオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ローカル コンピューター上のカテゴリを取得するには、別のオーバー ロードを使用するかを渡す"."として、`machineName`パラメーター。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 には、Performance Monitor Users グループのメンバーであるか、管理者特権を持つ必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする、特権を昇格することを避けるためには、Performance Monitor Users グループに追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには標準ユーザーから管理者に、特権を昇格する必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A>の配列を返すメソッドを<xref:System.Diagnostics.PerformanceCounterCategory>ローカル コンピューターまたは指定したコンピューターからのオブジェクト。 変換、<xref:System.Diagnostics.PerformanceCounterCategory>を並べ替え、ユーザーの表示、カテゴリ名の配列の配列。 <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A>コンピューター名が指定されたかどうかに基づいてオーバー ロードを選択します。  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountergetcat.cpp#2)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountergetcat.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcat.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="machineName" /> パラメーターが正しくありません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API 呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンス カウンター カテゴリを読み取る。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCounters">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>このパフォーマンス カウンター カテゴリのカウンターの一覧を取得します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCounters">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounter[] GetCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.PerformanceCounter[] GetCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCounters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCounters () As PerformanceCounter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Diagnostics::PerformanceCounter ^&gt; ^ GetCounters();" />
      <MemberSignature Language="F#" Value="member this.GetCounters : unit -&gt; System.Diagnostics.PerformanceCounter[]" Usage="performanceCounterCategory.GetCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>1 つのインスタンスが含まれているパフォーマンス カウンター カテゴリのカウンターの一覧を取得します。</summary>
        <returns>配列の<see cref="T:System.Diagnostics.PerformanceCounter" />この単一インスタンスのパフォーマンス カウンター カテゴリに関連付けられているカウンターを示すオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パフォーマンス オブジェクトのインスタンスの詳細については、次を参照してください。、<xref:System.Diagnostics.PerformanceCounter>クラスの概要。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 には、Performance Monitor Users グループのメンバーであるか、管理者特権を持つ必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする、特権を昇格することを避けるためには、Performance Monitor Users グループに追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには標準ユーザーから管理者に、特権を昇格する必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例の一覧を取得する、<xref:System.Diagnostics.PerformanceCounter>内のオブジェクト、<xref:System.Diagnostics.PerformanceCounterCategory>します。 最初に作成、<xref:System.Diagnostics.PerformanceCounterCategory>適切なコンス トラクター ベースのコンピューター名が指定されたかどうかにします。 次を使用して、<xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A>の配列を返すメソッドを<xref:System.Diagnostics.PerformanceCounter>を選択すると、オブジェクト、<xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A>オーバー ロードが、インスタンス名が指定されたかどうかに基づいて。  
  
 これは、<xref:System.Diagnostics.PerformanceCounterCategory.GetCounters>単一インスタンスのカテゴリと共に使用する場合を除きオーバー ロードは失敗します。  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetcount.cpp#4)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetcount.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcount.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">カテゴリは、1 つのインスタンスではありません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API 呼び出しに失敗しました。</exception>
        <exception cref="T:System.InvalidOperationException">カテゴリには、関連付けられているインスタンスはありません。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetCounters">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounter[] GetCounters (string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.PerformanceCounter[] GetCounters(string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCounters (instanceName As String) As PerformanceCounter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Diagnostics::PerformanceCounter ^&gt; ^ GetCounters(System::String ^ instanceName);" />
      <MemberSignature Language="F#" Value="member this.GetCounters : string -&gt; System.Diagnostics.PerformanceCounter[]" Usage="performanceCounterCategory.GetCounters instanceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounter[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">関連付けられているカウンターの一覧を取得する対象のパフォーマンス オブジェクト インスタンス。</param>
        <summary>1 つまたは複数のインスタンスが含まれているパフォーマンス カウンター カテゴリのカウンターの一覧を取得します。</summary>
        <returns>配列の<see cref="T:System.Diagnostics.PerformanceCounter" />このパフォーマンス カウンター カテゴリの指定したオブジェクトのインスタンスに関連付けられているカウンターを示すオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 単一インスタンスのカテゴリを表す、空の文字列を渡す ("") の`instanceName`パラメーター。  
  
 パフォーマンス オブジェクトのインスタンスの詳細については、次を参照してください。、<xref:System.Diagnostics.PerformanceCounter>クラスの概要。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 には、Performance Monitor Users グループのメンバーであるか、管理者特権を持つ必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする、特権を昇格することを避けるためには、Performance Monitor Users グループに追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには標準ユーザーから管理者に、特権を昇格する必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例の一覧を取得する、<xref:System.Diagnostics.PerformanceCounter>内のオブジェクト、<xref:System.Diagnostics.PerformanceCounterCategory>します。 最初に作成、<xref:System.Diagnostics.PerformanceCounterCategory>適切なコンス トラクター ベースのコンピューター名が指定されたかどうかにします。 次を使用して、<xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A>の配列を返すメソッドを<xref:System.Diagnostics.PerformanceCounter>を選択すると、オブジェクト、<xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A>オーバー ロードが、インスタンス名が指定されたかどうかに基づいて。  
  
 これは、<xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%28System.String%29>インスタンスを格納しているカテゴリと共に使用する場合を除きオーバー ロードは失敗します。  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetcount.cpp#4)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetcount.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcount.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instanceName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />プロパティをこの<see cref="T:System.Diagnostics.PerformanceCounterCategory" />インスタンスが設定されていません。  
  
- または - 
指定されているインスタンスが、カテゴリに含まれていない、<paramref name="instanceName" />パラメーター。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API 呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetInstanceNames">
      <MemberSignature Language="C#" Value="public string[] GetInstanceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetInstanceNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstanceNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetInstanceNames();" />
      <MemberSignature Language="F#" Value="member this.GetInstanceNames : unit -&gt; string[]" Usage="performanceCounterCategory.GetInstanceNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このカテゴリに関連付けられているパフォーマンス オブジェクトのインスタンスの一覧を取得します。</summary>
        <returns>このカテゴリに関連付けられているパフォーマンス オブジェクトのインスタンス名を表す文字列の配列、または 1 つのエントリの配列をカテゴリに 1 つだけのパフォーマンス オブジェクト インスタンスが含まれている場合、空の文字列が含まれています ("")。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 には、Performance Monitor Users グループのメンバーであるか、管理者特権を持つ必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする、特権を昇格することを避けるためには、Performance Monitor Users グループに追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには標準ユーザーから管理者に、特権を昇格する必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例の一覧を取得する、<xref:System.Diagnostics.PerformanceCounter>内のオブジェクト、<xref:System.Diagnostics.PerformanceCounterCategory>します。 最初に作成、<xref:System.Diagnostics.PerformanceCounterCategory>オブジェクト、コンピューター名が指定されたかどうかに基づいて適切なコンス トラクターを使用します。 使用して、<xref:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames%2A>にインスタンス名の配列として返されます<xref:System.String>、次に表示されます。  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetinst.cpp#6)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetinst.cs#6)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetinst.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティが <see langword="null" /> です。 プロパティが設定されていない可能性があります。  
  
- または - 
カテゴリには、関連付けられているインスタンスはありません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API 呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InstanceExists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したパフォーマンス オブジェクトのインスタンスがカテゴリに含まれるかどうかを判断します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public bool InstanceExists (string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InstanceExists(string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function InstanceExists (instanceName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InstanceExists(System::String ^ instanceName);" />
      <MemberSignature Language="F#" Value="member this.InstanceExists : string -&gt; bool" Usage="performanceCounterCategory.InstanceExists instanceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">このパフォーマンス カウンターのカテゴリを検索するパフォーマンス オブジェクト インスタンス。</param>
        <summary>これで識別されるカテゴリの指定したパフォーマンス オブジェクトのインスタンスが存在するかどうかを判断<see cref="T:System.Diagnostics.PerformanceCounterCategory" />オブジェクトの<see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />プロパティ。</summary>
        <returns>
          <see langword="true" /> カテゴリには、指定されたパフォーマンス オブジェクト インスタンスが含まれている場合それ以外の場合、<see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このオーバー ロード<xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A>ない`static`します。 作成する必要がある、<xref:System.Diagnostics.PerformanceCounterCategory>オブジェクトを設定して、<xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>プロパティ。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 には、Performance Monitor Users グループのメンバーであるか、管理者特権を持つ必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする、特権を昇格することを避けるためには、Performance Monitor Users グループに追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには標準ユーザーから管理者に、特権を昇格する必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例を決定するかどうかを<xref:System.Diagnostics.PerformanceCounter>内インスタンスに存在する、<xref:System.Diagnostics.PerformanceCounterCategory>します。 最初に作成、<xref:System.Diagnostics.PerformanceCounterCategory>オブジェクト、コンピューター名が指定されたかどうかに基づいて適切なコンス トラクターを使用します。 使用して、<xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%28System.String%29>を指定したインスタンスが存在する場合、ユーザーに通知されるかどうかを判断します。 インスタンス名が指定されていない場合は、既定の単一インスタンスの名前を使用します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcounterobjinstexists.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatobjinstexists.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティが <see langword="null" /> です。 プロパティが設定されていない可能性があります。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instanceName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API 呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンス カウンター カテゴリを読み取る。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public static bool InstanceExists (string instanceName, string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InstanceExists(string instanceName, string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InstanceExists (instanceName As String, categoryName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool InstanceExists(System::String ^ instanceName, System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member InstanceExists : string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.InstanceExists (instanceName, categoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">検索するパフォーマンス オブジェクト インスタンス。</param>
        <param name="categoryName">検索するパフォーマンス カウンターのカテゴリ。</param>
        <summary>ローカル コンピューターの指定したカテゴリが指定したパフォーマンス オブジェクトのインスタンスを含むかどうかを判断します。</summary>
        <returns>
          <see langword="true" /> カテゴリには、指定されたパフォーマンス オブジェクト インスタンスが含まれている場合それ以外の場合、<see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 検索する特定のカテゴリを指定せず、そのパフォーマンス オブジェクト インスタンスが、コンピューターに存在するかどうかを判断することはできません。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 には、Performance Monitor Users グループのメンバーであるか、管理者特権を持つ必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする、特権を昇格することを避けるためには、Performance Monitor Users グループに追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには標準ユーザーから管理者に、特権を昇格する必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例の静的なオーバー ロードを使用して<xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A>を決定するかどうか、指定された<xref:System.Diagnostics.PerformanceCounter>にインスタンスが存在する、<xref:System.Diagnostics.PerformanceCounterCategory>します。 オーバー ロードは、コンピューター名を指定するかどうかに基づいて選択されます。 インスタンス名が指定されていない場合は、既定の単一インスタンスの名前を使用します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatinstexists.cs#10)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatinstexists.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instanceName" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="categoryName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> パラメーターが空の文字列 ("") です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API 呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンス カウンター カテゴリを読み取る。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public static bool InstanceExists (string instanceName, string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InstanceExists(string instanceName, string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InstanceExists (instanceName As String, categoryName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool InstanceExists(System::String ^ instanceName, System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member InstanceExists : string * string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.InstanceExists (instanceName, categoryName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">検索するパフォーマンス オブジェクト インスタンス。</param>
        <param name="categoryName">検索するパフォーマンス カウンターのカテゴリ。</param>
        <param name="machineName">カテゴリ インスタンスのペアの検索対象のコンピューターの名前。</param>
        <summary>指定したコンピューターで指定されたカテゴリが指定したパフォーマンス オブジェクトのインスタンスを含むかどうかを判断します。</summary>
        <returns>
          <see langword="true" /> カテゴリには、指定されたパフォーマンス オブジェクト インスタンスが含まれている場合それ以外の場合、<see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 検索する特定のカテゴリを指定せず、そのパフォーマンス オブジェクト インスタンスが、コンピューターに存在するかどうかを判断することはできません。  
  
 使用することができます"."ローカル コンピューターを指定します。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 には、Performance Monitor Users グループのメンバーであるか、管理者特権を持つ必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする、特権を昇格することを避けるためには、Performance Monitor Users グループに追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには標準ユーザーから管理者に、特権を昇格する必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例の静的なオーバー ロードを使用して<xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A>を決定するかどうか、指定された<xref:System.Diagnostics.PerformanceCounter>にインスタンスが存在する、<xref:System.Diagnostics.PerformanceCounterCategory>します。 オーバー ロードは、コンピューター名を指定するかどうかに基づいて選択されます。 インスタンス名が指定されていない場合は、既定の単一インスタンスの名前を使用します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatinstexists.cs#10)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatinstexists.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instanceName" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="categoryName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> パラメーターが空の文字列 ("") です。  
  
- または - 
<paramref name="machineName" /> パラメーターが正しくありません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API 呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンス カウンター カテゴリを読み取る。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string with get, set" Usage="System.Diagnostics.PerformanceCounterCategory.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定がこのカテゴリが存在するコンピューターの名前。</summary>
        <value>パフォーマンス カウンター カテゴリと関連するカウンターが存在するコンピューターの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を作成、<xref:System.Diagnostics.PerformanceCounterCategory>で、<xref:System.Diagnostics.PerformanceCounterCategory.%23ctor>コンス トラクター。 ユーザーが要求、<xref:System.Diagnostics.PerformanceCounterCategory>と、コンピューター名を設定し、<xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>と<xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>入力された値からのプロパティ。 値を表示し、 <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>、 <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>、および<xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A>プロパティ、またはその場合、エラー メッセージを表示、<xref:System.Diagnostics.PerformanceCounterCategory>にアクセスできません。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />構文が無効です。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンス カウンター カテゴリを読み取る。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="ReadCategory">
      <MemberSignature Language="C#" Value="public System.Diagnostics.InstanceDataCollectionCollection ReadCategory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.InstanceDataCollectionCollection ReadCategory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.ReadCategory" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadCategory () As InstanceDataCollectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::InstanceDataCollectionCollection ^ ReadCategory();" />
      <MemberSignature Language="F#" Value="member this.ReadCategory : unit -&gt; System.Diagnostics.InstanceDataCollectionCollection" Usage="performanceCounterCategory.ReadCategory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.InstanceDataCollectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべてカウンターとパフォーマンス オブジェクト インスタンスのデータに関連付けられたこのパフォーマンス カウンター カテゴリを読み取ります。</summary>
        <returns>
          <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" />カテゴリのカウンターとパフォーマンス オブジェクト インスタンス データを格納しています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定する必要があります、<xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>プロパティを呼び出す前に<xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A>します。  
  
 カテゴリ全体を一度に読み取るは、システムがデータを提供するための 1 つのカウンターを読み取り中としてを効率化できます。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 には、Performance Monitor Users グループのメンバーであるか、管理者特権を持つ必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする、特権を昇格することを避けるためには、Performance Monitor Users グループに追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには標準ユーザーから管理者に、特権を昇格する必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例を作成、<xref:System.Diagnostics.PerformanceCounterCategory>指定した<xref:System.Diagnostics.PerformanceCounterCategory>名。 使用して、<xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A>を返す、<xref:System.Diagnostics.InstanceDataCollectionCollection>のすべてのインスタンスのインスタンス データを格納している、<xref:System.Diagnostics.PerformanceCounter>内のオブジェクトは、<xref:System.Diagnostics.PerformanceCounterCategory>します。  
  
 [!code-csharp[System.Diagnostics.InstanceData.CopyTo#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/CS/instdatacopyto.cs#6)]
 [!code-vb[System.Diagnostics.InstanceData.CopyTo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/VB/instdatacopyto.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティが <see langword="null" /> です。 プロパティが設定されていない可能性があります。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API 呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <altmember cref="T:System.Diagnostics.InstanceDataCollectionCollection" />
        <altmember cref="T:System.Diagnostics.InstanceDataCollection" />
        <altmember cref="T:System.Diagnostics.InstanceData" />
      </Docs>
    </Member>
  </Members>
</Type>