<Type Name="DataReceivedEventHandler" FullName="System.Diagnostics.DataReceivedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b72e96be77b3f18942ac9258ea5a047960ff7583" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void DataReceivedEventHandler(object sender, DataReceivedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DataReceivedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DataReceivedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub DataReceivedEventHandler(sender As Object, e As DataReceivedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void DataReceivedEventHandler(System::Object ^ sender, DataReceivedEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Diagnostics.DataReceivedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="aae3c-101">The source of the event.</span>
      <span class="sxs-lookup">
        <span data-stu-id="aae3c-101">The source of the event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="aae3c-102">A <see cref="T:System.Diagnostics.DataReceivedEventArgs" /> that contains the event data.</span>
      <span class="sxs-lookup">
        <span data-stu-id="aae3c-102">A <see cref="T:System.Diagnostics.DataReceivedEventArgs" /> that contains the event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="aae3c-103">Represents the method that will handle the <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> event or <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> event of a <see cref="T:System.Diagnostics.Process" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="aae3c-103">Represents the method that will handle the <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> event or <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> event of a <see cref="T:System.Diagnostics.Process" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aae3c-104"><xref:System.Diagnostics.DataReceivedEventHandler> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="aae3c-104">When you create a <xref:System.Diagnostics.DataReceivedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="aae3c-105">イベントをイベント ハンドラーに関連付けるには、デリゲートのインスタンスをイベントに追加します。</span><span class="sxs-lookup"><span data-stu-id="aae3c-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="aae3c-106">デリゲートを削除しない限り、そのイベントが発生すると常にイベント ハンドラーが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="aae3c-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="aae3c-107">イベント ハンドラー デリゲートの詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="aae3c-107">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="aae3c-108">リダイレクトされたを非同期的に収集する<xref:System.Diagnostics.Process.StandardOutput%2A>または<xref:System.Diagnostics.Process.StandardError%2A>ストリームは、プロセスの出力、イベント ハンドラーを追加、<xref:System.Diagnostics.Process.OutputDataReceived>または<xref:System.Diagnostics.Process.ErrorDataReceived>イベント。</span><span class="sxs-lookup"><span data-stu-id="aae3c-108">To asynchronously collect the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream output of a process, add your event handler to the <xref:System.Diagnostics.Process.OutputDataReceived> or <xref:System.Diagnostics.Process.ErrorDataReceived> event.</span></span> <span data-ttu-id="aae3c-109">プロセスでは、対応するリダイレクトされたストリームに行を書き込むたびに、これらのイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="aae3c-109">These events are raised each time the process writes a line to the corresponding redirected stream.</span></span> <span data-ttu-id="aae3c-110">リダイレクトされたストリームが閉じている場合、null の行は、イベント ハンドラーに送信されます。</span><span class="sxs-lookup"><span data-stu-id="aae3c-110">When the redirected stream is closed, a null line is sent to the event handler.</span></span> <span data-ttu-id="aae3c-111">アクセスする前にこの条件を調べ、イベント ハンドラーを確認してください、<xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="aae3c-111">Ensure that your event handler checks for this condition before accessing the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property.</span></span> <span data-ttu-id="aae3c-112">たとえば、使用することができます、`static`メソッド<xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType>を検証する、<xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>イベント ハンドラーのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="aae3c-112">For example, you can use the `static` method <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> to validate the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property in your event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aae3c-113">次のコード例は、リダイレクトされたで、非同期読み取り操作を実行する方法を示しています。<xref:System.Diagnostics.Process.StandardOutput%2A>のストリーム、**並べ替え**コマンド。</span><span class="sxs-lookup"><span data-stu-id="aae3c-113">The following code example illustrates how to perform asynchronous read operations on the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream of the **sort** command.</span></span> <span data-ttu-id="aae3c-114">**並べ替え**コマンドは、コンソール アプリケーションを読み取り、テキスト入力を並べ替えています。</span><span class="sxs-lookup"><span data-stu-id="aae3c-114">The **sort** command is a console application that reads and sorts text input.</span></span>  
  
 <span data-ttu-id="aae3c-115">例は、作成、<xref:System.Diagnostics.DataReceivedEventHandler>の委任、`SortOutputHandler`イベント ハンドラーを持つデリゲートを関連付けると、<xref:System.Diagnostics.Process.OutputDataReceived>イベント。</span><span class="sxs-lookup"><span data-stu-id="aae3c-115">The example creates a <xref:System.Diagnostics.DataReceivedEventHandler> delegate for the `SortOutputHandler` event handler and associates the delegate with the <xref:System.Diagnostics.Process.OutputDataReceived> event.</span></span> <span data-ttu-id="aae3c-116">イベント ハンドラーは、テキストの行からリダイレクトされた<xref:System.Diagnostics.Process.StandardOutput%2A>ストリームは、テキストを書式化して、画面にテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="aae3c-116">The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/sort_async.cpp#1)]
 [!code-csharp[Process_AsyncStreams#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/sort_async.cs#1)]
 [!code-vb[Process_AsyncStreams#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/sort_async.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.DataReceivedEventArgs" />
    <altmember cref="E:System.Diagnostics.Process.OutputDataReceived" />
    <altmember cref="E:System.Diagnostics.Process.ErrorDataReceived" />
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
</Type>