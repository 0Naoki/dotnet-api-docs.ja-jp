<Type Name="DelimitedListTraceListener" FullName="System.Diagnostics.DelimitedListTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="467b614a9231624c7603b6a3d441cfb425e29ef0" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69076568" /></Metadata><TypeSignature Language="C#" Value="public class DelimitedListTraceListener : System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DelimitedListTraceListener extends System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DelimitedListTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class DelimitedListTraceListener&#xA;Inherits TextWriterTraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class DelimitedListTraceListener : System::Diagnostics::TextWriterTraceListener" />
  <TypeSignature Language="F#" Value="type DelimitedListTraceListener = class&#xA;    inherit TextWriterTraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TextWriterTraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="72e61-101">トレース出力またはデバッグ出力をストリーム ライターなどのテキスト ライターや、ファイル ストリームなどのストリームに転送します。</span><span class="sxs-lookup"><span data-stu-id="72e61-101">Directs tracing or debugging output to a text writer, such as a stream writer, or to a stream, such as a file stream.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e61-102">トレース出力は、<xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> プロパティによって指定された区切り記号を使用する、区切られたテキスト形式です。</span><span class="sxs-lookup"><span data-stu-id="72e61-102">The trace output is in a delimited text format that uses the delimiter specified by the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property.</span></span> <span data-ttu-id="72e61-103">区切り記号は、出力行の各フィールドを終了するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="72e61-103">The delimiter is used to terminate each field in a line of output.</span></span> <span data-ttu-id="72e61-104">たとえば、Microsoft Excel スプレッドシートでトレース出力を表示するには、コンマ (",") を区切り記号として指定し、コンマ区切り値 (CSV) ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="72e61-104">For example, to display the trace output in a Microsoft Excel spreadsheet, you might specify a comma (",") as a delimiter and create a comma-separated value (CSV) file.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="72e61-105"><xref:System.IDisposable> インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="72e61-105"><xref:System.IDisposable> interface.</span></span> <span data-ttu-id="72e61-106">型の使用が完了したら、直接的または間接的に型を破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="72e61-106">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="72e61-107">型を直接破棄するに<xref:System.IDisposable.Dispose%2A>は、`catch`ブロック`try` /でメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="72e61-107">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a`try`/`catch` block.</span></span> <span data-ttu-id="72e61-108">間接的に型を破棄するには、`using` (C# の場合) または `Using` (Visual Basic 言語) などの言語構成要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="72e61-108">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="72e61-109">詳細については、<xref:System.IDisposable> インターフェイスに関するトピック内の「IDisposable を実装するオブジェクトの使用」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="72e61-109">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="72e61-110">アプリケーション構成ファイルを使用し<xref:System.Diagnostics.DelimitedListTraceListener>てを有効または無効にし、アプリケーション<xref:System.Diagnostics.DelimitedListTraceListener>で構成されたを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="72e61-110">You can enable or disable a <xref:System.Diagnostics.DelimitedListTraceListener> through the application configuration file and then use the configured <xref:System.Diagnostics.DelimitedListTraceListener> in your application.</span></span> <span data-ttu-id="72e61-111">または、コードにを<xref:System.Diagnostics.DelimitedListTraceListener>作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="72e61-111">Alternately, you can create a <xref:System.Diagnostics.DelimitedListTraceListener> in your code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72e61-112">では、 `Trace`または<xref:System.Diagnostics.DelimitedListTraceListener> <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A?displayProperty=nameWithType> のように、という単語で始まる名前を持つメソッドを使用して出力<xref:System.Diagnostics.Trace.TraceWarning%2A?displayProperty=nameWithType>されるテキストのみを区切ります。</span><span class="sxs-lookup"><span data-stu-id="72e61-112">The <xref:System.Diagnostics.DelimitedListTraceListener> delimits only text that is emitted by using the methods that have names starting with the word `Trace`, such as <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A?displayProperty=nameWithType> or <xref:System.Diagnostics.Trace.TraceWarning%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="72e61-113">メソッド<xref:System.Diagnostics.Debug.Write%2A?displayProperty=nameWithType> と<xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A?displayProperty=nameWithType>メソッドを使用して出力されたトレースデータは、区切られていません。</span><span class="sxs-lookup"><span data-stu-id="72e61-113">Trace data that is emitted by using the <xref:System.Diagnostics.Debug.Write%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A?displayProperty=nameWithType> methods is not delimited.</span></span>  
  
 <span data-ttu-id="72e61-114">を構成<xref:System.Diagnostics.DelimitedListTraceListener>するには、アプリケーションの名前に対応する構成ファイルを編集します。</span><span class="sxs-lookup"><span data-stu-id="72e61-114">To configure a <xref:System.Diagnostics.DelimitedListTraceListener>, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="72e61-115">このファイルでは、リスナーの追加、リスナーのプロパティの設定、またはリスナーの削除を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="72e61-115">In this file, you can add a listener, set the properties for a listener, or remove a listener.</span></span> <span data-ttu-id="72e61-116">構成ファイルは、次の例に示すように書式設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="72e61-116">The configuration file should be formatted as shown in the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="delimitedListener"   
          type="System.Diagnostics.DelimitedListTraceListener"   
          delimiter=","   
          initializeData="delimitedOutput.csv"   
          traceOutputOptions="ProcessId, DateTime" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
> [!NOTE]
>  <span data-ttu-id="72e61-117">使用中または使用できないファイルへの書き込みを試行した場合、ファイル名の先頭に GUID が自動的に付けられます。</span><span class="sxs-lookup"><span data-stu-id="72e61-117">If you try to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72e61-118">リスナーは<xref:System.Diagnostics.Debug>、、 <xref:System.Diagnostics.Trace>、および<xref:System.Diagnostics.TraceSource>クラスのメソッドがトレース情報を書き込むために使用することを意図しています。</span><span class="sxs-lookup"><span data-stu-id="72e61-118">Listeners are intended to be used by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace information.</span></span> <span data-ttu-id="72e61-119">リスナーメソッドは、コンストラクターを除き、アプリケーションコードから直接呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="72e61-119">Listener methods, except for constructors, should not be called directly from application code.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="72e61-120"><see cref="T:System.Diagnostics.DelimitedListTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="72e61-120">Initializes a new instance of the <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimitedListTraceListener (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelimitedListTraceListener(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.DelimitedListTraceListener : System.IO.Stream -&gt; System.Diagnostics.DelimitedListTraceListener" Usage="new System.Diagnostics.DelimitedListTraceListener stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="72e61-121">出力を受信する <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="72e61-121">The <see cref="T:System.IO.Stream" /> to receive the output.</span></span></param>
        <summary><span data-ttu-id="72e61-122">指定された出力ストリームへの書き込みを行う <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="72e61-122">Initializes a new instance of the <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> class that writes to the specified output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e61-123">このコンストラクターは、 <xref:System.Diagnostics.TraceListener.Name%2A>プロパティを空の文字列 ("") に初期化します。</span><span class="sxs-lookup"><span data-stu-id="72e61-123">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="72e61-124"><paramref name="stream" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="72e61-124"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimitedListTraceListener (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelimitedListTraceListener(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.DelimitedListTraceListener : System.IO.TextWriter -&gt; System.Diagnostics.DelimitedListTraceListener" Usage="new System.Diagnostics.DelimitedListTraceListener writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="72e61-125">出力を受信する <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="72e61-125">The <see cref="T:System.IO.TextWriter" /> to receive the output.</span></span></param>
        <summary><span data-ttu-id="72e61-126">指定されたテキスト ライターへの書き込みを行う <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="72e61-126">Initializes a new instance of the <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> class that writes to the specified text writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e61-127">このコンストラクターは、 <xref:System.Diagnostics.TraceListener.Name%2A>プロパティを空の文字列 ("") に初期化します。</span><span class="sxs-lookup"><span data-stu-id="72e61-127">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="72e61-128"><paramref name="writer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="72e61-128"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimitedListTraceListener (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelimitedListTraceListener(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.DelimitedListTraceListener : string -&gt; System.Diagnostics.DelimitedListTraceListener" Usage="new System.Diagnostics.DelimitedListTraceListener fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="72e61-129">出力を受信するファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="72e61-129">The name of the file to receive the output.</span></span></param>
        <summary><span data-ttu-id="72e61-130">指定されたファイルへの書き込みを行う <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="72e61-130">Initializes a new instance of the <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> class that writes to the specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e61-131">このコンストラクターは、 <xref:System.Diagnostics.TraceListener.Name%2A>プロパティを空の文字列 ("") に初期化します。</span><span class="sxs-lookup"><span data-stu-id="72e61-131">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="72e61-132"><paramref name="fileName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="72e61-132"><paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimitedListTraceListener (System.IO.Stream stream, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelimitedListTraceListener(System::IO::Stream ^ stream, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.DelimitedListTraceListener : System.IO.Stream * string -&gt; System.Diagnostics.DelimitedListTraceListener" Usage="new System.Diagnostics.DelimitedListTraceListener (stream, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="72e61-133">出力を受信する <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="72e61-133">The <see cref="T:System.IO.Stream" /> to receive the output.</span></span></param>
        <param name="name"><span data-ttu-id="72e61-134">トレース リスナーの新しいインスタンスの名前。</span><span class="sxs-lookup"><span data-stu-id="72e61-134">The name of the new instance of the trace listener.</span></span></param>
        <summary><span data-ttu-id="72e61-135">指定された出力ストリームへの書き込みを行い、指定された名前を持つ、<see cref="T:System.Diagnostics.DelimitedListTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="72e61-135">Initializes a new instance of the <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> class that writes to the specified output stream and has the specified name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e61-136">このコンストラクターは、 <xref:System.Diagnostics.TraceListener.Name%2A> `name`パラメーターの値にプロパティを初期化するか、 `name`パラメーターが`null`の場合は空の文字列 ("") に初期化します。</span><span class="sxs-lookup"><span data-stu-id="72e61-136">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the value of the `name` parameter, or to an empty string ("") if the `name` parameter is `null`.</span></span>  <span data-ttu-id="72e61-137">プロパティをコレクションの`Listeners`インデックスとして使用すると、リスナーのプロパティをプログラムで変更できます。 <xref:System.Diagnostics.TraceListener.Name%2A></span><span class="sxs-lookup"><span data-stu-id="72e61-137">The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="72e61-138">たとえば、次のコードは、" <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> delimListener" という名前<xref:System.Diagnostics.DelimitedListTraceListener>ののインスタンスのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="72e61-138">For example, the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name "delimListener":</span></span>  
  
```csharp  
((DelimitedListTraceListener)Trace.Listeners["delimListener"]).Delimiter = ":"  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="72e61-139"><paramref name="stream" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="72e61-139"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimitedListTraceListener (System.IO.TextWriter writer, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelimitedListTraceListener(System::IO::TextWriter ^ writer, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.DelimitedListTraceListener : System.IO.TextWriter * string -&gt; System.Diagnostics.DelimitedListTraceListener" Usage="new System.Diagnostics.DelimitedListTraceListener (writer, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="72e61-140">出力を受信する <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="72e61-140">The <see cref="T:System.IO.TextWriter" /> to receive the output.</span></span></param>
        <param name="name"><span data-ttu-id="72e61-141">トレース リスナーの新しいインスタンスの名前。</span><span class="sxs-lookup"><span data-stu-id="72e61-141">The name of the new instance of the trace listener.</span></span></param>
        <summary><span data-ttu-id="72e61-142">指定されたテキスト ライターへの書き込みを行い、指定された名前を持つ、<see cref="T:System.Diagnostics.DelimitedListTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="72e61-142">Initializes a new instance of the <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> class that writes to the specified text writer and has the specified name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e61-143">このコンストラクターは、 <xref:System.Diagnostics.TraceListener.Name%2A> `name`パラメーターの値にプロパティを初期化するか、 `name`パラメーターが`null`の場合は空の文字列 ("") に初期化します。</span><span class="sxs-lookup"><span data-stu-id="72e61-143">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the value of the `name` parameter, or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="72e61-144">プロパティをコレクションの`Listeners`インデックスとして使用すると、リスナーのプロパティをプログラムで変更できます。 <xref:System.Diagnostics.TraceListener.Name%2A></span><span class="sxs-lookup"><span data-stu-id="72e61-144">The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="72e61-145">たとえば、次のコードは、 <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> "delimListener" という<xref:System.Diagnostics.DelimitedListTraceListener>名前のインスタンスのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="72e61-145">For example the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name "delimListener":</span></span>  
  
```csharp  
((DelimitedListTraceListener)Trace.Listeners["delimListener"]).Delimiter = ":"  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="72e61-146"><paramref name="writer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="72e61-146"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimitedListTraceListener (string fileName, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelimitedListTraceListener(System::String ^ fileName, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.DelimitedListTraceListener : string * string -&gt; System.Diagnostics.DelimitedListTraceListener" Usage="new System.Diagnostics.DelimitedListTraceListener (fileName, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="72e61-147">出力を受信するファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="72e61-147">The name of the file to receive the output.</span></span></param>
        <param name="name"><span data-ttu-id="72e61-148">トレース リスナーの新しいインスタンスの名前。</span><span class="sxs-lookup"><span data-stu-id="72e61-148">The name of the new instance of the trace listener.</span></span></param>
        <summary><span data-ttu-id="72e61-149">指定されたファイルへの書き込みを行い、指定された名前を持つ、<see cref="T:System.Diagnostics.DelimitedListTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="72e61-149">Initializes a new instance of the <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> class that writes to the specified file and has the specified name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e61-150">このコンストラクターは、エンコーディングを使用<xref:System.IO.StreamWriter>して<xref:System.Text.Encoding.UTF8%2A> 、指定されたパスの指定されたファイルのクラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="72e61-150">This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding.</span></span> <span data-ttu-id="72e61-151">ファイルが存在する場合は、に追加されます。</span><span class="sxs-lookup"><span data-stu-id="72e61-151">If the file exists, it is appended to.</span></span> <span data-ttu-id="72e61-152">ファイルが存在しない場合は、新しいファイルが作成されます。</span><span class="sxs-lookup"><span data-stu-id="72e61-152">If the file does not exist, a new file is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72e61-153">例外が発生する可能性を減らすために、出力を無効にする可能性のある文字は "?" 文字に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="72e61-153">To reduce the chance of an exception, any character that might invalidate the output is replaced with a "?" character.</span></span>  
  
 <span data-ttu-id="72e61-154">プロパティ<xref:System.Diagnostics.TraceListener.Name%2A> `name`がパラメーターの値に設定されているか、 `name`パラメーターが`null`の場合は空の文字列 ("") に設定されています。</span><span class="sxs-lookup"><span data-stu-id="72e61-154">The <xref:System.Diagnostics.TraceListener.Name%2A> property is set to the value of the `name` parameter, or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="72e61-155">プロパティをコレクションの`Listeners`インデックスとして使用すると、リスナーのプロパティをプログラムで変更できます。 <xref:System.Diagnostics.TraceListener.Name%2A></span><span class="sxs-lookup"><span data-stu-id="72e61-155">The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="72e61-156">たとえば、次のコードは、" <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> delimListener" という名前<xref:System.Diagnostics.DelimitedListTraceListener>ののインスタンスのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="72e61-156">For example, the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name "delimListener":</span></span>  
  
```csharp  
((DelimitedListTraceListener)Trace.Listeners["delimListener"]).Delimiter = ":"  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="72e61-157"><paramref name="fileName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="72e61-157"><paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DelimitedListTraceListener.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Delimiter : string with get, set" Usage="System.Diagnostics.DelimitedListTraceListener.Delimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72e61-158">区切りリストの区切り記号を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="72e61-158">Gets or sets the delimiter for the delimited list.</span></span></summary>
        <value><span data-ttu-id="72e61-159">区切りリストの区切り記号。</span><span class="sxs-lookup"><span data-stu-id="72e61-159">The delimiter for the delimited list.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e61-160">既定の区切り記号は ";" です。(セミコロン)。</span><span class="sxs-lookup"><span data-stu-id="72e61-160">The default delimiter is ";" (semicolon).</span></span> <span data-ttu-id="72e61-161">次の構成ファイルの例は、構成ファイル<xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>で`delimiter`属性を使用してプロパティを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="72e61-161">The following configuration file example shows the setting of the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property using the `delimiter` attribute in a configuration file:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="delimitedListener"   
          type="System.Diagnostics.DelimitedListTraceListener"   
          delimiter=":"   
          initializeData="delimitedOutput.txt"   
          traceOutputOptions="ProcessId, DateTime" />  
        <remove name="Default" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="72e61-162"><see cref="P:System.Diagnostics.DelimitedListTraceListener.Delimiter" /> が <see langword="null" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="72e61-162"><see cref="P:System.Diagnostics.DelimitedListTraceListener.Delimiter" /> is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="72e61-163"><see cref="P:System.Diagnostics.DelimitedListTraceListener.Delimiter" /> が空の文字列 ("") に設定されています。</span><span class="sxs-lookup"><span data-stu-id="72e61-163"><see cref="P:System.Diagnostics.DelimitedListTraceListener.Delimiter" /> is set to an empty string ("").</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected internal override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="override this.GetSupportedAttributes : unit -&gt; string[]" Usage="delimitedListTraceListener.GetSupportedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="72e61-164">区切り記号を使用するトレース リスナーによってサポートされているカスタム構成ファイル属性を返します。</span><span class="sxs-lookup"><span data-stu-id="72e61-164">Returns the custom configuration file attribute supported by the delimited trace listener.</span></span></summary>
        <returns><span data-ttu-id="72e61-165">単一の値 "delimiter" を含む文字列配列。</span><span class="sxs-lookup"><span data-stu-id="72e61-165">A string array that contains the single value "delimiter".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e61-166">カスタム属性は、クラスのプロパティを設定するために使用できる基本クラスから継承されない属性です。</span><span class="sxs-lookup"><span data-stu-id="72e61-166">A custom attribute is an attribute that is not inherited from the base class that can be used to set a property for the class.</span></span> <span data-ttu-id="72e61-167">の<xref:System.Diagnostics.DelimitedListTraceListener>カスタム属性は、 <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>プロパティを設定するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="72e61-167">The custom attribute for <xref:System.Diagnostics.DelimitedListTraceListener> is used to set the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property.</span></span> <span data-ttu-id="72e61-168">次の構成ファイルの例は、 `delimiter`属性を使用して<xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>プロパティを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="72e61-168">The following configuration file example shows the use of the `delimiter` attribute to set the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="delimitedListener"   
          type="System.Diagnostics.DelimitedListTraceListener"   
          delimiter=":"   
          initializeData="delimitedOutput.txt"   
          traceOutputOptions="ProcessId, DateTime" />  
        <remove name="Default" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="72e61-169">トレース データを出力ファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="72e61-169">Writes trace data to the output file or stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="delimitedListTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="72e61-170">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72e61-170">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="72e61-171">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</span><span class="sxs-lookup"><span data-stu-id="72e61-171">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="72e61-172">トレースを発生させたイベントのタイプを指定する <see cref="T:System.Diagnostics.TraceEventType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="72e61-172">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="72e61-173">イベントの数値識別子。</span><span class="sxs-lookup"><span data-stu-id="72e61-173">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="72e61-174">出力ファイルまたは出力ストリームに書き込むデータ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72e61-174">A data object to write to the output file or stream.</span></span></param>
        <summary><span data-ttu-id="72e61-175">トレース情報、データ オブジェクト、およびイベント情報を出力ファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="72e61-175">Writes trace information, a data object, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e61-176">`source` 、`eventType`、および`id`の各パラメーターの値は、ヘッダーとして書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="72e61-176">The values of the `source`, `eventType`, and `id` parameters are written as a header.</span></span> <span data-ttu-id="72e61-177">データオブジェクトは、オブジェクトの`ToString`メソッドを使用して文字列に変換されます。</span><span class="sxs-lookup"><span data-stu-id="72e61-177">The data object is converted to a string using the `ToString` method of the object.</span></span> <span data-ttu-id="72e61-178">データは、 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティの値に応じて内容が異なるフッターとして書き込まれます。 `eventCache`</span><span class="sxs-lookup"><span data-stu-id="72e61-178">The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="72e61-179">メソッド<xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A>は、アプリケーションコードから呼び出すためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="72e61-179">The <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> method is not intended to be called by application code.</span></span> <span data-ttu-id="72e61-180">これは<xref:System.Diagnostics.Debug>、、 <xref:System.Diagnostics.Trace>、および<xref:System.Diagnostics.TraceSource>クラスのメソッドによって呼び出され、トレースデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="72e61-180">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="delimitedListTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="72e61-181">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72e61-181">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="72e61-182">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</span><span class="sxs-lookup"><span data-stu-id="72e61-182">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="72e61-183">トレースを発生させたイベントのタイプを指定する <see cref="T:System.Diagnostics.TraceEventType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="72e61-183">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="72e61-184">イベントの数値識別子。</span><span class="sxs-lookup"><span data-stu-id="72e61-184">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="72e61-185">出力ファイルまたはストリームに書き込むデータ オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="72e61-185">An array of data objects to write to the output file or stream.</span></span></param>
        <summary><span data-ttu-id="72e61-186">トレース情報、データ オブジェクトの配列、およびイベント情報を出力ファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="72e61-186">Writes trace information, an array of data objects, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e61-187">`source` 、`eventType`、および`id`の各パラメーターの値は、ヘッダーとして書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="72e61-187">The values of the `source`, `eventType`, and `id` parameters are written as a header.</span></span> <span data-ttu-id="72e61-188">データオブジェクトは、各オブジェクトの`ToString`メソッドを使用して文字列に変換されます。</span><span class="sxs-lookup"><span data-stu-id="72e61-188">The data objects are converted to strings using the `ToString` method of each object.</span></span> <span data-ttu-id="72e61-189">データは、 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティの値に応じて内容が異なるフッターとして書き込まれます。 `eventCache`</span><span class="sxs-lookup"><span data-stu-id="72e61-189">The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="72e61-190">メソッド<xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A>は、アプリケーションコードから呼び出すためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="72e61-190">The <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> method is not intended to be called by application code.</span></span> <span data-ttu-id="72e61-191">これは<xref:System.Diagnostics.Debug>、、 <xref:System.Diagnostics.Trace>、および<xref:System.Diagnostics.TraceSource>クラスのメソッドによって呼び出され、トレースデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="72e61-191">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="72e61-192">イベント トレース情報を出力ファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="72e61-192">Writes event trace information to an output file or stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="delimitedListTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="72e61-193">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72e61-193">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="72e61-194">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</span><span class="sxs-lookup"><span data-stu-id="72e61-194">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="72e61-195">トレースを発生させたイベントのタイプを指定する <see cref="T:System.Diagnostics.TraceEventType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="72e61-195">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="72e61-196">イベントの数値識別子。</span><span class="sxs-lookup"><span data-stu-id="72e61-196">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="72e61-197">出力ファイルまたはストリームに書き込むトレース メッセージ。</span><span class="sxs-lookup"><span data-stu-id="72e61-197">The trace message to write to the output file or stream.</span></span></param>
        <summary><span data-ttu-id="72e61-198">トレース情報、メッセージ、およびイベント情報を出力ファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="72e61-198">Writes trace information, a message, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e61-199">`source`、 `message` 、およびの`id`各パラメーターの値はヘッダーとして記述され、その後にデータが書き込まれます。 `eventType`</span><span class="sxs-lookup"><span data-stu-id="72e61-199">The values of the `source`, `eventType`, and `id` parameters are written as a header, followed by the `message` data.</span></span> <span data-ttu-id="72e61-200">データは、 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティの値に応じて内容が異なるフッターとして書き込まれます。 `eventCache`</span><span class="sxs-lookup"><span data-stu-id="72e61-200">The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="72e61-201">メソッド<xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A>は、アプリケーションコードから呼び出すためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="72e61-201">The <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> method is not intended to be called by application code.</span></span> <span data-ttu-id="72e61-202">これは<xref:System.Diagnostics.Debug>、、 <xref:System.Diagnostics.Trace>、および<xref:System.Diagnostics.TraceSource>クラスのメソッドによって呼び出され、トレースデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="72e61-202">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="delimitedListTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="72e61-203">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72e61-203">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="72e61-204">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</span><span class="sxs-lookup"><span data-stu-id="72e61-204">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="72e61-205">トレースを発生させたイベントのタイプを指定する <see cref="T:System.Diagnostics.TraceEventType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="72e61-205">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="72e61-206">イベントの数値識別子。</span><span class="sxs-lookup"><span data-stu-id="72e61-206">A numeric identifier for the event.</span></span></param>
        <param name="format"><span data-ttu-id="72e61-207">0 個以上の書式項目を格納している書式指定文字列。<paramref name="args" /> 配列内のオブジェクトに対応します。</span><span class="sxs-lookup"><span data-stu-id="72e61-207">A format string that contains zero or more format items that correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="72e61-208">0 個以上の書式設定対象オブジェクトを含んだ配列。</span><span class="sxs-lookup"><span data-stu-id="72e61-208">An array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="72e61-209">トレース情報、書式設定されたオブジェクトの配列、およびイベント情報を出力ファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="72e61-209">Writes trace information, a formatted array of objects, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e61-210">`source` 、`eventType`、および`id`の各パラメーターの値は、ヘッダーとして書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="72e61-210">The values of the `source`, `eventType`, and `id` parameters are written as a header.</span></span> <span data-ttu-id="72e61-211">オブジェクト配列は、 <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>メソッドを使用して文字列に変換され`format` 、文字列`args`と配列を渡して、トレースのメッセージ部分として文字列の書式を設定します。 `args`</span><span class="sxs-lookup"><span data-stu-id="72e61-211">The `args` object array is converted to a string using the <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method, passing the `format` string and `args` array to format the string as the message portion of the trace.</span></span> <span data-ttu-id="72e61-212">データは、 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティの値に応じて内容が異なるフッターとして書き込まれます。 `eventCache`</span><span class="sxs-lookup"><span data-stu-id="72e61-212">The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="72e61-213">メソッド<xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A>は、アプリケーションコードから呼び出すためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="72e61-213">The <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> method is not intended to be called by application code.</span></span> <span data-ttu-id="72e61-214">これは<xref:System.Diagnostics.Debug>、、 <xref:System.Diagnostics.Trace>、および<xref:System.Diagnostics.TraceSource>クラスのメソッドによって呼び出され、トレースデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="72e61-214">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
