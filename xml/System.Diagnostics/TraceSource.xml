<Type Name="TraceSource" FullName="System.Diagnostics.TraceSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5d419a2319360270f7b350c1deb0a013ba37a66d" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52194156" /></Metadata><TypeSignature Language="C#" Value="public class TraceSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TraceSource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceSource" />
  <TypeSignature Language="VB.NET" Value="Public Class TraceSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceSource" />
  <TypeSignature Language="F#" Value="type TraceSource = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>アプリケーションでコードの実行をトレースしてトレース メッセージをソースに関連付けることができるようにする、メソッドおよびプロパティのセットを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource> クラスをアプリケーションで使用すると、アプリケーションに関連付けることができるトレースを生成できます。 <xref:System.Diagnostics.TraceSource> は、イベントのトレース、データのトレース、および情報トレースの発行を簡単に実行できるトレース メソッドを提供します。 トレース出力<xref:System.Diagnostics.TraceSource>構成ファイルの設定で制御できます。 構成ファイルでは、アプリケーションの実行可能ファイルとフォルダーにあるし、アプリケーションの名前を持つ、.config ファイル名拡張子を追加します。 たとえば、TraceSourceSample.exe の構成ファイルの名前は TraceSourceSample.exe.config です。構成ファイルは、トレース情報が送信されると、トレース対象のアクティビティのレベルを決定できます。 次の例では、サンプル アプリケーションの構成ファイルの内容を示します。  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <sources>  
      <source name="TraceTest" switchName="SourceSwitch"   
        switchType="System.Diagnostics.SourceSwitch" >  
        <listeners>  
          <add name="console" />  
          <remove name ="Default" />  
        </listeners>  
      </source>  
    </sources>  
    <switches>  
      <!-- You can set the level at which tracing is to occur -->  
      <add name="SourceSwitch" value="Warning" />  
        <!-- You can turn tracing off -->  
        <!--add name="SourceSwitch" value="Off" -->  
    </switches>  
    <sharedListeners>  
      <add name="console"   
        type="System.Diagnostics.ConsoleTraceListener"   
        initializeData="false"/>  
    </sharedListeners>  
    <trace autoflush="true" indentsize="4">  
      <listeners>  
        <add name="console" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 <xref:System.Diagnostics.TraceSource>クラスは、通常、アプリケーションの名前、ソースの名前によって識別されます。  特定のコンポーネントからのトレース メッセージは、識別が簡単にそのコンポーネントからすべてのメッセージを許可する特定のトレース ソースで開始できます。  
  
 <xref:System.Diagnostics.TraceSource> トレース メソッドを定義しますが、生成して、トレース データを格納するの実際には、特定のメカニズムは提供されません。 トレース データは、トレース ソースによって読み込まれるプラグインのトレース リスナーによって生成されます。  
  
> [!NOTE]
>  終了処理中にトレース メソッドを呼び出す必要はありません。 これによりが、<xref:System.ObjectDisposedException>がスローされます。  
  
 トレース出力のターゲットをカスタマイズするには追加または削除によって<xref:System.Diagnostics.TraceListener>インスタンスに格納されているコレクションとの間、<xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=nameWithType>プロパティ。 インスタンスを使用して既定では、トレース出力が生成されて、<xref:System.Diagnostics.DefaultTraceListener>クラス。 削除する前の構成ファイルの例に示します、<xref:System.Diagnostics.DefaultTraceListener>を追加して、<xref:System.Diagnostics.ConsoleTraceListener>トレース ソースのトレース出力を生成します。 詳細については、次を参照してください。 [&lt;リスナー&gt; ](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-source.md)と[&lt;上 sharedListeners&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/sharedlisteners-element.md)します。  
  
> [!NOTE]
>  トレース リスナーを追加する、<xref:System.Diagnostics.TraceSource.Listeners%2A>トレース リスナーによって使用されるリソースが利用できない場合、コレクションは、トレース中にスローされる例外を発生できます。 条件とスローされる例外は、トレース リスナーに依存し、このトピックで列挙することはできません。 呼び出しを配置することができます、<xref:System.Diagnostics.TraceSource>メソッド`try` / `catch`ブロックを検出し、トレース リスナーから例外を処理します。  
  
 <xref:System.Diagnostics.SourceSwitch>クラスには、トレース出力を動的に制御するための手段が用意されています。 上記の構成ファイルの例では、トレース ソースとするトレース レベルが発生したコントロールからのトレースを無効にすることができる方法を示します。  アプリケーションを再コンパイルしなくてもソース スイッチの値を変更できます。 スイッチを設定する構成ファイルの使用方法の詳細については、次を参照してください。<xref:System.Diagnostics.Switch>と[方法: トレース スイッチの構成を初期化し、作成](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md)です。  
  
> [!NOTE]
>  アプリケーションを停止および再起動する必要がありますが、アプリケーションの実行中に構成ファイルを変更する場合、または<xref:System.Diagnostics.Trace.Refresh%2A>新しい設定を有効にするために、メソッドを呼び出す必要があります。  
  
 <xref:System.Diagnostics.TraceEventType>列挙体を使用して、トレース メッセージのイベントの種類を定義します。 トレース フィルターを使用して、<xref:System.Diagnostics.TraceEventType>をトレース リスナーがトレース メッセージを生成する必要があるかどうかを判断します。  
  
 トレース リスナーでは、フィルター処理トレース フィルターの追加レイヤーを持つことができます必要に応じて。  トレース リスナーに関連付けられている、フィルターがある場合、リスナーを呼び出す、<xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>トレース情報を生成するかどうかを判断するには、そのフィルターのメソッド。  
  
 トレース リスナーの値を使用して、<xref:System.Diagnostics.Trace>クラスのプロパティ<xref:System.Diagnostics.Trace.Indent%2A>、 <xref:System.Diagnostics.Trace.IndentSize%2A>、および<xref:System.Diagnostics.Trace.AutoFlush%2A>トレース出力の書式設定します。 構成ファイルの属性を使用して、設定、 <xref:System.Diagnostics.Trace.Indent%2A>、 <xref:System.Diagnostics.Trace.IndentSize%2A>、および<xref:System.Diagnostics.Trace.AutoFlush%2A>プロパティ。 次の例のセット、<xref:System.Diagnostics.Trace.AutoFlush%2A>プロパティを`false`と<xref:System.Diagnostics.Trace.IndentSize%2A>プロパティを 3 にします。  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 次のコード例の使用を示しています、<xref:System.Diagnostics.TraceSource>クラス リスナーにトレースを転送するようにします。  この例では、スイッチとフィルターの使用状況も示します。  
  
 [!code-cpp[System.Diagnostics.TraceSource2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CPP/tracesource2.cpp#1)]
 [!code-csharp[System.Diagnostics.TraceSource2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#1)]
 [!code-vb[System.Diagnostics.TraceSource2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>この型はスレッド セーフです。</threadsafe>
    <related type="Article" href="~/docs/framework/configure-apps/file-schema/trace-debug/index.md">トレースおよびデバッグ設定のスキーマ</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Diagnostics.TraceSource" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSource (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSource(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSource : string -&gt; System.Diagnostics.TraceSource" Usage="new System.Diagnostics.TraceSource name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">ソースの名前 (通常はアプリケーションの名前)。</param>
        <summary>指定したソースの名前を使用して、<see cref="T:System.Diagnostics.TraceSource" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ソース名は、トレースを識別するために使用されます。 使用されて、<xref:System.Diagnostics.SourceFilter>をトレース リスナーがトレースを生成するかどうかを判断します。 ソース名に、アプリケーションの名前を使用することをお勧めします。  
  
> [!NOTE]
>  新たに作成する必要はありません<xref:System.Diagnostics.TraceSource>トレース要求ごとのインスタンス。 1 つ作成<xref:System.Diagnostics.TraceSource>をインスタンス化し、アプリケーションのすべての要求のトレースの使用します。  
  
   
  
## Examples  
 次のコード例の使用を示しています、<xref:System.Diagnostics.TraceSource.%23ctor%2A>新たに作成するコンス トラクター<xref:System.Diagnostics.TraceSource>オブジェクト。 このコード例が示されている例の一部、<xref:System.Diagnostics.TraceSource>クラス。  
  
 [!code-csharp[System.Diagnostics.TraceSource2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#9)]
 [!code-vb[System.Diagnostics.TraceSource2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> が空の文字列 ("") です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSource (string name, System.Diagnostics.SourceLevels defaultLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Diagnostics.SourceLevels defaultLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, defaultLevel As SourceLevels)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSource(System::String ^ name, System::Diagnostics::SourceLevels defaultLevel);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSource : string * System.Diagnostics.SourceLevels -&gt; System.Diagnostics.TraceSource" Usage="new System.Diagnostics.TraceSource (name, defaultLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultLevel" Type="System.Diagnostics.SourceLevels" />
      </Parameters>
      <Docs>
        <param name="name">ソースの名前 (通常はアプリケーションの名前)。</param>
        <param name="defaultLevel">トレースする既定のソース レベルを指定する列挙値のビットごとの組み合わせ。</param>
        <summary>ソースの指定された名前、およびトレースが発生する既定のソース レベルを使用して、<see cref="T:System.Diagnostics.TraceSource" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ソース名は、トレースを識別するために使用されます。 使用できます、<xref:System.Diagnostics.SourceSwitch>トレースが発生するかどうかを判断して、<xref:System.Diagnostics.SourceFilter>トレースを生成するかどうかを判断します。 既定のソース レベルを使って、<xref:System.Diagnostics.EventTypeFilter>トレースするメッセージのソース レベルに基づいてトレースが発生するかどうかを判断します。  
  
> [!NOTE]
>  新たに作成する必要はありません<xref:System.Diagnostics.TraceSource>トレース要求ごとのインスタンス。 1 つ作成<xref:System.Diagnostics.TraceSource>をインスタンス化し、アプリケーションのすべての要求のトレースの使用します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> が空の文字列 ("") です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Attributes { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Specialized.StringDictionary" Usage="System.Diagnostics.TraceSource.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーション構成ファイルに定義されているカスタム スイッチ属性を取得します。</summary>
        <value>トレース スイッチのカスタム属性を格納している <see cref="T:System.Collections.Specialized.StringDictionary" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.Attributes%2A>プロパティは、アプリケーションの構成ファイルで参照されているカスタム属性を識別します。 参照されていないカスタム属性は列挙されません。 継承するクラス、<xref:System.Diagnostics.TraceSource>クラスでオーバーライドすることでカスタム属性を追加、<xref:System.Diagnostics.Switch.GetSupportedAttributes%2A?displayProperty=nameWithType>メソッドとカスタム属性の名前の文字列配列を返します。  
  
 カスタム属性を指定するトレース ソース要素のサンプルを次に示します`SecondTraceSourceAttribute`:  
  
```xml  
<sources>  
  <source name="TraceTest" switchName="TestSourceSwitch"   
    switchType="Testing.MySourceSwitch, TraceSample"   
    SecondTraceSourceAttribute="two">  
  </source>  
</sources>  
```  
  
   
  
## Examples  
 次のコード サンプルのカスタム属性を表示する方法を示しています、<xref:System.Diagnostics.TraceSource>します。  このコード例が示されている例の一部、<xref:System.Diagnostics.TraceSource>クラス。  
  
 [!code-csharp[System.Diagnostics.TraceSource2#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#14)]
 [!code-vb[System.Diagnostics.TraceSource2#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="traceSource.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>トレース リスナー コレクション内のすべてのトレース リスナーを閉じます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.Close%2A>メソッドの呼び出し、<xref:System.Diagnostics.TraceListener.Close%2A>内の各トレース リスナーのメソッド、<xref:System.Diagnostics.TraceSource.Listeners%2A>コレクション。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Diagnostics.TraceSource.Close%2A>メソッドをコレクション内のすべてのリスナーを閉じます。 このコード例が示されている例の一部、<xref:System.Diagnostics.TraceSource>クラス。  
  
 [!code-csharp[System.Diagnostics.TraceSource2#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource2#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードと運用します。 要求値: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;列挙型に関連付けられている:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />します。</permission>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="traceSource.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>トレース リスナー コレクション内のすべてのトレース リスナーをフラッシュします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.Flush%2A>メソッドの呼び出し、<xref:System.Diagnostics.TraceListener.Flush%2A>内の各トレース リスナーのメソッド、<xref:System.Diagnostics.TraceSource.Listeners%2A>コレクション。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Diagnostics.TraceSource.Flush%2A>コレクション内のすべてのリスナーをフラッシュします。 このコード例が示されている例の一部、<xref:System.Diagnostics.TraceSource>クラス。  
  
 [!code-csharp[System.Diagnostics.TraceSource2#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource2#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">終了処理時にイベントをトレースしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected internal virtual string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedAttributes : unit -&gt; string[]&#xA;override this.GetSupportedAttributes : unit -&gt; string[]" Usage="traceSource.GetSupportedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>トレース ソースによってサポートされるカスタム属性を取得します。</summary>
        <returns>トレース ソースにサポートされるカスタム属性を指定する文字列配列。カスタム属性がない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の実装<xref:System.Diagnostics.TraceSource.GetSupportedAttributes%2A>返します`null`します。  
  
   
  
## Examples  
 次のコード例のオーバーライドを示しています、<xref:System.Diagnostics.TraceSource.GetSupportedAttributes%2A>メソッドのカスタム属性を識別するために、`MyTraceSource`クラス。  
  
 [!code-csharp[System.Diagnostics.TraceSource#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>継承する場合、<see cref="T:System.Diagnostics.TraceSource" />クラスまたは派生クラスでオーバーライドできます、<see cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />メソッドをクラスのカスタム属性を指定します。</para></block>
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listeners : System.Diagnostics.TraceListenerCollection" Usage="System.Diagnostics.TraceSource.Listeners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>トレース ソースのトレース リスナーのコレクションを取得します。</summary>
        <value>ソースに関連付けられたアクティブなトレース リスナーを格納する <see cref="T:System.Diagnostics.TraceListenerCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、アクセスし、トレース リスナーに操作を実行します。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードと運用します。 要求値: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;列挙型に関連付けられている:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />します。</permission>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Diagnostics.TraceSource.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>トレース ソースの名前を取得します。</summary>
        <value>トレース ソースの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 名前が設定されて、`name`コンス トラクターに渡されるパラメーター。 使用して、トレース ソースを参照することができます、`name`構成ファイル内の属性。  
  
 構成ファイルにトレース ソースを参照する次の XML 要素を示しています。  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <sources>  
      <source name="TraceTest">  
      </source>  
    </sources>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 次のコード サンプルでは、コンス トラクターの呼び出しのトレース ソースの名前を付ける方法を示します。  このコード例が示されている例の一部、<xref:System.Diagnostics.TraceSource>クラス。  
  
 [!code-csharp[System.Diagnostics.TraceSource2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#9)]
 [!code-vb[System.Diagnostics.TraceSource2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SourceSwitch Switch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.SourceSwitch Switch" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Switch" />
      <MemberSignature Language="VB.NET" Value="Public Property Switch As SourceSwitch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::SourceSwitch ^ Switch { System::Diagnostics::SourceSwitch ^ get(); void set(System::Diagnostics::SourceSwitch ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Switch : System.Diagnostics.SourceSwitch with get, set" Usage="System.Diagnostics.TraceSource.Switch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SourceSwitch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ソース スイッチ値を取得または設定します。</summary>
        <value>ソース スイッチ値を表す <see cref="T:System.Diagnostics.SourceSwitch" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.Switch%2A>プロパティは、トレース ソースは、リスナーを呼び出す前に、メッセージのフィルターを使用します。  
  
 スイッチを使用して、トレースの呼び出しを生成または無視するかどうかを確認します。 各トレース メソッドは、<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>のメソッド、<xref:System.Diagnostics.SourceSwitch>トレースを続行するかどうかを判断します。 呼び出し、返される場合`true`リスナーが呼び出されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.Diagnostics.TraceSource.Switch" /> が <see langword="null" /> に設定されます。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードと運用します。 要求値: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;列挙型に関連付けられている:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />します。</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>トレース データを <see cref="P:System.Diagnostics.TraceSource.Listeners" /> コレクション内のトレース リスナーに書き込みます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public void TraceData (System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceData(valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceData (eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceData(System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="member this.TraceData : System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="traceSource.TraceData (eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventType">トレース データのイベントの種類を指定する列挙値の 1 つ。</param>
        <param name="id">イベントの数値識別子。</param>
        <param name="data">トレース データ。</param>
        <summary>指定されたイベントの種類、イベント識別子、およびトレース データを使用して、トレース データを <see cref="P:System.Diagnostics.TraceSource.Listeners" /> コレクション内のトレース リスナーに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceData%2A>メソッドと同様に、<xref:System.Diagnostics.TraceSource.TraceEvent%2A>自動化ツールは、メソッドが対象としていますが、トレース、例外インスタンスなど、追加のオブジェクトのアタッチこともできます。  
  
 <xref:System.Diagnostics.TraceSource.TraceData%2A>メソッドの呼び出し、<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A?displayProperty=nameWithType>のメソッド、<xref:System.Diagnostics.SourceSwitch>によって返されるオブジェクト、<xref:System.Diagnostics.TraceSource.Switch%2A>プロパティ。 場合<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>返します`true`、 <xref:System.Diagnostics.TraceSource.TraceData%2A> 、対応する呼び出し<xref:System.Diagnostics.TraceListener.TraceData%2A>メソッドすべてのリスナーをします。 それ以外の場合、<xref:System.Diagnostics.TraceSource.TraceData%2A>リスナーのメソッドを呼び出さずに返します。  
  
> [!NOTE]
>  <xref:System.Diagnostics.EventLogTraceListener>オブジェクトが最大`id`65,535 の値。 場合、`id`指定された値が 65,535 より大きい、<xref:System.Diagnostics.EventLogTraceListener>オブジェクトが 65,535 を使用します。  
  
   
  
## Examples  
 次のコード例の使用を示しています、<xref:System.Diagnostics.TraceSource.TraceData%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.Object%29>メソッドをフィルター処理して、リスナーにトレース メッセージを転送します。 このコード例が示されている例の一部、<xref:System.Diagnostics.TraceSource>クラス。  
  
 [!code-csharp[System.Diagnostics.TraceSource2#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#28)]
 [!code-vb[System.Diagnostics.TraceSource2#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">終了処理時にイベントをトレースしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public void TraceData (System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceData(valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceData (eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceData(System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.TraceData : System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="traceSource.TraceData (eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventType">トレース データのイベントの種類を指定する列挙値の 1 つ。</param>
        <param name="id">イベントの数値識別子。</param>
        <param name="data">トレース データが格納されているオブジェクト配列。</param>
        <summary>指定されたイベントの種類、イベント識別子、およびトレース データの配列を使用して、トレース データを <see cref="P:System.Diagnostics.TraceSource.Listeners" /> コレクション内のトレース リスナーに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceData%2A>メソッドと同様に、<xref:System.Diagnostics.TraceSource.TraceEvent%2A>自動化ツールは、メソッドが対象としていますが、例外インスタンスと、トレースには、スタック トレースなど、追加のオブジェクトの添付することもできます。  
  
 <xref:System.Diagnostics.TraceSource.TraceData%2A>メソッドの呼び出し、<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>のメソッド、<xref:System.Diagnostics.SourceSwitch>によって返されるオブジェクト、<xref:System.Diagnostics.TraceSource.Switch%2A>プロパティ。 場合<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>返します`true`、 <xref:System.Diagnostics.TraceSource.TraceData%2A> 、対応する呼び出し<xref:System.Diagnostics.TraceListener.TraceData%2A>メソッドすべてのリスナーをします。 それ以外の場合、<xref:System.Diagnostics.TraceSource.TraceData%2A>リスナーのメソッドを呼び出さずに返します。  
  
> [!NOTE]
>  <xref:System.Diagnostics.EventLogTraceListener>オブジェクトが最大`id`65,535 の値。 場合、`id`指定された値が 65,535 より大きい、<xref:System.Diagnostics.EventLogTraceListener>オブジェクトが 65,535 を使用します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">終了処理時にイベントをトレースしようとしました。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>トレース イベント メッセージを <see cref="P:System.Diagnostics.TraceSource.Listeners" /> コレクションのトレース リスナーに書き込みます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id);" />
      <MemberSignature Language="F#" Value="member this.TraceEvent : System.Diagnostics.TraceEventType * int -&gt; unit" Usage="traceSource.TraceEvent (eventType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventType">トレース データのイベントの種類を指定する列挙値の 1 つ。</param>
        <param name="id">イベントの数値識別子。</param>
        <summary>指定されたイベントの種類およびイベント識別子を使用して、トレース イベント メッセージを <see cref="P:System.Diagnostics.TraceSource.Listeners" /> コレクション内のトレース リスナーに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A>ツールによって自動的に処理できるイベントをトレースするメソッドが対象としています。 たとえば、特定のソースによって、特定のイベントがトレースされる場合、監視ツールは管理者に通知できます。  
  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A>メソッドの呼び出し、<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>のメソッド、<xref:System.Diagnostics.SourceSwitch>によって返されるオブジェクト、<xref:System.Diagnostics.TraceSource.Switch%2A>プロパティ。 場合<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>返します`true`、 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> 、対応する呼び出し<xref:System.Diagnostics.TraceListener.TraceEvent%2A>各リスナーのメソッド。 それ以外の場合、<xref:System.Diagnostics.TraceSource.TraceEvent%2A>リスナーのメソッドを呼び出さずに返します。  
  
 トレースの内容は、特定のリスナーです。 リスナーの実装によって、メソッドがオーバーライドされていない場合、既定の出力は、トレース ソース、その id (数字)、およびイベントの種類の名前です。  その他のトレースの内容はリスナーの依存<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティの値。  
  
> [!NOTE]
>  <xref:System.Diagnostics.EventLogTraceListener>オブジェクトが最大`id`65,535 の値。 場合、`id`指定された値が 65,535 より大きい、 <xref:System.Diagnostics.EventLogTraceListener> 65,535 を使用します。  
  
   
  
## Examples  
 次のコード例の使用を示しています、<xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29>トレース イベントをリスナーに渡す方法です。 このコード例が示されている例の一部、<xref:System.Diagnostics.TraceSource>クラス。  
  
 [!code-csharp[System.Diagnostics.TraceSource2#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#17)]
 [!code-vb[System.Diagnostics.TraceSource2#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">終了処理時にイベントをトレースしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.TraceEvent : System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="traceSource.TraceEvent (eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventType">トレース データのイベントの種類を指定する列挙値の 1 つ。</param>
        <param name="id">イベントの数値識別子。</param>
        <param name="message">書き込むトレース メッセージ。</param>
        <summary>指定されたイベントの種類、イベント識別子、およびメッセージを使用して、トレース イベント メッセージを <see cref="P:System.Diagnostics.TraceSource.Listeners" /> コレクション内のトレース リスナーに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A>ツールによって自動的に処理できるイベントをトレースするメソッドが対象としています。 たとえば、特定のソースによって、特定のイベントがトレースされる場合、監視ツールは管理者に通知できます。  
  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A>メソッドの呼び出し、<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>のメソッド、<xref:System.Diagnostics.SourceSwitch>によって返されるオブジェクト、<xref:System.Diagnostics.TraceSource.Switch%2A>プロパティ。 場合<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>返します`true`、 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> 、対応する呼び出し<xref:System.Diagnostics.TraceListener.TraceEvent%2A>各リスナーのメソッド。 それ以外の場合、<xref:System.Diagnostics.TraceSource.TraceEvent%2A>リスナーのメソッドを呼び出さずに返します。  
  
 トレースの内容は、特定のリスナーです。 リスナーの実装によって、メソッドがオーバーライドされていない場合、既定の出力は、トレース ソース、その数値の id、イベントの種類、およびメッセージの名前です。  その他のトレースの内容はリスナーの依存<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティの値。  
  
> [!NOTE]
>  <xref:System.Diagnostics.EventLogTraceListener>オブジェクトが最大`id`65,535 の値。 場合、`id`指定された値が 65,535 より大きい、<xref:System.Diagnostics.EventLogTraceListener>オブジェクトが 65,535 を使用します。  
  
   
  
## Examples  
 次のコード例の使用を示しています、<xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29>トレース イベントをリスナーに渡す方法です。 このコード例が示されている例の一部、<xref:System.Diagnostics.TraceSource>クラス。  
  
 [!code-csharp[System.Diagnostics.TraceSource2#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#18)]
 [!code-vb[System.Diagnostics.TraceSource2#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">終了処理時にイベントをトレースしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.TraceEvent : System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="traceSource.TraceEvent (eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventType">トレース データのイベントの種類を指定する列挙値の 1 つ。</param>
        <param name="id">イベントの数値識別子。</param>
        <param name="format">0 個以上の書式項目が混在したテキストを含む複合書式指定文字列。各書式項目は、<paramref name="args" /> 配列内のオブジェクトに対応します。</param>
        <param name="args">0 個以上の書式設定対象オブジェクトを含んだ <see langword="object" /> 配列。</param>
        <summary>指定されたイベントの種類、イベント識別子、および引数配列と書式設定を使用して、トレース イベントを <see cref="P:System.Diagnostics.TraceSource.Listeners" /> コレクション内のトレース リスナーに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 詳細については、`format`パラメーターを参照してください[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。  
  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A>ツールによって自動的に処理できるイベントをトレースするメソッドが対象としています。 たとえば、特定のソースによって、特定のイベントがトレースされる場合、監視ツールは管理者に通知できます。  
  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A>メソッドの呼び出し、<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>のメソッド、<xref:System.Diagnostics.SourceSwitch>によって返されるオブジェクト、<xref:System.Diagnostics.TraceSource.Switch%2A>プロパティ。 場合<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>返します`true`、 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> 、対応する呼び出し<xref:System.Diagnostics.TraceListener.TraceEvent%2A>各リスナーのメソッド。 それ以外の場合、<xref:System.Diagnostics.TraceSource.TraceEvent%2A>リスナーのメソッドを呼び出さずに返します。  
  
 トレースの内容は、特定のリスナーです。 既定値<xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29>メソッドのソース名、イベントの種類、およびトレースのヘッダー内の数値 id を呼び出して、<xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>を渡してメソッド、`format`文字列と`args`配列とを使用して、<xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType>を書式設定プロパティ、メッセージの出力としての文字列。  
  
> [!NOTE]
>  <xref:System.Diagnostics.EventLogTraceListener>オブジェクトが最大`id`65,535 の値。 場合、`id`指定された値が 65,535 より大きい、<xref:System.Diagnostics.EventLogTraceListener>オブジェクトが 65,535 を使用します。  
  
   
  
## Examples  
 次のコード例の使用を示しています、<xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29>トレース イベントをリスナーに渡す方法です。 このコード例が示されている例の一部、<xref:System.Diagnostics.TraceSource>クラス。  
  
 [!code-csharp[System.Diagnostics.TraceSource2#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#24)]
 [!code-vb[System.Diagnostics.TraceSource2#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.FormatException"><paramref name="format" /> が無効です。  
  
- または - 
書式設定する引数を示す数が 0 より小さいか、書式設定する指定されたオブジェクトの数以上です。</exception>
        <exception cref="T:System.ObjectDisposedException">終了処理時にイベントをトレースしようとしました。</exception>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">複合書式指定</related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md">標準の数値書式指定文字列</related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md">カスタム数値書式指定文字列</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">標準の DateTime 書式指定文字列します。</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">カスタム日付/時刻書式指定文字列</related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md">列挙型書式指定文字列</related>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">.NET での型の書式設定</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceInformation">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>情報メッセージを <see cref="P:System.Diagnostics.TraceSource.Listeners" /> コレクションのトレース リスナーに書き込みます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public void TraceInformation (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceInformation(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceInformation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceInformation (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceInformation(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.TraceInformation : string -&gt; unit" Usage="traceSource.TraceInformation message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">書き込む情報メッセージ。</param>
        <summary>指定されたメッセージを使用して、情報メッセージを <see cref="P:System.Diagnostics.TraceSource.Listeners" /> コレクションのトレース リスナーに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceInformation%2A>メソッドは、情報メッセージとツールではなくユーザーが読み取るためのものを提供します。  
  
 <xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%29> 呼び出し、<xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29>設定メソッド`eventType`に<xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType>情報メッセージをメッセージの文字列として渡すとします。 <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29>メソッドを呼び出します、<xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29>各トレース リスナのメソッド。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">終了処理時にイベントをトレースしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public void TraceInformation (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceInformation(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceInformation (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceInformation(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.TraceInformation : string * obj[] -&gt; unit" Usage="traceSource.TraceInformation (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">0 個以上の書式項目が混在したテキストを含む複合書式指定文字列。各書式項目は、<paramref name="args" /> 配列内のオブジェクトに対応します。</param>
        <param name="args">0 個以上の書式設定対象オブジェクトを含んだ配列。</param>
        <summary>指定されたオブジェクトの配列および書式設定情報を使用して、<see cref="P:System.Diagnostics.TraceSource.Listeners" /> コレクションのトレース リスナーに情報メッセージを書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 詳細については、`format`パラメーターを参照してください[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。  
  
 <xref:System.Diagnostics.TraceSource.TraceInformation%2A>メソッドは、情報メッセージとツールではなくユーザーが読み取るためのものを提供します。  
  
 <xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%2CSystem.Object%5B%5D%29> 呼び出し、<xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29>設定メソッド`eventType`に<xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType>メッセージの内容を書式設定情報をオブジェクトの配列として渡すこととします。 <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29>メソッドを呼び出します、<xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29>各トレース リスナのメソッド。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.FormatException"><paramref name="format" /> が無効です。  
  
- または - 
書式設定する引数を示す数が 0 より小さいか、書式設定する指定されたオブジェクトの数以上です。</exception>
        <exception cref="T:System.ObjectDisposedException">終了処理時にイベントをトレースしようとしました。</exception>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">複合書式指定</related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md">標準の数値書式指定文字列</related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md">カスタム数値書式指定文字列</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">標準の DateTime 書式指定文字列します。</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">カスタム日付/時刻書式指定文字列</related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md">列挙型書式指定文字列</related>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">.NET での型の書式設定</related>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public void TraceTransfer (int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceTransfer(int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceTransfer(System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceTransfer (id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceTransfer(int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberSignature Language="F#" Value="member this.TraceTransfer : int * string * Guid -&gt; unit" Usage="traceSource.TraceTransfer (id, message, relatedActivityId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id">イベントの数値識別子。</param>
        <param name="message">書き込むトレース メッセージ。</param>
        <param name="relatedActivityId">関連する動作を識別する構造体。</param>
        <summary>指定された数値識別子、メッセージ、および関連する動作識別子を使用して、トレース転送メッセージを <see cref="P:System.Diagnostics.TraceSource.Listeners" /> コレクションのトレース リスナーに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceTransfer%2A>メソッドの呼び出し、<xref:System.Diagnostics.TraceListener.TraceTransfer%2A>内の各トレース リスナーのメソッド、<xref:System.Diagnostics.TraceSource.Listeners%2A>トレース情報を記述するプロパティ。 既定値<xref:System.Diagnostics.TraceListener.TraceTransfer%2A>、ベースのメソッドに<xref:System.Diagnostics.TraceListener>クラスが呼び出す、<xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29?displayProperty=nameWithType>設定、呼び出しを処理するメソッド`eventType`に<xref:System.Diagnostics.TraceEventType.Transfer?displayProperty=nameWithType>の文字列表現を追加して、 `relatedActivityId` GUID`message`します。  
  
 <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> 論理操作で使用するためのものでは、<xref:System.Diagnostics.CorrelationManager>します。 `relatedActivityId`パラメーターに関連する、<xref:System.Diagnostics.CorrelationManager.ActivityId%2A>のプロパティを<xref:System.Diagnostics.CorrelationManager>オブジェクト。 2 番目のアクティビティが呼び出すことによって、転送を記録する場合は論理操作では、1 つのアクティビティの開始は別に、<xref:System.Diagnostics.TraceSource.TraceTransfer%2A>メソッド。 <xref:System.Diagnostics.TraceSource.TraceTransfer%2A>呼び出しが前の id に、新しいアクティビティ id に関連します。 この機能の最も可能性の高いコンシューマーは、複数のアクティビティにまたがる論理操作を報告するトレース ビューアーです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.XmlWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventSchemaTraceListener" />
        <altmember cref="T:System.Diagnostics.DelimitedListTraceListener" />
      </Docs>
    </Member>
  </Members>
</Type>