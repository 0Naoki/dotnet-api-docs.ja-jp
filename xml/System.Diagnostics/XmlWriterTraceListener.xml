<Type Name="XmlWriterTraceListener" FullName="System.Diagnostics.XmlWriterTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1445a59b4b5ffacc035b30dd392f9a19190d4885" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70570943" /></Metadata><TypeSignature Language="C#" Value="public class XmlWriterTraceListener : System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlWriterTraceListener extends System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.XmlWriterTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlWriterTraceListener&#xA;Inherits TextWriterTraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriterTraceListener : System::Diagnostics::TextWriterTraceListener" />
  <TypeSignature Language="F#" Value="type XmlWriterTraceListener = class&#xA;    inherit TextWriterTraceListener" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TextWriterTraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="aa0ef-101">トレース出力またはデバッグ出力を XML エンコードされたデータとして <see cref="T:System.IO.TextWriter" /> または <see cref="T:System.IO.Stream" /> (<see cref="T:System.IO.FileStream" /> など) に転送します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-101">Directs tracing or debugging output as XML-encoded data to a <see cref="T:System.IO.TextWriter" /> or to a <see cref="T:System.IO.Stream" />, such as a <see cref="T:System.IO.FileStream" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="aa0ef-102">クラスのインスタンスを作成するには、 <xref:System.Diagnostics.XmlWriterTraceListener>アンマネージコードのアクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-102">You must have unmanaged code permission to create an instance of the <xref:System.Diagnostics.XmlWriterTraceListener> class.</span></span>  
  
 <span data-ttu-id="aa0ef-103">クラス<xref:System.Diagnostics.XmlWriterTraceListener>は、トレース情報とデバッグ情報を XML エンコードされたテキストストリームに変換します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-103">The <xref:System.Diagnostics.XmlWriterTraceListener> class converts tracing and debugging information into an XML-encoded text stream.</span></span> <span data-ttu-id="aa0ef-104">XML 出力の説明を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-104">The description of the XML output is shown in the tables that follow.</span></span> <span data-ttu-id="aa0ef-105">[サービストレースビューアーツール (svctraceviewer.exe)](https://go.microsoft.com/fwlink/p/?LinkId=240129)を使用して、XML 出力を表示できます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-105">You can use the [Service Trace Viewer Tool (SvcTraceViewer.exe)](https://go.microsoft.com/fwlink/p/?LinkId=240129) to display the XML output.</span></span>  
  
 <span data-ttu-id="aa0ef-106">アプリケーション構成ファイルを使用し<xref:System.Diagnostics.XmlWriterTraceListener>てを有効または無効にし、アプリケーション<xref:System.Diagnostics.XmlWriterTraceListener>で構成されたを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-106">You can enable or disable an <xref:System.Diagnostics.XmlWriterTraceListener> through the application configuration file and then use the configured <xref:System.Diagnostics.XmlWriterTraceListener> in your application.</span></span> <span data-ttu-id="aa0ef-107">または、コード<xref:System.Diagnostics.XmlWriterTraceListener>にを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-107">Alternately, you can create an <xref:System.Diagnostics.XmlWriterTraceListener> in your code.</span></span>  
  
 <span data-ttu-id="aa0ef-108">を構成<xref:System.Diagnostics.XmlWriterTraceListener>するには、アプリケーションの名前に対応する構成ファイルを編集します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-108">To configure an <xref:System.Diagnostics.XmlWriterTraceListener>, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="aa0ef-109">このファイルでは、リスナーを追加または削除したり、リスナーのプロパティを設定したり、リスナーを削除したりできます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-109">In this file, you can add or remove a listener, set the properties for a listener, or remove listeners.</span></span> <span data-ttu-id="aa0ef-110">構成ファイルは、次の例のように書式設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-110">The configuration file should be formatted like the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="xmlListener"   
          type="System.Diagnostics.XmlWriterTraceListener"   
          initializeData="xmlOutput.xml"   
          traceOutputOptions="ProcessId, DateTime" />  
        <remove name="Default" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="aa0ef-111">クラス<xref:System.Diagnostics.XmlWriterTraceListener>は、基本<xref:System.Diagnostics.TraceListener.Filter%2A>クラス<xref:System.Diagnostics.TraceListener>からプロパティを継承します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-111">The <xref:System.Diagnostics.XmlWriterTraceListener> class inherits the <xref:System.Diagnostics.TraceListener.Filter%2A> property from the base class <xref:System.Diagnostics.TraceListener>.</span></span>  <span data-ttu-id="aa0ef-112">プロパティ<xref:System.Diagnostics.TraceListener.Filter%2A>を使用すると、リスナーでトレース出力フィルター処理のレベルをさらに向上させることができます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-112">The <xref:System.Diagnostics.TraceListener.Filter%2A> property allows an additional level of trace output filtering at the listener.</span></span>  <span data-ttu-id="aa0ef-113">フィルターが存在する場合、 `Trace`トレースリスナーのメソッドは、フィルターの<xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>メソッドを呼び出して、トレースを出力するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-113">If there is a filter present, the `Trace` methods of the trace listener call the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method of the filter to determine whether to emit the trace.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aa0ef-114">使用中または使用できないファイルへの書き込みが試行された場合、ファイル名の先頭に GUID が自動的に付けられます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-114">If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aa0ef-115">リスナーメソッドは<xref:System.Diagnostics.Debug>、、 <xref:System.Diagnostics.Trace>、および<xref:System.Diagnostics.TraceSource>の各クラスのメソッドによって呼び出されることを意図しています。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-115">Listener methods are intended to be called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes.</span></span>  <span data-ttu-id="aa0ef-116">リスナーメソッドは、アプリケーションコードから直接呼び出すためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-116">The listener methods are not intended to be called directly from application code.</span></span> <span data-ttu-id="aa0ef-117">リスナーは、主に<xref:System.Diagnostics.TraceSource>クラスでの使用を目的としています。 <xref:System.Diagnostics.XmlWriterTraceListener></span><span class="sxs-lookup"><span data-stu-id="aa0ef-117">The <xref:System.Diagnostics.XmlWriterTraceListener> listener is primarily intended for use by the <xref:System.Diagnostics.TraceSource> class.</span></span> <span data-ttu-id="aa0ef-118"><xref:System.Diagnostics.Trace> <xref:System.Diagnostics.Trace> <xref:System.Diagnostics.Debug>メソッドとメソッドは、クラスおよび<xref:System.Diagnostics.Debug>クラスによって呼び出すことができます。また、との値を指定しない XML 要素には既定値が用意されています。 <xref:System.Diagnostics.XmlWriterTraceListener.Write%2A> <xref:System.Diagnostics.XmlWriterTraceListener.WriteLine%2A></span><span class="sxs-lookup"><span data-stu-id="aa0ef-118">The <xref:System.Diagnostics.XmlWriterTraceListener.Write%2A> and <xref:System.Diagnostics.XmlWriterTraceListener.WriteLine%2A> methods can be called by the <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> classes, and default values are provided for the XML elements that <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> do not supply values for.</span></span>  
  
 <span data-ttu-id="aa0ef-119">次の表では、XML 出力の要素と属性について説明します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-119">The following table describes the elements and attributes of the XML output.</span></span>  
  
|<span data-ttu-id="aa0ef-120">要素</span><span class="sxs-lookup"><span data-stu-id="aa0ef-120">Element</span></span>|<span data-ttu-id="aa0ef-121">属性</span><span class="sxs-lookup"><span data-stu-id="aa0ef-121">Attributes</span></span>|<span data-ttu-id="aa0ef-122">Output</span><span class="sxs-lookup"><span data-stu-id="aa0ef-122">Output</span></span>|<span data-ttu-id="aa0ef-123">メモ</span><span class="sxs-lookup"><span data-stu-id="aa0ef-123">Notes</span></span>|  
|-------------|----------------|------------|-----------|  
|`CallStack`|<span data-ttu-id="aa0ef-124">None</span><span class="sxs-lookup"><span data-stu-id="aa0ef-124">None</span></span>|<span data-ttu-id="aa0ef-125">プロパティにフラグが<xref:System.Diagnostics.TraceOptions.Callstack>あるかどうかによって異なります。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="aa0ef-125">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Callstack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="aa0ef-126">> や < などの特殊文字は、エスケープシーケンスに置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-126">Special characters such as > or < are replaced with escape sequences.</span></span> <span data-ttu-id="aa0ef-127">次に示すエスケープ文字変換テーブルを参照してください。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-127">See the escaped character translation table that follows.</span></span>|  
|`Computer`|<span data-ttu-id="aa0ef-128">None</span><span class="sxs-lookup"><span data-stu-id="aa0ef-128">None</span></span>|<span data-ttu-id="aa0ef-129">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-129">Always present.</span></span>|<span data-ttu-id="aa0ef-130"><xref:System.Environment.MachineName%2A> プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-130">The value of the <xref:System.Environment.MachineName%2A> property.</span></span>|  
|`Correlation`|`ActivityID`|<span data-ttu-id="aa0ef-131">常に存在する</span><span class="sxs-lookup"><span data-stu-id="aa0ef-131">Always present</span></span>|<span data-ttu-id="aa0ef-132">指定しない場合、既定値は空の GUID になります。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-132">If not specified, the default is an empty GUID.</span></span>|  
||`RelatedActivityID`|<span data-ttu-id="aa0ef-133">トレースメソッドの呼び出しで`relatedActivityId`パラメーターが存在するかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-133">Depends on the presence of the `relatedActivityId` parameter in the Trace method call.</span></span>|<span data-ttu-id="aa0ef-134"><xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> メソッドの `relatedActivityId` パラメーター。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-134">The `relatedActivityId` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method.</span></span>|  
|`DataItem`|<span data-ttu-id="aa0ef-135">None</span><span class="sxs-lookup"><span data-stu-id="aa0ef-135">None</span></span>|<span data-ttu-id="aa0ef-136">メソッドのパラメーター `data` によって異なります。 <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A></span><span class="sxs-lookup"><span data-stu-id="aa0ef-136">Depends on the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method.</span></span>|<span data-ttu-id="aa0ef-137">この要素には、要素の配列または1つの要素を含めることができるため、 `DataItem`値は`TraceData`要素の下のノードのセットとして書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-137">This element can contain an array of elements or one element, so the values are written as a set of `DataItem` nodes under the `TraceData` element.</span></span><br /><br /> <span data-ttu-id="aa0ef-138">データ出力では、 `ToString`渡されたデータオブジェクトのメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-138">The data output uses the `ToString` method of the passed-in data objects.</span></span>|  
|`EventID`|<span data-ttu-id="aa0ef-139">None</span><span class="sxs-lookup"><span data-stu-id="aa0ef-139">None</span></span>|<span data-ttu-id="aa0ef-140">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-140">Always present.</span></span>|<span data-ttu-id="aa0ef-141">パラメーターの入力`id`()。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-141">Parameter input (`id`).</span></span>|  
|`Execution`|`ProcessName`|<span data-ttu-id="aa0ef-142">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-142">Always present.</span></span>|<span data-ttu-id="aa0ef-143"><xref:System.Diagnostics.TraceEventCache>から。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-143">From the <xref:System.Diagnostics.TraceEventCache>.</span></span>|  
||`ProcessID`|<span data-ttu-id="aa0ef-144">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-144">Always present.</span></span>|<span data-ttu-id="aa0ef-145"><xref:System.Diagnostics.TraceEventCache>から。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-145">From the <xref:System.Diagnostics.TraceEventCache>.</span></span> <span data-ttu-id="aa0ef-146">Windows 98 および windows Me オペレーティングシステムでは、 `ProcessID`が2147483647よりも大きい場合は、負の数を表す正の値であり、正しいプロセス識別子を取得するために変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-146">On Windows 98 and Windows Me operating systems, if `ProcessID` is greater than 2,147,483,647 it is a positive representation of a negative number and should be converted to obtain the correct process identifier.</span></span>|  
||`ThreadID`|<span data-ttu-id="aa0ef-147">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-147">Always present.</span></span>|<span data-ttu-id="aa0ef-148"><xref:System.Diagnostics.TraceEventCache>から。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-148">From the <xref:System.Diagnostics.TraceEventCache>.</span></span>|  
|`Level`|<span data-ttu-id="aa0ef-149">None</span><span class="sxs-lookup"><span data-stu-id="aa0ef-149">None</span></span>|<span data-ttu-id="aa0ef-150">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-150">Always present.</span></span>|<span data-ttu-id="aa0ef-151">パラメーターの入力 (の`eventType`数値)。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-151">Parameter input (the numeric value of `eventType`).</span></span> <span data-ttu-id="aa0ef-152">255より大きいパラメーター値は、255として出力されます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-152">Parameter values greater than 255 are output as 255.</span></span>|  
|`LogicalOperationStack`|<span data-ttu-id="aa0ef-153">None</span><span class="sxs-lookup"><span data-stu-id="aa0ef-153">None</span></span>|<span data-ttu-id="aa0ef-154">プロパティにフラグが<xref:System.Diagnostics.TraceOptions.LogicalOperationStack>あるかどうかによって異なります。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="aa0ef-154">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="aa0ef-155">複数の論理演算が存在する可能性があるため、値は要素`LogicalOperation`の`LogicalOperationStack`下にノードとして書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-155">There can be more than one logical operation, so the values are written as `LogicalOperation` nodes under the `LogicalOperationStack` element.</span></span>|  
|`Message`|<span data-ttu-id="aa0ef-156">None</span><span class="sxs-lookup"><span data-stu-id="aa0ef-156">None</span></span>|<span data-ttu-id="aa0ef-157">トレースメソッド呼び出しにメッセージが存在するかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-157">Depends on the presence of a message in the Trace method call.</span></span>|<span data-ttu-id="aa0ef-158">書式設定の引数が指定されている場合、この要素は書式設定されたメッセージになります。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-158">This element is a formatted message if formatting arguments are provided.</span></span>|  
|`Source`|`Name`|<span data-ttu-id="aa0ef-159">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-159">Always present.</span></span>|<span data-ttu-id="aa0ef-160">パラメーターの入力。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-160">Parameter input.</span></span>|  
|`SubType`|`Name`|<span data-ttu-id="aa0ef-161">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-161">Always present.</span></span>|<span data-ttu-id="aa0ef-162">パラメーターの入力。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-162">Parameter input.</span></span>|  
|`TimeCreated`|`SystemTime`|<span data-ttu-id="aa0ef-163">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-163">Always present.</span></span>|<span data-ttu-id="aa0ef-164">に存在しない場合<xref:System.Diagnostics.TraceEventCache>、既定値は現在の時刻です。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-164">If not present in the <xref:System.Diagnostics.TraceEventCache>, the default is the current time.</span></span>|  
|`TimeStamp`|<span data-ttu-id="aa0ef-165">None</span><span class="sxs-lookup"><span data-stu-id="aa0ef-165">None</span></span>|<span data-ttu-id="aa0ef-166">プロパティにフラグが<xref:System.Diagnostics.TraceOptions.Timestamp>あるかどうかによって異なります。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="aa0ef-166">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Timestamp> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="aa0ef-167"><xref:System.Diagnostics.TraceEventCache>から。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-167">From the <xref:System.Diagnostics.TraceEventCache>.</span></span>|  
|`Type`|<span data-ttu-id="aa0ef-168">None</span><span class="sxs-lookup"><span data-stu-id="aa0ef-168">None</span></span>|<span data-ttu-id="aa0ef-169">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-169">Always present.</span></span>|<span data-ttu-id="aa0ef-170">値は常に3です。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-170">Always the value 3.</span></span>|  
  
 <span data-ttu-id="aa0ef-171">次の表は、XML 出力でエスケープされる文字を示しています。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-171">The following table shows the characters that are escaped in the XML output.</span></span> <span data-ttu-id="aa0ef-172">`DataItem`要素を除き、すべての要素と属性でエスケープが行われます。これは、 <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>メソッド<xref:System.Xml.XPath.XPathNavigator>の`data`パラメーターに渡されたオブジェクトがオブジェクトである場合、エスケープされません。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-172">Escaping occurs in all the elements and attributes with the exception of the `DataItem` element, which is not escaped if the object passed to the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method is an <xref:System.Xml.XPath.XPathNavigator> object.</span></span> <span data-ttu-id="aa0ef-173">データオブジェクトにが使用されている場合、メソッドが呼び出され、ルートノード全体がエスケープ解除されたデータとしてトレースされます。 <xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A>  <xref:System.Xml.XPath.XPathNavigator></span><span class="sxs-lookup"><span data-stu-id="aa0ef-173">If an <xref:System.Xml.XPath.XPathNavigator> is used for the data object, the <xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A> method is called and the entire root node is traced as unescaped data.</span></span>  
  
|<span data-ttu-id="aa0ef-174">エスケープ文字</span><span class="sxs-lookup"><span data-stu-id="aa0ef-174">Escaped character</span></span>|<span data-ttu-id="aa0ef-175">[値]</span><span class="sxs-lookup"><span data-stu-id="aa0ef-175">Value</span></span>|  
|-----------------------|-----------|  
|&|&amp;|  
|\<|&lt;|  
|>|&gt;|  
|<span data-ttu-id="aa0ef-176">"</span><span class="sxs-lookup"><span data-stu-id="aa0ef-176">"</span></span>|&quot;|  
|\|&apos;|  
|<span data-ttu-id="aa0ef-177">0xD</span><span class="sxs-lookup"><span data-stu-id="aa0ef-177">0xD</span></span>|<span data-ttu-id="aa0ef-178">&\#XD</span><span class="sxs-lookup"><span data-stu-id="aa0ef-178">&\#xD;</span></span>|  
|<span data-ttu-id="aa0ef-179">0xA</span><span class="sxs-lookup"><span data-stu-id="aa0ef-179">0xA</span></span>|<span data-ttu-id="aa0ef-180">&\#XA</span><span class="sxs-lookup"><span data-stu-id="aa0ef-180">&\#xA;</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="aa0ef-181"><xref:System.Diagnostics.XmlWriterTraceListener>クラスを使用して、エスケープされたデータとエスケープされていないデータの両方をファイルログに書き込む方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-181">The following code example shows the use of the <xref:System.Diagnostics.XmlWriterTraceListener> class to write both escaped and non-escaped data to file logs.</span></span>  
  
 [!code-csharp[System.Diagnostics.XmlWriterTraceListener#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.XmlWriterTraceListener/CS/program.cs#1)]
 [!code-vb[System.Diagnostics.XmlWriterTraceListener#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.XmlWriterTraceListener/VB/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="aa0ef-182">アンマネージコードを呼び出すことができる。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-182">for the ability to call unmanaged code.</span></span> <span data-ttu-id="aa0ef-183"><see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="aa0ef-183">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="aa0ef-184"><see cref="T:System.Diagnostics.XmlWriterTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-184">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.Stream -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="aa0ef-185">トレース リスナーが書き込むストリームを表す <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-185">A <see cref="T:System.IO.Stream" /> that represents the stream the trace listener writes to.</span></span></param>
        <summary><span data-ttu-id="aa0ef-186">指定されたストリームをデバッグ出力およびトレース出力の受信者として使用して、<see cref="T:System.Diagnostics.XmlWriterTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-186">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class, using the specified stream as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa0ef-187">プロパティ<xref:System.Diagnostics.TraceListener.Name%2A>が空の文字列 ("") に初期化されています。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-187">The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aa0ef-188"><paramref name="stream" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-188"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="aa0ef-189">アンマネージコードを呼び出すことができる。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-189">for the ability to call unmanaged code.</span></span> <span data-ttu-id="aa0ef-190"><see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="aa0ef-190">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.TextWriter -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="aa0ef-191">トレース リスナーからの出力を受信する <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-191">A <see cref="T:System.IO.TextWriter" /> that receives the output from the trace listener.</span></span></param>
        <summary><span data-ttu-id="aa0ef-192">指定されたライターをデバッグ出力およびトレース出力の受信者として使用して、<see cref="T:System.Diagnostics.XmlWriterTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-192">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class using the specified writer as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa0ef-193">プロパティ<xref:System.Diagnostics.TraceListener.Name%2A>が空の文字列 ("") に初期化されています。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-193">The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aa0ef-194"><paramref name="writer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-194"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="aa0ef-195">アンマネージコードを呼び出すことができる。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-195">for the ability to call unmanaged code.</span></span> <span data-ttu-id="aa0ef-196"><see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="aa0ef-196">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener filename" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="aa0ef-197">書き込み先のファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-197">The name of the file to write to.</span></span></param>
        <summary><span data-ttu-id="aa0ef-198">指定されたファイルをデバッグ出力およびトレース出力の受信者として使用して、<see cref="T:System.Diagnostics.XmlWriterTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-198">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class, using the specified file as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa0ef-199">このコンストラクターは、エンコーディングを使用<xref:System.IO.StreamWriter>して<xref:System.Text.Encoding.UTF8%2A> 、指定されたパスの指定されたファイルのクラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-199">This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding.</span></span> <span data-ttu-id="aa0ef-200">ファイルが存在する場合は、に追加されます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-200">If the file exists, it is appended to.</span></span> <span data-ttu-id="aa0ef-201">ファイルが存在しない場合は、新しいファイルが作成されます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-201">If the file does not exist, a new file is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aa0ef-202">例外が発生する可能性を減らすために、出力を無効にする可能性のある文字は "?" 文字に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-202">To reduce the chance of an exception, any character that might invalidate the output is replaced with a "?" character.</span></span>  
  
 <span data-ttu-id="aa0ef-203">プロパティ<xref:System.Diagnostics.TraceListener.Name%2A>が空の文字列 ("") に初期化されています。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-203">The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aa0ef-204"><paramref name="filename" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-204"><paramref name="filename" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="aa0ef-205">アンマネージコードを呼び出すことができる。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-205">for the ability to call unmanaged code.</span></span> <span data-ttu-id="aa0ef-206"><see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="aa0ef-206">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.Stream stream, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::Stream ^ stream, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.Stream * string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener (stream, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="aa0ef-207">トレース リスナーが書き込むストリームを表す <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-207">A <see cref="T:System.IO.Stream" /> that represents the stream the trace listener writes to.</span></span></param>
        <param name="name"><span data-ttu-id="aa0ef-208">新規インスタンスの名前。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-208">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="aa0ef-209">指定されたストリームをデバッグ出力およびトレース出力の受信者として使用して、<see cref="T:System.Diagnostics.XmlWriterTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-209">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class with the specified name, using the specified stream as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa0ef-210">このコンストラクターは、 <xref:System.Diagnostics.TraceListener.Name%2A>パラメーターが`name` `null`の`name`場合、プロパティをパラメーター値または空の文字列 ("") に初期化します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-210">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter value or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="aa0ef-211">名前をコレクションの<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>インデックスとして使用すると、リスナーのプロパティをプログラムで変更できます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-211">The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="aa0ef-212">たとえば、次のコードは、 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> <xref:System.Diagnostics.TraceListener.Name%2A>プロパティが "xmllistener" <xref:System.Diagnostics.XmlWriterTraceListener>であるのインスタンスのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-212">For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is "xmlListener".</span></span>  
  
```  
((XmlWriterTraceListener)Trace.Listeners["xmlListener"]).TraceOutputOptions =   
    TraceOptions.Timestamp  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aa0ef-213"><paramref name="stream" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-213"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="aa0ef-214">アンマネージコードを呼び出すことができる。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-214">for the ability to call unmanaged code.</span></span> <span data-ttu-id="aa0ef-215"><see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="aa0ef-215">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.TextWriter writer, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::TextWriter ^ writer, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.TextWriter * string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener (writer, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="aa0ef-216">トレース リスナーからの出力を受信する <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-216">A <see cref="T:System.IO.TextWriter" /> that receives the output from the trace listener.</span></span></param>
        <param name="name"><span data-ttu-id="aa0ef-217">新規インスタンスの名前。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-217">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="aa0ef-218">指定されたライターをデバッグ出力およびトレース出力の受信者として使用して、<see cref="T:System.Diagnostics.XmlWriterTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-218">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class with the specified name, using the specified writer as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa0ef-219">このコンストラクターは、 <xref:System.Diagnostics.TraceListener.Name%2A>パラメーターが`name` `null`の`name`場合、プロパティをパラメーター値または空の文字列 ("") に初期化します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-219">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter value or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="aa0ef-220">名前をコレクションの<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>インデックスとして使用すると、リスナーのプロパティをプログラムで変更できます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-220">The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="aa0ef-221">たとえば、次のコードは、 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> <xref:System.Diagnostics.TraceListener.Name%2A>プロパティが "xmllistener" <xref:System.Diagnostics.XmlWriterTraceListener>であるのインスタンスのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-221">For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is "xmlListener".</span></span>  
  
```  
((XmlWriterTraceListener)Trace.Listeners["xmlListener"]).TraceOutputOptions =   
    TraceOptions.Timestamp.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aa0ef-222"><paramref name="writer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-222"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="aa0ef-223">アンマネージコードを呼び出すことができる。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-223">for the ability to call unmanaged code.</span></span> <span data-ttu-id="aa0ef-224"><see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="aa0ef-224">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (string filename, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::String ^ filename, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : string * string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener (filename, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="aa0ef-225">書き込み先のファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-225">The name of the file to write to.</span></span></param>
        <param name="name"><span data-ttu-id="aa0ef-226">新規インスタンスの名前。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-226">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="aa0ef-227">指定されたファイルをデバッグ出力およびトレース出力の受信者として使用して、<see cref="T:System.Diagnostics.XmlWriterTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-227">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class with the specified name, using the specified file as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa0ef-228">このコンストラクターは、エンコーディングを使用<xref:System.IO.StreamWriter>して<xref:System.Text.Encoding.UTF8%2A> 、指定されたパスの指定されたファイルのクラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-228">This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding.</span></span> <span data-ttu-id="aa0ef-229">ファイルが存在する場合は、に追加されます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-229">If the file exists, it is appended to.</span></span> <span data-ttu-id="aa0ef-230">ファイルが存在しない場合は、新しいファイルが作成されます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-230">If the file does not exist, a new file is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aa0ef-231">例外が発生する可能性を減らすために、出力を無効にする可能性のある文字は "?" 文字に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-231">To reduce the chance of an exception, any character that might invalidate the output is replaced with a "?" character.</span></span>  
  
 <span data-ttu-id="aa0ef-232">パラメーター <xref:System.Diagnostics.TraceListener.Name%2A>がの場合は、 `name`プロパティがパラメーター値に設定されている`name`か、空の文字列`null`("") に設定されています。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-232">The <xref:System.Diagnostics.TraceListener.Name%2A> property is set to the `name` parameter value or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="aa0ef-233">名前をコレクションの<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>インデックスとして使用すると、リスナーのプロパティをプログラムで変更できます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-233">The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="aa0ef-234">たとえば、次のコードは、 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> <xref:System.Diagnostics.TraceListener.Name%2A>プロパティが "xmllistener" <xref:System.Diagnostics.XmlWriterTraceListener>であるのインスタンスのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-234">For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is "xmlListener".</span></span>  
  
```  
((XmlWriterTraceListener)Trace.Listeners["xmlListener"]).TraceOutputOptions =  
    TraceOptions.Timestamp.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="aa0ef-235"><paramref name="stream" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-235"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="aa0ef-236">アンマネージコードを呼び出すことができる。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-236">for the ability to call unmanaged code.</span></span> <span data-ttu-id="aa0ef-237"><see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="aa0ef-237">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlWriterTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aa0ef-238">このリスナーの <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> を終了して、トレース出力またはデバッグ出力を受信しないようにします。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-238">Closes the <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> for this listener so that it no longer receives tracing or debugging output.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="override this.Fail : string * string -&gt; unit" Usage="xmlWriterTraceListener.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="aa0ef-239">書き込むエラー メッセージ。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-239">The error message to write.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="aa0ef-240">エラー メッセージに追加する詳細なエラー メッセージ。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-240">The detailed error message to append to the error message.</span></span></param>
        <summary><span data-ttu-id="aa0ef-241">エラー メッセージおよびエラー メッセージの詳細を含むトレース情報をファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-241">Writes trace information including an error message and a detailed error message to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa0ef-242">既定の動作では、アプリケーションがユーザーインターフェイスモードで実行されているときにメッセージと詳細メッセージがメッセージボックスに表示さ<xref:System.Diagnostics.TraceListener>れ、 <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>コレクション内のインスタンスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-242">The default behavior is to display the message and detailed message in a message box when the application is running in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection.</span></span> <span data-ttu-id="aa0ef-243">既定では、コレクションにはの<xref:System.Diagnostics.DefaultTraceListener>インスタンスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-243">By default, the collection contains an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="aa0ef-244">この動作は、コレクションのを<xref:System.Diagnostics.TraceListener>追加または削除することによってカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-244">You can customize this behavior by adding or removing a <xref:System.Diagnostics.TraceListener> from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="aa0ef-245">アンマネージコードを呼び出すことができる。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-245">for the ability to call unmanaged code.</span></span> <span data-ttu-id="aa0ef-246"><see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="aa0ef-246">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="aa0ef-247">トレース データを出力ファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-247">Writes trace data to the output file or stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="xmlWriterTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="aa0ef-248">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" />。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-248">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="aa0ef-249">ソース名。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-249">The source name.</span></span></param>
        <param name="eventType"><span data-ttu-id="aa0ef-250"><see cref="T:System.Diagnostics.TraceEventType" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-250">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span></span></param>
        <param name="id"><span data-ttu-id="aa0ef-251">イベントの数値識別子。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-251">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="aa0ef-252">出力するデータ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-252">A data object to emit.</span></span></param>
        <summary><span data-ttu-id="aa0ef-253">トレース情報 (データ オブジェクトおよびイベント情報) をファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-253">Writes trace information, a data object, and event information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa0ef-254">、、、および `id` の各パラメーターは、トレースのヘッダーとフッターで使用されます。 `eventType` `source` `eventCache`</span><span class="sxs-lookup"><span data-stu-id="aa0ef-254">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="aa0ef-255">パラメーターは書き込み前に符号なし整数に変換されるため、 `id`負の値は大きな正の整数として書き込まれます。 `id`</span><span class="sxs-lookup"><span data-stu-id="aa0ef-255">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="aa0ef-256">パラメーターは、 `TraceData`要素内の`DataItem`ノードとして書き込まれます。 `data`</span><span class="sxs-lookup"><span data-stu-id="aa0ef-256">The `data` parameter is written as a `DataItem` node in the `TraceData` element.</span></span> <span data-ttu-id="aa0ef-257">データオブジェクトのメソッドは、オブジェクトを文字列に変換するために使用されます。 `ToString`</span><span class="sxs-lookup"><span data-stu-id="aa0ef-257">The `ToString` method of the data object is used to convert the object to a string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="aa0ef-258">このメソッドは、アプリケーションコードによって直接呼び出すためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-258">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="aa0ef-259">これは<xref:System.Diagnostics.Debug>、、 <xref:System.Diagnostics.Trace>、および<xref:System.Diagnostics.TraceSource>クラスのメソッドによって呼び出され、トレースデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-259">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="aa0ef-260">アンマネージコードを呼び出すことができる。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-260">for the ability to call unmanaged code.</span></span> <span data-ttu-id="aa0ef-261"><see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="aa0ef-261">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="xmlWriterTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="aa0ef-262">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" />。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-262">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="aa0ef-263">ソース名。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-263">The source name.</span></span></param>
        <param name="eventType"><span data-ttu-id="aa0ef-264"><see cref="T:System.Diagnostics.TraceEventType" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-264">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span></span></param>
        <param name="id"><span data-ttu-id="aa0ef-265">イベントの数値識別子。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-265">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="aa0ef-266">出力するデータ オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-266">An array of data objects to emit.</span></span></param>
        <summary><span data-ttu-id="aa0ef-267">トレース情報、データ オブジェクト、およびイベント情報をファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-267">Writes trace information, data objects, and event information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa0ef-268">、、、および `id` の各パラメーターは、トレースのヘッダーとフッターで使用されます。 `eventType` `source` `eventCache`</span><span class="sxs-lookup"><span data-stu-id="aa0ef-268">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="aa0ef-269">パラメーターは書き込み前に符号なし整数に変換されるため、 `id`負の値は大きな正の整数として書き込まれます。 `id`</span><span class="sxs-lookup"><span data-stu-id="aa0ef-269">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="aa0ef-270">`data`パラメーター配列内のオブジェクトは、 `TraceData`要素内`DataItem`のノードとして書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-270">The objects in the `data` parameter array are written as `DataItem` nodes in the `TraceData` element.</span></span> <span data-ttu-id="aa0ef-271">各データオブジェクトのメソッドは、オブジェクトを文字列に変換するために使用されます。 `ToString`</span><span class="sxs-lookup"><span data-stu-id="aa0ef-271">The `ToString` method of each data object is used to convert the object to a string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="aa0ef-272">このメソッドは、アプリケーションコードによって直接呼び出すためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-272">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="aa0ef-273">これは<xref:System.Diagnostics.Debug>、、 <xref:System.Diagnostics.Trace>、および<xref:System.Diagnostics.TraceSource>クラスのメソッドによって呼び出され、トレースデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-273">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="aa0ef-274">アンマネージコードを呼び出すことができる。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-274">for the ability to call unmanaged code.</span></span> <span data-ttu-id="aa0ef-275"><see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="aa0ef-275">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="aa0ef-276">イベント トレース情報を出力ファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-276">Writes event trace information to the output file or stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="xmlWriterTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="aa0ef-277">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" />。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-277">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="aa0ef-278">ソース名。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-278">The source name.</span></span></param>
        <param name="eventType"><span data-ttu-id="aa0ef-279"><see cref="T:System.Diagnostics.TraceEventType" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-279">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span></span></param>
        <param name="id"><span data-ttu-id="aa0ef-280">イベントの数値識別子。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-280">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="aa0ef-281">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-281">The message to write.</span></span></param>
        <summary><span data-ttu-id="aa0ef-282">トレース情報、メッセージ、およびイベント情報をファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-282">Writes trace information, a message, and event information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa0ef-283">、、、および `id` の各パラメーターは、トレースのヘッダーとフッターで使用されます。 `eventType` `source` `eventCache`</span><span class="sxs-lookup"><span data-stu-id="aa0ef-283">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="aa0ef-284">パラメーターは書き込み前に符号なし整数に変換されるため、 `id`負の値は大きな正の整数として書き込まれます。 `id`</span><span class="sxs-lookup"><span data-stu-id="aa0ef-284">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="aa0ef-285">パラメーターは`Message`要素として書き込まれます。 `message`</span><span class="sxs-lookup"><span data-stu-id="aa0ef-285">The `message` parameter is written as the `Message` element.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="aa0ef-286">このメソッドは、アプリケーションコードによって直接呼び出すためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-286">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="aa0ef-287">これは<xref:System.Diagnostics.Debug>、、 <xref:System.Diagnostics.Trace>、および<xref:System.Diagnostics.TraceSource>クラスのメソッドによって呼び出され、トレースデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-287">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="aa0ef-288">アンマネージコードを呼び出すことができる。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-288">for the ability to call unmanaged code.</span></span> <span data-ttu-id="aa0ef-289"><see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="aa0ef-289">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="xmlWriterTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="aa0ef-290">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" />。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-290">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="aa0ef-291">ソース名。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-291">The source name.</span></span></param>
        <param name="eventType"><span data-ttu-id="aa0ef-292"><see cref="T:System.Diagnostics.TraceEventType" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-292">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span></span></param>
        <param name="id"><span data-ttu-id="aa0ef-293">イベントの数値識別子。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-293">A numeric identifier for the event.</span></span></param>
        <param name="format"><span data-ttu-id="aa0ef-294">0 個以上の書式項目を格納している書式指定文字列。<paramref name="args" /> 配列内のオブジェクトに対応します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-294">A format string that contains zero or more format items that correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="aa0ef-295">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-295">An object array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="aa0ef-296">トレース情報、書式設定されたメッセージ、およびイベント情報をファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-296">Writes trace information, a formatted message, and event information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa0ef-297">、、、および `id` の各パラメーターは、トレースのヘッダーとフッターで使用されます。 `eventType` `source` `eventCache`</span><span class="sxs-lookup"><span data-stu-id="aa0ef-297">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="aa0ef-298">パラメーターは書き込み前に符号なし整数に変換されるため、 `id`負の値は大きな正の整数として書き込まれます。 `id`</span><span class="sxs-lookup"><span data-stu-id="aa0ef-298">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="aa0ef-299">`args` `args` `Message`メソッドが呼び出され、 `format`文字列と配列をパラメーターとして渡して、オブジェクト配列を要素として書式設定します。 <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="aa0ef-299">The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method is called, passing in the `format` string and `args` array as parameters, to format the `args` object array as the `Message` element.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="aa0ef-300">このメソッドは、アプリケーションコードによって直接呼び出すためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-300">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="aa0ef-301">これは<xref:System.Diagnostics.Debug>、、 <xref:System.Diagnostics.Trace>、および<xref:System.Diagnostics.TraceSource>クラスのメソッドによって呼び出され、トレースデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-301">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="aa0ef-302">アンマネージコードを呼び出すことができる。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-302">for the ability to call unmanaged code.</span></span> <span data-ttu-id="aa0ef-303"><see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="aa0ef-303">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public override void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceTransfer(class System.Diagnostics.TraceEventCache eventCache, string source, int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceTransfer (eventCache As TraceEventCache, source As String, id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceTransfer(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberSignature Language="F#" Value="override this.TraceTransfer : System.Diagnostics.TraceEventCache * string * int * string * Guid -&gt; unit" Usage="xmlWriterTraceListener.TraceTransfer (eventCache, source, id, message, relatedActivityId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="aa0ef-304">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" />。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-304">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="aa0ef-305">ソース名。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-305">The source name.</span></span></param>
        <param name="id"><span data-ttu-id="aa0ef-306">イベントの数値識別子。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-306">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="aa0ef-307">書き込むトレース メッセージ。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-307">A trace message to write.</span></span></param>
        <param name="relatedActivityId"><span data-ttu-id="aa0ef-308">関連するアクティビティを識別する <see cref="T:System.Guid" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-308">A <see cref="T:System.Guid" /> structure that identifies a related activity.</span></span></param>
        <summary><span data-ttu-id="aa0ef-309">関連するアクティビティの ID を含むトレース情報、メッセージ、およびイベント情報をファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-309">Writes trace information including the identity of a related activity, a message, and event information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa0ef-310">メソッド<xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A>は、関連するトレースの関連付けに使用されます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-310">The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is used for the correlation of related traces.</span></span> <span data-ttu-id="aa0ef-311">、、、および `relatedActivityId` の各パラメーターは、トレースのヘッダーとフッターで使用されます。 `id` `source` `eventCache`</span><span class="sxs-lookup"><span data-stu-id="aa0ef-311">The `eventCache`, `source`, `id`, and `relatedActivityId` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="aa0ef-312">パラメーターは書き込み前に符号なし整数に変換されるため、 `id`負の値は大きな正の整数として書き込まれます。 `id`</span><span class="sxs-lookup"><span data-stu-id="aa0ef-312">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="aa0ef-313">パラメーターは`Message`要素として書き込まれます。 `message`</span><span class="sxs-lookup"><span data-stu-id="aa0ef-313">The `message` parameter is written as the `Message` element.</span></span> <span data-ttu-id="aa0ef-314">このメソッドは、ヘッダーに表示`relatedActivityId`される "B" 書式設定された文字列に値を変換するために呼び出されます。 <xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="aa0ef-314">The <xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType> method is called to convert the `relatedActivityId`value to a "B" formatted string, which appears in the header.</span></span> <span data-ttu-id="aa0ef-315">フッター `SubTypeName`の要素は、トレースイベントの種類を<xref:System.Diagnostics.TraceEventType.Transfer>として識別します。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-315">The `SubTypeName` element in the footer identifies the trace event type as a <xref:System.Diagnostics.TraceEventType.Transfer>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="aa0ef-316">メソッド<xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A>は、アプリケーションコードから呼び出すためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-316">The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is not intended to be called by application code.</span></span>  <span data-ttu-id="aa0ef-317">これは、 <xref:System.Diagnostics.TraceSource.TraceTransfer%2A>メソッドのトレース情報を<xref:System.Diagnostics.TraceSource>出力するために、オブジェクトによって呼び出されることを意図しています。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-317">It is intended to be called by a <xref:System.Diagnostics.TraceSource> object to emit the trace information for its <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="aa0ef-318">アンマネージコードを呼び出すことができる。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-318">for the ability to call unmanaged code.</span></span> <span data-ttu-id="aa0ef-319"><see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="aa0ef-319">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="xmlWriterTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="aa0ef-320">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-320">The message to write.</span></span></param>
        <summary><span data-ttu-id="aa0ef-321">逐語的メッセージを追加のコンテキスト情報なしでファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-321">Writes a verbatim message without any additional context information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa0ef-322"><xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>メソッドを使用して、ログ出力にコンテキスト情報を含めます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-322">Use the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method to include context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="aa0ef-323">アンマネージコードを呼び出すことができる。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-323">for the ability to call unmanaged code.</span></span> <span data-ttu-id="aa0ef-324"><see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="aa0ef-324">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="xmlWriterTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="aa0ef-325">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-325">The message to write.</span></span></param>
        <summary><span data-ttu-id="aa0ef-326">逐語的メッセージを追加のコンテキスト情報なしでファイルまたはストリームに書き込み、続けて現在の行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-326">Writes a verbatim message without any additional context information followed by the current line terminator to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa0ef-327"><xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>メソッドを使用して、ログ出力にコンテキスト情報を含めます。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-327">Use the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method to include context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="aa0ef-328">アンマネージコードを呼び出すことができる。</span><span class="sxs-lookup"><span data-stu-id="aa0ef-328">for the ability to call unmanaged code.</span></span> <span data-ttu-id="aa0ef-329"><see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="aa0ef-329">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>
