<Type Name="XmlWriterTraceListener" FullName="System.Diagnostics.XmlWriterTraceListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f5dee81413f1eca24d18db1320164d7c7eca4132" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="37767174" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlWriterTraceListener : System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlWriterTraceListener extends System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.XmlWriterTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlWriterTraceListener&#xA;Inherits TextWriterTraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriterTraceListener : System::Diagnostics::TextWriterTraceListener" />
  <TypeSignature Language="F#" Value="type XmlWriterTraceListener = class&#xA;    inherit TextWriterTraceListener" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TextWriterTraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5011d-101">トレース出力またはデバッグ出力を XML エンコードされたデータとして <see cref="T:System.IO.TextWriter" /> または <see cref="T:System.IO.Stream" /> (<see cref="T:System.IO.FileStream" /> など) に転送します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5011d-101">Directs tracing or debugging output as XML-encoded data to a <see cref="T:System.IO.TextWriter" /> or to a <see cref="T:System.IO.Stream" />, such as a <see cref="T:System.IO.FileStream" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5011d-102">インスタンスを作成するコードのアクセス許可を管理する必要がありますが、<xref:System.Diagnostics.XmlWriterTraceListener>クラス。</span><span class="sxs-lookup"><span data-stu-id="5011d-102">You must have unmanaged code permission to create an instance of the <xref:System.Diagnostics.XmlWriterTraceListener> class.</span></span>  
  
 <span data-ttu-id="5011d-103"><xref:System.Diagnostics.XmlWriterTraceListener>クラスは、トレースとデバッグについては、XML でエンコードされたテキスト ストリームに変換します。</span><span class="sxs-lookup"><span data-stu-id="5011d-103">The <xref:System.Diagnostics.XmlWriterTraceListener> class converts tracing and debugging information into an XML-encoded text stream.</span></span> <span data-ttu-id="5011d-104">XML 出力の説明は、次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="5011d-104">The description of the XML output is shown in the tables that follow.</span></span> <span data-ttu-id="5011d-105">使用することができます、[サービス トレース ビューアー ツール (SvcTraceViewer.exe)](http://go.microsoft.com/fwlink/p/?LinkId=240129)出力 XML を表示するためにします。</span><span class="sxs-lookup"><span data-stu-id="5011d-105">You can use the [Service Trace Viewer Tool (SvcTraceViewer.exe)](http://go.microsoft.com/fwlink/p/?LinkId=240129) to display the XML output.</span></span>  
  
 <span data-ttu-id="5011d-106">有効または無効にすることができます、<xref:System.Diagnostics.XmlWriterTraceListener>を通じて、アプリケーション構成ファイルと、使用して、構成された<xref:System.Diagnostics.XmlWriterTraceListener>アプリケーションでします。</span><span class="sxs-lookup"><span data-stu-id="5011d-106">You can enable or disable an <xref:System.Diagnostics.XmlWriterTraceListener> through the application configuration file and then use the configured <xref:System.Diagnostics.XmlWriterTraceListener> in your application.</span></span> <span data-ttu-id="5011d-107">また、作成することができます、<xref:System.Diagnostics.XmlWriterTraceListener>コードにします。</span><span class="sxs-lookup"><span data-stu-id="5011d-107">Alternately, you can create an <xref:System.Diagnostics.XmlWriterTraceListener> in your code.</span></span>  
  
 <span data-ttu-id="5011d-108">構成する、<xref:System.Diagnostics.XmlWriterTraceListener>アプリケーションの名前に対応する構成ファイルを編集します。</span><span class="sxs-lookup"><span data-stu-id="5011d-108">To configure an <xref:System.Diagnostics.XmlWriterTraceListener>, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="5011d-109">このファイルでを追加またはリスナーの削除、リスナーのプロパティを設定したりのリスナーを削除できます。</span><span class="sxs-lookup"><span data-stu-id="5011d-109">In this file, you can add or remove a listener, set the properties for a listener, or remove listeners.</span></span> <span data-ttu-id="5011d-110">構成ファイルは、次の例のように書式設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5011d-110">The configuration file should be formatted like the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="xmlListener"   
          type="System.Diagnostics.XmlWriterTraceListener"   
          initializeData="xmlOutput.xml"   
          traceOutputOptions="ProcessId, DateTime" />  
        <remove name="Default" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="5011d-111"><xref:System.Diagnostics.XmlWriterTraceListener>クラスの継承、<xref:System.Diagnostics.TraceListener.Filter%2A>基底クラスからプロパティ<xref:System.Diagnostics.TraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="5011d-111">The <xref:System.Diagnostics.XmlWriterTraceListener> class inherits the <xref:System.Diagnostics.TraceListener.Filter%2A> property from the base class <xref:System.Diagnostics.TraceListener>.</span></span>  <span data-ttu-id="5011d-112"><xref:System.Diagnostics.TraceListener.Filter%2A>プロパティは、リスナーにフィルター処理のトレース出力の追加レベルを使用します。</span><span class="sxs-lookup"><span data-stu-id="5011d-112">The <xref:System.Diagnostics.TraceListener.Filter%2A> property allows an additional level of trace output filtering at the listener.</span></span>  <span data-ttu-id="5011d-113">存在する場合は、フィルターがある場合、`Trace`トレース リスナーの呼び出しのメソッド、<xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>トレースを出力するかどうかを判断するフィルターのメソッド。</span><span class="sxs-lookup"><span data-stu-id="5011d-113">If there is a filter present, the `Trace` methods of the trace listener call the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method of the filter to determine whether to emit the trace.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5011d-114">使用されているファイルへの書き込みを試行または利用不可、ファイル名が自動的に付いて GUID。</span><span class="sxs-lookup"><span data-stu-id="5011d-114">If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5011d-115">リスナーのメソッドのメソッドによって呼び出されるものでは、 <xref:System.Diagnostics.Debug>、 <xref:System.Diagnostics.Trace>、および<xref:System.Diagnostics.TraceSource>クラス。</span><span class="sxs-lookup"><span data-stu-id="5011d-115">Listener methods are intended to be called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes.</span></span>  <span data-ttu-id="5011d-116">リスナーのメソッドは、アプリケーション コードから直接呼び出されるものではありません。</span><span class="sxs-lookup"><span data-stu-id="5011d-116">The listener methods are not intended to be called directly from application code.</span></span> <span data-ttu-id="5011d-117"><xref:System.Diagnostics.XmlWriterTraceListener>で使用するためのリスナーを主な対象は、<xref:System.Diagnostics.TraceSource>クラス。</span><span class="sxs-lookup"><span data-stu-id="5011d-117">The <xref:System.Diagnostics.XmlWriterTraceListener> listener is primarily intended for use by the <xref:System.Diagnostics.TraceSource> class.</span></span> <span data-ttu-id="5011d-118"><xref:System.Diagnostics.XmlWriterTraceListener.Write%2A>と<xref:System.Diagnostics.XmlWriterTraceListener.WriteLine%2A>メソッドの呼び出し、<xref:System.Diagnostics.Trace>と<xref:System.Diagnostics.Debug>クラス、および既定値は XML 要素の提供を<xref:System.Diagnostics.Trace>と<xref:System.Diagnostics.Debug>の値を指定しません。</span><span class="sxs-lookup"><span data-stu-id="5011d-118">The <xref:System.Diagnostics.XmlWriterTraceListener.Write%2A> and <xref:System.Diagnostics.XmlWriterTraceListener.WriteLine%2A> methods can be called by the <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> classes, and default values are provided for the XML elements that <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> do not supply values for.</span></span>  
  
 <span data-ttu-id="5011d-119">次の表では、要素と、XML 出力の属性について説明します。</span><span class="sxs-lookup"><span data-stu-id="5011d-119">The following table describes the elements and attributes of the XML output.</span></span>  
  
|<span data-ttu-id="5011d-120">要素</span><span class="sxs-lookup"><span data-stu-id="5011d-120">Element</span></span>|<span data-ttu-id="5011d-121">属性</span><span class="sxs-lookup"><span data-stu-id="5011d-121">Attributes</span></span>|<span data-ttu-id="5011d-122">出力</span><span class="sxs-lookup"><span data-stu-id="5011d-122">Output</span></span>|<span data-ttu-id="5011d-123">メモ</span><span class="sxs-lookup"><span data-stu-id="5011d-123">Notes</span></span>|  
|-------------|----------------|------------|-----------|  
|`CallStack`|<span data-ttu-id="5011d-124">なし</span><span class="sxs-lookup"><span data-stu-id="5011d-124">None</span></span>|<span data-ttu-id="5011d-125">存在に依存、<xref:System.Diagnostics.TraceOptions.Callstack>フラグ、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5011d-125">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Callstack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="5011d-126">などの特殊文字 > または < はエスケープ シーケンスに置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="5011d-126">Special characters such as > or < are replaced with escape sequences.</span></span> <span data-ttu-id="5011d-127">これに続くエスケープ文字の変換テーブルを参照してください。</span><span class="sxs-lookup"><span data-stu-id="5011d-127">See the escaped character translation table that follows.</span></span>|  
|`Computer`|<span data-ttu-id="5011d-128">なし</span><span class="sxs-lookup"><span data-stu-id="5011d-128">None</span></span>|<span data-ttu-id="5011d-129">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="5011d-129">Always present.</span></span>|<span data-ttu-id="5011d-130"><xref:System.Environment.MachineName%2A> プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="5011d-130">The value of the <xref:System.Environment.MachineName%2A> property.</span></span>|  
|`Correlation`|`ActivityID`|<span data-ttu-id="5011d-131">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="5011d-131">Always present</span></span>|<span data-ttu-id="5011d-132">指定しない場合、既定では空の GUID です。</span><span class="sxs-lookup"><span data-stu-id="5011d-132">If not specified, the default is an empty GUID.</span></span>|  
||`RelatedActivityID`|<span data-ttu-id="5011d-133">存在に依存、`relatedActivityId`トレース メソッド呼び出しのパラメーター。</span><span class="sxs-lookup"><span data-stu-id="5011d-133">Depends on the presence of the `relatedActivityId` parameter in the Trace method call.</span></span>|<span data-ttu-id="5011d-134"><xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> メソッドの `relatedActivityId` パラメーター。</span><span class="sxs-lookup"><span data-stu-id="5011d-134">The `relatedActivityId` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method.</span></span>|  
|`DataItem`|<span data-ttu-id="5011d-135">なし</span><span class="sxs-lookup"><span data-stu-id="5011d-135">None</span></span>|<span data-ttu-id="5011d-136">依存、`data`のパラメーター、<xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="5011d-136">Depends on the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method.</span></span>|<span data-ttu-id="5011d-137">値がのセットとして書き込まれるために、この要素は要素または 1 つの要素の配列を含めることができます`DataItem`の下のノード、`TraceData`要素。</span><span class="sxs-lookup"><span data-stu-id="5011d-137">This element can contain an array of elements or one element, so the values are written as a set of `DataItem` nodes under the `TraceData` element.</span></span><br /><br /> <span data-ttu-id="5011d-138">データの出力は、`ToString`渡されたデータ オブジェクトのメソッド。</span><span class="sxs-lookup"><span data-stu-id="5011d-138">The data output uses the `ToString` method of the passed-in data objects.</span></span>|  
|`EventID`|<span data-ttu-id="5011d-139">なし</span><span class="sxs-lookup"><span data-stu-id="5011d-139">None</span></span>|<span data-ttu-id="5011d-140">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="5011d-140">Always present.</span></span>|<span data-ttu-id="5011d-141">パラメーターの入力 (`id`)。</span><span class="sxs-lookup"><span data-stu-id="5011d-141">Parameter input (`id`).</span></span>|  
|`Execution`|`ProcessName`|<span data-ttu-id="5011d-142">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="5011d-142">Always present.</span></span>|<span data-ttu-id="5011d-143"><xref:System.Diagnostics.TraceEventCache>します。</span><span class="sxs-lookup"><span data-stu-id="5011d-143">From the <xref:System.Diagnostics.TraceEventCache>.</span></span>|  
||`ProcessID`|<span data-ttu-id="5011d-144">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="5011d-144">Always present.</span></span>|<span data-ttu-id="5011d-145"><xref:System.Diagnostics.TraceEventCache>します。</span><span class="sxs-lookup"><span data-stu-id="5011d-145">From the <xref:System.Diagnostics.TraceEventCache>.</span></span> <span data-ttu-id="5011d-146">Windows 98 および Windows オペレーティング システムで Me`ProcessID`が正、負の数の表現であることと、正しいプロセス識別子の取得に変換する必要があります 2,147, 483,647 を超える。</span><span class="sxs-lookup"><span data-stu-id="5011d-146">On Windows 98 and Windows Me operating systems, if `ProcessID` is greater than 2,147,483,647 it is a positive representation of a negative number and should be converted to obtain the correct process identifier.</span></span>|  
||`ThreadID`|<span data-ttu-id="5011d-147">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="5011d-147">Always present.</span></span>|<span data-ttu-id="5011d-148"><xref:System.Diagnostics.TraceEventCache>します。</span><span class="sxs-lookup"><span data-stu-id="5011d-148">From the <xref:System.Diagnostics.TraceEventCache>.</span></span>|  
|`Level`|<span data-ttu-id="5011d-149">なし</span><span class="sxs-lookup"><span data-stu-id="5011d-149">None</span></span>|<span data-ttu-id="5011d-150">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="5011d-150">Always present.</span></span>|<span data-ttu-id="5011d-151">パラメーターの入力 (の数値`eventType`)。</span><span class="sxs-lookup"><span data-stu-id="5011d-151">Parameter input (the numeric value of `eventType`).</span></span> <span data-ttu-id="5011d-152">パラメーター値の 255 より大きい値では、255 として出力をされます。</span><span class="sxs-lookup"><span data-stu-id="5011d-152">Parameter values greater than 255 are output as 255.</span></span>|  
|`LogicalOperationStack`|<span data-ttu-id="5011d-153">なし</span><span class="sxs-lookup"><span data-stu-id="5011d-153">None</span></span>|<span data-ttu-id="5011d-154">存在に依存、<xref:System.Diagnostics.TraceOptions.LogicalOperationStack>フラグ、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5011d-154">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="5011d-155">として値が書き込まれますので、1 つ以上の論理操作にすることができます`LogicalOperation`の下のノード、`LogicalOperationStack`要素。</span><span class="sxs-lookup"><span data-stu-id="5011d-155">There can be more than one logical operation, so the values are written as `LogicalOperation` nodes under the `LogicalOperationStack` element.</span></span>|  
|`Message`|<span data-ttu-id="5011d-156">なし</span><span class="sxs-lookup"><span data-stu-id="5011d-156">None</span></span>|<span data-ttu-id="5011d-157">トレースのメソッドの呼び出しでのメッセージの存在に依存します。</span><span class="sxs-lookup"><span data-stu-id="5011d-157">Depends on the presence of a message in the Trace method call.</span></span>|<span data-ttu-id="5011d-158">この要素は、書式設定の引数が指定されている場合、書式設定されたメッセージです。</span><span class="sxs-lookup"><span data-stu-id="5011d-158">This element is a formatted message if formatting arguments are provided.</span></span>|  
|`Source`|`Name`|<span data-ttu-id="5011d-159">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="5011d-159">Always present.</span></span>|<span data-ttu-id="5011d-160">パラメーターを入力します。</span><span class="sxs-lookup"><span data-stu-id="5011d-160">Parameter input.</span></span>|  
|`SubType`|`Name`|<span data-ttu-id="5011d-161">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="5011d-161">Always present.</span></span>|<span data-ttu-id="5011d-162">パラメーターを入力します。</span><span class="sxs-lookup"><span data-stu-id="5011d-162">Parameter input.</span></span>|  
|`TimeCreated`|`SystemTime`|<span data-ttu-id="5011d-163">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="5011d-163">Always present.</span></span>|<span data-ttu-id="5011d-164">内に存在しない場合、 <xref:System.Diagnostics.TraceEventCache>、既定値は、現在の時刻。</span><span class="sxs-lookup"><span data-stu-id="5011d-164">If not present in the <xref:System.Diagnostics.TraceEventCache>, the default is the current time.</span></span>|  
|`TimeStamp`|<span data-ttu-id="5011d-165">なし</span><span class="sxs-lookup"><span data-stu-id="5011d-165">None</span></span>|<span data-ttu-id="5011d-166">存在に依存、<xref:System.Diagnostics.TraceOptions.Timestamp>フラグ、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5011d-166">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Timestamp> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="5011d-167"><xref:System.Diagnostics.TraceEventCache>します。</span><span class="sxs-lookup"><span data-stu-id="5011d-167">From the <xref:System.Diagnostics.TraceEventCache>.</span></span>|  
|`Type`|<span data-ttu-id="5011d-168">なし</span><span class="sxs-lookup"><span data-stu-id="5011d-168">None</span></span>|<span data-ttu-id="5011d-169">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="5011d-169">Always present.</span></span>|<span data-ttu-id="5011d-170">常に値 3 です。</span><span class="sxs-lookup"><span data-stu-id="5011d-170">Always the value 3.</span></span>|  
  
 <span data-ttu-id="5011d-171">次の表では、XML 出力でエスケープされている文字を示します。</span><span class="sxs-lookup"><span data-stu-id="5011d-171">The following table shows the characters that are escaped in the XML output.</span></span> <span data-ttu-id="5011d-172">エスケープのすべての要素で発生して、属性は例外です、`DataItem`要素で、オブジェクトが渡された場合はエスケープされません、`data`のパラメーター、<xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>メソッドは、<xref:System.Xml.XPath.XPathNavigator>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5011d-172">Escaping occurs in all the elements and attributes with the exception of the `DataItem` element, which is not escaped if the object passed to the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method is an <xref:System.Xml.XPath.XPathNavigator> object.</span></span> <span data-ttu-id="5011d-173">場合、<xref:System.Xml.XPath.XPathNavigator>データ オブジェクトが使用される、<xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A>メソッドが呼び出され、エスケープされていないデータとして全体のルート ノードを追跡します。</span><span class="sxs-lookup"><span data-stu-id="5011d-173">If an <xref:System.Xml.XPath.XPathNavigator> is used for the data object, the <xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A> method is called and the entire root node is traced as unescaped data.</span></span>  
  
|<span data-ttu-id="5011d-174">エスケープ文字</span><span class="sxs-lookup"><span data-stu-id="5011d-174">Escaped character</span></span>|<span data-ttu-id="5011d-175">[値]</span><span class="sxs-lookup"><span data-stu-id="5011d-175">Value</span></span>|  
|-----------------------|-----------|  
|&|&amp;|  
|\<|&lt;|  
|>|&gt;|  
|<span data-ttu-id="5011d-176">"</span><span class="sxs-lookup"><span data-stu-id="5011d-176">"</span></span>|&quot;|  
|\|&apos;|  
|<span data-ttu-id="5011d-177">0 xd</span><span class="sxs-lookup"><span data-stu-id="5011d-177">0xD</span></span>|<span data-ttu-id="5011d-178">&\#xD;</span><span class="sxs-lookup"><span data-stu-id="5011d-178">&\#xD;</span></span>|  
|<span data-ttu-id="5011d-179">0 xa</span><span class="sxs-lookup"><span data-stu-id="5011d-179">0xA</span></span>|<span data-ttu-id="5011d-180">&\#xA;</span><span class="sxs-lookup"><span data-stu-id="5011d-180">&\#xA;</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="5011d-181">次のコード例の使用を示しています、<xref:System.Diagnostics.XmlWriterTraceListener>エスケープと非エスケープの両方のデータ ファイルのログを書き込むクラス。</span><span class="sxs-lookup"><span data-stu-id="5011d-181">The following code example shows the use of the <xref:System.Diagnostics.XmlWriterTraceListener> class to write both escaped and non-escaped data to file logs.</span></span>  
  
 [!code-csharp[System.Diagnostics.XmlWriterTraceListener#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.XmlWriterTraceListener/CS/program.cs#1)]
 [!code-vb[System.Diagnostics.XmlWriterTraceListener#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.XmlWriterTraceListener/VB/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="5011d-182">アンマネージ コードを呼び出す機能。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5011d-182">for the ability to call unmanaged code.</span>
      </span>
      <span data-ttu-id="5011d-183">
        <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span>
      <span class="sxs-lookup">
        <span data-stu-id="5011d-183">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
      </span>
    </permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5011d-184">
            <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-184">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.Stream -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="5011d-185">トレース リスナーが書き込むストリームを表す <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-185">A <see cref="T:System.IO.Stream" /> that represents the stream the trace listener writes to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5011d-186">指定されたストリームをデバッグ出力およびトレース出力の受信者として使用して、<see cref="T:System.Diagnostics.XmlWriterTraceListener" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-186">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class, using the specified stream as the recipient of the debugging and tracing output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5011d-187"><xref:System.Diagnostics.TraceListener.Name%2A>プロパティは空の文字列に初期化されます ("")。</span><span class="sxs-lookup"><span data-stu-id="5011d-187">The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5011d-188">
            <paramref name="stream" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-188">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5011d-189">アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-189">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="5011d-190">
            <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-190">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.TextWriter -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="5011d-191">トレース リスナーからの出力を受信する <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-191">A <see cref="T:System.IO.TextWriter" /> that receives the output from the trace listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5011d-192">指定されたライターをデバッグ出力およびトレース出力の受信者として使用して、<see cref="T:System.Diagnostics.XmlWriterTraceListener" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-192">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class using the specified writer as the recipient of the debugging and tracing output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5011d-193"><xref:System.Diagnostics.TraceListener.Name%2A>プロパティは空の文字列に初期化されます ("")。</span><span class="sxs-lookup"><span data-stu-id="5011d-193">The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5011d-194">
            <paramref name="writer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-194">
              <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5011d-195">アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-195">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="5011d-196">
            <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-196">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener filename" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="5011d-197">書き込み先のファイルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-197">The name of the file to write to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5011d-198">指定されたファイルをデバッグ出力およびトレース出力の受信者として使用して、<see cref="T:System.Diagnostics.XmlWriterTraceListener" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-198">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class, using the specified file as the recipient of the debugging and tracing output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5011d-199">このコンス トラクターの新しいインスタンスを初期化する、 <xref:System.IO.StreamWriter> 、指定したパスで指定されたファイルのクラスを使用して<xref:System.Text.Encoding.UTF8%2A>エンコードします。</span><span class="sxs-lookup"><span data-stu-id="5011d-199">This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding.</span></span> <span data-ttu-id="5011d-200">ファイルが存在する場合に追加されます。</span><span class="sxs-lookup"><span data-stu-id="5011d-200">If the file exists, it is appended to.</span></span> <span data-ttu-id="5011d-201">ファイルが存在しない場合は、新しいファイルが作成されます。</span><span class="sxs-lookup"><span data-stu-id="5011d-201">If the file does not exist, a new file is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5011d-202">例外が発生する可能性を減らすためには、出力が無効になる任意の文字が置き換え、"?"文字です。</span><span class="sxs-lookup"><span data-stu-id="5011d-202">To reduce the chance of an exception, any character that might invalidate the output is replaced with a "?" character.</span></span>  
  
 <span data-ttu-id="5011d-203"><xref:System.Diagnostics.TraceListener.Name%2A>プロパティは空の文字列に初期化されます ("")。</span><span class="sxs-lookup"><span data-stu-id="5011d-203">The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5011d-204">
            <paramref name="filename" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-204">
              <paramref name="filename" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5011d-205">アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-205">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="5011d-206">
            <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-206">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.Stream stream, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::Stream ^ stream, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.Stream * string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener (stream, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="5011d-207">トレース リスナーが書き込むストリームを表す <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-207">A <see cref="T:System.IO.Stream" /> that represents the stream the trace listener writes to.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="5011d-208">新規インスタンスの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-208">The name of the new instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5011d-209">指定されたストリームをデバッグ出力およびトレース出力の受信者として使用して、<see cref="T:System.Diagnostics.XmlWriterTraceListener" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-209">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class with the specified name, using the specified stream as the recipient of the debugging and tracing output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5011d-210">このコンス トラクターを初期化します、<xref:System.Diagnostics.TraceListener.Name%2A>プロパティを`name`パラメーターの値または空の文字列 ("") 場合、`name`パラメーターが`null`します。</span><span class="sxs-lookup"><span data-stu-id="5011d-210">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter value or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="5011d-211">名前をインデックスとして使用できます、<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>リスナーのプロパティをプログラムで変更するコレクション。</span><span class="sxs-lookup"><span data-stu-id="5011d-211">The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="5011d-212">たとえば、次のコード セット、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>のインスタンスのプロパティを<xref:System.Diagnostics.XmlWriterTraceListener>が<xref:System.Diagnostics.TraceListener.Name%2A>プロパティが"xmlListener"。</span><span class="sxs-lookup"><span data-stu-id="5011d-212">For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is "xmlListener".</span></span>  
  
```  
((XmlWriterTraceListener)Trace.Listeners["xmlListener"]).TraceOutputOptions =   
    TraceOptions.Timestamp  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5011d-213">
            <paramref name="stream" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-213">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5011d-214">アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-214">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="5011d-215">
            <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-215">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.TextWriter writer, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::TextWriter ^ writer, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.TextWriter * string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener (writer, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="5011d-216">トレース リスナーからの出力を受信する <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-216">A <see cref="T:System.IO.TextWriter" /> that receives the output from the trace listener.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="5011d-217">新規インスタンスの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-217">The name of the new instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5011d-218">指定されたライターをデバッグ出力およびトレース出力の受信者として使用して、<see cref="T:System.Diagnostics.XmlWriterTraceListener" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-218">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class with the specified name, using the specified writer as the recipient of the debugging and tracing output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5011d-219">このコンス トラクターを初期化します、<xref:System.Diagnostics.TraceListener.Name%2A>プロパティを`name`パラメーターの値または空の文字列 ("") 場合、`name`パラメーターが`null`します。</span><span class="sxs-lookup"><span data-stu-id="5011d-219">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter value or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="5011d-220">名前をインデックスとして使用できます、<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>リスナーのプロパティをプログラムで変更するコレクション。</span><span class="sxs-lookup"><span data-stu-id="5011d-220">The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="5011d-221">たとえば、次のコード セット、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>のインスタンスのプロパティを<xref:System.Diagnostics.XmlWriterTraceListener>が<xref:System.Diagnostics.TraceListener.Name%2A>プロパティが"xmlListener"。</span><span class="sxs-lookup"><span data-stu-id="5011d-221">For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is "xmlListener".</span></span>  
  
```  
((XmlWriterTraceListener)Trace.Listeners["xmlListener"]).TraceOutputOptions =   
    TraceOptions.Timestamp.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5011d-222">
            <paramref name="writer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-222">
              <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5011d-223">アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-223">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="5011d-224">
            <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-224">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (string filename, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::String ^ filename, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : string * string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener (filename, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="5011d-225">書き込み先のファイルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-225">The name of the file to write to.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="5011d-226">新規インスタンスの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-226">The name of the new instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5011d-227">指定されたファイルをデバッグ出力およびトレース出力の受信者として使用して、<see cref="T:System.Diagnostics.XmlWriterTraceListener" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-227">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class with the specified name, using the specified file as the recipient of the debugging and tracing output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5011d-228">このコンス トラクターの新しいインスタンスを初期化する、 <xref:System.IO.StreamWriter> 、指定したパスで指定されたファイルのクラスを使用して<xref:System.Text.Encoding.UTF8%2A>エンコードします。</span><span class="sxs-lookup"><span data-stu-id="5011d-228">This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding.</span></span> <span data-ttu-id="5011d-229">ファイルが存在する場合に追加されます。</span><span class="sxs-lookup"><span data-stu-id="5011d-229">If the file exists, it is appended to.</span></span> <span data-ttu-id="5011d-230">ファイルが存在しない場合は、新しいファイルが作成されます。</span><span class="sxs-lookup"><span data-stu-id="5011d-230">If the file does not exist, a new file is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5011d-231">例外が発生する可能性を減らすためには、出力が無効になる任意の文字が置き換え、"?"文字です。</span><span class="sxs-lookup"><span data-stu-id="5011d-231">To reduce the chance of an exception, any character that might invalidate the output is replaced with a "?" character.</span></span>  
  
 <span data-ttu-id="5011d-232"><xref:System.Diagnostics.TraceListener.Name%2A>プロパティに設定されて、`name`パラメーターの値または空の文字列 ("") 場合、`name`パラメーターが`null`します。</span><span class="sxs-lookup"><span data-stu-id="5011d-232">The <xref:System.Diagnostics.TraceListener.Name%2A> property is set to the `name` parameter value or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="5011d-233">名前をインデックスとして使用できます、<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>リスナーのプロパティをプログラムで変更するコレクション。</span><span class="sxs-lookup"><span data-stu-id="5011d-233">The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="5011d-234">たとえば、次のコード セット、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>のインスタンスのプロパティを<xref:System.Diagnostics.XmlWriterTraceListener>が<xref:System.Diagnostics.TraceListener.Name%2A>プロパティが"xmlListener"。</span><span class="sxs-lookup"><span data-stu-id="5011d-234">For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is "xmlListener".</span></span>  
  
```  
((XmlWriterTraceListener)Trace.Listeners["xmlListener"]).TraceOutputOptions =  
    TraceOptions.Timestamp.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5011d-235">
            <paramref name="stream" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-235">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5011d-236">アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-236">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="5011d-237">
            <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-237">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlWriterTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5011d-238">このリスナーの <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> を終了して、トレース出力またはデバッグ出力を受信しないようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-238">Closes the <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> for this listener so that it no longer receives tracing or debugging output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="override this.Fail : string * string -&gt; unit" Usage="xmlWriterTraceListener.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="5011d-239">書き込むエラー メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-239">The error message to write.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="5011d-240">エラー メッセージに追加する詳細なエラー メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-240">The detailed error message to append to the error message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5011d-241">エラー メッセージおよびエラー メッセージの詳細を含むトレース情報をファイルまたはストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-241">Writes trace information including an error message and a detailed error message to the file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5011d-242">既定の動作がユーザー インターフェイス モードとに、アプリケーションが実行されているときに、メッセージ ボックスに、メッセージと詳細なメッセージを表示するには、<xref:System.Diagnostics.TraceListener>インスタンス、<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>コレクション。</span><span class="sxs-lookup"><span data-stu-id="5011d-242">The default behavior is to display the message and detailed message in a message box when the application is running in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection.</span></span> <span data-ttu-id="5011d-243">インスタンスがコレクション内に既定では、<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="5011d-243">By default, the collection contains an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="5011d-244">この動作をカスタマイズするには追加または削除によって、<xref:System.Diagnostics.TraceListener>コレクションから。</span><span class="sxs-lookup"><span data-stu-id="5011d-244">You can customize this behavior by adding or removing a <xref:System.Diagnostics.TraceListener> from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5011d-245">アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-245">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="5011d-246">
            <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-246">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5011d-247">トレース データを出力ファイルまたはストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-247">Writes trace data to the output file or stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="xmlWriterTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="5011d-248">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-248">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="5011d-249">ソース名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-249">The source name.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="5011d-250">
            <see cref="T:System.Diagnostics.TraceEventType" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-250">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="5011d-251">イベントの数値識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-251">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="5011d-252">出力するデータ オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-252">A data object to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5011d-253">トレース情報 (データ オブジェクトおよびイベント情報) をファイルまたはストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-253">Writes trace information, a data object, and event information to the file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5011d-254">`eventCache`、 `source`、 `eventType`、および`id`パラメーター ヘッダーとフッターのトレースで使用されます。</span><span class="sxs-lookup"><span data-stu-id="5011d-254">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="5011d-255">`id`パラメーターに変換されます、符号なし整数を書き込む前に、そのため、負の値`id`値が大きい正の整数として書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="5011d-255">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="5011d-256">`data`としてパラメーターが記述された、`DataItem`内のノード、`TraceData`要素。</span><span class="sxs-lookup"><span data-stu-id="5011d-256">The `data` parameter is written as a `DataItem` node in the `TraceData` element.</span></span> <span data-ttu-id="5011d-257">`ToString`データ オブジェクトのメソッドを使用して、オブジェクトを文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="5011d-257">The `ToString` method of the data object is used to convert the object to a string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5011d-258">このメソッドは、アプリケーション コードによって直接呼び出されるものではありません。</span><span class="sxs-lookup"><span data-stu-id="5011d-258">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="5011d-259">メソッドを呼び出して、 <xref:System.Diagnostics.Debug>、 <xref:System.Diagnostics.Trace>、および<xref:System.Diagnostics.TraceSource>トレース データを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="5011d-259">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5011d-260">アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-260">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="5011d-261">
            <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-261">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="xmlWriterTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="5011d-262">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-262">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="5011d-263">ソース名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-263">The source name.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="5011d-264">
            <see cref="T:System.Diagnostics.TraceEventType" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-264">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="5011d-265">イベントの数値識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-265">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="5011d-266">出力するデータ オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-266">An array of data objects to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5011d-267">トレース情報、データ オブジェクト、およびイベント情報をファイルまたはストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-267">Writes trace information, data objects, and event information to the file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5011d-268">`eventCache`、 `source`、 `eventType`、および`id`パラメーター ヘッダーとフッターのトレースで使用されます。</span><span class="sxs-lookup"><span data-stu-id="5011d-268">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="5011d-269">`id`パラメーターに変換されます、符号なし整数を書き込む前に、そのため、負の値`id`値が大きい正の整数として書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="5011d-269">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="5011d-270">内のオブジェクト、`data`パラメーター配列として書き込まれる`DataItem`内のノード、`TraceData`要素。</span><span class="sxs-lookup"><span data-stu-id="5011d-270">The objects in the `data` parameter array are written as `DataItem` nodes in the `TraceData` element.</span></span> <span data-ttu-id="5011d-271">`ToString`各データ オブジェクトのメソッドを使用して、オブジェクトを文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="5011d-271">The `ToString` method of each data object is used to convert the object to a string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5011d-272">このメソッドは、アプリケーション コードによって直接呼び出されるものではありません。</span><span class="sxs-lookup"><span data-stu-id="5011d-272">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="5011d-273">メソッドを呼び出して、 <xref:System.Diagnostics.Debug>、 <xref:System.Diagnostics.Trace>、および<xref:System.Diagnostics.TraceSource>トレース データを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="5011d-273">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5011d-274">アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-274">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="5011d-275">
            <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-275">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5011d-276">イベント トレース情報を出力ファイルまたはストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-276">Writes event trace information to the output file or stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="xmlWriterTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="5011d-277">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-277">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="5011d-278">ソース名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-278">The source name.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="5011d-279">
            <see cref="T:System.Diagnostics.TraceEventType" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-279">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="5011d-280">イベントの数値識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-280">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="5011d-281">書き込むメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-281">The message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5011d-282">トレース情報、メッセージ、およびイベント情報をファイルまたはストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-282">Writes trace information, a message, and event information to the file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5011d-283">`eventCache`、 `source`、 `eventType`、および`id`パラメーター ヘッダーとフッターのトレースで使用されます。</span><span class="sxs-lookup"><span data-stu-id="5011d-283">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="5011d-284">`id`パラメーターに変換されます、符号なし整数を書き込む前に、そのため、負の値`id`値が大きい正の整数として書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="5011d-284">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="5011d-285">`message`としてパラメーターが記述された、`Message`要素。</span><span class="sxs-lookup"><span data-stu-id="5011d-285">The `message` parameter is written as the `Message` element.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5011d-286">このメソッドは、アプリケーション コードによって直接呼び出されるものではありません。</span><span class="sxs-lookup"><span data-stu-id="5011d-286">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="5011d-287">メソッドを呼び出して、 <xref:System.Diagnostics.Debug>、 <xref:System.Diagnostics.Trace>、および<xref:System.Diagnostics.TraceSource>トレース データを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="5011d-287">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5011d-288">アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-288">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="5011d-289">
            <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-289">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="xmlWriterTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="5011d-290">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-290">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="5011d-291">ソース名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-291">The source name.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="5011d-292">
            <see cref="T:System.Diagnostics.TraceEventType" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-292">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="5011d-293">イベントの数値識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-293">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="5011d-294">0 個以上の書式項目を格納している書式指定文字列。<c>args</c> 配列内のオブジェクトに対応します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-294">A format string that contains zero or more format items that correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="5011d-295">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-295">An object array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5011d-296">トレース情報、書式設定されたメッセージ、およびイベント情報をファイルまたはストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-296">Writes trace information, a formatted message, and event information to the file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5011d-297">`eventCache`、 `source`、 `eventType`、および`id`パラメーター ヘッダーとフッターのトレースで使用されます。</span><span class="sxs-lookup"><span data-stu-id="5011d-297">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="5011d-298">`id`パラメーターに変換されます、符号なし整数を書き込む前に、そのため、負の値`id`値が大きい正の整数として書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="5011d-298">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="5011d-299"><xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>に渡して、メソッドが呼び出されます、`format`文字列と`args`を書式設定、パラメーターとして配列、`args`オブジェクトの配列として、`Message`要素。</span><span class="sxs-lookup"><span data-stu-id="5011d-299">The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method is called, passing in the `format` string and `args` array as parameters, to format the `args` object array as the `Message` element.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5011d-300">このメソッドは、アプリケーション コードによって直接呼び出されるものではありません。</span><span class="sxs-lookup"><span data-stu-id="5011d-300">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="5011d-301">メソッドを呼び出して、 <xref:System.Diagnostics.Debug>、 <xref:System.Diagnostics.Trace>、および<xref:System.Diagnostics.TraceSource>トレース データを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="5011d-301">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5011d-302">アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-302">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="5011d-303">
            <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-303">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public override void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceTransfer(class System.Diagnostics.TraceEventCache eventCache, string source, int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceTransfer (eventCache As TraceEventCache, source As String, id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceTransfer(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberSignature Language="F#" Value="override this.TraceTransfer : System.Diagnostics.TraceEventCache * string * int * string * Guid -&gt; unit" Usage="xmlWriterTraceListener.TraceTransfer (eventCache, source, id, message, relatedActivityId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="5011d-304">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-304">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="5011d-305">ソース名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-305">The source name.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="5011d-306">イベントの数値識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-306">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="5011d-307">書き込むトレース メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-307">A trace message to write.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="5011d-308">関連するアクティビティを識別する <see cref="T:System.Guid" /> 構造体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-308">A <see cref="T:System.Guid" /> structure that identifies a related activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5011d-309">関連するアクティビティの ID を含むトレース情報、メッセージ、およびイベント情報をファイルまたはストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-309">Writes trace information including the identity of a related activity, a message, and event information to the file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5011d-310"><xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A>メソッドは、関連するトレースの相関関係を使用します。</span><span class="sxs-lookup"><span data-stu-id="5011d-310">The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is used for the correlation of related traces.</span></span> <span data-ttu-id="5011d-311">`eventCache`、 `source`、 `id`、および`relatedActivityId`パラメーター ヘッダーとフッターのトレースで使用されます。</span><span class="sxs-lookup"><span data-stu-id="5011d-311">The `eventCache`, `source`, `id`, and `relatedActivityId` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="5011d-312">`id`パラメーターに変換されます、符号なし整数を書き込む前に、そのため、負の値`id`値が大きい正の整数として書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="5011d-312">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="5011d-313">`message`としてパラメーターが記述された、`Message`要素。</span><span class="sxs-lookup"><span data-stu-id="5011d-313">The `message` parameter is written as the `Message` element.</span></span> <span data-ttu-id="5011d-314"><xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType>に変換するメソッドが呼び出される、 `relatedActivityId`"b"の値の書式設定文字列で、ヘッダーに表示されます。</span><span class="sxs-lookup"><span data-stu-id="5011d-314">The <xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType> method is called to convert the `relatedActivityId`value to a "B" formatted string, which appears in the header.</span></span> <span data-ttu-id="5011d-315">`SubTypeName`フッター内の要素としてトレース イベントの種類を識別する、<xref:System.Diagnostics.TraceEventType.Transfer>します。</span><span class="sxs-lookup"><span data-stu-id="5011d-315">The `SubTypeName` element in the footer identifies the trace event type as a <xref:System.Diagnostics.TraceEventType.Transfer>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5011d-316"><xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A>アプリケーション コードによって呼び出されるメソッドはありません。</span><span class="sxs-lookup"><span data-stu-id="5011d-316">The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is not intended to be called by application code.</span></span>  <span data-ttu-id="5011d-317">によって呼び出される対象としていますが、<xref:System.Diagnostics.TraceSource>のトレース情報を生成するオブジェクト、<xref:System.Diagnostics.TraceSource.TraceTransfer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="5011d-317">It is intended to be called by a <xref:System.Diagnostics.TraceSource> object to emit the trace information for its <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5011d-318">アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-318">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="5011d-319">
            <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-319">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="xmlWriterTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="5011d-320">書き込むメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-320">The message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5011d-321">逐語的メッセージを追加のコンテキスト情報なしでファイルまたはストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-321">Writes a verbatim message without any additional context information to the file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5011d-322">使用して、<xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>にコンテキスト情報をログ出力に含めるメソッド。</span><span class="sxs-lookup"><span data-stu-id="5011d-322">Use the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method to include context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5011d-323">アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-323">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="5011d-324">
            <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-324">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="xmlWriterTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="5011d-325">書き込むメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-325">The message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5011d-326">逐語的メッセージを追加のコンテキスト情報なしでファイルまたはストリームに書き込み、続けて現在の行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-326">Writes a verbatim message without any additional context information followed by the current line terminator to the file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5011d-327">使用して、<xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>にコンテキスト情報をログ出力に含めるメソッド。</span><span class="sxs-lookup"><span data-stu-id="5011d-327">Use the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method to include context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5011d-328">アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-328">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="5011d-329">
            <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="5011d-329">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>