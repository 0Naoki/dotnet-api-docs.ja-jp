<Type Name="EventInstance" FullName="System.Diagnostics.EventInstance">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="12e2ce6cb0de23954a9de2e05bd5e869106eacde" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39982401" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventInstance" />
  <TypeSignature Language="VB.NET" Value="Public Class EventInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventInstance" />
  <TypeSignature Language="F#" Value="type EventInstance = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2948c-101">イベント ログ エントリの言語に中立的な情報を表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2948c-101">Represents language-neutral information for an event log entry.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2948c-102">使用<xref:System.Diagnostics.EventInstance>文字列値ではなく、リソース識別子と共にイベント ログ エントリを書き込む。</span><span class="sxs-lookup"><span data-stu-id="2948c-102">Use <xref:System.Diagnostics.EventInstance> to write an event log entry with a resource identifier rather than a string value.</span></span> <span data-ttu-id="2948c-103">イベント ログ エントリを書き込むには、初期化、<xref:System.Diagnostics.EventInstance.InstanceId%2A>プロパティにインスタンスを渡すと、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2948c-103">To write an event log entry, initialize the <xref:System.Diagnostics.EventInstance.InstanceId%2A> property and pass the instance to the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method.</span></span> <span data-ttu-id="2948c-104">イベント ビューアーでは、インスタンス識別子を使用して、検索し、現在の言語設定に基づいてローカライズされたリソース ファイルから、対応する文字列を表示します。</span><span class="sxs-lookup"><span data-stu-id="2948c-104">The Event Viewer uses the instance identifier to find and display the corresponding string from the localized resource file based on current language settings.</span></span> <span data-ttu-id="2948c-105">リソース識別子を使用してイベントを記述する前に、対応するリソース ファイルを使用してイベント ソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2948c-105">You must register the event source with the corresponding resource file before you write events using resource identifiers.</span></span>  
  
 <span data-ttu-id="2948c-106">イベントを書き込むときに設定できます、<xref:System.Diagnostics.EventInstance.EntryType%2A>エントリのイベント ビューアーを表示するアイコンを指定するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="2948c-106">When writing events, you can set the <xref:System.Diagnostics.EventInstance.EntryType%2A> property to specify the icon that the Event Viewer displays for the entry.</span></span> <span data-ttu-id="2948c-107">指定することも、<xref:System.Diagnostics.EventInstance.CategoryId%2A>プロパティ エントリのイベント ビューアーを表示するカテゴリを指定します。</span><span class="sxs-lookup"><span data-stu-id="2948c-107">You can also specify a <xref:System.Diagnostics.EventInstance.CategoryId%2A> property to specify the category that the Event Viewer displays for the entry.</span></span>  
  
 <span data-ttu-id="2948c-108">イベント ビューアーでは、イベント ソースによって書き込まれたイベントをフィルター処理するカテゴリを使用します。</span><span class="sxs-lookup"><span data-stu-id="2948c-108">The Event Viewer uses the category to filter events written by an event source.</span></span> <span data-ttu-id="2948c-109">ローカライズされたカテゴリ文字列を表示するカテゴリ リソース識別子として使用できます。 またはイベント ビューアーは、数値の値として、カテゴリを表示できます。</span><span class="sxs-lookup"><span data-stu-id="2948c-109">The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</span></span>  
  
 <span data-ttu-id="2948c-110">イベント ビューアーでは、ローカライズされたカテゴリ文字列を表示するには、イベント ソース、カテゴリ リソース ファイルで構成され、設定を使用する必要があります、<xref:System.Diagnostics.EventInstance.CategoryId%2A>カテゴリ リソース ファイル内のリソース識別子。</span><span class="sxs-lookup"><span data-stu-id="2948c-110">To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the <xref:System.Diagnostics.EventInstance.CategoryId%2A> to a resource identifier in the category resource file.</span></span> <span data-ttu-id="2948c-111">構成済みのカテゴリ リソース ファイル、または指定したイベント ソースが持っていない場合<xref:System.Diagnostics.EventInstance.CategoryId%2A>しないインデックス文字列カテゴリ リソース ファイルと、イベント ビューアーでは、そのエントリの数値のカテゴリ値を表示します。</span><span class="sxs-lookup"><span data-stu-id="2948c-111">If the event source does not have a configured category resource file, or the specified <xref:System.Diagnostics.EventInstance.CategoryId%2A> does not index a string in the category resource file, and then the Event Viewer displays the numeric category value for that entry.</span></span> <span data-ttu-id="2948c-112">カテゴリ リソース ファイルのリソース ファイルでカテゴリ文字列の数と構成を使用して、<xref:System.Diagnostics.EventLogInstaller>または<xref:System.Diagnostics.EventSourceCreationData>クラス。</span><span class="sxs-lookup"><span data-stu-id="2948c-112">Configure the category resource file, along with the number of category strings in the resource file, using the <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 <span data-ttu-id="2948c-113">使用する前に、イベント ログのソースを登録する必要があります<xref:System.Diagnostics.EventInstance>イベントを書き込む、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2948c-113">You must register a source for an event log before using <xref:System.Diagnostics.EventInstance> to write an event with the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method.</span></span> <span data-ttu-id="2948c-114">ソースは、ローカライズされたエントリをログに書き込むように構成する必要があり、ソースは、少なくともメッセージ リソース ファイルを定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2948c-114">The source must be configured for writing localized entries to the log and the source must define at least a message resource file.</span></span>  
  
 <span data-ttu-id="2948c-115">アプリケーションのインストール中に新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="2948c-115">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="2948c-116">これにより、登録済みのイベント ソースの一覧とその構成を更新するオペレーティング システムまでの時間です。</span><span class="sxs-lookup"><span data-stu-id="2948c-116">This allows time for the operating system to refresh its list of registered event sources and their configurations.</span></span> <span data-ttu-id="2948c-117">オペレーティング システムでは、イベントのソースの一覧は更新されていない場合は、書き込み操作は失敗、新しいソースを持つイベントを記述しようとしました。</span><span class="sxs-lookup"><span data-stu-id="2948c-117">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="2948c-118">使用して新しいソースを構成することができます、 <xref:System.Diagnostics.EventLogInstaller>、またはを使用して、<xref:System.Diagnostics.EventLog.CreateEventSource%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2948c-118">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="2948c-119">新しいイベント ソースを作成するコンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="2948c-119">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="2948c-120">イベント メッセージを定義して、イベント ログのリソース ファイルの構築の詳細については、プラットフォーム SDK のドキュメントで「メッセージ コンパイラ」トピックを参照してください。 [ http://msdn.microsoft.com](http://msdn.microsoft.com)します。</span><span class="sxs-lookup"><span data-stu-id="2948c-120">For details about defining event messages and building event log resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2948c-121">次のコード例は、情報イベント エントリを書き込み、再利用し、<xref:System.Diagnostics.EventInstance>既存のイベント ログに警告イベントのエントリの書き込みにします。</span><span class="sxs-lookup"><span data-stu-id="2948c-121">The following code example writes an informational event entry, and then reuses the <xref:System.Diagnostics.EventInstance> to write an entry for a warning event to an existing event log.</span></span> <span data-ttu-id="2948c-122">メッセージ リソース ファイル内のリソース識別子を使用してイベントのメッセージ テキストを指定します。</span><span class="sxs-lookup"><span data-stu-id="2948c-122">The event message text is specified using a resource identifier in a message resource file.</span></span> <span data-ttu-id="2948c-123">コード例では、対応するメッセージ リソース ファイルがソースの登録されている前提としています。</span><span class="sxs-lookup"><span data-stu-id="2948c-123">The code example assumes that the corresponding message resource file has been registered for the source.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 <span data-ttu-id="2948c-124">コード例では、リソース ライブラリ EventLogMsgs.dll に組み込まれている次のメッセージ テキスト ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="2948c-124">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="2948c-125">メッセージのテキスト ファイルは、メッセージ リソース ファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="2948c-125">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="2948c-126">メッセージのテキスト ファイルでは、リソース識別子とカテゴリ、イベント メッセージ、およびパラメーターの挿入文字列のテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="2948c-126">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
    <altmember cref="T:System.Diagnostics.EventLogEntry" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2948c-127">イベント ログ エントリを定義する言語に中立的な情報を使用して、<see cref="T:System.Diagnostics.EventInstance" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-127">Initializes a new instance of the <see cref="T:System.Diagnostics.EventInstance" /> class using language-neutral information to define an event log entry.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventInstance (long instanceId, int categoryId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 instanceId, int32 categoryId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instanceId As Long, categoryId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventInstance(long instanceId, int categoryId);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventInstance : int64 * int -&gt; System.Diagnostics.EventInstance" Usage="new System.Diagnostics.EventInstance (instanceId, categoryId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Int64" />
        <Parameter Name="categoryId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="2948c-128">イベント ソースのメッセージ リソース ファイルで定義された文字列に対応するリソース識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-128">A resource identifier that corresponds to a string defined in the message resource file of the event source.</span>
          </span>
        </param>
        <param name="categoryId">
          <span data-ttu-id="2948c-129">イベント ソースのカテゴリ リソース ファイルで定義された文字列に対応するリソース識別子。イベントにカテゴリを指定しない場合は、ゼロになります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-129">A resource identifier that corresponds to a string defined in the category resource file of the event source, or zero to specify no category for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2948c-130">イベント エントリのローカライズされたメッセージおよびカテゴリ テキストに指定されたリソース識別子を使用して、<see cref="T:System.Diagnostics.EventInstance" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-130">Initializes a new instance of the <see cref="T:System.Diagnostics.EventInstance" /> class using the specified resource identifiers for the localized message and category text of the event entry.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2948c-131">イベント ログに情報のエントリを記述するには初期化、<xref:System.Diagnostics.EventInstance>に渡すと、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2948c-131">To write an informational entry to an event log, initialize an <xref:System.Diagnostics.EventInstance> and pass it to the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method.</span></span> <span data-ttu-id="2948c-132">設定、 `instanceId` 、対応するイベント メッセージのリソース識別子を<xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>ソースのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="2948c-132">Set the `instanceId` to the resource identifier of the event message in the corresponding <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> property for the source.</span></span> <span data-ttu-id="2948c-133">設定、`categoryId`数値カテゴリの値、またはイベントのカテゴリのリソース識別子、<xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>ソースのプロパティです。 セット、`categoryId`ありませんイベント カテゴリを 0 にします。</span><span class="sxs-lookup"><span data-stu-id="2948c-133">Set the `categoryId` to a numeric category value, or the resource identifier of the event category in the <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> property for the source; set the `categoryId` to zero for no event category.</span></span> <span data-ttu-id="2948c-134"><xref:System.Diagnostics.EventInstance.EntryType%2A>新しいインスタンスのプロパティに設定されて<xref:System.Diagnostics.EventLogEntryType.Information>既定。</span><span class="sxs-lookup"><span data-stu-id="2948c-134">The <xref:System.Diagnostics.EventInstance.EntryType%2A> property for the new instance is set to <xref:System.Diagnostics.EventLogEntryType.Information> by default.</span></span>  
  
 <span data-ttu-id="2948c-135">イベント ビューアーでは、リソース識別子を使用して、ソースのローカライズされたリソース ファイルから対応する文字列を表示します。</span><span class="sxs-lookup"><span data-stu-id="2948c-135">The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource files for the source.</span></span> <span data-ttu-id="2948c-136">リソース識別子を使用してイベントを記述する前に、対応するリソース ファイルとソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2948c-136">You must register the source with the corresponding resource files before you can write events using resource identifiers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2948c-137">次のコード例は、情報イベント エントリを書き込み、再利用し、<xref:System.Diagnostics.EventInstance>既存のイベント ログに警告イベントのエントリの書き込みにします。</span><span class="sxs-lookup"><span data-stu-id="2948c-137">The following code example writes an informational event entry, and then reuses the <xref:System.Diagnostics.EventInstance> to write an entry for a warning event to an existing event log.</span></span> <span data-ttu-id="2948c-138">メッセージ リソース ファイル内のリソース識別子を使用してイベントのメッセージ テキストを指定します。</span><span class="sxs-lookup"><span data-stu-id="2948c-138">The event message text is specified using a resource identifier in a message resource file.</span></span> <span data-ttu-id="2948c-139">コード例では、対応するメッセージ リソース ファイルがソースの登録されている前提としています。</span><span class="sxs-lookup"><span data-stu-id="2948c-139">The code example assumes that the corresponding message resource file has been registered for the source.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 <span data-ttu-id="2948c-140">コード例では、リソース ライブラリ EventLogMsgs.dll に組み込まれている次のメッセージ テキスト ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="2948c-140">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="2948c-141">メッセージのテキスト ファイルは、メッセージ リソース ファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="2948c-141">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="2948c-142">メッセージのテキスト ファイルでは、リソース識別子とカテゴリ、イベント メッセージ、およびパラメーターの挿入文字列のテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="2948c-142">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2948c-143">
            <paramref name="instanceId" /> パラメーターは、負の値または <see cref="F:System.UInt32.MaxValue" /> より大きい値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-143">The <paramref name="instanceId" /> parameter is a negative value or a value larger than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
          <span data-ttu-id="2948c-144">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-144">-or-</span>
          </span>
          <span data-ttu-id="2948c-145">
            <paramref name="categoryId" /> パラメーターは、負の値または <see cref="F:System.UInt16.MaxValue" /> より大きい値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-145">The <paramref name="categoryId" /> parameter is a negative value or a value larger than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Diagnostics.EventInstance.CategoryId" />
        <altmember cref="P:System.Diagnostics.EventInstance.InstanceId" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventSourceCreationData" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventInstance (long instanceId, int categoryId, System.Diagnostics.EventLogEntryType entryType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 instanceId, int32 categoryId, valuetype System.Diagnostics.EventLogEntryType entryType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instanceId As Long, categoryId As Integer, entryType As EventLogEntryType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventInstance(long instanceId, int categoryId, System::Diagnostics::EventLogEntryType entryType);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventInstance : int64 * int * System.Diagnostics.EventLogEntryType -&gt; System.Diagnostics.EventInstance" Usage="new System.Diagnostics.EventInstance (instanceId, categoryId, entryType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Int64" />
        <Parameter Name="categoryId" Type="System.Int32" />
        <Parameter Name="entryType" Type="System.Diagnostics.EventLogEntryType" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="2948c-146">イベント ソースのメッセージ リソース ファイルで定義された文字列に対応するリソース識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-146">A resource identifier that corresponds to a string defined in the message resource file of the event source.</span>
          </span>
        </param>
        <param name="categoryId">
          <span data-ttu-id="2948c-147">イベント ソースのカテゴリ リソース ファイルで定義された文字列に対応するリソース識別子。イベントにカテゴリを指定しない場合は、ゼロになります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-147">A resource identifier that corresponds to a string defined in the category resource file of the event source, or zero to specify no category for the event.</span>
          </span>
        </param>
        <param name="entryType">
          <span data-ttu-id="2948c-148">イベントの種類を示す <see cref="T:System.Diagnostics.EventLogEntryType" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-148">An <see cref="T:System.Diagnostics.EventLogEntryType" /> value that indicates the event type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2948c-149">イベント エントリのローカライズされたメッセージとカテゴリ テキストに指定されたリソース識別子および指定されたイベント ログ エントリの種類を使用して、<see cref="T:System.Diagnostics.EventInstance" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-149">Initializes a new instance of the <see cref="T:System.Diagnostics.EventInstance" /> class using the specified resource identifiers for the localized message and category text of the event entry and the specified event log entry type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2948c-150">イベント ログにエントリを記述するには、初期化、<xref:System.Diagnostics.EventInstance>に渡すと、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2948c-150">To write an entry to an event log, initialize an <xref:System.Diagnostics.EventInstance> and pass it to the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method.</span></span> <span data-ttu-id="2948c-151">設定、 `instanceId` 、対応するイベント メッセージのリソース識別子を<xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>ソースのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="2948c-151">Set the `instanceId` to the resource identifier of the event message in the corresponding <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> property for the source.</span></span> <span data-ttu-id="2948c-152">設定、`categoryId`数値カテゴリの値、またはイベントのカテゴリのリソース識別子、<xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>ソースのプロパティです。 セット、`categoryId`ありませんイベント カテゴリを 0 にします。</span><span class="sxs-lookup"><span data-stu-id="2948c-152">Set the `categoryId` to a numeric category value, or the resource identifier of the event category in the <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> property for the source; set the `categoryId` to zero for no event category.</span></span>  
  
 <span data-ttu-id="2948c-153">イベント ビューアーでは、リソース識別子を使用して、ソースのローカライズされたリソース ファイルから対応する文字列を表示します。</span><span class="sxs-lookup"><span data-stu-id="2948c-153">The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource files for the source.</span></span> <span data-ttu-id="2948c-154">リソース識別子を使用してイベントを記述する前に、対応するリソース ファイルとソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2948c-154">You must register the source with the corresponding resource files before you can write events using resource identifiers.</span></span>  
  
 <span data-ttu-id="2948c-155">設定、`entryType`定義済みのエントリの種類のいずれかにします。</span><span class="sxs-lookup"><span data-stu-id="2948c-155">Set the `entryType` to one of the pre-defined entry types.</span></span> <span data-ttu-id="2948c-156">イベント ビューアーでは、イベントの種類を使用して、イベント ログのリスト ビューで表示するアイコンを調べます。</span><span class="sxs-lookup"><span data-stu-id="2948c-156">The Event Viewer uses the event type to determine which icon to display in the list view of the event log.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2948c-157">次のコード例は、2 つの監査イベント ログにイベント エントリを書き込みます`myNewLog`します。</span><span class="sxs-lookup"><span data-stu-id="2948c-157">The following code example writes two audit event entries to the event log `myNewLog`.</span></span> <span data-ttu-id="2948c-158">コード例では、ローカル コンピューターに存在しない場合、新しいイベント ソースおよび新しいイベント ログを作成します。</span><span class="sxs-lookup"><span data-stu-id="2948c-158">The code example creates a new event source and a new event log if they do not exist on the local computer.</span></span> <span data-ttu-id="2948c-159">リソース ファイル内のリソース識別子を使用してイベントのメッセージ テキストを指定します。</span><span class="sxs-lookup"><span data-stu-id="2948c-159">The event message text is specified using a resource identifier in a resource file.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#7](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#7)]
 [!code-csharp[EventLog_WriteEvent#7](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#7)]
 [!code-vb[EventLog_WriteEvent#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#7)]  
  
 <span data-ttu-id="2948c-160">コード例では、リソース ライブラリ EventLogMsgs.dll に組み込まれている次のメッセージ テキスト ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="2948c-160">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="2948c-161">メッセージのテキスト ファイルは、メッセージ リソース ファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="2948c-161">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="2948c-162">メッセージのテキスト ファイルでは、リソース識別子とカテゴリ、イベント メッセージ、およびパラメーターの挿入文字列のテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="2948c-162">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="2948c-163">
            <paramref name="entryType" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-163">
              <paramref name="entryType" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2948c-164">
            <paramref name="instanceId" /> は、負の値または <see cref="F:System.UInt32.MaxValue" /> より大きい値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-164">
              <paramref name="instanceId" /> is a negative value or a value larger than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
          <span data-ttu-id="2948c-165">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-165">-or-</span>
          </span>
          <span data-ttu-id="2948c-166">
            <paramref name="categoryId" /> は、負の値または <see cref="F:System.UInt16.MaxValue" /> より大きい値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-166">
              <paramref name="categoryId" /> is a negative value or a value larger than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Diagnostics.EventInstance.CategoryId" />
        <altmember cref="P:System.Diagnostics.EventInstance.InstanceId" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventSourceCreationData" />
      </Docs>
    </Member>
    <Member MemberName="CategoryId">
      <MemberSignature Language="C#" Value="public int CategoryId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CategoryId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventInstance.CategoryId" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CategoryId { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryId : int with get, set" Usage="System.Diagnostics.EventInstance.CategoryId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2948c-167">イベント エントリのアプリケーション定義のカテゴリを指定するリソース識別子を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-167">Gets or sets the resource identifier that specifies the application-defined category of the event entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2948c-168">イベント ソースのカテゴリ リソース ファイルで定義された文字列に対応するカテゴリ値またはリソース識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-168">A numeric category value or resource identifier that corresponds to a string defined in the category resource file of the event source.</span>
          </span>
          <span data-ttu-id="2948c-169">既定値はゼロです。これは、イベント エントリに対してカテゴリが表示されないことを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-169">The default is zero, which signifies that no category will be displayed for the event entry.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2948c-170">イベント ログのカテゴリは、イベントをフィルター、またはさらに、イベントに関する情報を提供する、アプリケーション定義の値です。</span><span class="sxs-lookup"><span data-stu-id="2948c-170">Event log categories are application-defined values that help filter events, or provide further information about the event.</span></span> <span data-ttu-id="2948c-171">たとえば、アプリケーションでは、異なるコンポーネントまたは操作ごとに個別のカテゴリを定義できます。</span><span class="sxs-lookup"><span data-stu-id="2948c-171">For example, your application can define separate categories for different components or different operations.</span></span>  
  
 <span data-ttu-id="2948c-172">設定、<xref:System.Diagnostics.EventInstance.CategoryId%2A>プロパティ エントリのイベント ビューアーを表示するカテゴリを指定します。</span><span class="sxs-lookup"><span data-stu-id="2948c-172">Set the <xref:System.Diagnostics.EventInstance.CategoryId%2A> property to specify the category that the Event Viewer displays for the entry.</span></span> <span data-ttu-id="2948c-173">イベント ビューアーが、数値としてカテゴリを表示したり、使用できる、<xref:System.Diagnostics.EventInstance.CategoryId%2A>リソースとして、ローカライズされたカテゴリ文字列を表示する識別子が現在の言語設定に基づいています。</span><span class="sxs-lookup"><span data-stu-id="2948c-173">The Event Viewer can display the category as a numeric value, or it can use the <xref:System.Diagnostics.EventInstance.CategoryId%2A> as a resource identifier to display a localized category string based on the current language settings.</span></span>  
  
 <span data-ttu-id="2948c-174">イベント ビューアーでは、ローカライズされたカテゴリ文字列を表示するには、イベント ソース、カテゴリ リソース ファイルで構成され、設定を使用する必要があります、<xref:System.Diagnostics.EventInstance.CategoryId%2A>カテゴリ リソース ファイル内のリソース識別子。</span><span class="sxs-lookup"><span data-stu-id="2948c-174">To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the <xref:System.Diagnostics.EventInstance.CategoryId%2A> to a resource identifier in the category resource file.</span></span> <span data-ttu-id="2948c-175">構成済みのカテゴリ リソース ファイル、または指定したイベント ソースが持っていない場合<xref:System.Diagnostics.EventInstance.CategoryId%2A>しないインデックス文字列カテゴリ リソース ファイルと、イベント ビューアーでは、そのエントリの数値のカテゴリ値を表示します。</span><span class="sxs-lookup"><span data-stu-id="2948c-175">If the event source does not have a configured category resource file, or the specified <xref:System.Diagnostics.EventInstance.CategoryId%2A> does not index a string in the category resource file, and then the Event Viewer displays the numeric category value for that entry.</span></span>  
  
 <span data-ttu-id="2948c-176">リソース識別子を使用してイベント カテゴリを記述する前に、対応するリソース ファイルとソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2948c-176">You must register the source with the corresponding resource file before you write event categories using resource identifiers.</span></span> <span data-ttu-id="2948c-177">カテゴリ リソース ファイルのリソース ファイルでカテゴリ文字列の数と構成を使用して、<xref:System.Diagnostics.EventLogInstaller>または<xref:System.Diagnostics.EventSourceCreationData>クラス。</span><span class="sxs-lookup"><span data-stu-id="2948c-177">Configure the category resource file, along with the number of category strings in the resource file, using the <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span> <span data-ttu-id="2948c-178">連続して構成された、まで、1 から始まるカテゴリのリソース識別子を番号必要があります、リソース ファイルでカテゴリ文字列を定義するときに<xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="2948c-178">When defining category strings in a resource file, the category resource identifiers must be numbered consecutively starting at 1, up to the configured <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> property value.</span></span>  
  
 <span data-ttu-id="2948c-179">イベントのカテゴリは省略可能です。</span><span class="sxs-lookup"><span data-stu-id="2948c-179">Event categories are optional.</span></span> <span data-ttu-id="2948c-180">アプリケーションではカテゴリを使用しない場合は設定しないで、<xref:System.Diagnostics.EventInstance.CategoryId%2A>のイベント ログ エントリ。</span><span class="sxs-lookup"><span data-stu-id="2948c-180">If your application does not use categories, do not set the <xref:System.Diagnostics.EventInstance.CategoryId%2A> for the event log entry.</span></span>  
  
 <span data-ttu-id="2948c-181">イベント メッセージを定義して、イベントのリソース ファイルの構築の詳細については、プラットフォーム SDK のドキュメントで「メッセージ コンパイラ」トピックを参照してください。 [ http://msdn.microsoft.com](http://msdn.microsoft.com/)します。</span><span class="sxs-lookup"><span data-stu-id="2948c-181">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).</span></span> <span data-ttu-id="2948c-182">リソース ファイル内のイベント カテゴリを定義する方法の詳細については、プラットフォーム SDK の「イベントのカテゴリ」のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="2948c-182">For details about defining event categories in resource files, see the "Event Categories" topic in the Platform SDK</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2948c-183">次のコード例は、情報イベント エントリを書き込み、再利用し、<xref:System.Diagnostics.EventInstance>既存のイベント ログに警告イベントのエントリの書き込みにします。</span><span class="sxs-lookup"><span data-stu-id="2948c-183">The following code example writes an informational event entry, and then reuses the <xref:System.Diagnostics.EventInstance> to write an entry for a warning event to an existing event log.</span></span> <span data-ttu-id="2948c-184">メッセージ リソース ファイル内のリソース識別子を使用してイベントのメッセージ テキストを指定します。</span><span class="sxs-lookup"><span data-stu-id="2948c-184">The event message text is specified using a resource identifier in a message resource file.</span></span> <span data-ttu-id="2948c-185">コード例では、対応するメッセージ リソース ファイルがソースの登録されている前提としています。</span><span class="sxs-lookup"><span data-stu-id="2948c-185">The code example assumes that the corresponding message resource file has been registered for the source.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 <span data-ttu-id="2948c-186">コード例では、リソース ライブラリ EventLogMsgs.dll に組み込まれている次のメッセージ テキスト ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="2948c-186">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="2948c-187">メッセージのテキスト ファイルは、メッセージ リソース ファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="2948c-187">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="2948c-188">メッセージのテキスト ファイルでは、リソース識別子とカテゴリ、イベント メッセージ、およびパラメーターの挿入文字列のテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="2948c-188">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2948c-189">プロパティが負の値または <see cref="F:System.UInt16.MaxValue" /> より大きい値に設定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-189">The property is set to a negative value or to a value larger than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="P:System.Diagnostics.EventLogEntry.CategoryNumber" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="EntryType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.EventLogEntryType EntryType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.EventLogEntryType EntryType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventInstance.EntryType" />
      <MemberSignature Language="VB.NET" Value="Public Property EntryType As EventLogEntryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::EventLogEntryType EntryType { System::Diagnostics::EventLogEntryType get(); void set(System::Diagnostics::EventLogEntryType value); };" />
      <MemberSignature Language="F#" Value="member this.EntryType : System.Diagnostics.EventLogEntryType with get, set" Usage="System.Diagnostics.EventInstance.EntryType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLogEntryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2948c-190">イベント ログ エントリのイベントの種類を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-190">Gets or sets the event type of the event log entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2948c-191">イベント エントリの種類を示す <see cref="T:System.Diagnostics.EventLogEntryType" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-191">An <see cref="T:System.Diagnostics.EventLogEntryType" /> value that indicates the event entry type.</span>
          </span>
          <span data-ttu-id="2948c-192">既定値は <see cref="F:System.Diagnostics.EventLogEntryType.Information" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-192">The default value is <see cref="F:System.Diagnostics.EventLogEntryType.Information" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2948c-193">各イベントは、アプリケーションでは、イベントをレポートするときを示す 1 つの種類のです。</span><span class="sxs-lookup"><span data-stu-id="2948c-193">Each event is of a single type, which the application indicates when it reports the event.</span></span> <span data-ttu-id="2948c-194">イベント ビューアーでは、イベントの種類を使用して、イベント ログのリスト ビューで表示するアイコンを調べます。</span><span class="sxs-lookup"><span data-stu-id="2948c-194">The Event Viewer uses the event type to determine which icon to display in the list view of the event log.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2948c-195">次のコード例は、情報イベント エントリを書き込み、再利用し、<xref:System.Diagnostics.EventInstance>既存のイベント ログに警告イベントのエントリの書き込みにします。</span><span class="sxs-lookup"><span data-stu-id="2948c-195">The following code example writes an informational event entry, and then reuses the <xref:System.Diagnostics.EventInstance> to write an entry for a warning event to an existing event log.</span></span> <span data-ttu-id="2948c-196">メッセージ リソース ファイル内のリソース識別子を使用してイベントのメッセージ テキストを指定します。</span><span class="sxs-lookup"><span data-stu-id="2948c-196">The event message text is specified using a resource identifier in a message resource file.</span></span> <span data-ttu-id="2948c-197">コード例では、対応するメッセージ リソース ファイルがソースの登録されている前提としています。</span><span class="sxs-lookup"><span data-stu-id="2948c-197">The code example assumes that the corresponding message resource file has been registered for the source.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 <span data-ttu-id="2948c-198">コード例では、リソース ライブラリ EventLogMsgs.dll に組み込まれている次のメッセージ テキスト ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="2948c-198">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="2948c-199">メッセージのテキスト ファイルは、メッセージ リソース ファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="2948c-199">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="2948c-200">メッセージのテキスト ファイルでは、リソース識別子とカテゴリ、イベント メッセージ、およびパラメーターの挿入文字列のテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="2948c-200">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="2948c-201">プロパティが有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> 値に設定されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-201">The property is not set to a valid <see cref="T:System.Diagnostics.EventLogEntryType" /> value.</span>
          </span>
        </exception>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLogEntry.EntryType" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="InstanceId">
      <MemberSignature Language="C#" Value="public long InstanceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 InstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventInstance.InstanceId" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceId As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long InstanceId { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceId : int64 with get, set" Usage="System.Diagnostics.EventInstance.InstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2948c-202">イベント エントリのメッセージ テキストを指定するリソース識別子を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-202">Gets or sets the resource identifier that designates the message text of the event entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2948c-203">イベント ソースのメッセージ リソース ファイルで定義された文字列に対応するリソース識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-203">A resource identifier that corresponds to a string defined in the message resource file of the event source.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2948c-204"><xref:System.Diagnostics.EventInstance.InstanceId%2A>プロパティが構成されているイベント ソースのイベント エントリを一意に識別します。</span><span class="sxs-lookup"><span data-stu-id="2948c-204">The <xref:System.Diagnostics.EventInstance.InstanceId%2A> property uniquely identifies an event entry for a configured event source.</span></span> <span data-ttu-id="2948c-205">メッセージ リソース ファイルに定義されたイベントの<xref:System.Diagnostics.EventInstance.InstanceId%2A>メッセージのテキスト ファイル内のメッセージ定義フィールドからコンパイルされたリソース識別子に対応します。</span><span class="sxs-lookup"><span data-stu-id="2948c-205">For events defined in message resource files, the <xref:System.Diagnostics.EventInstance.InstanceId%2A> corresponds to the resource identifier compiled from the message definition fields in the message text file.</span></span> <span data-ttu-id="2948c-206">アプリケーションは、設定がローカライズされたイベント ログ エントリを書き込むことができます、<xref:System.Diagnostics.EventInstance.InstanceId%2A>リソース識別子。</span><span class="sxs-lookup"><span data-stu-id="2948c-206">Your application can write localized event log entries by setting the <xref:System.Diagnostics.EventInstance.InstanceId%2A> to a resource identifier.</span></span> <span data-ttu-id="2948c-207">イベント ビューアーを使用して、<xref:System.Diagnostics.EventInstance.InstanceId%2A>現在の言語設定に基づいて、リソース識別子を検索して、ローカライズされたリソース ファイルから、対応する文字列を表示します。</span><span class="sxs-lookup"><span data-stu-id="2948c-207">The Event Viewer uses the <xref:System.Diagnostics.EventInstance.InstanceId%2A> resource identifier to find and display the corresponding string from the localized resource file based on current language settings.</span></span> <span data-ttu-id="2948c-208">リソース識別子を使用してイベントを記述する前に、対応するリソース ファイルとソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2948c-208">You must register the source with the corresponding resource file before you write events using resource identifiers.</span></span>  
  
 <span data-ttu-id="2948c-209">イベント メッセージを定義して、イベント ログのリソース ファイルの構築の詳細については、プラットフォーム SDK のドキュメントで「メッセージ コンパイラ」トピックを参照してください。 [ http://msdn.microsoft.com](http://msdn.microsoft.com/)します。</span><span class="sxs-lookup"><span data-stu-id="2948c-209">For details about defining event messages and building event log resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).</span></span> <span data-ttu-id="2948c-210">詳細については、イベント ログの識別子は、プラットフォーム SDK の「イベント Identifiers」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2948c-210">For details about event log identifiers, see the "Event Identifiers" topic in the Platform SDK.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2948c-211">次のコード例は、情報イベント エントリを書き込み、再利用し、<xref:System.Diagnostics.EventInstance>既存のイベント ログに警告イベントのエントリの書き込みにします。</span><span class="sxs-lookup"><span data-stu-id="2948c-211">The following code example writes an informational event entry, and then reuses the <xref:System.Diagnostics.EventInstance> to write an entry for a warning event to an existing event log.</span></span> <span data-ttu-id="2948c-212">メッセージ リソース ファイル内のリソース識別子を使用してイベントのメッセージ テキストを指定します。</span><span class="sxs-lookup"><span data-stu-id="2948c-212">The event message text is specified using a resource identifier in a message resource file.</span></span> <span data-ttu-id="2948c-213">コード例では、対応するメッセージ リソース ファイルがソースの登録されている前提としています。</span><span class="sxs-lookup"><span data-stu-id="2948c-213">The code example assumes that the corresponding message resource file has been registered for the source.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 <span data-ttu-id="2948c-214">コード例では、リソース ライブラリ EventLogMsgs.dll に組み込まれている次のメッセージ テキスト ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="2948c-214">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="2948c-215">メッセージのテキスト ファイルは、メッセージ リソース ファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="2948c-215">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="2948c-216">メッセージのテキスト ファイルでは、リソース識別子とカテゴリ、イベント メッセージ、およびパラメーターの挿入文字列のテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="2948c-216">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2948c-217">プロパティが負の値または <see cref="F:System.UInt32.MaxValue" /> より大きい値に設定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2948c-217">The property is set to a negative value or to a value larger than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="P:System.Diagnostics.EventLogEntry.InstanceId" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile" />
        <altmember cref="P:System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      </Docs>
    </Member>
  </Members>
</Type>