<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Process.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b857fe3" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2eccf4de-4b1c-4706-8cb3-f46682ccfb720f3b937515accae8f91569e4cac09306f70365d0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0f3b937515accae8f91569e4cac09306f70365d0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b15b8cf0f6dbc1504057c88969d9ef4b790891fe</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/11/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Process">
          <source>Provides access to local and remote processes and enables you to start and stop local system processes.</source>
          <target state="translated">ローカル プロセスとリモート プロセスにアクセスできるようにして、ローカル システム プロセスの起動と中断ができるようにします。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component provides access to a process that is running on a computer.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントがコンピューターで実行されているプロセスへのアクセスを提供します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>A process, in the simplest terms, is a running app.</source>
          <target state="translated">プロセスを簡単に言えば、実行中のアプリとは。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>A thread is the basic unit to which the operating system allocates processor time.</source>
          <target state="translated">スレッドは、オペレーティング システムがプロセッサ時間を割り当てる基本単位です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>A thread can execute any part of the code of the process, including parts currently being executed by another thread.</source>
          <target state="translated">スレッドは、別のスレッドで実行されている部分を含む、プロセスのコードの任意の部分を実行できます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component is a useful tool for starting, stopping, controlling, and monitoring apps.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントは、開始、停止、制御、アプリおよび監視するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>You can use the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component, to obtain a list of the processes that are running, or you can start a new process.</source>
          <target state="translated">使用することができます、 <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> 、実行しているプロセスの一覧を取得する、コンポーネントまたはするには、新しいプロセスを開始できます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component is used to access system processes.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントがシステム プロセスにアクセスするために使用します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>After a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component has been initialized, it can be used to obtain information about the running process.</source>
          <target state="translated">後に、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントが初期化されて、実行中のプロセスに関する情報を取得するために使用できます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>Such information includes the set of threads, the loaded modules (.dll and .exe files), and performance information such as the amount of memory the process is using.</source>
          <target state="translated">などの情報には、スレッド、読み込まれたモジュール (.dll および .exe ファイル) のセットが含まれています。 プロセスのメモリの量などのパフォーマンス情報を使用しています。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">この型は、<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">型を使用してが完了したらを直接的または間接的にその破棄する必要があります。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">型の直接 dispose を呼び出す、<ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph>メソッドで、 <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph>ブロックします。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">直接ことのない破棄する場合など、言語コンストラクトを使用して<ph id="ph1">`using`</ph>(C# の場合) または<ph id="ph2">`Using`</ph>(Visual Basic で)。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">詳細についてを参照してください"を使用して、オブジェクトを実装する IDisposable"、<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>インターフェイスに関するトピック。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>32-bit processes cannot access the modules of a 64-bit process.</source>
          <target state="translated">32 ビット プロセスは、64 ビット プロセスのモジュールにアクセスできません。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>If you try to get information about a 64-bit process from a 32-bit process, you will get a <ph id="ph1">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph> exception.</source>
          <target state="translated">32 ビット プロセスから 64 ビット プロセスに関する情報を取得しようとすると、表示される、<ph id="ph1">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph>例外。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>A 64-bit process, on the other hand, can access the modules of a 32-bit process.</source>
          <target state="translated">その一方の 64 ビット プロセスで、32 ビット プロセスのモジュールにアクセスすることができます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>The process component obtains information about a group of properties all at once.</source>
          <target state="translated">プロセス コンポーネントでは、一度にすべてのプロパティのグループに関する情報を取得します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>After the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component has obtained information about one member of any group, it will cache the values for the other properties in that group and not obtain new information about the other members of the group until you call the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph> method.</source>
          <target state="translated">後に、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントは任意のグループの 1 つのメンバーに関する情報を取得、そのグループ内の他のプロパティの値をキャッシュし、呼び出すまで、グループの他のメンバーに関する新しい情報を取得できませんが、<ph id="ph2">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>Therefore, a property value is not guaranteed to be any newer than the last call to the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph> method.</source>
          <target state="translated">そのため、プロパティの値とは限りませんを最後に呼び出したよりも、新しいものを<ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>The group breakdowns are operating-system dependent.</source>
          <target state="translated">グループの内訳は、オペレーティング システムに依存します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>If you have a path variable declared in your system using quotes, you must fully qualify that path when starting any process found in that location.</source>
          <target state="translated">引用符を使用して、システムで宣言されているパス変数があれば、その場所で見つかったすべてのプロセスを開始するときにそのパスを完全に修飾する必要があります。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>Otherwise, the system will not find the path.</source>
          <target state="translated">それ以外の場合、システムには、パスは見つかりません。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>For example, if <ph id="ph1">`c:\mypath`</ph> is not in your path, and you add it using quotation marks: <ph id="ph2">`path = %path%;"c:\mypath"`</ph>, you must fully qualify any process in <ph id="ph3">`c:\mypath`</ph> when starting it.</source>
          <target state="translated">たとえば場合、<ph id="ph1">`c:\mypath`</ph>パスには引用符を使用して追加して:<ph id="ph2">`path = %path%;"c:\mypath"`</ph>のすべてのプロセスを完全に修飾する必要があります<ph id="ph3">`c:\mypath`</ph>開始するとき。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>A system process is uniquely identified on the system by its process identifier.</source>
          <target state="translated">システム プロセスは、システム上のプロセス id によって一意に識別します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>Like many Windows resources, a process is also identified by its handle, which might not be unique on the computer.</source>
          <target state="translated">多くの Windows リソースと同様に、プロセスは、そのハンドルでは、コンピューター上で一意でない場合がありますも識別されます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>A handle is the generic term for an identifier of a resource.</source>
          <target state="translated">ハンドルは、リソースの識別子の一般的な用語です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>The operating system persists the process handle, which is accessed through the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> component, even when the process has exited.</source>
          <target state="translated">オペレーティング システムからアクセスできるプロセス ハンドルが引き続き発生する、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネント、プロセスが終了した場合でもです。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>Thus, you can get the process's administrative information, such as the <ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph> (usually either zero for success or a nonzero error code) and the <ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>.</source>
          <target state="translated">プロセスの管理についてなどを取得するため、 <ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph> (通常、ゼロを成功、0 以外のエラー コード) と<ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>Handles are an extremely valuable resource, so leaking handles is more virulent than leaking memory.</source>
          <target state="translated">ハンドルには、非常に重要なリソースがあるためメモリをリークしているよりも有害はハンドルのリークです。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>This class contains a link demand and an inheritance demand at the class level that applies to all members.</source>
          <target state="translated">このクラスには、リンク確認要求し、すべてのメンバーに適用されるクラス レベルの継承確認要求が含まれています。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when either the immediate caller or the derived class does not have full-trust permission.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph>直前の呼び出し元または派生クラスのいずれかに完全信頼アクセス許可がない場合にスローされます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>For details about security demands, see <bpt id="p1">[</bpt>Link Demands<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept>.</source>
          <target state="translated">セキュリティ要求の詳細については、「<bpt id="p1">[</bpt>リンク確認要求<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source><ph id="ph1">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> Notes</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> 注意事項</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>In the .NET Framework, the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> class by default uses <ph id="ph2">&lt;xref:System.Console&gt;</ph> encodings, which are typically code page encodings, for the input, output, and error streams.</source>
          <target state="translated">.NET Framework で、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>既定値はクラス<ph id="ph2">&lt;xref:System.Console&gt;</ph>エンコーディングでは、一般的なコード ページ エンコーディングは、入力、出力、およびエラー ストリーム。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>For example code, on systems whose culture is English (United States), code page 437 is the default encoding for the <ph id="ph1">&lt;xref:System.Console&gt;</ph> class.</source>
          <target state="translated">コード例は、システムでカルチャが英語 (米国) は、コード ページ 437 はに対して既定のエンコーディング、<ph id="ph1">&lt;xref:System.Console&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>However, <ph id="ph1">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> may make only a limited subset of these encodings available.</source>
          <target state="translated">ただし、<ph id="ph1">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph>これらのエンコーディングの限定されたサブセットのみを使用できるようにします。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>If this is the case, it uses <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> as the default encoding.</source>
          <target state="translated">使用して、ケースの場合は、<ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph>として既定のエンコーディングします。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>If a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> object depends on specific code page encodings, you can still make them available by doing the following <bpt id="p1">*</bpt>before<ept id="p1">*</ept> you call any <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> methods:</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>オブジェクトは、特定のコード ページ エンコーディングによって異なります、引き続きそれらが使用できるように、次の手順を実行して<bpt id="p1">*</bpt>する前に<ept id="p1">*</ept>を呼び出す<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>メソッド。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>Add a reference to the System.Text.Encoding.CodePages.dll assembly to your project.</source>
          <target state="translated">System.Text.Encoding.CodePages.dll アセンブリへの参照をプロジェクトに追加します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>Retrieve the <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> object from the <ph id="ph2">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">取得、<ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph>オブジェクトから、<ph id="ph2">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>Pass the <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType&gt;</ph> method to make the additional encodings supported by the encoding provider available.</source>
          <target state="translated">渡す、<ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph>オブジェクトを<ph id="ph2">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType&gt;</ph>を利用可能なエンコーディング プロバイダーでサポートされている追加のエンコーディングを作成するメソッド。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> class will then automatically use the default system encoding rather than UTF8, provided that you have registered the encoding provider before calling any <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>クラスがし、自動的に使用する、UTF8 ではなく既定のシステム エンコーディングを呼び出す前にエンコーディング プロバイダーを登録した提供<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>The following example uses an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> class to start a process.</source>
          <target state="translated">次の例のインスタンスを使用して、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>クラス、プロセスを開始します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> class itself and a static <ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method to start a process.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>クラス自体と静的な<ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>プロセスを開始するメソッド。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>The following F# example defines a <ph id="ph1">`runProc`</ph> function that starts a process, captures all output and error information, and records the number of milliseconds that the process has run.</source>
          <target state="translated">次の f# のサンプル コード、<ph id="ph1">`runProc`</ph>プロセスを開始する関数のすべての出力とエラー情報をキャプチャし、プロセスが実行するミリ秒数を記録します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>The <ph id="ph1">`runProc`</ph> function has three parameters: the name of application to launch, the arguments to supply to the application, and the starting directory.</source>
          <target state="translated"><ph id="ph1">`runProc`</ph>関数には、3 つのパラメーター: アプリケーションの起動、アプリケーション、および開始ディレクトリを指定する引数の名前。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>The code for the <ph id="ph1">`runProc`</ph> function was written by <bpt id="p1">[</bpt>ImaginaryDevelopment<ept id="p1">](http://fssnip.net/authors/ImaginaryDevelopment)</ept> and is available under the <bpt id="p2">[</bpt>Microsoft Public License<ept id="p2">](https://opensource.org/licenses/ms-pl)</ept>.</source>
          <target state="translated">コードを<ph id="ph1">`runProc`</ph>によって関数が書き込まれた<bpt id="p1">[</bpt>ImaginaryDevelopment<ept id="p1">](http://fssnip.net/authors/ImaginaryDevelopment)</ept>で使用可能な<bpt id="p2">[</bpt>Microsoft Public License<ept id="p2">](https://opensource.org/licenses/ms-pl)</ept>です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>This class cannot be used by partially trusted code.</source>
          <target state="translated">このクラスは、部分的に信頼されたコードでは使用できません。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>for full trust for inheritors.</source>
          <target state="translated">継承時の完全な信頼。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Process">
          <source>This class cannot be inherited by partially trusted code.</source>
          <target state="translated">部分信頼コードでこのクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>If you do not specify the <ph id="ph1">&lt;xref:System.Diagnostics.Process.MachineName%2A&gt;</ph> property, the default is the local computer, (".").</source>
          <target state="translated">指定しない場合、<ph id="ph1">&lt;xref:System.Diagnostics.Process.MachineName%2A&gt;</ph>プロパティの既定値は、ローカル コンピューター ("です。") です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>You have two options for associating a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component with a process on the computer.</source>
          <target state="translated">新しい関連付けの 2 つのオプションがある<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントは、コンピューター上のプロセスです。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>The first option is to use the constructor to create the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component, set the appropriate members of the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property and call <ph id="ph3">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> to associate the <ph id="ph4">&lt;xref:System.Diagnostics.Process&gt;</ph> with a new system process.</source>
          <target state="translated">コンス トラクターを使用して作成する 1 つ目は、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネント、設定の適切なメンバー、<ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>プロパティと呼び出し<ph id="ph3">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>に関連付けるには、<ph id="ph4">&lt;xref:System.Diagnostics.Process&gt;</ph>で新しいシステム プロセスです。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>The second option is to associate the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> with a running system process by using <ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph> or one of the <ph id="ph3">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph> return values.</source>
          <target state="translated">関連付けるには、2 番目のオプション、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>を使用して実行中のシステム プロセスと<ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph>またはのいずれか、<ph id="ph3">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph>値を返します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>If you use a <ph id="ph1">`static`</ph> overload of the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method to start a new system process, the method creates a new <ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph> component and associates it with the process.</source>
          <target state="translated">使用する場合、<ph id="ph1">`static`</ph>のオーバー ロード、<ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>メソッド、新規システム プロセスを開始するメソッドが新たに作成<ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントと、プロセスに関連付けます。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType&gt;</ph> property is set to its default value, <ph id="ph2">`true`</ph>, you can start applications and documents in a way that is similar to using the <ph id="ph3">`Run`</ph> dialog box of the Windows <ph id="ph4">`Start`</ph> menu.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType&gt;</ph>プロパティがその既定値に設定<ph id="ph2">`true`</ph>を使用して次のような方法で、アプリケーションとドキュメントを開始することができます、 <ph id="ph3">`Run`</ph>  ダイアログ ボックス、Windows の<ph id="ph4">`Start`</ph>メニュー。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>When <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType&gt;</ph> is <ph id="ph2">`false`</ph>, you can start only executables.</source>
          <target state="translated">ときに<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType&gt;</ph>は<ph id="ph2">`false`</ph>、実行可能ファイルだけを開始することができます。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>Any executable file that you can call from the command line can be started in one of two ways: by setting the appropriate members of the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property and calling the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method with no parameters, or by passing the appropriate parameter to the <ph id="ph3">`static`</ph><ph id="ph4">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> member.</source>
          <target state="translated">コマンドラインから呼び出すことができる実行可能ファイルは、2 つの方法で開始できます: の適切なメンバーを設定して、<ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>プロパティは、通話、<ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>メソッド パラメーターなしで、または適切なパラメーターを渡すことによって、 <ph id="ph3">`static`</ph> <ph id="ph4">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>メンバー。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>You can create a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component by using the constructor, one of the static <ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> overloads, or any of the <ph id="ph3">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> methods.</source>
          <target state="translated">作成することができます、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>静的のいずれかのコンス トラクターを使用して、コンポーネント<ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>のいずれかのオーバー ロード、または、 <ph id="ph3">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph>、 <ph id="ph4">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph>、または<ph id="ph5">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>After you have done so, you have a view into the associated process.</source>
          <target state="translated">これを完了したら、関連付けられたプロセスにビューがあります。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>This is not a dynamic view that updates itself automatically when the process properties have changed in memory.</source>
          <target state="translated">これは、メモリ内でプロセスのプロパティが変更されたときに自動的に更新される動的なビューではありません。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>Instead, you must call <ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph> for the component to update the <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> property information in your application.</source>
          <target state="translated">代わりに、呼び出す必要があります<ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph>コンポーネントを更新するため、<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>プロパティについては、アプリケーションでします。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.#ctor">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.BasePriority">
          <source>Gets the base priority of the associated process.</source>
          <target state="translated">関連付けられたプロセスの基本優先順位を取得します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>The base priority, which is computed from the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.PriorityClass" /&gt;</ph> of the associated process.</source>
          <target state="translated">関連付けられたプロセスの <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.PriorityClass" /&gt;</ph> から算出される基本優先順位。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph> of the process is the starting priority for threads created within the associated process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph>プロセスが関連付けられているプロセス内で作成されたスレッドを開始する優先度。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>You can view information about the base priority through the System Monitor's Priority Base counter.</source>
          <target state="translated">システム モニターの基本優先度カウンターを使用する基本優先順位に関する情報を表示することができます。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>Based on the time elapsed or other boosts, the operating system can change the base priority when a process should be placed ahead of others.</source>
          <target state="translated">プロセスは、他のユーザーの前に配置するときに、経過時間、またはその他の要因をオペレーティング システムは基本の優先順位を変更できます時間に基づいています。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph> property lets you view the starting priority assigned to a process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph>プロパティを使用して、プロセスに割り当てられている開始の優先度を表示できます。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>However, because it is read-only, you cannot use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph> to set the priority of the process.</source>
          <target state="translated">ただし、これは、読み取り専用であるために使用できません、<ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph>プロセスの優先順位を設定します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>To change the priority, use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.PriorityClass%2A&gt;</ph> property.</source>
          <target state="translated">優先順位を変更するには、使用、<ph id="ph1">&lt;xref:System.Diagnostics.Process.PriorityClass%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph> is viewable using the System Monitor, while the <ph id="ph2">&lt;xref:System.Diagnostics.Process.PriorityClass%2A&gt;</ph> is not.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph>表示できるときに、システム モニターを使用して、<ph id="ph2">&lt;xref:System.Diagnostics.Process.PriorityClass%2A&gt;</ph>はありません。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>Both the <ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.Diagnostics.Process.PriorityClass%2A&gt;</ph> can be viewed programmatically.</source>
          <target state="translated">両方の<ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Diagnostics.Process.PriorityClass%2A&gt;</ph>プログラムから表示できます。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>The following table shows the relationship between <ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph> values and <ph id="ph2">&lt;xref:System.Diagnostics.Process.PriorityClass%2A&gt;</ph> values.</source>
          <target state="translated">次の表は、関係を示しています。<ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph>値および<ph id="ph2">&lt;xref:System.Diagnostics.Process.PriorityClass%2A&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>BasePriority</source>
          <target state="translated">BasePriority</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>PriorityClass</source>
          <target state="translated">PriorityClass</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>8</source>
          <target state="translated">8</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>13</source>
          <target state="translated">13</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>24</source>
          <target state="translated">24</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">次の例では、メモ帳のインスタンスを開始します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">例に、取得し、関連付けられたプロセスのさまざまなプロパティを表示します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>The example detects when the process exits, and displays the process's exit code.</source>
          <target state="translated">例では、検出プロセスが終了すると、し、プロセスの終了コードを表示します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.BasePriority">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set the <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> property to <ph id="ph2">&lt;see langword="false" /&gt;</ph> to access this property on Windows 98 and Windows Me.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) です。Windows 98 や Windows Me でこのプロパティにアクセスするには <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> プロパティを <ph id="ph2">&lt;see langword="false" /&gt;</ph> に設定します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.BasePriority">
          <source>The process has exited.</source>
          <target state="translated">プロセスが終了しています。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.BasePriority">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.BasePriority">
          <source>The process has not started, so there is no process ID.</source>
          <target state="translated">プロセスが開始されていないため、プロセス ID はありません。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.BasePriority">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>Begins asynchronous read operations on the redirected <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> stream of the application.</source>
          <target state="translated">アプリケーションのリダイレクトされた <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> ストリームで、非同期読み取り操作を開始します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream can be read synchronously or asynchronously.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>同期または非同期でストリームを読み取ることができます。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>Methods such as <ph id="ph1">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph> perform synchronous read operations on the error output stream of the process.</source>
          <target state="translated">などのメソッド<ph id="ph1">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph>プロセスのエラー出力ストリームの同期読み取り操作を実行します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>These synchronous read operations do not complete until the associated <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> writes to its <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream, or closes the stream.</source>
          <target state="translated">これらの同期読み取り操作は、関連するまで完了しません<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>に書き込み、<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>ストリーム、またはストリームを閉じます。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>In contrast, <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph> starts asynchronous read operations on the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream.</source>
          <target state="translated">これに対し、<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph>で読み取り操作を非同期の開始、<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>This method enables the designated event handler for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</source>
          <target state="translated">このメソッドは、ストリームの出力で指定されたイベント ハンドラーを有効にし、直ちにストリーム出力は、イベント ハンドラーに送られます中に、その他の作業を実行できますが、呼び出し元に返されます。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>Follow these steps to perform asynchronous read operations on <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> for a <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> :</source>
          <target state="translated">以下の手順で、非同期読み取り操作を実行する<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>の<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>Set <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph> to <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph> を <ph id="ph2">`false`</ph> に設定します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>Set <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A&gt;</ph> to <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A&gt;</ph> を <ph id="ph2">`true`</ph> に設定します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>Add your event handler to the <ph id="ph1">&lt;xref:System.Diagnostics.Process.ErrorDataReceived&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーを追加、<ph id="ph1">&lt;xref:System.Diagnostics.Process.ErrorDataReceived&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>The event handler must match the <ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventHandler?displayProperty=nameWithType&gt;</ph> delegate signature.</source>
          <target state="translated">イベント ハンドラーに一致する必要があります、<ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventHandler?displayProperty=nameWithType&gt;</ph>デリゲート シグネチャ。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>Start the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>.</source>
          <target state="translated">開始、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>Call <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph>の<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>This call starts asynchronous read operations on <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>.</source>
          <target state="translated">この呼び出しで、非同期読み取り操作を開始する<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>When asynchronous read operations start, the event handler is called each time the associated <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> writes a line of text to its <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream.</source>
          <target state="translated">たびに、関連付けられている非同期読み取り操作を開始、イベント ハンドラーが呼び出されたときに<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>へのテキストの行を書き込むその<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>You can cancel an asynchronous read operation by calling <ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelErrorRead%2A&gt;</ph>.</source>
          <target state="translated">呼び出して、非同期読み取り操作を取り消すことができます<ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelErrorRead%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>The read operation can be canceled by the caller or by the event handler.</source>
          <target state="translated">呼び出し元によって、またはイベント ハンドラーによって、読み取り操作をキャンセルできます。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>After canceling, you can call <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph> again to resume asynchronous read operations.</source>
          <target state="translated">キャンセル後に呼び出すことができます<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph>非同期読み取り操作を再開します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>You cannot mix asynchronous and synchronous read operations on a redirected stream.</source>
          <target state="translated">リダイレクトされたストリームで読み取り操作を非同期および同期を混在させることはできません。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>Once the redirected stream of a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> is opened in either asynchronous or synchronous mode, all further read operations on that stream must be in the same mode.</source>
          <target state="translated">リダイレクトされたストリームの 1 回、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>が開かれている、非同期または同期モードでもさらに読み取りそのストリームに対して操作が同じモードである必要があります。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>For example, do not follow <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph> with a call to <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph> on the <ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream, or vice versa.</source>
          <target state="translated">たとえばに従っていません<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph>への呼び出しに<ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>で、<ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>ストリーム、またはその逆です。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>However, you can read two different streams in different modes.</source>
          <target state="translated">ただし、さまざまなモードで異なる 2 つのストリームを読み取ることができます。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>For example, you can call <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph> and then call <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph> for the <ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream.</source>
          <target state="translated">たとえば、呼び出す<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph>およびを呼び出す<ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>の<ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>The following example uses the <ph id="ph1">`net view`</ph> command to list the available network resources on a remote computer.</source>
          <target state="translated">次の例では、<ph id="ph1">`net view`</ph>コマンドをリモート コンピューター上の利用可能なネットワーク リソースを一覧表示します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>The user supplies the target computer name as a command-line argument.</source>
          <target state="translated">ユーザーは、コマンドライン引数として対象コンピューターの名前を指定します。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>The user can also supply a file name for error output.</source>
          <target state="translated">ユーザーは、エラー出力のファイル名も提供できます。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>The example collects the output of the net command, waits for the process to finish, and then writes the output results to the console.</source>
          <target state="translated">例では、net コマンドの処理が完了すると、し、出力がコンソールに結果の書き込みの待機の出力を収集します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>If the user supplies the optional error file, the example writes errors to the file.</source>
          <target state="translated">ユーザーが指定した場合、省略可能なエラー ファイルの例では、エラーをファイルに書き込みます。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /&gt;</ph> プロパティが <ph id="ph2">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>An asynchronous read operation is already in progress on the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> ストリームで非同期読み取り操作は既に実行されています。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> stream has been used by a synchronous read operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> ストリームは、同期読み取り操作によって使用されています。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginErrorReadLine">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>Begins asynchronous read operations on the redirected <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> stream of the application.</source>
          <target state="translated">アプリケーションのリダイレクトされた <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> ストリームで、非同期読み取り操作を開始します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream can be read synchronously or asynchronously.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>同期または非同期でストリームを読み取ることができます。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>Methods such as <ph id="ph1">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph> perform synchronous read operations on the output stream of the process.</source>
          <target state="translated">などのメソッド<ph id="ph1">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph>プロセスの出力ストリームの同期読み取り操作を実行します。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>These synchronous read operations do not complete until the associated <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> writes to its <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream, or closes the stream.</source>
          <target state="translated">これらの同期読み取り操作は、関連するまで完了しません<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>に書き込み、<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>ストリーム、またはストリームを閉じます。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>In contrast, <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> starts asynchronous read operations on the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream.</source>
          <target state="translated">これに対し、<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>で読み取り操作を非同期の開始、<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>This method enables a designated event handler for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</source>
          <target state="translated">このメソッドは、指定されたイベントのハンドラーをストリーム出力を有効にし、直ちにストリーム出力は、イベント ハンドラーに送られます中に、その他の作業を実行できますが、呼び出し元に返されます。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>Follow these steps to perform asynchronous read operations on <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> for a <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> :</source>
          <target state="translated">以下の手順で、非同期読み取り操作を実行する<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>の<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>Set <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph> to <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph> を <ph id="ph2">`false`</ph> に設定します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>Set <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A&gt;</ph> to <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A&gt;</ph> を <ph id="ph2">`true`</ph> に設定します。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>Add your event handler to the <ph id="ph1">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーを追加、<ph id="ph1">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>The event handler must match the <ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventHandler?displayProperty=nameWithType&gt;</ph> delegate signature.</source>
          <target state="translated">イベント ハンドラーに一致する必要があります、<ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventHandler?displayProperty=nameWithType&gt;</ph>デリゲート シグネチャ。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>Start the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>.</source>
          <target state="translated">開始、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>Call <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>の<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>This call starts asynchronous read operations on <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>.</source>
          <target state="translated">この呼び出しで、非同期読み取り操作を開始する<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>When asynchronous read operations start, the event handler is called each time the associated <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> writes a line of text to its <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream.</source>
          <target state="translated">たびに、関連付けられている非同期読み取り操作を開始、イベント ハンドラーが呼び出されたときに<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>へのテキストの行を書き込むその<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>You can cancel an asynchronous read operation by calling <ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelOutputRead%2A&gt;</ph>.</source>
          <target state="translated">呼び出して、非同期読み取り操作を取り消すことができます<ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelOutputRead%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>The read operation can be canceled by the caller or by the event handler.</source>
          <target state="translated">呼び出し元によって、またはイベント ハンドラーによって、読み取り操作をキャンセルできます。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>After canceling, you can call <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> again to resume asynchronous read operations.</source>
          <target state="translated">キャンセル後に呼び出すことができます<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>非同期読み取り操作を再開します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>You cannot mix asynchronous and synchronous read operations on a redirected stream.</source>
          <target state="translated">リダイレクトされたストリームで読み取り操作を非同期および同期を混在させることはできません。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>Once the redirected stream of a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> is opened in either asynchronous or synchronous mode, all further read operations on that stream must be in the same mode.</source>
          <target state="translated">リダイレクトされたストリームの 1 回、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>が開かれている、非同期または同期モードでもさらに読み取りそのストリームに対して操作が同じモードである必要があります。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>For example, do not follow <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> with a call to <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph> on the <ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream, or vice versa.</source>
          <target state="translated">たとえばに従っていません<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>への呼び出しに<ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>で、<ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>ストリーム、またはその逆です。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>However, you can read two different streams in different modes.</source>
          <target state="translated">ただし、さまざまなモードで異なる 2 つのストリームを読み取ることができます。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>For example, you can call <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> and then call <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph> for the <ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream.</source>
          <target state="translated">たとえば、呼び出す<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>およびを呼び出す<ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>の<ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>The following example illustrates how to perform asynchronous read operations on the redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream of the <ph id="ph2">`sort`</ph> command.</source>
          <target state="translated">次の例は、リダイレクトされたで、非同期読み取り操作を実行する方法を示しています。<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>のストリーム、<ph id="ph2">`sort`</ph>コマンド。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>The <ph id="ph1">`sort`</ph> command is a console application that reads and sorts text input.</source>
          <target state="translated"><ph id="ph1">`sort`</ph>コマンドは、コンソール アプリケーションを読み取り、テキスト入力を並べ替えています。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>The example creates an event delegate for the <ph id="ph1">`SortOutputHandler`</ph> event handler and associates it with the <ph id="ph2">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph> event.</source>
          <target state="translated">例では、イベント デリゲートを作成する、<ph id="ph1">`SortOutputHandler`</ph>イベント ハンドラーに関連付けますと、<ph id="ph2">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>The event handler receives text lines from the redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream, formats the text, and writes the text to the screen.</source>
          <target state="translated">イベント ハンドラーは、テキストの行からリダイレクトされた<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>ストリームは、テキストを書式化して、画面にテキストを書き込みます。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /&gt;</ph> プロパティが <ph id="ph2">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>An asynchronous read operation is already in progress on the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> ストリームで非同期読み取り操作は既に実行されています。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> stream has been used by a synchronous read operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> ストリームは、同期読み取り操作によって使用されています。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.BeginOutputReadLine">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>Cancels the asynchronous read operation on the redirected <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> stream of an application.</source>
          <target state="translated">アプリケーションのリダイレクトされた <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> ストリームで、非同期読み取り操作をキャンセルします。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph> starts an asynchronous read operation on the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph> 非同期読み取り操作を開始、<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelErrorRead%2A&gt;</ph> ends the asynchronous read operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelErrorRead%2A&gt;</ph> 終了、非同期読み取り操作をします。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>After canceling, you can resume the asynchronous read operation by calling <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph> again.</source>
          <target state="translated">キャンセル後に呼び出すことによって、非同期読み取り操作を再開することができます<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph>もう一度です。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>When you call <ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelErrorRead%2A&gt;</ph>, all in-progress read operations for <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> are completed and then the event handler is disabled.</source>
          <target state="translated">呼び出すと<ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelErrorRead%2A&gt;</ph>すべて、進行中の読み取り操作<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>が完了してから、イベント ハンドラーが無効にします。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>All further redirected output to <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> is saved in a buffer.</source>
          <target state="translated">出力をさらにリダイレクトすべて<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>バッファーに保存します。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>If you re-enable the event handler with a call to <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph>, the saved output is sent to the event handler and asynchronous read operations resume.</source>
          <target state="translated">イベント ハンドラー呼び出しを再度有効にするかどうかは<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph>、保存済みの出力は、イベント ハンドラーに送信し、非同期読み取り操作を再開します。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>If you want to change the event handler before resuming asynchronous read operations, you must remove the existing event handler before adding the new event handler:</source>
          <target state="translated">非同期読み取り操作を再開する前に、イベント ハンドラーを変更する場合は、新しいイベント ハンドラーを追加する前に、既存のイベント ハンドラーを削除する必要があります。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>You cannot mix asynchronous and synchronous read operations on the redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream.</source>
          <target state="translated">リダイレクトされたで読み取り操作を非同期および同期が混在することはできません<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>Once the redirected stream of a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> is opened in either asynchronous or synchronous mode, all further read operations on that stream must be in the same mode.</source>
          <target state="translated">リダイレクトされたストリームの 1 回、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>が開かれている、非同期または同期モードでもさらに読み取りそのストリームに対して操作が同じモードである必要があります。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>If you cancel an asynchronous read operation on <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> and then need to read from the stream again, you must use <ph id="ph2">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph> to resume asynchronous read operations.</source>
          <target state="translated">キャンセルした場合、非同期読み取り操作で<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>一度からの読み取り、ストリーム、使用する必要がある必要があります<ph id="ph2">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph>非同期読み取り操作を再開します。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>Do not follow <ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelErrorRead%2A&gt;</ph> with a call to the synchronous read methods of <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> such as <ph id="ph3">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph>.</source>
          <target state="translated">従っていない<ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelErrorRead%2A&gt;</ph>同期への呼び出しでのメソッドを読み取る<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>など<ph id="ph3">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>、 <ph id="ph4">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>、または<ph id="ph5">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>The following example starts the <ph id="ph1">`nmake`</ph> command with user supplied arguments.</source>
          <target state="translated">次の例では開始、<ph id="ph1">`nmake`</ph>コマンドでユーザーが引数を指定します。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>The error and output streams are read asynchronously; the collected text lines are displayed to the console as well as written to a log file.</source>
          <target state="translated">エラーと出力ストリームが非同期的に読み取り収集されたテキストの行は、コンソールに表示されるだけでなくログ ファイルに書き込まれます。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>If the command output exceeds a specified number of lines, the asynchronous read operations are canceled.</source>
          <target state="translated">コマンドの出力は、指定した行数を超えている場合は、非同期読み取り操作が取り消されました。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> stream is not enabled for asynchronous read operations.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> ストリームは、非同期読み取り操作では有効になっていません。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelErrorRead">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>Cancels the asynchronous read operation on the redirected <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> stream of an application.</source>
          <target state="translated">アプリケーションのリダイレクトされた <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> ストリームで、非同期読み取り操作をキャンセルします。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> starts an asynchronous read operation on the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> 非同期読み取り操作を開始、<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelOutputRead%2A&gt;</ph> ends the asynchronous read operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelOutputRead%2A&gt;</ph> 終了、非同期読み取り操作をします。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>After canceling, you can resume asynchronous read operations by calling <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> again.</source>
          <target state="translated">キャンセル後に呼び出すことによって、非同期読み取り操作を再開することができます<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>もう一度です。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>When you call <ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelOutputRead%2A&gt;</ph>, all in-progress read operations for <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> are completed and then the event handler is disabled.</source>
          <target state="translated">呼び出すと<ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelOutputRead%2A&gt;</ph>すべて、進行中の読み取り操作<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>が完了してから、イベント ハンドラーが無効にします。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>All further redirected output to <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> is saved in a buffer.</source>
          <target state="translated">出力をさらにリダイレクトすべて<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>バッファーに保存します。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>If you re-enable the event handler with a call to <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>, the saved output is sent to the event handler and asynchronous read operations resume.</source>
          <target state="translated">イベント ハンドラー呼び出しを再度有効にするかどうかは<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>、保存済みの出力は、イベント ハンドラーに送信し、非同期読み取り操作を再開します。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>If you want to change the event handler before resuming asynchronous read operations, you must remove the existing event handler before adding the new event handler:</source>
          <target state="translated">非同期読み取り操作を再開する前に、イベント ハンドラーを変更する場合は、新しいイベント ハンドラーを追加する前に、既存のイベント ハンドラーを削除する必要があります。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>You cannot mix asynchronous and synchronous read operations on the redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream.</source>
          <target state="translated">リダイレクトされたで読み取り操作を非同期および同期が混在することはできません<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>Once the redirected stream of a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> is opened in either asynchronous or synchronous mode, all further read operations on that stream must be in the same mode.</source>
          <target state="translated">リダイレクトされたストリームの 1 回、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>が開かれている、非同期または同期モードでもさらに読み取りそのストリームに対して操作が同じモードである必要があります。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>If you cancel an asynchronous read operation on <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> and then need to read from the stream again, you must use <ph id="ph2">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> to resume asynchronous read operations.</source>
          <target state="translated">キャンセルした場合、非同期読み取り操作で<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>一度からの読み取り、ストリーム、使用する必要がある必要があります<ph id="ph2">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>非同期読み取り操作を再開します。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>Do not follow <ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelOutputRead%2A&gt;</ph> with a call to the synchronous read methods of <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> such as <ph id="ph3">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph>.</source>
          <target state="translated">従っていない<ph id="ph1">&lt;xref:System.Diagnostics.Process.CancelOutputRead%2A&gt;</ph>同期への呼び出しでのメソッドを読み取る<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>など<ph id="ph3">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>、 <ph id="ph4">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>、または<ph id="ph5">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>The following example starts the <ph id="ph1">`nmake`</ph> command with user supplied arguments.</source>
          <target state="translated">次の例では開始、<ph id="ph1">`nmake`</ph>コマンドでユーザーが引数を指定します。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>The error and output streams are read asynchronously; the collected text lines are displayed to the console as well as written to a log file.</source>
          <target state="translated">エラーと出力ストリームが非同期的に読み取り収集されたテキストの行は、コンソールに表示されるだけでなくログ ファイルに書き込まれます。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>If the command output exceeds a specified number of lines, the asynchronous read operations are canceled.</source>
          <target state="translated">コマンドの出力は、指定した行数を超えている場合は、非同期読み取り操作が取り消されました。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> stream is not enabled for asynchronous read operations.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> ストリームは、非同期読み取り操作では有効になっていません。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CancelOutputRead">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Close">
          <source>Frees all the resources that are associated with this component.</source>
          <target state="translated">このコンポーネントに関連付けられているすべてのリソースを解放します。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Close">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph> method causes the process to stop waiting for exit if it was waiting, closes the process handle, and clears process-specific properties.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph>メソッドにより、停止するプロセスを終了が待機している場合、プロセス ハンドルを終了およびプロセスに固有のプロパティをクリアするを待っています。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Close">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph> does not close the standard output, input, and error readers and writers in case they are being referenced externally.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph> 外部から参照されている場合に、標準の出力、入力、およびエラーのリーダーとライターを終了しません。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Close">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.Dispose%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Dispose%2A&gt;</ph> メソッドは <ph id="ph2">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Close">
          <source>Placing the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> object in a <ph id="ph2">`using`</ph> block disposes of resources without the need to call <ph id="ph3">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph>.</source>
          <target state="translated">配置すること、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>内のオブジェクト、<ph id="ph2">`using`</ph>ブロックを呼び出す必要がないリソースを破棄<ph id="ph3">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Close">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">次の例では、メモ帳のインスタンスを開始します。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Close">
          <source>It then retrieves the physical memory usage of the associated process at 2-second intervals for a maximum of 10 seconds.</source>
          <target state="translated">関連付けられたプロセスの物理メモリ使用量を 10 秒は最大 2 秒間隔で取得します。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Close">
          <source>The example detects whether the process exits before 10 seconds have elapsed.</source>
          <target state="translated">この例では、10 秒が経過する前に、プロセスが終了するかどうかを検出します。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Close">
          <source>The example closes the process if it is still running after 10 seconds.</source>
          <target state="translated">例は、10 秒後に実行されている場合に、プロセスを閉じます。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Close">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Close">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>Closes a process that has a user interface by sending a close message to its main window.</source>
          <target state="translated">メイン ウィンドウにクローズ メッセージを送信して、ユーザー インターフェイスがあるプロセスを終了します。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the close message was successfully sent; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the associated process does not have a main window or if the main window is disabled (for example if a modal dialog is being shown).</source>
          <target state="translated">クローズ メッセージが正常に送信された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。関連付けられたプロセスにメイン ウィンドウがない場合、またはメイン ウィンドウが使用できない場合 (モーダル ダイアログ ボックスが表示されているときなど) は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>When a process is executing, its message loop is in a wait state.</source>
          <target state="translated">プロセスを実行するときに、メッセージ ループは、待機状態にです。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>The message loop executes every time a Windows message is sent to the process by the operating system.</source>
          <target state="translated">Windows メッセージが、オペレーティング システムによって、プロセスに送信されるたびにメッセージ ループを実行します。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>Calling <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> sends a request to close to the main window, which, in a well-formed application, closes child windows and revokes all running message loops for the application.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>メイン ウィンドウに、アプリケーションでは整形式、子ウィンドウを閉じ、アプリケーションの実行中のすべてのメッセージ ループでは失効の近くに要求を送信します。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>The request to exit the process by calling <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> does not force the application to quit.</source>
          <target state="translated">呼び出すことによって、プロセスを終了する要求<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>アプリケーションの終了を強制されません。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>The application can ask for user verification before quitting, or it can refuse to quit.</source>
          <target state="translated">アプリケーションが、終了する前にユーザーの確認を求めることや、終了を拒否できます。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>To force the application to quit, use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> method.</source>
          <target state="translated">アプリケーションを終了するを使用して、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>The behavior of <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> is identical to that of a user closing an application's main window using the system menu.</source>
          <target state="translated">動作<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>システム メニューを使用して、アプリケーションのメイン ウィンドウを閉じると、ユーザーの場合と同じです。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>Therefore, the request to exit the process by closing the main window does not force the application to quit immediately.</source>
          <target state="translated">そのため、メイン ウィンドウを閉じることでプロセスを終了する要求はすぐに終了するアプリケーションを強制しません。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>Data edited by the process or resources allocated to the process can be lost if you call <ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>.</source>
          <target state="translated">プロセスによって編集されたデータまたはプロセスに割り当てられたリソースが失われる場合を呼び出す<ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> causes an abnormal process termination, and should be used only when necessary.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> 異常なプロセス終了では、および必要な場合にのみ使用する必要があります。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> enables an orderly termination of the process and closes all windows, so it is preferable for applications with an interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> プロセスの適切な順序の終了を有効にし、インターフェイスを持つアプリケーションにも適していますが、すべてのウィンドウを閉じます。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>If <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> fails, you can use <ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> to terminate the process.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>使用することが失敗した場合、<ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>プロセスを終了します。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> is the only way to terminate processes that do not have graphical interfaces.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> グラフィカル インターフェイスがないプロセスを終了する唯一の方法です。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>You can call <ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> only for processes that are running on the local computer.</source>
          <target state="translated">呼び出すことができます<ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>ローカル コンピューターで実行されているプロセスに対してのみです。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>You cannot cause processes on remote computers to exit.</source>
          <target state="translated">終了するリモート コンピューター上のプロセスが発生することはできません。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>You can only view information for processes running on remote computers.</source>
          <target state="translated">リモート コンピューターで実行されているプロセスの情報のみ表示できます。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">次の例では、メモ帳のインスタンスを開始します。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>It then retrieves the physical memory usage of the associated process at 2 second intervals for a maximum of 10 seconds.</source>
          <target state="translated">2 秒間隔、最大で 10 秒間の関連付けられたプロセスの物理メモリ使用量を取得します。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>The example detects whether the process exits before 10 seconds have elapsed.</source>
          <target state="translated">この例では、10 秒が経過する前に、プロセスが終了するかどうかを検出します。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>The example closes the process if it is still running after 10 seconds.</source>
          <target state="translated">例は、10 秒後に実行されている場合に、プロセスを閉じます。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set the <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> property to <ph id="ph2">&lt;see langword="false" /&gt;</ph> to access this property on Windows 98 and Windows Me.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) です。Windows 98 や Windows Me でこのプロパティにアクセスするには <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> プロパティを <ph id="ph2">&lt;see langword="false" /&gt;</ph> に設定します。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>The process has already exited.</source>
          <target state="translated">プロセスは既に終了しています。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>No process is associated with this <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> オブジェクトに関連付けられているプロセスはありません。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.CloseMainWindow">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">マネージ リソースとアンマネージ リソースの両方を解放する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。アンマネージ リソースだけを解放する場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Dispose(System.Boolean)">
          <source>Release all resources used by this process.</source>
          <target state="translated">このプロセスによって使用されているすべてのリソースを解放します。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>Gets or sets whether the <ph id="ph1">&lt;see cref="E:System.Diagnostics.Process.Exited" /&gt;</ph> event should be raised when the process terminates.</source>
          <target state="translated">プロセスが終了したときに、<ph id="ph1">&lt;see cref="E:System.Diagnostics.Process.Exited" /&gt;</ph> イベントを発生させるかどうかを取得または設定します。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="E:System.Diagnostics.Process.Exited" /&gt;</ph> event should be raised when the associated process is terminated (through either an exit or a call to <ph id="ph3">&lt;see cref="M:System.Diagnostics.Process.Kill" /&gt;</ph>); otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">正常終了または <ph id="ph3">&lt;see cref="M:System.Diagnostics.Process.Kill" /&gt;</ph> の呼び出しによって関連付けられたプロセスが終了したときに <ph id="ph2">&lt;see cref="E:System.Diagnostics.Process.Exited" /&gt;</ph> イベントを発生させる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>Note that the <ph id="ph1">&lt;see cref="E:System.Diagnostics.Process.Exited" /&gt;</ph> event is raised even if the value of <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.EnableRaisingEvents" /&gt;</ph> is <ph id="ph3">&lt;see langword="false" /&gt;</ph> when the process exits during or before the user performs a <ph id="ph4">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> check.</source>
          <target state="translated">注意してください、<ph id="ph1">&lt;see cref="E:System.Diagnostics.Process.Exited" /&gt;</ph>イベントが発生した場合でもの値<ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.EnableRaisingEvents" /&gt;</ph>は<ph id="ph3">&lt;see langword="false" /&gt;</ph>またはユーザーが実行中にプロセスが終了するときに、<ph id="ph4">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph>を確認します。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph> property suggests whether the component should be notified when the operating system has shut down a process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph>プロパティは、オペレーティング システムがプロセスをシャット ダウン時にコンポーネントを通知する必要があるかどうかを提案します。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph> property is used in asynchronous processing to notify your application that a process has exited.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph>プロパティは、プロセスが終了して、アプリケーションに通知する非同期処理で使用します。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>To force your application to synchronously wait for an exit event (which interrupts processing of the application until the exit event has occurred), use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt;</ph> method.</source>
          <target state="translated">強制的に終了イベント (終了イベントが発生するまで、アプリケーションの処理が中断される) を同期的に待機するアプリケーションを使用して、<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>If you're using Visual Studio and double-click a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component in your project, an <ph id="ph2">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event delegate and event handler are automatically generated.</source>
          <target state="translated">ダブルクリックして Visual Studio を使用している場合、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>プロジェクトで、コンポーネント、<ph id="ph2">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>イベント デリゲートとイベント ハンドラーが自動的に生成します。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>Additional code sets the <ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">追加のコード セット、<ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph>プロパティを<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>You must change this property to <ph id="ph1">`true`</ph> for your event handler to execute when the associated process exits.</source>
          <target state="translated">このプロパティを変更する必要があります<ph id="ph1">`true`</ph>ときに実行する、イベント ハンドラーに関連付けられたプロセスが終了しました。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>If the component's <ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph> value is <ph id="ph2">`true`</ph>, or when <ph id="ph3">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph> is <ph id="ph4">`false`</ph> and a <ph id="ph5">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> check is invoked by the component, the component can access the administrative information for the associated process, which remains stored by the operating system.</source>
          <target state="translated">場合、コンポーネントの<ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph>値は<ph id="ph2">`true`</ph>、または<ph id="ph3">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph>は<ph id="ph4">`false`</ph>と<ph id="ph5">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>チェックは、コンポーネントにより呼び出され、コンポーネントは、オペレーティング システムによって保存、関連付けられたプロセスの管理情報にアクセスできます。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>Such information includes the <ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph>.</source>
          <target state="translated">このような情報が含まれています、<ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>After the associated process exits, the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph> of the component no longer points to an existing process resource.</source>
          <target state="translated">関連付けられたプロセスが終了した後、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>のコンポーネントを示していない既存のプロセス リソース。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>Instead, it can only be used to access the operating system's information about the process resource.</source>
          <target state="translated">代わりに、ことのみできますプロセス リソースに関するオペレーティング システムの情報にアクセスします。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>The operating system is aware that there are handles to exited processes that haven't been released by <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> components, so it keeps the <ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph> information in memory.</source>
          <target state="translated">オペレーティング システムがによってリリースされていない終了のプロセスへのハンドルがあることに注意してください<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネント、それが維持されるように、<ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>メモリ内の情報です。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>There's a cost associated with watching for a process to exit.</source>
          <target state="translated">プロセスが終了するを監視に関連するコストがあります。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>If <ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event is raised when the associated process terminates.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph>は<ph id="ph2">`true`</ph>、<ph id="ph3">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>イベントは、関連付けられたプロセスが終了するときに発生します。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>Your procedures for the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event run at that time.</source>
          <target state="translated">手順、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>時に実行されるイベント。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>Sometimes, your application starts a process but doesn't require notification of its closure.</source>
          <target state="translated">場合によっては、アプリケーションはプロセスを開始しますが、そのクロージャの通知を必要としません。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>For example, your application can start Notepad to allow the user to perform text editing but make no further use of the Notepad application.</source>
          <target state="translated">たとえば、アプリケーションでは、メモ帳を使用するテキストの編集を行いますが、それ以上メモ帳を使用するユーザーを開始できます。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>You can choose to avoid notification when the process exits because it's not relevant to the continued operation of your application.</source>
          <target state="translated">アプリケーションの継続的な操作に関係がないために、プロセスが終了するときに通知を避けるために選択できます。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>Setting <ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph> to <ph id="ph2">`false`</ph> can save system resources.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph>に<ph id="ph2">`false`</ph>システム リソースを節約できます。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>The following code example creates a process that prints a file.</source>
          <target state="translated">次のコード例では、ファイルを出力するプロセスを作成します。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>It sets the <ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph> property to cause the process to raise the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event when it exits.</source>
          <target state="translated">設定、<ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph>プロパティにより発生するプロセスを<ph id="ph2">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>が終了したときにイベント。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event handler displays process information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>イベント ハンドラーがプロセス情報を表示します。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.EnableRaisingEvents">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.EnterDebugMode">
          <source>Puts a <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component in state to interact with operating system processes that run in a special mode by enabling the native property <ph id="ph2">&lt;see langword="SeDebugPrivilege" /&gt;</ph> on the current thread.</source>
          <target state="translated">現在のスレッドのネイティブ プロパティ <ph id="ph2">&lt;see langword="SeDebugPrivilege" /&gt;</ph> を有効にすることにより、<ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントを、特殊なモードで実行されているオペレーティング システム プロセスと対話する状態にします。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.EnterDebugMode">
          <source>Some operating system processes run in a special mode.</source>
          <target state="translated">いくつかのオペレーティング システム プロセスは、特殊なモードで実行されます。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.EnterDebugMode">
          <source>Attempting to read properties of or attach to these processes is not possible unless you have called <ph id="ph1">&lt;xref:System.Diagnostics.Process.EnterDebugMode%2A&gt;</ph> on the component.</source>
          <target state="translated">プロパティを読み取るか、これらのプロセスにアタッチしようとしています。 は、呼び出した<ph id="ph1">&lt;xref:System.Diagnostics.Process.EnterDebugMode%2A&gt;</ph>コンポーネントです。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.EnterDebugMode">
          <source>Call <ph id="ph1">&lt;xref:System.Diagnostics.Process.LeaveDebugMode%2A&gt;</ph> when you no longer need access to these processes that run in special mode.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Diagnostics.Process.LeaveDebugMode%2A&gt;</ph>特殊なモードで実行されているこれらのプロセスへのアクセスが不要です。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.EnterDebugMode">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.EnterDebugMode">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>Occurs when an application writes to its redirected <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> stream.</source>
          <target state="translated">アプリケーションがリダイレクトされた <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> ストリームに書き込む場合に発生します。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.ErrorDataReceived&gt;</ph> event indicates that the associated process has written to its redirected <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.ErrorDataReceived&gt;</ph>イベントは、関連付けられたプロセスが、リダイレクトされたに書き込まれたことを示します<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>The event only occurs during asynchronous read operations on <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>.</source>
          <target state="translated">イベントがのみで、非同期読み取り操作中に発生<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>To start asynchronous read operations, you must redirect the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream of a <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>, add your event handler to the <ph id="ph3">&lt;xref:System.Diagnostics.Process.ErrorDataReceived&gt;</ph> event, and call <ph id="ph4">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph>.</source>
          <target state="translated">非同期の読み取り操作を開始する必要がありますにリダイレクトする、<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>のストリーム、 <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>、イベント ハンドラーを追加、<ph id="ph3">&lt;xref:System.Diagnostics.Process.ErrorDataReceived&gt;</ph>イベント、および呼び出し<ph id="ph4">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>Thereafter, the <ph id="ph1">&lt;xref:System.Diagnostics.Process.ErrorDataReceived&gt;</ph> event signals each time the process writes a line to the redirected <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream, until the process exits or calls <ph id="ph3">&lt;xref:System.Diagnostics.Process.CancelErrorRead%2A&gt;</ph>.</source>
          <target state="translated">その後、<ph id="ph1">&lt;xref:System.Diagnostics.Process.ErrorDataReceived&gt;</ph>イベント シグナルたびに、プロセスは、リダイレクトされたに行を書き込む<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>プロセスが終了したかを呼び出すまで、ストリーム<ph id="ph3">&lt;xref:System.Diagnostics.Process.CancelErrorRead%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>The application that is processing the asynchronous output should call the <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph> method to ensure that the output buffer has been flushed.</source>
          <target state="translated">非同期出力を処理するアプリケーションを呼び出す必要があります、<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph>メソッドを出力バッファーがフラッシュされたことを確認してください。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>Note that specifying a timeout by using the <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit(System.Int32)&gt;</ph> overload does <bpt id="p1">*</bpt>not<ept id="p1">*</ept> ensure the output buffer has been flushed.</source>
          <target state="translated">使用して、タイムアウト時間を指定することに注意してください、<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit(System.Int32)&gt;</ph>オーバー ロードは<bpt id="p1">*</bpt>いない<ept id="p1">*</ept>出力バッファーがフラッシュされたことを確認します。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>The following example uses the <ph id="ph1">`net view`</ph> command to list the available network resources on a remote computer.</source>
          <target state="translated">次の例では、<ph id="ph1">`net view`</ph>コマンドをリモート コンピューター上の利用可能なネットワーク リソースを一覧表示します。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>The user supplies the target computer name as a command-line argument.</source>
          <target state="translated">ユーザーは、コマンドライン引数として対象コンピューターの名前を指定します。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>The user can also supply a file name for error output.</source>
          <target state="translated">ユーザーは、エラー出力のファイル名も提供できます。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>The example collects the output of the net command, waits for the process to finish, and then writes the output results to the console.</source>
          <target state="translated">例では、net コマンドの処理が完了すると、し、出力がコンソールに結果の書き込みの待機の出力を収集します。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>If the user supplies the optional error file, the example writes errors to the file.</source>
          <target state="translated">ユーザーが指定した場合、省略可能なエラー ファイルの例では、エラーをファイルに書き込みます。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.ErrorDataReceived">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ExitCode">
          <source>Gets the value that the associated process specified when it terminated.</source>
          <target state="translated">関連付けられたプロセスが終了したときにプロセスによって指定された値を取得します。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>The code that the associated process specified when it terminated.</source>
          <target state="translated">関連付けられたプロセスが終了したときにプロセスによって指定されたコード。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph> to get the status that the system process returned when it exited.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph>終了ときに、システム プロセスが返される状態を取得します。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>You can use the exit code much like an integer return value from a <ph id="ph1">`main()`</ph> procedure.</source>
          <target state="translated">かなり整数からの戻り値と同じように、終了コードを使用することができます、<ph id="ph1">`main()`</ph>プロシージャです。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph> value for a process reflects the specific convention implemented by the application developer for that process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph>値プロセスには、そのプロセスのアプリケーションの開発者によって実装されている特定の規則が反映されます。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process.</source>
          <target state="translated">意思決定を行うコードで終了コード値を使用する場合は、アプリケーションのプロセスによって使用される終了コード規則を理解していることを確認します。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>Developers usually indicate a successful exit by an <ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph> value of zero, and designate errors by nonzero values that the calling method can use to identify the cause of an abnormal process termination.</source>
          <target state="translated">開発者が通常によって成功の終了を示す、<ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph>呼び出し元のメソッドを使用して、異常なプロセスの終了の原因を識別する 0 以外の値が 0、および指定のエラーの値。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>It is not necessary to follow these guidelines, but they are the convention.</source>
          <target state="translated">これらのガイドラインに従う必要はありませんが、規則できます。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>If you try to get the <ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph> before the process has exited, the attempt throws an exception.</source>
          <target state="translated">取得しようとする場合、<ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph>プロセスが終了する前に、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>Examine the <ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> property first to verify whether the associated process has terminated.</source>
          <target state="translated">確認、<ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>関連付けられたプロセスが終了するかどうかを確認するには、最初のプロパティです。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>When standard output has been redirected to asynchronous event handlers, it is possible that output processing will not have completed when <ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">非同期のイベント ハンドラーを標準出力がリダイレクトされたときに可能であれば、出力の処理が完了していない場合に<ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>返します<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>To ensure that asynchronous event handling has been completed, call the <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph> overload that takes no parameter before checking <ph id="ph2">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>.</source>
          <target state="translated">非同期イベント処理が完了したことを呼び出して、<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph>をチェックする前にパラメーターを受け取らないオーバー ロード<ph id="ph2">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>You can use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> or the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> method to cause an associated process to exit.</source>
          <target state="translated">使用することができます、<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>メソッドを呼び出すと、関連付けられているプロセスを終了します。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>There are two ways of being notified when the associated process exits: synchronously and asynchronously.</source>
          <target state="translated">関連付けられたプロセスが終了したときの通知の 2 つの方法: 同期的および非同期的にします。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>Synchronous notification relies on calling the <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt;</ph> method to pause the processing of your application until the associated component exits.</source>
          <target state="translated">同期通知が呼び出し元に依存、<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt;</ph>メソッドに関連付けられているコンポーネントを終了するまで、アプリケーションの処理を一時停止します。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>Asynchronous notification relies on the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event.</source>
          <target state="translated">非同期の通知は、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>When using asynchronous notification, <ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph> must be set to <ph id="ph2">`true`</ph> for the <ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph> component to receive notification that the process has exited.</source>
          <target state="translated">非同期の通知を使用するときに<ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph>に設定する必要があります<ph id="ph2">`true`</ph>の<ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph>プロセスが終了したことを示す通知を受信するコンポーネントです。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">次の例では、メモ帳のインスタンスを開始します。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">例に、取得し、関連付けられたプロセスのさまざまなプロパティを表示します。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>The example detects when the process exits, and displays the process's exit code.</source>
          <target state="translated">例では、検出プロセスが終了すると、し、プロセスの終了コードを表示します。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ExitCode">
          <source>The process has not exited.</source>
          <target state="translated">プロセスは終了していません。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ExitCode">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ExitCode">
          <source>The process <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Handle" /&gt;</ph> is not valid.</source>
          <target state="translated">プロセス <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Handle" /&gt;</ph> は終了していません。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ExitCode">
          <source>You are trying to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.ExitCode" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">リモート コンピューターで実行中のプロセスの <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.ExitCode" /&gt;</ph> プロパティにアクセスしようとしています。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ExitCode">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">このプロパティはローカル コンピューターで実行中のプロセスに対してのみ使用可能です。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitCode">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="E:System.Diagnostics.Process.Exited">
          <source>Occurs when a process exits.</source>
          <target state="translated">プロセスが終了したときに発生します。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event indicates that the associated process exited.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>イベントは、関連付けられたプロセスが終了していることを示します。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>This occurrence means either that the process terminated (aborted) or successfully closed.</source>
          <target state="translated">この発生したことを示します、プロセス (中断) 終了したか、正常終了します。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>This event can occur only if the value of the <ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">場合にのみ、このイベントが発生する可能性がの値、<ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph>プロパティは<ph id="ph2">`true`</ph>します。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>There are two ways of being notified when the associated process exits: synchronously and asynchronously.</source>
          <target state="translated">関連付けられたプロセスが終了したときの通知の 2 つの方法: 同期的および非同期的にします。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>Synchronous notification means calling the <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt;</ph> method to block the current thread until the process exits.</source>
          <target state="translated">同期の通知呼び出しの意味、<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt;</ph>プロセスを終了するまで、現在のスレッドをブロックするメソッド。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>Asynchronous notification uses the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event, which allows the calling thread to continue execution in the meantime.</source>
          <target state="translated">非同期通知を使用して、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>イベントで、呼び出し元のスレッド当面の間での実行を続行できるようにします。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>In the latter case, <ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph> must be set to <ph id="ph2">`true`</ph> for the calling application to receive the Exited event.</source>
          <target state="translated">後者の場合、<ph id="ph1">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph>に設定する必要があります<ph id="ph2">`true`</ph>Exited イベントを受け取る、呼び出し元アプリケーションにします。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>When the operating system shuts down a process, it notifies all other processes that have registered handlers for the Exited event.</source>
          <target state="translated">オペレーティング システムがシャット ダウン プロセス、Exited イベントのハンドラーを登録している他のすべてのプロセスを通知します。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>At this time, the handle of the process that just exited can be used to access some properties such as  <ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> that the operating system maintains until it releases that handle completely.</source>
          <target state="translated">この時点でなどにアクセスするいくつかのプロパティだけが終了したプロセスのハンドルを使用できます<ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>そのハンドルを完全に解放されるまでに、オペレーティング システムが維持されます。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>Even if you have a handle to an exited process, you cannot call <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> again to reconnect to the same process.</source>
          <target state="translated">終了したプロセスへのハンドルがある場合は、場合でも呼び出すことができません<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>再接続するには、同じプロセスです。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>Calling <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> automatically releases the associated process and connects to a process with the same file but an entirely new <ph id="ph2">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>自動的に関連付けられたプロセスを解放し、同じファイルがまったく新しいプロセスに接続<ph id="ph2">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>For more information about the use of the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event in Windows Forms applications, see the <ph id="ph2">&lt;xref:System.Diagnostics.Process.SynchronizingObject%2A&gt;</ph> property.</source>
          <target state="translated">使用の詳細については、 <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> Windows フォーム アプリケーションでイベントを参照してください、<ph id="ph2">&lt;xref:System.Diagnostics.Process.SynchronizingObject%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>The following code example creates a process that prints a file.</source>
          <target state="translated">次のコード例では、ファイルを出力するプロセスを作成します。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>It raises the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event when the process exits because the <ph id="ph2">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph> property was set when the process was created.</source>
          <target state="translated">生成、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>ために、プロセスが終了するときにイベント、<ph id="ph2">&lt;xref:System.Diagnostics.Process.EnableRaisingEvents%2A&gt;</ph>プロセスの作成時にプロパティが設定されました。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event handler displays process information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>イベント ハンドラーがプロセス情報を表示します。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.Exited">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ExitTime">
          <source>Gets the time that the associated process exited.</source>
          <target state="translated">関連付けられたプロセスが終了した時刻を取得します。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitTime">
          <source>A <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> that indicates when the associated process was terminated.</source>
          <target state="translated">関連付けられたプロセスが終了した時刻を示す <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitTime">
          <source>If the process has not terminated, attempting to retrieve the <ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph> property throws an exception.</source>
          <target state="translated">取得しているプロセスが終了していない場合、<ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>プロパティは例外をスローします。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitTime">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> before getting the <ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph> property to determine whether the associated process has terminated.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>取得する前に、<ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>プロパティに関連付けられたプロセスが終了するかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitTime">
          <source>The following code example creates a process that prints a file.</source>
          <target state="translated">次のコード例では、ファイルを出力するプロセスを作成します。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitTime">
          <source>The process raises the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event when it exits, and the event handler displays the <ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph> property and other process information.</source>
          <target state="translated">プロセスが発生、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>終了すると、イベントおよびイベント ハンドラーで、表示、<ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>プロパティおよびその他の情報を処理します。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ExitTime">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ExitTime">
          <source>You are trying to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.ExitTime" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">リモート コンピューターで実行中のプロセスの <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.ExitTime" /&gt;</ph> プロパティにアクセスしようとしています。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ExitTime">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">このプロパティはローカル コンピューターで実行中のプロセスに対してのみ使用可能です。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitTime">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ExitTime">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetCurrentProcess">
          <source>Gets a new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component and associates it with the currently active process.</source>
          <target state="translated">新しい <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントを取得し、現在アクティブなプロセスに関連付けます。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetCurrentProcess">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component associated with the process resource that is running the calling application.</source>
          <target state="translated">呼び出し元のアプリケーションを実行しているプロセス リソースに関連付けられた新しい <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネント。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetCurrentProcess">
          <source>Use this method to create a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance and associate it with the process resource on the local computer.</source>
          <target state="translated">このメソッドを使用して、新しい作成<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>をインスタンス化し、ローカル コンピューター上のプロセス リソースに関連付けます。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetCurrentProcess">
          <source>Like the similar <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph> methods, <ph id="ph4">&lt;xref:System.Diagnostics.Process.GetCurrentProcess%2A&gt;</ph> associates an existing resource with a new <ph id="ph5">&lt;xref:System.Diagnostics.Process&gt;</ph> component.</source>
          <target state="translated">などの類似<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph>メソッド、<ph id="ph4">&lt;xref:System.Diagnostics.Process.GetCurrentProcess%2A&gt;</ph>新しいの既存のリソースに関連付けます<ph id="ph5">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントです。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetCurrentProcess">
          <source>The following example retrieves information of the current process, processes running on the local computer, all instances of Notepad running on the local computer, and a specific process on the local computer.</source>
          <target state="translated">次の例では、ローカル コンピューター、ローカル コンピューターと、ローカル コンピューター上の特定のプロセスで実行してメモ帳のすべてのインスタンスの実行中のプロセス、現在のプロセスの情報を取得します。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetCurrentProcess">
          <source>It then retrieves information for the same processes on a remote computer.</source>
          <target state="translated">リモート コンピューターで同じプロセスの情報を取得します。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetCurrentProcess">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetCurrentProcess">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Process">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component, and associates it with the existing process resource that you specify.</source>
          <target state="translated">新しい <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントを作成し、指定した既存のプロセス リソースに関連付けます。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>The system-unique identifier of a process resource.</source>
          <target state="translated">システムで一意なプロセス リソースの識別子。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component, given the identifier of a process on the local computer.</source>
          <target state="translated">ローカル コンピューター上のプロセス ID が指定された新しい <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントを返します。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component that is associated with the local process resource identified by the <ph id="ph2">&lt;paramref name="processId" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="processId" /&gt;</ph> パラメーターで識別されるローカル プロセス リソースに関連付けられた <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネント。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>Use this method to create a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component and associate it with a process resource on the local computer.</source>
          <target state="translated">このメソッドを使用して、新たに作成する<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントと、ローカル コンピューター上のプロセス リソースに関連付けます。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>The process resource must already exist on the computer, because <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%28System.Int32%29&gt;</ph> does not create a system resource, but rather associates a resource with an application-generated <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> component.</source>
          <target state="translated">プロセス リソースが既に存在して、コンピューターであるため<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%28System.Int32%29&gt;</ph>システムのリソースは作成されませんが、アプリケーションによって生成ではなく関連付けますリソース<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントです。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>A process <ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph> can be retrieved only for a process that is currently running on the computer.</source>
          <target state="translated">プロセス<ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>コンピューターで現在実行されているプロセスにのみ取得できます。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>After the process terminates, <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%28System.Int32%29&gt;</ph> throws an exception if you pass it an expired identifier.</source>
          <target state="translated">プロセスの終了後<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%28System.Int32%29&gt;</ph>有効期限が切れた識別子を渡すと、例外をスローします。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>On any particular computer, the identifier of a process is unique.</source>
          <target state="translated">任意の特定のコンピューター上のプロセス id は一意です。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%28System.Int32%29&gt;</ph> returns one process at most.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%28System.Int32%29&gt;</ph> 最大で 1 つのプロセスを返します。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>If you want to get all the processes running a particular application, use <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%28System.String%29&gt;</ph>.</source>
          <target state="translated">使用して、特定のアプリケーションを実行しているすべてのプロセスを取得する場合<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%28System.String%29&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>If multiple processes exist on the computer running the specified application, <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%28System.String%29&gt;</ph> returns an array containing all the associated processes.</source>
          <target state="translated">指定されたアプリケーションを実行しているコンピューターに複数のプロセスが存在する場合<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%28System.String%29&gt;</ph>に関連付けられたすべてのプロセスを含む配列を返します。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>You can query each of these processes in turn for its identifier.</source>
          <target state="translated">これらの各プロセスの識別子の順番を照会できます。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>The process identifier can be viewed in the <ph id="ph1">`Processes`</ph> panel of the Windows Task Manager.</source>
          <target state="translated">プロセス id で表示できます、 <ph id="ph1">`Processes`</ph> Windows タスク マネージャーのパネルです。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>The <ph id="ph1">`PID`</ph> column displays the process identifier that is assigned to a process.</source>
          <target state="translated"><ph id="ph1">`PID`</ph>列には、プロセスに割り当てられているプロセス id が表示されます。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>The following example retrieves information of the current process, processes running on the local computer, all instances of Notepad running on the local computer, and a specific process on the local computer.</source>
          <target state="translated">次の例では、ローカル コンピューター、ローカル コンピューターと、ローカル コンピューター上の特定のプロセスで実行してメモ帳のすべてのインスタンスの実行中のプロセス、現在のプロセスの情報を取得します。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>It then retrieves information for the same processes on a remote computer.</source>
          <target state="translated">リモート コンピューターで同じプロセスの情報を取得します。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>The process specified by the <ph id="ph1">&lt;paramref name="processId" /&gt;</ph> parameter is not running.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="processId" /&gt;</ph> パラメーターで指定されたプロセスは実行されていません。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>The identifier might be expired.</source>
          <target state="translated">識別子の有効期限が切れている可能性があります。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>The process was not started by this object.</source>
          <target state="translated">このオブジェクトによってプロセスは開始されませんでした。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>The system-unique identifier of a process resource.</source>
          <target state="translated">システムで一意なプロセス リソースの識別子。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>The name of a computer on the network.</source>
          <target state="translated">ネットワーク上のコンピューターの名前。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component, given a process identifier and the name of a computer on the network.</source>
          <target state="translated">プロセス ID とネットワーク上のコンピューターの名前が指定された新しい <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントを返します。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component that is associated with a remote process resource identified by the <ph id="ph2">&lt;paramref name="processId" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="processId" /&gt;</ph> パラメーターで識別されるリモート プロセス リソースに関連付けられた <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネント。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>Use this method to create a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component and associate it with a process resource on a remote computer on the network.</source>
          <target state="translated">このメソッドを使用して、新たに作成する<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントと、ネットワーク上のリモート コンピューター上のプロセス リソースに関連付けます。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>The process resource must already exist on the specified computer, because <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%28System.Int32%2CSystem.String%29&gt;</ph> does not create a system resource, but rather associates a resource with an application-generated <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> component.</source>
          <target state="translated">プロセス リソースが既に存在して、指定したコンピューターであるため<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%28System.Int32%2CSystem.String%29&gt;</ph>システムのリソースは作成されませんが、アプリケーションによって生成ではなく関連付けますリソース<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントです。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>A process <ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph> can be retrieved only for a process that is currently running on the computer.</source>
          <target state="translated">プロセス<ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>コンピューターで現在実行されているプロセスにのみ取得できます。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>After the process terminates, <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%28System.Int32%2CSystem.String%29&gt;</ph> throws an exception if you pass it an expired identifier.</source>
          <target state="translated">プロセスの終了後<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%28System.Int32%2CSystem.String%29&gt;</ph>有効期限が切れた識別子を渡すと、例外をスローします。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>On any particular computer, the identifier of a process is unique.</source>
          <target state="translated">任意の特定のコンピューター上のプロセス id は一意です。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%28System.Int32%2CSystem.String%29&gt;</ph> returns one process at most.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%28System.Int32%2CSystem.String%29&gt;</ph> 最大で 1 つのプロセスを返します。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>If you want to get all the processes running a particular application, use <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%28System.String%29&gt;</ph>.</source>
          <target state="translated">使用して、特定のアプリケーションを実行しているすべてのプロセスを取得する場合<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%28System.String%29&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>If multiple processes exist on the computer running the specified application, <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%28System.String%29&gt;</ph> returns an array containing all the associated processes.</source>
          <target state="translated">指定されたアプリケーションを実行しているコンピューターに複数のプロセスが存在する場合<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%28System.String%29&gt;</ph>に関連付けられたすべてのプロセスを含む配列を返します。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>You can query each of these processes in turn for its identifier.</source>
          <target state="translated">これらの各プロセスの識別子の順番を照会できます。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>The process identifier can be viewed in the <ph id="ph1">`Processes`</ph> panel of the Windows Task Manager.</source>
          <target state="translated">プロセス id で表示できます、 <ph id="ph1">`Processes`</ph> Windows タスク マネージャーのパネルです。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>The <ph id="ph1">`PID`</ph> column displays the process identifier that is assigned to a process.</source>
          <target state="translated"><ph id="ph1">`PID`</ph>列には、プロセスに割り当てられているプロセス id が表示されます。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>If you do not specify a <ph id="ph1">`machineName`</ph>, the local computer is used.</source>
          <target state="translated">指定しない場合、 <ph id="ph1">`machineName`</ph>、ローカル コンピューターが使用されます。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>Alternatively, you can specify the local computer by setting <ph id="ph1">`machineName`</ph> to the value "." or to an empty string ("").</source>
          <target state="translated">設定しているローカル コンピューターを指定する代わりに、<ph id="ph1">`machineName`</ph>値に"です。"または空の文字列 ("") です。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>The following example retrieves information of the current process, processes running on the local computer, all instances of Notepad running on the local computer, and a specific process on the local computer.</source>
          <target state="translated">次の例では、ローカル コンピューター、ローカル コンピューターと、ローカル コンピューター上の特定のプロセスで実行してメモ帳のすべてのインスタンスの実行中のプロセス、現在のプロセスの情報を取得します。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>It then retrieves information for the same processes on a remote computer.</source>
          <target state="translated">リモート コンピューターで同じプロセスの情報を取得します。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>The process specified by the <ph id="ph1">&lt;paramref name="processId" /&gt;</ph> parameter is not running.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="processId" /&gt;</ph> パラメーターで指定されたプロセスは実行されていません。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>The identifier might be expired.</source>
          <target state="translated">識別子の有効期限が切れている可能性があります。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> parameter syntax is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> パラメーターの構文が正しくありません。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>The name might have length zero (0).</source>
          <target state="translated">名前の長さがゼロ (0) の可能性があります。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> パラメーターが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>The process was not started by this object.</source>
          <target state="translated">このオブジェクトによってプロセスは開始されませんでした。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Process">
          <source>Creates an array of new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> components and associates them with existing process resources.</source>
          <target state="translated">新しい <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントの配列を作成し、既存のプロセス リソースに関連付けます。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcesses">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component for each process resource on the local computer.</source>
          <target state="translated">ローカル コンピューター上の各プロセス リソースごとに新しい <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントを作成します。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcesses">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> that represents all the process resources running on the local computer.</source>
          <target state="translated">ローカル コンピューター上で実行されているすべてのプロセス リソースを表す <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 型の配列。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses">
          <source>Use this method to create an array of new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> components and associate them with all the process resources on the local computer.</source>
          <target state="translated">新規の配列を作成するには、このメソッドを使用して<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントし、ローカル コンピューター上のすべてのプロセス リソースに関連付けます。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses">
          <source>The process resources must already exist on the local computer, because <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph> does not create system resources but rather associates resources with application-generated <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> components.</source>
          <target state="translated">プロセス リソースが既に存在して、ローカル コンピューターであるため<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph>システム リソースは作成されませんが、アプリケーションによって生成されたして<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントです。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses">
          <source>Because the operating system itself is running background processes, this array is never empty.</source>
          <target state="translated">オペレーティング システム自体には、バック グラウンド プロセスが実行されて、この配列は空ではありません。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses">
          <source>If you do not want to retrieve all the processes running on the computer, you can restrict their number by using the <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> method.</source>
          <target state="translated">使用してその数を制限するには、コンピューターで実行中のプロセスをすべて取得しないようにする場合、<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph> creates a <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> component that is associated with the process identified on the system by the process identifier that you pass to the method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph> 作成、<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>メソッドに渡すプロセス識別子によって、システムで識別されるプロセスに関連付けられているコンポーネント。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> creates an array of <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> components whose associated process resources share the executable file you pass to the method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> 配列を作成<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>関連付けられているプロセス リソースを含む実行可能ファイルの共有コンポーネントがメソッドに渡します。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses">
          <source>Multiple Windows services can be loaded within the same instance of the Service Host process (svchost.exe).</source>
          <target state="translated">サービス ホスト プロセス (svchost.exe) の同じインスタンス内で複数の Windows サービスを読み込むことができます。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses">
          <source>GetProcesses does not identify those individual services; for that, see <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetServices%2A&gt;</ph>.</source>
          <target state="translated">GetProcesses が個々 のサービスです。 これらを識別できません。そのため、次を参照してください。<ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetServices%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses">
          <source>The following example retrieves information of the current process, processes running on the local computer, all instances of Notepad running on the local computer, and a specific process on the local computer.</source>
          <target state="translated">次の例では、ローカル コンピューター、ローカル コンピューターと、ローカル コンピューター上の特定のプロセスで実行してメモ帳のすべてのインスタンスの実行中のプロセス、現在のプロセスの情報を取得します。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses">
          <source>It then retrieves information for the same processes on a remote computer.</source>
          <target state="translated">リモート コンピューターで同じプロセスの情報を取得します。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>The computer from which to read the list of processes.</source>
          <target state="translated">プロセスの一覧を読み取る対象のコンピューター。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component for each process resource on the specified computer.</source>
          <target state="translated">指定したコンピューター上の各プロセス リソースごとに新しい <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントを作成します。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> that represents all the process resources running on the specified computer.</source>
          <target state="translated">指定したコンピューター上で実行されているすべてのプロセス リソースを表す <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 型の配列。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>Use this method to create an array of new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> components and associate them with all the process resources on the specified (usually remote) computer.</source>
          <target state="translated">新規の配列を作成するには、このメソッドを使用して<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントし (通常はリモート) 指定したコンピューター上のすべてのプロセス リソースに関連付けます。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>The process resources must already exist on the local computer, because <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph> does not create system resources but rather associates resources with application-generated <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> components.</source>
          <target state="translated">プロセス リソースが既に存在して、ローカル コンピューターであるため<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph>システム リソースは作成されませんが、アプリケーションによって生成されたして<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントです。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>Because the operating system itself is running background processes, this array is never empty.</source>
          <target state="translated">オペレーティング システム自体には、バック グラウンド プロセスが実行されて、この配列は空ではありません。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>If you do not want to retrieve all the processes running on the computer, you can restrict their number by using the <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> method.</source>
          <target state="translated">使用してその数を制限するには、コンピューターで実行中のプロセスをすべて取得しないようにする場合、<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph> creates a <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> component that is associated with the process identified on the system by the process identifier that you pass to the method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph> 作成、<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>メソッドに渡すプロセス識別子によって、システムで識別されるプロセスに関連付けられているコンポーネント。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> creates an array of <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> components whose associated process resources share the executable file you pass to the method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> 配列を作成<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>関連付けられているプロセス リソースを含む実行可能ファイルの共有コンポーネントがメソッドに渡します。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph> method is generally used to retrieve the list of process resources running on a remote computer on the network, but you can specify the local computer by passing ".".</source>
          <target state="translated">このオーバー ロード、<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph>メソッドが、ネットワーク上のリモート コンピューターで実行されているプロセス リソースの一覧の取得に使用される一般を渡すことによって、ローカル コンピューターを指定することが"です。"です。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>Multiple Windows services can be loaded within the same instance of the Service Host process (svchost.exe).</source>
          <target state="translated">サービス ホスト プロセス (svchost.exe) の同じインスタンス内で複数の Windows サービスを読み込むことができます。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>GetProcesses does not identify those individual services; for that, see <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetServices%2A&gt;</ph>.</source>
          <target state="translated">GetProcesses が個々 のサービスです。 これらを識別できません。そのため、次を参照してください。<ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetServices%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>The following example retrieves information of the current process, processes running on the local computer, all instances of Notepad running on the local computer, and a specific process on the local computer.</source>
          <target state="translated">次の例では、ローカル コンピューター、ローカル コンピューターと、ローカル コンピューター上の特定のプロセスで実行してメモ帳のすべてのインスタンスの実行中のプロセス、現在のプロセスの情報を取得します。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>It then retrieves information for the same processes on a remote computer.</source>
          <target state="translated">リモート コンピューターで同じプロセスの情報を取得します。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> parameter syntax is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> パラメーターの構文が正しくありません。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>It might have length zero (0).</source>
          <target state="translated">長さがゼロ (0) の可能性があります。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> パラメーターが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>The operating system platform does not support this operation on remote computers.</source>
          <target state="translated">リモート コンピューターに対してこの操作を実行することは、オペレーティング システム プラットフォームでサポートされていません。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>There are problems accessing the performance counter API's used to get process information.</source>
          <target state="translated">プロセス情報を取得するために使用するパフォーマンス カウンター API へのアクセスに問題があります。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>This exception is specific to Windows NT, Windows 2000, and Windows XP.</source>
          <target state="translated">この例外は、Windows NT、Windows 2000、および Windows XP に固有のものです。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>A problem occurred accessing an underlying system API.</source>
          <target state="translated">基になるシステム API にアクセスしようとして、問題が発生しました。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcesses(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Process">
          <source>Creates an array of new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> components and associates them with the existing process resources that all share the specified process name.</source>
          <target state="translated">新しい <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントの配列を作成し、指定したプロセス名を共有する既存のプロセス リソースに関連付けます。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>The friendly name of the process.</source>
          <target state="translated">プロセスのフレンドリ名。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>Creates an array of new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> components and associates them with all the process resources on the local computer that share the specified process name.</source>
          <target state="translated">新しい <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントの配列を作成し、指定したプロセス名を共有するローカル コンピューター上のすべてのプロセス リソースに関連付けます。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> that represents the process resources running the specified application or file.</source>
          <target state="translated">指定したアプリケーションまたはファイルを実行しているプロセス リソースを表す <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 型の配列。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>Use this method to create an array of new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> components and associate them with all the process resources that are running the same executable file on the local computer.</source>
          <target state="translated">新規の配列を作成するには、このメソッドを使用して<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントし、ローカル コンピューターで、同じ実行可能ファイルを実行しているすべてのプロセス リソースに関連付けます。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>The process resources must already exist on the computer, because <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> does not create system resources but rather associates them with application-generated <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> components.</source>
          <target state="translated">プロセス リソースが既に存在して、コンピューターにあるため<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph>システム リソースは作成されませんが、代わりに関連付けますアプリケーションによって生成された<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントです。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>A <ph id="ph1">`processName`</ph> can be specified for an executable file that is not currently running on the local computer, so the array the method returns can be empty.</source>
          <target state="translated">A<ph id="ph1">`processName`</ph>が現在実行されていない、ローカル コンピューター上、メソッドが返す配列を空にすることができますので、実行可能ファイルを指定することができます。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>The process name is a friendly name for the process, such as Outlook, that does not include the .exe extension or the path.</source>
          <target state="translated">このプロセスの名前は、Outlook の場合、拡張子 .exe またはパスが含まれていないなど、プロセスのフレンドリ名です。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> is helpful for getting and manipulating all the processes that are associated with the same executable file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> 取得して、同じ実行可能ファイルに関連付けられているすべてのプロセスを操作するのに便利です。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>For example, you can pass an executable file name as the <ph id="ph1">`processName`</ph> parameter, in order to shut down all the running instances of that executable file.</source>
          <target state="translated">たとえば、として、実行可能ファイル名を渡すことができます、<ph id="ph1">`processName`</ph>その実行可能ファイルの実行中のすべてのインスタンスをシャット ダウンするために、パラメーター。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>Although a process <ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph> is unique to a single process resource on the system, multiple processes on the local computer can be running the application specified by the <ph id="ph2">`processName`</ph> parameter.</source>
          <target state="translated">プロセス<ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>は、システム上の 1 つのプロセス リソースに一意で、ローカル コンピューター上の複数のプロセス実行できるで指定されたアプリケーション、<ph id="ph2">`processName`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>Therefore, <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph> returns one process at most, but <ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> returns an array containing all the associated processes.</source>
          <target state="translated">したがって、<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph>多くても 1 つのプロセスを返しますが、<ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph>に関連付けられたすべてのプロセスを含む配列を返します。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>If you need to manipulate the process using standard API calls, you can query each of these processes in turn for its identifier.</source>
          <target state="translated">標準 API 呼び出しを使用して、プロセスを操作する必要がある場合は、これらの各プロセスの識別子の順番を照会できます。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>You cannot access process resources through the process name alone but, once you have retrieved an array of <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> components that have been associated with the process resources, you can start, terminate, and otherwise manipulate the system resources.</source>
          <target state="translated">プロセス リソースにアクセスすることはできません、プロセスの名前を使ってだけでは、配列を取得したら<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントが関連付けられているプロセス リソースにすることができますを開始、終了、およびそれ以外の場合、システム リソースを操作します。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>The following example retrieves information of the current process, processes running on the local computer, all instances of Notepad running on the local computer, and a specific process on the local computer.</source>
          <target state="translated">次の例では、ローカル コンピューター、ローカル コンピューターと、ローカル コンピューター上の特定のプロセスで実行してメモ帳のすべてのインスタンスの実行中のプロセス、現在のプロセスの情報を取得します。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>It then retrieves information for the same processes on a remote computer.</source>
          <target state="translated">リモート コンピューターで同じプロセスの情報を取得します。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>There are problems accessing the performance counter API's used to get process information.</source>
          <target state="translated">プロセス情報を取得するために使用するパフォーマンス カウンター API へのアクセスに問題があります。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>This exception is specific to Windows NT, Windows 2000, and Windows XP.</source>
          <target state="translated">この例外は、Windows NT、Windows 2000、および Windows XP に固有のものです。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>The friendly name of the process.</source>
          <target state="translated">プロセスのフレンドリ名。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>The name of a computer on the network.</source>
          <target state="translated">ネットワーク上のコンピューターの名前。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>Creates an array of new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> components and associates them with all the process resources on a remote computer that share the specified process name.</source>
          <target state="translated">新しい <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントの配列を作成し、指定したプロセス名を共有するリモート コンピューター上のすべてのプロセス リソースに関連付けます。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> that represents the process resources running the specified application or file.</source>
          <target state="translated">指定したアプリケーションまたはファイルを実行しているプロセス リソースを表す <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 型の配列。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>Use this method to create an array of new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> components and associate them with all the process resources that are running the same executable file on the specified computer.</source>
          <target state="translated">新規の配列を作成するには、このメソッドを使用して<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントし、指定されたコンピューターで、同じ実行可能ファイルを実行しているすべてのプロセス リソースに関連付けます。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>The process resources must already exist on the computer, because <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> does not create system resources but rather associates them with application-generated <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> components.</source>
          <target state="translated">プロセス リソースが既に存在して、コンピューターにあるため<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph>システム リソースは作成されませんが、代わりに関連付けますアプリケーションによって生成された<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントです。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>A <ph id="ph1">`processName`</ph> can be specified for an executable file that is not currently running on the local computer, so the array the method returns can be empty.</source>
          <target state="translated">A<ph id="ph1">`processName`</ph>が現在実行されていない、ローカル コンピューター上、メソッドが返す配列を空にすることができますので、実行可能ファイルを指定することができます。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>The process name is a friendly name for the process, such as Outlook, that does not include the .exe extension or the path.</source>
          <target state="translated">このプロセスの名前は、Outlook の場合、拡張子 .exe またはパスが含まれていないなど、プロセスのフレンドリ名です。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> is helpful for getting and manipulating all the processes that are associated with the same executable file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> 取得して、同じ実行可能ファイルに関連付けられているすべてのプロセスを操作するのに便利です。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>For example, you can pass an executable file name as the <ph id="ph1">`processName`</ph> parameter, in order to shut down all the running instances of that executable file.</source>
          <target state="translated">たとえば、として、実行可能ファイル名を渡すことができます、<ph id="ph1">`processName`</ph>その実行可能ファイルの実行中のすべてのインスタンスをシャット ダウンするために、パラメーター。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>Although a process <ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph> is unique to a single process resource on the system, multiple processes on the local computer can be running the application specified by the <ph id="ph2">`processName`</ph> parameter.</source>
          <target state="translated">プロセス<ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>は、システム上の 1 つのプロセス リソースに一意で、ローカル コンピューター上の複数のプロセス実行できるで指定されたアプリケーション、<ph id="ph2">`processName`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>Therefore, <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph> returns one process at most, but <ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph> returns an array containing all the associated processes.</source>
          <target state="translated">したがって、<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph>多くても 1 つのプロセスを返しますが、<ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph>に関連付けられたすべてのプロセスを含む配列を返します。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>If you need to manipulate the process using standard API calls, you can query each of these processes in turn for its identifier.</source>
          <target state="translated">標準 API 呼び出しを使用して、プロセスを操作する必要がある場合は、これらの各プロセスの識別子の順番を照会できます。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>You cannot access process resources through the process name alone but, once you have retrieved an array of <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> components that have been associated with the process resources, you can start, terminate, and otherwise manipulate the system resources.</source>
          <target state="translated">プロセス リソースにアクセスすることはできません、プロセスの名前を使ってだけでは、配列を取得したら<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントが関連付けられているプロセス リソースにすることができますを開始、終了、およびそれ以外の場合、システム リソースを操作します。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>You can use this overload to get processes on the local computer as well as on a remote computer.</source>
          <target state="translated">このオーバー ロードを使用すると、ローカル コンピューター上だけでなく、リモート コンピューター上のプロセスを取得します。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>Use "." to specify the local computer.</source>
          <target state="translated">使用して"です。"ローカル コンピューターを指定します。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>Another overload exists that uses the local computer by default.</source>
          <target state="translated">既定では、ローカル コンピューターを使用して別のオーバー ロードが存在します。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>You can access processes on remote computers only to view information, such as statistics, about the processes.</source>
          <target state="translated">プロセスに関する統計情報などの情報を表示するのみのリモート コンピューター上のプロセスにアクセスできます。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>You cannot close, terminate (using <ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>), or start processes on remote computers.</source>
          <target state="translated">閉じて、終了することはできません (を使用して<ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>)、またはリモート コンピューター上のプロセスを開始します。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>The following example retrieves information of the current process, processes running on the local computer, all instances of Notepad running on the local computer, and a specific process on the local computer.</source>
          <target state="translated">次の例では、ローカル コンピューター、ローカル コンピューターと、ローカル コンピューター上の特定のプロセスで実行してメモ帳のすべてのインスタンスの実行中のプロセス、現在のプロセスの情報を取得します。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>It then retrieves information for the same processes on a remote computer.</source>
          <target state="translated">リモート コンピューターで同じプロセスの情報を取得します。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> parameter syntax is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> パラメーターの構文が正しくありません。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>It might have length zero (0).</source>
          <target state="translated">長さがゼロ (0) の可能性があります。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> パラメーターが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>The operating system platform does not support this operation on remote computers.</source>
          <target state="translated">リモート コンピューターに対してこの操作を実行することは、オペレーティング システム プラットフォームでサポートされていません。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>There are problems accessing the performance counter API's used to get process information.</source>
          <target state="translated">プロセス情報を取得するために使用するパフォーマンス カウンター API へのアクセスに問題があります。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>This exception is specific to Windows NT, Windows 2000, and Windows XP.</source>
          <target state="translated">この例外は、Windows NT、Windows 2000、および Windows XP に固有のものです。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>A problem occurred accessing an underlying system API.</source>
          <target state="translated">基になるシステム API にアクセスしようとして、問題が発生しました。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>to call unmanaged code.</source>
          <target state="translated">アンマネージ コードを呼び出します。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Handle">
          <source>Gets the native handle of the associated process.</source>
          <target state="translated">関連付けられたプロセスのネイティブ ハンドルを取得します。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Handle">
          <source>The handle that the operating system assigned to the associated process when the process was started.</source>
          <target state="translated">関連付けられたプロセスを起動したときに、オペレーティング システムがプロセスに割り当てたハンドル。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Handle">
          <source>The system uses this handle to keep track of process attributes.</source>
          <target state="translated">システムはこのハンドルを使用して、プロセス属性の追跡を続けます。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Handle">
          <source>An application can obtain a handle to a process that can be used as a parameter to many process-information and control functions.</source>
          <target state="translated">アプリケーションでは、多くのプロセス情報および制御関数のパラメーターとして使用できるプロセスへのハンドルを取得できます。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Handle">
          <source>You can use this handle to initialize a <ph id="ph1">&lt;xref:System.Threading.WaitHandle&gt;</ph> or to call native methods with platform invoke.</source>
          <target state="translated">このハンドルを使用するには初期化するために、<ph id="ph1">&lt;xref:System.Threading.WaitHandle&gt;</ph>またはプラットフォームでネイティブ メソッドの呼び出しを呼び出します。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Handle">
          <source>This process handle is private to an application--in other words, process handles cannot be shared.</source>
          <target state="translated">このプロセスのハンドルは、アプリケーションごとにつまり、ハンドルを共有することはできませんプロセス プライベートです。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Handle">
          <source>A process also has a process <ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph> which, unlike the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>, is unique and, therefore, valid throughout the system.</source>
          <target state="translated">プロセスにも、プロセス<ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>とは異なり、<ph id="ph2">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>が一意ではため、システム全体で有効です。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Handle">
          <source>Only processes started through a call to <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> set the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph> property of the corresponding <ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph> instances.</source>
          <target state="translated">呼び出すことによって開始されたプロセスのみ<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>設定、<ph id="ph2">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>の対応するプロパティ<ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Handle">
          <source>The process has not been started or has exited.</source>
          <target state="translated">プロセスが開始されていないか、終了しました。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Handle">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Handle" /&gt;</ph> property cannot be read because there is no process associated with this <ph id="ph2">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> instance.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Handle" /&gt;</ph> インスタンスに関連付けられたプロセスがないため、<ph id="ph2">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> プロパティを読み取ることができません。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Handle">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Handle">
          <source>The <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> instance has been attached to a running process but you do not have the necessary permissions to get a handle with full access rights.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> インスタンスが実行中のプロセスに割り当てられましたが、フル アクセスの権限を持つハンドルを取得するために必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Handle">
          <source>You are trying to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Handle" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">リモート コンピューターで実行中のプロセスの <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Handle" /&gt;</ph> プロパティにアクセスしようとしています。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Handle">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">このプロパティはローカル コンピューターで実行中のプロセスに対してのみ使用可能です。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Handle">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Handle">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.HandleCount">
          <source>Gets the number of handles opened by the process.</source>
          <target state="translated">プロセスが開いたハンドルの数を取得します。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HandleCount">
          <source>The number of operating system handles the process has opened.</source>
          <target state="translated">プロセスが開いたオペレーティング システム ハンドルの数。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HandleCount">
          <source>Handles provide a way for a process to refer to objects.</source>
          <target state="translated">ハンドルは、プロセス オブジェクトを参照するための手段を提供します。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HandleCount">
          <source>A process can obtain handles to files, resources, message queues, and many other operating system objects.</source>
          <target state="translated">プロセスでは、ファイル、リソース、メッセージ キュー、およびその他の多くのオペレーティング システムのオブジェクトへのハンドルを取得できます。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HandleCount">
          <source>The operating system reclaims the memory associated with the process only when the handle count is zero.</source>
          <target state="translated">オペレーティング システム ハンドルの数が 0 である場合にのみ、プロセスに関連付けられているメモリを解放します。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.HandleCount">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set the <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> property to <ph id="ph2">&lt;see langword="false" /&gt;</ph> to access this property on Windows 98 and Windows Me.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) です。Windows 98 や Windows Me でこのプロパティにアクセスするには <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> プロパティを <ph id="ph2">&lt;see langword="false" /&gt;</ph> に設定します。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HandleCount">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HandleCount">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.HasExited">
          <source>Gets a value indicating whether the associated process has been terminated.</source>
          <target state="translated">関連付けられているプロセスが終了したかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the operating system process referenced by the <ph id="ph2">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component has terminated; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントが参照するオペレーティング システム プロセスが終了している場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>A value of <ph id="ph1">`true`</ph> for <ph id="ph2">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> indicates that the associated process has terminated, either normally or abnormally.</source>
          <target state="translated">値<ph id="ph1">`true`</ph>の<ph id="ph2">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>関連付けられたプロセスが終了した、通常または異常のいずれかを示します。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>You can request or force the associated process to exit by calling <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>.</source>
          <target state="translated">リクエストするかを呼び出して終了に関連付けられているプロセスを強制的に<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>If a handle is open to the process, the operating system releases the process memory when the process has exited, but retains administrative information about the process, such as the handle, exit code, and exit time.</source>
          <target state="translated">ハンドルが開かれているプロセスの場合は、オペレーティング システムは、プロセスが終了しましたが、ハンドル、終了コード、および終了時刻などのプロセスに関する管理情報を保持する場合、プロセス メモリを解放します。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>To get this information, you can use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph> properties.</source>
          <target state="translated">この情報を取得するには、使用することができます、<ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>These properties are populated automatically for processes that were started by this component.</source>
          <target state="translated">これらのプロパティは、このコンポーネントによって起動されたプロセスを自動的に設定されます。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>The administrative information is released when all the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> components that are associated with the system process are destroyed and hold no more handles to the exited process.</source>
          <target state="translated">管理情報がリリースされたときにすべて、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>システム プロセスに関連付けられているコンポーネントは破棄され、これ以上のハンドルを終了したプロセスに保持します。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>A process can terminate independently of your code.</source>
          <target state="translated">コードとは無関係に、プロセスを終了できます。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>If you started the process using this component, the system updates the value of <ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> automatically, even if the associated process exits independently.</source>
          <target state="translated">このコンポーネントを使用して、プロセスを開始した場合の値が更新されます<ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>、自動的に関連付けられたプロセスが個別に終了した場合でもです。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>When standard output has been redirected to asynchronous event handlers, it is possible that output processing will not have completed when this property returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">非同期のイベント ハンドラーを標準出力がリダイレクトされたときにこのプロパティが返されるときでは出力の処理が完了していないことは<ph id="ph1">`true`</ph>します。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>To ensure that asynchronous event handling has been completed, call the <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph> overload that takes no parameter before checking <ph id="ph2">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>.</source>
          <target state="translated">非同期イベント処理が完了したことを呼び出して、<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph>をチェックする前にパラメーターを受け取らないオーバー ロード<ph id="ph2">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">次の例では、メモ帳のインスタンスを開始します。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>It then retrieves the physical memory usage of the associated process at 2 second intervals for a maximum of 10 seconds.</source>
          <target state="translated">2 秒間隔、最大で 10 秒間の関連付けられたプロセスの物理メモリ使用量を取得します。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>The example detects whether the process exits before 10 seconds have elapsed.</source>
          <target state="translated">この例では、10 秒が経過する前に、プロセスが終了するかどうかを検出します。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>The example closes the process if it is still running after 10 seconds.</source>
          <target state="translated">例は、10 秒後に実行されている場合に、プロセスを閉じます。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.HasExited">
          <source>There is no process associated with the object.</source>
          <target state="translated">オブジェクトに関連付けられているプロセスはありません。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.HasExited">
          <source>The exit code for the process could not be retrieved.</source>
          <target state="translated">プロセスの終了コードを取得できませんでした。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.HasExited">
          <source>You are trying to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">リモート コンピューターで実行中のプロセスの <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> プロパティにアクセスしようとしています。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.HasExited">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">このプロパティはローカル コンピューターで実行中のプロセスに対してのみ使用可能です。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.HasExited">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Id">
          <source>Gets the unique identifier for the associated process.</source>
          <target state="translated">関連付けられたプロセスの一意の識別子を取得します。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>The system-generated unique identifier of the process that is referenced by this <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> instance.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> インスタンスが参照する、システムが生成したプロセスの一意の識別子。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>The process <ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph> is not valid if the associated process is not running.</source>
          <target state="translated">プロセス<ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>が関連付けられたプロセスが実行されていない場合は無効です。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>Therefore, you should ensure that the process is running before attempting to retrieve the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph> property.</source>
          <target state="translated">したがって、行う必要がありますを取得する前に、プロセスが実行されていること、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>Until the process terminates, the process identifier uniquely identifies the process throughout the system.</source>
          <target state="translated">プロセスが終了するまでプロセス識別子は、システム全体でプロセスを一意に識別します。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>You can connect a process that is running on a local or remote computer to a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance by passing the process identifier to the <ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph> method.</source>
          <target state="translated">新しいローカルまたはリモート コンピューターで実行されているプロセスを接続することができます<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンスにプロセス id を渡すことによって、<ph id="ph2">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph> is a <ph id="ph2">`static`</ph> method that creates a new component and sets the <ph id="ph3">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph> property for the new <ph id="ph4">&lt;xref:System.Diagnostics.Process&gt;</ph> instance automatically.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessById%2A&gt;</ph> <ph id="ph2">`static`</ph>新しいコンポーネントを作成するメソッドを設定し、 <ph id="ph3">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph> 、新しいプロパティ<ph id="ph4">&lt;xref:System.Diagnostics.Process&gt;</ph>自動的にインスタンスします。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>Process identifiers can be reused by the system.</source>
          <target state="translated">プロセス id は、システムによって再利用できます。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph> property value is unique only while the associated process is running.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>プロパティの値が一意では、関連付けられたプロセスが実行されている間だけです。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>After the process has terminated, the system can reuse the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph> property value for an unrelated process.</source>
          <target state="translated">システムが再利用できるプロセスが終了した後、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>関連のないプロセスのプロパティの値。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>Because the identifier is unique on the system, you can pass it to other threads as an alternative to passing a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">識別子は、システム上で一意であるために渡すことができる他のスレッドを受け渡しする代わりに、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>This action can save system resources yet guarantee that the process is correctly identified.</source>
          <target state="translated">この操作は、システム リソースを節約まだ、プロセスが正しく識別されることを保証します。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>The following example demonstrates how to obtain the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph> for all running instances of an application.</source>
          <target state="translated">次の例では、取得する方法、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>すべてのアプリケーションのインスタンスを実行します。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>The code creates a new instance of Notepad, lists all the instances of Notepad, and then allows the user to enter the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph> number to remove a specific instance.</source>
          <target state="translated">コードは、メモ帳の新しいインスタンスを作成、メモ帳のすべてのインスタンスが一覧表示し、ユーザーを入力する、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>特定のインスタンスを削除する数。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Id">
          <source>The process's <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> property has not been set.</source>
          <target state="translated">プロセスの <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> プロパティが設定されていません。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Id">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Id">
          <source>There is no process associated with this <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> オブジェクトに関連付けられているプロセスはありません。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Id">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set the <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> property to <ph id="ph2">&lt;see langword="false" /&gt;</ph> to access this property on Windows 98 and Windows Me.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) です。Windows 98 や Windows Me でこのプロパティにアクセスするには <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> プロパティを <ph id="ph2">&lt;see langword="false" /&gt;</ph> に設定します。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Id">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Kill">
          <source>Immediately stops the associated process.</source>
          <target state="translated">関連付けられたプロセスを即時中断します。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> forces a termination of the process, while <ph id="ph2">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> only requests a termination.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> 強制的に、プロセスの終了中に<ph id="ph2">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>のみ、終了を要求します。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>When a process with a graphical interface is executing, its message loop is in a wait state.</source>
          <target state="translated">グラフィカル インターフェイスを持つプロセスを実行するときに、メッセージ ループは、待機状態です。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>The message loop executes every time a Windows message is sent to the process by the operating system.</source>
          <target state="translated">Windows メッセージが、オペレーティング システムによって、プロセスに送信されるたびにメッセージ ループを実行します。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>Calling <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> sends a request to close to the main window, which, in a well-formed application, closes child windows and revokes all running message loops for the application.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>メイン ウィンドウに、アプリケーションでは整形式、子ウィンドウを閉じ、アプリケーションの実行中のすべてのメッセージ ループでは失効の近くに要求を送信します。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>The request to exit the process by calling <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> does not force the application to quit.</source>
          <target state="translated">呼び出すことによって、プロセスを終了する要求<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>アプリケーションの終了を強制されません。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>The application can ask for user verification before quitting, or it can refuse to quit.</source>
          <target state="translated">アプリケーションが、終了する前にユーザーの確認を求めることや、終了を拒否できます。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>To force the application to quit, use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> method.</source>
          <target state="translated">アプリケーションを終了するを使用して、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>The behavior of <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> is identical to that of a user closing an application's main window using the system menu.</source>
          <target state="translated">動作<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>システム メニューを使用して、アプリケーションのメイン ウィンドウを閉じると、ユーザーの場合と同じです。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>Therefore, the request to exit the process by closing the main window does not force the application to quit immediately.</source>
          <target state="translated">そのため、メイン ウィンドウを閉じることでプロセスを終了する要求はすぐに終了するアプリケーションを強制しません。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> method executes asynchronously.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>メソッドが非同期的に実行します。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>After calling the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> method, call the <ph id="ph2">&lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt;</ph> method to wait for the process to exit, or check the <ph id="ph3">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> property to determine if the process has exited.</source>
          <target state="translated">呼び出した後、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>メソッドを呼び出し、<ph id="ph2">&lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt;</ph>メソッドを終了しても、または確認するを待ち、<ph id="ph3">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>プロセスが終了したかどうかを決定するプロパティです。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>Data edited by the process or resources allocated to the process can be lost if you call <ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>.</source>
          <target state="translated">プロセスによって編集されたデータまたはプロセスに割り当てられたリソースが失われる場合を呼び出す<ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> causes an abnormal process termination and should be used only when necessary.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> 異常なプロセス終了し、必要な場合にのみ使用する必要があります。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> enables an orderly termination of the process and closes all windows, so it is preferable for applications with an interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> プロセスの適切な順序の終了を有効にし、インターフェイスを持つアプリケーションにも適していますが、すべてのウィンドウを閉じます。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>If <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> fails, you can use <ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> to terminate the process.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>使用することが失敗した場合、<ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>プロセスを終了します。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> is the only way to terminate processes that do not have graphical interfaces.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> グラフィカル インターフェイスがないプロセスを終了する唯一の方法です。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>You can call <ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> only for processes that are running on the local computer.</source>
          <target state="translated">呼び出すことができます<ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>ローカル コンピューターで実行されているプロセスに対してのみです。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>You cannot cause processes on remote computers to exit.</source>
          <target state="translated">終了するリモート コンピューター上のプロセスが発生することはできません。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>You can only view information for processes running on remote computers.</source>
          <target state="translated">リモート コンピューターで実行されているプロセスの情報のみ表示できます。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>If the call to the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> method is made while the process is currently terminating, a <ph id="ph2">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph> is thrown for Access Denied.</source>
          <target state="translated">場合への呼び出し、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>メソッドが、プロセスを終了して現在中に行われた、<ph id="ph2">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph>アクセス拒否がスローされます。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Kill">
          <source>The associated process could not be terminated.</source>
          <target state="translated">関連付けられたプロセスを終了できませんでした。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Kill">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Kill">
          <source>The process is terminating.</source>
          <target state="translated">プロセスを終了しています。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Kill">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Kill">
          <source>The associated process is a Win16 executable.</source>
          <target state="translated">関連付けられたプロセスは、Win16 実行可能ファイルです。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Kill">
          <source>You are attempting to call <ph id="ph1">&lt;see cref="M:System.Diagnostics.Process.Kill" /&gt;</ph> for a process that is running on a remote computer.</source>
          <target state="translated">リモート コンピューターで実行されているプロセスの <ph id="ph1">&lt;see cref="M:System.Diagnostics.Process.Kill" /&gt;</ph> を呼び出そうとしています。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Kill">
          <source>The method is available only for processes running on the local computer.</source>
          <target state="translated">このメソッドはローカル コンピューターで実行中のプロセスに対してのみ使用可能です。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Kill">
          <source>The process has already exited.</source>
          <target state="translated">プロセスは既に終了しています。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Kill">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Kill">
          <source>There is no process associated with this <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> オブジェクトに関連付けられているプロセスはありません。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Kill">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.LeaveDebugMode">
          <source>Takes a <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component out of the state that lets it interact with operating system processes that run in a special mode.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントを、特殊なモードで実行されているオペレーティング システム プロセスと対話する状態から解放します。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.LeaveDebugMode">
          <source>Some operating system processes run in a special mode.</source>
          <target state="translated">いくつかのオペレーティング システム プロセスは、特殊なモードで実行されます。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.LeaveDebugMode">
          <source>Attempting to read properties of or attach to these processes is not possible unless you have called <ph id="ph1">&lt;xref:System.Diagnostics.Process.EnterDebugMode%2A&gt;</ph> on the component.</source>
          <target state="translated">プロパティを読み取るか、これらのプロセスにアタッチしようとしています。 は、呼び出した<ph id="ph1">&lt;xref:System.Diagnostics.Process.EnterDebugMode%2A&gt;</ph>コンポーネントです。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.LeaveDebugMode">
          <source>Call <ph id="ph1">&lt;xref:System.Diagnostics.Process.LeaveDebugMode%2A&gt;</ph> when you no longer need access to these processes that run in special mode.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Diagnostics.Process.LeaveDebugMode%2A&gt;</ph>特殊なモードで実行されているこれらのプロセスへのアクセスが不要です。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.LeaveDebugMode">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.LeaveDebugMode">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MachineName">
          <source>Gets the name of the computer the associated process is running on.</source>
          <target state="translated">関連付けられたプロセスを実行しているコンピューターの名前を取得します。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MachineName">
          <source>The name of the computer that the associated process is running on.</source>
          <target state="translated">関連付けられたプロセスを実行しているコンピューターの名前。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MachineName">
          <source>You can view statistical data and process information for processes running on remote computers but you cannot call <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph> on remote computers.</source>
          <target state="translated">統計データを表示してがリモート コンピューターで実行されているプロセスのプロセス情報を呼び出すことはできません<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>、または<ph id="ph3">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>リモート コンピューターにします。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MachineName">
          <source>When the associated process is executing on the local machine, this property returns a period (".") for the machine name.</source>
          <target state="translated">ローカル コンピューターに関連付けられたプロセスの実行時にこのプロパティは、ピリオドを返します ("です。") マシン名をします。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MachineName">
          <source>You should use the <ph id="ph1">&lt;xref:System.Environment.MachineName%2A?displayProperty=nameWithType&gt;</ph> property to get the correct machine name.</source>
          <target state="translated">使用する必要があります、<ph id="ph1">&lt;xref:System.Environment.MachineName%2A?displayProperty=nameWithType&gt;</ph>正しいコンピューター名を取得するプロパティです。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MachineName">
          <source>To use the following example you must first start at least one instance of Notepad on a remote computer.</source>
          <target state="translated">使用するには、は、するには次の例は、リモート コンピューターでメモ帳の少なくとも 1 つのインスタンスを開始します。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MachineName">
          <source>The example requests the name of the remote computer on which Notepad is running, and then displays the respective <ph id="ph1">&lt;xref:System.Diagnostics.Process.ProcessName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.Process.MachineName%2A&gt;</ph> properties for each instance.</source>
          <target state="translated">例では、リモート コンピューターをメモ帳が実行されているし、表示、それぞれの名前が要求<ph id="ph1">&lt;xref:System.Diagnostics.Process.ProcessName%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Diagnostics.Process.Id%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Diagnostics.Process.MachineName%2A&gt;</ph>各インスタンスのプロパティです。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MachineName">
          <source>There is no process associated with this <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> オブジェクトに関連付けられているプロセスはありません。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MachineName">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MachineName">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainModule">
          <source>Gets the main module for the associated process.</source>
          <target state="translated">関連付けられたプロセスのメイン モジュールを取得します。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainModule">
          <source>The <ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessModule" /&gt;</ph> that was used to start the process.</source>
          <target state="translated">プロセスを開始する際に使用した <ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessModule" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainModule">
          <source>A process module represents a.dll or .exe file that is loaded into a particular process.</source>
          <target state="translated">プロセス モジュールでは、特定のプロセスに読み込まれる.dll .exe またはファイルを表します。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainModule">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.MainModule%2A&gt;</ph> property lets you view information about the executable used to start the process, including the module name, file name, and module memory details.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.MainModule%2A&gt;</ph>プロパティを使用して、モジュール名、ファイル名、およびモジュールのメモリの詳細をなど、プロセスを開始するために使用する実行可能ファイルに関する情報を表示できます。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainModule">
          <source>You are trying to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MainModule" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">リモート コンピューターで実行中のプロセスの <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MainModule" /&gt;</ph> プロパティにアクセスしようとしています。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainModule">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">このプロパティはローカル コンピューターで実行中のプロセスに対してのみ使用可能です。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainModule">
          <source>A 32-bit process is trying to access the modules of a 64-bit process.</source>
          <target state="translated">32 ビット プロセスが 64 ビット プロセスのモジュールにアクセスしようとしています。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainModule">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> to <ph id="ph2">&lt;see langword="false" /&gt;</ph> to access this property on Windows 98 and Windows Me.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) です。Windows 98 や Windows Me でこのプロパティにアクセスするには <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> を <ph id="ph2">&lt;see langword="false" /&gt;</ph> に設定します。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainModule">
          <source>The process <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> is not available.</source>
          <target state="translated">プロセス <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> は使用できません。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainModule">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainModule">
          <source>The process has exited.</source>
          <target state="translated">プロセスが終了しています。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainModule">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainModule">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>Gets the window handle of the main window of the associated process.</source>
          <target state="translated">関連付けられたプロセスのメイン ウィンドウで使用するウィンドウ ハンドルを取得します。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>The system-generated window handle of the main window of the associated process.</source>
          <target state="translated">関連付けられたプロセスのメイン ウィンドウで使用する、システムが生成したウィンドウ ハンドル。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>The main window is the window opened by the process that currently has the focus (the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.TopLevel%2A&gt;</ph> form).</source>
          <target state="translated">メイン ウィンドウが、フォーカスされているプロセスによって開かれたウィンドウ (、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.TopLevel%2A&gt;</ph>形式)。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>You must use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph> method to refresh the <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> object to get the current main window handle if it has changed.</source>
          <target state="translated">使用する必要があります、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph>を更新する方法、<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>が変更された場合は、現在のメイン ウィンドウ ハンドルを取得するオブジェクト。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>In general, because the window handle is cached, use <ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph> beforehand to guarantee that you’ll retrieve the current handle.</source>
          <target state="translated">一般に、ウィンドウ ハンドルがキャッシュされているために使用<ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph>現在のハンドルを取得することを保証するために事前です。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>You can get the <ph id="ph1">&lt;xref:System.Diagnostics.Process.MainWindowHandle%2A&gt;</ph> property only for processes that are running on the local computer.</source>
          <target state="translated">取得することができます、<ph id="ph1">&lt;xref:System.Diagnostics.Process.MainWindowHandle%2A&gt;</ph>プロパティは、ローカル コンピューターで実行されているプロセスに対してのみです。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.MainWindowHandle%2A&gt;</ph> property is a value that uniquely identifies the window that is associated with the process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.MainWindowHandle%2A&gt;</ph>プロパティは、プロセスに関連付けられているウィンドウを一意に識別する値。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>A process has a main window associated with it only if the process has a graphical interface.</source>
          <target state="translated">プロセスでは、プロセスにグラフィカル インターフェイスがある場合にのみに関連付けられているメイン ウィンドウがあります。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>If the associated process does not have a main window, the <ph id="ph1">&lt;xref:System.Diagnostics.Process.MainWindowHandle%2A&gt;</ph> value is zero.</source>
          <target state="translated">関連付けられたプロセスにメイン ウィンドウがない場合、<ph id="ph1">&lt;xref:System.Diagnostics.Process.MainWindowHandle%2A&gt;</ph>値は 0 です。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>The value is also zero for processes that have been hidden, that is, processes that are not visible in the taskbar.</source>
          <target state="translated">値は、0 の非表示になって、プロセスのタスク バーに表示されていないプロセス、つまりもです。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>This can be the case for processes that appear as icons in the notification area, at the far right of the taskbar.</source>
          <target state="translated">これは、タスク バーの右端にある、通知領域にアイコンとして表示されるプロセスの場合です。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>If you have just started a process and want to use its main window handle, consider using the <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle%2A&gt;</ph> method to allow the process to finish starting, ensuring that the main window handle has been created.</source>
          <target state="translated">プロセスを開始したしてメイン ウィンドウ ハンドルを使用する場合は、使用を検討して、<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle%2A&gt;</ph>メソッドを処理が完了以降では、メイン ウィンドウのハンドルが作成されていることを確認します。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>Otherwise, an exception will be thrown.</source>
          <target state="translated">この操作を行わない場合、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MainWindowHandle" /&gt;</ph> is not defined because the process has exited.</source>
          <target state="translated">プロセスが終了したため、<ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MainWindowHandle" /&gt;</ph> が定義されていません。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>You are trying to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MainWindowHandle" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">リモート コンピューターで実行中のプロセスの <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MainWindowHandle" /&gt;</ph> プロパティにアクセスしようとしています。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">このプロパティはローカル コンピューターで実行中のプロセスに対してのみ使用可能です。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> to <ph id="ph2">&lt;see langword="false" /&gt;</ph> to access this property on Windows 98 and Windows Me.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) です。Windows 98 や Windows Me でこのプロパティにアクセスするには、<ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> を <ph id="ph2">&lt;see langword="false" /&gt;</ph> に設定します。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowHandle">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>Gets the caption of the main window of the process.</source>
          <target state="translated">プロセスのメイン ウィンドウのキャプションを取得します。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>The main window title of the process.</source>
          <target state="translated">プロセスのメイン ウィンドウのタイトル。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>A process has a main window associated with it only if the process has a graphical interface.</source>
          <target state="translated">プロセスでは、プロセスにグラフィカル インターフェイスがある場合にのみに関連付けられているメイン ウィンドウがあります。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>If the associated process does not have a main window (so that <ph id="ph1">&lt;xref:System.Diagnostics.Process.MainWindowHandle%2A&gt;</ph> is zero), <ph id="ph2">&lt;xref:System.Diagnostics.Process.MainWindowTitle%2A&gt;</ph> is an empty string ("").</source>
          <target state="translated">関連付けられたプロセスにメイン ウィンドウがない場合 (ように<ph id="ph1">&lt;xref:System.Diagnostics.Process.MainWindowHandle%2A&gt;</ph>ゼロ)、<ph id="ph2">&lt;xref:System.Diagnostics.Process.MainWindowTitle%2A&gt;</ph>空の文字列 ("") です。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>If you have just started a process and want to use its main window title, consider using the <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle%2A&gt;</ph> method to allow the process to finish starting, ensuring that the main window handle has been created.</source>
          <target state="translated">プロセスを開始したしてメイン ウィンドウのタイトルを使用する場合は、使用を検討して、<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle%2A&gt;</ph>メソッドを処理が完了以降では、メイン ウィンドウのハンドルが作成されていることを確認します。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>Otherwise, the system throws an exception.</source>
          <target state="translated">それ以外の場合、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>The main window is the window that currently has the focus; note that this might not be the primary window for the process.</source>
          <target state="translated">メイン ウィンドウは、現在フォーカスのあるウィンドウこのできないことがあります、プロセスの主なウィンドウに注意してください。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>You must use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph> method to refresh the <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> object to get the current main window handle if it has changed.</source>
          <target state="translated">使用する必要があります、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph>を更新する方法、<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>が変更された場合は、現在のメイン ウィンドウ ハンドルを取得するオブジェクト。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>The following example starts an instance of Notepad and retrieves the caption of the main window of the process.</source>
          <target state="translated">次の例では、メモ帳のインスタンスを起動し、プロセスのメイン ウィンドウのキャプションを取得します。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MainWindowTitle" /&gt;</ph> property is not defined because the process has exited.</source>
          <target state="translated">プロセスが終了したため、<ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MainWindowTitle" /&gt;</ph> プロパティが定義されていません。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>You are trying to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MainWindowTitle" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">リモート コンピューターで実行中のプロセスの <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MainWindowTitle" /&gt;</ph> プロパティにアクセスしようとしています。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">このプロパティはローカル コンピューターで実行中のプロセスに対してのみ使用可能です。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> to <ph id="ph2">&lt;see langword="false" /&gt;</ph> to access this property on Windows 98 and Windows Me.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) です。Windows 98 や Windows Me でこのプロパティにアクセスするには、<ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> を <ph id="ph2">&lt;see langword="false" /&gt;</ph> に設定します。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MainWindowTitle">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>Gets or sets the maximum allowable working set size, in bytes, for the associated process.</source>
          <target state="translated">関連付けられたプロセスに許可されるワーキング セットの最大サイズ (バイト単位) を取得または設定します。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>The maximum working set size that is allowed in memory for the process, in bytes.</source>
          <target state="translated">プロセスに許可されるメモリ上のワーキング セットの最大サイズ (バイト単位)。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>The working set of a process is the set of memory pages currently visible to the process in physical RAM memory.</source>
          <target state="translated">プロセスのワーキング セットは、物理 RAM メモリにプロセスに現在表示されているメモリ ページのセットです。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>These pages are resident and available for an application to use without triggering a page fault.</source>
          <target state="translated">これらのページが常駐しているページ フォールトをトリガーすることがなく使用するアプリケーションを利用できます。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>The working set includes both shared and private data.</source>
          <target state="translated">ワーキング セットには、共有とプライベートの両方のデータが含まれています。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>The shared data includes the pages that contain all the instructions that your application executes, including the pages in your .dll files and the system.dll files.</source>
          <target state="translated">共有データには、アプリケーションの実行、.dll ファイルや system.dll ファイルのページなどのすべての命令を含むページが含まれます。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>As the working set size increases, memory demand increases.</source>
          <target state="translated">ワーキング セットのサイズが増加、必要なメモリが増加します。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>A process has minimum and maximum working set sizes.</source>
          <target state="translated">プロセスが最小と最大ワーキング セットのサイズ。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>Each time a process resource is created, the system reserves an amount of memory equal to the minimum working set size for the process.</source>
          <target state="translated">プロセス リソースが作成されるたびに、システムは、、プロセスのワーキング セットの最小メモリ容量を予約します。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>The virtual memory manager attempts to keep at least the minimum amount of memory resident when the process is active, but it never keeps more than the maximum size.</source>
          <target state="translated">仮想メモリ マネージャー差を埋めようと少なくとも最小メモリ量常駐しているプロセスがアクティブな場合は最大サイズを超える保持しません。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>The system sets the default working set sizes.</source>
          <target state="translated">システムでは、既定の作業セットのサイズを設定します。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>You can modify these sizes using the <ph id="ph1">&lt;xref:System.Diagnostics.Process.MaxWorkingSet%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Process.MinWorkingSet%2A&gt;</ph> members.</source>
          <target state="translated">使用してこれらのサイズを変更することができます、<ph id="ph1">&lt;xref:System.Diagnostics.Process.MaxWorkingSet%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Diagnostics.Process.MinWorkingSet%2A&gt;</ph>メンバー。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>However, setting these values does not guarantee that the memory will be reserved or resident.</source>
          <target state="translated">ただし、これらの値の設定は保証されません、メモリがある予約または常駐。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>When you increase the working set size of a process, you take physical memory away from the rest of the system.</source>
          <target state="translated">プロセスのワーキング セットのサイズを大きくと、システムの残りの部分から離れた場所の物理メモリを実行します。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>Ensure that you do not request a minimum or maximum working set size that is too large, because doing so can degrade system performance.</source>
          <target state="translated">最小値または最大のワーキング セットのサイズが大きすぎて、システム パフォーマンスが低下することができますのでを要求しないことを確認します。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>The maximum working set size is invalid.</source>
          <target state="translated">ワーキング セットの最大サイズが正しくありません。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>It must be greater than or equal to the minimum working set size.</source>
          <target state="translated">この値は、ワーキング セットの最小サイズ以上である必要があります。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>Working set information cannot be retrieved from the associated process resource.</source>
          <target state="translated">関連付けられているプロセス リソースからワーキング セット情報を取得できません。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>The process identifier or process handle is zero because the process has not been started.</source>
          <target state="translated">プロセスが開始されていないので、プロセス識別子またはプロセス ハンドルが 0 です。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>You are trying to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MaxWorkingSet" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">リモート コンピューターで実行中のプロセスの <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MaxWorkingSet" /&gt;</ph> プロパティにアクセスしようとしています。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">このプロパティはローカル コンピューターで実行中のプロセスに対してのみ使用可能です。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>The process <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> is not available.</source>
          <target state="translated">プロセス <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> が使用できなくなっています。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>The process has exited.</source>
          <target state="translated">プロセスが終了しています。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MaxWorkingSet">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>Gets or sets the minimum allowable working set size, in bytes, for the associated process.</source>
          <target state="translated">関連付けられたプロセスに許可されるワーキング セットの最小サイズ (バイト単位) を取得または設定します。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>The minimum working set size that is required in memory for the process, in bytes.</source>
          <target state="translated">プロセスに必要なメモリ上のワーキング セットの最小サイズ (バイト単位)。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>The working set of a process is the set of memory pages currently visible to the process in physical RAM memory.</source>
          <target state="translated">プロセスのワーキング セットは、物理 RAM メモリにプロセスに現在表示されているメモリ ページのセットです。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>These pages are resident and available for an application to use without triggering a page fault.</source>
          <target state="translated">これらのページが常駐しているページ フォールトをトリガーすることがなく使用するアプリケーションを利用できます。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>The working set includes both shared and private data.</source>
          <target state="translated">ワーキング セットには、共有とプライベートの両方のデータが含まれています。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>The shared data includes the pages that contain all the instructions that your application executes, including the pages in your .dll files and the system.dll files.</source>
          <target state="translated">共有データには、アプリケーションの実行、.dll ファイルや system.dll ファイルのページなどのすべての命令を含むページが含まれます。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>As the working set size increases, memory demand increases.</source>
          <target state="translated">ワーキング セットのサイズが増加、必要なメモリが増加します。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>A process has minimum and maximum working set sizes.</source>
          <target state="translated">プロセスが最小と最大ワーキング セットのサイズ。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>Each time a process resource is created, the system reserves an amount of memory equal to the minimum working set size for the process.</source>
          <target state="translated">プロセス リソースが作成されるたびに、システムは、、プロセスのワーキング セットの最小メモリ容量を予約します。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>The virtual memory manager attempts to keep at least the minimum amount of memory resident when the process is active, but it never keeps more than the maximum size.</source>
          <target state="translated">仮想メモリ マネージャー差を埋めようと少なくとも最小メモリ量常駐しているプロセスがアクティブな場合は最大サイズを超える保持しません。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>The system sets the default working set sizes.</source>
          <target state="translated">システムでは、既定の作業セットのサイズを設定します。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>You can modify these sizes using the <ph id="ph1">&lt;xref:System.Diagnostics.Process.MaxWorkingSet%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Process.MinWorkingSet%2A&gt;</ph> members.</source>
          <target state="translated">使用してこれらのサイズを変更することができます、<ph id="ph1">&lt;xref:System.Diagnostics.Process.MaxWorkingSet%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Diagnostics.Process.MinWorkingSet%2A&gt;</ph>メンバー。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>However, setting these values does not guarantee that the memory will be reserved or resident.</source>
          <target state="translated">ただし、これらの値の設定は保証されません、メモリがある予約または常駐。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>When you increase the working set size of a process, you take physical memory away from the rest of the system.</source>
          <target state="translated">プロセスのワーキング セットのサイズを大きくと、システムの残りの部分から離れた場所の物理メモリを実行します。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>Ensure that you do not request a minimum or maximum working set size that is too large, because doing so can degrade system performance.</source>
          <target state="translated">最小値または最大のワーキング セットのサイズが大きすぎて、システム パフォーマンスが低下することができますのでを要求しないことを確認します。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>The minimum working set size is invalid.</source>
          <target state="translated">ワーキング セットの最小サイズが正しくありません。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>It must be less than or equal to the maximum working set size.</source>
          <target state="translated">この値は、ワーキング セットの最大サイズ以下にする必要があります。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>Working set information cannot be retrieved from the associated process resource.</source>
          <target state="translated">関連付けられているプロセス リソースからワーキング セット情報を取得できません。</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>The process identifier or process handle is zero because the process has not been started.</source>
          <target state="translated">プロセスが開始されていないので、プロセス識別子またはプロセス ハンドルが 0 です。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>You are trying to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MinWorkingSet" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">リモート コンピューターで実行中のプロセスの <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.MinWorkingSet" /&gt;</ph> プロパティにアクセスしようとしています。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">このプロパティはローカル コンピューターで実行中のプロセスに対してのみ使用可能です。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>The process <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> is not available.</source>
          <target state="translated">プロセス <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> が使用できなくなっています。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>The process has exited.</source>
          <target state="translated">プロセスが終了しています。</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.MinWorkingSet">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Modules">
          <source>Gets the modules that have been loaded by the associated process.</source>
          <target state="translated">関連付けられたプロセスに読み込まれたモジュールを取得します。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Modules">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessModule" /&gt;</ph> that represents the modules that have been loaded by the associated process.</source>
          <target state="translated">関連付けられたプロセスに読み込まれたモジュールを表す <ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessModule" /&gt;</ph> 型の配列。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Modules">
          <source>A process module represents a.dll or .exe file that is loaded into a particular process.</source>
          <target state="translated">プロセス モジュールでは、特定のプロセスに読み込まれる.dll .exe またはファイルを表します。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Modules">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.ProcessModule&gt;</ph> instance lets you view information about a module, including the module name, file name, and module memory details.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Diagnostics.ProcessModule&gt;</ph>インスタンスでは、モジュール名、ファイル名、およびモジュールのメモリの詳細を含め、モジュールに関する情報を表示することができます。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Modules">
          <source>A process can load multiple modules into memory.</source>
          <target state="translated">プロセスは、メモリに複数のモジュールを読み込むことができます。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Modules">
          <source>For example,.exe files that load additional .dll files have multiple modules.</source>
          <target state="translated">たとえば、.exe ファイルを追加の .dll ファイルを読み込むには、複数のモジュールがあります。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Modules">
          <source>After starting the process, this collection is empty until the system has loaded the process.</source>
          <target state="translated">プロセスを開始した後、システムには、プロセスが読み込まれるまでこのコレクションは空です。</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Modules">
          <source>If the process has a main window, you can call <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle%2A&gt;</ph> before retrieving this property to ensure that the collection is nonempty when you get the list.</source>
          <target state="translated">プロセスにメイン ウィンドウがある場合は、呼び出す<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle%2A&gt;</ph>一覧を取得するコレクションが空でない場合にことを確認するには、このプロパティを取得する前にします。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Modules">
          <source>You are attempting to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Modules" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">リモート コンピューターで実行されているプロセスの <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Modules" /&gt;</ph> プロパティにアクセスしようとしています。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Modules">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">このプロパティはローカル コンピューターで実行中のプロセスに対してのみ使用可能です。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Modules">
          <source>The process <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> is not available.</source>
          <target state="translated">プロセス <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> が使用できなくなっています。</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Modules">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> to <ph id="ph2">&lt;see langword="false" /&gt;</ph> to access this property on Windows 98 and Windows Me.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) です。Windows 98 や Windows Me でこのプロパティにアクセスするには、<ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> を <ph id="ph2">&lt;see langword="false" /&gt;</ph> に設定します。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Modules">
          <source>You are attempting to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Modules" /&gt;</ph> property for either the system process or the idle process.</source>
          <target state="translated">システム プロセスまたはアイドル状態のプロセスのいずれかの <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Modules" /&gt;</ph> プロパティにアクセスしようとしています。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Modules">
          <source>These processes do not have modules.</source>
          <target state="translated">これらのプロセスには、モジュールが存在しません。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Modules">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Modules">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize">
          <source>Gets the amount of nonpaged system memory, in bytes, allocated for the associated process.</source>
          <target state="translated">関連付けられたプロセスに割り当てられたページングされないシステム メモリの量 (バイト単位) を取得します。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize">
          <source>The amount of memory, in bytes, the system has allocated for the associated process that cannot be written to the virtual memory paging file.</source>
          <target state="translated">システムによって関連付けられたプロセスに割り当てられた、仮想メモリ ページング ファイルに書き込むことができないメモリの容量 (バイト単位)。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>Gets the amount of nonpaged system memory, in bytes, allocated for the associated process.</source>
          <target state="translated">関連付けられたプロセスに割り当てられたページングされないシステム メモリの量 (バイト単位) を取得します。</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>The amount of system memory, in bytes, allocated for the associated process that cannot be written to the virtual memory paging file.</source>
          <target state="translated">関連付けられたプロセスに割り当てられた、仮想メモリ ページング ファイルに書き込むことができないシステム メモリの容量 (バイト単位)。</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>The value returned by this property represents the current size of nonpaged system memory used by the process, in bytes.</source>
          <target state="translated">このプロパティによって返される値は、(バイト単位)、プロセスによって使用されているページングされないシステム メモリの現在のサイズを表します。</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>System memory is the physical memory used by the operating system, and is divided into paged and nonpaged pools.</source>
          <target state="translated">システム メモリは、オペレーティング システムによって使用される物理メモリであり、ページおよび非ページ プールに分割できます。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>Nonpaged memory allocations remain in system memory and are not paged out to the virtual memory paging file.</source>
          <target state="translated">非ページ メモリの割り当ては、システム メモリ内に存在し、仮想メモリ ページング ファイルにページ アウトされません。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</source>
          <target state="translated">このプロパティは、32 ビット プロセッサまたは 64 ビット プロセッサを持つコンピュータのメモリ使用量の監視に使用できます。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>The property value is equivalent to the <bpt id="p1">**</bpt>Pool Nonpaged Bytes<ept id="p1">**</ept> performance counter for the process.</source>
          <target state="translated">プロパティの値が等価、 <bpt id="p1">**</bpt>Pool Nonpaged Bytes<ept id="p1">**</ept>プロセスのパフォーマンス カウンター。</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>The following code example starts an instance of the Notepad application.</source>
          <target state="translated">次のコード例では、メモ帳のインスタンスを起動します。</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">例に、取得し、関連付けられたプロセスのさまざまなプロパティを表示します。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>The example detects when the process exits, and displays its exit code and peak memory statistics.</source>
          <target state="translated">例では、検出プロセスが終了すると、し、終了コードとピーク メモリ統計情報を表示します。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.OnExited">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Diagnostics.Process.Exited" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Diagnostics.Process.Exited" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.OnExited%2A&gt;</ph> is the API method that raises the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.OnExited%2A&gt;</ph> API メソッドを発生させるには、<ph id="ph2">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source>Calling <ph id="ph1">&lt;xref:System.Diagnostics.Process.OnExited%2A&gt;</ph> causes the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event to occur and is the only way to raise the event using the <ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph> component.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Diagnostics.Process.OnExited%2A&gt;</ph>により、<ph id="ph2">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>イベントが発生するを使用してイベントを発生させる唯一の方法であり、<ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントです。</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.OnExited%2A&gt;</ph> is primarily used when deriving classes from the component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.OnExited%2A&gt;</ph> コンポーネントからクラスを派生している場合、主に使用します。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source>As an alternative to <ph id="ph1">&lt;xref:System.Diagnostics.Process.OnExited%2A&gt;</ph>, you can write your own event handler.</source>
          <target state="translated">代わりに<ph id="ph1">&lt;xref:System.Diagnostics.Process.OnExited%2A&gt;</ph>、独自のイベント ハンドラーを記述することができます。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source>You create your own event handler delegate and your own event-handling method.</source>
          <target state="translated">独自のイベント ハンドラー デリゲートと、独自のイベント処理メソッドを作成します。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source>If you are using the Visual Studio environment, an event handler delegate (AddOnExited) and an event-handling method (Process1_Exited) are created for you when you drag a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component onto a form and double-click the icon.</source>
          <target state="translated">Visual Studio 環境を使用しているイベント ハンドラー デリゲート (AddOnExited) とイベント処理メソッド (Process1_Exited) が作成するのにドラッグすると、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントをフォームにアイコンをダブルクリックします。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source>The code you create to run when the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event occurs is entered into the Process1_Exited procedure.</source>
          <target state="translated">ときに実行するコードを作成する、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>イベント発生 Process1_Exited プロシージャに入力されます。</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source>You do not need to create the <ph id="ph1">&lt;xref:System.Diagnostics.Process.OnExited%2A&gt;</ph> member, because it is implemented for you.</source>
          <target state="translated">作成する必要はありません、<ph id="ph1">&lt;xref:System.Diagnostics.Process.OnExited%2A&gt;</ph>メンバーの実装されているためです。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">概要については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.OnExited%2A&gt;</ph> method in a derived class.</source>
          <target state="translated">次の例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Diagnostics.Process.OnExited%2A&gt;</ph>派生クラスのメソッドです。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.OnExited">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="E:System.Diagnostics.Process.OutputDataReceived">
          <source>Occurs each time an application writes a line to its redirected <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> stream.</source>
          <target state="translated">アプリケーションが、リダイレクトされた <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> ストリームに行を書き込む度に発生します。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.OutputDataReceived">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph> event indicates that the associated <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> has written a line, terminating with a newline character, to its redirected <ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph>イベントには、ことを示します、関連付けられている<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>に改行文字をリダイレクトされたを終了して、行が書き込ま<ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.OutputDataReceived">
          <source>The event is enabled during asynchronous read operations on <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>.</source>
          <target state="translated">非同期の読み取り操作中にイベントが有効になっている<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.OutputDataReceived">
          <source>To start asynchronous read operations, you must redirect the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream of a <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>, add your event handler to the <ph id="ph3">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph> event, and call <ph id="ph4">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>.</source>
          <target state="translated">非同期の読み取り操作を開始する必要がありますにリダイレクトする、<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>のストリーム、 <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>、イベント ハンドラーを追加、<ph id="ph3">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph>イベント、および呼び出し<ph id="ph4">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.OutputDataReceived">
          <source>Thereafter, the <ph id="ph1">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph> event signals each time the process writes a line to the redirected <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream, until the process exits or calls <ph id="ph3">&lt;xref:System.Diagnostics.Process.CancelOutputRead%2A&gt;</ph>.</source>
          <target state="translated">その後、<ph id="ph1">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph>イベント シグナルたびに、プロセスは、リダイレクトされたに行を書き込む<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>プロセスが終了したかを呼び出すまで、ストリーム<ph id="ph3">&lt;xref:System.Diagnostics.Process.CancelOutputRead%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.OutputDataReceived">
          <source>The application that is processing the asynchronous output should call the <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt;</ph> method to ensure that the output buffer has been flushed.</source>
          <target state="translated">非同期出力を処理するアプリケーションを呼び出す必要があります、<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%2A&gt;</ph>メソッドを出力バッファーがフラッシュされたことを確認してください。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.OutputDataReceived">
          <source>The following example illustrates how to perform asynchronous read operations on the redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream of the <ph id="ph2">`ipconfig`</ph> command.</source>
          <target state="translated">次の例は、リダイレクトされたで、非同期読み取り操作を実行する方法を示しています。<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>のストリーム、<ph id="ph2">`ipconfig`</ph>コマンド。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.OutputDataReceived">
          <source>The example creates an event delegate for the <ph id="ph1">`OutputHandler`</ph> event handler and associates it with the <ph id="ph2">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph> event.</source>
          <target state="translated">例では、イベント デリゲートを作成する、<ph id="ph1">`OutputHandler`</ph>イベント ハンドラーに関連付けますと、<ph id="ph2">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.OutputDataReceived">
          <source>The event handler receives text lines from the redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream, formats the text, and saves it in an output string that’s later shown in the example’s console window.</source>
          <target state="translated">イベント ハンドラーは、テキストの行からリダイレクトされた<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>ストリームは、テキストを書式化して、後の例では、コンソール ウィンドウに表示される出力文字列に保存されます。</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.OutputDataReceived">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Process.OutputDataReceived">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PagedMemorySize">
          <source>Gets the amount of paged memory, in bytes, allocated for the associated process.</source>
          <target state="translated">関連付けられたプロセスに割り当てられたページ メモリの量 (バイト単位) を取得します。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize">
          <source>The amount of memory, in bytes, allocated by the associated process that can be written to the virtual memory paging file.</source>
          <target state="translated">仮想メモリ ページング ファイルに書き込むことができる関連付けられたプロセスによって割り当てられたメモリの容量 (バイト単位)。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PagedMemorySize">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>Gets the amount of paged memory, in bytes, allocated for the associated process.</source>
          <target state="translated">関連付けられたプロセスに割り当てられたページ メモリの量 (バイト単位) を取得します。</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>The amount of memory, in bytes, allocated in the virtual memory paging file for the associated process.</source>
          <target state="translated">関連付けられたプロセスの仮想メモリ ページング ファイル内で割り当てられたメモリの量 (バイト単位)。</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>The value returned by this property represents the current size of memory in the virtual memory paging file used by the process, in bytes.</source>
          <target state="translated">このプロパティによって返される値は、(バイト単位)、プロセスによって使用される仮想メモリ ページング ファイル内のメモリの現在のサイズを表します。</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>The operating system uses the virtual memory paging file in conjunction with physical memory to manage the virtual address space for each process.</source>
          <target state="translated">オペレーティング システムでは、各プロセスの仮想アドレス空間を管理するのに物理メモリと組み合わせて仮想メモリ ページング ファイルを使用します。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>When pageable memory is not in use, it can be transferred to the virtual memory paging file on disk.</source>
          <target state="translated">ページング可能なメモリが使用されていない場合は、ディスク上の仮想メモリ ページング ファイルに転送できます。</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>To obtain the size of memory used by the operating system for the process, use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.PagedSystemMemorySize64%2A&gt;</ph> property.</source>
          <target state="translated">プロセスのオペレーティング システムで使用されるメモリのサイズを取得するを使用して、<ph id="ph1">&lt;xref:System.Diagnostics.Process.PagedSystemMemorySize64%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</source>
          <target state="translated">このプロパティは、32 ビット プロセッサまたは 64 ビット プロセッサを持つコンピュータのメモリ使用量の監視に使用できます。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>The property value is equivalent to the <bpt id="p1">**</bpt>Page File Bytes<ept id="p1">**</ept> performance counter for the process.</source>
          <target state="translated">プロパティの値が等価、<bpt id="p1">**</bpt>ページ ファイル バイト<ept id="p1">**</ept>プロセスのパフォーマンス カウンター。</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>The following code example starts an instance of the Notepad application, and then retrieves and displays various properties of the associated process.</source>
          <target state="translated">次のコード例は、メモ帳アプリケーションのインスタンスを起動しを取得して関連付けられたプロセスのさまざまなプロパティを表示します。</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>The example detects when the process exits, and displays its exit code and peak memory statistics.</source>
          <target state="translated">例では、検出プロセスが終了すると、し、終了コードとピーク メモリ統計情報を表示します。</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedMemorySize64">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PagedSystemMemorySize">
          <source>Gets the amount of pageable system memory, in bytes, allocated for the associated process.</source>
          <target state="translated">関連付けられたプロセスに割り当てられたページング可能なシステム メモリの量 (バイト単位) を取得します。</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize">
          <source>The amount of memory, in bytes, the system has allocated for the associated process that can be written to the virtual memory paging file.</source>
          <target state="translated">システムによって関連付けられたプロセスに割り当てられた、仮想メモリ ページング ファイルに書き込むことができるメモリの容量 (バイト単位)。</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PagedSystemMemorySize">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>Gets the amount of pageable system memory, in bytes, allocated for the associated process.</source>
          <target state="translated">関連付けられたプロセスに割り当てられたページング可能なシステム メモリの量 (バイト単位) を取得します。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>The amount of system memory, in bytes, allocated for the associated process that can be written to the virtual memory paging file.</source>
          <target state="translated">関連付けられたプロセスに割り当てられた、仮想メモリ ページング ファイルに書き込むことができるシステム メモリの容量 (バイト単位)。</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>The value returned by this property value represents the current size of pageable system memory used by the process, in bytes.</source>
          <target state="translated">このプロパティの値によって返される値は、(バイト単位)、プロセスによって使用されているページング可能なシステム メモリの現在のサイズを表します。</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>System memory is the physical memory used by the operating system, and is divided into paged and nonpaged pools.</source>
          <target state="translated">システム メモリは、オペレーティング システムによって使用される物理メモリであり、ページおよび非ページ プールに分割できます。</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>When pageable memory is not in use, it can be transferred to the virtual memory paging file on disk.</source>
          <target state="translated">ページング可能なメモリが使用されていない場合は、ディスク上の仮想メモリ ページング ファイルに転送できます。</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>To obtain the size of the application memory used by the process, use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.PagedMemorySize64%2A&gt;</ph> property.</source>
          <target state="translated">プロセスによって使用される、アプリケーションのメモリのサイズを取得するを使用して、<ph id="ph1">&lt;xref:System.Diagnostics.Process.PagedMemorySize64%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</source>
          <target state="translated">このプロパティは、32 ビット プロセッサまたは 64 ビット プロセッサを持つコンピュータのメモリ使用量の監視に使用できます。</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>The property value is equivalent to the <bpt id="p1">**</bpt>Pool Paged Bytes<ept id="p1">**</ept> performance counter for the process.</source>
          <target state="translated">プロパティの値が等価、<bpt id="p1">**</bpt>プール (ページ バイト)<ept id="p1">**</ept>プロセスのパフォーマンス カウンター。</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>The following code example starts an instance of the Notepad application.</source>
          <target state="translated">次のコード例では、メモ帳のインスタンスを起動します。</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">例に、取得し、関連付けられたプロセスのさまざまなプロパティを表示します。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>The example detects when the process exits, and displays its exit code and peak memory statistics.</source>
          <target state="translated">例では、検出プロセスが終了すると、し、終了コードとピーク メモリ統計情報を表示します。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PagedSystemMemorySize64">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PeakPagedMemorySize">
          <source>Gets the maximum amount of memory in the virtual memory paging file, in bytes, used by the associated process.</source>
          <target state="translated">関連付けられたプロセスによって使用される、仮想メモリ ページング ファイル内のメモリの最大量を取得します (バイト単位)。</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize">
          <source>The maximum amount of memory, in bytes, allocated by the associated process that could be written to the virtual memory paging file.</source>
          <target state="translated">関連付けられたプロセスによって割り当てられた、仮想メモリ ページング ファイルに書き込むことができたメモリの最大容量 (バイト単位)。</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PeakPagedMemorySize">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>Gets the maximum amount of memory in the virtual memory paging file, in bytes, used by the associated process.</source>
          <target state="translated">関連付けられたプロセスによって使用される、仮想メモリ ページング ファイル内のメモリの最大量を取得します (バイト単位)。</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>The maximum amount of memory, in bytes, allocated in the virtual memory paging file for the associated process since it was started.</source>
          <target state="translated">プロセスの開始以降、関連付けられたプロセスの仮想メモリ ページング ファイル内で割り当てられたメモリの最大量 (バイト単位)。</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>The value returned by this property value represents the maximum size of memory in the virtual memory paging file used by the process since it started, in bytes.</source>
          <target state="translated">このプロパティの値によって返される値は、(バイト単位)、起動されてから、プロセスによって使用される仮想メモリ ページング ファイル内のメモリの最大サイズを表します。</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>The operating system uses the virtual memory paging file in conjunction with physical memory to manage the virtual address space for each process.</source>
          <target state="translated">オペレーティング システムでは、各プロセスの仮想アドレス空間を管理するのに物理メモリと組み合わせて仮想メモリ ページング ファイルを使用します。</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>When pageable memory is not in use, it can be transferred to the virtual memory paging file on disk.</source>
          <target state="translated">ページング可能なメモリが使用されていない場合は、ディスク上の仮想メモリ ページング ファイルに転送できます。</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</source>
          <target state="translated">このプロパティは、32 ビット プロセッサまたは 64 ビット プロセッサを持つコンピュータのメモリ使用量の監視に使用できます。</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>The property value is equivalent to the <bpt id="p1">**</bpt>Page File Bytes Peak<ept id="p1">**</ept> performance counter for the process.</source>
          <target state="translated">プロパティ値と等価です、<bpt id="p1">**</bpt>ページ ファイル バイト数ピーク<ept id="p1">**</ept>プロセスのパフォーマンス カウンター。</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>The following code example starts an instance of the Notepad application.</source>
          <target state="translated">次のコード例では、メモ帳のインスタンスを起動します。</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">例に、取得し、関連付けられたプロセスのさまざまなプロパティを表示します。</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>The example detects when the process exits, and displays its exit code and peak memory statistics.</source>
          <target state="translated">例では、検出プロセスが終了すると、し、終了コードとピーク メモリ統計情報を表示します。</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakPagedMemorySize64">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize">
          <source>Gets the maximum amount of virtual memory, in bytes, used by the associated process.</source>
          <target state="translated">関連付けられたプロセスによって使用される仮想メモリの最大量を取得します (バイト単位)。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize">
          <source>The maximum amount of virtual memory, in bytes, that the associated process has requested.</source>
          <target state="translated">関連付けられたプロセスが要求した仮想メモリの最大容量 (バイト単位)。</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
          <source>Gets the maximum amount of virtual memory, in bytes, used by the associated process.</source>
          <target state="translated">関連付けられたプロセスによって使用される仮想メモリの最大量を取得します (バイト単位)。</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
          <source>The maximum amount of virtual memory, in bytes, allocated for the associated process since it was started.</source>
          <target state="translated">プロセスの開始以降、関連付けられたプロセスに割り当てられた仮想メモリの最大量 (バイト単位)。</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
          <source>The value returned by this property represents the maximum size of virtual memory used by the process since it started, in bytes.</source>
          <target state="translated">このプロパティによって返される値は、(バイト単位)、起動されてから、プロセスによって使用される仮想メモリの最大サイズを表します。</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
          <source>The operating system maps the virtual address space for each process either to pages loaded in physical memory, or to pages stored in the virtual memory paging file on disk.</source>
          <target state="translated">オペレーティング システムでは、物理メモリまたはディスク上の仮想メモリ ページング ファイルに格納されているページに読み込まれるページのいずれかの各プロセスの仮想アドレス空間をマップします。</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
          <source>This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</source>
          <target state="translated">このプロパティは、32 ビット プロセッサまたは 64 ビット プロセッサを持つコンピュータのメモリ使用量の監視に使用できます。</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
          <source>The property value is equivalent to the <bpt id="p1">**</bpt>Virtual Bytes Peak<ept id="p1">**</ept> performance counter for the process.</source>
          <target state="translated">プロパティの値が等価、<bpt id="p1">**</bpt>仮想バイト ピーク<ept id="p1">**</ept>プロセスのパフォーマンス カウンター。</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
          <source>The following code example starts an instance of the Notepad application.</source>
          <target state="translated">次のコード例では、メモ帳のインスタンスを起動します。</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">例に、取得し、関連付けられたプロセスのさまざまなプロパティを表示します。</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
          <source>The example detects when the process exits, and displays its exit code and peak memory statistics.</source>
          <target state="translated">例では、検出プロセスが終了すると、し、終了コードとピーク メモリ統計情報を表示します。</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PeakWorkingSet">
          <source>Gets the peak working set size for the associated process, in bytes.</source>
          <target state="translated">関連付けられたプロセスのピーク ワーキング セット サイズをバイト単位で取得します。</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet">
          <source>The maximum amount of physical memory that the associated process has required all at once, in bytes.</source>
          <target state="translated">関連づけられたプロセスが一度に要求した物理メモリのバイト単位での最大容量。</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet">
          <source>The working set of a process is the set of memory pages currently visible to the process in physical RAM memory.</source>
          <target state="translated">プロセスのワーキング セットは、物理 RAM メモリにプロセスに現在表示されているメモリ ページのセットです。</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet">
          <source>These pages are resident and available for an application to use without triggering a page fault.</source>
          <target state="translated">これらのページが常駐しているページ フォールトをトリガーすることがなく使用するアプリケーションを利用できます。</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet">
          <source>The working set includes both shared and private data.</source>
          <target state="translated">ワーキング セットには、共有とプライベートの両方のデータが含まれています。</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet">
          <source>The shared data includes the pages that contain all the instructions that the process executes, including process modules and the system libraries.</source>
          <target state="translated">共有データには、プロセスのモジュールやシステム ライブラリなど、プロセスが実行されるすべての指示を含むページが含まれます。</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PeakWorkingSet">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>Gets the maximum amount of physical memory, in bytes, used by the associated process.</source>
          <target state="translated">関連付けられたプロセスによって使用される物理メモリの最大量をバイト数として取得します。</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>The maximum amount of physical memory, in bytes, allocated for the associated process since it was started.</source>
          <target state="translated">プロセスの開始以降、関連付けられたプロセスに割り当てられた物理メモリの最大量 (バイト単位)。</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>The value returned by this property represents the maximum size of working set memory used by the process since it started, in bytes.</source>
          <target state="translated">このプロパティによって返される値は、ワーキング セット メモリ (バイト単位)、開始以降にプロセスによって使用の最大サイズを表します。</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>The working set of a process is the set of memory pages currently visible to the process in physical RAM memory.</source>
          <target state="translated">プロセスのワーキング セットは、物理 RAM メモリにプロセスに現在表示されているメモリ ページのセットです。</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>These pages are resident and available for an application to use without triggering a page fault.</source>
          <target state="translated">これらのページが常駐しているページ フォールトをトリガーすることがなく使用するアプリケーションを利用できます。</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>The working set includes both shared and private data.</source>
          <target state="translated">ワーキング セットには、共有とプライベートの両方のデータが含まれています。</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>The shared data includes the pages that contain all the instructions that the process executes, including instructions from the process modules and the system libraries.</source>
          <target state="translated">共有データには、プロセスのモジュールとシステム ライブラリからの指示を含む、プロセスが実行されるすべての指示を含むページが含まれます。</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</source>
          <target state="translated">このプロパティは、32 ビット プロセッサまたは 64 ビット プロセッサを持つコンピュータのメモリ使用量の監視に使用できます。</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>The property value is equivalent to the <bpt id="p1">**</bpt>Working Set Peak<ept id="p1">**</ept> performance counter for the process.</source>
          <target state="translated">プロパティの値が等価、 <bpt id="p1">**</bpt>Working Set Peak<ept id="p1">**</ept>プロセスのパフォーマンス カウンター。</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>The following code example starts an instance of the Notepad application.</source>
          <target state="translated">次のコード例では、メモ帳のインスタンスを起動します。</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">例に、取得し、関連付けられたプロセスのさまざまなプロパティを表示します。</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>The example detects when the process exits, and displays its exit code and peak memory statistics.</source>
          <target state="translated">例では、検出プロセスが終了すると、し、終了コードとピーク メモリ統計情報を表示します。</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PeakWorkingSet64">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>Gets or sets a value indicating whether the associated process priority should temporarily be boosted by the operating system when the main window has the focus.</source>
          <target state="translated">メイン ウィンドウのフォーカス時に、オペレーティング システムによって関連付けられたプロセスの優先順位を一時的に上げるかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if dynamic boosting of the process priority should take place for a process when it is taken out of the wait state; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">待機状態から抜けたときにプロセスの優先順位を動的に上げる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>When a thread runs in a process for which the priority class has one of the dynamic priority enumeration values (<ph id="ph1">&lt;xref:System.Diagnostics.ProcessPriorityClass.Normal&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.ProcessPriorityClass.High&gt;</ph>, or <ph id="ph3">&lt;xref:System.Diagnostics.ProcessPriorityClass.RealTime&gt;</ph>), the system temporarily boosts the thread's priority when it is taken out of a wait state.</source>
          <target state="translated">対象の優先度クラスには、動的な優先順位の列挙値のいずれかのプロセスでスレッドが実行されるとき (<ph id="ph1">&lt;xref:System.Diagnostics.ProcessPriorityClass.Normal&gt;</ph>、 <ph id="ph2">&lt;xref:System.Diagnostics.ProcessPriorityClass.High&gt;</ph>、または<ph id="ph3">&lt;xref:System.Diagnostics.ProcessPriorityClass.RealTime&gt;</ph>)、システムは、待機状態から抜けたときに一時的に、スレッドの優先度をブーストします。</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>This action prevents other processes from interrupting the processing of the current thread.</source>
          <target state="translated">この操作では、他のプロセスが現在のスレッドの処理を中断できなくなります。</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.PriorityBoostEnabled%2A&gt;</ph> setting affects all the existing threads and any threads subsequently created by the process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.PriorityBoostEnabled%2A&gt;</ph>設定は、既存のすべてのスレッドおよびプロセスによって作成された後でそのスレッドに影響します。</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>To restore normal behavior, set the <ph id="ph1">&lt;xref:System.Diagnostics.Process.PriorityBoostEnabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">通常の動作を復元するには、設定、<ph id="ph1">&lt;xref:System.Diagnostics.Process.PriorityBoostEnabled%2A&gt;</ph>プロパティを<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>Boosting the priority too high can drain resources from essential operating system and network functions, causing problems with other operating system tasks.</source>
          <target state="translated">高すぎるの優先度を上げると、重要なオペレーティング システムやネットワーク機能、他のオペレーティング システム タスクと問題を引き起こしているリソースをドレインできます。</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>Priority boost information could not be retrieved from the associated process resource.</source>
          <target state="translated">関連付けられているプロセス リソースから priority boost 情報を取得できませんでした。</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>The process identifier or process handle is zero.</source>
          <target state="translated">プロセス識別子またはプロセス ハンドルが 0 です。</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>(The process has not been started.)</source>
          <target state="translated">(プロセスは開始されていません。)</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>You are attempting to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.PriorityBoostEnabled" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">リモート コンピューターで実行されているプロセスの <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.PriorityBoostEnabled" /&gt;</ph> プロパティにアクセスしようとしています。</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">このプロパティはローカル コンピューターで実行中のプロセスに対してのみ使用可能です。</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>The process <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> is not available.</source>
          <target state="translated">プロセス <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> が使用できなくなっています。</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityBoostEnabled">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>Gets or sets the overall priority category for the associated process.</source>
          <target state="translated">関連付けられたプロセスの全体的な優先順位カテゴリを取得または設定します。</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>The priority category for the associated process, from which the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.BasePriority" /&gt;</ph> of the process is calculated.</source>
          <target state="translated">プロセスの <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.BasePriority" /&gt;</ph> を計算するときに使用する、関連付けられたプロセスの優先順位カテゴリ。</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>A process priority class encompasses a range of thread priority levels.</source>
          <target state="translated">プロセス優先度クラスには、スレッドの優先度レベルの範囲が含まれます。</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>Threads with different priorities that are running in the process run relative to the priority class of the process.</source>
          <target state="translated">プロセスで実行されている優先順位が異なるスレッドは、プロセスの優先度クラスを基準として実行します。</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>Win32 uses four priority classes with seven base priority levels per class.</source>
          <target state="translated">Win32 では、クラスごとの 7 つの基本優先度レベルを持つ 4 つの優先度クラスを使用します。</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>These process priority classes are captured in the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessPriorityClass&gt;</ph> enumeration, which lets you set the process priority to <ph id="ph2">&lt;xref:System.Diagnostics.ProcessPriorityClass.Idle&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.ProcessPriorityClass.Normal&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.ProcessPriorityClass.High&gt;</ph>, <ph id="ph5">&lt;xref:System.Diagnostics.ProcessPriorityClass.AboveNormal&gt;</ph>, <ph id="ph6">&lt;xref:System.Diagnostics.ProcessPriorityClass.BelowNormal&gt;</ph>, or <ph id="ph7">&lt;xref:System.Diagnostics.ProcessPriorityClass.RealTime&gt;</ph>.</source>
          <target state="translated">これらのプロセス優先度クラスがキャプチャされます、<ph id="ph1">&lt;xref:System.Diagnostics.ProcessPriorityClass&gt;</ph>する列挙体にプロセスの優先順位を設定する<ph id="ph2">&lt;xref:System.Diagnostics.ProcessPriorityClass.Idle&gt;</ph>、 <ph id="ph3">&lt;xref:System.Diagnostics.ProcessPriorityClass.Normal&gt;</ph>、 <ph id="ph4">&lt;xref:System.Diagnostics.ProcessPriorityClass.High&gt;</ph>、 <ph id="ph5">&lt;xref:System.Diagnostics.ProcessPriorityClass.AboveNormal&gt;</ph>、 <ph id="ph6">&lt;xref:System.Diagnostics.ProcessPriorityClass.BelowNormal&gt;</ph>、または<ph id="ph7">&lt;xref:System.Diagnostics.ProcessPriorityClass.RealTime&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>Based on the time elapsed or other boosts, the base priority level can be changed by the operating system when a process needs to be put ahead of others for access to the processor.</source>
          <target state="translated">プロセスがプロセッサにアクセスするための他のユーザーの前配置する必要がある場合、オペレーティング システムによって経過またはその他の要因、基本の優先度レベルを変更できます時間に基づいています。</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>In addition, you can set the <ph id="ph1">&lt;xref:System.Diagnostics.Process.PriorityBoostEnabled%2A&gt;</ph> to temporarily boost the priority level of threads that have been taken out of the wait state.</source>
          <target state="translated">さらに、設定、<ph id="ph1">&lt;xref:System.Diagnostics.Process.PriorityBoostEnabled%2A&gt;</ph>待機状態から取得したスレッドの優先度レベルを一時的に上げることです。</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>The priority is reset when the process returns to the wait state.</source>
          <target state="translated">プロセスが待機状態に戻るときに、優先順位がリセットされます。</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph> property lets you view the starting priority that is assigned to a process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph>プロパティを使用して、プロセスに割り当てられている開始優先度を表示できます。</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>However, because it is read-only, you cannot use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph> property to set the priority of a process.</source>
          <target state="translated">ただし、これは、読み取り専用であるために使用できません、<ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph>プロセスの優先順位を設定するプロパティです。</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>To change the priority, use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.PriorityClass%2A&gt;</ph> property, which gets or sets the overall priority category for the process.</source>
          <target state="translated">優先順位を変更するには、使用、<ph id="ph1">&lt;xref:System.Diagnostics.Process.PriorityClass%2A&gt;</ph>プロパティを取得またはプロセスの全体的な優先順位カテゴリを設定します。</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>The priority class cannot be viewed using System Monitor.</source>
          <target state="translated">システム モニターを使用して、優先度クラスを表示できません。</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>The following table shows the relationship between the <ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Process.PriorityClass%2A&gt;</ph> values.</source>
          <target state="translated">次の表は、関係を示しています、<ph id="ph1">&lt;xref:System.Diagnostics.Process.BasePriority%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Diagnostics.Process.PriorityClass%2A&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>BasePriority</source>
          <target state="translated">BasePriority</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>PriorityClass</source>
          <target state="translated">PriorityClass</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>8</source>
          <target state="translated">8</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>13</source>
          <target state="translated">13</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>24</source>
          <target state="translated">24</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">次の例では、メモ帳のインスタンスを開始します。</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">例に、取得し、関連付けられたプロセスのさまざまなプロパティを表示します。</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>The example detects when the process exits, and displays the process's exit code.</source>
          <target state="translated">例では、検出プロセスが終了すると、し、プロセスの終了コードを表示します。</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>Process priority information could not be set or retrieved from the associated process resource.</source>
          <target state="translated">関連付けられているプロセスのリソースからプロセス優先度情報を設定できないか、取得できませんでした。</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>The process identifier or process handle is zero.</source>
          <target state="translated">プロセス識別子またはプロセス ハンドルが 0 です。</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>(The process has not been started.)</source>
          <target state="translated">(プロセスは開始されていません。)</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>You are attempting to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.PriorityClass" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">リモート コンピューターで実行されているプロセスの <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.PriorityClass" /&gt;</ph> プロパティにアクセスしようとしています。</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">このプロパティはローカル コンピューターで実行中のプロセスに対してのみ使用可能です。</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>The process <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> is not available.</source>
          <target state="translated">プロセス <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> が使用できなくなっています。</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>You have set the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.PriorityClass" /&gt;</ph> to <ph id="ph2">&lt;see langword="AboveNormal" /&gt;</ph> or <ph id="ph3">&lt;see langword="BelowNormal" /&gt;</ph> when using Windows 98 or Windows Millennium Edition (Windows Me).</source>
          <target state="translated">Windows 98 または Windows Millennium Edition (Windows Me) を使用していて、<ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.PriorityClass" /&gt;</ph> を <ph id="ph2">&lt;see langword="AboveNormal" /&gt;</ph> または <ph id="ph3">&lt;see langword="BelowNormal" /&gt;</ph> に設定しました。</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>These platforms do not support those values for the priority class.</source>
          <target state="translated">これらのプラットフォームにおいて、優先度クラスにそれらの値はサポートされていません。</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>Priority class cannot be set because it does not use a valid value, as defined in the <ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessPriorityClass" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessPriorityClass" /&gt;</ph> 列挙体で定義されている有効な値が使用されていないため、優先度クラスを設定できません。</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PriorityClass">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PrivateMemorySize">
          <source>Gets the amount of private memory, in bytes, allocated for the associated process.</source>
          <target state="translated">関連付けられたプロセスに割り当てられたプライベート メモリの量 (バイト単位) を取得します。</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivateMemorySize">
          <source>The number of bytes allocated by the associated process that cannot be shared with other processes.</source>
          <target state="translated">関連付けられたプロセスに割り当てられ、他のプロセスと共有できないバイト数。</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PrivateMemorySize">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivateMemorySize">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivateMemorySize">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PrivateMemorySize64">
          <source>Gets the amount of private memory, in bytes, allocated for the associated process.</source>
          <target state="translated">関連付けられたプロセスに割り当てられたプライベート メモリの量 (バイト単位) を取得します。</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivateMemorySize64">
          <source>The amount of memory, in bytes, allocated for the associated process that cannot be shared with other processes.</source>
          <target state="translated">関連付けられたプロセスに割り当てられ、他のプロセスと共有できないメモリの量 (バイト単位)。</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivateMemorySize64">
          <source>The value returned by this property represents the current size of memory used by the process, in bytes, that cannot be shared with other processes.</source>
          <target state="translated">このプロパティによって返される値は、他のプロセスと共有できないバイトで、プロセスによって使用されるメモリの現在のサイズを表します。</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivateMemorySize64">
          <source>This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</source>
          <target state="translated">このプロパティは、32 ビット プロセッサまたは 64 ビット プロセッサを持つコンピュータのメモリ使用量の監視に使用できます。</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivateMemorySize64">
          <source>The property value is equivalent to the <bpt id="p1">**</bpt>Private Bytes<ept id="p1">**</ept> performance counter for the process.</source>
          <target state="translated">プロパティの値が等価、 <bpt id="p1">**</bpt>Private Bytes<ept id="p1">**</ept>プロセスのパフォーマンス カウンター。</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivateMemorySize64">
          <source>The following code example starts an instance of the Notepad application.</source>
          <target state="translated">次のコード例では、メモ帳のインスタンスを起動します。</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivateMemorySize64">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">例に、取得し、関連付けられたプロセスのさまざまなプロパティを表示します。</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivateMemorySize64">
          <source>The example detects when the process exits, and displays its exit code and peak memory statistics.</source>
          <target state="translated">例では、検出プロセスが終了すると、し、終了コードとピーク メモリ統計情報を表示します。</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PrivateMemorySize64">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivateMemorySize64">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivateMemorySize64">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PrivilegedProcessorTime">
          <source>Gets the privileged processor time for this process.</source>
          <target state="translated">このプロセスの特権プロセッサ時間を取得します。</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivilegedProcessorTime">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the amount of time that the process has spent running code inside the operating system core.</source>
          <target state="translated">プロセスが、オペレーティング システム コア内でコードを実行した合計時間を示す <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivilegedProcessorTime">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">次の例では、メモ帳のインスタンスを開始します。</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivilegedProcessorTime">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">例に、取得し、関連付けられたプロセスのさまざまなプロパティを表示します。</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivilegedProcessorTime">
          <source>The example detects when the process exits, and displays the process's exit code.</source>
          <target state="translated">例では、検出プロセスが終了すると、し、プロセスの終了コードを表示します。</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PrivilegedProcessorTime">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PrivilegedProcessorTime">
          <source>You are attempting to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">リモート コンピューターで実行されているプロセスの <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" /&gt;</ph> プロパティにアクセスしようとしています。</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.PrivilegedProcessorTime">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">このプロパティはローカル コンピューターで実行中のプロセスに対してのみ使用可能です。</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivilegedProcessorTime">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.PrivilegedProcessorTime">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessName">
          <source>Gets the name of the process.</source>
          <target state="translated">プロセスの名前を取得します。</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessName">
          <source>The name that the system uses to identify the process to the user.</source>
          <target state="translated">システムで使用する、ユーザーがプロセスを識別するための名前。</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessName">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.ProcessName%2A&gt;</ph> property holds an executable file name, such as Outlook, that does not include the .exe extension or the path.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.ProcessName%2A&gt;</ph>プロパティは、拡張子が .exe またはパスを含まない Outlook など、実行可能ファイル名を保持します。</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessName">
          <source>It is helpful for getting and manipulating all the processes that are associated with the same executable file.</source>
          <target state="translated">取得し、同じ実行可能ファイルに関連付けられているすべてのプロセスを操作することをお勧めします。</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessName">
          <source>On <ph id="ph1">[!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]</ph> operating systems, the <ph id="ph2">&lt;xref:System.Diagnostics.Process.ProcessName%2A&gt;</ph> property may be truncated to 15 characters if the process module information cannot be obtained.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]</ph>オペレーティング システム、<ph id="ph2">&lt;xref:System.Diagnostics.Process.ProcessName%2A&gt;</ph>プロパティはプロセス モジュールの情報を取得できない場合、15 文字に切り捨てられます可能性があります。</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessName">
          <source>You can call <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph>, passing it an executable file name, to retrieve an array that contains every running instance on the specified computer.</source>
          <target state="translated">呼び出すことができます<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcessesByName%2A&gt;</ph>、指定したコンピューター上のすべての実行インスタンスを格納する配列を取得する、実行可能ファイル名を渡します。</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessName">
          <source>You can use this array, for example, to shut down all the running instances of the executable file.</source>
          <target state="translated">たとえば、この配列を使用すると、実行可能ファイルの実行中のすべてのインスタンスをシャット ダウンします。</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessName">
          <source>The process does not have an identifier, or no process is associated with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph>.</source>
          <target state="translated">プロセスに ID がないか、<ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> に関連付けられているプロセスがありません。</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessName">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessName">
          <source>The associated process has exited.</source>
          <target state="translated">関連付けられたプロセスが終了しました。</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessName">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> to <ph id="ph2">&lt;see langword="false" /&gt;</ph> to access this property on Windows 98 and Windows Me.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) です。Windows 98 や Windows Me でこのプロパティにアクセスするには、<ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> を <ph id="ph2">&lt;see langword="false" /&gt;</ph> に設定します。</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessName">
          <source>The process is not on this computer.</source>
          <target state="translated">プロセスはこのコンピューター上のものではありません。</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessName">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessName">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>Gets or sets the processors on which the threads in this process can be scheduled to run.</source>
          <target state="translated">このプロセスでのスレッドの実行をスケジュールできるプロセッサを取得または設定します。</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>A bitmask representing the processors that the threads in the associated process can run on.</source>
          <target state="translated">関連付けられたプロセスのスレッドを実行できるプロセッサを示すビットマスク。</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>The default depends on the number of processors on the computer.</source>
          <target state="translated">既定値は、コンピューターのプロセッサ数によって異なります。</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>The default value is 2 <bpt id="p1">&lt;sup&gt;</bpt>n<ept id="p1">&lt;/sup&gt;</ept> -1, where n is the number of processors.</source>
          <target state="translated">既定値は 2 <bpt id="p1">&lt;sup&gt;</bpt>n<ept id="p1">&lt;/sup&gt;</ept> -1 で、n はプロセッサの数。</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>In Windows 2000 and later, a thread in a process can migrate from processor to processor, with each migration reloading the processor cache.</source>
          <target state="translated">Windows 2000 以降では、プロセスのスレッドがプロセッサ キャッシュの再読み込みの各移行、プロセッサーを移行できます。</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>Under heavy system loads, specifying which processor should run a specific thread can improve performance by reducing the number of times the processor cache is reloaded.</source>
          <target state="translated">重い負荷、プロセッサが特定のスレッドを実行する必要がありますを指定することができますパフォーマンスを向上させる、プロセッサのキャッシュが再読み込みされる回数を減らすことによってです。</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>The association between a processor and a thread is called the processor affinity.</source>
          <target state="translated">プロセッサと、スレッド間の関連付けには、プロセッサのアフィニティは呼び出されます。</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>Each processor is represented as a bit.</source>
          <target state="translated">各プロセッサは、ビットで表されます。</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>Bit 0 is processor one, bit 1 is processor two, and so forth.</source>
          <target state="translated">ビット 0 は、プロセッサ 1、ビット 1、2、プロセッサなどです。</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>If you set a bit to the value 1, the corresponding processor is selected for thread assignment.</source>
          <target state="translated">設定するビット値を 1 に、スレッドの割り当て、対応するプロセッサが選択されます。</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>When you set the <ph id="ph1">&lt;xref:System.Diagnostics.Process.ProcessorAffinity%2A&gt;</ph> value to zero, the operating system's scheduling algorithms set the thread's affinity.</source>
          <target state="translated">設定すると、<ph id="ph1">&lt;xref:System.Diagnostics.Process.ProcessorAffinity%2A&gt;</ph>値を 0、オペレーティング システムには、スレッドの関係にアルゴリズムのセットのスケジューリングします。</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.Process.ProcessorAffinity%2A&gt;</ph> value is set to any nonzero value, the value is interpreted as a bitmask that specifies those processors eligible for selection.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Diagnostics.Process.ProcessorAffinity%2A&gt;</ph>値が 0 以外の値に設定されている、値は選択可能なプロセッサを指定するビット マスクとして解釈されます。</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>The following table shows a selection of <ph id="ph1">&lt;xref:System.Diagnostics.Process.ProcessorAffinity%2A&gt;</ph> values for an eight-processor system.</source>
          <target state="translated">次の表に、選択した<ph id="ph1">&lt;xref:System.Diagnostics.Process.ProcessorAffinity%2A&gt;</ph>8 プロセッサ システム値です。</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>Bitmask</source>
          <target state="translated">ビットマスク</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>Binary value</source>
          <target state="translated">バイナリ値</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>Eligible processors</source>
          <target state="translated">対象となるプロセッサ</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>0x0001</source>
          <target state="translated">0x0001</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>00000000 00000001</source>
          <target state="translated">00000000 00000001</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>0x0003</source>
          <target state="translated">0x0003</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>00000000 00000011</source>
          <target state="translated">00000000 00000011</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>1 and 2</source>
          <target state="translated">1 と 2</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>0x0007</source>
          <target state="translated">0x0007</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>00000000 00000111</source>
          <target state="translated">00000000 00000111</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>1, 2 and 3</source>
          <target state="translated">1、2 および 3</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>0x0009</source>
          <target state="translated">0x0009</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>00000000 00001001</source>
          <target state="translated">00000000 00001001</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>1 and 4</source>
          <target state="translated">1 および 4</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>0x007F</source>
          <target state="translated">0x007F</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>00000000 01111111</source>
          <target state="translated">00000000 01111111</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>1, 2, 3, 4, 5, 6 and 7</source>
          <target state="translated">1、2、3、4、5、6 および 7</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source><ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.ProcessorAffinity" /&gt;</ph> information could not be set or retrieved from the associated process resource.</source>
          <target state="translated">関連付けられているプロセスのリソースから <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.ProcessorAffinity" /&gt;</ph> 情報を設定できないか、取得できませんでした。</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>The process identifier or process handle is zero.</source>
          <target state="translated">プロセス識別子またはプロセス ハンドルが 0 です。</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>(The process has not been started.)</source>
          <target state="translated">(プロセスは開始されていません。)</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>You are attempting to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.ProcessorAffinity" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">リモート コンピューターで実行されているプロセスの <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.ProcessorAffinity" /&gt;</ph> プロパティにアクセスしようとしています。</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">このプロパティはローカル コンピューターで実行中のプロセスに対してのみ使用可能です。</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>The process <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> was not available.</source>
          <target state="translated">プロセス <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> が使用できませんでした。</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>The process has exited.</source>
          <target state="translated">プロセスが終了しています。</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.ProcessorAffinity">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Refresh">
          <source>Discards any information about the associated process that has been cached inside the process component.</source>
          <target state="translated">プロセス コンポーネントにキャッシュされている関連付けられたプロセスに関するすべての情報を破棄します。</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Refresh">
          <source>After <ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph> is called, the first request for information about each property causes the process component to obtain a new value from the associated process.</source>
          <target state="translated">後に<ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph>を呼び出すときは、最初の要求と、関連付けられたプロセスから新しい値を取得するプロセスのコンポーネントの各プロパティについてはします。</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Refresh">
          <source>When a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component is associated with a process resource, the property values of the <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> are immediately populated according to the status of the associated process.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントは、プロセスのリソースのプロパティの値に関連付けられて、<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>はすぐに関連付けられたプロセスの状態に応じて設定されます。</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Refresh">
          <source>If the information about the associated process subsequently changes, those changes are not reflected in the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component's cached values.</source>
          <target state="translated">関連付けられたプロセスに関する情報が、後で変更された場合、それらの変更には反映されません、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントのキャッシュされた値。</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Refresh">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component is a snapshot of the process resource at the time they are associated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントが関連付けられている時のプロセス リソースのスナップショットです。</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Refresh">
          <source>To view the current values for the associated process, call the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph> method.</source>
          <target state="translated">関連付けられたプロセスの現在の値を表示するには、呼び出し、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Refresh%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Refresh">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">次の例では、メモ帳のインスタンスを開始します。</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Refresh">
          <source>It then retrieves the physical memory usage of the associated process at 2 second intervals for a maximum of 10 seconds.</source>
          <target state="translated">2 秒間隔、最大で 10 秒間の関連付けられたプロセスの物理メモリ使用量を取得します。</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Refresh">
          <source>The example detects whether the process exits before 10 seconds have elapsed.</source>
          <target state="translated">この例では、10 秒が経過する前に、プロセスが終了するかどうかを検出します。</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Refresh">
          <source>The example closes the process if it is still running after 10 seconds.</source>
          <target state="translated">例は、10 秒後に実行されている場合に、プロセスを閉じます。</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Refresh">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Refresh">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Responding">
          <source>Gets a value indicating whether the user interface of the process is responding.</source>
          <target state="translated">プロセスのユーザー インターフェイスが応答するかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Responding">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the user interface of the associated process is responding to the system; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">関連付けられたプロセスのユーザー インターフェイスがシステムに応答する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Responding">
          <source>If a process has a user interface, the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Responding%2A&gt;</ph> property contacts the user interface to determine whether the process is responding to user input.</source>
          <target state="translated">プロセスがユーザー インターフェイスを持つ場合、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Responding%2A&gt;</ph>プロパティ、プロセスがユーザー入力に応答しているかどうかを決定するユーザー インターフェイスと通信します。</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Responding">
          <source>If the interface does not respond immediately, the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Responding%2A&gt;</ph> property returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">インターフェイスが、すぐに応答しない場合、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Responding%2A&gt;</ph>プロパティから返される<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Responding">
          <source>Use this property to determine whether the interface of the associated process has stopped responding.</source>
          <target state="translated">このプロパティを使用して、関連付けられたプロセスのインターフェイスの応答が停止したかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Responding">
          <source>If the process does not have a <ph id="ph1">&lt;xref:System.Diagnostics.Process.MainWindowHandle%2A&gt;</ph>, this property returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">プロセスがない場合、 <ph id="ph1">&lt;xref:System.Diagnostics.Process.MainWindowHandle%2A&gt;</ph>、このプロパティを返します<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Responding">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">次の例では、メモ帳のインスタンスを開始します。</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Responding">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">例に、取得し、関連付けられたプロセスのさまざまなプロパティを表示します。</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Responding">
          <source>The example detects when the process exits, and displays the process's exit code.</source>
          <target state="translated">例では、検出プロセスが終了すると、し、プロセスの終了コードを表示します。</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Responding">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> to <ph id="ph2">&lt;see langword="false" /&gt;</ph> to access this property on Windows 98 and Windows Me.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) です。Windows 98 や Windows Me でこのプロパティにアクセスするには、<ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> を <ph id="ph2">&lt;see langword="false" /&gt;</ph> に設定します。</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Responding">
          <source>There is no process associated with this <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> オブジェクトに関連付けられているプロセスはありません。</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Responding">
          <source>You are attempting to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Responding" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">リモート コンピューターで実行されているプロセスの <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Responding" /&gt;</ph> プロパティにアクセスしようとしています。</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Responding">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">このプロパティはローカル コンピューターで実行中のプロセスに対してのみ使用可能です。</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Responding">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Responding">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.SafeHandle">
          <source>Gets the native handle to this process.</source>
          <target state="translated">このプロセスへのネイティブ ハンドルを取得します。</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SafeHandle">
          <source>The native handle to this process.</source>
          <target state="translated">このプロセスへのネイティブ ハンドル。</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SafeHandle">
          <source>The handle is only available if the calling component started the process.</source>
          <target state="translated">ハンドルは呼び出し元のコンポーネントがプロセスを開始した場合にのみ使用します。</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.SessionId">
          <source>Gets the Terminal Services session identifier for the associated process.</source>
          <target state="translated">関連付けられたプロセスのターミナル サービス セッション識別子を取得します。</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SessionId">
          <source>The Terminal Services session identifier for the associated process.</source>
          <target state="translated">関連付けられたプロセスのターミナル サービス セッション識別子。</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SessionId">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.SessionId%2A&gt;</ph> property identifies the session in which the application is currently running.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.SessionId%2A&gt;</ph>プロパティは、アプリケーションが現在実行されているセッションを識別します。</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.SessionId">
          <source>There is no session associated with this process.</source>
          <target state="translated">このプロセスに関連付けられているセッションはありません。</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.SessionId">
          <source>There is no process associated with this session identifier.</source>
          <target state="translated">このセッション識別子に関連付けられているプロセスはありません。</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.SessionId">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.SessionId">
          <source>The associated process is not on this machine.</source>
          <target state="translated">関連付けられたプロセスが、このコンピューター上にありません。</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.SessionId">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.SessionId" /&gt;</ph> property is not supported on Windows 98.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.SessionId" /&gt;</ph> プロパティは Windows 98 ではサポートされていません。</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SessionId">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SessionId">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StandardError">
          <source>Gets a stream used to read the error output of the application.</source>
          <target state="translated">アプリケーションのエラー出力の読み取りに使用されるストリームを取得します。</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.StreamReader" /&gt;</ph> that can be used to read the standard error stream of the application.</source>
          <target state="translated">アプリケーションの標準エラー ストリームの読み取りに使用できる <ph id="ph1">&lt;see cref="T:System.IO.StreamReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>When a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> writes text to its standard error stream, that text is normally displayed on the console.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>テキストがコンソールに通常表示されることを標準エラー ストリームにテキストを書き込みます。</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>By redirecting the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream, you can manipulate or suppress the error output of a process.</source>
          <target state="translated">リダイレクトすることで、<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>ストリームを操作するか、プロセスのエラー出力を抑制します。</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>For example, you can filter the text, format it differently, or write the output to both the console and a designated log file.</source>
          <target state="translated">たとえば、テキストのフィルター処理、異なる書式を設定して、または、コンソールと、指定したログ ファイルの両方に出力を書き込むできます。</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>To use <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>, you must set <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph3">`false`</ph>, and you must set <ph id="ph4">&lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">使用する<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>、設定する必要があります<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType&gt;</ph>に<ph id="ph3">`false`</ph>、設定する必要があります<ph id="ph4">&lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A?displayProperty=nameWithType&gt;</ph>に<ph id="ph5">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>Otherwise, reading from the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream throws an exception.</source>
          <target state="translated">それ以外の場合、読み取り、<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>ストリームは例外をスローします。</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream can be read synchronously or asynchronously.</source>
          <target state="translated">リダイレクトされた<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>同期または非同期でストリームを読み取ることができます。</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>Methods such as <ph id="ph1">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph> perform synchronous read operations on the error output stream of the process.</source>
          <target state="translated">などのメソッド<ph id="ph1">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph>プロセスのエラー出力ストリームの同期読み取り操作を実行します。</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>These synchronous read operations do not complete until the associated <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> writes to its <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream, or closes the stream.</source>
          <target state="translated">これらの同期読み取り操作は、関連するまで完了しません<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>に書き込み、<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>ストリーム、またはストリームを閉じます。</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>In contrast, <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph> starts asynchronous read operations on the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream.</source>
          <target state="translated">これに対し、<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph>で読み取り操作を非同期の開始、<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>This method enables a designated event handler for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</source>
          <target state="translated">このメソッドは、指定されたイベントのハンドラーをストリーム出力を有効にし、直ちにストリーム出力は、イベント ハンドラーに送られます中に、その他の作業を実行できますが、呼び出し元に返されます。</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>Synchronous read operations introduce a dependency between the caller reading from the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream and the child process writing to that stream.</source>
          <target state="translated">同期読み取り操作は、呼び出し元からの読み取り間の依存関係を導入、<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>ストリームと子要素は、そのストリームへの書き込みを処理します。</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>These dependencies can result in deadlock conditions.</source>
          <target state="translated">これらの依存関係は、デッドロックの状態になります。</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>When the caller reads from the redirected stream of a child process, it is dependent on the child.</source>
          <target state="translated">呼び出し元は、子プロセスのリダイレクトされたストリームから読み取り、ときに、子に依存しています。</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The caller waits on the read operation until the child writes to the stream or closes the stream.</source>
          <target state="translated">呼び出し元は、子のストリームに書き込みまたはストリームを閉じるまで、読み取り操作を待機します。</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>When the child process writes enough data to fill its redirected stream, it is dependent on the parent.</source>
          <target state="translated">子プロセスでは、リダイレクトされたストリームを入力するための十分なデータを書き込む、場合に、親に依存しています。</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The child process waits on the next write operation until the parent reads from the full stream or closes the stream.</source>
          <target state="translated">子プロセスは、親のすべてのストリームから読み取りまたはストリームを閉じるまで、次の書き込み操作を待機します。</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The deadlock condition results when the caller and child process wait on each other to complete an operation, and neither can proceed.</source>
          <target state="translated">デッドロックが発生すると、呼び出し元と子プロセスが、操作を完了する相互に待機を続行することもできます。</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>You can avoid deadlocks by evaluating dependencies between the caller and child process.</source>
          <target state="translated">呼び出し元と子プロセスの間の依存関係を評価することにより、デッドロックを回避できます。</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The following C# code, for example, shows how to read from a redirected stream and wait for the child process to exit.</source>
          <target state="translated">次の c# コードでは、たとえば、リダイレクトされたストリームから読み取るし、子プロセスを終了するまで待機する方法を示します。</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The code example avoids a deadlock condition by calling <ph id="ph1">`p.StandardError.ReadToEnd`</ph> before <ph id="ph2">`p.WaitForExit`</ph>.</source>
          <target state="translated">このコード例を呼び出して、デッドロック状態を回避できます<ph id="ph1">`p.StandardError.ReadToEnd`</ph>する前に<ph id="ph2">`p.WaitForExit`</ph>です。</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>A deadlock condition can result if the parent process calls <ph id="ph1">`p.WaitForExit`</ph> before <ph id="ph2">`p.StandardError.ReadToEnd`</ph> and the child process writes enough text to fill the redirected stream.</source>
          <target state="translated">親の呼び出しを処理する場合、デッドロック状態が発生することができます<ph id="ph1">`p.WaitForExit`</ph>する前に<ph id="ph2">`p.StandardError.ReadToEnd`</ph>子プロセスがリダイレクトされたストリームを入力するための十分なテキストを書き込みます。</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The parent process would wait indefinitely for the child process to exit.</source>
          <target state="translated">親プロセスは、子プロセスが終了する無期限に待機します。</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The child process would wait indefinitely for the parent to read from the full <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream.</source>
          <target state="translated">子プロセスが無期限に待機する、フル アクセスから読み取りに親<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>There is a similar issue when you read all text from both the standard output and standard error streams.</source>
          <target state="translated">同様の問題があるすべてのテキストを標準出力と標準エラー ストリームの両方から読み取るときにします。</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The following C# code, for example, performs a read operation on both streams.</source>
          <target state="translated">次の c# コードでは、たとえば、両方のストリームで読み取り操作を実行します。</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The code example avoids the deadlock condition by performing asynchronous read operations on the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream.</source>
          <target state="translated">コード例は、非同期の読み取り操作を実行してデッドロックの状態を回避できます、<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>A deadlock condition results if the parent process calls <ph id="ph1">`p.StandardOutput.ReadToEnd`</ph> followed by <ph id="ph2">`p.StandardError.ReadToEnd`</ph> and the child process writes enough text to fill its error stream.</source>
          <target state="translated">親の呼び出しを処理する場合に、デッドロック状態が結果<ph id="ph1">`p.StandardOutput.ReadToEnd`</ph>続く<ph id="ph2">`p.StandardError.ReadToEnd`</ph>子プロセスが、エラー ストリームを入力するための十分なテキストを書き込みます。</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The parent process would wait indefinitely for the child process to close its <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream.</source>
          <target state="translated">親プロセスは、子プロセスが終了するを無期限に待機その<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The child process would wait indefinitely for the parent to read from the full <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream.</source>
          <target state="translated">子プロセスが無期限に待機する、フル アクセスから読み取りに親<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>You can use asynchronous read operations to avoid these dependencies and their deadlock potential.</source>
          <target state="translated">非同期読み取り操作を使用して、これらの依存関係とデッドロックの可能性を回避することができます。</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>Alternately, you can avoid the deadlock condition by creating two threads and reading the output of each stream on a separate thread.</source>
          <target state="translated">代わりに、別のスレッドで各ストリームの出力の読み取りを 2 つのスレッドを作成して、デッドロックを回避できます。</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>You cannot mix asynchronous and synchronous read operations on a redirected stream.</source>
          <target state="translated">リダイレクトされたストリームで読み取り操作を非同期および同期を混在させることはできません。</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>Once the redirected stream of a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> is opened in either asynchronous or synchronous mode, all further read operations on that stream must be in the same mode.</source>
          <target state="translated">リダイレクトされたストリームの 1 回、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>が開かれている、非同期または同期モードでもさらに読み取りそのストリームに対して操作が同じモードである必要があります。</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>For example, do not follow <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph> with a call to <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph> on the <ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream, or vice versa.</source>
          <target state="translated">たとえばに従っていません<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginErrorReadLine%2A&gt;</ph>への呼び出しに<ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>で、<ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>ストリーム、またはその逆です。</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>However, you can read two different streams in different modes.</source>
          <target state="translated">ただし、さまざまなモードで異なる 2 つのストリームを読み取ることができます。</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>For example, you can call <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> and then call <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph> for the <ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream.</source>
          <target state="translated">たとえば、呼び出す<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>およびを呼び出す<ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>の<ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>The following example uses the <ph id="ph1">`net use`</ph> command together with a user supplied argument to map a network resource.</source>
          <target state="translated">次の例では、<ph id="ph1">`net use`</ph>コマンドをユーザーがネットワーク リソースをマップする引数を指定します。</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>It then reads the standard error stream of the net command and writes it to console.</source>
          <target state="translated">Net コマンドの標準エラー ストリームを読み取り、コンソールに書き込みます。</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StandardError">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> stream has not been defined for redirection; ensure <ph id="ph2">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /&gt;</ph> is set to <ph id="ph3">&lt;see langword="true" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> is set to <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> ストリームがリダイレクト用に定義されていません。<ph id="ph2">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /&gt;</ph> が <ph id="ph3">&lt;see langword="true" /&gt;</ph> に設定されており、<ph id="ph4">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> が <ph id="ph5">&lt;see langword="false" /&gt;</ph> に設定されていることを確認してください。</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StandardError">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StandardError">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> stream has been opened for asynchronous read operations with <ph id="ph2">&lt;see cref="M:System.Diagnostics.Process.BeginErrorReadLine" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> ストリームが、<ph id="ph2">&lt;see cref="M:System.Diagnostics.Process.BeginErrorReadLine" /&gt;</ph> を使用した非同期読み取り操作のために開いています。</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardError">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StandardInput">
          <source>Gets a stream used to write the input of the application.</source>
          <target state="translated">アプリケーションの入力の書き込みに使用されるストリームを取得します。</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardInput">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> that can be used to write the standard input stream of the application.</source>
          <target state="translated">アプリケーションの標準入力ストリームの書き込みに使用できる <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardInput">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> can read input text from its standard input stream, typically the keyboard.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>標準入力ストリーム、通常は、キーボードから入力テキストを読み取ることができます。</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardInput">
          <source>By redirecting the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;</ph> stream, you can programmatically specify the input.</source>
          <target state="translated">リダイレクトすることで、<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;</ph>ストリームの入力をプログラムで指定できます。</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardInput">
          <source>For example, instead of using keyboard input, you can provide text from the contents of a designated file or output from another application.</source>
          <target state="translated">たとえば、キーボード入力を使用する代わりに、指定したファイルの内容からテキストまたは別のアプリケーションからの出力を提供できます。</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardInput">
          <source>To use <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;</ph>, you must set <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph3">`false`</ph>, and you must set <ph id="ph4">&lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">使用する<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;</ph>、設定する必要があります<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType&gt;</ph>に<ph id="ph3">`false`</ph>、設定する必要があります<ph id="ph4">&lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A?displayProperty=nameWithType&gt;</ph>に<ph id="ph5">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardInput">
          <source>Otherwise, writing to the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;</ph> stream throws an exception.</source>
          <target state="translated">それ以外の場合、書き込み、<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;</ph>ストリームは例外をスローします。</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardInput">
          <source>The following example illustrates how to redirect the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;</ph> stream of a process.</source>
          <target state="translated">次の例は、リダイレクトする方法を示しています、<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;</ph>プロセスのストリーム。</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardInput">
          <source>The example starts the <ph id="ph1">`sort`</ph> command with redirected input.</source>
          <target state="translated">この例の先頭、<ph id="ph1">`sort`</ph>コマンド入力がリダイレクトされたとします。</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardInput">
          <source>It then prompts the user for text, and passes that to the <ph id="ph1">`sort`</ph> process by means of the redirected <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;</ph> stream.</source>
          <target state="translated">次に、テキストの入力を求めますを渡して、<ph id="ph1">`sort`</ph>プロセスによってリダイレクトされた<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardInput%2A&gt;</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardInput">
          <source>The <ph id="ph1">`sort`</ph> results are displayed to the user on the console.</source>
          <target state="translated"><ph id="ph1">`sort`</ph>結果は、コンソールのユーザーに表示されます。</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StandardInput">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardInput" /&gt;</ph> stream has not been defined because <ph id="ph2">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" /&gt;</ph> is set to <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" /&gt;</ph> が <ph id="ph3">&lt;see langword="false" /&gt;</ph> に設定されているため、<ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardInput" /&gt;</ph> ストリームが定義されませんでした。</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardInput">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardInput">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>Gets a stream used to read the textual output of the application.</source>
          <target state="translated">アプリケーションのテキスト出力の読み取りに使用されるストリームを取得します。</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.StreamReader" /&gt;</ph> that can be used to read the standard output stream of the application.</source>
          <target state="translated">アプリケーションの標準出力ストリームの読み取りに使用できる <ph id="ph1">&lt;see cref="T:System.IO.StreamReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>When a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> writes text to its standard stream, that text is normally displayed on the console.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>テキストがコンソールに通常表示されることを標準的なストリームにテキストを書き込みます。</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>By redirecting the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream, you can manipulate or suppress the output of a process.</source>
          <target state="translated">リダイレクトすることで、<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>ストリームを操作するか、プロセスの出力を抑制します。</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>For example, you can filter the text, format it differently, or write the output to both the console and a designated log file.</source>
          <target state="translated">たとえば、テキストのフィルター処理、異なる書式を設定して、または、コンソールと、指定したログ ファイルの両方に出力を書き込むできます。</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>To use <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>, you must set <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph3">`false`</ph>, and you must set <ph id="ph4">&lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">使用する<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>、設定する必要があります<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A?displayProperty=nameWithType&gt;</ph>に<ph id="ph3">`false`</ph>、設定する必要があります<ph id="ph4">&lt;xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A?displayProperty=nameWithType&gt;</ph>に<ph id="ph5">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>Otherwise, reading from the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream throws an exception.</source>
          <target state="translated">それ以外の場合、読み取り、<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>ストリームは例外をスローします。</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream can be read synchronously or asynchronously.</source>
          <target state="translated">リダイレクトされた<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>同期または非同期でストリームを読み取ることができます。</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>Methods such as <ph id="ph1">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph> perform synchronous read operations on the output stream of the process.</source>
          <target state="translated">などのメソッド<ph id="ph1">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph>プロセスの出力ストリームの同期読み取り操作を実行します。</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>These synchronous read operations do not complete until the associated <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> writes to its <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream, or closes the stream.</source>
          <target state="translated">これらの同期読み取り操作は、関連するまで完了しません<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>に書き込み、<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>ストリーム、またはストリームを閉じます。</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>In contrast, <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> starts asynchronous read operations on the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream.</source>
          <target state="translated">これに対し、<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>で読み取り操作を非同期の開始、<ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>This method enables a designated event handler for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</source>
          <target state="translated">このメソッドは、指定されたイベントのハンドラーをストリーム出力を有効にし、直ちにストリーム出力は、イベント ハンドラーに送られます中に、その他の作業を実行できますが、呼び出し元に返されます。</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>Synchronous read operations introduce a dependency between the caller reading from the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream and the child process writing to that stream.</source>
          <target state="translated">同期読み取り操作は、呼び出し元からの読み取り間の依存関係を導入、<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>ストリームと子要素は、そのストリームへの書き込みを処理します。</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>These dependencies can result in deadlock conditions.</source>
          <target state="translated">これらの依存関係は、デッドロックの状態になります。</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>When the caller reads from the redirected stream of a child process, it is dependent on the child.</source>
          <target state="translated">呼び出し元は、子プロセスのリダイレクトされたストリームから読み取り、ときに、子に依存しています。</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The caller waits on the read operation until the child writes to the stream or closes the stream.</source>
          <target state="translated">呼び出し元は、子のストリームに書き込みまたはストリームを閉じるまで、読み取り操作を待機します。</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>When the child process writes enough data to fill its redirected stream, it is dependent on the parent.</source>
          <target state="translated">子プロセスでは、リダイレクトされたストリームを入力するための十分なデータを書き込む、場合に、親に依存しています。</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The child process waits on the next write operation until the parent reads from the full stream or closes the stream.</source>
          <target state="translated">子プロセスは、親のすべてのストリームから読み取りまたはストリームを閉じるまで、次の書き込み操作を待機します。</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The deadlock condition results when the caller and child process wait on each other to complete an operation, and neither can proceed.</source>
          <target state="translated">デッドロックが発生すると、呼び出し元と子プロセスが、操作を完了する相互に待機を続行することもできます。</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>You can avoid deadlocks by evaluating dependencies between the caller and child process.</source>
          <target state="translated">呼び出し元と子プロセスの間の依存関係を評価することにより、デッドロックを回避できます。</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The following C# code, for example, shows how to read from a redirected stream and wait for the child process to exit.</source>
          <target state="translated">次の c# コードでは、たとえば、リダイレクトされたストリームから読み取るし、子プロセスを終了するまで待機する方法を示します。</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The code example avoids a deadlock condition by calling <ph id="ph1">`p.StandardOutput.ReadToEnd`</ph> before <ph id="ph2">`p.WaitForExit`</ph>.</source>
          <target state="translated">このコード例を呼び出して、デッドロック状態を回避できます<ph id="ph1">`p.StandardOutput.ReadToEnd`</ph>する前に<ph id="ph2">`p.WaitForExit`</ph>です。</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>A deadlock condition can result if the parent process calls <ph id="ph1">`p.WaitForExit`</ph> before <ph id="ph2">`p.StandardOutput.ReadToEnd`</ph> and the child process writes enough text to fill the redirected stream.</source>
          <target state="translated">親の呼び出しを処理する場合、デッドロック状態が発生することができます<ph id="ph1">`p.WaitForExit`</ph>する前に<ph id="ph2">`p.StandardOutput.ReadToEnd`</ph>子プロセスがリダイレクトされたストリームを入力するための十分なテキストを書き込みます。</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The parent process would wait indefinitely for the child process to exit.</source>
          <target state="translated">親プロセスは、子プロセスが終了する無期限に待機します。</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The child process would wait indefinitely for the parent to read from the full <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream.</source>
          <target state="translated">子プロセスが無期限に待機する、フル アクセスから読み取りに親<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>There is a similar issue when you read all text from both the standard output and standard error streams.</source>
          <target state="translated">同様の問題があるすべてのテキストを標準出力と標準エラー ストリームの両方から読み取るときにします。</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The following C# code, for example, performs a read operation on both streams.</source>
          <target state="translated">次の c# コードでは、たとえば、両方のストリームで読み取り操作を実行します。</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The code example avoids the deadlock condition by performing asynchronous read operations on the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream.</source>
          <target state="translated">コード例は、非同期の読み取り操作を実行してデッドロックの状態を回避できます、<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>A deadlock condition results if the parent process calls <ph id="ph1">`p.StandardOutput.ReadToEnd`</ph> followed by <ph id="ph2">`p.StandardError.ReadToEnd`</ph> and the child process writes enough text to fill its error stream.</source>
          <target state="translated">親の呼び出しを処理する場合に、デッドロック状態が結果<ph id="ph1">`p.StandardOutput.ReadToEnd`</ph>続く<ph id="ph2">`p.StandardError.ReadToEnd`</ph>子プロセスが、エラー ストリームを入力するための十分なテキストを書き込みます。</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The parent process would wait indefinitely for the child process to close its <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream.</source>
          <target state="translated">親プロセスは、子プロセスが終了するを無期限に待機その<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The child process would wait indefinitely for the parent to read from the full <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream.</source>
          <target state="translated">子プロセスが無期限に待機する、フル アクセスから読み取りに親<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>You can use asynchronous read operations to avoid these dependencies and their deadlock potential.</source>
          <target state="translated">非同期読み取り操作を使用して、これらの依存関係とデッドロックの可能性を回避することができます。</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>Alternately, you can avoid the deadlock condition by creating two threads and reading the output of each stream on a separate thread.</source>
          <target state="translated">代わりに、別のスレッドで各ストリームの出力の読み取りを 2 つのスレッドを作成して、デッドロックを回避できます。</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>You cannot mix asynchronous and synchronous read operations on a redirected stream.</source>
          <target state="translated">リダイレクトされたストリームで読み取り操作を非同期および同期を混在させることはできません。</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>Once the redirected stream of a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> is opened in either asynchronous or synchronous mode, all further read operations on that stream must be in the same mode.</source>
          <target state="translated">リダイレクトされたストリームの 1 回、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>が開かれている、非同期または同期モードでもさらに読み取りそのストリームに対して操作が同じモードである必要があります。</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>For example, do not follow <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> with a call to <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph> on the <ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream, or vice versa.</source>
          <target state="translated">たとえばに従っていません<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>への呼び出しに<ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>で、<ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph>ストリーム、またはその逆です。</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>However, you can read two different streams in different modes.</source>
          <target state="translated">ただし、さまざまなモードで異なる 2 つのストリームを読み取ることができます。</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>For example, you can call <ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph> and then call <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph> for the <ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream.</source>
          <target state="translated">たとえば、呼び出す<ph id="ph1">&lt;xref:System.Diagnostics.Process.BeginOutputReadLine%2A&gt;</ph>およびを呼び出す<ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph>の<ph id="ph3">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>ストリーム。</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The following example runs the ipconfig.exe command and redirects its standard output to the example’s console window.</source>
          <target state="translated">次の例では、ipconfig.exe コマンドを実行し、例のコンソール ウィンドウにその標準の出力をリダイレクトします。</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> stream has not been defined for redirection; ensure <ph id="ph2">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /&gt;</ph> is set to <ph id="ph3">&lt;see langword="true" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> is set to <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> ストリームがリダイレクト用に定義されていません。<ph id="ph2">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /&gt;</ph> が <ph id="ph3">&lt;see langword="true" /&gt;</ph> に設定されており、<ph id="ph4">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> が <ph id="ph5">&lt;see langword="false" /&gt;</ph> に設定されていることを確認してください。</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StandardOutput">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> stream has been opened for asynchronous read operations with <ph id="ph2">&lt;see cref="M:System.Diagnostics.Process.BeginOutputReadLine" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> ストリームが、<ph id="ph2">&lt;see cref="M:System.Diagnostics.Process.BeginOutputReadLine" /&gt;</ph> を使用した非同期読み取り操作のために開いています。</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StandardOutput">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Process">
          <source>Starts a process resource and associates it with a <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component.</source>
          <target state="translated">プロセス リソースを起動し、<ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントに関連付けます。</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start">
          <source>Starts (or reuses) the process resource that is specified by the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StartInfo" /&gt;</ph> property of this <ph id="ph2">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component and associates it with the component.</source>
          <target state="translated">この <ph id="ph2">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントの <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StartInfo" /&gt;</ph> プロパティで指定されたプロセス リソースを起動 (または再利用) し、コンポーネントに関連付けます。</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a process resource is started; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if no new process resource is started (for example, if an existing process is reused).</source>
          <target state="translated">プロセス リソースが起動された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。新しいプロセス リソースが起動されなかった場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph> (既存のプロセスを再利用した場合など)。</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Use this overload to start a process resource and associate it with the current <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component.</source>
          <target state="translated">このオーバー ロードを使用してプロセス リソースを起動し、現在に関連付ける<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントです。</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>The return value <ph id="ph1">`true`</ph> indicates that a new process resource was started.</source>
          <target state="translated">戻り値<ph id="ph1">`true`</ph>新しいプロセス リソースが開始されたことを示します。</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>If the process resource specified by the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> member of the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property is already running on the computer, no additional process resource is started.</source>
          <target state="translated">プロセス リソースがで指定された場合、<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>のメンバー、<ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>プロパティは、コンピューターで既に実行されて、その他のプロセス リソースを起動していません。</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Instead, the running process resource is reused and <ph id="ph1">`false`</ph> is returned.</source>
          <target state="translated">代わりに、実行中のプロセス リソースを再利用および<ph id="ph1">`false`</ph>が返されます。</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>You can start a ClickOnce application by specifying the location (for example, a Web address) from which you originally installed the application.</source>
          <target state="translated">ClickOnce アプリケーションを起動するには、アプリケーションのインストール元元となる場所 (たとえば、Web アドレス) を指定します。</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Do not start a ClickOnce application by specifying its installed location on your hard drive.</source>
          <target state="translated">ハード ドライブ上のインストール場所を指定することで、ClickOnce アプリケーションは開始されません。</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>If you are using Visual Studio, this overload of the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method is the one that you insert into your code after you drag a <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> component onto the designer.</source>
          <target state="translated">Visual Studio でのこのオーバー ロードを使用している場合、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>メソッドは、ドラッグした後に、コードに挿入する 1 つ、<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントをデザイナーにします。</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Use the <ph id="ph1">`Properties`</ph> window to expand the <ph id="ph2">`StartInfo`</ph> category and write the appropriate value into the <ph id="ph3">`FileName`</ph> property.</source>
          <target state="translated">使用して、<ph id="ph1">`Properties`</ph>ウィンドウを展開し、<ph id="ph2">`StartInfo`</ph>カテゴリに適切な値を書き込む、<ph id="ph3">`FileName`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Your changes will appear in the form's <ph id="ph1">`InitializeComponent`</ph> procedure.</source>
          <target state="translated">フォームの変更内容が表示されます<ph id="ph1">`InitializeComponent`</ph>プロシージャです。</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>This overload of <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> is not a <ph id="ph2">`static`</ph> method.</source>
          <target state="translated">このオーバー ロード<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>されませんが、<ph id="ph2">`static`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>You must call it from an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> class.</source>
          <target state="translated">インスタンスから呼び出す必要があります、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Before calling <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>, you must first specify <ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property information for this <ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph> instance, because that information is used to determine the process resource to start.</source>
          <target state="translated">呼び出しの前に<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>、最初に指定する必要があります<ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>プロパティについては、この<ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンスは、その情報を使用してプロセス リソースを開始するか判断するためです。</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>The other overloads of the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method are <ph id="ph2">`static`</ph> members.</source>
          <target state="translated">他のオーバー ロード、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>メソッドは<ph id="ph2">`static`</ph>メンバー。</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>You do not need to create an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component before you call those overloads of the method.</source>
          <target state="translated">インスタンスを作成する必要はありません、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネント、メソッドのこれらのオーバー ロードを呼び出す前にします。</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Instead, you can call <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> class itself, and a new <ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph> component is created if the process was started.</source>
          <target state="translated">代わりに、呼び出すことができます<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>の<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>クラス自体、および新しい<ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph>プロセスが開始された場合、コンポーネントを作成します。</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Or, <ph id="ph1">`null`</ph> is returned if a process was reused.</source>
          <target state="translated">または、<ph id="ph1">`null`</ph>かどうか、プロセスを再利用が返されます。</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>The process resource is automatically associated with the new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component that is returned by the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method.</source>
          <target state="translated">プロセス リソースに自動的に関連付けられて、新しい<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントによって返される、<ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> members can be used to duplicate the functionality of the <ph id="ph2">`Run`</ph> dialog box of the Windows <ph id="ph3">`Start`</ph> menu.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>メンバーは、の機能を複製するために使用できます、 <ph id="ph2">`Run`</ph>  ダイアログ ボックス、Windows の<ph id="ph3">`Start`</ph>メニュー。</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Anything that can be typed into a command line can be started by setting the appropriate values in the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property.</source>
          <target state="translated">コマンドラインに入力できるもので、適切な値を設定して開始できます、<ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>The only <ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property that must be set is the <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property.</source>
          <target state="translated">唯一<ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>プロパティを設定する必要がありますが、<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property does not have to be an executable file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>プロパティは実行可能ファイルは指定する必要はありません。</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>It can be of any file type for which the extension has been associated with an application that is installed on the system.</source>
          <target state="translated">任意の拡張機能は、システムにインストールされているアプリケーションに関連付けられたファイルの種類のことができます。</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>For example, the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property can have a .txt extension if you have associated text files with an editor, such as Notepad, or it can have a .doc extension if you have associated.doc files with a word processing tool, such as Microsoft Word.</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>か、テキスト ファイルをメモ帳などのエディターに関連付けられた Microsoft Word などのワード プロセッシング ツールを使用して関連付けてファイルがある場合、.doc 拡張子を持つことができますが、プロパティは .txt 拡張子を持つことができます。</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>In the command line, you can specify actions to take for certain types of files.</source>
          <target state="translated">コマンド ラインでは、特定の種類のファイルに対して実行するアクションを指定できます。</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>For example, you can print documents or edit text files.</source>
          <target state="translated">たとえば、ドキュメントを印刷またはテキスト ファイルを編集できます。</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Specify these actions using the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt;</ph> member of the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property.</source>
          <target state="translated">使用してこれらのアクションを指定、<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt;</ph>のメンバー、<ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>For other types of files, you can specify command-line arguments when you start the file from the <ph id="ph1">`Run`</ph> dialog box.</source>
          <target state="translated">ファイルを起動するときに他の種類のファイルには、コマンドライン引数を指定することができます、 <ph id="ph1">`Run`</ph>  ダイアログ ボックス。</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>For example, you can pass a URL as an argument if you specify your browser as the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>.</source>
          <target state="translated">たとえば、することができます、URL 引数として渡すとしてブラウザーを指定する場合、<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>These arguments can be specified in the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property's <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt;</ph> member.</source>
          <target state="translated">これらの引数を指定することができます、<ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>プロパティの<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt;</ph>メンバー。</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>If you have a path variable declared in your system using quotes, you must fully qualify that path when starting any process found in that location.</source>
          <target state="translated">引用符を使用して、システムで宣言されているパス変数があれば、その場所で見つかったすべてのプロセスを開始するときにそのパスを完全に修飾する必要があります。</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Otherwise, the system will not find the path.</source>
          <target state="translated">それ以外の場合、システムには、パスは見つかりません。</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>For example, if <ph id="ph1">`c:\mypath`</ph> is not in your path, and you add it using quotation marks: <ph id="ph2">`path = %path%;"c:\mypath"`</ph>, you must fully qualify any process in <ph id="ph3">`c:\mypath`</ph> when starting it.</source>
          <target state="translated">たとえば場合、<ph id="ph1">`c:\mypath`</ph>パスには引用符を使用して追加して:<ph id="ph2">`path = %path%;"c:\mypath"`</ph>のすべてのプロセスを完全に修飾する必要があります<ph id="ph3">`c:\mypath`</ph>開始するとき。</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>ASP.NET Web page and server control code executes in the context of the ASP.NET worker process on the Web server.</source>
          <target state="translated">ASP.NET Web ページおよびサーバー コントロールのコードは、Web サーバー上の ASP.NET ワーカー プロセスのコンテキストで実行されます。</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>If you use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method in an ASP.NET Web page or server control, the new process executes on the Web server with restricted permissions.</source>
          <target state="translated">使用する場合、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>メソッドは、ASP.NET Web ページまたはサーバー コントロールで、新しいプロセスが制限されたアクセス許可に Web サーバーで実行します。</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>The process does not start in the same context as the client browser, and does not have access to the user desktop.</source>
          <target state="translated">プロセスは、クライアント ブラウザーと同じコンテキストで起動しないがユーザーのデスクトップにアクセスできません。</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Whenever you use <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> to start a process, you might need to close it or you risk losing system resources.</source>
          <target state="translated">使用するたびに<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>を閉じるには必要があります、プロセスを開始するにまたはシステム リソースが失われる可能性です。</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Close processes using <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>.</source>
          <target state="translated">使用して閉じるプロセス<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>You can check whether a process has already been closed by using its <ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> property.</source>
          <target state="translated">使用して、プロセスが既に閉じられているかどうかを確認することができます、<ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>A note about apartment states in managed threads is necessary here.</source>
          <target state="translated">マネージ スレッドのアパートメント状態に関する注記がここで必要です。</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>When <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph> is <ph id="ph2">`true`</ph> on the process component's <ph id="ph3">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property, make sure you have set a threading model on your application by setting the attribute <ph id="ph4">`[STAThread]`</ph> on the <ph id="ph5">`main()`</ph> method.</source>
          <target state="translated">ときに<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph>は<ph id="ph2">`true`</ph>プロセス コンポーネントの<ph id="ph3">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>プロパティ、属性を設定して、アプリケーションで、スレッド モデルを設定するかどうかを確認<ph id="ph4">`[STAThread]`</ph>上、<ph id="ph5">`main()`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Otherwise, a managed thread can be in an <ph id="ph1">`unknown`</ph> state or put in the <ph id="ph2">`MTA`</ph> state, the latter of which conflicts with <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph> being <ph id="ph4">`true`</ph>.</source>
          <target state="translated">それ以外の場合、管理対象に実行できるスレッド、<ph id="ph1">`unknown`</ph>状態かの配置、 <ph id="ph2">`MTA`</ph> 、状態と競合するのには、後者<ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph>される<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>Some methods require that the apartment state not be <ph id="ph1">`unknown`</ph>.</source>
          <target state="translated">一部のメソッドは、アパートメント状態でないことが必要<ph id="ph1">`unknown`</ph>です。</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>If the state is not explicitly set, when the application encounters such a method, it defaults to <ph id="ph1">`MTA`</ph>, and once set, the apartment state cannot be changed.</source>
          <target state="translated">状態が明示的に設定されていない場合、アプリケーションは、このようなメソッドを検出すると、既定値は<ph id="ph1">`MTA`</ph>、一度設定したら、アパートメントの状態は変更できません。</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>However, <ph id="ph1">`MTA`</ph> causes an exception to be thrown when the operating system shell is managing the thread.</source>
          <target state="translated">ただし、<ph id="ph1">`MTA`</ph>オペレーティング システムのシェルが、スレッドを管理するときにスローされる例外が発生します。</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>The following example uses an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> class to start a process.</source>
          <target state="translated">次の例のインスタンスを使用して、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>クラス、プロセスを開始します。</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start">
          <source>No file name was specified in the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component's <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.StartInfo" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントの <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.StartInfo" /&gt;</ph> にファイル名が指定されませんでした。</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start">
          <source>-or- The <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> member of the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.StartInfo" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph> while <ph id="ph4">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" /&gt;</ph>, <ph id="ph5">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /&gt;</ph>, or <ph id="ph6">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /&gt;</ph> is <ph id="ph7">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">あるいは、<ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.StartInfo" /&gt;</ph> プロパティの<ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> メンバーは <ph id="ph3">&lt;see langword="true" /&gt;</ph> ですが、<ph id="ph4">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" /&gt;</ph>、<ph id="ph5">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /&gt;</ph>、または <ph id="ph6">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /&gt;</ph> は <ph id="ph7">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start">
          <source>There was an error in opening the associated file.</source>
          <target state="translated">関連付けられているファイルを開いているときにエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start">
          <source>The process object has already been disposed.</source>
          <target state="translated">プロセス オブジェクトは既に破棄されています。</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start">
          <source>Method not supported on operating systems without shell support such as Nano Server (.NET Core only).</source>
          <target state="translated">メソッドはシェルがサポートされていない Nano Server (.NET Core のみ) などのオペレーティング システムではサポートされていません。</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessStartInfo" /&gt;</ph> that contains the information that is used to start the process, including the file name and any command-line arguments.</source>
          <target state="translated">ファイル名やコマンド ライン引数など、プロセスの起動に使用する情報が格納されている <ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessStartInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Starts the process resource that is specified by the parameter containing process start information (for example, the file name of the process to start) and associates the resource with a new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component.</source>
          <target state="translated">プロセス起動情報 (起動するプロセスのファイル名など) が格納されているパラメーターで指定されたプロセス リソースを起動し、リソースを新しい <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントに関連付けます。</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> that is associated with the process resource, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no process resource is started.</source>
          <target state="translated">プロセス リソースに関連付けられている新しい <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph>。プロセス リソースが起動されていない場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Note that a new process that’s started alongside already running instances of the same process will be independent from the others.</source>
          <target state="translated">同じプロセスのインスタンスが既に実行されているときに起動された新しいプロセスは、他のインスタンスから独立します。</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>In addition, Start may return a non-null Process with its <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> property already set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">また、Start では、<ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> プロパティが既に <ph id="ph2">&lt;see langword="true" /&gt;</ph> に設定されている null 以外の Process が返される場合があります。</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>In this case, the started process may have activated an existing instance of itself and then exited.</source>
          <target state="translated">その場合、起動されたプロセス自体の既存のインスタンスがアクティブ化され、その後に終了されることがあります。</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Use this overload to start a process resource by specifying a <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph> instance.</source>
          <target state="translated">指定してプロセス リソースを開始するこのオーバー ロードを使用して、<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The overload associates the resource with a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> object.</source>
          <target state="translated">オーバー ロードは、新しいリソースに関連付けます<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>If the address of the executable file to start is a URL, the process is not started and <ph id="ph1">`null`</ph> is returned.</source>
          <target state="translated">起動する実行可能ファイルのアドレスが URL である場合は、プロセスが開始されていないと<ph id="ph1">`null`</ph>が返されます。</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>This overload lets you start a process without first creating a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">このオーバー ロードでは、作成しなくても、新しいプロセスを開始できます。<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Using this overload with a <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph> parameter is an alternative to the explicit steps of creating a new <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> instance, setting its <ph id="ph3">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> properties, and calling <ph id="ph4">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> for the <ph id="ph5">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">したこのオーバー ロードを使用して、<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph>パラメーターが新たに作成するの明示的な手順を実行する代わりに<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンス、設定、<ph id="ph3">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>プロパティ、および呼び出し元<ph id="ph4">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>の<ph id="ph5">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Using a <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph> instance as the parameter lets you call <ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> with the most control over what is passed into the call to start the process.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph>インスタンスのように、パラメーターを使用して、呼び出すできます<ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>を最大限に制御をプロセスを開始する呼び出しに渡される内容がします。</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>If you need to pass only a file name or a file name and arguments, it is not necessary to create a new <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph> instance, although that is an option.</source>
          <target state="translated">のみ、ファイル名またはファイル名と引数を渡す必要がある場合は、新しいを作成する必要はありません<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph>オプションですが、インスタンスします。</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The only <ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A?displayProperty=nameWithType&gt;</ph> property that must be set is the <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property.</source>
          <target state="translated">唯一<ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A?displayProperty=nameWithType&gt;</ph>プロパティを設定する必要がありますが、<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property does not need to represent an executable file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>プロパティは、実行可能ファイルを表す必要はありません。</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>It can be of any file type for which the extension has been associated with an application that is installed on the system.</source>
          <target state="translated">任意の拡張機能は、システムにインストールされているアプリケーションに関連付けられたファイルの種類のことができます。</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>For example, the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property can have a .txt extension if you have associated text files with an editor, such as Notepad, or it can have a .doc extension if you have associated.doc files with a word processing tool, such as Microsoft Word.</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>か、テキスト ファイルをメモ帳などのエディターに関連付けられた Microsoft Word などのワード プロセッシング ツールを使用して関連付けてファイルがある場合、.doc 拡張子を持つことができますが、プロパティは .txt 拡張子を持つことができます。</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>You can start a ClickOnce application by specifying the location (for example, a Web address) from which you originally installed the application.</source>
          <target state="translated">ClickOnce アプリケーションを起動するには、アプリケーションのインストール元元となる場所 (たとえば、Web アドレス) を指定します。</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Do not start a ClickOnce application by specifying its installed location on your hard drive.</source>
          <target state="translated">ハード ドライブ上のインストール場所を指定することで、ClickOnce アプリケーションは開始されません。</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.Password%2A?displayProperty=nameWithType&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> instance are set, the unmanaged <ph id="ph4">`CreateProcessWithLogonW`</ph> function is called, which starts the process in a new window even if the <ph id="ph5">&lt;xref:System.Diagnostics.ProcessStartInfo.CreateNoWindow%2A?displayProperty=nameWithType&gt;</ph> property value is <ph id="ph6">`true`</ph> or the <ph id="ph7">&lt;xref:System.Diagnostics.ProcessStartInfo.WindowStyle%2A?displayProperty=nameWithType&gt;</ph> property value is <ph id="ph8">&lt;xref:System.Diagnostics.ProcessWindowStyle.Hidden?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.Password%2A?displayProperty=nameWithType&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>インスタンスが設定アンマネージ<ph id="ph4">`CreateProcessWithLogonW`</ph>関数が呼び出されると、新しいウィンドウでも場合に、プロセスが開始する、<ph id="ph5">&lt;xref:System.Diagnostics.ProcessStartInfo.CreateNoWindow%2A?displayProperty=nameWithType&gt;</ph>プロパティの値が<ph id="ph6">`true`</ph>または<ph id="ph7">&lt;xref:System.Diagnostics.ProcessStartInfo.WindowStyle%2A?displayProperty=nameWithType&gt;</ph>プロパティの値が<ph id="ph8">&lt;xref:System.Diagnostics.ProcessWindowStyle.Hidden?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.Domain%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A?displayProperty=nameWithType&gt;</ph> property must be in UPN format, <bpt id="p1">*</bpt>user<ept id="p1">*</ept><ph id="ph4">@</ph><bpt id="p2">*</bpt>DNS_domain_name<ept id="p2">*</ept>.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.Domain%2A?displayProperty=nameWithType&gt;</ph>プロパティは<ph id="ph2">`null`</ph>、<ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A?displayProperty=nameWithType&gt;</ph>プロパティは UPN 形式である必要があります<bpt id="p1">*</bpt>ユーザー<ept id="p1">*</ept><ph id="ph4">@</ph><bpt id="p2">*</bpt>DNS_domain_name<ept id="p2">*</ept>です。</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Unlike the other overloads, the overload of <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> that has no parameters is not a <ph id="ph2">`static`</ph> member.</source>
          <target state="translated">その他のオーバー ロードのオーバー ロードとは異なり<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>パラメーターを持たずされませんが、<ph id="ph2">`static`</ph>メンバー。</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Use that overload when you have already created a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance, specified start information (including the file name), and want to start a process resource and associate it with the existing <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">既に作成しているとき、オーバー ロードを使用して、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンス、(ファイル名を含む)、指定した開始情報しプロセス リソースを起動して、既存に関連付ける<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Use one of the <ph id="ph1">`static`</ph> overloads when you want to create a new <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> component rather than start a process for an existing component.</source>
          <target state="translated">いずれかを使用して、<ph id="ph1">`static`</ph>を新規作成するときにオーバー ロード<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>既存のコンポーネントのプロセスを開始するのではなくコンポーネントです。</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Both this overload and the overload that has no parameters allow you to specify the start information for the process resource by using a <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph> instance.</source>
          <target state="translated">このオーバー ロードとパラメーターがないオーバー ロードの両方を使用してプロセス リソースの情報の開始を指定することを許可、<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>If you have a path variable declared in your system using quotes, you must fully qualify that path when starting any process found in that location.</source>
          <target state="translated">引用符を使用して、システムで宣言されているパス変数があれば、その場所で見つかったすべてのプロセスを開始するときにそのパスを完全に修飾する必要があります。</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Otherwise, the system will not find the path.</source>
          <target state="translated">それ以外の場合、システムには、パスは見つかりません。</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>For example, if <ph id="ph1">`c:\mypath`</ph> is not in your path, and you add it using quotation marks: <ph id="ph2">`path = %path%;"c:\mypath"`</ph>, you must fully qualify any process in <ph id="ph3">`c:\mypath`</ph> when starting it.</source>
          <target state="translated">たとえば場合、<ph id="ph1">`c:\mypath`</ph>パスには引用符を使用して追加して:<ph id="ph2">`path = %path%;"c:\mypath"`</ph>のすべてのプロセスを完全に修飾する必要があります<ph id="ph3">`c:\mypath`</ph>開始するとき。</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>ASP.NET Web page and server control code executes in the context of the ASP.NET worker process on the Web server.</source>
          <target state="translated">ASP.NET Web ページおよびサーバー コントロールのコードは、Web サーバー上の ASP.NET ワーカー プロセスのコンテキストで実行されます。</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>If you use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method in an ASP.NET Web page or server control, the new process executes on the Web server with restricted permissions.</source>
          <target state="translated">使用する場合、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>メソッドは、ASP.NET Web ページまたはサーバー コントロールで、新しいプロセスが制限されたアクセス許可に Web サーバーで実行します。</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The process does not start in the same context as the client browser, and does not have access to the user desktop.</source>
          <target state="translated">プロセスは、クライアント ブラウザーと同じコンテキストで起動しないがユーザーのデスクトップにアクセスできません。</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Whenever you use <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> to start a process, you might need to close it or you risk losing system resources.</source>
          <target state="translated">使用するたびに<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>を閉じるには必要があります、プロセスを開始するにまたはシステム リソースが失われる可能性です。</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Close processes using <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>.</source>
          <target state="translated">使用して閉じるプロセス<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>You can check whether a process has already been closed by using its <ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> property.</source>
          <target state="translated">使用して、プロセスが既に閉じられているかどうかを確認することができます、<ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>A note about apartment states in managed threads is necessary here.</source>
          <target state="translated">マネージ スレッドのアパートメント状態に関する注記がここで必要です。</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>When <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph> is <ph id="ph2">`true`</ph> on the <ph id="ph3">`startInfo`</ph> parameter, make sure you have set a threading model on your application by setting the attribute <ph id="ph4">`[STAThread]`</ph> on the <ph id="ph5">`main()`</ph> method.</source>
          <target state="translated">ときに<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph>は<ph id="ph2">`true`</ph>上、<ph id="ph3">`startInfo`</ph>パラメーター、属性を設定して、アプリケーションで、スレッド モデルを設定するかどうかを確認<ph id="ph4">`[STAThread]`</ph>上、<ph id="ph5">`main()`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Otherwise, a managed thread can be in an <ph id="ph1">`unknown`</ph> state or put in the <ph id="ph2">`MTA`</ph> state, the latter of which conflicts with <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph> being <ph id="ph4">`true`</ph>.</source>
          <target state="translated">それ以外の場合、管理対象に実行できるスレッド、<ph id="ph1">`unknown`</ph>状態かの配置、 <ph id="ph2">`MTA`</ph> 、状態と競合するのには、後者<ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph>される<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Some methods require that the apartment state not be <ph id="ph1">`unknown`</ph>.</source>
          <target state="translated">一部のメソッドは、アパートメント状態でないことが必要<ph id="ph1">`unknown`</ph>です。</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>If the state is not explicitly set, when the application encounters such a method, it defaults to <ph id="ph1">`MTA`</ph>, and once set, the apartment state cannot be changed.</source>
          <target state="translated">状態が明示的に設定されていない場合、アプリケーションは、このようなメソッドを検出すると、既定値は<ph id="ph1">`MTA`</ph>、一度設定したら、アパートメントの状態は変更できません。</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>However, <ph id="ph1">`MTA`</ph> causes an exception to be thrown when the operating system shell is managing the thread.</source>
          <target state="translated">ただし、<ph id="ph1">`MTA`</ph>オペレーティング システムのシェルが、スレッドを管理するときにスローされる例外が発生します。</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The following example first spawns an instance of Internet Explorer and displays the contents of the Favorites folder in the browser.</source>
          <target state="translated">まず、次の例は、Internet Explorer のインスタンスを生成し、ブラウザーで [お気に入り] フォルダーの内容を表示します。</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>It then starts some other instances of Internet Explorer and displays some specific pages or sites.</source>
          <target state="translated">Internet Explorer の他のいくつかのインスタンスを開始し、特定のページまたはサイトを表示します。</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Finally it starts Internet Explorer with the window being minimized while navigating to a specific site.</source>
          <target state="translated">最後に、特定のサイトに移動する際に最小化ウィンドウを Internet Explorer を開始します。</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>For additional examples of other uses of this method, refer to the individual properties of the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph> class.</source>
          <target state="translated">このメソッドの他の用途の他の例の個々 のプロパティを参照してください、<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>No file name was specified in the <ph id="ph1">&lt;paramref name="startInfo" /&gt;</ph> parameter's <ph id="ph2">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startInfo" /&gt;</ph> パラメーターの <ph id="ph2">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /&gt;</ph> プロパティにファイル名が指定されませんでした。</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> property of the <ph id="ph2">&lt;paramref name="startInfo" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="true" /&gt;</ph> and the <ph id="ph4">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" /&gt;</ph>, <ph id="ph5">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /&gt;</ph>, or <ph id="ph6">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /&gt;</ph> property is also <ph id="ph7">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="startInfo" /&gt;</ph> パラメーターの <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> プロパティは <ph id="ph3">&lt;see langword="true" /&gt;</ph> であり、<ph id="ph4">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" /&gt;</ph>、<ph id="ph5">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /&gt;</ph>、または <ph id="ph6">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /&gt;</ph> プロパティも <ph id="ph7">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> property of the <ph id="ph2">&lt;paramref name="startInfo" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="true" /&gt;</ph> and the <ph id="ph4">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /&gt;</ph> property is not <ph id="ph5">&lt;see langword="null" /&gt;</ph> or empty or the <ph id="ph6">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.Password" /&gt;</ph> property is not <ph id="ph7">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="startInfo" /&gt;</ph> パラメーターの <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> プロパティは <ph id="ph3">&lt;see langword="true" /&gt;</ph> であり、<ph id="ph4">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /&gt;</ph> プロパティは <ph id="ph5">&lt;see langword="null" /&gt;</ph> でも空でもないか、または <ph id="ph6">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.Password" /&gt;</ph> プロパティは <ph id="ph7">&lt;see langword="null" /&gt;</ph> ではありません。</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The <ph id="ph1">&lt;paramref name="startInfo" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startInfo" /&gt;</ph> パラメーターが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The process object has already been disposed.</source>
          <target state="translated">プロセス オブジェクトは既には破棄されています。</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The file specified in the <ph id="ph1">&lt;paramref name="startInfo" /&gt;</ph> parameter's <ph id="ph2">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /&gt;</ph> property could not be found.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startInfo" /&gt;</ph> パラメーターの <ph id="ph2">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /&gt;</ph> プロパティに指定されたファイルを見つけることができませんでした。</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>An error occurred when opening the associated file.</source>
          <target state="translated">関連付けられているファイルを開いているときにエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The sum of the length of the arguments and the length of the full path to the process exceeds 2080.</source>
          <target state="translated">引数の長さとプロセスへの完全パスの長さの合計が、2080 文字を超えています。</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>The error message associated with this exception can be one of the following: "The data area passed to a system call is too small."</source>
          <target state="translated">この例外に関連付けられるエラー メッセージは、次のいずれかになります。「システムの呼び出しに渡されるデータの領域が小さすぎます。」</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>or "Access is denied."</source>
          <target state="translated">または「アクセスが拒否されました。」</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>Method not supported on operating systems without shell support such as Nano Server (.NET Core only).</source>
          <target state="translated">メソッドはシェルがサポートされていない Nano Server (.NET Core のみ) などのオペレーティング システムではサポートされていません。</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>The name of a document or application file to run in the process.</source>
          <target state="translated">プロセスで実行する文書またはアプリケーション ファイルの名前。</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Starts a process resource by specifying the name of a document or application file and associates the resource with a new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component.</source>
          <target state="translated">文書またはアプリケーション ファイルの名前を指定してプロセス リソースを起動し、リソースを新しい <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントに関連付けます。</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> that is associated with the process resource, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no process resource is started.</source>
          <target state="translated">プロセス リソースに関連付けられている新しい <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph>。プロセス リソースが起動されていない場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Note that a new process that’s started alongside already running instances of the same process will be independent from the others.</source>
          <target state="translated">同じプロセスのインスタンスが既に実行されているときに起動された新しいプロセスは、他のインスタンスから独立します。</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>In addition, Start may return a non-null Process with its <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> property already set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">また、Start では、<ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> プロパティが既に <ph id="ph2">&lt;see langword="true" /&gt;</ph> に設定されている null 以外の Process が返される場合があります。</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>In this case, the started process may have activated an existing instance of itself and then exited.</source>
          <target state="translated">その場合、起動されたプロセス自体の既存のインスタンスがアクティブ化され、その後に終了されることがあります。</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Use this overload to start a process resource by specifying its file name.</source>
          <target state="translated">このオーバー ロードを使用すると、そのファイル名を指定してプロセス リソースを起動します。</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>The overload associates the resource with a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> object.</source>
          <target state="translated">オーバー ロードは、新しいリソースに関連付けます<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>If the address of the executable file to start is a URL, the process is not started and <ph id="ph1">`null`</ph> is returned.</source>
          <target state="translated">起動する実行可能ファイルのアドレスが URL である場合は、プロセスが開始されていないと<ph id="ph1">`null`</ph>が返されます。</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>This overload lets you start a process without first creating a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">このオーバー ロードでは、作成しなくても、新しいプロセスを開始できます。<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>The overload is an alternative to the explicit steps of creating a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance, setting the <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> member of the <ph id="ph3">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property, and calling <ph id="ph4">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> for the <ph id="ph5">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">オーバー ロードは、手順の代わりに、明示的な新しいを作成する<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンス、設定、<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>のメンバー、<ph id="ph3">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>プロパティ、および呼び出し<ph id="ph4">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>の<ph id="ph5">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>You can start a ClickOnce application by setting the <ph id="ph1">`fileName`</ph> parameter to the location (for example, a Web address) from which you originally installed the application.</source>
          <target state="translated">ClickOnce アプリケーションを起動するには設定して、<ph id="ph1">`fileName`</ph>アプリケーションのインストール元元となる位置 (たとえば、Web アドレス) へのパラメーターです。</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Do not start a ClickOnce application by specifying its installed location on your hard drive.</source>
          <target state="translated">ハード ドライブ上のインストール場所を指定することで、ClickOnce アプリケーションは開始されません。</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Starting a process by specifying its file name is similar to typing the information in the <ph id="ph1">`Run`</ph> dialog box of the Windows <ph id="ph2">`Start`</ph> menu.</source>
          <target state="translated">内の情報を入力するに似ていますが、ファイル名を指定してプロセスを開始、 <ph id="ph1">`Run`</ph>  ダイアログ ボックス、Windows の<ph id="ph2">`Start`</ph>メニュー。</target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Therefore, the file name does not need to represent an executable file.</source>
          <target state="translated">そのため、ファイル名は、実行可能ファイルを表す必要はありません。</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>It can be of any file type for which the extension has been associated with an application installed on the system.</source>
          <target state="translated">任意の拡張機能に関連付けられているシステムにインストールされているアプリケーション ファイルの種類のだということです。</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>For example the file name can have a .txt extension if you have associated text files with an editor, such as Notepad, or it can have a .doc if you have associated.doc files with a word processing tool, such as Microsoft Word.</source>
          <target state="translated">たとえばファイル名は、テキスト ファイルをメモ帳などのエディターに関連付けられたまたは Microsoft Word などのワード プロセッシング ツールを使用して関連付けてファイルがある場合、.doc を持つことができます、場合、.txt 拡張子を設定できます。</target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Similarly, in the same way that the <ph id="ph1">`Run`</ph> dialog box can accept an executable file name with or without the .exe extension, the .exe extension is optional in the <ph id="ph2">`fileName`</ph> parameter.</source>
          <target state="translated">同じで同様に、方法、 <ph id="ph1">`Run`</ph>  ダイアログ ボックスで、実行可能ファイル名拡張子が .exe の有無を受け入れることができます、拡張子 .exe が省略可能で、<ph id="ph2">`fileName`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>For example, you can set the <ph id="ph1">`fileName`</ph> parameter to either "Notepad.exe" or "Notepad".</source>
          <target state="translated">たとえば、設定、 <ph id="ph1">`fileName`</ph> "Notepad.exe"または"Notepad"のいずれかのパラメーターです。</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>This overload does not allow command-line arguments for the process.</source>
          <target state="translated">このオーバー ロードは、プロセスに対するコマンドライン引数を許可しません。</target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>If you need to specify one or more command-line arguments for the process, use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%28System.String%2CSystem.String%29?displayProperty=nameWithType&gt;</ph> overloads.</source>
          <target state="translated">プロセスの 1 つまたは複数のコマンドライン引数を指定する必要がある場合、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType&gt;</ph>または<ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%28System.String%2CSystem.String%29?displayProperty=nameWithType&gt;</ph>オーバー ロードします。</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Unlike the other overloads, the overload of <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> that has no parameters is not a <ph id="ph2">`static`</ph> member.</source>
          <target state="translated">その他のオーバー ロードのオーバー ロードとは異なり<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>パラメーターを持たずされませんが、<ph id="ph2">`static`</ph>メンバー。</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Use that overload when you have already created a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance, specified start information (including the file name), and want to start a process resource and associate it with the existing <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">既に作成しているとき、オーバー ロードを使用して、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンス、(ファイル名を含む)、指定した開始情報しプロセス リソースを起動して、既存に関連付ける<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Use one of the <ph id="ph1">`static`</ph> overloads when you want to create a new <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> component rather than start a process for an existing component.</source>
          <target state="translated">いずれかを使用して、<ph id="ph1">`static`</ph>を新規作成するときにオーバー ロード<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>既存のコンポーネントのプロセスを開始するのではなくコンポーネントです。</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Both this overload and the overload that has no parameters allow you to specify the file name of the process resource to start.</source>
          <target state="translated">このオーバー ロードとパラメーターがないオーバー ロードの両方を起動するプロセスのリソースのファイル名を指定できます。</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>If you have a path variable declared in your system using quotes, you must fully qualify that path when starting any process found in that location.</source>
          <target state="translated">引用符を使用して、システムで宣言されているパス変数があれば、その場所で見つかったすべてのプロセスを開始するときにそのパスを完全に修飾する必要があります。</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Otherwise, the system will not find the path.</source>
          <target state="translated">それ以外の場合、システムには、パスは見つかりません。</target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>For example, if <ph id="ph1">`c:\mypath`</ph> is not in your path, and you add it using quotation marks: <ph id="ph2">`path = %path%;"c:\mypath"`</ph>, you must fully qualify any process in <ph id="ph3">`c:\mypath`</ph> when starting it.</source>
          <target state="translated">たとえば場合、<ph id="ph1">`c:\mypath`</ph>パスには引用符を使用して追加して:<ph id="ph2">`path = %path%;"c:\mypath"`</ph>のすべてのプロセスを完全に修飾する必要があります<ph id="ph3">`c:\mypath`</ph>開始するとき。</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>ASP.NET Web page and server control code executes in the context of the ASP.NET worker process on the Web server.</source>
          <target state="translated">ASP.NET Web ページおよびサーバー コントロールのコードは、Web サーバー上の ASP.NET ワーカー プロセスのコンテキストで実行されます。</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>If you use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method in an ASP.NET Web page or server control, the new process executes on the Web server with restricted permissions.</source>
          <target state="translated">使用する場合、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>メソッドは、ASP.NET Web ページまたはサーバー コントロールで、新しいプロセスが制限されたアクセス許可に Web サーバーで実行します。</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>The process does not start in the same context as the client browser, and does not have access to the user desktop.</source>
          <target state="translated">プロセスは、クライアント ブラウザーと同じコンテキストで起動しないがユーザーのデスクトップにアクセスできません。</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Whenever you use <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> to start a process, you might need to close it or you risk losing system resources.</source>
          <target state="translated">使用するたびに<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>を閉じるには必要があります、プロセスを開始するにまたはシステム リソースが失われる可能性です。</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Close processes using <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>.</source>
          <target state="translated">使用して閉じるプロセス<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>You can check whether a process has already been closed by using its <ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> property.</source>
          <target state="translated">使用して、プロセスが既に閉じられているかどうかを確認することができます、<ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>A note about apartment states in managed threads is necessary here.</source>
          <target state="translated">マネージ スレッドのアパートメント状態に関する注記がここで必要です。</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>When <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph> is <ph id="ph2">`true`</ph> on the process component's <ph id="ph3">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property, make sure you have set a threading model on your application by setting the attribute <ph id="ph4">`[STAThread]`</ph> on the <ph id="ph5">`main()`</ph> method.</source>
          <target state="translated">ときに<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph>は<ph id="ph2">`true`</ph>プロセス コンポーネントの<ph id="ph3">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>プロパティ、属性を設定して、アプリケーションで、スレッド モデルを設定するかどうかを確認<ph id="ph4">`[STAThread]`</ph>上、<ph id="ph5">`main()`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Otherwise, a managed thread can be in an <ph id="ph1">`unknown`</ph> state or put in the <ph id="ph2">`MTA`</ph> state, the latter of which conflicts with <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph> being <ph id="ph4">`true`</ph>.</source>
          <target state="translated">それ以外の場合、管理対象に実行できるスレッド、<ph id="ph1">`unknown`</ph>状態かの配置、 <ph id="ph2">`MTA`</ph> 、状態と競合するのには、後者<ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph>される<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Some methods require that the apartment state not be <ph id="ph1">`unknown`</ph>.</source>
          <target state="translated">一部のメソッドは、アパートメント状態でないことが必要<ph id="ph1">`unknown`</ph>です。</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>If the state is not explicitly set, when the application encounters such a method, it defaults to <ph id="ph1">`MTA`</ph>, and once set, the apartment state cannot be changed.</source>
          <target state="translated">状態が明示的に設定されていない場合、アプリケーションは、このようなメソッドを検出すると、既定値は<ph id="ph1">`MTA`</ph>、一度設定したら、アパートメントの状態は変更できません。</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>However, <ph id="ph1">`MTA`</ph> causes an exception to be thrown when the operating system shell is managing the thread.</source>
          <target state="translated">ただし、<ph id="ph1">`MTA`</ph>オペレーティング システムのシェルが、スレッドを管理するときにスローされる例外が発生します。</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>The following example first spawns an instance of Internet Explorer and displays the contents of the Favorites folder in the browser.</source>
          <target state="translated">まず、次の例は、Internet Explorer のインスタンスを生成し、ブラウザーで [お気に入り] フォルダーの内容を表示します。</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>It then starts some other instances of Internet Explorer and displays some specific pages or sites.</source>
          <target state="translated">Internet Explorer の他のいくつかのインスタンスを開始し、特定のページまたはサイトを表示します。</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>Finally it starts Internet Explorer with the window being minimized while navigating to a specific site.</source>
          <target state="translated">最後に、特定のサイトに移動する際に最小化ウィンドウを Internet Explorer を開始します。</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>An error occurred when opening the associated file.</source>
          <target state="translated">関連付けられているファイルを開いているときにエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>The process object has already been disposed.</source>
          <target state="translated">プロセス オブジェクトは既に破棄されています。</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>The PATH environment variable has a string containing quotes.</source>
          <target state="translated">PATH 環境変数に、引用符を含む文字列があります。</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>The name of an application file to run in the process.</source>
          <target state="translated">プロセスで実行するアプリケーション ファイルの名前。</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Command-line arguments to pass when starting the process.</source>
          <target state="translated">プロセスを起動するときに渡すコマンド ライン引数。</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Starts a process resource by specifying the name of an application and a set of command-line arguments, and associates the resource with a new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component.</source>
          <target state="translated">アプリケーションの名前とコマンド ライン引数のセットを指定してプロセス リソースを起動し、リソースを新しい <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントに関連付けます。</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> that is associated with the process resource, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no process resource is started.</source>
          <target state="translated">プロセス リソースに関連付けられている新しい <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph>。プロセス リソースが起動されていない場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Note that a new process that’s started alongside already running instances of the same process will be independent from the others.</source>
          <target state="translated">同じプロセスのインスタンスが既に実行されているときに起動された新しいプロセスは、他のインスタンスから独立します。</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>In addition, Start may return a non-null Process with its <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> property already set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">また、Start では、<ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> プロパティが既に <ph id="ph2">&lt;see langword="true" /&gt;</ph> に設定されている null 以外の Process が返される場合があります。</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>In this case, the started process may have activated an existing instance of itself and then exited.</source>
          <target state="translated">その場合、起動されたプロセス自体の既存のインスタンスがアクティブ化され、その後に終了されることがあります。</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Use this overload to start a process resource by specifying its file name and command-line arguments.</source>
          <target state="translated">このオーバー ロードを使用すると、そのファイルの名前とコマンドライン引数を指定してプロセス リソースを起動します。</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>The overload associates the resource with a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> object.</source>
          <target state="translated">オーバー ロードは、新しいリソースに関連付けます<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>If the address of the executable file to start is a URL, the process is not started and <ph id="ph1">`null`</ph> is returned.</source>
          <target state="translated">起動する実行可能ファイルのアドレスが URL である場合は、プロセスが開始されていないと<ph id="ph1">`null`</ph>が返されます。</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>This overload lets you start a process without first creating a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">このオーバー ロードでは、作成しなくても、新しいプロセスを開始できます。<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>The overload is an alternative to the explicit steps of creating a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance, setting the <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt;</ph> members of the <ph id="ph4">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property, and calling <ph id="ph5">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> for the <ph id="ph6">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">オーバー ロードは、手順の代わりに、明示的な新しいを作成する<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンス、設定、<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt;</ph>のメンバー、<ph id="ph4">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>プロパティ、および呼び出し元<ph id="ph5">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>の<ph id="ph6">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Starting a process by specifying its file name and arguments is similar to typing the file name and command-line arguments in the <ph id="ph1">`Run`</ph> dialog box of the Windows <ph id="ph2">`Start`</ph> menu.</source>
          <target state="translated">コマンドライン引数とファイルの名前を入力することに似ていますが、ファイルの名前と引数を指定することによって、プロセスの開始、 <ph id="ph1">`Run`</ph>  ダイアログ ボックス、Windows の<ph id="ph2">`Start`</ph>メニュー。</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Therefore, the file name does not need to represent an executable file.</source>
          <target state="translated">そのため、ファイル名は、実行可能ファイルを表す必要はありません。</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>It can be of any file type for which the extension has been associated with an application installed on the system.</source>
          <target state="translated">任意の拡張機能に関連付けられているシステムにインストールされているアプリケーション ファイルの種類のだということです。</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>For example the file name can have a .txt extension if you have associated text files with an editor, such as Notepad, or it can have a .doc if you have associated.doc files with a word processing tool, such as Microsoft Word.</source>
          <target state="translated">たとえばファイル名は、テキスト ファイルをメモ帳などのエディターに関連付けられたまたは Microsoft Word などのワード プロセッシング ツールを使用して関連付けてファイルがある場合、.doc を持つことができます、場合、.txt 拡張子を設定できます。</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Similarly, in the same way that the <ph id="ph1">`Run`</ph> dialog box can accept an executable file name with or without the .exe extension, the .exe extension is optional in the <ph id="ph2">`fileName`</ph> parameter.</source>
          <target state="translated">同じで同様に、方法、 <ph id="ph1">`Run`</ph>  ダイアログ ボックスで、実行可能ファイル名拡張子が .exe の有無を受け入れることができます、拡張子 .exe が省略可能で、<ph id="ph2">`fileName`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>For example, you can set the <ph id="ph1">`fileName`</ph> parameter to either "Notepad.exe" or "Notepad".</source>
          <target state="translated">たとえば、設定、 <ph id="ph1">`fileName`</ph> "Notepad.exe"または"Notepad"のいずれかのパラメーターです。</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>If the <ph id="ph1">`fileName`</ph> parameter represents an executable file, the <ph id="ph2">`arguments`</ph> parameter might represent a file to act upon, such as the text file in <ph id="ph3">`Notepad.exe myfile.txt`</ph>.</source>
          <target state="translated">場合、<ph id="ph1">`fileName`</ph>パラメーターは、実行可能ファイルを表す、<ph id="ph2">`arguments`</ph>パラメーターは、テキスト ファイルなど、対象となるファイルを表す場合があります<ph id="ph3">`Notepad.exe myfile.txt`</ph>です。</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>If the <ph id="ph1">`fileName`</ph> parameter represents a command (.cmd) file, the <ph id="ph2">`arguments`</ph> parameter must include either a "<ph id="ph3">`/c`</ph>" or "<ph id="ph4">`/k`</ph>" argument to specify whether the command window exits or remains after completion.</source>
          <target state="translated">場合、<ph id="ph1">`fileName`</ph>パラメーターがコマンド (.cmd) ファイルを表す、<ph id="ph2">`arguments`</ph>パラメーターは、いずれかを含める必要があります、"<ph id="ph3">`/c`</ph>「または」<ph id="ph4">`/k`</ph>"コマンド ウィンドウが終了するか、完了した後に残すかどうかを指定する引数。</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Unlike the other overloads, the overload of <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> that has no parameters is not a <ph id="ph2">`static`</ph> member.</source>
          <target state="translated">その他のオーバー ロードのオーバー ロードとは異なり<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>パラメーターを持たずされませんが、<ph id="ph2">`static`</ph>メンバー。</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Use that overload when you have already created a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance, specified start information (including the file name), and want to start a process resource and associate it with the existing <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">既に作成しているとき、オーバー ロードを使用して、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンス、(ファイル名を含む)、指定した開始情報しプロセス リソースを起動して、既存に関連付ける<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Use one of the <ph id="ph1">`static`</ph> overloads when you want to create a new <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> component rather than start a process for an existing component.</source>
          <target state="translated">いずれかを使用して、<ph id="ph1">`static`</ph>を新規作成するときにオーバー ロード<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>既存のコンポーネントのプロセスを開始するのではなくコンポーネントです。</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Both this overload and the overload that has no parameters allow you to specify the file name of the process resource to start and command-line arguments to pass.</source>
          <target state="translated">このオーバー ロードとパラメーターがないオーバー ロードの両方に渡すコマンドライン引数、起動するプロセス リソースのファイル名を指定できます。</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>If you have a path variable declared in your system using quotes, you must fully qualify that path when starting any process found in that location.</source>
          <target state="translated">引用符を使用して、システムで宣言されているパス変数があれば、その場所で見つかったすべてのプロセスを開始するときにそのパスを完全に修飾する必要があります。</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Otherwise, the system will not find the path.</source>
          <target state="translated">それ以外の場合、システムには、パスは見つかりません。</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>For example, if <ph id="ph1">`c:\mypath`</ph> is not in your path, and you add it using quotation marks: <ph id="ph2">`path = %path%;"c:\mypath"`</ph>, you must fully qualify any process in <ph id="ph3">`c:\mypath`</ph> when starting it.</source>
          <target state="translated">たとえば場合、<ph id="ph1">`c:\mypath`</ph>パスには引用符を使用して追加して:<ph id="ph2">`path = %path%;"c:\mypath"`</ph>のすべてのプロセスを完全に修飾する必要があります<ph id="ph3">`c:\mypath`</ph>開始するとき。</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>ASP.NET Web page and server control code executes in the context of the ASP.NET worker process on the Web server.</source>
          <target state="translated">ASP.NET Web ページおよびサーバー コントロールのコードは、Web サーバー上の ASP.NET ワーカー プロセスのコンテキストで実行されます。</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>If you use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method in an ASP.NET Web page or server control, the new process executes on the Web server with restricted permissions.</source>
          <target state="translated">使用する場合、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>メソッドは、ASP.NET Web ページまたはサーバー コントロールで、新しいプロセスが制限されたアクセス許可に Web サーバーで実行します。</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>The process does not start in the same context as the client browser, and does not have access to the user desktop.</source>
          <target state="translated">プロセスは、クライアント ブラウザーと同じコンテキストで起動しないがユーザーのデスクトップにアクセスできません。</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Whenever you use <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> to start a process, you might need to close it or you risk losing system resources.</source>
          <target state="translated">使用するたびに<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>を閉じるには必要があります、プロセスを開始するにまたはシステム リソースが失われる可能性です。</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Close processes using <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>.</source>
          <target state="translated">使用して閉じるプロセス<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>You can check whether a process has already been closed by using its <ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> property..</source>
          <target state="translated">使用して、プロセスが既に閉じられているかどうかを確認することができます、<ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>プロパティ.</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>A note about apartment states in managed threads is necessary here.</source>
          <target state="translated">マネージ スレッドのアパートメント状態に関する注記がここで必要です。</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>When <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph> is <ph id="ph2">`true`</ph> on the process component's <ph id="ph3">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property, make sure you have set a threading model on your application by setting the attribute <ph id="ph4">`[STAThread]`</ph> on the <ph id="ph5">`main()`</ph> method.</source>
          <target state="translated">ときに<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph>は<ph id="ph2">`true`</ph>プロセス コンポーネントの<ph id="ph3">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>プロパティ、属性を設定して、アプリケーションで、スレッド モデルを設定するかどうかを確認<ph id="ph4">`[STAThread]`</ph>上、<ph id="ph5">`main()`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Otherwise, a managed thread can be in an <ph id="ph1">`unknown`</ph> state or put in the <ph id="ph2">`MTA`</ph> state, the latter of which conflicts with <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph> being <ph id="ph4">`true`</ph>.</source>
          <target state="translated">それ以外の場合、管理対象に実行できるスレッド、<ph id="ph1">`unknown`</ph>状態かの配置、 <ph id="ph2">`MTA`</ph> 、状態と競合するのには、後者<ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A&gt;</ph>される<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Some methods require that the apartment state not be <ph id="ph1">`unknown`</ph>.</source>
          <target state="translated">一部のメソッドは、アパートメント状態でないことが必要<ph id="ph1">`unknown`</ph>です。</target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>If the state is not explicitly set, when the application encounters such a method, it defaults to <ph id="ph1">`MTA`</ph>, and once set, the apartment state cannot be changed.</source>
          <target state="translated">状態が明示的に設定されていない場合、アプリケーションは、このようなメソッドを検出すると、既定値は<ph id="ph1">`MTA`</ph>、一度設定したら、アパートメントの状態は変更できません。</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>However, <ph id="ph1">`MTA`</ph> causes an exception to be thrown when the operating system shell is managing the thread.</source>
          <target state="translated">ただし、<ph id="ph1">`MTA`</ph>オペレーティング システムのシェルが、スレッドを管理するときにスローされる例外が発生します。</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>The following example first spawns an instance of Internet Explorer and displays the contents of the Favorites folder in the browser.</source>
          <target state="translated">まず、次の例は、Internet Explorer のインスタンスを生成し、ブラウザーで [お気に入り] フォルダーの内容を表示します。</target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>It then starts some other instances of Internet Explorer and displays some specific pages or sites.</source>
          <target state="translated">Internet Explorer の他のいくつかのインスタンスを開始し、特定のページまたはサイトを表示します。</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>Finally it starts Internet Explorer with the window being minimized while navigating to a specific site.</source>
          <target state="translated">最後に、特定のサイトに移動する際に最小化ウィンドウを Internet Explorer を開始します。</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="arguments" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> パラメーターまたは <ph id="ph2">&lt;paramref name="arguments" /&gt;</ph> パラメーターが <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>An error occurred when opening the associated file.</source>
          <target state="translated">関連付けられているファイルを開いているときにエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>The sum of the length of the arguments and the length of the full path to the process exceeds 2080.</source>
          <target state="translated">引数の長さとプロセスへの完全パスの長さの合計が、2080 文字を超えています。</target>       </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>The error message associated with this exception can be one of the following: "The data area passed to a system call is too small."</source>
          <target state="translated">この例外に関連付けられるエラー メッセージは、次のいずれかになります。「システムの呼び出しに渡されるデータの領域が小さすぎます。」</target>       </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>or "Access is denied."</source>
          <target state="translated">または「アクセスが拒否されました。」</target>       </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>The process object has already been disposed.</source>
          <target state="translated">プロセス オブジェクトは既に破棄されています。</target>       </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>The PATH environment variable has a string containing quotes.</source>
          <target state="translated">PATH 環境変数に、引用符を含む文字列があります。</target>       </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>The name of an application file to run in the process.</source>
          <target state="translated">プロセスで実行するアプリケーション ファイルの名前。</target>       </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>The user name to use when starting the process.</source>
          <target state="translated">プロセスを開始するときに使用するユーザー名。</target>       </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> that contains the password to use when starting the process.</source>
          <target state="translated">プロセスを開始するときに使用されるパスワードを含んだ <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>The domain to use when starting the process.</source>
          <target state="translated">プロセスを開始するときに使用するドメイン。</target>       </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>Starts a process resource by specifying the name of an application, a user name, a password, and a domain and associates the resource with a new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component.</source>
          <target state="translated">アプリケーションの名前、ユーザー名、パスワード、およびドメインを指定してプロセス リソースを起動し、リソースを新しい <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントに関連付けます。</target>       </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> that is associated with the process resource, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no process resource is started.</source>
          <target state="translated">プロセス リソースに関連付けられている新しい <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph>。プロセス リソースが起動されていない場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>Note that a new process that’s started alongside already running instances of the same process will be independent from the others.</source>
          <target state="translated">同じプロセスのインスタンスが既に実行されているときに起動された新しいプロセスは、他のインスタンスから独立します。</target>       </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>In addition, Start may return a non-null Process with its <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> property already set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">また、Start では、<ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> プロパティが既に <ph id="ph2">&lt;see langword="true" /&gt;</ph> に設定されている null 以外の Process が返される場合があります。</target>       </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>In this case, the started process may have activated an existing instance of itself and then exited.</source>
          <target state="translated">その場合、起動されたプロセス自体の既存のインスタンスがアクティブ化され、その後に終了されることがあります。</target>       </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>Use this overload to create a new process and its primary thread by specifying its file name, user name, password, and domain.</source>
          <target state="translated">このオーバー ロードを使用すると、そのファイル名、ユーザー名、パスワード、およびドメインを指定することによって、新しいプロセスとそのプライマリ スレッドを作成できます。</target>       </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>The new process then runs the specified executable file in the security context of the specified credentials (user, domain, and password).</source>
          <target state="translated">後、新しいプロセスは、指定された資格情報 (ユーザー、ドメイン、およびパスワード) のセキュリティ コンテキストで指定された実行可能ファイルを実行します。</target>       </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>When the executable file is located on a remote drive, you must identify the network share by using a uniform resource identifier (URI), not a linked drive letter.</source>
          <target state="translated">リモート ドライブ上の実行可能ファイルが配置されている場合は、リンク先のドライブ文字ではなく uniform resource identifier (URI) を使用して、ネットワーク共有を識別する必要があります。</target>       </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>If the address of the executable file to start is a URL, the process is not started and <ph id="ph1">`null`</ph> is returned.</source>
          <target state="translated">起動する実行可能ファイルのアドレスが URL である場合は、プロセスが開始されていないと<ph id="ph1">`null`</ph>が返されます。</target>       </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>This overload lets you start a process without first creating a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">このオーバー ロードでは、作成しなくても、新しいプロセスを開始できます。<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>The overload is an alternative to the explicit steps of creating a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance, setting the <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.ProcessStartInfo.Password%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Diagnostics.ProcessStartInfo.Domain%2A&gt;</ph> properties of the <ph id="ph6">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property, and calling <ph id="ph7">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> for the <ph id="ph8">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">オーバー ロードは、手順の代わりに、明示的な新しいを作成する<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンス、設定、 <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A&gt;</ph>、 <ph id="ph4">&lt;xref:System.Diagnostics.ProcessStartInfo.Password%2A&gt;</ph>、および<ph id="ph5">&lt;xref:System.Diagnostics.ProcessStartInfo.Domain%2A&gt;</ph>のプロパティ、<ph id="ph6">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>プロパティ、および呼び出し元<ph id="ph7">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>の<ph id="ph8">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>Similarly, in the same way that the <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> dialog box can accept an executable file name with or without the .exe extension, the .exe extension is optional in the <ph id="ph1">`fileName`</ph> parameter.</source>
          <target state="translated">同じで同様に、方法、<bpt id="p1">**</bpt>実行<ept id="p1">**</ept> ダイアログ ボックスで、実行可能ファイル名拡張子が .exe の有無を受け入れることができます、拡張子 .exe が省略可能で、<ph id="ph1">`fileName`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>For example, you can set the <ph id="ph1">`fileName`</ph> parameter to either "Notepad.exe" or "Notepad".</source>
          <target state="translated">たとえば、設定、 <ph id="ph1">`fileName`</ph> "Notepad.exe"または"Notepad"のいずれかのパラメーターです。</target>       </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>If the <ph id="ph1">`fileName`</ph> parameter represents an executable file, the <ph id="ph2">`arguments`</ph> parameter might represent a file to act upon, such as the text file in <ph id="ph3">`Notepad.exe myfile.txt`</ph>.</source>
          <target state="translated">場合、<ph id="ph1">`fileName`</ph>パラメーターは、実行可能ファイルを表す、<ph id="ph2">`arguments`</ph>パラメーターは、テキスト ファイルなど、対象となるファイルを表す場合があります<ph id="ph3">`Notepad.exe myfile.txt`</ph>です。</target>       </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>The file name must represent an executable file in the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> overloads that have <ph id="ph2">`userName`</ph>, <ph id="ph3">`password`</ph>, and <ph id="ph4">`domain`</ph> parameters.</source>
          <target state="translated">ファイル名での実行可能ファイルを表す必要があります、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>を持つオーバー ロード<ph id="ph2">`userName`</ph>、 <ph id="ph3">`password`</ph>、および<ph id="ph4">`domain`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>Whenever you use <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> to start a process, you might need to close it or you risk losing system resources.</source>
          <target state="translated">使用するたびに<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>を閉じるには必要があります、プロセスを開始するにまたはシステム リソースが失われる可能性です。</target>       </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>Close processes using <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>.</source>
          <target state="translated">使用して閉じるプロセス<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>You can check whether a process has already been closed by using its <ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> property..</source>
          <target state="translated">使用して、プロセスが既に閉じられているかどうかを確認することができます、<ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>プロパティ.</target>       </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>The following code example shows the use of this overload to start an executable file and also demonstrates the throwing of a <ph id="ph1">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph> when an attempt is made to start an application associated with a nonexecutable file.</source>
          <target state="translated">次のコード例は、このオーバー ロードを起動する実行可能ファイルの使用方法を示しをスローする動作を示しています、<ph id="ph1">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph>ときしようとしましたが、非実行可能ファイルに関連付けられているアプリケーションを起動します。</target>       </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>No file name was specified.</source>
          <target state="translated">ファイル名が指定されませんでした。</target>       </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>There was an error in opening the associated file.</source>
          <target state="translated">関連付けられているファイルを開いているときにエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>The process object has already been disposed.</source>
          <target state="translated">プロセス オブジェクトは既に破棄されています。</target>       </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>Method not supported on Linux or macOS (.NET Core only).</source>
          <target state="translated">メソッドは Linux または macOS (.NET Core のみ) ではサポートされていません。</target>       </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>The name of an application file to run in the process.</source>
          <target state="translated">プロセスで実行するアプリケーション ファイルの名前。</target>       </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>Command-line arguments to pass when starting the process.</source>
          <target state="translated">プロセスを起動するときに渡すコマンド ライン引数。</target>       </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>The user name to use when starting the process.</source>
          <target state="translated">プロセスの開始時に使用するユーザー名。</target>       </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> that contains the password to use when starting the process.</source>
          <target state="translated">プロセスを開始するときに使用されるパスワードを含んだ <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>The domain to use when starting the process.</source>
          <target state="translated">プロセスを開始するときに使用するドメイン。</target>       </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>Starts a process resource by specifying the name of an application, a set of command-line arguments, a user name, a password, and a domain and associates the resource with a new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component.</source>
          <target state="translated">アプリケーションの名前、コマンド ライン引数のセット、ユーザー名、パスワード、およびドメインを指定してプロセス リソースを起動し、リソースを新しい <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントに関連付けます。</target>       </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> that is associated with the process resource, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no process resource is started.</source>
          <target state="translated">プロセス リソースに関連付けられている新しい <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph>。プロセス リソースが起動されていない場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>Note that a new process that’s started alongside already running instances of the same process will be independent from the others.</source>
          <target state="translated">同じプロセスのインスタンスが既に実行されているときに起動された新しいプロセスは、他のインスタンスから独立します。</target>       </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>In addition, Start may return a non-null Process with its <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> property already set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">また、Start では、<ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.HasExited" /&gt;</ph> プロパティが既に <ph id="ph2">&lt;see langword="true" /&gt;</ph> に設定されている null 以外の Process が返される場合があります。</target>       </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>In this case, the started process may have activated an existing instance of itself and then exited.</source>
          <target state="translated">その場合、起動されたプロセス自体の既存のインスタンスがアクティブ化され、その後に終了されることがあります。</target>       </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>Use this overload to create a new process and its primary thread by specifying its file name, command-line arguments, user name, password, and domain.</source>
          <target state="translated">ファイルの名前、コマンドライン引数、ユーザー名、パスワード、およびドメインを指定することによって、新しいプロセスとそのプライマリ スレッドを作成するのにには、このオーバー ロードを使用します。</target>       </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>The new process then runs the specified executable file in the security context of the specified credentials (user, domain, and password).</source>
          <target state="translated">後、新しいプロセスは、指定された資格情報 (ユーザー、ドメイン、およびパスワード) のセキュリティ コンテキストで指定された実行可能ファイルを実行します。</target>       </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>When the executable file is located on a remote drive, you must identify the network share by using a uniform resource identifier (URI), not a linked drive letter.</source>
          <target state="translated">リモート ドライブ上の実行可能ファイルが配置されている場合は、リンク先のドライブ文字ではなく uniform resource identifier (URI) を使用して、ネットワーク共有を識別する必要があります。</target>       </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>If the address of the executable file to start is a URL, the process is not started and <ph id="ph1">`null`</ph> is returned.</source>
          <target state="translated">起動する実行可能ファイルのアドレスが URL である場合は、プロセスが開始されていないと<ph id="ph1">`null`</ph>が返されます。</target>       </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>This overload lets you start a process without first creating a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">このオーバー ロードでは、作成しなくても、新しいプロセスを開始できます。<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>The overload is an alternative to the explicit steps of creating a new <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance, setting the <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Diagnostics.ProcessStartInfo.Password%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Diagnostics.ProcessStartInfo.Domain%2A&gt;</ph> properties of the <ph id="ph7">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property, and calling <ph id="ph8">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> for the <ph id="ph9">&lt;xref:System.Diagnostics.Process&gt;</ph> instance.</source>
          <target state="translated">オーバー ロードは、手順の代わりに、明示的な新しいを作成する<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンス、設定、 <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.Arguments%2A&gt;</ph>、 <ph id="ph4">&lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A&gt;</ph>、 <ph id="ph5">&lt;xref:System.Diagnostics.ProcessStartInfo.Password%2A&gt;</ph>、および<ph id="ph6">&lt;xref:System.Diagnostics.ProcessStartInfo.Domain%2A&gt;</ph>のプロパティ、<ph id="ph7">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>プロパティ、および呼び出し元<ph id="ph8">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>の<ph id="ph9">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>Similarly, in the same way that the <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> dialog box can accept an executable file name with or without the .exe extension, the .exe extension is optional in the <ph id="ph1">`fileName`</ph> parameter.</source>
          <target state="translated">同じで同様に、方法、<bpt id="p1">**</bpt>実行<ept id="p1">**</ept> ダイアログ ボックスで、実行可能ファイル名拡張子が .exe の有無を受け入れることができます、拡張子 .exe が省略可能で、<ph id="ph1">`fileName`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>For example, you can set the <ph id="ph1">`fileName`</ph> parameter to either "Notepad.exe" or "Notepad".</source>
          <target state="translated">たとえば、設定、 <ph id="ph1">`fileName`</ph> "Notepad.exe"または"Notepad"のいずれかのパラメーターです。</target>       </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>If the <ph id="ph1">`fileName`</ph> parameter represents an executable file, the <ph id="ph2">`arguments`</ph> parameter might represent a file to act upon, such as the text file in <ph id="ph3">`Notepad.exe myfile.txt`</ph>.</source>
          <target state="translated">場合、<ph id="ph1">`fileName`</ph>パラメーターは、実行可能ファイルを表す、<ph id="ph2">`arguments`</ph>パラメーターは、テキスト ファイルなど、対象となるファイルを表す場合があります<ph id="ph3">`Notepad.exe myfile.txt`</ph>です。</target>       </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>The file name must represent an executable file in the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> overloads that have <ph id="ph2">`userName`</ph>, <ph id="ph3">`password`</ph>, and <ph id="ph4">`domain`</ph> parameters.</source>
          <target state="translated">ファイル名での実行可能ファイルを表す必要があります、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>を持つオーバー ロード<ph id="ph2">`userName`</ph>、 <ph id="ph3">`password`</ph>、および<ph id="ph4">`domain`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>Whenever you use <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> to start a process, you might need to close it or you risk losing system resources.</source>
          <target state="translated">使用するたびに<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>を閉じるには必要があります、プロセスを開始するにまたはシステム リソースが失われる可能性です。</target>       </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>Close processes using <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>.</source>
          <target state="translated">使用して閉じるプロセス<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Diagnostics.Process.Kill%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>You can check whether a process has already been closed by using its <ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph> property..</source>
          <target state="translated">使用して、プロセスが既に閉じられているかどうかを確認することができます、<ph id="ph1">&lt;xref:System.Diagnostics.Process.HasExited%2A&gt;</ph>プロパティ.</target>       </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>No file name was specified.</source>
          <target state="translated">ファイル名が指定されませんでした。</target>       </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>An error occurred when opening the associated file.</source>
          <target state="translated">関連付けられているファイルを開いているときにエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>The sum of the length of the arguments and the length of the full path to the associated file exceeds 2080.</source>
          <target state="translated">引数の長さと関連ファイルへの完全パスの長さの合計が、2080 文字を超えています。</target>       </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>The error message associated with this exception can be one of the following: "The data area passed to a system call is too small."</source>
          <target state="translated">この例外に関連付けられているエラー メッセージは、次のいずれかになります。「システムの呼び出しに渡されるデータの領域が小さすぎます。」</target>       </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>or "Access is denied."</source>
          <target state="translated">または「アクセスが拒否されました。」</target>       </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>The process object has already been disposed.</source>
          <target state="translated">プロセス オブジェクトは既に破棄されています。</target>       </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>Method not supported on Linux or macOS (.NET Core only).</source>
          <target state="translated">メソッドは Linux または macOS (.NET Core のみ) ではサポートされていません。</target>       </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StartInfo">
          <source>Gets or sets the properties to pass to the <ph id="ph1">&lt;see cref="M:System.Diagnostics.Process.Start" /&gt;</ph> method of the <ph id="ph2">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Diagnostics.Process.Start" /&gt;</ph> の <ph id="ph2">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> メソッドに渡すプロパティを取得または設定します。</target>       </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>The <ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessStartInfo" /&gt;</ph> that represents the data with which to start the process.</source>
          <target state="translated">プロセスを起動するときに使用するデータを表す <ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessStartInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>These arguments include the name of the executable file or document used to start the process.</source>
          <target state="translated">これらの引数には、プロセスの起動時に使用する実行可能ファイルまたは文書の名前があります。</target>       </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> represents the set of parameters to use to start a process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> 使用して、プロセスを開始するパラメーターのセットを表します。</target>       </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>When <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> is called, the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> is used to specify the process to start.</source>
          <target state="translated">ときに<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>が呼び出されたが、<ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>を開始するプロセスを指定するために使用します。</target>       </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>The only necessary <ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> member to set is the <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property.</source>
          <target state="translated">必要なだけ<ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>を設定するメンバーは、<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>Starting a process by specifying the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property is similar to typing the information in the <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> dialog box of the Windows <bpt id="p2">**</bpt>Start<ept id="p2">**</ept> menu.</source>
          <target state="translated">指定してプロセスを開始、<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>プロパティは内の情報を入力することに似ています、<bpt id="p1">**</bpt>実行<ept id="p1">**</ept> ダイアログ ボックス、Windows の<bpt id="p2">**</bpt>開始<ept id="p2">**</ept>メニュー。</target>       </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property does not need to represent an executable file.</source>
          <target state="translated">したがって、<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>プロパティは、実行可能ファイルを表す必要はありません。</target>       </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>It can be of any file type for which the extension has been associated with an application installed on the system.</source>
          <target state="translated">任意の拡張機能に関連付けられているシステムにインストールされているアプリケーション ファイルの種類のだということです。</target>       </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>For example the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> can have a .txt extension if you have associated text files with an editor, such as Notepad, or it can have a .doc if you have associated.doc files with a word processing tool, such as Microsoft Word.</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>か、テキスト ファイルをメモ帳などのエディターに関連付けられた Microsoft Word などのワード プロセッシング ツールを使用して関連付けてファイルがある場合、.doc を持つことができますが、.txt 拡張子を持つことができます。</target>       </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>Similarly, in the same way that the <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> dialog box can accept an executable file name with or without the .exe extension, the .exe extension is optional in the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> member.</source>
          <target state="translated">同じで同様に、方法、<bpt id="p1">**</bpt>実行<ept id="p1">**</ept> ダイアログ ボックスで、実行可能ファイル名拡張子が .exe の有無を受け入れることができます、拡張子 .exe が省略可能で、<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>メンバー。</target>       </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>For example, you can set the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property to either "Notepad.exe" or "Notepad".</source>
          <target state="translated">たとえば、設定、<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>プロパティを"Notepad.exe"または"Notepad"のいずれか。</target>       </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>You can start a ClickOnce application by setting the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property to the location (for example, a Web address) from which you originally installed the application.</source>
          <target state="translated">ClickOnce アプリケーションを起動するには設定して、<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>プロパティを最初にインストールしたアプリケーションの場所 (たとえば、Web アドレス) をします。</target>       </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>Do not start a ClickOnce application by specifying its installed location on your hard drive.</source>
          <target state="translated">ハード ドライブ上のインストール場所を指定することで、ClickOnce アプリケーションは開始されません。</target>       </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>If the file name involves a nonexecutable file, such as a .doc file, you can include a verb specifying what action to take on the file.</source>
          <target state="translated">ファイル名には、.doc ファイルなどの非実行可能ファイルが含まれている場合は、ファイルを実行するアクションを指定する動詞を含めることができます。</target>       </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>For example, you could set the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt;</ph> to "Print" for a file ending in the .doc extension.</source>
          <target state="translated">たとえば、設定する、 <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt;</ph> .doc 拡張子で終わるファイルの"Print"にします。</target>       </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>The file name specified in the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property does not need to have an extension if you manually enter a value for the <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt;</ph> property.</source>
          <target state="translated">指定されたファイル名、<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>プロパティは、拡張子が付いている場合の値を手動で入力する必要はありません、<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.Verb%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>However, if you use the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.Verbs%2A&gt;</ph> property to determine what verbs are available, you must include the extension.</source>
          <target state="translated">ただし、使用する場合、<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo.Verbs%2A&gt;</ph>動詞を確認するにはできるが、拡張機能を含める必要があります。</target>       </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>You can change the parameters specified in the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property up to the time that you call the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method on the process.</source>
          <target state="translated">指定されたパラメーターを変更することができます、<ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>プロパティを呼び出したときまで、<ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>メソッドを処理します。</target>       </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>After you start the process, changing the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> values does not affect or restart the associated process.</source>
          <target state="translated">プロセスを開始した後の変更、<ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>値に影響を与えるまたはしません、関連付けられているプロセスを再開します。</target>       </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>If you call the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.Password%2A?displayProperty=nameWithType&gt;</ph> properties set, the unmanaged <ph id="ph4">`CreateProcessWithLogonW`</ph> function is called, which starts the process in a new window even if the <ph id="ph5">&lt;xref:System.Diagnostics.ProcessStartInfo.CreateNoWindow%2A&gt;</ph> property value is <ph id="ph6">`true`</ph> or the <ph id="ph7">&lt;xref:System.Diagnostics.ProcessStartInfo.WindowStyle%2A&gt;</ph> property value is <ph id="ph8">&lt;xref:System.Diagnostics.ProcessWindowStyle.Hidden&gt;</ph>.</source>
          <target state="translated">呼び出す場合は、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29&gt;</ph>メソッドを<ph id="ph2">&lt;xref:System.Diagnostics.ProcessStartInfo.UserName%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.Password%2A?displayProperty=nameWithType&gt;</ph>プロパティ セットには、アンマネージ<ph id="ph4">`CreateProcessWithLogonW`</ph>関数が呼び出されると、新しいウィンドウでも場合に、プロセスが開始する、<ph id="ph5">&lt;xref:System.Diagnostics.ProcessStartInfo.CreateNoWindow%2A&gt;</ph>プロパティの値が<ph id="ph6">`true`</ph>または<ph id="ph7">&lt;xref:System.Diagnostics.ProcessStartInfo.WindowStyle%2A&gt;</ph>プロパティの値が<ph id="ph8">&lt;xref:System.Diagnostics.ProcessWindowStyle.Hidden&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>If you did not use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method to start a process, the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property does not reflect the parameters used to start the process.</source>
          <target state="translated">使用していない場合、 <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> 、処理を開始する方法、<ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>プロパティは、プロセスを開始するためのパラメーターを反映しません。</target>       </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>For example, if you use <ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph> to get an array of processes running on the computer, the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property of each <ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph> does not contain the original file name or arguments used to start the process.</source>
          <target state="translated">たとえば、使用する場合<ph id="ph1">&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;</ph>コンピューターで、実行中のプロセスの配列を取得する、<ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>の各プロパティ<ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph>元のファイル名またはプロセスを開始するための引数が含まれていません。</target>       </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>When the process is started, the file name is the file that populates the (read-only) <ph id="ph1">&lt;xref:System.Diagnostics.Process.MainModule%2A&gt;</ph> property.</source>
          <target state="translated">ファイル名、(読み取り専用) のメンバーを追加するファイルでは、プロセスが開始されると、<ph id="ph1">&lt;xref:System.Diagnostics.Process.MainModule%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>If you want to retrieve the executable file that is associated with the process after the process has started, use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.MainModule%2A&gt;</ph> property.</source>
          <target state="translated">使用して、プロセスが開始した後、プロセスに関連付けられている実行可能ファイルを取得する場合、<ph id="ph1">&lt;xref:System.Diagnostics.Process.MainModule%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>If you want to set the executable file of a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> instance for which an associated process has not been started, use the <ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property's <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> member.</source>
          <target state="translated">実行可能ファイルを設定する場合、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>が関連付けられたプロセスが開始されていないインスタンスを使用して、<ph id="ph2">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>プロパティの<ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>メンバー。</target>       </trans-unit>
        <trans-unit id="1546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>Because the members of the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> property are arguments that are passed to the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> method of a process, changing the <ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph> property after the associated process has started will not reset the <ph id="ph4">&lt;xref:System.Diagnostics.Process.MainModule%2A&gt;</ph> property.</source>
          <target state="translated">のメンバー、<ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>プロパティに渡される引数には、<ph id="ph2">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>を変更する、プロセスのメソッド、<ph id="ph3">&lt;xref:System.Diagnostics.ProcessStartInfo.FileName%2A&gt;</ph>関連付けられたプロセスが開始された後のプロパティはリセットされません、<ph id="ph4">&lt;xref:System.Diagnostics.Process.MainModule%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="1547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>These properties are used only to initialize the associated process.</source>
          <target state="translated">これらのプロパティは、関連付けられたプロセスを初期化するためにのみ使用されます。</target>       </trans-unit>
        <trans-unit id="1548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>The following example populates a <ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph> with the file to execute, the action performed on it and whether it should displays a user interface.</source>
          <target state="translated">次の例では、設定、<ph id="ph1">&lt;xref:System.Diagnostics.Process.StartInfo%2A&gt;</ph>ことで、ファイルを実行するでアクションを実行し、ユーザー インターフェイスを表示するかどうかにする必要があります。</target>       </trans-unit>
        <trans-unit id="1549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>For additional examples, refer to the reference pages for properties of the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph> class.</source>
          <target state="translated">その他の例のプロパティのリファレンス ページを参照してください、<ph id="ph1">&lt;xref:System.Diagnostics.ProcessStartInfo&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="1550" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StartInfo">
          <source>The value that specifies the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StartInfo" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StartInfo" /&gt;</ph> を指定する値は <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="1551" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartInfo">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1553" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StartTime">
          <source>Gets the time that the associated process was started.</source>
          <target state="translated">関連付けられたプロセスが起動された時刻を取得します。</target>       </trans-unit>
        <trans-unit id="1554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartTime">
          <source>An object  that indicates when the process started.</source>
          <target state="translated">プロセスが起動された時刻を示すオブジェクト。</target>       </trans-unit>
        <trans-unit id="1555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartTime">
          <source>An exception is thrown if the process is not running.</source>
          <target state="translated">プロセスが実行中でない場合は、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="1556" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StartTime">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="1557" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StartTime">
          <source>You are attempting to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StartTime" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">リモート コンピューターで実行されているプロセスの <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StartTime" /&gt;</ph> プロパティにアクセスしようとしています。</target>       </trans-unit>
        <trans-unit id="1558" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StartTime">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">このプロパティはローカル コンピューターで実行中のプロセスに対してのみ使用可能です。</target>       </trans-unit>
        <trans-unit id="1559" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StartTime">
          <source>The process has exited.</source>
          <target state="translated">プロセスが終了しています。</target>       </trans-unit>
        <trans-unit id="1560" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StartTime">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1561" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StartTime">
          <source>The process has not been started.</source>
          <target state="translated">プロセスは開始されていません。</target>       </trans-unit>
        <trans-unit id="1562" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.StartTime">
          <source>An error occurred in the call to the Windows function.</source>
          <target state="translated">Windows 関数の呼び出しでエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="1563" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartTime">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1564" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.StartTime">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1565" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.SynchronizingObject">
          <source>Gets or sets the object used to marshal the event handler calls that are issued as a result of a process exit event.</source>
          <target state="translated">プロセス終了イベントの結果として発行されるイベント ハンドラー呼び出しをマーシャリングするために使用するオブジェクトを取得または設定します。</target>       </trans-unit>
        <trans-unit id="1566" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SynchronizingObject">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISynchronizeInvoke" /&gt;</ph> used to marshal event handler calls that are issued as a result of an <ph id="ph2">&lt;see cref="E:System.Diagnostics.Process.Exited" /&gt;</ph> event on the process.</source>
          <target state="translated">プロセスの <ph id="ph2">&lt;see cref="E:System.Diagnostics.Process.Exited" /&gt;</ph> イベントの結果として発行されるイベント ハンドラー呼び出しをマーシャリングするために使用する <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISynchronizeInvoke" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1567" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SynchronizingObject">
          <source>When <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.SynchronizingObject%2A&gt;</ph> is <ph id="ph2">`null`</ph>, methods that handle the <ph id="ph3">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event are called on a thread from the system thread pool.</source>
          <target state="translated">ときに<ph id="ph1">&lt;xref:System.Diagnostics.EventLog.SynchronizingObject%2A&gt;</ph>は<ph id="ph2">`null`</ph>、処理するメソッド、<ph id="ph3">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>イベントがシステムのスレッド プールのスレッドで呼び出されます。</target>       </trans-unit>
        <trans-unit id="1568" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SynchronizingObject">
          <source>For more information about system thread pools, see <ph id="ph1">&lt;xref:System.Threading.ThreadPool&gt;</ph>.</source>
          <target state="translated">システム スレッド プールの詳細については、次を参照してください。<ph id="ph1">&lt;xref:System.Threading.ThreadPool&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1569" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SynchronizingObject">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event is handled by a visual Windows Forms component, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>, accessing the component through the system thread pool might not work, or might result in an exception.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>イベントは Windows フォームのビジュアル コンポーネントなど、 <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>、システム スレッド プールを介したコンポーネントへのアクセスが機能しない、または例外が発生する可能性があります。</target>       </trans-unit>
        <trans-unit id="1570" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SynchronizingObject">
          <source>Avoid this by setting <ph id="ph1">&lt;xref:System.Diagnostics.Process.SynchronizingObject%2A&gt;</ph> to a Windows Forms component, which causes the methods handling the <ph id="ph2">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event to be called on the same thread on which the component was created.</source>
          <target state="translated">設定してこれを回避する<ph id="ph1">&lt;xref:System.Diagnostics.Process.SynchronizingObject%2A&gt;</ph>処理メソッドを停止する Windows フォームのコンポーネントを<ph id="ph2">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph>コンポーネントが作成されたスレッドと同じスレッドで呼び出されるイベント。</target>       </trans-unit>
        <trans-unit id="1571" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SynchronizingObject">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> is used inside <ph id="ph2">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> in a Windows Forms designer, <ph id="ph3">&lt;xref:System.Diagnostics.Process.SynchronizingObject%2A&gt;</ph> is automatically set to the control that contains the <ph id="ph4">&lt;xref:System.Diagnostics.Process&gt;</ph>.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>内で使用する<ph id="ph2">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph>、Windows フォーム デザイナーで<ph id="ph3">&lt;xref:System.Diagnostics.Process.SynchronizingObject%2A&gt;</ph>を含むコントロールに自動的に設定されている、<ph id="ph4">&lt;xref:System.Diagnostics.Process&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1572" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SynchronizingObject">
          <source>For example, if you place a <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> on a designer for <ph id="ph2">`Form1`</ph> (which inherits from <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>) the <ph id="ph4">&lt;xref:System.Diagnostics.Process.SynchronizingObject%2A&gt;</ph> property of <ph id="ph5">&lt;xref:System.Diagnostics.Process&gt;</ph> is set to the instance of <ph id="ph6">`Form1`</ph>:</source>
          <target state="translated">たとえば、配置する場合、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>をデザイナーで<ph id="ph2">`Form1`</ph>(から継承される<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>)、<ph id="ph4">&lt;xref:System.Diagnostics.Process.SynchronizingObject%2A&gt;</ph>のプロパティ<ph id="ph5">&lt;xref:System.Diagnostics.Process&gt;</ph>のインスタンスに設定されている<ph id="ph6">`Form1`</ph>:</target>       </trans-unit>
        <trans-unit id="1573" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SynchronizingObject">
          <source>Typically, this property is set when the component is placed inside a control or form, because those components are bound to a specific thread.</source>
          <target state="translated">通常、このプロパティが設定コントロールまたはフォームの内部コンポーネントを配置しているときにこれらのコンポーネントは、特定のスレッドにバインドされるためです。</target>       </trans-unit>
        <trans-unit id="1574" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SynchronizingObject">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1575" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.SynchronizingObject">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1576" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Threads">
          <source>Gets the set of threads that are running in the associated process.</source>
          <target state="translated">関連付けられたプロセスで実行されているスレッドのセットを取得します。</target>       </trans-unit>
        <trans-unit id="1577" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Threads">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessThread" /&gt;</ph> representing the operating system threads currently running in the associated process.</source>
          <target state="translated">関連付けられたプロセスで現在実行中のオペレーティング システム スレッドを表す <ph id="ph1">&lt;see cref="T:System.Diagnostics.ProcessThread" /&gt;</ph> 型の配列。</target>       </trans-unit>
        <trans-unit id="1578" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Threads">
          <source>A thread executes code in a process.</source>
          <target state="translated">スレッドは、プロセスでコードを実行します。</target>       </trans-unit>
        <trans-unit id="1579" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Threads">
          <source>Each process is started with a single thread, its primary thread.</source>
          <target state="translated">単一のスレッド、そのプライマリ スレッドでは、各プロセスが開始します。</target>       </trans-unit>
        <trans-unit id="1580" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Threads">
          <source>Any thread can create additional threads.</source>
          <target state="translated">どのスレッドでも新しいスレッドを作成できます。</target>       </trans-unit>
        <trans-unit id="1581" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Threads">
          <source>Threads within a process share the address space of the process.</source>
          <target state="translated">プロセス内のスレッドは、プロセスのアドレス空間を共有します。</target>       </trans-unit>
        <trans-unit id="1582" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Threads">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.ProcessThread&gt;</ph> to get all the threads associated with the current process.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Diagnostics.ProcessThread&gt;</ph>を現在のプロセスに関連付けられているすべてのスレッドを取得します。</target>       </trans-unit>
        <trans-unit id="1583" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Threads">
          <source>The primary thread is not necessarily at index zero in the array.</source>
          <target state="translated">プライマリ スレッドが必ずしも配列内のインデックス 0 の位置です。</target>       </trans-unit>
        <trans-unit id="1584" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Threads">
          <source>The process does not have an <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph>, or no process is associated with the <ph id="ph2">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> instance.</source>
          <target state="translated">プロセスに <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> がないか、<ph id="ph2">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> インスタンスに関連付けられているプロセスがありません。</target>       </trans-unit>
        <trans-unit id="1585" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Threads">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1586" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Threads">
          <source>The associated process has exited.</source>
          <target state="translated">関連付けられたプロセスが終了しました。</target>       </trans-unit>
        <trans-unit id="1587" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.Threads">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> to <ph id="ph2">&lt;see langword="false" /&gt;</ph> to access this property on Windows 98 and Windows Me.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) です。Windows 98 や Windows Me でこのプロパティにアクセスするには、<ph id="ph1">&lt;see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /&gt;</ph> を <ph id="ph2">&lt;see langword="false" /&gt;</ph> に設定します。</target>       </trans-unit>
        <trans-unit id="1588" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Threads">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1589" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.Threads">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1590" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.ToString">
          <source>Formats the process's name as a string, combined with the parent component type, if applicable.</source>
          <target state="translated">プロセス名の書式指定は文字列にします。親コンポーネント型があれば、この型と組み合わせます。</target>       </trans-unit>
        <trans-unit id="1591" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.ToString">
          <source>The <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.ProcessName" /&gt;</ph>, combined with the base component's <ph id="ph2">&lt;see cref="M:System.Object.ToString" /&gt;</ph> return value.</source>
          <target state="translated">ベース コンポーネントの <ph id="ph2">&lt;see cref="M:System.Object.ToString" /&gt;</ph> の戻り値と組み合わせた <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.ProcessName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.ToString">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">次の例では、メモ帳のインスタンスを開始します。</target>       </trans-unit>
        <trans-unit id="1593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.ToString">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">例に、取得し、関連付けられたプロセスのさまざまなプロパティを表示します。</target>       </trans-unit>
        <trans-unit id="1594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.ToString">
          <source>The example detects when the process exits, and displays the process's exit code.</source>
          <target state="translated">例では、検出プロセスが終了すると、し、プロセスの終了コードを表示します。</target>       </trans-unit>
        <trans-unit id="1595" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.ToString">
          <source><ph id="ph1">&lt;see cref="M:System.Diagnostics.Process.ToString" /&gt;</ph> is not supported on Windows 98.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Diagnostics.Process.ToString" /&gt;</ph> は、Windows 98 ではサポートされていません。</target>       </trans-unit>
        <trans-unit id="1596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.ToString">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.ToString">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1598" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.TotalProcessorTime">
          <source>Gets the total processor time for this process.</source>
          <target state="translated">このプロセスの合計プロセッサ時間を取得します。</target>       </trans-unit>
        <trans-unit id="1599" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.TotalProcessorTime">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the amount of time that the associated process has spent utilizing the CPU.</source>
          <target state="translated">関連付けられたプロセスが CPU を使用した合計時間を示す <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1600" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.TotalProcessorTime">
          <source>This value is the sum of the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.UserProcessorTime" /&gt;</ph> and the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" /&gt;</ph>.</source>
          <target state="translated">この値は、<ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.UserProcessorTime" /&gt;</ph> と <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" /&gt;</ph> の合計です。</target>       </trans-unit>
        <trans-unit id="1601" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.TotalProcessorTime">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">次の例では、メモ帳のインスタンスを開始します。</target>       </trans-unit>
        <trans-unit id="1602" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.TotalProcessorTime">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">例に、取得し、関連付けられたプロセスのさまざまなプロパティを表示します。</target>       </trans-unit>
        <trans-unit id="1603" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.TotalProcessorTime">
          <source>The example detects when the process exits, and displays the process's exit code.</source>
          <target state="translated">例では、検出プロセスが終了すると、し、プロセスの終了コードを表示します。</target>       </trans-unit>
        <trans-unit id="1604" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.TotalProcessorTime">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="1605" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.TotalProcessorTime">
          <source>You are attempting to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.TotalProcessorTime" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">リモート コンピューターで実行されているプロセスの <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.TotalProcessorTime" /&gt;</ph> プロパティにアクセスしようとしています。</target>       </trans-unit>
        <trans-unit id="1606" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.TotalProcessorTime">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">このプロパティはローカル コンピューターで実行中のプロセスに対してのみ使用可能です。</target>       </trans-unit>
        <trans-unit id="1607" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.TotalProcessorTime">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1608" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.TotalProcessorTime">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1609" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.UserProcessorTime">
          <source>Gets the user processor time for this process.</source>
          <target state="translated">このプロセスのユーザー プロセッサ時間を取得します。</target>       </trans-unit>
        <trans-unit id="1610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.UserProcessorTime">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the amount of time that the associated process has spent running code inside the application portion of the process (not inside the operating system core).</source>
          <target state="translated">関連付けられたプロセスが、プロセスのアプリケーション部分の内部 (オペレーティング システム コアの外部) でコードを実行した合計時間を示す <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.UserProcessorTime">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">次の例では、メモ帳のインスタンスを開始します。</target>       </trans-unit>
        <trans-unit id="1612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.UserProcessorTime">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">例に、取得し、関連付けられたプロセスのさまざまなプロパティを表示します。</target>       </trans-unit>
        <trans-unit id="1613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.UserProcessorTime">
          <source>The example detects when the process exits, and displays the process's exit code.</source>
          <target state="translated">例では、検出プロセスが終了すると、し、プロセスの終了コードを表示します。</target>       </trans-unit>
        <trans-unit id="1614" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.UserProcessorTime">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="1615" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.UserProcessorTime">
          <source>You are attempting to access the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.UserProcessorTime" /&gt;</ph> property for a process that is running on a remote computer.</source>
          <target state="translated">リモート コンピューターで実行されているプロセスの <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.UserProcessorTime" /&gt;</ph> プロパティにアクセスしようとしています。</target>       </trans-unit>
        <trans-unit id="1616" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.UserProcessorTime">
          <source>This property is available only for processes that are running on the local computer.</source>
          <target state="translated">このプロパティはローカル コンピューターで実行中のプロセスに対してのみ使用可能です。</target>       </trans-unit>
        <trans-unit id="1617" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.UserProcessorTime">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1618" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.UserProcessorTime">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1619" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.VirtualMemorySize">
          <source>Gets the size of the process's virtual memory, in bytes.</source>
          <target state="translated">プロセスの仮想メモリのサイズ (バイト単位) を取得します。</target>       </trans-unit>
        <trans-unit id="1620" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize">
          <source>The amount of virtual memory, in bytes, that the associated process has requested.</source>
          <target state="translated">関連付けられたプロセスが要求した仮想メモリの容量 (バイト単位)。</target>       </trans-unit>
        <trans-unit id="1621" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.VirtualMemorySize">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="1622" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1623" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1624" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.VirtualMemorySize64">
          <source>Gets the amount of the virtual memory, in bytes, allocated for the associated process.</source>
          <target state="translated">関連付けられたプロセスに割り当てられた仮想メモリの量 (バイト単位) を取得します。</target>       </trans-unit>
        <trans-unit id="1625" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize64">
          <source>The amount of virtual memory, in bytes, allocated for the associated process.</source>
          <target state="translated">関連付けられたプロセスに割り当てられた仮想メモリの量 (バイト単位)。</target>       </trans-unit>
        <trans-unit id="1626" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize64">
          <source>The value returned by this property represents the current size of virtual memory used by the process, in bytes.</source>
          <target state="translated">このプロパティによって返される値は、(バイト単位)、プロセスによって使用される仮想メモリの現在のサイズを表します。</target>       </trans-unit>
        <trans-unit id="1627" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize64">
          <source>The operating system maps the virtual address space for each process either to pages loaded in physical memory, or to pages stored in the virtual memory paging file on disk.</source>
          <target state="translated">オペレーティング システムでは、物理メモリまたはディスク上の仮想メモリ ページング ファイルに格納されているページに読み込まれるページのいずれかの各プロセスの仮想アドレス空間をマップします。</target>       </trans-unit>
        <trans-unit id="1628" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize64">
          <source>This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</source>
          <target state="translated">このプロパティは、32 ビット プロセッサまたは 64 ビット プロセッサを持つコンピュータのメモリ使用量の監視に使用できます。</target>       </trans-unit>
        <trans-unit id="1629" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize64">
          <source>The property value is equivalent to the <bpt id="p1">**</bpt>Virtual Bytes<ept id="p1">**</ept> performance counter for the process.</source>
          <target state="translated">プロパティの値が等価、 <bpt id="p1">**</bpt>Virtual Bytes<ept id="p1">**</ept>プロセスのパフォーマンス カウンター。</target>       </trans-unit>
        <trans-unit id="1630" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize64">
          <source>The following code example starts an instance of the Notepad application.</source>
          <target state="translated">次のコード例では、メモ帳のインスタンスを起動します。</target>       </trans-unit>
        <trans-unit id="1631" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize64">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">例に、取得し、関連付けられたプロセスのさまざまなプロパティを表示します。</target>       </trans-unit>
        <trans-unit id="1632" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize64">
          <source>The example detects when the process exits, and displays its exit code and peak memory statistics.</source>
          <target state="translated">例では、検出プロセスが終了すると、し、終了コードとピーク メモリ統計情報を表示します。</target>       </trans-unit>
        <trans-unit id="1633" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.VirtualMemorySize64">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="1634" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize64">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1635" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.VirtualMemorySize64">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1636" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Process">
          <source>Sets the period of time to wait for the associated process to exit, and blocks the current thread of execution until the time has elapsed or the process has exited.</source>
          <target state="translated">関連付けられたプロセスが終了するまで待機する時間を設定し、指定した時間が経過するかプロセスが終了するまで現在のスレッドの実行をブロックします。</target>       </trans-unit>
        <trans-unit id="1637" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Process">
          <source>To avoid blocking the current thread, use the <ph id="ph1">&lt;see cref="E:System.Diagnostics.Process.Exited" /&gt;</ph> event.</source>
          <target state="translated">現在のスレッドがブロックされないようにする場合は、<ph id="ph1">&lt;see cref="E:System.Diagnostics.Process.Exited" /&gt;</ph> イベントを使用します。</target>       </trans-unit>
        <trans-unit id="1638" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Process">
          <source>For code examples, see the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> and the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.ExitCode" /&gt;</ph> property reference pages.</source>
          <target state="translated">コード例については、<ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> および <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.ExitCode" /&gt;</ph> プロパティのリファレンス ページを参照してください。</target>       </trans-unit>
        <trans-unit id="1639" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>Instructs the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component to wait indefinitely for the associated process to exit.</source>
          <target state="translated">関連付けられたプロセスが終了するまで無期限に待機するように <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントに指示します。</target>       </trans-unit>
        <trans-unit id="1640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph> makes the current thread wait until the associated process terminates.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph> 関連付けられたプロセスが終了するまで待機する現在のスレッドを使用します。</target>       </trans-unit>
        <trans-unit id="1641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>It should be called after all other methods are called on the process.</source>
          <target state="translated">これは、プロセスに関するその他のすべてのメソッドが呼び出された後に呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="1642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>To avoid blocking the current thread, use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event.</source>
          <target state="translated">現在のスレッドがブロックされないようにする場合は、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> イベントを使用します。</target>       </trans-unit>
        <trans-unit id="1643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>This method instructs the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component to wait an infinite amount of time for the process and event handlers to exit.</source>
          <target state="translated">このメソッドに指示、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントをプロセスのイベント ハンドラーを終了する日時の時間は無制限に待機します。</target>       </trans-unit>
        <trans-unit id="1644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>This can cause an application to stop responding.</source>
          <target state="translated">これには、アプリケーションの応答を停止する可能性があります。</target>       </trans-unit>
        <trans-unit id="1645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>For example, if you call <ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph> for a process that has a user interface, the request to the operating system to terminate the associated process might not be handled if the process is written to never enter its message loop.</source>
          <target state="translated">呼び出す場合など、<ph id="ph1">&lt;xref:System.Diagnostics.Process.CloseMainWindow%2A&gt;</ph>ユーザー インターフェイスのあるプロセスでは、関連付けられているプロセスを終了するオペレーティング システムに要求可能性がある処理されない場合は、プロセスは、メッセージ ループを入力しないでに書き込まれます。</target>       </trans-unit>
        <trans-unit id="1646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> and earlier versions, the <ph id="ph2">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph> overload waited for <ph id="ph3">&lt;xref:System.Int32.MaxValue&gt;</ph> milliseconds (approximately 24 days), not indefinitely.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph>と以前のバージョン、<ph id="ph2">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph>オーバー ロードの待機時間を<ph id="ph3">&lt;xref:System.Int32.MaxValue&gt;</ph>ミリ秒 (約 24 日)、not 無期限にします。</target>       </trans-unit>
        <trans-unit id="1647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>Also, previous versions did not wait for the event handlers to exit if the full <ph id="ph1">&lt;xref:System.Int32.MaxValue&gt;</ph> time was reached.</source>
          <target state="translated">また、以前のバージョンでしたを待たない場合を終了するイベント ハンドラーの完全<ph id="ph1">&lt;xref:System.Int32.MaxValue&gt;</ph>時間に達しました。</target>       </trans-unit>
        <trans-unit id="1648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>This overload ensures that all processing has been completed, including the handling of asynchronous events for redirected standard output.</source>
          <target state="translated">このオーバー ロードにより、リダイレクトされた標準出力に非同期のイベントの処理など、すべての処理が完了したこと。</target>       </trans-unit>
        <trans-unit id="1649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>You should use this overload after a call to the <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29&gt;</ph> overload when standard output has been redirected to asynchronous event handlers.</source>
          <target state="translated">呼び出しの後に、このオーバー ロードを使用する必要があります、<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29&gt;</ph>非同期イベント ハンドラーを標準出力がリダイレクトされたとき、オーバー ロードします。</target>       </trans-unit>
        <trans-unit id="1650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>When an associated process exits (that is, when it is shut down by the operation system through a normal or abnormal termination), the system stores administrative information about the process and returns to the component that had called <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph>.</source>
          <target state="translated">システムがプロセスの管理情報を格納し、呼び出されますが、コンポーネントを返します (つまり、これによってがシャット ダウンにより、通常終了または異常終了操作システム) 場合は、関連付けられたプロセスが終了すると<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component can then access the information, which includes the <ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>, by using the <ph id="ph3">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph> to the exited process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントが含まれる情報にアクセスできます、<ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>を使用して、<ph id="ph3">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>終了したプロセスにします。</target>       </trans-unit>
        <trans-unit id="1652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>Because the associated process has exited, the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph> property of the component no longer points to an existing process resource.</source>
          <target state="translated">関連付けられたプロセスが終了したため、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>コンポーネントのプロパティが既存のプロセス リソースを参照しません。</target>       </trans-unit>
        <trans-unit id="1653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>Instead, the handle can be used only to access the operating system's information about the process resource.</source>
          <target state="translated">代わりに、ハンドルは、プロセスのリソースに関する情報のオペレーティング システムのアクセスにのみ使用できます。</target>       </trans-unit>
        <trans-unit id="1654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>The system is aware of handles to exited processes that have not been released by <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> components, so it keeps the <ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph> information in memory until the <ph id="ph4">&lt;xref:System.Diagnostics.Process&gt;</ph> component specifically frees the resources.</source>
          <target state="translated">システムは、解放されていない終了のプロセスへのハンドルの<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネント、それが維持されるように、<ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>までメモリ内の情報、<ph id="ph4">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントが具体的には、リソースを解放します。</target>       </trans-unit>
        <trans-unit id="1655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>For this reason, any time you call <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> for a <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> instance, call <ph id="ph3">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph> when the associated process has terminated and you no longer need any administrative information about it.</source>
          <target state="translated">このため、いつでも呼び出す<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>の<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンス、呼び出す<ph id="ph3">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph>と関連付けられたプロセスが終了するには、管理情報が不要になった。</target>       </trans-unit>
        <trans-unit id="1656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph> frees the memory allocated to the exited process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph> 終了したプロセスに割り当てられたメモリを解放します。</target>       </trans-unit>
        <trans-unit id="1657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>See the Remarks section of the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> property reference page.</source>
          <target state="translated">「解説」セクションを参照してください、<ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph>プロパティ リファレンスのページです。</target>       </trans-unit>
        <trans-unit id="1658" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>The wait setting could not be accessed.</source>
          <target state="translated">待機の設定にアクセスできませんでした。</target>       </trans-unit>
        <trans-unit id="1659" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>No process <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> has been set, and a <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.Handle" /&gt;</ph> from which the <ph id="ph3">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> property can be determined does not exist.</source>
          <target state="translated">プロセス <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> が設定されておらず、<ph id="ph3">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> プロパティを判別する元となる <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.Handle" /&gt;</ph> が存在しません。</target>       </trans-unit>
        <trans-unit id="1660" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1661" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>There is no process associated with this <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> オブジェクトに関連付けられているプロセスはありません。</target>       </trans-unit>
        <trans-unit id="1662" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1663" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>You are attempting to call <ph id="ph1">&lt;see cref="M:System.Diagnostics.Process.WaitForExit" /&gt;</ph> for a process that is running on a remote computer.</source>
          <target state="translated">リモート コンピューターで実行されているプロセスの <ph id="ph1">&lt;see cref="M:System.Diagnostics.Process.WaitForExit" /&gt;</ph> を呼び出そうとしています。</target>       </trans-unit>
        <trans-unit id="1664" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>This method is available only for processes that are running on the local computer.</source>
          <target state="translated">このメソッドはローカル コンピューターで実行中のプロセスに対してのみ使用可能です。</target>       </trans-unit>
        <trans-unit id="1665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1667" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>The amount of time, in milliseconds, to wait for the associated process to exit.</source>
          <target state="translated">関連付けられたプロセスが終了するまで待機する時間。単位はミリ秒です。</target>       </trans-unit>
        <trans-unit id="1668" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>The maximum is the largest possible value of a 32-bit integer, which represents infinity to the operating system.</source>
          <target state="translated">最大値は、32 ビット整数で表現できる最大値で、オペレーティング システムに対して無限大で表現される値です。</target>       </trans-unit>
        <trans-unit id="1669" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>Instructs the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component to wait the specified number of milliseconds for the associated process to exit.</source>
          <target state="translated">関連付けられたプロセスが終了するまで、最大で指定したミリ秒間待機するように <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントに指示します。</target>       </trans-unit>
        <trans-unit id="1670" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the associated process has exited; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">関連付けられたプロセスが終了した場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29&gt;</ph> makes the current thread wait until the associated process terminates.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29&gt;</ph> 関連付けられたプロセスが終了するまで待機する現在のスレッドを使用します。</target>       </trans-unit>
        <trans-unit id="1672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>It should be called after all other methods are called on the process.</source>
          <target state="translated">これは、プロセスに関するその他のすべてのメソッドが呼び出された後に呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="1673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>To avoid blocking the current thread, use the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event.</source>
          <target state="translated">現在のスレッドがブロックされないようにする場合は、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> イベントを使用します。</target>       </trans-unit>
        <trans-unit id="1674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>This method instructs the <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component to wait a finite amount of time for the process to exit.</source>
          <target state="translated">このメソッドに指示、<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントを有限時間、プロセスが終了するを待機します。</target>       </trans-unit>
        <trans-unit id="1675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>If the associated process does not exit by the end of the interval because the request to terminate is denied, <ph id="ph1">`false`</ph> is returned to the calling procedure.</source>
          <target state="translated">終了要求が拒否されたため、間隔の終了で関連付けられたプロセスは終了しない場合<ph id="ph1">`false`</ph>が呼び出し元のプロシージャに返されます。</target>       </trans-unit>
        <trans-unit id="1676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>You can specify <ph id="ph1">&lt;xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType&gt;</ph> for <ph id="ph2">`milliseconds`</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29?displayProperty=nameWithType&gt;</ph> will behave the same as the <ph id="ph4">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph> overload.</source>
          <target state="translated">指定できます<ph id="ph1">&lt;xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType&gt;</ph>の<ph id="ph2">`milliseconds`</ph>、および<ph id="ph3">&lt;xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29?displayProperty=nameWithType&gt;</ph>と同様に動作が、<ph id="ph4">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph>オーバー ロードします。</target>       </trans-unit>
        <trans-unit id="1677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>If you pass 0 (zero) to the method, it returns <ph id="ph1">`true`</ph> only if the process has already exited; otherwise, it immediately returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">返すかどうかは 0 (ゼロ) をメソッドに渡す<ph id="ph1">`true`</ph>プロセスは既に終了している場合にのみ、すぐに返します<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="1678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> and earlier versions, if <ph id="ph2">`milliseconds`</ph> was -1, the <ph id="ph3">&lt;xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29&gt;</ph> overload waited for <ph id="ph4">&lt;xref:System.Int32.MaxValue&gt;</ph> milliseconds (approximately 24 days), not indefinitely.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph>と以前のバージョンで場合<ph id="ph2">`milliseconds`</ph>-1、でした、<ph id="ph3">&lt;xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29&gt;</ph>オーバー ロードの待機時間を<ph id="ph4">&lt;xref:System.Int32.MaxValue&gt;</ph>ミリ秒 (約 24 日)、not 無期限にします。</target>       </trans-unit>
        <trans-unit id="1679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>When standard output has been redirected to asynchronous event handlers, it is possible that output processing will not have completed when this method returns.</source>
          <target state="translated">非同期のイベント ハンドラーを標準出力がリダイレクトされたときに、このメソッドが戻るときでは出力の処理が完了していないことができます。</target>       </trans-unit>
        <trans-unit id="1680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>To ensure that asynchronous event handling has been completed, call the <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph> overload that takes no parameter after receiving a <ph id="ph2">`true`</ph> from this overload.</source>
          <target state="translated">非同期イベント処理が完了したことを呼び出して、<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit&gt;</ph>受信後にパラメーターを受け取らないオーバー ロード、<ph id="ph2">`true`</ph>このオーバー ロードからします。</target>       </trans-unit>
        <trans-unit id="1681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>To help ensure that the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> event is handled correctly in Windows Forms applications, set the <ph id="ph2">&lt;xref:System.Diagnostics.Process.SynchronizingObject%2A&gt;</ph> property.</source>
          <target state="translated">いることを確認する、 <ph id="ph1">&lt;xref:System.Diagnostics.Process.Exited&gt;</ph> Windows フォーム アプリケーションで適切に処理されるイベントは、設定、<ph id="ph2">&lt;xref:System.Diagnostics.Process.SynchronizingObject%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="1682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>When an associated process exits (is shut down by the operating system through a normal or abnormal termination), the system stores administrative information about the process and returns to the component that had called <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29&gt;</ph>.</source>
          <target state="translated">関連付けられたプロセスが終了したとき (がシャット ダウン、通常終了または異常終了により、オペレーティング システムによって)、システムがプロセスに関する管理の情報を格納し、呼び出されますが、コンポーネントを返します<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForExit%28System.Int32%29&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> component can then access the information, which includes the <ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>, by using the <ph id="ph3">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph> to the exited process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントが含まれる情報にアクセスできます、<ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>を使用して、<ph id="ph3">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>終了したプロセスにします。</target>       </trans-unit>
        <trans-unit id="1684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>Because the associated process has exited, the <ph id="ph1">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph> property of the component no longer points to an existing process resource.</source>
          <target state="translated">関連付けられたプロセスが終了したため、<ph id="ph1">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>コンポーネントのプロパティが既存のプロセス リソースを参照しません。</target>       </trans-unit>
        <trans-unit id="1685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>Instead, the handle can be used only to access the operating system's information about the process resource.</source>
          <target state="translated">代わりに、ハンドルは、プロセスのリソースに関する情報のオペレーティング システムのアクセスにのみ使用できます。</target>       </trans-unit>
        <trans-unit id="1686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>The system is aware of handles to exited processes that have not been released by <ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph> components, so it keeps the <ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph> information in memory until the <ph id="ph4">&lt;xref:System.Diagnostics.Process&gt;</ph> component specifically frees the resources.</source>
          <target state="translated">システムは、解放されていない終了のプロセスへのハンドルの<ph id="ph1">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネント、それが維持されるように、<ph id="ph2">&lt;xref:System.Diagnostics.Process.ExitTime%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Diagnostics.Process.Handle%2A&gt;</ph>までメモリ内の情報、<ph id="ph4">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントが具体的には、リソースを解放します。</target>       </trans-unit>
        <trans-unit id="1687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>For this reason, any time you call <ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph> for a <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> instance, call <ph id="ph3">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph> when the associated process has terminated and you no longer need any administrative information about it.</source>
          <target state="translated">このため、いつでも呼び出す<ph id="ph1">&lt;xref:System.Diagnostics.Process.Start%2A&gt;</ph>の<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>インスタンス、呼び出す<ph id="ph3">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph>と関連付けられたプロセスが終了するには、管理情報が不要になった。</target>       </trans-unit>
        <trans-unit id="1688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph> frees the memory allocated to the exited process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.Close%2A&gt;</ph> 終了したプロセスに割り当てられたメモリを解放します。</target>       </trans-unit>
        <trans-unit id="1689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>See the code example for the <ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph> property.</source>
          <target state="translated">コード例を参照してください、<ph id="ph1">&lt;xref:System.Diagnostics.Process.ExitCode%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="1690" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>The wait setting could not be accessed.</source>
          <target state="translated">待機の設定にアクセスできませんでした。</target>       </trans-unit>
        <trans-unit id="1691" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>No process <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> has been set, and a <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.Handle" /&gt;</ph> from which the <ph id="ph3">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> property can be determined does not exist.</source>
          <target state="translated">プロセス <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> が設定されておらず、<ph id="ph3">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> プロパティを判別する元となる <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.Handle" /&gt;</ph> が存在しません。</target>       </trans-unit>
        <trans-unit id="1692" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1693" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>There is no process associated with this <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> オブジェクトに関連付けられているプロセスはありません。</target>       </trans-unit>
        <trans-unit id="1694" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1695" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>You are attempting to call <ph id="ph1">&lt;see cref="M:System.Diagnostics.Process.WaitForExit(System.Int32)" /&gt;</ph> for a process that is running on a remote computer.</source>
          <target state="translated">リモート コンピューターで実行されているプロセスの <ph id="ph1">&lt;see cref="M:System.Diagnostics.Process.WaitForExit(System.Int32)" /&gt;</ph> を呼び出そうとしています。</target>       </trans-unit>
        <trans-unit id="1696" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>This method is available only for processes that are running on the local computer.</source>
          <target state="translated">このメソッドはローカル コンピューターで実行中のプロセスに対してのみ使用可能です。</target>       </trans-unit>
        <trans-unit id="1697" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="milliseconds" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="milliseconds" /&gt;</ph> は無限のタイムアウトを表す -1 以外の負の数です。</target>       </trans-unit>
        <trans-unit id="1698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1700" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Process">
          <source>Causes the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component to wait for the associated process to enter an idle state.</source>
          <target state="translated">関連付けられたプロセスがアイドル状態になるまで、<ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントを待機させます。</target>       </trans-unit>
        <trans-unit id="1701" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>Causes the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component to wait indefinitely for the associated process to enter an idle state.</source>
          <target state="translated">関連付けられたプロセスがアイドル状態になるまで、<ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントを無期限に待機させます。</target>       </trans-unit>
        <trans-unit id="1702" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>This overload applies only to processes with a user interface and, therefore, a message loop.</source>
          <target state="translated">このオーバーロードは、ユーザー インターフェイスとメッセージ ループを持つプロセスにだけ適用されます。</target>       </trans-unit>
        <trans-unit id="1703" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the associated process has reached an idle state.</source>
          <target state="translated">関連付けられたプロセスがアイドル状態になった場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle&gt;</ph> to force the processing of your application to wait until the message loop has returned to the idle state.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle&gt;</ph>メッセージ ループは、アイドル状態に戻りました。 するまで待機する、アプリケーションの処理を強制します。</target>       </trans-unit>
        <trans-unit id="1705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>When a process with a user interface is executing, its message loop executes every time a Windows message is sent to the process by the operating system.</source>
          <target state="translated">ユーザー インターフェイスを持つプロセスを実行するときに、オペレーティング システムによって Windows のメッセージがプロセスに送信されるたびに、メッセージ ループを実行します。</target>       </trans-unit>
        <trans-unit id="1706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>The process then returns to the message loop.</source>
          <target state="translated">プロセスは、メッセージ ループに戻ります。</target>       </trans-unit>
        <trans-unit id="1707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>A process is said to be in an idle state when it is waiting for messages inside of a message loop.</source>
          <target state="translated">プロセスは、メッセージ ループ内でメッセージを待っているときに、アイドル状態にすると表現されます。</target>       </trans-unit>
        <trans-unit id="1708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>This state is useful, for example, when your application needs to wait for a starting process to finish creating its main window before the application communicates with that window.</source>
          <target state="translated">この状態役に立ちます、たとえば、アプリケーションは、プロセスの開始前に、そのウィンドウと通信するアプリケーションのメイン ウィンドウの作成を完了するまで待機する必要がある場合。</target>       </trans-unit>
        <trans-unit id="1709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>If a process does not have a message loop, <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle&gt;</ph> throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">プロセスにメッセージ ループがない場合<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle&gt;</ph>スロー、<ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle&gt;</ph> overload instructs the <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> component to wait indefinitely for the process to become idle in the message loop.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle&gt;</ph>オーバー ロードするように指示、<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントをメッセージ ループでアイドル状態になるプロセスに無期限に待機します。</target>       </trans-unit>
        <trans-unit id="1711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>This instruction can cause an application to stop responding.</source>
          <target state="translated">この命令には、アプリケーションの応答を停止する可能性があります。</target>       </trans-unit>
        <trans-unit id="1712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>For example, if the process is written to always exit its message loop immediately, as in the code fragment <ph id="ph1">`while(true)`</ph>.</source>
          <target state="translated">たとえば、プロセスが常に作成する場合、メッセージ ループを即座に終了コード フラグメントのように<ph id="ph1">`while(true)`</ph>です。</target>       </trans-unit>
        <trans-unit id="1713" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>The process does not have a graphical interface.</source>
          <target state="translated">プロセスにグラフィカル インターフェイスがありません。</target>       </trans-unit>
        <trans-unit id="1714" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1715" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>An unknown error occurred.</source>
          <target state="translated">不明なエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="1716" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>The process failed to enter an idle state.</source>
          <target state="translated">プロセスがアイドル状態になることができませんでした。</target>       </trans-unit>
        <trans-unit id="1717" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1718" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>The process has already exited.</source>
          <target state="translated">プロセスは既に終了しています。</target>       </trans-unit>
        <trans-unit id="1719" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1720" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>No process is associated with this <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> オブジェクトに関連付けられているプロセスはありません。</target>       </trans-unit>
        <trans-unit id="1721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1723" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>A value of 1 to <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> that specifies the amount of time, in milliseconds, to wait for the associated process to become idle.</source>
          <target state="translated">関連付けられたプロセスがアイドル状態になるまでの待機時間をミリ秒単位で指定する、1 ～ <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> の値。</target>       </trans-unit>
        <trans-unit id="1724" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>A value of 0 specifies an immediate return, and a value of -1 specifies an infinite wait.</source>
          <target state="translated">値 0 の場合はすぐに制御が戻され、値 -1 の場合は無期限に待機することを示します。</target>       </trans-unit>
        <trans-unit id="1725" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>Causes the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> component to wait the specified number of milliseconds for the associated process to enter an idle state.</source>
          <target state="translated">関連付けられたプロセスがアイドル状態になるまで、最大で指定したミリ秒間、<ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> コンポーネントを待機させます。</target>       </trans-unit>
        <trans-unit id="1726" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>This overload applies only to processes with a user interface and, therefore, a message loop.</source>
          <target state="translated">このオーバーロードは、ユーザー インターフェイスとメッセージ ループを持つプロセスにだけ適用されます。</target>       </trans-unit>
        <trans-unit id="1727" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the associated process has reached an idle state; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">関連付けられたプロセスがアイドル状態になった場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle%28System.Int32%29&gt;</ph> to force the processing of your application to wait until the message loop has returned to the idle state.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle%28System.Int32%29&gt;</ph>メッセージ ループは、アイドル状態に戻りました。 するまで待機する、アプリケーションの処理を強制します。</target>       </trans-unit>
        <trans-unit id="1729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>When a process with a user interface is executing, its message loop executes every time a Windows message is sent to the process by the operating system.</source>
          <target state="translated">ユーザー インターフェイスを持つプロセスを実行するときに、オペレーティング システムによって Windows のメッセージがプロセスに送信されるたびに、メッセージ ループを実行します。</target>       </trans-unit>
        <trans-unit id="1730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>The process then returns to the message loop.</source>
          <target state="translated">プロセスは、メッセージ ループに戻ります。</target>       </trans-unit>
        <trans-unit id="1731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>A process is said to be in an idle state when it is waiting for messages inside of a message loop.</source>
          <target state="translated">プロセスは、メッセージ ループ内でメッセージを待っているときに、アイドル状態にすると表現されます。</target>       </trans-unit>
        <trans-unit id="1732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>This state is useful, for example, when your application needs to wait for a starting process to finish creating its main window before the application communicates with that window.</source>
          <target state="translated">この状態役に立ちます、たとえば、アプリケーションは、プロセスの開始前に、そのウィンドウと通信するアプリケーションのメイン ウィンドウの作成を完了するまで待機する必要がある場合。</target>       </trans-unit>
        <trans-unit id="1733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>If a process does not have a message loop, <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle%28System.Int32%29&gt;</ph> throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">プロセスにメッセージ ループがない場合<ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle%28System.Int32%29&gt;</ph>スロー、<ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle%28System.Int32%29&gt;</ph> overload instructs the <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> component to wait a finite amount of time for the process to become idle in the message loop.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Process.WaitForInputIdle%28System.Int32%29&gt;</ph>オーバー ロードするように指示、<ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph>コンポーネントをメッセージ ループでアイドル状態になるプロセスの有限の時間を待機します。</target>       </trans-unit>
        <trans-unit id="1735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>If the associated process has not become idle by the end of the interval because the loop is still processing messages, <ph id="ph1">`false`</ph> is returned to the calling procedure.</source>
          <target state="translated">関連付けられたプロセスには、ループには、メッセージがまだ処理間隔の終了までにアイドル状態ならなかった場合<ph id="ph1">`false`</ph>が呼び出し元のプロシージャに返されます。</target>       </trans-unit>
        <trans-unit id="1736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="1737" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>The process does not have a graphical interface.</source>
          <target state="translated">プロセスにグラフィカル インターフェイスがありません。</target>       </trans-unit>
        <trans-unit id="1738" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1739" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>An unknown error occurred.</source>
          <target state="translated">不明なエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="1740" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>The process failed to enter an idle state.</source>
          <target state="translated">プロセスがアイドル状態になることができませんでした。</target>       </trans-unit>
        <trans-unit id="1741" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1742" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>The process has already exited.</source>
          <target state="translated">プロセスは既に終了しています。</target>       </trans-unit>
        <trans-unit id="1743" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1744" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>No process is associated with this <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> オブジェクトに関連付けられているプロセスはありません。</target>       </trans-unit>
        <trans-unit id="1745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1747" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>Gets the associated process's physical memory usage, in bytes.</source>
          <target state="translated">関連付けられたプロセスの物理メモリ使用量 (バイト単位) を取得します。</target>       </trans-unit>
        <trans-unit id="1748" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>The total amount of physical memory the associated process is using, in bytes.</source>
          <target state="translated">関連付けられたプロセスが使用している物理メモリの合計容量 (バイト単位)。</target>       </trans-unit>
        <trans-unit id="1749" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>The value returned by this property represents the current size of working set memory used by the process, in bytes.</source>
          <target state="translated">このプロパティによって返される値は、ワーキング セット メモリ (バイト単位)、プロセスによって使用されるは、現在のサイズを表します。</target>       </trans-unit>
        <trans-unit id="1750" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>The working set of a process is the set of memory pages currently visible to the process in physical RAM memory.</source>
          <target state="translated">プロセスのワーキング セットは、物理 RAM メモリにプロセスに現在表示されているメモリ ページのセットです。</target>       </trans-unit>
        <trans-unit id="1751" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>These pages are resident and available for an application to use without triggering a page fault.</source>
          <target state="translated">これらのページが常駐しているページ フォールトをトリガーすることがなく使用するアプリケーションを利用できます。</target>       </trans-unit>
        <trans-unit id="1752" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>The working set includes both shared and private data.</source>
          <target state="translated">ワーキング セットには、共有とプライベートの両方のデータが含まれています。</target>       </trans-unit>
        <trans-unit id="1753" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>The shared data includes the pages that contain all the instructions that the process executes, including the process modules and the system libraries.</source>
          <target state="translated">共有データには、プロセスのモジュールとシステム ライブラリなど、プロセスが実行されるすべての指示を含むページが含まれます。</target>       </trans-unit>
        <trans-unit id="1754" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>The following example starts an instance of Notepad.</source>
          <target state="translated">次の例では、メモ帳のインスタンスを開始します。</target>       </trans-unit>
        <trans-unit id="1755" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">例に、取得し、関連付けられたプロセスのさまざまなプロパティを表示します。</target>       </trans-unit>
        <trans-unit id="1756" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>The example detects when the process exits, and displays the process' exit code.</source>
          <target state="translated">例では、検出プロセスが終了すると、し、プロセスの終了コードを表示します。</target>       </trans-unit>
        <trans-unit id="1757" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="1758" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1759" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="1760" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>Gets the amount of physical memory, in bytes, allocated for the associated process.</source>
          <target state="translated">関連付けられたプロセスに割り当てられた物理メモリの量 (バイト単位) を取得します。</target>       </trans-unit>
        <trans-unit id="1761" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>The amount of physical memory, in bytes, allocated for the associated process.</source>
          <target state="translated">関連付けられたプロセスに割り当てられた物理メモリの量 (バイト単位)。</target>       </trans-unit>
        <trans-unit id="1762" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>The value returned by this property represents the current size of working set memory used by the process, in bytes.</source>
          <target state="translated">このプロパティによって返される値は、ワーキング セット メモリ (バイト単位)、プロセスによって使用されるは、現在のサイズを表します。</target>       </trans-unit>
        <trans-unit id="1763" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>The working set of a process is the set of memory pages currently visible to the process in physical RAM memory.</source>
          <target state="translated">プロセスのワーキング セットは、物理 RAM メモリにプロセスに現在表示されているメモリ ページのセットです。</target>       </trans-unit>
        <trans-unit id="1764" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>These pages are resident and available for an application to use without triggering a page fault.</source>
          <target state="translated">これらのページが常駐しているページ フォールトをトリガーすることがなく使用するアプリケーションを利用できます。</target>       </trans-unit>
        <trans-unit id="1765" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>The working set includes both shared and private data.</source>
          <target state="translated">ワーキング セットには、共有とプライベートの両方のデータが含まれています。</target>       </trans-unit>
        <trans-unit id="1766" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>The shared data includes the pages that contain all the instructions that the process executes, including instructions in the process modules and the system libraries.</source>
          <target state="translated">共有データには、プロセスのモジュールとシステム ライブラリで手順を含む、プロセスが実行されるすべての指示を含むページが含まれます。</target>       </trans-unit>
        <trans-unit id="1767" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>This property can be used to monitor memory usage on computers with 32-bit processors or 64-bit processors.</source>
          <target state="translated">このプロパティは、32 ビット プロセッサまたは 64 ビット プロセッサを持つコンピュータのメモリ使用量の監視に使用できます。</target>       </trans-unit>
        <trans-unit id="1768" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>The property value is equivalent to the <bpt id="p1">**</bpt>Working Set<ept id="p1">**</ept> performance counter for the process.</source>
          <target state="translated">プロパティの値が等価、<bpt id="p1">**</bpt>ワーキング セット<ept id="p1">**</ept>プロセスのパフォーマンス カウンター。</target>       </trans-unit>
        <trans-unit id="1769" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>The following code example starts an instance of the Notepad application.</source>
          <target state="translated">次のコード例では、メモ帳のインスタンスを起動します。</target>       </trans-unit>
        <trans-unit id="1770" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>The example then retrieves and displays various properties of the associated process.</source>
          <target state="translated">例に、取得し、関連付けられたプロセスのさまざまなプロパティを表示します。</target>       </trans-unit>
        <trans-unit id="1771" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>The example detects when the process exits, and displays its exit code and peak memory statistics.</source>
          <target state="translated">例では、検出プロセスが終了すると、し、終了コードとピーク メモリ統計情報を表示します。</target>       </trans-unit>
        <trans-unit id="1772" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</source>
          <target state="translated">プラットフォームが Windows 98 または Windows Millennium Edition (Windows Me) であるため、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="1773" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="1774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Process.WorkingSet64">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>