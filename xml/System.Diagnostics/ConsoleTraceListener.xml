<Type Name="ConsoleTraceListener" FullName="System.Diagnostics.ConsoleTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="653b0096816140df8e14c31875fab5b4d202d7ef" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56362360" /></Metadata><TypeSignature Language="C#" Value="public class ConsoleTraceListener : System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConsoleTraceListener extends System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ConsoleTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class ConsoleTraceListener&#xA;Inherits TextWriterTraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConsoleTraceListener : System::Diagnostics::TextWriterTraceListener" />
  <TypeSignature Language="F#" Value="type ConsoleTraceListener = class&#xA;    inherit TextWriterTraceListener" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TextWriterTraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2f169-101">トレース出力またはデバッグ出力を、標準出力と標準エラー出力ストリームのいずれかに転送します。</span><span class="sxs-lookup"><span data-stu-id="2f169-101">Directs tracing or debugging output to either the standard output or the standard error stream.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f169-102">使用して、<xref:System.Diagnostics.ConsoleTraceListener>トレースおよびデバッグ コンソールにメッセージを記述するクラス。</span><span class="sxs-lookup"><span data-stu-id="2f169-102">Use the <xref:System.Diagnostics.ConsoleTraceListener> class to write trace and debugging messages to the console.</span></span> <span data-ttu-id="2f169-103">初期化するには、<xref:System.Diagnostics.ConsoleTraceListener>にトレース メッセージを記述するオブジェクト、<xref:System.Console.Out%2A?displayProperty=nameWithType>ストリームまたは、<xref:System.Console.Error%2A?displayProperty=nameWithType>ストリーム。</span><span class="sxs-lookup"><span data-stu-id="2f169-103">You can initialize a <xref:System.Diagnostics.ConsoleTraceListener> object to write trace messages to the <xref:System.Console.Out%2A?displayProperty=nameWithType> stream or to the <xref:System.Console.Error%2A?displayProperty=nameWithType> stream.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f169-104"><xref:System.IDisposable> インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="2f169-104"><xref:System.IDisposable> interface.</span></span> <span data-ttu-id="2f169-105">型の使用が完了したら、直接的または間接的に型を破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2f169-105">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="2f169-106">型の直接 dispose を呼び出してその<xref:System.IDisposable.Dispose%2A>メソッド、`try` / `catch`ブロックします。</span><span class="sxs-lookup"><span data-stu-id="2f169-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a`try`/`catch` block.</span></span> <span data-ttu-id="2f169-107">間接的に型を破棄するには、`using` (C# の場合) または `Using` (Visual Basic 言語) などの言語構成要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="2f169-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="2f169-108">詳細については、<xref:System.IDisposable> インターフェイスに関するトピック内の「IDisposable を実装するオブジェクトの使用」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="2f169-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="2f169-109">トレースし、デバッグ出力を有効にすると、<xref:System.Diagnostics.ConsoleTraceListener>メッセージが書き込まれる、指定した<xref:System.Console?displayProperty=nameWithType>でメッセージが書き込まれる方法に似ていますが、ストリーム、<xref:System.Console.Write%2A?displayProperty=nameWithType>または<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2f169-109">When trace and debugging output is enabled, the <xref:System.Diagnostics.ConsoleTraceListener> messages are written to the specified <xref:System.Console?displayProperty=nameWithType> stream, which is similar to the way messages are written with the <xref:System.Console.Write%2A?displayProperty=nameWithType> or <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="2f169-110">コンソール アプリケーションで、<xref:System.Console?displayProperty=nameWithType>出力およびエラー ストリームでは、既存のコンソール ウィンドウにメッセージを書き込む、または書き込むストリームをリダイレクトすることができます、<xref:System.IO.TextWriter?displayProperty=nameWithType>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="2f169-110">In a console application, the <xref:System.Console?displayProperty=nameWithType> output and error streams write messages to the existing console window, or you can redirect the streams to write to a <xref:System.IO.TextWriter?displayProperty=nameWithType> instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2f169-111">コンソールが存在しない場合、Windows ベースのアプリケーションでは、ように、コンソールに書き込まれたメッセージは表示されません。</span><span class="sxs-lookup"><span data-stu-id="2f169-111">If the console does not exist, as in a Windows-based application, messages written to the console are not displayed.</span></span>  
  
 <span data-ttu-id="2f169-112">追加、<xref:System.Diagnostics.ConsoleTraceListener>オブジェクトを適切な<xref:System.Diagnostics.Trace.Listeners%2A>によって書き込まれたメッセージの場合、コレクション<xref:System.Diagnostics.Trace>、 <xref:System.Diagnostics.TraceSource>、または<xref:System.Diagnostics.Debug>コンソールに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="2f169-112">Add a <xref:System.Diagnostics.ConsoleTraceListener> object to the appropriate <xref:System.Diagnostics.Trace.Listeners%2A> collection if you want messages written through <xref:System.Diagnostics.Trace>, <xref:System.Diagnostics.TraceSource>, or <xref:System.Diagnostics.Debug> to be written to the console.</span></span> <span data-ttu-id="2f169-113">さらに、直接にコンソールを使用して、メッセージを書き込むことができます、<xref:System.Diagnostics.Trace.Write%2A?displayProperty=nameWithType>または<xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2f169-113">In addition, you can write messages directly to the console using the <xref:System.Diagnostics.Trace.Write%2A?displayProperty=nameWithType> or <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2f169-114"><xref:System.Diagnostics.Debug>と<xref:System.Diagnostics.Trace>クラスが同じ共有<xref:System.Diagnostics.TraceListenerCollection>コレクションをそれぞれを使用してアクセス`Listeners`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2f169-114">The <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes share the same <xref:System.Diagnostics.TraceListenerCollection> collection, accessed through their respective `Listeners` properties.</span></span> <span data-ttu-id="2f169-115">追加する場合、<xref:System.Diagnostics.ConsoleTraceListener>他のクラスが自動的に、同一のリスナーを使用してこれらのクラスのいずれかを使用して、コレクション オブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="2f169-115">If you add a <xref:System.Diagnostics.ConsoleTraceListener> object to the collection using one of these classes, the other class automatically uses the same listener.</span></span>  
  
 <span data-ttu-id="2f169-116">ほとんどのコンパイラでは、トレースを有効にして、デバッグ出力を条件付きコンパイル フラグ。</span><span class="sxs-lookup"><span data-stu-id="2f169-116">Most compilers enable trace and debug output through conditional compilation flags.</span></span> <span data-ttu-id="2f169-117">トレース出力またはデバッグ、によって書き込まれたメッセージを無効にした場合、<xref:System.Diagnostics.Debug?displayProperty=nameWithType>と<xref:System.Diagnostics.Trace?displayProperty=nameWithType>クラスが実質的に無視されます。</span><span class="sxs-lookup"><span data-stu-id="2f169-117">If you do not enable tracing or debugging, the messages written through the <xref:System.Diagnostics.Debug?displayProperty=nameWithType> and <xref:System.Diagnostics.Trace?displayProperty=nameWithType> classes are effectively ignored.</span></span> <span data-ttu-id="2f169-118">トレースを有効にして、出力をデバッグするための構文はコンパイラ固有です。C# または Visual Basic 以外のコンパイラを使用する場合は、コンパイラは、ドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="2f169-118">The syntax to enable trace and debug output is compiler specific; if you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="2f169-119">C# でのデバッグを有効にするには追加、 **/d:DEBUG**するを追加したり、コードをコンパイルするときに、コンパイラのコマンドラインにフラグ **#define デバッグ**ファイルの先頭にします。</span><span class="sxs-lookup"><span data-stu-id="2f169-119">To enable debugging in C#, add the **/d:DEBUG**flag to the compiler command line when you compile your code, or you can add **#define DEBUG** to the top of your file.</span></span> <span data-ttu-id="2f169-120">Visual Basic では、追加、 **/d:DEBUG = True**フラグをコンパイラ コマンドライン。</span><span class="sxs-lookup"><span data-stu-id="2f169-120">In Visual Basic, add the **/d:DEBUG=True** flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="2f169-121">C# でのトレースを有効にするには追加、 **/d:TRACE**フラグをコードのコンパイルまたは追加するときに、コンパイラのコマンドライン **# のトレースを define**ファイルの先頭にします。</span><span class="sxs-lookup"><span data-stu-id="2f169-121">To enable tracing in C#, add the **/d:TRACE** flag to the compiler command line when you compile your code, or add **#define TRACE** to the top of your file.</span></span> <span data-ttu-id="2f169-122">Visual Basic では、追加、 **/d:TRACE = True**フラグをコンパイラ コマンドライン。</span><span class="sxs-lookup"><span data-stu-id="2f169-122">In Visual Basic, add the **/d:TRACE=True** flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="2f169-123">追加することができます、<xref:System.Diagnostics.ConsoleTraceListener>オブジェクトを<xref:System.Diagnostics.Trace.Listeners%2A>、コード内のコレクションに追加できる、<xref:System.Diagnostics.ConsoleTraceListener>オブジェクトを<xref:System.Diagnostics.Trace.Listeners%2A>を通じて、アプリケーション構成ファイルのコレクション。</span><span class="sxs-lookup"><span data-stu-id="2f169-123">You can add a <xref:System.Diagnostics.ConsoleTraceListener> object to the <xref:System.Diagnostics.Trace.Listeners%2A> collection in your code, or you can add a <xref:System.Diagnostics.ConsoleTraceListener> object to the <xref:System.Diagnostics.Trace.Listeners%2A> collection through the application configuration file.</span></span> <span data-ttu-id="2f169-124">追加、<xref:System.Diagnostics.ConsoleTraceListener>固有のコード セクションまたは実行パスのメッセージを記述するコード内のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2f169-124">Add the <xref:System.Diagnostics.ConsoleTraceListener> object in your code to write messages for a specific code section or execution path.</span></span> <span data-ttu-id="2f169-125">追加、<xref:System.Diagnostics.ConsoleTraceListener>アプリケーションを実行しながら、すべてのトレースとデバッグに出力するため、アプリケーション構成ファイル内のオブジェクトがコンソールにメッセージします。</span><span class="sxs-lookup"><span data-stu-id="2f169-125">Add the <xref:System.Diagnostics.ConsoleTraceListener> object in your application configuration file to direct all trace and debug messages to the console while the application executes.</span></span>  
  
 <span data-ttu-id="2f169-126">でトレースを記述およびコードの特定のセクションは、コンソールにメッセージをデバッグするには初期化、<xref:System.Diagnostics.ConsoleTraceListener>し、オブジェクトに追加、<xref:System.Diagnostics.Trace.Listeners%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="2f169-126">To write trace and debug messages to the console for a specific section of code, initialize a <xref:System.Diagnostics.ConsoleTraceListener> object and add it to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="2f169-127">使用してメッセージを含むコードのセクションをインストルメント化、<xref:System.Diagnostics.Trace>または<xref:System.Diagnostics.Debug>クラス。</span><span class="sxs-lookup"><span data-stu-id="2f169-127">Instrument the section of code that contains messages using the <xref:System.Diagnostics.Trace> or <xref:System.Diagnostics.Debug> classes.</span></span> <span data-ttu-id="2f169-128">コード セクションの末尾には、削除、<xref:System.Diagnostics.ConsoleTraceListener>オブジェクトから、<xref:System.Diagnostics.Trace.Listeners%2A>コレクション、および呼び出し、<xref:System.Diagnostics.TextWriterTraceListener.Close%2A>メソッドを<xref:System.Diagnostics.ConsoleTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="2f169-128">At the end of the code section, remove the <xref:System.Diagnostics.ConsoleTraceListener> object from the <xref:System.Diagnostics.Trace.Listeners%2A> collection, and call the <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> method on the <xref:System.Diagnostics.ConsoleTraceListener>.</span></span>  
  
 <span data-ttu-id="2f169-129">すべてのトレースを直接デバッグするメッセージをコンソール アプリケーションを実行しながら、追加、<xref:System.Diagnostics.ConsoleTraceListener>オブジェクトがアプリケーション構成ファイルにします。</span><span class="sxs-lookup"><span data-stu-id="2f169-129">To direct all trace and debug messages to the console while the application executes, add a <xref:System.Diagnostics.ConsoleTraceListener> object to the application configuration file.</span></span> <span data-ttu-id="2f169-130">アプリケーションの名前に対応する構成ファイルまたは app.config ファイルを編集、[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]プロジェクト。</span><span class="sxs-lookup"><span data-stu-id="2f169-130">Edit the configuration file that corresponds to the name of your application, or the app.config file in a [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] project.</span></span> <span data-ttu-id="2f169-131">このファイルでの要素を挿入、<xref:System.Diagnostics.ConsoleTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="2f169-131">In this file, insert an element for a <xref:System.Diagnostics.ConsoleTraceListener>.</span></span>  
  
 <span data-ttu-id="2f169-132">次の例では、追加、<xref:System.Diagnostics.ConsoleTraceListener>という名前のオブジェクト`configConsoleListener`を<xref:System.Diagnostics.Trace.Listeners%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="2f169-132">The following example adds a <xref:System.Diagnostics.ConsoleTraceListener> object named `configConsoleListener` to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="configConsoleListener"            type="System.Diagnostics.ConsoleTraceListener" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
 </configuration>  
```  
  
 <span data-ttu-id="2f169-133">アプリケーション構成ファイルでトレース リスナーを追加する方法について詳しくは、次を参照してください。 [&lt;リスナー&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-trace.md)します。</span><span class="sxs-lookup"><span data-stu-id="2f169-133">For details about adding trace listeners in the application configuration file, see [&lt;listeners&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-trace.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f169-134">次のコード例では、2 つのパブリック メソッドをクラスで構成されるコンソール アプリケーションを実装します。</span><span class="sxs-lookup"><span data-stu-id="2f169-134">The following code example implements a console application consisting of a class with two public methods.</span></span>  
  
 <span data-ttu-id="2f169-135">`Main`メソッドがコマンドライン引数を検査し、トレース出力が標準エラー ストリームまたは標準出力ストリームに送られるかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="2f169-135">The `Main` method examines the command-line arguments and determines if trace output should be directed to the standard error stream or the standard output stream.</span></span> <span data-ttu-id="2f169-136">`Main` 作成し、初期化、<xref:System.Diagnostics.ConsoleTraceListener>指定したオブジェクト<xref:System.Console>出力ストリーム、および、このオブジェクトをトレース リスナー コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="2f169-136">`Main` creates and initializes a <xref:System.Diagnostics.ConsoleTraceListener> object for the specified <xref:System.Console> output stream, and adds this object to the trace listener collection.</span></span> <span data-ttu-id="2f169-137">呼び出して、`WriteEnvironmentInfoToTrace`メソッドで、実行中の環境と、トレース出力をトレース リスナーの構成に関する詳細情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="2f169-137">It then calls the `WriteEnvironmentInfoToTrace` method, which writes details about the executing environment and the trace listener configuration to the trace output.</span></span>  
  
 <span data-ttu-id="2f169-138">環境およびトレースの構成の詳細がで指定されたコンソール出力ストリームに書き込まれるサンプル アプリケーションを実行すると、<xref:System.Diagnostics.ConsoleTraceListener>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2f169-138">When the example application runs, the environment and trace configuration details are written to the specified console output stream through the <xref:System.Diagnostics.ConsoleTraceListener> object.</span></span>  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#1)]
 [!code-vb[Diagnostics_ConsoleTraceListener#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
    <altmember cref="T:System.Console" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f169-139"><see cref="T:System.Diagnostics.ConsoleTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="2f169-139">Initializes a new instance of the <see cref="T:System.Diagnostics.ConsoleTraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsoleTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsoleTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f169-140">標準出力ストリームへのトレース出力を指定して、<see cref="T:System.Diagnostics.ConsoleTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="2f169-140">Initializes a new instance of the <see cref="T:System.Diagnostics.ConsoleTraceListener" /> class with trace output written to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f169-141">このコンス トラクターの初期化、<xref:System.Diagnostics.ConsoleTraceListener>へのメッセージを記述するオブジェクト、<xref:System.Console.Out%2A?displayProperty=nameWithType>ストリーム。</span><span class="sxs-lookup"><span data-stu-id="2f169-141">This constructor initializes a <xref:System.Diagnostics.ConsoleTraceListener> object to write messages to the <xref:System.Console.Out%2A?displayProperty=nameWithType> stream.</span></span> <span data-ttu-id="2f169-142">その<xref:System.Diagnostics.TraceListener.Name%2A>プロパティは空の文字列に初期化されます ("")。</span><span class="sxs-lookup"><span data-stu-id="2f169-142">Its <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f169-143">次のコード例を初期化します、<xref:System.Diagnostics.ConsoleTraceListener>指定したオブジェクト<xref:System.Console>ストリームを出力およびトレース リスナー コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="2f169-143">The following code example initializes a <xref:System.Diagnostics.ConsoleTraceListener> object for the specified <xref:System.Console> output stream and adds it to the trace listener collection.</span></span> <span data-ttu-id="2f169-144">このコード例が示されている例の一部、<xref:System.Diagnostics.ConsoleTraceListener>クラス。</span><span class="sxs-lookup"><span data-stu-id="2f169-144">This code example is part of a larger example provided for the <xref:System.Diagnostics.ConsoleTraceListener> class.</span></span>  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#2)]
 [!code-vb[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="P:System.Console.Out" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsoleTraceListener (bool useErrorStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool useErrorStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (useErrorStream As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsoleTraceListener(bool useErrorStream);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ConsoleTraceListener : bool -&gt; System.Diagnostics.ConsoleTraceListener" Usage="new System.Diagnostics.ConsoleTraceListener useErrorStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="useErrorStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useErrorStream"><span data-ttu-id="2f169-145">トレース出力およびデバッグ出力を標準エラー ストリームに書き込む場合は <see langword="true" />。標準出力ストリームに書き込む場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2f169-145"><see langword="true" /> to write tracing and debugging output to the standard error stream; <see langword="false" /> to write tracing and debugging output to the standard output stream.</span></span></param>
        <summary><span data-ttu-id="2f169-146">トレース出力を標準出力ストリームまたは標準エラー ストリームに書き込むためのオプションを指定して、<see cref="T:System.Diagnostics.ConsoleTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="2f169-146">Initializes a new instance of the <see cref="T:System.Diagnostics.ConsoleTraceListener" /> class with an option to write trace output to the standard output stream or the standard error stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f169-147">このコンス トラクターの初期化、<xref:System.Diagnostics.ConsoleTraceListener>いずれかにメッセージを書き込むオブジェクト、<xref:System.Console.Out%2A?displayProperty=nameWithType>または<xref:System.Console.Error%2A?displayProperty=nameWithType>ストリーム。</span><span class="sxs-lookup"><span data-stu-id="2f169-147">This constructor initializes a <xref:System.Diagnostics.ConsoleTraceListener> object to write messages to either the <xref:System.Console.Out%2A?displayProperty=nameWithType> or the <xref:System.Console.Error%2A?displayProperty=nameWithType> stream.</span></span> <span data-ttu-id="2f169-148">その<xref:System.Diagnostics.TraceListener.Name%2A>プロパティは空の文字列に初期化されます ("")。</span><span class="sxs-lookup"><span data-stu-id="2f169-148">Its <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f169-149">次のコード例を初期化します、<xref:System.Diagnostics.ConsoleTraceListener>指定したオブジェクト<xref:System.Console>ストリームを出力およびトレース リスナー コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="2f169-149">The following code example initializes a <xref:System.Diagnostics.ConsoleTraceListener> object for the specified <xref:System.Console> output stream and adds it to the trace listener collection.</span></span> <span data-ttu-id="2f169-150">このコード例が示されている例の一部、<xref:System.Diagnostics.ConsoleTraceListener>クラス。</span><span class="sxs-lookup"><span data-stu-id="2f169-150">This code example is part of a larger example provided for the <xref:System.Diagnostics.ConsoleTraceListener> class.</span></span>  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#2)]
 [!code-vb[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Console" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="consoleTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f169-151">このトレース リスナーに指定されたストリームへの出力を閉じます。</span><span class="sxs-lookup"><span data-stu-id="2f169-151">Closes the output to the stream specified for this trace listener.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f169-152">この指定されたストリーム<xref:System.Diagnostics.ConsoleTraceListener>インスタンス (いずれか、<xref:System.Console.Out%2A?displayProperty=nameWithType>ストリームまたは<xref:System.Console.Error%2A?displayProperty=nameWithType>ストリーム) が終了します。</span><span class="sxs-lookup"><span data-stu-id="2f169-152">The stream specified for this <xref:System.Diagnostics.ConsoleTraceListener> instance (either the <xref:System.Console.Out%2A?displayProperty=nameWithType> stream or the <xref:System.Console.Error%2A?displayProperty=nameWithType> stream) is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>