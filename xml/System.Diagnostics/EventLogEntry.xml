<Type Name="EventLogEntry" FullName="System.Diagnostics.EventLogEntry">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="35dfb75bdaa57dcdeaa058a6955423618173b22d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EventLogEntry : System.ComponentModel.Component, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EventLogEntry extends System.ComponentModel.Component implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventLogEntry" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventLogEntry&#xA;Inherits Component&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogEntry sealed : System::ComponentModel::Component, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9db82-101">イベント ログの単一レコードをカプセル化します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9db82-101">Encapsulates a single record in the event log.</span>
      </span>
      <span data-ttu-id="9db82-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9db82-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9db82-103">通常はいないインスタンスを作成するの<xref:System.Diagnostics.EventLogEntry>直接使用するときに、<xref:System.Diagnostics.EventLog>クラスです。</span><span class="sxs-lookup"><span data-stu-id="9db82-103">You usually will not create instances of <xref:System.Diagnostics.EventLogEntry> directly when working with the <xref:System.Diagnostics.EventLog> class.</span></span> <span data-ttu-id="9db82-104"><xref:System.Diagnostics.EventLog.Entries%2A>のメンバー、<xref:System.Diagnostics.EventLog>クラスのコレクションを格納する<xref:System.Diagnostics.EventLogEntry>のインスタンスを使用して読み取るときで反復処理する、<xref:System.Diagnostics.EventLogEntryCollection.Item%2A?displayProperty=nameWithType>クラス インデックス メンバー。</span><span class="sxs-lookup"><span data-stu-id="9db82-104">The <xref:System.Diagnostics.EventLog.Entries%2A> member of the <xref:System.Diagnostics.EventLog> class contains a collection of <xref:System.Diagnostics.EventLogEntry> instances, which you iterate over when reading by using the <xref:System.Diagnostics.EventLogEntryCollection.Item%2A?displayProperty=nameWithType> class index member.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9db82-105">この型は、<xref:System.IDisposable>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="9db82-105">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="9db82-106">型を使用してが完了したらを直接的または間接的にその破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="9db82-106">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="9db82-107">型の直接 dispose を呼び出す、<xref:System.IDisposable.Dispose%2A>メソッドで、 `try` / `catch`ブロックします。</span><span class="sxs-lookup"><span data-stu-id="9db82-107">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="9db82-108">直接ことのない破棄する場合など、言語コンストラクトを使用して`using`(C# の場合) または`Using`(Visual Basic で)。</span><span class="sxs-lookup"><span data-stu-id="9db82-108">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="9db82-109">詳細についてを参照してください"を使用して、オブジェクトを実装する IDisposable"、<xref:System.IDisposable>インターフェイスに関するトピック。</span><span class="sxs-lookup"><span data-stu-id="9db82-109">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9db82-110">使用を次のコード例に示します、<xref:System.Diagnostics.EventLogEntry>クラスです。</span><span class="sxs-lookup"><span data-stu-id="9db82-110">The following code example demonstrates the use of the <xref:System.Diagnostics.EventLogEntry> class.</span></span> <span data-ttu-id="9db82-111">この例では、`switch`ステートメントでは、コンソールの入力を使用して、指定したイベントの種類のイベント ログ エントリの検索します。</span><span class="sxs-lookup"><span data-stu-id="9db82-111">In this example, a `switch` statement uses console input to search for event log entries for the specified event type.</span></span>  <span data-ttu-id="9db82-112">一致が見つかった場合は、ログ エントリのソース情報がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="9db82-112">If a match is found, log entry source information is displayed at the console.</span></span>  
  
 [!code-cpp[EventLogEntry_Source#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogEntry_Source/CPP/eventlogentry_source.cpp#1)]
 [!code-csharp[EventLogEntry_Source#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogEntry_Source/CS/eventlogentry_source.cs#1)]
 [!code-vb[EventLogEntry_Source#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogEntry_Source/VB/eventlogentry_source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.EventLog" />
    <altmember cref="T:System.Diagnostics.EventLogEntryCollection" />
    <altmember cref="T:System.Diagnostics.EventInstance" />
  </Docs>
  <Members>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public string Category { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Category" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.Category" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Category As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Category { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The category of this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9db82-113">このエントリの <see cref="P:System.Diagnostics.EventLogEntry.CategoryNumber" /> プロパティに関連付けられているテキストを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-113">Gets the text associated with the <see cref="P:System.Diagnostics.EventLogEntry.CategoryNumber" /> property for this entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9db82-114">アプリケーション固有のカテゴリ テキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-114">The application-specific category text.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9db82-115">各アプリケーション (イベント ソース) には、独自の番号付けされたカテゴリとがマップされているテキスト文字列を定義できます。</span><span class="sxs-lookup"><span data-stu-id="9db82-115">Each application (event source) can define its own numbered categories and the text strings to which they are mapped.</span></span> <span data-ttu-id="9db82-116">イベント ビューアーでは、ログにイベントをフィルター処理するカテゴリを使用できます。</span><span class="sxs-lookup"><span data-stu-id="9db82-116">The Event Viewer can use the category to filter events in the log.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="9db82-117">カテゴリに関連付けられている挿入文字列の 1 つに空白を割り当てることはできませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-117">The space could not be allocated for one of the insertion strings associated with the category.</span>
          </span>
        </exception>
        <altmember cref="P:System.Diagnostics.EventLogEntry.CategoryNumber" />
        <altmember cref="P:System.Diagnostics.EventInstance.CategoryId" />
      </Docs>
    </Member>
    <Member MemberName="CategoryNumber">
      <MemberSignature Language="C#" Value="public short CategoryNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 CategoryNumber" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.CategoryNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CategoryNumber As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short CategoryNumber { short get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("An ID for the category of this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9db82-118">イベント ログ エントリのカテゴリ番号を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-118">Gets the category number of the event log entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9db82-119">このエントリのアプリケーション固有のカテゴリ番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-119">The application-specific category number for this entry.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9db82-120">各アプリケーション (イベント ソース) には、独自の番号付けされたカテゴリとがマップされているテキスト文字列を定義できます。</span><span class="sxs-lookup"><span data-stu-id="9db82-120">Each application (event source) can define its own numbered categories and the text strings to which they are mapped.</span></span> <span data-ttu-id="9db82-121">イベント ビューアーでは、ログにイベントをフィルター処理するカテゴリを使用できます。</span><span class="sxs-lookup"><span data-stu-id="9db82-121">The Event Viewer can use the category to filter events in the log.</span></span> <span data-ttu-id="9db82-122">カテゴリ必要がある連続したから始まるを番号番号 1 です。</span><span class="sxs-lookup"><span data-stu-id="9db82-122">The categories must be numbered consecutively beginning with the number 1.</span></span> <span data-ttu-id="9db82-123">カテゴリの番号がで指定された、<xref:System.Diagnostics.EventInstance.CategoryId%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="9db82-123">The category number is specified by the <xref:System.Diagnostics.EventInstance.CategoryId%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="9db82-124">カテゴリ ローカライズされたカテゴリ文字列を表示するリソースの識別子として使用できるまたはイベント ビューアーは、数値の値として、カテゴリを表示できます。</span><span class="sxs-lookup"><span data-stu-id="9db82-124">The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</span></span> <span data-ttu-id="9db82-125">詳細については、「<xref:System.Diagnostics.EventInstance>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="9db82-125">For more information, see <xref:System.Diagnostics.EventInstance>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogEntry.EntryType" />
        <altmember cref="P:System.Diagnostics.EventLogEntry.Category" />
        <altmember cref="P:System.Diagnostics.EventInstance.CategoryId" />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Data { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Binary data associated with this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9db82-126">エントリに関連付けられているバイナリ データを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-126">Gets the binary data associated with the entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9db82-127">エントリに関連付けられているバイナリ データを保持するバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-127">An array of bytes that holds the binary data associated with the entry.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9db82-128">このプロパティを取得するエントリのイベント固有のバイナリ データ、イベント ビューアーを 16 進数とテキストを組み合わせた形式で表示するコピーを保持する配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="9db82-128">Getting this property creates an array that holds a copy of the entry's event-specific binary data, which the Event Viewer displays in combined hexadecimal and text format.</span></span> <span data-ttu-id="9db82-129">イベントに固有のデータが使用されるは、アプリケーションはたとえば、イベント ビューアーとは独立して処理する情報を格納する、ログ ファイルからレポートを作成するのに場合があります。</span><span class="sxs-lookup"><span data-stu-id="9db82-129">Event-specific data is sometimes used to store information that the application will process independently of the Event Viewer, for example, to make reports from the log file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntryType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.EventLogEntryType EntryType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.EventLogEntryType EntryType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.EntryType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntryType As EventLogEntryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::EventLogEntryType EntryType { System::Diagnostics::EventLogEntryType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The type of this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLogEntryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9db82-130">エントリのイベントの種類を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-130">Gets the event type of this entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9db82-131">イベント ログ内のエントリに関連付けられているイベントの種類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-131">The event type that is associated with the entry in the event log.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9db82-132">すべてのイベントの種類は、適切に定義された共通のデータを持ち、必要に応じて、イベント固有のデータを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="9db82-132">All event types have well-defined common data and can optionally include event-specific data.</span></span> <span data-ttu-id="9db82-133">各イベントは、アプリケーションがイベントをレポートするときを示す 1 つの型です。</span><span class="sxs-lookup"><span data-stu-id="9db82-133">Each event is of a single type, which the application indicates when it reports the event.</span></span> <span data-ttu-id="9db82-134">イベント ビューアーでは、イベントの種類を使用して、イベント ログのリスト ビューに表示するアイコンを決定します。</span><span class="sxs-lookup"><span data-stu-id="9db82-134">The Event Viewer uses the event type to determine which icon to display in the list view of the event log.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9db82-135">使用を次のコード例に示します、<xref:System.Diagnostics.EventLogEntry.EntryType%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="9db82-135">The following code example demonstrates the use of the <xref:System.Diagnostics.EventLogEntry.EntryType%2A> property.</span></span> <span data-ttu-id="9db82-136">この例では、`switch`ステートメントでは、コンソールの入力を使用して、指定されたイベント ログ エントリの検索<xref:System.Diagnostics.EventLogEntry.EntryType%2A>です。</span><span class="sxs-lookup"><span data-stu-id="9db82-136">In this example, a `switch` statement uses console input to search for event log entries for the specified <xref:System.Diagnostics.EventLogEntry.EntryType%2A>.</span></span>  <span data-ttu-id="9db82-137">一致が見つかった場合は、ログ エントリのソース情報がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="9db82-137">If a match is found, log entry source information is displayed at the console.</span></span>  
  
 [!code-cpp[EventLogEntry_Source#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogEntry_Source/CPP/eventlogentry_source.cpp#1)]
 [!code-csharp[EventLogEntry_Source#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogEntry_Source/CS/eventlogentry_source.cs#1)]
 [!code-vb[EventLogEntry_Source#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogEntry_Source/VB/eventlogentry_source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventInstance.EntryType" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Diagnostics.EventLogEntry otherEntry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(class System.Diagnostics.EventLogEntry otherEntry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (otherEntry As EventLogEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Diagnostics::EventLogEntry ^ otherEntry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherEntry" Type="System.Diagnostics.EventLogEntry" />
      </Parameters>
      <Docs>
        <param name="otherEntry">
          <span data-ttu-id="9db82-138">比較対象の <see cref="T:System.Diagnostics.EventLogEntry" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-138">The <see cref="T:System.Diagnostics.EventLogEntry" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9db82-139">2 つのイベント ログ エントリを比較します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-139">Performs a comparison between two event log entries.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9db82-140">
            <see cref="T:System.Diagnostics.EventLogEntry" /> オブジェクトが同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-140">
              <see langword="true" /> if the <see cref="T:System.Diagnostics.EventLogEntry" /> objects are identical; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9db82-141">このメソッドは、2 つのオブジェクト間のバイト単位の比較を実行します。</span><span class="sxs-lookup"><span data-stu-id="9db82-141">This method performs a byte-by-byte comparison between the two objects.</span></span> <span data-ttu-id="9db82-142">によって決定されないかどうか、2 つ<xref:System.Diagnostics.EventLogEntry>インスタンスが同じオブジェクトを参照してください。</span><span class="sxs-lookup"><span data-stu-id="9db82-142">It does not determine whether the two <xref:System.Diagnostics.EventLogEntry> instances refer to the same object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventID">
      <MemberSignature Language="C#" Value="public int EventID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EventID" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.EventID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EventID { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("An ID number for this event entry.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use InstanceId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9db82-143">現在のイベント エントリのアプリケーション固有のイベント識別子を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-143">Gets the application-specific event identifier for the current event entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9db82-144">イベント メッセージの、アプリケーション固有の識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-144">The application-specific identifier for the event message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9db82-145">この値は、イベント ログ、先頭の 2 ビットのマスクがオフで、エントリのイベントの識別子を表します。</span><span class="sxs-lookup"><span data-stu-id="9db82-145">This value represents the event identifier for the entry in the event log, with the top two bits masked off.</span></span> <span data-ttu-id="9db82-146"><xref:System.Diagnostics.EventLogEntry.InstanceId%2A>プロパティ、イベント ログ エントリをイベント ソースのメッセージ リソース ファイル内のイベントの完全な 32 ビット リソース識別子を表します。</span><span class="sxs-lookup"><span data-stu-id="9db82-146">The <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property for an event log entry represents the full 32-bit resource identifier for the event in the message resource file for the event source.</span></span> <span data-ttu-id="9db82-147">同じソースからの 2 つのイベント ログ エントリの対応することができますが<xref:System.Diagnostics.EventLogEntry.EventID%2A>、値は、異なるが<xref:System.Diagnostics.EventLogEntry.InstanceId%2A>イベント識別子の先頭の 2 ビットの違いにより値。</span><span class="sxs-lookup"><span data-stu-id="9db82-147">Two event log entries from the same source can have matching <xref:System.Diagnostics.EventLogEntry.EventID%2A> values, but have different <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> values due to differences in the top two bits of the event identifier.</span></span>  
  
 <span data-ttu-id="9db82-148">アプリケーションがのいずれかを使用してイベント エントリを書き込んだかどうか、 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 、メソッド、<xref:System.Diagnostics.EventLogEntry.EventID%2A>と一致する省略可能なプロパティ`eventId`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="9db82-148">If the application wrote the event entry using one of the <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods, the <xref:System.Diagnostics.EventLogEntry.EventID%2A> property matches the optional `eventId` parameter.</span></span> <span data-ttu-id="9db82-149">アプリケーションでは、イベントを使用して、作成した場合<xref:System.Diagnostics.EventLog.WriteEvent%2A>または Win32 API `ReportEvent`、<xref:System.Diagnostics.EventLogEntry.EventID%2A>上位 2 ビットのマスクがオフで、イベントのリソース識別子と一致するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="9db82-149">If the application wrote the event using <xref:System.Diagnostics.EventLog.WriteEvent%2A> or the Win32 API `ReportEvent`, the <xref:System.Diagnostics.EventLogEntry.EventID%2A> property matches the resource identifier for the event, with the top two bits masked off.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogEntry.InstanceId" />
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Sequence numer of this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9db82-150">イベント ログでのこのエントリのインデックスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-150">Gets the index of this entry in the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9db82-151">イベント ログでのこのエントリのインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-151">The index of this entry in the event log.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9db82-152">この番号は 0 から始まる必ずしもではありません。</span><span class="sxs-lookup"><span data-stu-id="9db82-152">This number is not necessarily zero-based.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceId">
      <MemberSignature Language="C#" Value="public long InstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 InstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.InstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceId As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long InstanceId { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The instance ID for this event entry.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9db82-153">イベント エントリのメッセージ テキストを指定するリソース識別子を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-153">Gets the resource identifier that designates the message text of the event entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9db82-154">イベント ソースのメッセージ リソース ファイルの文字列定義に対応するリソース識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-154">A resource identifier that corresponds to a string definition in the message resource file of the event source.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9db82-155"><xref:System.Diagnostics.EventLogEntry.InstanceId%2A>プロパティが構成されているイベント ソースのイベントのエントリを一意に識別します。</span><span class="sxs-lookup"><span data-stu-id="9db82-155">The <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property uniquely identifies an event entry for a configured event source.</span></span> <span data-ttu-id="9db82-156"><xref:System.Diagnostics.EventLogEntry.InstanceId%2A>イベント ログのエントリがイベント ソースのメッセージ リソース ファイル内のイベントの完全な 32 ビット リソース識別子を表します。</span><span class="sxs-lookup"><span data-stu-id="9db82-156">The <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> for an event log entry represents the full 32-bit resource identifier for the event in the message resource file for the event source.</span></span> <span data-ttu-id="9db82-157"><xref:System.Diagnostics.EventLogEntry.EventID%2A>プロパティ equals、<xref:System.Diagnostics.EventLogEntry.InstanceId%2A>上位 2 ビットのマスクがオフにします。</span><span class="sxs-lookup"><span data-stu-id="9db82-157">The <xref:System.Diagnostics.EventLogEntry.EventID%2A> property equals the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> with the top two bits masked off.</span></span> <span data-ttu-id="9db82-158">同じソースからの 2 つのイベント ログ エントリの対応することができますが<xref:System.Diagnostics.EventLogEntry.EventID%2A>、値は、異なるが<xref:System.Diagnostics.EventLogEntry.InstanceId%2A>リソース識別子の先頭の 2 ビットの違いにより値。</span><span class="sxs-lookup"><span data-stu-id="9db82-158">Two event log entries from the same source can have matching <xref:System.Diagnostics.EventLogEntry.EventID%2A> values, but have different <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> values due to differences in the top two bits of the resource identifier.</span></span>  
  
 <span data-ttu-id="9db82-159">アプリケーションがのいずれかを使用してイベント エントリを書き込んだかどうか、 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 、メソッド、<xref:System.Diagnostics.EventLogEntry.InstanceId%2A>と一致する省略可能なプロパティ`eventId`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="9db82-159">If the application wrote the event entry using one of the <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods, the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property matches the optional `eventId` parameter.</span></span> <span data-ttu-id="9db82-160">アプリケーションでは、イベントを使用して、作成した場合<xref:System.Diagnostics.EventLog.WriteEvent%2A>、<xref:System.Diagnostics.EventLogEntry.InstanceId%2A>で指定されたリソース識別子と一致するプロパティ、<xref:System.Diagnostics.EventInstance.InstanceId%2A>の`instance`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="9db82-160">If the application wrote the event using <xref:System.Diagnostics.EventLog.WriteEvent%2A>, the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property matches the resource identifier specified in the <xref:System.Diagnostics.EventInstance.InstanceId%2A> of the `instance` parameter.</span></span> <span data-ttu-id="9db82-161">アプリケーションが Win32 API を使用して、イベントを書き込んだかどうか`ReportEvent`、<xref:System.Diagnostics.EventLogEntry.InstanceId%2A>で指定されたリソース識別子と一致するプロパティ、`dwEventID`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="9db82-161">If the application wrote the event using the Win32 API `ReportEvent`, the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property matches the resource identifier specified in the `dwEventID` parameter.</span></span>  
  
 <span data-ttu-id="9db82-162">イベント メッセージの定義とリソースのイベント ログ ファイルを作成する詳細については、プラットフォーム SDK のドキュメントの「メッセージ コンパイラ」トピックを参照してください[ http://msdn.microsoft.com](http://msdn.microsoft.com/)です。詳細については、イベント ログの識別子は、プラットフォーム SDK の「イベント Identifiers」トピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="9db82-162">For details about defining event messages and building event log resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/). For details about event log identifiers, see the "Event Identifiers" topic in the Platform SDK.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9db82-163">次のコード例では、特定のリソース識別子を持つエントリをイベント ログを検索します。</span><span class="sxs-lookup"><span data-stu-id="9db82-163">The following code example searches an event log for entries with a particular resource identifier.</span></span> <span data-ttu-id="9db82-164">コード例では、各一致するエントリのイベント メッセージを表示し、ログに一致するエントリの合計数をカウントします。</span><span class="sxs-lookup"><span data-stu-id="9db82-164">The code example displays the event message for each matching entry, and counts the total number of matching entries in the log.</span></span> <span data-ttu-id="9db82-165">各エントリのメッセージ テキストがでなくてもかまいません同じです。各イベント メッセージは、イベント ソースのメッセージ ファイル、挿入文字列、およびそれに書き込まれたときに使用されるパラメーターに依存します。</span><span class="sxs-lookup"><span data-stu-id="9db82-165">The message text for each entry may or may not be the same; each event message depends on the event source message file, insertion strings, and parameters used when it was written.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#10](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#10)]
 [!code-csharp[EventLog_WriteEvent#10](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#10)]
 [!code-vb[EventLog_WriteEvent#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventInstance.InstanceId" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The Computer on which this event entry occured.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9db82-166">エントリを生成したコンピューターの名前を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-166">Gets the name of the computer on which this entry was generated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9db82-167">イベント ログを格納しているコンピューターの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-167">The name of the computer that contains the event log.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Message { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.BinaryEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The message of this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9db82-168">イベント エントリに関連付けられているローカライズ済みのメッセージを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-168">Gets the localized message associated with this event entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9db82-169">メッセージ用の書式設定されローカライズされたテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-169">The formatted, localized text for the message.</span>
          </span>
          <span data-ttu-id="9db82-170">これには関連付けられた置換文字列が含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-170">This includes associated replacement strings.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9db82-171">このプロパティを取得するには、ローカライズされたテキストを含む .dll ファイルのファイル名を確認するレジストリが表示されます。</span><span class="sxs-lookup"><span data-stu-id="9db82-171">Getting this property opens the registry to determine the file name of the .dll file that contains the localized text.</span></span> <span data-ttu-id="9db82-172">ソース コードをテストするときに、レジストリ エラーが発生する場合は、.dll ファイルがコンピューターに存在することを確認します。</span><span class="sxs-lookup"><span data-stu-id="9db82-172">If you receive a registry error when testing your source code, verify that the .dll file exists on the computer.</span></span> <span data-ttu-id="9db82-173">メッセージには、挿入文字列が含まれている、それらの割り当てにおけるエラーをキャッチします。</span><span class="sxs-lookup"><span data-stu-id="9db82-173">If insertion strings are included in the message, catch errors in their allocation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="9db82-174">メッセージに関連付けられている挿入文字列の 1 つに空白を割り当てることはできませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-174">The space could not be allocated for one of the insertion strings associated with the message.</span>
          </span>
        </exception>
        <altmember cref="T:System.Diagnostics.EventInstance" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="ReplacementStrings">
      <MemberSignature Language="C#" Value="public string[] ReplacementStrings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ReplacementStrings" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.ReplacementStrings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReplacementStrings As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ ReplacementStrings { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Application strings for this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9db82-175">イベント ログ エントリに関連付けられている置換文字列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-175">Gets the replacement strings associated with the event log entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9db82-176">イベント エントリに格納されている置換文字列を保持する配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-176">An array that holds the replacement strings stored in the event entry.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9db82-177">このプロパティは、エントリの置換文字列のみを取得します。</span><span class="sxs-lookup"><span data-stu-id="9db82-177">This property retrieves only the replacement strings for the entry.</span></span> <span data-ttu-id="9db82-178">完全なメッセージを取得するには、読み取り、<xref:System.Diagnostics.EventLogEntry.Message%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="9db82-178">To retrieve the full message, read the <xref:System.Diagnostics.EventLogEntry.Message%2A> property.</span></span>  
  
 <span data-ttu-id="9db82-179"><xref:System.Diagnostics.EventLogEntry.ReplacementStrings%2A>プロパティには、イベント ログ エントリで使用されている置換文字列のローカライズされたバージョンが含まれています。</span><span class="sxs-lookup"><span data-stu-id="9db82-179">The <xref:System.Diagnostics.EventLogEntry.ReplacementStrings%2A> property contains the localized versions of replacement strings that are used in the event log entry.</span></span> <span data-ttu-id="9db82-180">アプリケーションの場合は、各ターゲット言語で文字列を含むリソース ファイルを提供する場合は、そのコンピューターで使用される言語でのイベント ログ メッセージを生成できます。</span><span class="sxs-lookup"><span data-stu-id="9db82-180">If you provide resource files that contain strings in each target language for your application, you can emit event log messages in the language that is used on that computer.</span></span> <span data-ttu-id="9db82-181">インスタンスを作成するには、<xref:System.Resources.ResourceManager>を置換文字列を含むリソース アセンブリのクラスです。</span><span class="sxs-lookup"><span data-stu-id="9db82-181">To do that, create an instance of the <xref:System.Resources.ResourceManager> class for the resource assembly that contains your replacement strings.</span></span> <span data-ttu-id="9db82-182">最初のパラメーター、<xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29>コンス トラクターを使用するリソース アセンブリを識別します。</span><span class="sxs-lookup"><span data-stu-id="9db82-182">The first parameter of the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> constructor identifies the resource assembly to be used.</span></span> <span data-ttu-id="9db82-183">使用して、<xref:System.Resources.ResourceManager.GetString%2A>ログ イベントのローカライズされたメッセージを指定するには、そのインスタンスのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="9db82-183">Use the <xref:System.Resources.ResourceManager.GetString%2A> method of that instance to supply localized messages for log events.</span></span> <span data-ttu-id="9db82-184">次のコードは、現在のカルチャの言語を自動的にメッセージを設定します。</span><span class="sxs-lookup"><span data-stu-id="9db82-184">The following code automatically sets the message to the language for the current culture.</span></span>  
  
```  
ResourceManager LocRM = new ResourceManager("ReplacementStrings.TestStrings",   
      typeof(Program).Assembly);  
EventLog e1 = new EventLog("LocTest", "MyMachine", "LocTest");  
// Get the string associated with the current culture.  
e1.WriteEntry(LocRM.GetString("strMessage"),  
   EventLogEntryType.Information);  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogEntry.Message" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The source application of this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9db82-185">このイベントを発生させたアプリケーションの名前を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-185">Gets the name of the application that generated this event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9db82-186">このイベントのソースとしてイベント ログに登録される名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-186">The name registered with the event log as the source of this event.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9db82-187">イベント ソースは、イベントを記録新機能を示します。</span><span class="sxs-lookup"><span data-stu-id="9db82-187">The event source indicates what logged the event.</span></span> <span data-ttu-id="9db82-188">通常は、アプリケーションの名前か、アプリケーションのサブコンポーネントの名前、アプリケーションが大きい場合です。</span><span class="sxs-lookup"><span data-stu-id="9db82-188">It is often the name of the application or the name of a subcomponent of the application if the application is large.</span></span> <span data-ttu-id="9db82-189">アプリケーションとサービスへの書き込み通常 (とは)、アプリケーション ログまたはカスタム ログです。</span><span class="sxs-lookup"><span data-stu-id="9db82-189">Applications and services usually write to (and therefore are sources for) the Application log or a custom log.</span></span> <span data-ttu-id="9db82-190">デバイス ドライバーは、通常、システム ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="9db82-190">Device drivers usually write to the System log.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9db82-191">使用を次のコード例に示します、<xref:System.Diagnostics.EventLogEntry.Source%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="9db82-191">The following code example demonstrates the use of the <xref:System.Diagnostics.EventLogEntry.Source%2A> property.</span></span> <span data-ttu-id="9db82-192">この例では、`switch`ステートメントでは、コンソールの入力を使用して、指定されたイベント ログ エントリの検索<xref:System.Diagnostics.EventLogEntry.EntryType%2A>です。</span><span class="sxs-lookup"><span data-stu-id="9db82-192">In this example, a `switch` statement uses console input to search for event log entries for the specified <xref:System.Diagnostics.EventLogEntry.EntryType%2A>.</span></span>  <span data-ttu-id="9db82-193">一致が見つかった場合、<xref:System.Diagnostics.EventLogEntry.Source%2A>プロパティについては、コンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="9db82-193">If a match is found, the <xref:System.Diagnostics.EventLogEntry.Source%2A> property information is displayed at the console.</span></span>  
  
 [!code-cpp[EventLogEntry_Source#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogEntry_Source/CPP/eventlogentry_source.cpp#1)]
 [!code-csharp[EventLogEntry_Source#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogEntry_Source/CS/eventlogentry_source.cs#1)]
 [!code-vb[EventLogEntry_Source#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogEntry_Source/VB/eventlogentry_source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Needs serialization support")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="9db82-194">データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-194">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="9db82-195">このシリアル化のシリアル化先 (<see cref="T:System.Runtime.Serialization.StreamingContext" /> を参照)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-195">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9db82-196">
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> に、対象のオブジェクトをシリアル化するために必要なデータを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-196">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeGenerated">
      <MemberSignature Language="C#" Value="public DateTime TimeGenerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.TimeGenerated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeGenerated As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeGenerated { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Generation time of this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9db82-197">このイベントが生成された現地時間を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-197">Gets the local time at which this event was generated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9db82-198">このイベントが生成された現地時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-198">The local time at which this event was generated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9db82-199">このメンバーは、イベントが生成された時刻を保持します。</span><span class="sxs-lookup"><span data-stu-id="9db82-199">This member holds the time that an event was generated.</span></span> <span data-ttu-id="9db82-200">これは、できないときに、イベント情報がイベント ログに書き込まれるときと同じです。</span><span class="sxs-lookup"><span data-stu-id="9db82-200">This might not be the same as the time when the event information was written to the event log.</span></span> <span data-ttu-id="9db82-201">後者の読み取り、<xref:System.Diagnostics.EventLogEntry.TimeWritten%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="9db82-201">For the latter, read the <xref:System.Diagnostics.EventLogEntry.TimeWritten%2A> property.</span></span>  
  
 <span data-ttu-id="9db82-202">通常はログに記録されます時間とイベントが生成される時間の間の遅延があります。</span><span class="sxs-lookup"><span data-stu-id="9db82-202">There is usually a lag between the time that an event is generated and the time it is logged.</span></span> <span data-ttu-id="9db82-203">これより知ることが重要イベントが生成されたログ記録で大幅な遅延がないかどうかをしない場合は。</span><span class="sxs-lookup"><span data-stu-id="9db82-203">It is more important to know when the event was generated, unless you want to see if there is a significant lag in logging.</span></span> <span data-ttu-id="9db82-204">ログ ファイルが別のサーバーと、ボトルネックが発生している場合に発生することができます。</span><span class="sxs-lookup"><span data-stu-id="9db82-204">That can happen if your log files are on a different server and you are experiencing a bottleneck.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogEntry.TimeWritten" />
      </Docs>
    </Member>
    <Member MemberName="TimeWritten">
      <MemberSignature Language="C#" Value="public DateTime TimeWritten { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeWritten" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.TimeWritten" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeWritten As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeWritten { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The time at which this event entry was written to the logfile.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9db82-205">このイベントがログに書き込まれた現地時間を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-205">Gets the local time at which this event was written to the log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9db82-206">このイベントがログに書き込まれた現地時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-206">The local time at which this event was written to the log.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9db82-207">このメンバーは、イベントの詳細については、イベント ログに書き込まれた時間を保持します。</span><span class="sxs-lookup"><span data-stu-id="9db82-207">This member holds the time that an event's information is written to the event log.</span></span> <span data-ttu-id="9db82-208">これによって、イベントが生成されたときと同じ時間ができない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9db82-208">This might not be the same time as when the event was generated.</span></span> <span data-ttu-id="9db82-209">後者の読み取り、<xref:System.Diagnostics.EventLogEntry.TimeGenerated%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="9db82-209">For the latter, read the <xref:System.Diagnostics.EventLogEntry.TimeGenerated%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogEntry.TimeGenerated" />
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.UserName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The name of a user associated with this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9db82-210">このイベントを発生させたユーザーの名前を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-210">Gets the name of the user who is responsible for this event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9db82-211">ユーザーまたはグループを一意に識別するセキュリティ識別子 (SID: Security Identifier)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-211">The security identifier (SID) that uniquely identifies a user or group.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9db82-212">このプロパティは、イベント ログ、セキュリティ ログ以外の場合は空白は多くの場合です。</span><span class="sxs-lookup"><span data-stu-id="9db82-212">This property is often blank for events in logs other than the Security log.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="9db82-213">ユーザーの SID に対するアカウント情報を取得できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9db82-213">Account information could not be obtained for the user's SID.</span>
          </span>
        </exception>
        <altmember cref="P:System.Diagnostics.EventLogEntry.Source" />
      </Docs>
    </Member>
  </Members>
</Type>