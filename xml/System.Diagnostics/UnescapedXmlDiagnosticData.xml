<Type Name="UnescapedXmlDiagnosticData" FullName="System.Diagnostics.UnescapedXmlDiagnosticData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="906b655156e678923acb581b7b0e75ae928f4e07" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30397196" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UnescapedXmlDiagnosticData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UnescapedXmlDiagnosticData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.UnescapedXmlDiagnosticData" />
  <TypeSignature Language="VB.NET" Value="Public Class UnescapedXmlDiagnosticData" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnescapedXmlDiagnosticData" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>エスケープされない XML データをユーザーが指定したトレース データのログに提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスは使用、<xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A>メソッドです。 XML データの送信先に使用することもできます、<xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A>メソッドです。  
  
> [!NOTE]
>  ユーザー指定のデータは、スキーマの有効性はチェックされません。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています<xref:System.Diagnostics.UnescapedXmlDiagnosticData>クラスです。 このコード例は提供されている長い例の一部である、<xref:System.Diagnostics.EventSchemaTraceListener>クラスです。  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#11)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnescapedXmlDiagnosticData (string xmlPayload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xmlPayload) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.UnescapedXmlDiagnosticData.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlPayload As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnescapedXmlDiagnosticData(System::String ^ xmlPayload);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlPayload" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlPayload">イベント スキーマの <see langword="UserData" /> ノードのログに記録される XML データ。</param>
        <summary>指定した XML データ文字列を使用して、<see cref="T:System.Diagnostics.UnescapedXmlDiagnosticData" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 エンド ツー エンドのあるコードが必要なかどうかはスキーマに準拠、`xmlPayload`パラメーターは、エンド ツー エンドのイベントのスキーマに対して検証できる XML フラグメントである必要があります。 場合`xmlPayload`は`null`、<xref:System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml%2A>プロパティは、空の文字列。  
  
> [!NOTE]
>  `xmlPayload` XML の有効性はチェックされません。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Diagnostics.UnescapedXmlDiagnosticData.%23ctor%2A>コンス トラクターです。 このコード例は提供されている長い例の一部である、<xref:System.Diagnostics.EventSchemaTraceListener>クラスです。  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#11)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.UnescapedXmlDiagnosticData.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Diagnostics.UnescapedXmlDiagnosticData" /> オブジェクトの文字列形式を返します。</summary>
        <returns>
          <see cref="T:System.Diagnostics.UnescapedXmlDiagnosticData" /> オブジェクトの文字列形式。 オブジェクトが <see langword="null" /> の場合、このメソッドは空の文字列を返します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnescapedXml">
      <MemberSignature Language="C#" Value="public string UnescapedXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnescapedXml" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml" />
      <MemberSignature Language="VB.NET" Value="Public Property UnescapedXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UnescapedXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>エスケープされない XML データ文字列を取得または設定します。</summary>
        <value>エスケープされない XML 文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 エンド ツー エンドのあるコードが必要なかどうかはスキーマに準拠、<xref:System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml%2A>プロパティの値は、エンド ツー エンドのイベントのスキーマに対して検証できる XML フラグメントである必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>