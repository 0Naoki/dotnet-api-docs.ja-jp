<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Debug.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b857fe3" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2eccf4de-4b1c-4706-8cb3-f46682ccfb72e1f2f5cb8de12cc67dfb0178935452c56a2348ef.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e1f2f5cb8de12cc67dfb0178935452c56a2348ef</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b15b8cf0f6dbc1504057c88969d9ef4b790891fe</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/11/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Provides a set of methods and properties that help debug your code.</source>
          <target state="translated">コードのデバッグを支援するメソッドとプロパティのセットを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>If you use methods in the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph> class to print debugging information and check your logic with assertions, you can make your code more robust without impacting the performance and code size of your shipping product.</source>
          <target state="translated">内のメソッドを使用する場合、<ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>デバッグ情報を印刷するクラス、アサーションで、ロジックを確認することができます、コードより堅牢な出荷製品のパフォーマンスとコードのサイズの影響を与えずにします。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>This class provides methods to display an <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> dialog box, and to emit an assertion that will always fail.</source>
          <target state="translated">このクラスを表示するメソッドを提供する、 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph>  ダイアログ ボックスが常に失敗するアサーションを出力するとします。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>This class provides write methods in the following variations: <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Write%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteLine%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Debug.WriteIf%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Diagnostics.Debug.WriteLineIf%2A&gt;</ph>.</source>
          <target state="translated">このクラスは、次の種類の書き込みメソッドを提供します。 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Write%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteLine%2A&gt;</ph>、<ph id="ph3">&lt;xref:System.Diagnostics.Debug.WriteIf%2A&gt;</ph>と<ph id="ph4">&lt;xref:System.Diagnostics.Debug.WriteLineIf%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.BooleanSwitch&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> classes provide means to dynamically control the tracing output.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.BooleanSwitch&gt;</ph>と<ph id="ph2">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>クラスがトレース出力を動的に制御する手段を提供します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>You can modify the values of these switches without recompiling your application.</source>
          <target state="translated">アプリケーションを再コンパイルしなくても、これらのスイッチの値を変更できます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>For information on using the configuration file to set a switch, see the <ph id="ph1">&lt;xref:System.Diagnostics.Switch&gt;</ph> class and the <bpt id="p1">[</bpt>Trace Switches<ept id="p1">](~/docs/framework/debug-trace-profile/trace-switches.md)</ept> topic.</source>
          <target state="translated">構成ファイルを使用して、スイッチを設定する方法については、次を参照してください。、<ph id="ph1">&lt;xref:System.Diagnostics.Switch&gt;</ph>クラスおよび<bpt id="p1">[</bpt>トレース スイッチ<ept id="p1">](~/docs/framework/debug-trace-profile/trace-switches.md)</ept>トピックです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>You can customize the tracing output's target by adding <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances to or removing instances from the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">トレース出力のターゲットを追加してカスタマイズできます<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>インスタンスをまたはからインスタンスを削除するには、<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection is shared by both the <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> and the <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph> classes; adding a trace listener to either class adds the listener to both.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>コレクションの両方によって共有は、<ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph>と<ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph>クラスです。 どちらかのクラスをトレース リスナーをリスナーに追加の両方を追加します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> class emits trace output.</source>
          <target state="translated">既定では、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>クラスがトレース出力を出力します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>Adding a trace listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</source>
          <target state="translated">トレース リスナーを追加する、<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>トレース リスナーによって使用されるリソースが利用できない場合、コレクションは、トレース中にスローされる例外を発生ことができます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</source>
          <target state="translated">条件とスローされる例外は、トレース リスナーに依存し、このトピックの内容を列挙できません。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>It may be useful to place calls to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph> methods in <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> blocks to detect and handle any exceptions from trace listeners.</source>
          <target state="translated">呼び出しを配置することができます、<ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>メソッド<ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph>を検出し、トレース リスナーから任意の例外処理ブロック。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>You can modify the level of indentation using the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Indent%2A&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentLevel%2A&gt;</ph> property.</source>
          <target state="translated">インデントを使用するレベルを変更することができます、<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Indent%2A&gt;</ph>メソッドまたは<ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentLevel%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>To modify the indent spacing, use the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> property.</source>
          <target state="translated">インデント幅を変更するには、使用、<ph id="ph1">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>You can specify whether to automatically flush the output buffer after each write by setting the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">自動的に設定して各書き込みの後に出力バッファーをフラッシュするかどうかを指定することができます、<ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>To set the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> for <ph id="ph3">&lt;xref:System.Diagnostics.Debug&gt;</ph>, you can edit the configuration file corresponding to the name of your application.</source>
          <target state="translated">設定する、<ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph>の<ph id="ph3">&lt;xref:System.Diagnostics.Debug&gt;</ph>アプリケーションの名前に対応する構成ファイルを編集することができます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The configuration file should be formatted as shown in the following example.</source>
          <target state="translated">構成ファイルは、次の例で示すようにフォーマットされている必要があります。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> attribute is applied to the methods of <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph>のメソッドに属性が適用される<ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>Compilers that support <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> ignore calls to these methods unless "DEBUG" is defined as a conditional compilation symbol.</source>
          <target state="translated">サポートされるコンパイラ<ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph>"DEBUG"は、条件付きコンパイル シンボルとして定義されていない限り、これらのメソッドへの呼び出しを無視します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>Refer to a compiler's documentation to determine whether <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> is supported and the syntax for defining a conditional compilation symbol.</source>
          <target state="translated">コンパイラのドキュメントを参照してくださいかどうか<ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph>はサポートされていると条件付きコンパイル シンボルを定義するための構文。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>In Visual Studio C# and Visual Basic projects, by default, the "DEBUG" conditional compilation symbol is defined for debug builds, and the "TRACE" symbol is defined for both debug and release builds.</source>
          <target state="translated">Visual Studio c# および Visual Basic プロジェクトで、既定で、デバッグ ビルドの"DEBUG"条件付きコンパイル シンボルが定義されているし、"TRACE"シンボルを定義してリリース ビルドのどちらの場合。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>For information about how to disable this behavior, see the Visual Studio documentation.</source>
          <target state="translated">この動作を無効にする方法については、Visual Studio のマニュアルを参照してください。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>For information about conditional debugging in Visual C++, see <bpt id="p1">[</bpt>Debug Class (C++/CLI)<ept id="p1">](/cpp/dotnet/debug-class-cpp-cli)</ept>.</source>
          <target state="translated">Visual C で条件付きのデバッグについては、次を参照してください。 <bpt id="p1">[</bpt>Debug クラス (C + + CLI)<ept id="p1">](/cpp/dotnet/debug-class-cpp-cli)</ept>です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>To define the "DEBUG" conditional compilation symbol in C#, add the <ph id="ph1">`/d:DEBUG`</ph> option to the compiler command line when you compile your code using a command line, or add <ph id="ph2">`#define DEBUG`</ph> to the top of your file.</source>
          <target state="translated">C# の場合は、"DEBUG"条件付きコンパイル シンボルを定義するには、追加、 <ph id="ph1">`/d:DEBUG`</ph> 、コマンドラインを使用してコードをコンパイルするときに、コンパイラのコマンドラインにオプションまたは追加<ph id="ph2">`#define DEBUG`</ph>ファイルの先頭にします。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>In Visual Basic, add the <ph id="ph1">`/d:DEBUG=True`</ph> option to the compiler command line or add <ph id="ph2">`#Const DEBUG=True`</ph> to the file.</source>
          <target state="translated">Visual basic では、追加、<ph id="ph1">`/d:DEBUG=True`</ph>コンパイラ コマンドラインにオプションまたは追加<ph id="ph2">`#Const DEBUG=True`</ph>ファイルにします。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph> to indicate the beginning and end of a program's execution.</source>
          <target state="translated">次の例では<ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>開始され、プログラムの実行の終了を示します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The example also uses <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Indent%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Unindent%2A&gt;</ph> to distinguish the tracing output.</source>
          <target state="translated">また、例では<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Indent%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Unindent%2A&gt;</ph>トレース出力を区別するためにします。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>This type is thread safe.</source>
          <target state="translated">この型はスレッド セーフです。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, outputs messages and displays a message box that shows the call stack.</source>
          <target state="translated">条件をチェックします。条件が <ph id="ph1">&lt;see langword="false" /&gt;</ph> の場合、メッセージを出力し、コール スタックを示すメッセージ ボックスを表示します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">評価する条件式。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, a failure message is not sent and the message box is not displayed.</source>
          <target state="translated">条件が <ph id="ph1">&lt;see langword="true" /&gt;</ph> の場合、エラー メッセージは送信されず、メッセージ ボックスは表示されません。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, displays a message box that shows the call stack.</source>
          <target state="translated">条件をチェックします。条件が <ph id="ph1">&lt;see langword="false" /&gt;</ph> の場合、呼び出し履歴を見せるメッセージ ボックスを表示します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> method works only in debug builds.</source>
          <target state="translated">既定では、<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph>方法は、デバッグ ビルドでのみ機能します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> method if you want to do assertions in release builds.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph>リリースでのアサーションを実行する場合、メソッドが作成されます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Assertions in Managed Code<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>マネージ コードのアサーション<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The <ph id="ph1">`Assert`</ph> methods are not available for <ph id="ph2">[!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)]</ph> apps.</source>
          <target state="translated"><ph id="ph1">`Assert`</ph>メソッドは使用できません<ph id="ph2">[!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)]</ph>アプリ。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%29&gt;</ph> method is used to identify logic errors during program development.</source>
          <target state="translated">通常、<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%29&gt;</ph>プログラム開発中に論理エラーを識別するメソッドを使用します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> evaluates the condition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> 条件を評価します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>If the result is <ph id="ph1">`false`</ph>, it sends a failure message to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">結果は場合<ph id="ph1">`false`</ph>、エラー メッセージを送信、<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">追加することでこの動作をカスタマイズすることができます、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>から、1 つを削除するか、<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</source>
          <target state="translated">アプリケーションがユーザー インターフェイス モードで実行されているときは、ファイル番号と行番号を含む呼び出し履歴を示すメッセージ ボックスが表示されます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The message box contains three buttons: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Retry<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Ignore<ept id="p3">**</ept>.</source>
          <target state="translated">メッセージ ボックスには、3 つのボタンが含まれています。:<bpt id="p1">**</bpt>中止<ept id="p1">**</ept>、<bpt id="p2">**</bpt>再試行<ept id="p2">**</ept>、と<bpt id="p3">**</bpt>無視<ept id="p3">**</ept>です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>Clicking the <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> button terminates the application.</source>
          <target state="translated">クリックすると、<bpt id="p1">**</bpt>中止<ept id="p1">**</ept>ボタンがアプリケーションを終了します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>Clicking <bpt id="p1">**</bpt>Retry<ept id="p1">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</source>
          <target state="translated">クリックすると<bpt id="p1">**</bpt>再試行<ept id="p1">**</ept>か、アプリケーションが、デバッガーで実行されているされていない場合、デバッガーを開くには、デバッガーでコードを送信します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>Clicking <bpt id="p1">**</bpt>Ignore<ept id="p1">**</ept> continues with the next instruction in the code.</source>
          <target state="translated">クリックすると<bpt id="p1">**</bpt>無視<ept id="p1">**</ept>コード内の次の命令を続行します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source><ph id="ph1">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]</ph> apps do not support modal dialog boxes, so they behave the same in user interface mode and non-user interface mode.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]</ph> アプリではモーダル ダイアログ ボックスをサポートしないため、同じユーザー インターフェイス モードと非ユーザー インターフェイス モードで動作します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The message is written to the active trace listeners in debugging mode, or no message is written in release mode.</source>
          <target state="translated">デバッグ モードでは、アクティブなトレース リスナーにメッセージを記述またはリリース モードでメッセージが書き込まれません。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The display of the message box depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">メッセージ ボックスの表示の存在に依存、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>に含まれていない、<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>コレクション、メッセージ ボックスは表示されません。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>して削除できます、 <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>オフ<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>、 <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>削除<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>、または呼び出すことによって、 <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> メソッド<ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>プロパティ (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>)。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>You can change the behavior of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.</source>
          <target state="translated">動作を変更することができます、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>アプリケーションの名前に対応する構成ファイルにします。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>In this file, you can enable and disable the assert message box or set the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">このファイルでを有効にして assert メッセージ ボックスを無効にしたり設定、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The configuration file should be formatted as follows:</source>
          <target state="translated">構成ファイルに次のようにフォーマットする必要があります。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The following example creates an index for an array, performs some action to set the value of the index, and then calls <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> to confirm that the index value is valid.</source>
          <target state="translated">次の例は、配列のインデックスを作成は、インデックスの値を設定するいくつかのアクションを実行しを呼び出して<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph>インデックス値が有効であることを確認します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>If it is not valid, <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> outputs the call stack.</source>
          <target state="translated">有効でない場合<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph>呼び出し履歴に出力します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">評価する条件式。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the specified message is not sent and the message box is not displayed.</source>
          <target state="translated">条件が <ph id="ph1">&lt;see langword="true" /&gt;</ph> の場合、指定したメッセージは送信されず、メッセージ ボックスは表示されません。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The message to send to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> コレクションに送信するメッセージ。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, outputs a specified message and displays a message box that shows the call stack.</source>
          <target state="translated">条件をチェックします。条件が <ph id="ph1">&lt;see langword="false" /&gt;</ph> の場合、指定したメッセージを出力し、コール スタックを示すメッセージ ボックスを表示します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> method works only in debug builds.</source>
          <target state="translated">既定では、<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph>方法は、デバッグ ビルドでのみ機能します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> method if you want to do assertions in release builds.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph>リリースでのアサーションを実行する場合、メソッドが作成されます。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Assertions in Managed Code<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>マネージ コードのアサーション<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>です。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> method is used to identify logic errors during program development.</source>
          <target state="translated">通常、<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph>プログラム開発中に論理エラーを識別するメソッドを使用します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> evaluates the condition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> 条件を評価します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>If the result is <ph id="ph1">`false`</ph>, it sends the specified diagnostic message to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">結果は場合<ph id="ph1">`false`</ph>、指定された診断メッセージを送信、<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">追加することでこの動作をカスタマイズすることができます、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>から、1 つを削除するか、<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</source>
          <target state="translated">アプリケーションがユーザー インターフェイス モードで実行されているときは、ファイル番号と行番号を含む呼び出し履歴を示すメッセージ ボックスが表示されます。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The message box contains three buttons: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Retry<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Ignore<ept id="p3">**</ept>.</source>
          <target state="translated">メッセージ ボックスには、3 つのボタンが含まれています。:<bpt id="p1">**</bpt>中止<ept id="p1">**</ept>、<bpt id="p2">**</bpt>再試行<ept id="p2">**</ept>、と<bpt id="p3">**</bpt>無視<ept id="p3">**</ept>です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>Clicking the <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> button terminates the application.</source>
          <target state="translated">クリックすると、<bpt id="p1">**</bpt>中止<ept id="p1">**</ept>ボタンがアプリケーションを終了します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>Clicking <bpt id="p1">**</bpt>Retry<ept id="p1">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</source>
          <target state="translated">クリックすると<bpt id="p1">**</bpt>再試行<ept id="p1">**</ept>か、アプリケーションが、デバッガーで実行されているされていない場合、デバッガーを開くには、デバッガーでコードを送信します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>Clicking <bpt id="p1">**</bpt>Ignore<ept id="p1">**</ept> continues with the next instruction in the code.</source>
          <target state="translated">クリックすると<bpt id="p1">**</bpt>無視<ept id="p1">**</ept>コード内の次の命令を続行します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The display of the message box depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">メッセージ ボックスの表示の存在に依存、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>に含まれていない、<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>コレクション、メッセージ ボックスは表示されません。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>して削除できます、 <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>オフ<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>、 <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>削除<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>、または呼び出すことによって、 <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> メソッド<ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>プロパティ (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>)。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>You can change the behavior of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.</source>
          <target state="translated">動作を変更することができます、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>アプリケーションの名前に対応する構成ファイルにします。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>In this file, you can enable and disable the assert message box or set the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">このファイルでを有効にして assert メッセージ ボックスを無効にしたり設定、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The configuration file should be formatted as follows:</source>
          <target state="translated">構成ファイルに次のようにフォーマットする必要があります。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The following example checks whether the <ph id="ph1">`type`</ph> parameter is valid.</source>
          <target state="translated">次の例のチェックするかどうか、<ph id="ph1">`type`</ph>パラメーターが無効です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>If <ph id="ph1">`type`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> outputs a message.</source>
          <target state="translated">場合<ph id="ph1">`type`</ph>は<ph id="ph2">`null`</ph>、<ph id="ph3">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph>メッセージを出力します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">評価する条件式。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the specified messages are not sent and the message box is not displayed.</source>
          <target state="translated">条件が <ph id="ph1">&lt;see langword="true" /&gt;</ph> の場合、指定したメッセージは送信されず、メッセージ ボックスは表示されません。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The message to send to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> コレクションに送信するメッセージ。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The detailed message to send to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> コレクションに送信する詳細なメッセージ。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, outputs two specified messages and displays a message box that shows the call stack.</source>
          <target state="translated">条件をチェックします。条件が <ph id="ph1">&lt;see langword="false" /&gt;</ph> の場合、指定した 2 つのメッセージを出力し、コール スタックを示すメッセージ ボックスを表示します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> method works only in debug builds.</source>
          <target state="translated">既定では、<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph>方法は、デバッグ ビルドでのみ機能します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> method if you want to do assertions in release builds.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph>リリースでのアサーションを実行する場合、メソッドが作成されます。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Assertions in Managed Code<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>マネージ コードのアサーション<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>です。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29&gt;</ph> method is used to identify logic errors during program development.</source>
          <target state="translated">通常、<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29&gt;</ph>プログラム開発中に論理エラーを識別するメソッドを使用します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> evaluates the condition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> 条件を評価します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>If the result is <ph id="ph1">`false`</ph>, it sends the specified diagnostic message and detailed message to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">結果は場合<ph id="ph1">`false`</ph>、指定された診断メッセージと詳細なメッセージを送信、<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">追加することでこの動作をカスタマイズすることができます、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>から、1 つを削除するか、<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</source>
          <target state="translated">アプリケーションがユーザー インターフェイス モードで実行されているときは、ファイル番号と行番号を含む呼び出し履歴を示すメッセージ ボックスが表示されます。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The message box contains three buttons: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Retry<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Ignore<ept id="p3">**</ept>.</source>
          <target state="translated">メッセージ ボックスには、3 つのボタンが含まれています。:<bpt id="p1">**</bpt>中止<ept id="p1">**</ept>、<bpt id="p2">**</bpt>再試行<ept id="p2">**</ept>、と<bpt id="p3">**</bpt>無視<ept id="p3">**</ept>です。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>Clicking the <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> button terminates the application.</source>
          <target state="translated">クリックすると、<bpt id="p1">**</bpt>中止<ept id="p1">**</ept>ボタンがアプリケーションを終了します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>Clicking <bpt id="p1">**</bpt>Retry<ept id="p1">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</source>
          <target state="translated">クリックすると<bpt id="p1">**</bpt>再試行<ept id="p1">**</ept>か、アプリケーションが、デバッガーで実行されているされていない場合、デバッガーを開くには、デバッガーでコードを送信します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>Clicking <bpt id="p1">**</bpt>Ignore<ept id="p1">**</ept> continues with the next instruction in the code.</source>
          <target state="translated">クリックすると<bpt id="p1">**</bpt>無視<ept id="p1">**</ept>コード内の次の命令を続行します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The display of the message box depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">メッセージ ボックスの表示の存在に依存、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>に含まれていない、<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>コレクション、メッセージ ボックスは表示されません。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>して削除できます、 <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>オフ<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>、 <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>削除<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>、または呼び出すことによって、 <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> メソッド<ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>プロパティ (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>)。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>You can change the behavior of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.</source>
          <target state="translated">動作を変更することができます、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>アプリケーションの名前に対応する構成ファイルにします。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>In this file, you can enable and disable the assert message box or set the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">このファイルでを有効にして assert メッセージ ボックスを無効にしたり設定、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The configuration file should be formatted as follows:</source>
          <target state="translated">構成ファイルに次のようにフォーマットする必要があります。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The following example checks whether the <ph id="ph1">`type`</ph> parameter is valid.</source>
          <target state="translated">次の例のチェックするかどうか、<ph id="ph1">`type`</ph>パラメーターが無効です。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>If <ph id="ph1">`type`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> outputs two messages.</source>
          <target state="translated">場合<ph id="ph1">`type`</ph>は<ph id="ph2">`null`</ph>、 <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> 2 つのメッセージを出力します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">評価する条件式。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the specified messages are not sent and the message box is not displayed.</source>
          <target state="translated">条件が <ph id="ph1">&lt;see langword="true" /&gt;</ph> の場合、指定したメッセージは送信されず、メッセージ ボックスは表示されません。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The message to send to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> コレクションに送信するメッセージ。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The composite format string to send to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> コレクションに送信する複合書式指定文字列。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>This message contains text intermixed with zero or more format items, which correspond to objects in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">このメッセージのテキストには、<bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 配列内のオブジェクトに対応する 0 個以上の書式項目を含めることができます。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>An object array that contains zero or more objects to format.</source>
          <target state="translated">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, outputs two messages (simple and formatted) and displays a message box that shows the call stack.</source>
          <target state="translated">条件をチェックし、その条件が <ph id="ph1">&lt;see langword="false" /&gt;</ph> の場合は、2 つのメッセージ (単純なメッセージと書式設定されたメッセージ) を出力し、呼び出し履歴を表示するメッセージ ボックスを表示します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">このメソッドを使用して、.NET Framework オブジェクトの値をテキスト形式に変換し、その表現を文字列に埋め込むのです。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The resulting string is sent to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">結果の文字列に送信される、<ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> method works only in debug builds.</source>
          <target state="translated">既定では、<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph>方法は、デバッグ ビルドでのみ機能します。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> method if you want to do assertions in release builds.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph>リリースでのアサーションを実行する場合、メソッドが作成されます。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>For more information, see <bpt id="p1">[</bpt>Assertions in Managed Code<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>マネージ コードのアサーション<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>です。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29&gt;</ph> method is used to identify logic errors during program development.</source>
          <target state="translated">通常、<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29&gt;</ph>プログラム開発中に論理エラーを識別するメソッドを使用します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> evaluates the condition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> 条件を評価します。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>If the result is <ph id="ph1">`false`</ph>, The <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method is called and the <ph id="ph3">`detailMessageFormat`</ph> string and <ph id="ph4">`args`</ph> array are passed in as parameters.</source>
          <target state="translated">場合は、結果は<ph id="ph1">`false`</ph>、<ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>メソッドが呼び出されると、<ph id="ph3">`detailMessageFormat`</ph>文字列と<ph id="ph4">`args`</ph>配列パラメーターとして渡されます。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29&gt;</ph> then sends the specified text message and the formatted text message to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29&gt;</ph> 指定したテキスト メッセージと、書式設定されたテキスト メッセージを送信、<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">追加することでこの動作をカスタマイズすることができます、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>から、1 つを削除するか、<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</source>
          <target state="translated">アプリケーションがユーザー インターフェイス モードで実行されているときは、ファイル番号と行番号を含む呼び出し履歴を示すメッセージ ボックスが表示されます。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The message box contains three buttons: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Retry<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Ignore<ept id="p3">**</ept>.</source>
          <target state="translated">メッセージ ボックスには、3 つのボタンが含まれています。:<bpt id="p1">**</bpt>中止<ept id="p1">**</ept>、<bpt id="p2">**</bpt>再試行<ept id="p2">**</ept>、と<bpt id="p3">**</bpt>無視<ept id="p3">**</ept>です。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>Clicking the <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> button terminates the application.</source>
          <target state="translated">クリックすると、<bpt id="p1">**</bpt>中止<ept id="p1">**</ept>ボタンがアプリケーションを終了します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>Clicking <bpt id="p1">**</bpt>Retry<ept id="p1">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</source>
          <target state="translated">クリックすると<bpt id="p1">**</bpt>再試行<ept id="p1">**</ept>か、アプリケーションが、デバッガーで実行されているされていない場合、デバッガーを開くには、デバッガーでコードを送信します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>Clicking <bpt id="p1">**</bpt>Ignore<ept id="p1">**</ept> continues with the next instruction in the code.</source>
          <target state="translated">クリックすると<bpt id="p1">**</bpt>無視<ept id="p1">**</ept>コード内の次の命令を続行します。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The display of the message box is dependent on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">メッセージ ボックスの表示がの存在に依存する、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>に含まれていない、<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>コレクション、メッセージ ボックスは表示されません。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>して削除できます、 <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>オフ<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>、 <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>削除<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>、または呼び出すことによって、 <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> メソッド<ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>プロパティ (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>)。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>You can change the behavior of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.</source>
          <target state="translated">動作を変更することができます、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>アプリケーションの名前に対応する構成ファイルにします。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>In this file, you can enable and disable the assert message box or set the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">このファイルでを有効にして assert メッセージ ボックスを無効にしたり設定、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The configuration file should be formatted as follows:</source>
          <target state="translated">構成ファイルに次のようにフォーマットする必要があります。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>Gets or sets a value indicating whether <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.Flush" /&gt;</ph> should be called on the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> after every write.</source>
          <target state="translated">書き込むたびに、<ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.Flush" /&gt;</ph> で <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> を呼び出すかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Flush" /&gt;</ph> is called on the <ph id="ph3">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> after every write; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">すべての書き込み後に <ph id="ph3">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> で <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Flush" /&gt;</ph> を呼び出す場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">`false`</ph> です。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>.</source>
          <target state="translated">明示的に呼び出す場合を除き、ストリームのフラッシュは、基になるエンコーダー フラッシュされません<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>Setting <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph>に<ph id="ph2">`true`</ph>に、ストリーム バッファーからデータがフラッシュされますが、エンコーダーの状態はフラッシュされないことを意味します。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">これにより、次の文字のブロックを正常にエンコードできるように (一部の文字) の状態を保持するエンコーダー。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">このシナリオでは、UTF8、UTF7、特定の文字をエンコードするため、エンコーダーは、隣接する文字または文字列を受信した後に影響します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>To set the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> for <ph id="ph3">&lt;xref:System.Diagnostics.Debug&gt;</ph>, you can also edit the configuration file corresponding to the name of your application.</source>
          <target state="translated">設定する、<ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph>の<ph id="ph3">&lt;xref:System.Diagnostics.Debug&gt;</ph>アプリケーションの名前に対応する構成ファイルを編集することもできます。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>The configuration file should be formatted as shown in the following example.</source>
          <target state="translated">構成ファイルは、次の例で示すようにフォーマットされている必要があります。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>for operating with unmanaged code.</source>
          <target state="translated">アンマネージ コードを操作します。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>Demand value <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; associated enumeration: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">要求値<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; 列挙型に関連付けられている:<ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Close">
          <source>Flushes the output buffer and then calls the <ph id="ph1">&lt;see langword="Close" /&gt;</ph> method on each of the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">出力バッファーをフラッシュしてから、各 <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> で <ph id="ph1">&lt;see langword="Close" /&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>Use this method when the output goes to a file, such as to the <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.</source>
          <target state="translated">このメソッドを使用するときに、出力をファイルなど、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>.</source>
          <target state="translated">明示的に呼び出す場合を除き、ストリームのフラッシュは、基になるエンコーダー フラッシュされません<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>Setting <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph>に<ph id="ph2">`true`</ph>に、ストリーム バッファーからデータがフラッシュされますが、エンコーダーの状態はフラッシュされないことを意味します。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">これにより、次の文字のブロックを正常にエンコードできるように (一部の文字) の状態を保持するエンコーダー。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">このシナリオでは、UTF8、UTF7、特定の文字をエンコードするため、エンコーダーは、隣接する文字または文字列を受信した後に影響します。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> named <ph id="ph2">`myTextListener`</ph>.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>という<ph id="ph2">`myTextListener`</ph>です。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source><ph id="ph1">`myTextListener`</ph> uses a <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> called <ph id="ph3">`myOutputWriter`</ph> to write to a file named <ph id="ph4">`TestFile.txt`</ph>.</source>
          <target state="translated"><ph id="ph1">`myTextListener`</ph> 使用して、<ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph>と呼ばれる<ph id="ph3">`myOutputWriter`</ph>という名前のファイルに書き込む<ph id="ph4">`TestFile.txt`</ph>です。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the output.</source>
          <target state="translated">例では、ファイル、ストリーム、およびテキスト ライターを作成、ファイルに 1 行のテキストを書き込みますをフラッシュし、出力を閉じます。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>for operating with unmanaged code.</source>
          <target state="translated">アンマネージ コードを操作します。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>Demand value <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; associated enumeration: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">要求値<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; 列挙型に関連付けられている:<ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Emits an error message.</source>
          <target state="translated">エラー メッセージを出力します。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>A message to emit.</source>
          <target state="translated">出力するメッセージ。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>Emits the specified error message.</source>
          <target state="translated">指定されたエラー メッセージを出力します。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>The default behavior is that the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> outputs the message to a message box when the application is running in user interface mode and to the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances in the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">既定の動作は、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>ユーザー インターフェイス モードにされ、アプリケーションが実行されているときに、メッセージをメッセージ ボックスに、出力、<ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>のインスタンスにある、<ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>The display of the message box is dependent on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">メッセージ ボックスの表示がの存在に依存する、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>に含まれていない、<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>コレクション、メッセージ ボックスは表示されません。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>して削除できます、 <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>オフ<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>、 <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>削除<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>、または呼び出すことによって、 <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> メソッド<ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>プロパティ (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>)。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">追加することでこの動作をカスタマイズすることができます、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>から、1 つを削除するか、<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> method to print a message during exception handling.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph>例外処理中にメッセージを印刷する方法です。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> method in a switch statement.</source>
          <target state="translated">使用することも、 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> switch ステートメント内のメソッドです。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>A message to emit.</source>
          <target state="translated">出力するメッセージ。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>A detailed message to emit.</source>
          <target state="translated">出力する詳細メッセージ。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>Emits an error message and a detailed error message.</source>
          <target state="translated">エラー メッセージと詳細エラー メッセージを出力します。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>The default behavior is that the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> outputs the message to a message box when the application is running in user interface mode and to the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances in the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">既定の動作は、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>ユーザー インターフェイス モードにされ、アプリケーションが実行されているときに、メッセージをメッセージ ボックスに、出力、<ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>のインスタンスにある、<ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>The display of the message box is dependent on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">メッセージ ボックスの表示がの存在に依存する、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>に含まれていない、<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>コレクション、メッセージ ボックスは表示されません。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>して削除できます、 <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>オフ<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>、 <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>削除<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>、または呼び出すことによって、 <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> メソッド<ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>プロパティ (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>)。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">追加することでこの動作をカスタマイズすることができます、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>から、1 つを削除するか、<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> method to print a message during exception handling.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph>例外処理中にメッセージを印刷する方法です。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> method in a switch statement.</source>
          <target state="translated">使用することも、 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> switch ステートメント内のメソッドです。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Flush">
          <source>Flushes the output buffer and causes buffered data to write to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">出力バッファーをフラッシュし、バッファー内のデータを <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> コレクションに書き込みます。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>.</source>
          <target state="translated">明示的に呼び出す場合を除き、ストリームのフラッシュは、基になるエンコーダー フラッシュされません<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source>Setting <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph>に<ph id="ph2">`true`</ph>に、ストリーム バッファーからデータがフラッシュされますが、エンコーダーの状態はフラッシュされないことを意味します。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">これにより、次の文字のブロックを正常にエンコードできるように (一部の文字) の状態を保持するエンコーダー。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">このシナリオでは、UTF8、UTF7、特定の文字をエンコードするため、エンコーダーは、隣接する文字または文字列を受信した後に影響します。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> named <ph id="ph2">`myTextListener`</ph>.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>という<ph id="ph2">`myTextListener`</ph>です。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source><ph id="ph1">`myTextListener`</ph> uses a <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> called <ph id="ph3">`myFileStream`</ph> to write to a file named <ph id="ph4">`TestFile.txt`</ph>.</source>
          <target state="translated"><ph id="ph1">`myTextListener`</ph> 使用して、<ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph>と呼ばれる<ph id="ph3">`myFileStream`</ph>という名前のファイルに書き込む<ph id="ph4">`TestFile.txt`</ph>です。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source>The example creates the stream, opens the file if it exists or creates a new one, writes one line of text to the file, and then flushes and closes the output.</source>
          <target state="translated">例は、ストリームを作成が存在する場合または新規に作成、ファイルに 1 行のテキストを書き込みますとし、フラッシュの出力を閉じますファイルを開きます。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Indent">
          <source>Increases the current <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.IndentLevel" /&gt;</ph> by one.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.IndentLevel" /&gt;</ph> を 1 だけ大きくします。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Indent">
          <source>The following example sets the indent level and emits debugging messages.</source>
          <target state="translated">次の例では、インデント レベルを設定し、デバッグ メッセージを出力します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Indent">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Debug.IndentLevel">
          <source>Gets or sets the indent level.</source>
          <target state="translated">インデント レベルを取得または設定します。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentLevel">
          <source>The indent level.</source>
          <target state="translated">インデント レベル。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentLevel">
          <source>The default is 0.</source>
          <target state="translated">既定値は 0 です。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentLevel">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Debug.IndentLevel%2A&gt;</ph> property represents the number of times the indent of size <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> is applied.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.IndentLevel%2A&gt;</ph>プロパティを表す回数を超えるサイズのインデント<ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph>を適用します。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentLevel">
          <source>The following example sets the indent level and emits debugging messages.</source>
          <target state="translated">次の例では、インデント レベルを設定し、デバッグ メッセージを出力します。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentLevel">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>Gets or sets the number of spaces in an indent.</source>
          <target state="translated">1 つのインデントに含まれるスペースの数を取得または設定します。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>The number of spaces in an indent.</source>
          <target state="translated">インデントに含まれるスペースの数。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>The default is four.</source>
          <target state="translated">既定値は 4 です。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> interprets this number as spaces.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>スペースとしてこの数値を解釈します。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>An <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> ignores this value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph>はこの値を無視します。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>To set the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> for <ph id="ph3">&lt;xref:System.Diagnostics.Debug&gt;</ph>, you can also edit the configuration file corresponding to the name of your application.</source>
          <target state="translated">設定する、<ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph>の<ph id="ph3">&lt;xref:System.Diagnostics.Debug&gt;</ph>アプリケーションの名前に対応する構成ファイルを編集することもできます。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>The configuration file should be formatted as shown in the following example.</source>
          <target state="translated">構成ファイルは、次の例で示すようにフォーマットされている必要があります。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Debug.Listeners">
          <source>Gets the collection of listeners that is monitoring the debug output.</source>
          <target state="translated">デバッグ出力を監視するリスナーのコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListenerCollection" /&gt;</ph> representing a collection of type <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> that monitors the debug output.</source>
          <target state="translated">デバッグ出力を監視する <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListenerCollection" /&gt;</ph> 型のコレクションを表す <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>The listeners produce formatted output from the debug output.</source>
          <target state="translated">リスナーは、デバッグ出力から、書式付き出力を生成します。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>By default, the collection contains an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> class.</source>
          <target state="translated">既定では、コレクションにはインスタンスが含まれています、<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>To remove the default listener, call the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection.Remove%2A&gt;</ph> method, and pass it the instance of the <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">既定のリスナーを削除するには、呼び出し、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection.Remove%2A&gt;</ph>メソッドのインスタンスを渡すと、<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>To redirect output to the console window, add an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>.</source>
          <target state="translated">コンソール ウィンドウに出力をリダイレクトするには、インスタンスを追加、<ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>To redirect output to a file or stream, add an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.</source>
          <target state="translated">インスタンスに追加するファイルまたはストリームに出力をリダイレクトする、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection is shared by both the <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> and the <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph> classes; adding a trace listener to either class adds the listener to both.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>コレクションの両方によって共有は、<ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph>と<ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph>クラスです。 どちらかのクラスをトレース リスナーをリスナーに追加の両方を追加します。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> that outputs to the console screen.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>コンソール画面に出力します。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>The code then adds the new listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">コードは、新しいリスナーを追加、<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>for operating with unmanaged code.</source>
          <target state="translated">アンマネージ コードを操作します。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>Demand value <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; associated enumeration: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">要求値<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; 列挙型に関連付けられている:<ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Writes a message followed by a line terminator to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> コレクションのトレース リスナーにメッセージを書き込み、続けて行終端記号を書き込みます。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String)">
          <source>The message to write.</source>
          <target state="translated">書き込むメッセージ。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String)">
          <source>Writes a message followed by a line terminator to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> コレクションのトレース リスナーにメッセージを書き込み、続けて行終端記号を書き込みます。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Print(System.String)">
          <source>The default line terminator is a carriage return followed by a line feed.</source>
          <target state="translated">既定の行終端記号は、キャリッジ リターンとライン フィードです。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Print(System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">既定では、出力は、インスタンスに<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">0 個以上の書式項目が混在したテキストを含む複合書式指定文字列。各書式項目は、<bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 配列内のオブジェクトに対応します。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>An object array containing zero or more objects to format.</source>
          <target state="translated">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>Writes a formatted string followed by a line terminator to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> コレクションのトレース リスナーに書式指定された文字列を書き込み、続けて行終端記号を書き込みます。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">このメソッドを使用して、.NET Framework オブジェクトの値をテキスト形式に変換し、その表現を文字列に埋め込むのです。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">既定では、出力は、インスタンスに<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> が無効です。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.</source>
          <target state="translated">書式設定する引数を示す数が 0 より小さいか、書式設定する指定されたオブジェクトの数以上です。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Unindent">
          <source>Decreases the current <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.IndentLevel" /&gt;</ph> by one.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.IndentLevel" /&gt;</ph> を 1 だけ減らします。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Unindent">
          <source>The following example sets the indent level and emits debugging messages.</source>
          <target state="translated">次の例では、インデント レベルを設定し、デバッグ メッセージを出力します。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Unindent">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Writes information about the debug to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">デバッグについての情報を <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> コレクションのトレース リスナーに書き込みます。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">名前が <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> に送信されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">オブジェクトの <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> メソッドの値を <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> コレクションのトレース リスナーに書き込みます。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">既定では、出力は、インスタンスに<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph>トレース リスナーのメソッドです。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>という<ph id="ph2">`generalSwitch`</ph>です。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">サンプル コードの外部では、このスイッチを設定します。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">スイッチが に設定されている場合、 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph>以降では、最初のエラー メッセージの出力例では、または、<ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">リスナーを追加する方法について、 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 、コレクションを参照してください、<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">その後、if、<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>に設定されている<ph id="ph2">`Verbose`</ph>の例は、最初のメッセージと同じ行に 2 番目のエラー メッセージを出力します。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行終端記号には、2 番目のメッセージが次に示します。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>A message to write.</source>
          <target state="translated">書き込むメッセージ。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>Writes a message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> コレクションのトレース リスナーにメッセージを書き込みます。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">既定では、出力は、インスタンスに<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph>トレース リスナーのメソッドです。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>という<ph id="ph2">`generalSwitch`</ph>です。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">サンプル コードの外部では、このスイッチを設定します。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">スイッチが に設定されている場合、 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph>以降では、最初のエラー メッセージの出力例では、または、<ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">リスナーを追加する方法について、 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 、コレクションを参照してください、<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">その後、if、<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>に設定されている<ph id="ph2">`Verbose`</ph>の例は、最初のメッセージと同じ行に 2 番目のエラー メッセージを出力します。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行終端記号には、2 番目のメッセージが次に示します。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">名前が <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> に送信されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">出力を編成するために使用するカテゴリ名。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">カテゴリ名とオブジェクトの <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> メソッドの値を <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> コレクションのトレース リスナーに書き込みます。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">既定では、出力は、インスタンスに<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>Use the <ph id="ph1">`category`</ph> parameter to group output messages.</source>
          <target state="translated">使用して、<ph id="ph1">`category`</ph>グループへのパラメーターは、メッセージを出力します。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph>トレース リスナーのメソッドです。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>という<ph id="ph2">`generalSwitch`</ph>です。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">サンプル コードの外部では、このスイッチを設定します。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">スイッチが に設定されている場合、 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph>以降では、最初のエラー メッセージの出力例では、または、<ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">リスナーを追加する方法について、 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 、コレクションを参照してください、<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">その後、if、<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>に設定されている<ph id="ph2">`Verbose`</ph>の例は、最初のメッセージと同じ行に 2 番目のエラー メッセージを出力します。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行終端記号には、2 番目のメッセージが次に示します。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">書き込むメッセージ。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">出力を編成するために使用するカテゴリ名。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>Writes a category name and message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">カテゴリ名とメッセージを <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> コレクションのトレース リスナーに書き込みます。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">既定では、出力は、インスタンスに<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>Use the <ph id="ph1">`category`</ph> parameter to group output messages.</source>
          <target state="translated">使用して、<ph id="ph1">`category`</ph>グループへのパラメーターは、メッセージを出力します。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph>トレース リスナーのメソッドです。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>という<ph id="ph2">`generalSwitch`</ph>です。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">サンプル コードの外部では、このスイッチを設定します。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">スイッチが に設定されている場合、 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph>以降では、最初のエラー メッセージの出力例では、または、<ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">リスナーを追加する方法について、 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 、コレクションを参照してください、<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">その後、if、<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>に設定されている<ph id="ph2">`Verbose`</ph>の例は、最初のメッセージと同じ行に 2 番目のエラー メッセージを出力します。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行終端記号には、2 番目のメッセージが次に示します。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Writes information about the debug to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">条件が <ph id="ph2">&lt;see langword="true" /&gt;</ph> の場合、デバッグについての情報を <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> コレクションのトレース リスナーに書き込みます。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">評価する条件式。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the value is written to the trace listeners in the collection.</source>
          <target state="translated">条件が <ph id="ph1">&lt;see langword="true" /&gt;</ph> の場合、コレクションのトレース リスナーに値が書き込まれます。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">名前が <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> に送信されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">条件が <ph id="ph3">&lt;see langword="true" /&gt;</ph> の場合、オブジェクトの <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> メソッドの値を <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> コレクションのトレース リスナーに書き込みます。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">既定では、出力は、インスタンスに<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph>トレース リスナーのメソッドです。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>という<ph id="ph2">`generalSwitch`</ph>です。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">サンプル コードの外部では、このスイッチを設定します。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first name of the value parameter to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">スイッチが に設定されている場合、 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph>または以降では、value パラメーターの名の出力の例、<ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">リスナーを追加する方法について、 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 、コレクションを参照してください、<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs a message on the same line as the first message.</source>
          <target state="translated">その後、if、<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>に設定されている<ph id="ph2">`Verbose`</ph>例では、最初のメッセージと同じ行にメッセージが出力します。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行終端記号には、2 番目のメッセージが次に示します。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">使用して、アプリケーションをインストルメント化のパフォーマンスの低下を最小限に抑えることができます<ph id="ph1">&lt;see langword="If...Then" /&gt;</ph>ステートメントを使用せずに<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>ステートメントです。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">次の 2 つのコード例では、同じデバッグ メッセージを送信します。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>.</source>
          <target state="translated">ただし、最初の例でははるかに高速トレースがオフの場合場合、<bpt id="p1">&lt;c&gt;</bpt>である<ept id="p1">&lt;/c&gt;</ept>に評価される<ph id="ph1">&lt;see langword="false" /&gt;</ph>、呼び出すことはありません<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">2 番目の例では、常に呼び出します<ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>場合でも、<bpt id="p1">&lt;c&gt;</bpt>である<ept id="p1">&lt;/c&gt;</ept>は<ph id="ph2">&lt;see langword="false" /&gt;</ph>し、トレース出力は生成されません。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">これにより、任意の複雑なコードの不要な実行。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>First example:</source>
          <target state="translated">最初の例:</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>Second example:</source>
          <target state="translated">2 番目の例:</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">評価する条件式。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the message is written to the trace listeners in the collection.</source>
          <target state="translated">条件が <ph id="ph1">&lt;see langword="true" /&gt;</ph> の場合、コレクションのトレース リスナーにメッセージが書き込まれます。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>A message to write.</source>
          <target state="translated">書き込むメッセージ。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>Writes a message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">条件が <ph id="ph2">&lt;see langword="true" /&gt;</ph> である場合、メッセージを <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> コレクションのトレース リスナーに書き込みます。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">既定では、出力は、インスタンスに<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph>トレース リスナーのメソッドです。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>という<ph id="ph2">`generalSwitch`</ph>です。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">サンプル コードの外部では、このスイッチを設定します。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">スイッチが に設定されている場合、 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph>以降では、最初のエラー メッセージの出力例では、または、<ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>For information about adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">リスナーを追加する方法について、 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 、コレクションを参照してください、<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">その後、if、<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>に設定されている<ph id="ph2">`Verbose`</ph>の例は、最初のメッセージと同じ行に 2 番目のエラー メッセージを出力します。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行終端記号には、2 番目のメッセージが次に示します。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">使用して、アプリケーションをインストルメント化のパフォーマンスの低下を最小限に抑えることができます<ph id="ph1">&lt;see langword="If...Then" /&gt;</ph>ステートメントを使用せずに<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>ステートメントです。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">次の 2 つのコード例では、同じデバッグ メッセージを送信します。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>.</source>
          <target state="translated">ただし、最初の例でははるかに高速トレースがオフの場合場合、<bpt id="p1">&lt;c&gt;</bpt>である<ept id="p1">&lt;/c&gt;</ept>に評価される<ph id="ph1">&lt;see langword="false" /&gt;</ph>、呼び出すことはありません<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">2 番目の例では、常に呼び出します<ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>場合でも、<bpt id="p1">&lt;c&gt;</bpt>である<ept id="p1">&lt;/c&gt;</ept>は<ph id="ph2">&lt;see langword="false" /&gt;</ph>し、トレース出力は生成されません。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">これにより、任意の複雑なコードの不要な実行。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>First example:</source>
          <target state="translated">最初の例:</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>Second example:</source>
          <target state="translated">2 番目の例:</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">評価する条件式。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the category name and value are written to the trace listeners in the collection.</source>
          <target state="translated">条件が <ph id="ph1">&lt;see langword="true" /&gt;</ph> の場合、コレクションのトレース リスナーにカテゴリ名と値が書き込まれます。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">名前が <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> に送信されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">出力を編成するために使用するカテゴリ名。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">条件が <ph id="ph3">&lt;see langword="true" /&gt;</ph> の場合は、カテゴリ名とオブジェクトの <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> メソッドの値を <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> コレクションのトレース リスナーに書き込みます。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">既定では、出力は、インスタンスに<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph>パラメーターは、出力メッセージをグループ化を使用することができます。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph>トレース リスナーのメソッドです。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>という<ph id="ph2">`generalSwitch`</ph>です。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">サンプル コードの外部では、このスイッチを設定します。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Verbose`</ph>, the example outputs the name of the <ph id="ph3">`myObject`</ph> and the <ph id="ph4">`category`</ph> to the <ph id="ph5">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">スイッチが に設定されている場合、 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Verbose`</ph>、例では、出力の名前、<ph id="ph3">`myObject`</ph>と<ph id="ph4">`category`</ph>を<ph id="ph5">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">リスナーを追加する方法について、 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 、コレクションを参照してください、<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Error`</ph> or higher, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">その後、if、<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>に設定されている<ph id="ph2">`Error`</ph>または以降では、最初のメッセージと同じ行に 2 番目のエラー メッセージの出力例では、します。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行終端記号には、2 番目のメッセージが次に示します。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">使用して、アプリケーションをインストルメント化のパフォーマンスの低下を最小限に抑えることができます<ph id="ph1">&lt;see langword="If...Then" /&gt;</ph>ステートメントを使用せずに<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>ステートメントです。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">次の 2 つのコード例では、同じデバッグ メッセージを送信します。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>.</source>
          <target state="translated">ただし、最初の例でははるかに高速トレースがオフの場合場合、<bpt id="p1">&lt;c&gt;</bpt>である<ept id="p1">&lt;/c&gt;</ept>に評価される<ph id="ph1">&lt;see langword="false" /&gt;</ph>、呼び出すことはありません<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">2 番目の例では、常に呼び出します<ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>場合でも、<bpt id="p1">&lt;c&gt;</bpt>である<ept id="p1">&lt;/c&gt;</ept>は<ph id="ph2">&lt;see langword="false" /&gt;</ph>し、トレース出力は生成されません。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">これにより、任意の複雑なコードの不要な実行。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>First example:</source>
          <target state="translated">最初の例:</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>Second example:</source>
          <target state="translated">2 番目の例:</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">評価する条件式。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the category name and message are written to the trace listeners in the collection.</source>
          <target state="translated">条件が <ph id="ph1">&lt;see langword="true" /&gt;</ph> の場合、コレクションのトレース リスナーにカテゴリ名とメッセージが書き込まれます。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">書き込むメッセージ。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">出力を編成するために使用するカテゴリ名。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>Writes a category name and message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">条件が <ph id="ph2">&lt;see langword="true" /&gt;</ph> である場合、カテゴリ名とメッセージを <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> コレクションのトレース リスナーに書き込みます。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">既定では、出力は、インスタンスに<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph>パラメーターは、出力メッセージをグループ化を使用することができます。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType&gt;</ph> method of the trace listener.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType&gt;</ph>トレース リスナーのメソッドです。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>という<ph id="ph2">`generalSwitch`</ph>です。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">サンプル コードの外部では、このスイッチを設定します。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Verbose`</ph>, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">スイッチが に設定されている場合、 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Verbose`</ph>、例では、出力には、最初のエラー メッセージ、<ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">リスナーを追加する方法について、 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 、コレクションを参照してください、<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Error`</ph> or higher, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">その後、if、<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>に設定されている<ph id="ph2">`Error`</ph>または以降では、最初のメッセージと同じ行に 2 番目のエラー メッセージの出力例では、します。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行終端記号には、2 番目のメッセージが次に示します。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">使用して、アプリケーションをインストルメント化のパフォーマンスの低下を最小限に抑えることができます<ph id="ph1">&lt;see langword="If...Then" /&gt;</ph>ステートメントを使用せずに<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>ステートメントです。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">次の 2 つのコード例では、同じデバッグ メッセージを送信します。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>.</source>
          <target state="translated">ただし、最初の例でははるかに高速トレースがオフの場合場合、<bpt id="p1">&lt;c&gt;</bpt>である<ept id="p1">&lt;/c&gt;</ept>に評価される<ph id="ph1">&lt;see langword="false" /&gt;</ph>、呼び出すことはありません<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">2 番目の例では、常に呼び出します<ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>場合でも、<bpt id="p1">&lt;c&gt;</bpt>である<ept id="p1">&lt;/c&gt;</ept>は<ph id="ph2">&lt;see langword="false" /&gt;</ph>し、トレース出力は生成されません。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">これにより、任意の複雑なコードの不要な実行。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>First example:</source>
          <target state="translated">最初の例:</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>Second example:</source>
          <target state="translated">2 番目の例:</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Writes information about the debug to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">デバッグについての情報を <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> コレクションのトレース リスナーに書き込みます。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">名前が <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> に送信されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">オブジェクトの <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> メソッドの値を <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> コレクションのトレース リスナーに書き込みます。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">既定では、出力は、インスタンスに<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph>トレース リスナーのメソッドです。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>という<ph id="ph2">`generalSwitch`</ph>です。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">サンプル コードの外部では、このスイッチを設定します。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">スイッチが に設定されている場合、 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph>以降では、最初のエラー メッセージの出力例では、または、<ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">リスナーを追加する方法について、 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 、コレクションを参照してください、<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the name of the object on the same line as the first message.</source>
          <target state="translated">その後、if、<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>に設定されている<ph id="ph2">`Verbose`</ph>の例は、最初のメッセージと同じ行にオブジェクトの名前を出力します。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行終端記号には、2 番目のメッセージが次に示します。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>A message to write.</source>
          <target state="translated">書き込むメッセージ。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>Writes a message followed by a line terminator to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> コレクションのトレース リスナーにメッセージを書き込み、続けて行終端記号を書き込みます。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">既定では、出力は、インスタンスに<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph>トレース リスナーのメソッドです。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>という<ph id="ph2">`generalSwitch`</ph>です。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">サンプル コードの外部では、このスイッチを設定します。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">スイッチが に設定されている場合、 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph>以降では、最初のエラー メッセージの出力例では、または、<ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">リスナーを追加する方法について、 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 、コレクションを参照してください、<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">その後、if、<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>に設定されている<ph id="ph2">`Verbose`</ph>の例は、最初のメッセージと同じ行に 2 番目のエラー メッセージを出力します。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行終端記号には、2 番目のメッセージが次に示します。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">名前が <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> に送信されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">出力を編成するために使用するカテゴリ名。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">カテゴリ名とオブジェクトの <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> メソッドの値を <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> コレクションのトレース リスナーに書き込みます。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">既定では、出力は、インスタンスに<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph>パラメーターは、出力メッセージをグループ化を使用することができます。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph>トレース リスナーのメソッドです。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>という<ph id="ph2">`generalSwitch`</ph>です。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">サンプル コードの外部では、このスイッチを設定します。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">スイッチが に設定されている場合、 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph>以降では、最初のエラー メッセージの出力例では、または、<ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">リスナーを追加する方法について、 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 、コレクションを参照してください、<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">その後、if、<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>に設定されている<ph id="ph2">`Verbose`</ph>の例は、最初のメッセージと同じ行に 2 番目のエラー メッセージを出力します。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>The second message is followed by a line terminator.</source>
          <target state="translated">2 番目のメッセージには、行終端記号が続きます。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">0 個以上の書式項目が混在したテキストを含む複合書式指定文字列。各書式項目は、<bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 配列内のオブジェクトに対応します。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>An object array that contains zero or more objects to format.</source>
          <target state="translated">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>Writes a formatted message followed by a line terminator to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> コレクションのトレース リスナーに書式指定されたメッセージを書き込み、続けて行終端記号を書き込みます。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">このメソッドを使用して、.NET Framework オブジェクトの値をテキスト形式に変換し、その表現を文字列に埋め込むのです。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>The  keyword in the syntax for this method implies that the object array can be a single value.</source>
          <target state="translated">このメソッドの構文のキーワードは、オブジェクトの配列が 1 つの値にできることを意味します。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>The exception to this is the <ph id="ph1">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">この例外は、<ph id="ph1">&lt;xref:System.String&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>Explicit overloads take precedence, so an <ph id="ph1">`arg`</ph> value of a single string will default to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType&gt;</ph> overload.</source>
          <target state="translated">明示的なオーバー ロードも優先されますので、<ph id="ph1">`arg`</ph>単一の文字列の値は既定値、<ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType&gt;</ph>オーバー ロードします。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">既定では、出力は、インスタンスに<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType&gt;</ph> method of the trace listener.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType&gt;</ph>トレース リスナーのメソッドです。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">書き込むメッセージ。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">出力を編成するために使用するカテゴリ名。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>Writes a category name and message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">カテゴリ名とメッセージを <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> コレクションのトレース リスナーに書き込みます。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">既定では、出力は、インスタンスに<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph>パラメーターは、出力メッセージをグループ化を使用することができます。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph>トレース リスナーのメソッドです。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>という<ph id="ph2">`generalSwitch`</ph>です。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">サンプル コードの外部では、このスイッチを設定します。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">スイッチが に設定されている場合、 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph>以降では、最初のエラー メッセージの出力例では、または、<ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">リスナーを追加する方法について、 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 、コレクションを参照してください、<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message and the <ph id="ph3">`category`</ph> on the same line as the first message.</source>
          <target state="translated">場合はその後、<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>に設定されている<ph id="ph2">`Verbose`</ph>、例では、2 番目のエラー メッセージを出力して、<ph id="ph3">`category`</ph>最初のメッセージと同じ行にします。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行終端記号には、2 番目のメッセージが次に示します。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Writes information about the debug to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">条件が <ph id="ph2">&lt;see langword="true" /&gt;</ph> の場合、デバッグについての情報を <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> コレクションのトレース リスナーに書き込みます。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">評価する条件式。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the value is written to the trace listeners in the collection.</source>
          <target state="translated">条件が <ph id="ph1">&lt;see langword="true" /&gt;</ph> の場合、コレクションのトレース リスナーに値が書き込まれます。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">名前が <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> に送信されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">条件が <ph id="ph3">&lt;see langword="true" /&gt;</ph> の場合、オブジェクトの <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> メソッドの値を <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> コレクションのトレース リスナーに書き込みます。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">既定では、出力は、インスタンスに<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph>トレース リスナーのメソッドです。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>という<ph id="ph2">`generalSwitch`</ph>です。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">サンプル コードの外部では、このスイッチを設定します。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">スイッチが に設定されている場合、 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph>以降では、最初のエラー メッセージの出力例では、または、<ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">リスナーを追加する方法について、 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 、コレクションを参照してください、<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the name of the object on the same line as the first message.</source>
          <target state="translated">その後、if、<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>に設定されている<ph id="ph2">`Verbose`</ph>の例は、最初のメッセージと同じ行にオブジェクトの名前を出力します。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行終端記号には、2 番目のメッセージが次に示します。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">使用して、アプリケーションをインストルメント化のパフォーマンスの低下を最小限に抑えることができます<ph id="ph1">&lt;see langword="If...Then" /&gt;</ph>ステートメントを使用せずに<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>ステートメントです。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">次の 2 つのコード例では、同じデバッグ メッセージを送信します。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>.</source>
          <target state="translated">ただし、最初の例でははるかに高速トレースがオフの場合場合、<bpt id="p1">&lt;c&gt;</bpt>である<ept id="p1">&lt;/c&gt;</ept>に評価される<ph id="ph1">&lt;see langword="false" /&gt;</ph>、呼び出すことはありません<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">2 番目の例では、常に呼び出します<ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>場合でも、<bpt id="p1">&lt;c&gt;</bpt>である<ept id="p1">&lt;/c&gt;</ept>は<ph id="ph2">&lt;see langword="false" /&gt;</ph>し、トレース出力は生成されません。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">これにより、任意の複雑なコードの不要な実行。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>First example:</source>
          <target state="translated">最初の例:</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>Second example:</source>
          <target state="translated">2 番目の例:</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">評価する条件式。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the message is written to the trace listeners in the collection.</source>
          <target state="translated">条件が <ph id="ph1">&lt;see langword="true" /&gt;</ph> の場合、コレクションのトレース リスナーにメッセージが書き込まれます。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>A message to write.</source>
          <target state="translated">書き込むメッセージ。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>Writes a message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">条件が <ph id="ph2">&lt;see langword="true" /&gt;</ph> である場合、メッセージを <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> コレクションのトレース リスナーに書き込みます。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">既定では、出力は、インスタンスに<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType&gt;</ph> method of the trace listener.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType&gt;</ph>トレース リスナーのメソッドです。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>という<ph id="ph2">`generalSwitch`</ph>です。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">サンプル コードの外部では、このスイッチを設定します。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">スイッチが に設定されている場合、 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph>以降では、最初のエラー メッセージの出力例では、または、<ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>For information about adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">リスナーを追加する方法について、 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 、コレクションを参照してください、<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">その後、if、<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>に設定されている<ph id="ph2">`Verbose`</ph>の例は、最初のメッセージと同じ行に 2 番目のエラー メッセージを出力します。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行終端記号には、2 番目のメッセージが次に示します。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">使用して、アプリケーションをインストルメント化のパフォーマンスの低下を最小限に抑えることができます<ph id="ph1">&lt;see langword="If...Then" /&gt;</ph>ステートメントを使用せずに<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>ステートメントです。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">次の 2 つのコード例では、同じデバッグ メッセージを送信します。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>.</source>
          <target state="translated">ただし、最初の例でははるかに高速トレースがオフの場合場合、<bpt id="p1">&lt;c&gt;</bpt>である<ept id="p1">&lt;/c&gt;</ept>に評価される<ph id="ph1">&lt;see langword="false" /&gt;</ph>、呼び出すことはありません<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">2 番目の例では、常に呼び出します<ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>場合でも、<bpt id="p1">&lt;c&gt;</bpt>である<ept id="p1">&lt;/c&gt;</ept>は<ph id="ph2">&lt;see langword="false" /&gt;</ph>し、トレース出力は生成されません。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">これにより、任意の複雑なコードの不要な実行。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>First example:</source>
          <target state="translated">最初の例:</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>Second example:</source>
          <target state="translated">2 番目の例:</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">評価する条件式。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the category name and value are written to the trace listeners in the collection.</source>
          <target state="translated">条件が <ph id="ph1">&lt;see langword="true" /&gt;</ph> の場合、コレクションのトレース リスナーにカテゴリ名と値が書き込まれます。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">名前が <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> に送信されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">出力を編成するために使用するカテゴリ名。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">条件が <ph id="ph3">&lt;see langword="true" /&gt;</ph> の場合は、カテゴリ名とオブジェクトの <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> メソッドの値を <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> コレクションのトレース リスナーに書き込みます。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">既定では、出力は、インスタンスに<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph>パラメーターは、出力メッセージをグループ化を使用することができます。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph>トレース リスナーのメソッドです。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>という<ph id="ph2">`generalSwitch`</ph>です。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">サンプル コードの外部では、このスイッチを設定します。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">スイッチが に設定されている場合、 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph>以降では、最初のエラー メッセージの出力例では、または、<ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">リスナーを追加する方法について、 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 、コレクションを参照してください、<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">その後、if、<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>に設定されている<ph id="ph2">`Verbose`</ph>の例は、最初のメッセージと同じ行に 2 番目のエラー メッセージを出力します。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行終端記号には、2 番目のメッセージが次に示します。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">使用して、アプリケーションをインストルメント化のパフォーマンスの低下を最小限に抑えることができます<ph id="ph1">&lt;see langword="If...Then" /&gt;</ph>ステートメントを使用せずに<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>ステートメントです。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">次の 2 つのコード例では、同じデバッグ メッセージを送信します。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>.</source>
          <target state="translated">ただし、最初の例でははるかに高速トレースがオフの場合場合、<bpt id="p1">&lt;c&gt;</bpt>である<ept id="p1">&lt;/c&gt;</ept>に評価される<ph id="ph1">&lt;see langword="false" /&gt;</ph>、呼び出すことはありません<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">2 番目の例では、常に呼び出します<ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>場合でも、<bpt id="p1">&lt;c&gt;</bpt>である<ept id="p1">&lt;/c&gt;</ept>は<ph id="ph2">&lt;see langword="false" /&gt;</ph>し、トレース出力は生成されません。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">これにより、任意の複雑なコードの不要な実行。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>First example:</source>
          <target state="translated">最初の例:</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>Second example:</source>
          <target state="translated">2 番目の例:</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to cause a message to be written; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">メッセージが書き込まれるようにするには <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">書き込むメッセージ。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">出力を編成するために使用するカテゴリ名。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>Writes a category name and message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">条件が <ph id="ph2">&lt;see langword="true" /&gt;</ph> である場合、カテゴリ名とメッセージを <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> コレクションのトレース リスナーに書き込みます。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">既定では、出力は、インスタンスに<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph>パラメーターは、出力メッセージをグループ化を使用することができます。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType&gt;</ph> method of the trace listener.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType&gt;</ph>トレース リスナーのメソッドです。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph>という<ph id="ph2">`generalSwitch`</ph>です。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">サンプル コードの外部では、このスイッチを設定します。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">スイッチが に設定されている場合、 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph>以降では、最初のエラー メッセージの出力例では、または、<ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">リスナーを追加する方法について、 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 、コレクションを参照してください、<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message and the <ph id="ph3">`category`</ph> on the same line as the first message.</source>
          <target state="translated">場合はその後、<ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph>に設定されている<ph id="ph2">`Verbose`</ph>、例では、2 番目のエラー メッセージを出力して、<ph id="ph3">`category`</ph>最初のメッセージと同じ行にします。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">行終端記号には、2 番目のメッセージが次に示します。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">使用して、アプリケーションをインストルメント化のパフォーマンスの低下を最小限に抑えることができます<ph id="ph1">&lt;see langword="If...Then" /&gt;</ph>ステートメントを使用せずに<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>ステートメントです。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">次の 2 つのコード例では、同じデバッグ メッセージを送信します。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>.</source>
          <target state="translated">ただし、最初の例でははるかに高速トレースがオフの場合場合、<bpt id="p1">&lt;c&gt;</bpt>である<ept id="p1">&lt;/c&gt;</ept>に評価される<ph id="ph1">&lt;see langword="false" /&gt;</ph>、呼び出すことはありません<ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">2 番目の例では、常に呼び出します<ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>場合でも、<bpt id="p1">&lt;c&gt;</bpt>である<ept id="p1">&lt;/c&gt;</ept>は<ph id="ph2">&lt;see langword="false" /&gt;</ph>し、トレース出力は生成されません。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">これにより、任意の複雑なコードの不要な実行。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>First example:</source>
          <target state="translated">最初の例:</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>Second example:</source>
          <target state="translated">2 番目の例:</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>