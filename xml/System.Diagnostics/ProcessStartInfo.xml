<Type Name="ProcessStartInfo" FullName="System.Diagnostics.ProcessStartInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="57b90f5410d83f27ef62009855cc5e70be040006" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36343333" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ProcessStartInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ProcessStartInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ProcessStartInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProcessStartInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProcessStartInfo sealed" />
  <TypeSignature Language="F#" Value="type ProcessStartInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="73d45-101">プロセスを起動するときに使用する値のセットを指定します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="73d45-101">Specifies a set of values that are used when you start a process.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73d45-102"><xref:System.Diagnostics.ProcessStartInfo> と共に使用する、<xref:System.Diagnostics.Process>コンポーネントです。</span><span class="sxs-lookup"><span data-stu-id="73d45-102"><xref:System.Diagnostics.ProcessStartInfo> is used together with the <xref:System.Diagnostics.Process> component.</span></span> <span data-ttu-id="73d45-103">使用してプロセスを開始すると、<xref:System.Diagnostics.Process>クラス、実行中のプロセスにアタッチするときに、それに加えて利用可能な情報を処理するアクセス権があります。</span><span class="sxs-lookup"><span data-stu-id="73d45-103">When you start a process using the <xref:System.Diagnostics.Process> class, you have access to process information in addition to that available when attaching to a running process.</span></span>  
  
 <span data-ttu-id="73d45-104">使用することができます、<xref:System.Diagnostics.ProcessStartInfo>を開始するプロセスが細かく制御を強化するためのクラスです。</span><span class="sxs-lookup"><span data-stu-id="73d45-104">You can use the <xref:System.Diagnostics.ProcessStartInfo> class for better control over the process you start.</span></span> <span data-ttu-id="73d45-105">少なくともを設定する必要があります、<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>プロパティか、手動でまたはコンス トラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="73d45-105">You must at least set the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property, either manually or using the constructor.</span></span> <span data-ttu-id="73d45-106">ファイル名は、任意のアプリケーションまたはドキュメントがします。</span><span class="sxs-lookup"><span data-stu-id="73d45-106">The file name is any application or document.</span></span> <span data-ttu-id="73d45-107">ここでは、開いているファイルの種類または既定のアクションが関連付けられているドキュメントが定義します。</span><span class="sxs-lookup"><span data-stu-id="73d45-107">Here a document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="73d45-108">表示する登録されているファイルの種類と、関連付けられているアプリケーション、コンピューターを使用して、**フォルダー オプション** ダイアログ ボックスは、オペレーティング システムを使用します。</span><span class="sxs-lookup"><span data-stu-id="73d45-108">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="73d45-109">**詳細**ボタンは、特定の登録されているファイルの種類に関連付けられた開いているアクションがあるかどうかを示すダイアログ ボックスにつながります。</span><span class="sxs-lookup"><span data-stu-id="73d45-109">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="73d45-110">さらに、そのファイルに対して実行するアクションを定義する他のプロパティを設定することができます。</span><span class="sxs-lookup"><span data-stu-id="73d45-110">In addition, you can set other properties that define actions to take with that file.</span></span> <span data-ttu-id="73d45-111">特定の型に値を指定することができます、<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>プロパティを<xref:System.Diagnostics.ProcessStartInfo.Verb%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="73d45-111">You can specify a value specific to the type of the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property for the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property.</span></span> <span data-ttu-id="73d45-112">たとえば、ドキュメントの種類の場合は"print"を指定できます。</span><span class="sxs-lookup"><span data-stu-id="73d45-112">For example, you can specify "print" for a document type.</span></span> <span data-ttu-id="73d45-113">さらに、指定<xref:System.Diagnostics.ProcessStartInfo.Arguments%2A>プロパティ値をファイルの open プロシージャに渡すコマンドライン引数にします。</span><span class="sxs-lookup"><span data-stu-id="73d45-113">Additionally, you can specify <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> property values to be command-line arguments to pass to the file's open procedure.</span></span> <span data-ttu-id="73d45-114">たとえば、テキスト エディターのアプリケーションを指定する場合、<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>プロパティ、行うこともできます、<xref:System.Diagnostics.ProcessStartInfo.Arguments%2A>にエディターで開かれるテキスト ファイルを指定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="73d45-114">For example, if you specify a text editor application in the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property, you can use the <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> property to specify a text file to be opened by the editor.</span></span>  
  
 <span data-ttu-id="73d45-115">通常、標準の入力には、キーボード、および標準出力と標準エラーは、通常、モニター画面。</span><span class="sxs-lookup"><span data-stu-id="73d45-115">Standard input is usually the keyboard, and standard output and standard error are usually the monitor screen.</span></span> <span data-ttu-id="73d45-116">ただし、使用することができます、 <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>、 <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>、および<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A>により、プロセスからの入力を取得または、ファイルまたはその他のデバイスに出力を取得するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="73d45-116">However, you can use the <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>, <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>, and <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> properties to cause the process to get input from or return output to a file or other device.</span></span> <span data-ttu-id="73d45-117">使用する場合、 <xref:System.Diagnostics.Process.StandardInput%2A>、 <xref:System.Diagnostics.Process.StandardOutput%2A>、または<xref:System.Diagnostics.Process.StandardError%2A>プロパティを<xref:System.Diagnostics.Process>コンポーネント、する必要がありますまず対応する値に設定、<xref:System.Diagnostics.ProcessStartInfo>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="73d45-117">If you use the <xref:System.Diagnostics.Process.StandardInput%2A>, <xref:System.Diagnostics.Process.StandardOutput%2A>, or <xref:System.Diagnostics.Process.StandardError%2A> properties on the <xref:System.Diagnostics.Process> component, you must first set the corresponding value on the <xref:System.Diagnostics.ProcessStartInfo> property.</span></span> <span data-ttu-id="73d45-118">それ以外の場合、システムは、ストリームを読み書きするときに例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="73d45-118">Otherwise, the system throws an exception when you read or write to the stream.</span></span>  
  
 <span data-ttu-id="73d45-119">設定、<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>オペレーティング システムのシェルを使用して、プロセスを開始するかどうかを指定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="73d45-119">Set the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property to specify whether to start the process by using the operating system shell.</span></span> <span data-ttu-id="73d45-120">場合<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>に設定されている`false`、新しいプロセスは標準出力、標準の入力を継承および呼び出し元の標準エラー ストリームを処理しない限り、 <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>、 <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>、または<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A>、それぞれのプロパティに設定されます`true`.</span><span class="sxs-lookup"><span data-stu-id="73d45-120">If <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is set to `false`, the new process inherits the standard input, standard output, and standard error streams of the calling process, unless the <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>, <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>, or <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> properties, respectively, are set to `true`.</span></span> 
  
 <span data-ttu-id="73d45-121">いずれかの値を変更することができます<xref:System.Diagnostics.ProcessStartInfo>プロセスが開始された時点までのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="73d45-121">You can change the value of any <xref:System.Diagnostics.ProcessStartInfo> property up to the time that the process starts.</span></span> <span data-ttu-id="73d45-122">プロセスを開始した後は、これらの値の変更も効果はありません。</span><span class="sxs-lookup"><span data-stu-id="73d45-122">After you start the process, changing these values has no effect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73d45-123">このクラスには、クラス レベルのすべてのメンバーに適用されるリンク確認要求が含まれています。</span><span class="sxs-lookup"><span data-stu-id="73d45-123">This class contains a link demand at the class level that applies to all members.</span></span> <span data-ttu-id="73d45-124">A<xref:System.Security.SecurityException>直前の呼び出し元に完全信頼アクセス許可があるない場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="73d45-124">A <xref:System.Security.SecurityException> is thrown when the immediate caller does not have full-trust permission.</span></span> <span data-ttu-id="73d45-125">セキュリティ要求の詳細については、「[リンク確認要求](~/docs/framework/misc/link-demands.md)です。</span><span class="sxs-lookup"><span data-stu-id="73d45-125">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73d45-126">次のコード例を使用する方法を示しています、<xref:System.Diagnostics.ProcessStartInfo>として移行先の Url を提供する、Internet Explorer を起動するクラス<xref:System.Diagnostics.ProcessStartInfo>引数。</span><span class="sxs-lookup"><span data-stu-id="73d45-126">The following code example demonstrates how to use the <xref:System.Diagnostics.ProcessStartInfo> class to start Internet Explorer, providing the destination URLs as <xref:System.Diagnostics.ProcessStartInfo> arguments.</span></span>  
  
 [!code-cpp[Process.Start_static#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp#1)]
 [!code-csharp[Process.Start_static#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs#1)]
 [!code-vb[Process.Start_static#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="73d45-127">メンバーを呼び出す<see cref="T:System.Diagnostics.ProcessStartInfo" />です。</span>
      <span class="sxs-lookup">
        <span data-stu-id="73d45-127">for calling members of <see cref="T:System.Diagnostics.ProcessStartInfo" />.</span>
      </span>
      <span data-ttu-id="73d45-128">要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />です。[NIB: 名前付き権限セット](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="73d45-128">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Named Permission Sets](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</span>
      </span>
    </permission>
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="73d45-129">
            <see cref="T:System.Diagnostics.ProcessStartInfo" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-129">Initializes a new instance of the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProcessStartInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ProcessStartInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProcessStartInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="73d45-130">プロセスを起動するときに使用するファイル名を指定せずに、<see cref="T:System.Diagnostics.ProcessStartInfo" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-130">Initializes a new instance of the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class without specifying a file name with which to start the process.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73d45-131">設定する必要がありますが、少なくとも<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>プロパティ、プロセスを開始する前にします。</span><span class="sxs-lookup"><span data-stu-id="73d45-131">You must set at least the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property before you start the process.</span></span> <span data-ttu-id="73d45-132">ファイル名は、任意のアプリケーションまたはドキュメントがします。</span><span class="sxs-lookup"><span data-stu-id="73d45-132">The file name is any application or document.</span></span> <span data-ttu-id="73d45-133">この例では、ドキュメントは、開いているファイルの種類または既定のアクションが関連付けられている定義されます。</span><span class="sxs-lookup"><span data-stu-id="73d45-133">In this case, a document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="73d45-134">表示する登録されているファイルの種類と、関連付けられているアプリケーション、コンピューターを使用して、**フォルダー オプション** ダイアログ ボックスは、オペレーティング システムを使用します。</span><span class="sxs-lookup"><span data-stu-id="73d45-134">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="73d45-135">**詳細**ボタンは、特定の登録されているファイルの種類に関連付けられた開いているアクションがあるかどうかを示すダイアログ ボックスにつながります。</span><span class="sxs-lookup"><span data-stu-id="73d45-135">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="73d45-136">必要に応じて、プロセスを開始する前にその他のプロパティを設定もできます。</span><span class="sxs-lookup"><span data-stu-id="73d45-136">Optionally, you can also set other properties before you start the process.</span></span> <span data-ttu-id="73d45-137"><xref:System.Diagnostics.ProcessStartInfo.Verb%2A>プロパティを提供するために、「印刷」などに示されているファイルのあるアクション、<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="73d45-137">The <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property supplies actions to take, such as "print", with the file indicated in the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="73d45-138"><xref:System.Diagnostics.ProcessStartInfo.Arguments%2A>プロパティは、システムに開いたときに、ファイルにコマンドライン引数を渡す方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="73d45-138">The <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> property supplies a way to pass command-line arguments to the file when the system opens it.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="73d45-139">直前の呼び出し元に対する完全な信頼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-139">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="73d45-140">このメンバーは、部分的に信頼されているコードから使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-140">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProcessStartInfo (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProcessStartInfo(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ProcessStartInfo : string -&gt; System.Diagnostics.ProcessStartInfo" Usage="new System.Diagnostics.ProcessStartInfo fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="73d45-141">プロセスを起動するときに使用するアプリケーションまたはドキュメント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-141">An application or document with which to start a process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73d45-142">
            <see cref="T:System.Diagnostics.ProcessStartInfo" /> クラスの新しいインスタンスを初期化し、アプリケーションやドキュメントなど、プロセスを起動するときに使用するファイル名を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-142">Initializes a new instance of the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class and specifies a file name such as an application or document with which to start the process.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73d45-143">ファイル名は、任意のアプリケーションまたはドキュメントがします。</span><span class="sxs-lookup"><span data-stu-id="73d45-143">The file name is any application or document.</span></span> <span data-ttu-id="73d45-144">この例では、ドキュメントは、開いているファイルの種類または既定のアクションが関連付けられている定義されます。</span><span class="sxs-lookup"><span data-stu-id="73d45-144">In this case, a document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="73d45-145">表示する登録されているファイルの種類と、関連付けられているアプリケーション、コンピューターを使用して、**フォルダー オプション** ダイアログ ボックスは、オペレーティング システムを使用します。</span><span class="sxs-lookup"><span data-stu-id="73d45-145">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="73d45-146">**詳細**ボタンは、特定の登録されているファイルの種類に関連付けられた開いているアクションがあるかどうかを示すダイアログ ボックスにつながります。</span><span class="sxs-lookup"><span data-stu-id="73d45-146">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="73d45-147">変更することができます、<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>プロパティ、プロセスが開始された時点まで、このコンス トラクターの呼び出し後にします。</span><span class="sxs-lookup"><span data-stu-id="73d45-147">You can change the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property after you call this constructor, up to the time that the process starts.</span></span> <span data-ttu-id="73d45-148">プロセスを開始した後は、これらの値の変更も効果はありません。</span><span class="sxs-lookup"><span data-stu-id="73d45-148">After you start the process, changing these values has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="73d45-149">直前の呼び出し元に対する完全な信頼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-149">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="73d45-150">このメンバーは、部分的に信頼されているコードから使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-150">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProcessStartInfo (string fileName, string arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, arguments As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProcessStartInfo(System::String ^ fileName, System::String ^ arguments);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ProcessStartInfo : string * string -&gt; System.Diagnostics.ProcessStartInfo" Usage="new System.Diagnostics.ProcessStartInfo (fileName, arguments)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="arguments" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="73d45-151">プロセスを起動するときに使用するアプリケーション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-151">An application with which to start a process.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="73d45-152">プロセスを起動するときにアプリケーションに渡すコマンド ライン引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-152">Command-line arguments to pass to the application when the process starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73d45-153">プロセスを起動するときに使用するアプリケーション ファイル名およびアプリケーションに渡すコマンド ライン引数のセットを指定して、<see cref="T:System.Diagnostics.ProcessStartInfo" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-153">Initializes a new instance of the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class, specifies an application file name with which to start the process, and specifies a set of command-line arguments to pass to the application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73d45-154">ファイル名は、任意のアプリケーションまたはドキュメントがします。</span><span class="sxs-lookup"><span data-stu-id="73d45-154">The file name is any application or document.</span></span> <span data-ttu-id="73d45-155">この例では、ドキュメントは、開いているファイルの種類または既定のアクションが関連付けられている定義されます。</span><span class="sxs-lookup"><span data-stu-id="73d45-155">In this case, a document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="73d45-156">表示する登録されているファイルの種類と、関連付けられているアプリケーション、コンピューターを使用して、**フォルダー オプション** ダイアログ ボックスは、オペレーティング システムを使用します。</span><span class="sxs-lookup"><span data-stu-id="73d45-156">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="73d45-157">**詳細**ボタンは、特定の登録されているファイルの種類に関連付けられた開いているアクションがあるかどうかを示すダイアログ ボックスにつながります。</span><span class="sxs-lookup"><span data-stu-id="73d45-157">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="73d45-158">変更することができます、<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>または<xref:System.Diagnostics.ProcessStartInfo.Arguments%2A>プロパティ、プロセスが開始された時点まで、このコンス トラクターの呼び出し後にします。</span><span class="sxs-lookup"><span data-stu-id="73d45-158">You can change the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> or <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> properties after you call this constructor, up to the time that the process starts.</span></span> <span data-ttu-id="73d45-159">プロセスを開始した後は、これらの値の変更も効果はありません。</span><span class="sxs-lookup"><span data-stu-id="73d45-159">After you start the process, changing these values has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="73d45-160">直前の呼び出し元に対する完全な信頼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-160">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="73d45-161">このメンバーは、部分的に信頼されているコードから使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-161">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ArgumentList">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; ArgumentList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; ArgumentList" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.ArgumentList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentList As Collection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ ArgumentList { System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ArgumentList : System.Collections.ObjectModel.Collection&lt;string&gt;" Usage="System.Diagnostics.ProcessStartInfo.ArgumentList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public string Arguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Arguments" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public Property Arguments As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Arguments { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Arguments : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Command line arguments that will be passed to the application specified by the FileName property.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73d45-162">アプリケーションを起動するときに使用するコマンド ライン引数のセットを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-162">Gets or sets the set of command-line arguments to use when starting the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73d45-163">
            <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> プロパティで指定したターゲット アプリケーションに渡す引数を格納した単一の文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-163">A single string containing the arguments to pass to the target application specified in the <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span>
          </span>
          <span data-ttu-id="73d45-164">既定値は、空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-164">The default is an empty string ("").</span>
          </span>
          <span data-ttu-id="73d45-165">Windows オペレーティング システムの Windows Vista 以前のバージョンでは、プロセスへの完全パスの長さに追加される引数の長さは 2080 よりも小さくする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-165">On Windows Vista and earlier versions of the Windows operating system, the length of the arguments added to the length of the full path to the process must be less than 2080.</span>
          </span>
          <span data-ttu-id="73d45-166">Windows 7 およびそれ以降のバージョンでは、長さは 32699 よりも小さくする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-166">On Windows 7 and later versions, the length must be less than 32699.</span>
          </span>
          <span data-ttu-id="73d45-167">引数はターゲット アプリケーションで解析され、解釈されるため、そのアプリケーションの想定に合わせたものでなければなりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-167">Arguments are parsed and interpreted by the target application, so must align with the expectations of that application.</span>
          </span>
          <span data-ttu-id="73d45-168">下記の「例」で説明するとおり、.NET アプリケーションではスペースが複数の引数間の区切り記号として解釈されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-168">For.NET applications as demonstrated in the Examples below, spaces are interpreted as a separator between multiple arguments.</span>
          </span>
          <span data-ttu-id="73d45-169">1 つの引数にスペースが含まれる場合は引用符で囲む必要がありますが、これらの引用符はターゲット アプリケーションに渡されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-169">A single argument that includes spaces must be surrounded by quotation marks, but those quotation marks are not carried through to the target application.</span>
          </span>
          <span data-ttu-id="73d45-170">解析後の最終的な引数に引用符を組み込むには、それぞれの記号をトリプル エスケープします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-170">In include quotation marks in the final parsed argument, triple-escape each mark.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73d45-171">そのエコー小規模なアプリケーション (argsecho.exe) を作成する最初の例を次の引数をコンソールにします。</span><span class="sxs-lookup"><span data-stu-id="73d45-171">The first example below creates a small application (argsecho.exe) that echos its arguments to the console.</span></span> <span data-ttu-id="73d45-172">2 番目の例では、引数のプロパティの異なるバリエーションを示すために argsecho.exe を起動するアプリケーションを作成します。</span><span class="sxs-lookup"><span data-stu-id="73d45-172">The second example creates an application that invokes argsecho.exe to demonstrate different variations for the Arguments property.</span></span>  
  
 [!code-cpp[Process.Start_static#3](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp#3)]
 [!code-csharp[Process.Start_static#3](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs#3)]
 [!code-vb[Process.Start_static#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb#3)]  
  
 [!code-cpp[Process.Start_static#2](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp#2)]
 [!code-csharp[Process.Start_static#2](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs#2)]
 [!code-vb[Process.Start_static#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNoWindow">
      <MemberSignature Language="C#" Value="public bool CreateNoWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CreateNoWindow" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.CreateNoWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property CreateNoWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CreateNoWindow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CreateNoWindow : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.CreateNoWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether to start the process without creating a new window to contain it.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73d45-173">プロセスを新しいウィンドウで起動するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-173">Gets or sets a value indicating whether to start the process in a new window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73d45-174">プロセス用の新しいウィンドウを作成せずにプロセスを起動する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-174">
              <see langword="true" /> if the process should be started without creating a new window to contain it; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="73d45-175">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-175">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73d45-176">場合、<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>プロパティは`true`または<xref:System.Diagnostics.ProcessStartInfo.UserName%2A>と<xref:System.Diagnostics.ProcessStartInfo.Password%2A>のプロパティが`null`、<xref:System.Diagnostics.ProcessStartInfo.CreateNoWindow%2A>プロパティの値は無視され、新しいウィンドウを作成します。</span><span class="sxs-lookup"><span data-stu-id="73d45-176">If the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property is `true` or the <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A> properties are not `null`, the <xref:System.Diagnostics.ProcessStartInfo.CreateNoWindow%2A> property value is ignored and a new window is created.</span></span>  

 <span data-ttu-id="73d45-177">.NET core は、macOS など、Linux、Unix のようなプラットフォーム上で直接作成元の windows をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="73d45-177">.NET Core does not support creating windows directly on Unix-like platforms, including macOS and Linux.</span></span> <span data-ttu-id="73d45-178">このようなプラットフォームでは、このプロパティが無視されます。</span><span class="sxs-lookup"><span data-stu-id="73d45-178">This property is ignored on such platforms.</span></span>
  
   
  
## Examples  
 [!code-cpp[Process.Start_instance#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_instance/CPP/processstart.cpp#1)]
 [!code-csharp[Process.Start_instance#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_instance/CS/processstart.cs#1)]
 [!code-vb[Process.Start_instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_instance/VB/processstart.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73d45-179">プロセスを開始するときに使用されるドメインを指定する値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-179">Gets or sets a value that identifies the domain to use when starting the process.</span>
          </span>
          <span data-ttu-id="73d45-180">この値が <see langword="null" /> の場合は、<see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> プロパティを UPN 形式で指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-180">If this value is <see langword="null" />, the <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> property must be specified in UPN format.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73d45-181">プロセスを開始するときに使用する Active Directory ドメイン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-181">The Active Directory domain to use when starting the process.</span>
          </span>
          <span data-ttu-id="73d45-182">この値が <see langword="null" /> の場合は、<see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> プロパティを UPN 形式で指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-182">If this value is <see langword="null" />, the <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> property must be specified in UPN format.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="73d45-183">このプロパティは、Active Directory を使用するエンタープライズ環境内のユーザーに関心のある、主に、します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-183">This property is primarily of interest to users within enterprise environments that use Active Directory.</span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Environment">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Environment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Environment" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Environment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Environment As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Environment { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Environment : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Diagnostics.ProcessStartInfo.Environment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73d45-184">このプロセスと子のプロセスに適用される環境変数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-184">Gets the environment variables that apply to this process and its child processes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73d45-185">このプロセスと子のプロセスに適用される環境変数を格納している汎用ディクショナリ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-185">A generic dictionary containing the environment variables that apply to this process and its child processes.</span>
          </span>
          <span data-ttu-id="73d45-186">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-186">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73d45-187">環境変数には、ファイルの検索パス、一時ファイル、アプリケーション固有のオプション、およびその他の同様の情報のディレクトリが含まれています。</span><span class="sxs-lookup"><span data-stu-id="73d45-187">The environment variables contain search paths for files, directories for temporary files, application-specific options, and other similar information.</span></span> <span data-ttu-id="73d45-188">直接設定することはできませんが、<xref:System.Diagnostics.ProcessStartInfo.Environment%2A>プロパティ、プロパティによって返されるジェネリック ディクショナリを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="73d45-188">Although you cannot directly set the <xref:System.Diagnostics.ProcessStartInfo.Environment%2A> property, you can modify the generic dictionary returned by the property.</span></span> <span data-ttu-id="73d45-189">たとえば、次のコードが TempPath 環境変数を追加します:`myProcess.StartInfo.Environment.Add("TempPath", "C:\\Temp")`です。</span><span class="sxs-lookup"><span data-stu-id="73d45-189">For example, the following code adds a TempPath environment variable: `myProcess.StartInfo.Environment.Add("TempPath", "C:\\Temp")`.</span></span>  <span data-ttu-id="73d45-190">設定する必要があります、<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>プロパティを`false`を変更した後、プロセスを開始する、<xref:System.Diagnostics.ProcessStartInfo.Environment%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="73d45-190">You must set the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property to `false` to start the process after changing the <xref:System.Diagnostics.ProcessStartInfo.Environment%2A> property.</span></span> <span data-ttu-id="73d45-191">場合<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>は`true`、<xref:System.InvalidOperationException>場合にスローされますが、<xref:System.Diagnostics.Process.Start%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="73d45-191">If <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, an <xref:System.InvalidOperationException> is thrown when the <xref:System.Diagnostics.Process.Start%2A> method is called.</span></span>  
  
 <span data-ttu-id="73d45-192">使用して、.NET Framework アプリケーションで、<xref:System.Diagnostics.ProcessStartInfo.Environment%2A>プロパティは、使用する場合と同じ、<xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="73d45-192">On .NET Framework applications, using the <xref:System.Diagnostics.ProcessStartInfo.Environment%2A> property is the same as using the <xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.EnvironmentVariables" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <altmember cref="M:System.Diagnostics.Process.Start" />
      </Docs>
    </Member>
    <Member MemberName="EnvironmentVariables">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary EnvironmentVariables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary EnvironmentVariables" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.EnvironmentVariables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvironmentVariables As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ EnvironmentVariables { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnvironmentVariables : System.Collections.Specialized.StringDictionary" Usage="System.Diagnostics.ProcessStartInfo.EnvironmentVariables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StringDictionaryEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Set of environment variables that apply to this process and child processes.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73d45-193">ファイルの検索パス、一時ファイルのディレクトリ、アプリケーション固有のオプションなどの情報を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-193">Gets search paths for files, directories for temporary files, application-specific options, and other similar information.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73d45-194">このプロセスおよび子プロセスに適用される環境変数を提供する文字列ディクショナリ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-194">A string dictionary that provides environment variables that apply to this process and child processes.</span>
          </span>
          <span data-ttu-id="73d45-195">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-195">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73d45-196">設定することはできませんが、<xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A>プロパティを変更できます、<xref:System.Collections.Specialized.StringDictionary>プロパティによって返されます。</span><span class="sxs-lookup"><span data-stu-id="73d45-196">Although you cannot set the <xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> property, you can modify the <xref:System.Collections.Specialized.StringDictionary> returned by the property.</span></span> <span data-ttu-id="73d45-197">たとえば、次のコードが TempPath 環境変数を追加します:`myProcess.StartInfo.EnvironmentVariables.Add("TempPath", "C:\\Temp")`です。</span><span class="sxs-lookup"><span data-stu-id="73d45-197">For example, the following code adds a TempPath environment variable: `myProcess.StartInfo.EnvironmentVariables.Add("TempPath", "C:\\Temp")`.</span></span>  <span data-ttu-id="73d45-198">設定する必要があります、<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>プロパティを`false`を変更した後、プロセスを開始する、<xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="73d45-198">You must set the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property to `false` to start the process after changing the <xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> property.</span></span> <span data-ttu-id="73d45-199">場合<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>は`true`、<xref:System.InvalidOperationException>場合にスローされますが、<xref:System.Diagnostics.Process.Start%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="73d45-199">If <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, an <xref:System.InvalidOperationException> is thrown when the <xref:System.Diagnostics.Process.Start%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorDialog">
      <MemberSignature Language="C#" Value="public bool ErrorDialog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ErrorDialog" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.ErrorDialog" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorDialog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ErrorDialog { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorDialog : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.ErrorDialog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether to show an error dialog to the user if there is an error.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73d45-200">プロセスを起動できなかったときにエラー ダイアログ ボックスを表示するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-200">Gets or sets a value indicating whether an error dialog box is displayed to the user if the process cannot be started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73d45-201">プロセスを起動できなかったときにエラー ダイアログ ボックスを画面に表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-201">
              <see langword="true" /> if an error dialog box should be displayed on the screen if the process cannot be started; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="73d45-202">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-202">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="73d45-203"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 必要があります`true`を設定する場合<xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A>に`true`です。</span><span class="sxs-lookup"><span data-stu-id="73d45-203"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> must be `true` if you want to set <xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A> to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorDialogParentHandle">
      <MemberSignature Language="C#" Value="public IntPtr ErrorDialogParentHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ErrorDialogParentHandle" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorDialogParentHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ErrorDialogParentHandle { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorDialogParentHandle : nativeint with get, set" Usage="System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73d45-204">プロセスを起動できないときにエラー ダイアログ ボックスを表示するのに使用するウィンドウ ハンドルを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-204">Gets or sets the window handle to use when an error dialog box is shown for a process that cannot be started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73d45-205">プロセスの起動失敗によって生成されるエラー ダイアログ ボックスのハンドルへのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-205">A pointer to the handle of the error dialog box that results from a process start failure.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73d45-206">場合<xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A>は`true`、<xref:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle%2A>プロパティが表示されるダイアログ ボックスの親ウィンドウを指定します。</span><span class="sxs-lookup"><span data-stu-id="73d45-206">If <xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A> is `true`, the <xref:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle%2A> property specifies the parent window for the dialog box that is shown.</span></span> <span data-ttu-id="73d45-207">アプリケーションの前に ダイアログ ボックスの親を指定すると便利です。</span><span class="sxs-lookup"><span data-stu-id="73d45-207">It is useful to specify a parent to keep the dialog box in front of the application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.FileName" />
      <MemberSignature Language="VB.NET" Value="Public Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StartFileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The name of the application, document or URL to start.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73d45-208">起動するアプリケーションまたはドキュメントを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-208">Gets or sets the application or document to start.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73d45-209">起動するアプリケーション名。または、アプリケーションに関連付けられていて、既定の "open" アクションが利用できるファイル タイプのドキュメント名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-209">The name of the application to start, or the name of a document of a file type that is associated with an application and that has a default open action available to it.</span>
          </span>
          <span data-ttu-id="73d45-210">既定値は、空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-210">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73d45-211">設定する必要がありますが、少なくとも<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>プロパティ、プロセスを開始する前にします。</span><span class="sxs-lookup"><span data-stu-id="73d45-211">You must set at least the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property before you start the process.</span></span> <span data-ttu-id="73d45-212">ファイル名は、任意のアプリケーションまたはドキュメントがします。</span><span class="sxs-lookup"><span data-stu-id="73d45-212">The file name is any application or document.</span></span> <span data-ttu-id="73d45-213">ドキュメントは、開いているファイルの種類または既定のアクションが関連付けられている定義します。</span><span class="sxs-lookup"><span data-stu-id="73d45-213">A document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="73d45-214">表示する登録されているファイルの種類と、関連付けられているアプリケーション、コンピューターを使用して、**フォルダー オプション** ダイアログ ボックスは、オペレーティング システムを使用します。</span><span class="sxs-lookup"><span data-stu-id="73d45-214">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="73d45-215">**詳細**ボタンは、特定の登録されているファイルの種類に関連付けられた開いているアクションがあるかどうかを示すダイアログ ボックスにつながります。</span><span class="sxs-lookup"><span data-stu-id="73d45-215">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="73d45-216">一連のファイルの種類に使用できる値によって異なりますの一部の<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="73d45-216">The set of file types available to you depends in part on the value of the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property.</span></span> <span data-ttu-id="73d45-217">場合<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>は`true`、任意のドキュメントを開始してで、印刷など、ファイルに対する操作を実行、<xref:System.Diagnostics.Process>コンポーネントです。</span><span class="sxs-lookup"><span data-stu-id="73d45-217">If <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, you can start any document and perform operations on the file, such as printing, with the <xref:System.Diagnostics.Process> component.</span></span> <span data-ttu-id="73d45-218">ときに<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>は`false`でのみ実行可能ファイルを起動することができます、<xref:System.Diagnostics.Process>コンポーネントです。</span><span class="sxs-lookup"><span data-stu-id="73d45-218">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`, you can start only executables with the <xref:System.Diagnostics.Process> component.</span></span>  
  
 <span data-ttu-id="73d45-219">ClickOnce アプリケーションを起動するには設定して、<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>プロパティを最初にインストールしたアプリケーションの場所 (たとえば、Web アドレス) をします。</span><span class="sxs-lookup"><span data-stu-id="73d45-219">You can start a ClickOnce application by setting the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property to the location (for example, a Web address) from which you originally installed the application.</span></span> <span data-ttu-id="73d45-220">ハード_ディスク上のインストール場所を指定することで、ClickOnce アプリケーションは開始されません。</span><span class="sxs-lookup"><span data-stu-id="73d45-220">Do not start a ClickOnce application by specifying its installed location on your hard disk.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Process.Start_instance#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_instance/CPP/processstart.cpp#1)]
 [!code-csharp[Process.Start_instance#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_instance/CS/processstart.cs#1)]
 [!code-vb[Process.Start_instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_instance/VB/processstart.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadUserProfile">
      <MemberSignature Language="C#" Value="public bool LoadUserProfile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoadUserProfile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.LoadUserProfile" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadUserProfile As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LoadUserProfile { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LoadUserProfile : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.LoadUserProfile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73d45-221">Windows ユーザー プロファイルをレジストリから読み込むかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-221">Gets or sets a value that indicates whether the Windows user profile is to be loaded from the registry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73d45-222">Windows ユーザー プロファイルを読み込む必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-222">
              <see langword="true" /> if the Windows user profile should be loaded; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="73d45-223">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-223">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73d45-224">このプロパティが参照されるは、ユーザー名、パスワード、およびドメインを使用して、プロセスが開始される場合。</span><span class="sxs-lookup"><span data-stu-id="73d45-224">This property is referenced if the process is being started by using the user name, password, and domain.</span></span>  
  
 <span data-ttu-id="73d45-225">値が場合`true`、内のユーザーのプロファイル、`HKEY_USERS`レジストリ キーが読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="73d45-225">If the value is `true`, the user's profile in the `HKEY_USERS` registry key is loaded.</span></span> <span data-ttu-id="73d45-226">プロファイルの読み込みに時間がかかる場合があります。</span><span class="sxs-lookup"><span data-stu-id="73d45-226">Loading the profile can be time-consuming.</span></span> <span data-ttu-id="73d45-227">そのため、お勧めの情報にアクセスする必要がある場合にのみ、この値を使用する、`HKEY_CURRENT_USER`レジストリ キー。</span><span class="sxs-lookup"><span data-stu-id="73d45-227">Therefore, it is best to use this value only if you must access the information in the `HKEY_CURRENT_USER` registry key.</span></span>  
  
 <span data-ttu-id="73d45-228">Windows Server 2003 および Windows 2000、かどうか、プロセスが作成された子プロセスに関係なく、新しいプロセスが終了した後、プロファイルが読み込まれていません。</span><span class="sxs-lookup"><span data-stu-id="73d45-228">In Windows Server 2003 and Windows 2000, the profile is unloaded after the new process has been terminated, regardless of whether the process has created child processes.</span></span>  
  
 <span data-ttu-id="73d45-229">Windows XP では、プロファイルが新しいプロセスの後にアンロードとが作成されたすべての子プロセスが終了しました。</span><span class="sxs-lookup"><span data-stu-id="73d45-229">In Windows XP, the profile is unloaded after the new process and all child processes it has created have been terminated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public System.Security.SecureString Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.SecureString Password" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As SecureString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::SecureString ^ Password { System::Security::SecureString ^ get(); void set(System::Security::SecureString ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Password : System.Security.SecureString with get, set" Usage="System.Diagnostics.ProcessStartInfo.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73d45-230">プロセスを開始するときに使用するユーザー パスワードを格納するセキュリティ文字列を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-230">Gets or sets a secure string that contains the user password to use when starting the process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73d45-231">プロセスの開始時に使用するユーザー パスワード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-231">The user password to use when starting the process.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="73d45-232"><xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>場合は、プロパティを設定する必要があります<xref:System.Diagnostics.ProcessStartInfo.UserName%2A>と<xref:System.Diagnostics.ProcessStartInfo.Password%2A>提供されます。</span><span class="sxs-lookup"><span data-stu-id="73d45-232">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property must be set if <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A> are provided.</span></span> <span data-ttu-id="73d45-233">プロパティが設定されていない場合、既定の作業ディレクトリは %SYSTEMROOT%\system32 を使用します。</span><span class="sxs-lookup"><span data-stu-id="73d45-233">If the property is not set, the default working directory is %SYSTEMROOT%\system32.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73d45-234">設定、 <xref:System.Diagnostics.ProcessStartInfo.Domain%2A>、 <xref:System.Diagnostics.ProcessStartInfo.UserName%2A>、および<xref:System.Diagnostics.ProcessStartInfo.Password%2A>プロパティで、<xref:System.Diagnostics.ProcessStartInfo>オブジェクトは、ユーザーの資格情報を持つプロセスを開始するための方法を推奨します。</span><span class="sxs-lookup"><span data-stu-id="73d45-234">Setting the <xref:System.Diagnostics.ProcessStartInfo.Domain%2A>, <xref:System.Diagnostics.ProcessStartInfo.UserName%2A>, and the <xref:System.Diagnostics.ProcessStartInfo.Password%2A> properties in a <xref:System.Diagnostics.ProcessStartInfo> object is the recommended practice for starting a process with user credentials.</span></span>  
  
 <span data-ttu-id="73d45-235">A<xref:System.Security.SecureString>オブジェクトと同様、<xref:System.String>オブジェクトのテキスト値があることにします。</span><span class="sxs-lookup"><span data-stu-id="73d45-235">A <xref:System.Security.SecureString> object is like a <xref:System.String> object in that it has a text value.</span></span> <span data-ttu-id="73d45-236">ただしの値、<xref:System.Security.SecureString>オブジェクトが自動的に暗号化されて、アプリケーションで読み取り専用としてマークされ、アプリケーションと .NET Framework のガベージ コレクターのいずれかでコンピューターのメモリから削除することができますされるまで変更できます。</span><span class="sxs-lookup"><span data-stu-id="73d45-236">However, the value of a <xref:System.Security.SecureString> object is automatically encrypted, it can be modified until your application marks it as read-only, and it can be deleted from computer memory by either your application or the .NET Framework garbage collector.</span></span>  
  
 <span data-ttu-id="73d45-237">詳細については、セキュリティで保護された文字列とこのプロパティを設定するためのパスワードを取得する方法の例については、次を参照してください。、<xref:System.Security.SecureString>クラスです。</span><span class="sxs-lookup"><span data-stu-id="73d45-237">For more information about secure strings and an example of how to obtain a password to set this property, see the <xref:System.Security.SecureString> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73d45-238">値を指定する場合、<xref:System.Diagnostics.ProcessStartInfo.Password%2A>プロパティ、<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>プロパティである必要があります`false`、または<xref:System.InvalidOperationException>場合にスローされます、<xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="73d45-238">If you provide a value for the <xref:System.Diagnostics.ProcessStartInfo.Password%2A> property, the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property must be `false`, or an <xref:System.InvalidOperationException> will be thrown when the <xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType> method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordInClearText">
      <MemberSignature Language="C#" Value="public string PasswordInClearText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordInClearText" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.PasswordInClearText" />
      <MemberSignature Language="VB.NET" Value="Public Property PasswordInClearText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PasswordInClearText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordInClearText : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.PasswordInClearText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73d45-239">プロセスの開始時に使用する、クリア テキストのユーザーのパスワードを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-239">Gets or sets the user password in clear text to use when starting the process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73d45-240">クリア テキストのユーザー パスワード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-240">The user password in clear text.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectStandardError">
      <MemberSignature Language="C#" Value="public bool RedirectStandardError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RedirectStandardError" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" />
      <MemberSignature Language="VB.NET" Value="Public Property RedirectStandardError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RedirectStandardError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RedirectStandardError : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.RedirectStandardError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether the process's error output is written to the Process instance's StandardError member.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73d45-241">アプリケーションのエラー出力を <see cref="P:System.Diagnostics.Process.StandardError" /> ストリームに書き込むかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-241">Gets or sets a value that indicates whether the error output of an application is written to the <see cref="P:System.Diagnostics.Process.StandardError" /> stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73d45-242">エラー出力を <see cref="P:System.Diagnostics.Process.StandardError" /> に書き込む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-242">
              <see langword="true" /> if error output should be written to <see cref="P:System.Diagnostics.Process.StandardError" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="73d45-243">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-243">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73d45-244">ときに、<xref:System.Diagnostics.Process>テキストがコンソールに通常表示されることを標準エラー ストリームにテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="73d45-244">When a <xref:System.Diagnostics.Process> writes text to its standard error stream, that text is typically displayed on the console.</span></span> <span data-ttu-id="73d45-245">リダイレクトすることで、<xref:System.Diagnostics.Process.StandardError%2A>ストリームを操作するか、プロセスのエラー出力を抑制します。</span><span class="sxs-lookup"><span data-stu-id="73d45-245">By redirecting the <xref:System.Diagnostics.Process.StandardError%2A> stream, you can manipulate or suppress the error output of a process.</span></span> <span data-ttu-id="73d45-246">たとえば、テキストのフィルター処理、異なる書式を設定して、または、コンソールと、指定したログ ファイルの両方に出力を書き込むできます。</span><span class="sxs-lookup"><span data-stu-id="73d45-246">For example, you can filter the text, format it differently, or write the output to both the console and a designated log file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73d45-247">設定する必要があります<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>に`false`を設定する場合<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A>に`true`です。</span><span class="sxs-lookup"><span data-stu-id="73d45-247">You must set <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> to `false` if you want to set <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> to `true`.</span></span> <span data-ttu-id="73d45-248">それ以外の場合、読み取り、<xref:System.Diagnostics.Process.StandardError%2A>ストリームは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="73d45-248">Otherwise, reading from the <xref:System.Diagnostics.Process.StandardError%2A> stream throws an exception.</span></span>  
  
 <span data-ttu-id="73d45-249">リダイレクトされた<xref:System.Diagnostics.Process.StandardError%2A>同期または非同期でストリームを読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="73d45-249">The redirected <xref:System.Diagnostics.Process.StandardError%2A> stream can be read synchronously or asynchronously.</span></span> <span data-ttu-id="73d45-250">などのメソッド<xref:System.IO.StreamReader.Read%2A>、<xref:System.IO.StreamReader.ReadLine%2A>と<xref:System.IO.StreamReader.ReadToEnd%2A>プロセスのエラー出力ストリームの同期読み取り操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="73d45-250">Methods such as <xref:System.IO.StreamReader.Read%2A>, <xref:System.IO.StreamReader.ReadLine%2A> and <xref:System.IO.StreamReader.ReadToEnd%2A> perform synchronous read operations on the error output stream of the process.</span></span> <span data-ttu-id="73d45-251">これらの同期読み取り操作は、関連するまで完了しません<xref:System.Diagnostics.Process>に書き込み、<xref:System.Diagnostics.Process.StandardError%2A>ストリーム、またはストリームを閉じます。</span><span class="sxs-lookup"><span data-stu-id="73d45-251">These synchronous read operations do not complete until the associated <xref:System.Diagnostics.Process> writes to its <xref:System.Diagnostics.Process.StandardError%2A> stream, or closes the stream.</span></span>  
  
 <span data-ttu-id="73d45-252">これに対し、<xref:System.Diagnostics.Process.BeginErrorReadLine%2A>で読み取り操作を非同期の開始、<xref:System.Diagnostics.Process.StandardError%2A>ストリーム。</span><span class="sxs-lookup"><span data-stu-id="73d45-252">In contrast, <xref:System.Diagnostics.Process.BeginErrorReadLine%2A> starts asynchronous read operations on the <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span> <span data-ttu-id="73d45-253">このメソッドは、指定されたイベントのハンドラーをストリーム出力を有効にし、直ちにストリーム出力は、イベント ハンドラーに送られます中に、その他の作業を実行できますが、呼び出し元に返されます。</span><span class="sxs-lookup"><span data-stu-id="73d45-253">This method enables a designated event handler for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73d45-254">非同期出力を処理するアプリケーションを呼び出す必要があります、<xref:System.Diagnostics.Process.WaitForExit%2A>メソッドを出力バッファーがフラッシュされたことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="73d45-254">The application that is processing the asynchronous output should call the <xref:System.Diagnostics.Process.WaitForExit%2A> method to ensure that the output buffer has been flushed.</span></span>  
  
 <span data-ttu-id="73d45-255">同期読み取り操作は、呼び出し元からの読み取り間の依存関係を導入、<xref:System.Diagnostics.Process.StandardError%2A>ストリームと子要素は、そのストリームへの書き込みを処理します。</span><span class="sxs-lookup"><span data-stu-id="73d45-255">Synchronous read operations introduce a dependency between the caller reading from the <xref:System.Diagnostics.Process.StandardError%2A> stream and the child process writing to that stream.</span></span> <span data-ttu-id="73d45-256">これらの依存関係が原因で、デッドロック状態があります。</span><span class="sxs-lookup"><span data-stu-id="73d45-256">These dependencies can cause deadlock conditions.</span></span> <span data-ttu-id="73d45-257">呼び出し元は、子プロセスのリダイレクトされたストリームから読み取り、ときに、子に依存しています。</span><span class="sxs-lookup"><span data-stu-id="73d45-257">When the caller reads from the redirected stream of a child process, it is dependent on the child.</span></span> <span data-ttu-id="73d45-258">呼び出し元は、子のストリームに書き込みまたはストリームを閉じるまでの読み取り操作が待機します。</span><span class="sxs-lookup"><span data-stu-id="73d45-258">The caller waits for the read operation until the child writes to the stream or closes the stream.</span></span> <span data-ttu-id="73d45-259">子プロセスでは、リダイレクトされたストリームを入力するための十分なデータを書き込む、場合に、親に依存しています。</span><span class="sxs-lookup"><span data-stu-id="73d45-259">When the child process writes enough data to fill its redirected stream, it is dependent on the parent.</span></span> <span data-ttu-id="73d45-260">子プロセスは、親のすべてのストリームから読み取りまたはストリームを閉じるまでに、次の書き込み操作を待機します。</span><span class="sxs-lookup"><span data-stu-id="73d45-260">The child process waits for the next write operation until the parent reads from the full stream or closes the stream.</span></span> <span data-ttu-id="73d45-261">デッドロック状態の結果、呼び出し元と子プロセスが、操作を完了する互いを待つし、どちらも続行できます。</span><span class="sxs-lookup"><span data-stu-id="73d45-261">The deadlock condition results when the caller and child process wait for each other to complete an operation, and neither can continue.</span></span> <span data-ttu-id="73d45-262">呼び出し元と子プロセスの間の依存関係を評価することにより、デッドロックを回避できます。</span><span class="sxs-lookup"><span data-stu-id="73d45-262">You can avoid deadlocks by evaluating dependencies between the caller and child process.</span></span>  
  
 <span data-ttu-id="73d45-263">たとえば、次の c# コードは、リダイレクトされたストリームから読み取るし、子プロセスを終了するまで待機する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="73d45-263">For example, the following C# code shows how to read from a redirected stream and wait for the child process to exit.</span></span>  
  
```csharp  
// Start the child process.  
 Process p = new Process();  
 // Redirect the error stream of the child process.  
 p.StartInfo.UseShellExecute = false;  
 p.StartInfo.RedirectStandardError = true;  
 p.StartInfo.FileName = "Write500Lines.exe";  
 p.Start();  
 // Do not wait for the child process to exit before  
 // reading to the end of its redirected error stream.  
 // p.WaitForExit();  
 // Read the error stream first and then wait.  
 string error = p.StandardError.ReadToEnd();  
 p.WaitForExit();  
```  
  
 <span data-ttu-id="73d45-264">このコード例を呼び出して、デッドロック状態を回避できます`p.StandardError.ReadToEnd`する前に`p.WaitForExit`です。</span><span class="sxs-lookup"><span data-stu-id="73d45-264">The code example avoids a deadlock condition by calling `p.StandardError.ReadToEnd` before `p.WaitForExit`.</span></span> <span data-ttu-id="73d45-265">親の呼び出しを処理する場合、デッドロック状態が発生することができます`p.WaitForExit`する前に`p.StandardError.ReadToEnd`子プロセスがリダイレクトされたストリームを入力するための十分なテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="73d45-265">A deadlock condition can result if the parent process calls `p.WaitForExit` before `p.StandardError.ReadToEnd` and the child process writes enough text to fill the redirected stream.</span></span> <span data-ttu-id="73d45-266">親プロセスは、子プロセスが終了する無期限に待機します。</span><span class="sxs-lookup"><span data-stu-id="73d45-266">The parent process would wait indefinitely for the child process to exit.</span></span> <span data-ttu-id="73d45-267">子プロセスが無期限に待機する、フル アクセスから読み取りに親<xref:System.Diagnostics.Process.StandardError%2A>ストリーム。</span><span class="sxs-lookup"><span data-stu-id="73d45-267">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>  
  
 <span data-ttu-id="73d45-268">同様の問題があるすべてのテキストを標準出力と標準エラー ストリームの両方から読み取るときにします。</span><span class="sxs-lookup"><span data-stu-id="73d45-268">There is a similar issue when you read all text from both the standard output and standard error streams.</span></span> <span data-ttu-id="73d45-269">たとえば、次の c# コードは、両方のストリームで読み取り操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="73d45-269">For example, the following C# code performs a read operation on both streams.</span></span>  
  
```csharp  
// Do not perform a synchronous read to the end of both  
// redirected streams.  
// string output = p.StandardOutput.ReadToEnd();  
// string error = p.StandardError.ReadToEnd();  
// p.WaitForExit();  
// Use asynchronous read operations on at least one of the streams.  
p.BeginOutputReadLine();  
string error = p.StandardError.ReadToEnd();  
p.WaitForExit();  
```  
  
 <span data-ttu-id="73d45-270">コード例は、非同期の読み取り操作を実行してデッドロックの状態を回避できます、<xref:System.Diagnostics.Process.StandardOutput%2A>ストリーム。</span><span class="sxs-lookup"><span data-stu-id="73d45-270">The code example avoids the deadlock condition by performing asynchronous read operations on the <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="73d45-271">親の呼び出しを処理する場合に、デッドロック状態が結果`p.StandardOutput.ReadToEnd`続く`p.StandardError.ReadToEnd`子プロセスが、エラー ストリームを入力するための十分なテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="73d45-271">A deadlock condition results if the parent process calls `p.StandardOutput.ReadToEnd` followed by `p.StandardError.ReadToEnd` and the child process writes enough text to fill its error stream.</span></span> <span data-ttu-id="73d45-272">親プロセスは、子プロセスが終了するを無期限に待機その<xref:System.Diagnostics.Process.StandardOutput%2A>ストリーム。</span><span class="sxs-lookup"><span data-stu-id="73d45-272">The parent process would wait indefinitely for the child process to close its <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="73d45-273">子プロセスが無期限に待機する、フル アクセスから読み取りに親<xref:System.Diagnostics.Process.StandardError%2A>ストリーム。</span><span class="sxs-lookup"><span data-stu-id="73d45-273">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>  
  
 <span data-ttu-id="73d45-274">非同期読み取り操作を使用して、これらの依存関係とデッドロックの可能性を回避することができます。</span><span class="sxs-lookup"><span data-stu-id="73d45-274">You can use asynchronous read operations to avoid these dependencies and their deadlock potential.</span></span> <span data-ttu-id="73d45-275">代わりに、別のスレッドで各ストリームの出力の読み取りを 2 つのスレッドを作成して、デッドロックを回避できます。</span><span class="sxs-lookup"><span data-stu-id="73d45-275">Alternately, you can avoid the deadlock condition by creating two threads and reading the output of each stream on a separate thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73d45-276">次の例では、`net use`コマンドと共に、ネットワーク リソースをマップするには、ユーザーが指定した引数。</span><span class="sxs-lookup"><span data-stu-id="73d45-276">The following example uses the `net use` command together with a user-supplied argument to map a network resource.</span></span> <span data-ttu-id="73d45-277">Net コマンドの標準エラー ストリームを読み取り、コンソールに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="73d45-277">It then reads the standard error stream of the net command and writes it to console.</span></span>  
  
 [!code-cpp[Process_StandardError#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process_StandardError/CPP/source.cpp#1)]
 [!code-csharp[Process_StandardError#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process_StandardError/CS/source.cs#1)]
 [!code-vb[Process_StandardError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process_StandardError/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <altmember cref="P:System.Diagnostics.Process.StandardError" />
      </Docs>
    </Member>
    <Member MemberName="RedirectStandardInput">
      <MemberSignature Language="C#" Value="public bool RedirectStandardInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RedirectStandardInput" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />
      <MemberSignature Language="VB.NET" Value="Public Property RedirectStandardInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RedirectStandardInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RedirectStandardInput : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether the process command input is read from the Process instance's StandardInput member.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73d45-278">アプリケーションの入力を <see cref="P:System.Diagnostics.Process.StandardInput" /> ストリームから読み取るかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-278">Gets or sets a value indicating whether the input for an application is read from the <see cref="P:System.Diagnostics.Process.StandardInput" /> stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73d45-279">
            <see cref="P:System.Diagnostics.Process.StandardInput" /> から入力を読み取る場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-279">
              <see langword="true" /> if input should be read from <see cref="P:System.Diagnostics.Process.StandardInput" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="73d45-280">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-280">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73d45-281">A<xref:System.Diagnostics.Process>標準入力ストリーム、通常は、キーボードから入力テキストを読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="73d45-281">A <xref:System.Diagnostics.Process> can read input text from its standard input stream, typically the keyboard.</span></span> <span data-ttu-id="73d45-282">リダイレクトすることで、<xref:System.Diagnostics.Process.StandardInput%2A>ストリーム、プロセスの入力をプログラムで指定できます。</span><span class="sxs-lookup"><span data-stu-id="73d45-282">By redirecting the <xref:System.Diagnostics.Process.StandardInput%2A> stream, you can programmatically specify the input of a process.</span></span> <span data-ttu-id="73d45-283">たとえば、キーボード入力を使用する代わりに、指定したファイルの内容からテキストまたは別のアプリケーションからの出力を提供できます。</span><span class="sxs-lookup"><span data-stu-id="73d45-283">For example, instead of using keyboard input, you can provide text from the contents of a designated file or output from another application.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73d45-284">設定する必要があります<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>に`false`を設定する場合<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>に`true`です。</span><span class="sxs-lookup"><span data-stu-id="73d45-284">You must set <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> to `false` if you want to set <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A> to `true`.</span></span> <span data-ttu-id="73d45-285">それ以外の場合、書き込み、<xref:System.Diagnostics.Process.StandardInput%2A>ストリームは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="73d45-285">Otherwise, writing to the <xref:System.Diagnostics.Process.StandardInput%2A> stream throws an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73d45-286">次の例は、リダイレクトする方法を示しています、<xref:System.Diagnostics.Process.StandardInput%2A>プロセスのストリーム。</span><span class="sxs-lookup"><span data-stu-id="73d45-286">The following example illustrates how to redirect the <xref:System.Diagnostics.Process.StandardInput%2A> stream of a process.</span></span> <span data-ttu-id="73d45-287">`sort`コマンドは、コンソール アプリケーションを読み取り、テキスト入力を並べ替えています。</span><span class="sxs-lookup"><span data-stu-id="73d45-287">The `sort` command is a console application that reads and sorts text input.</span></span>  
  
 <span data-ttu-id="73d45-288">この例の先頭、`sort`コマンド入力がリダイレクトされたとします。</span><span class="sxs-lookup"><span data-stu-id="73d45-288">The example starts the `sort` command with redirected input.</span></span> <span data-ttu-id="73d45-289">次に、テキストのユーザーに確認をするテキストを渡します、`sort`リダイレクトされたを介してプロセス<xref:System.Diagnostics.Process.StandardInput%2A>ストリーム。</span><span class="sxs-lookup"><span data-stu-id="73d45-289">It then prompts the user for text, and passes the text to the `sort` process through the redirected <xref:System.Diagnostics.Process.StandardInput%2A> stream.</span></span> <span data-ttu-id="73d45-290">`sort`結果は、コンソールのユーザーに表示されます。</span><span class="sxs-lookup"><span data-stu-id="73d45-290">The `sort` results are displayed to the user on the console.</span></span>  
  
 [!code-cpp[Process_StandardInput#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process_StandardInput/CPP/process_standardinput.cpp#1)]
 [!code-csharp[Process_StandardInput#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process_StandardInput/CS/process_standardinput.cs#1)]
 [!code-vb[Process_StandardInput#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process_StandardInput/VB/process_standardinput.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <altmember cref="P:System.Diagnostics.Process.StandardInput" />
      </Docs>
    </Member>
    <Member MemberName="RedirectStandardOutput">
      <MemberSignature Language="C#" Value="public bool RedirectStandardOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RedirectStandardOutput" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property RedirectStandardOutput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RedirectStandardOutput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RedirectStandardOutput : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether the process output is written to the Process instance's StandardOutput member.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73d45-291">アプリケーションのテキスト出力を <see cref="P:System.Diagnostics.Process.StandardOutput" /> ストリームに書き込むかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-291">Gets or sets a value that indicates whether the textual output of an application is written to the <see cref="P:System.Diagnostics.Process.StandardOutput" /> stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73d45-292">出力を <see cref="P:System.Diagnostics.Process.StandardOutput" /> に書き込む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-292">
              <see langword="true" /> if output should be written to <see cref="P:System.Diagnostics.Process.StandardOutput" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="73d45-293">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-293">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73d45-294">ときに、<xref:System.Diagnostics.Process>コンソールにテキストが通常表示されるテキストを標準的なストリームを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="73d45-294">When a <xref:System.Diagnostics.Process> writes text to its standard stream, that text is typically displayed on the console.</span></span> <span data-ttu-id="73d45-295">設定して<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>に`true`をリダイレクトする、<xref:System.Diagnostics.Process.StandardOutput%2A>ストリームを操作するか、プロセスの出力を抑制します。</span><span class="sxs-lookup"><span data-stu-id="73d45-295">By setting <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A> to `true` to redirect the <xref:System.Diagnostics.Process.StandardOutput%2A> stream, you can manipulate or suppress the output of a process.</span></span> <span data-ttu-id="73d45-296">たとえば、テキストのフィルター処理、異なる書式を設定して、または、コンソールと、指定したログ ファイルの両方に出力を書き込むできます。</span><span class="sxs-lookup"><span data-stu-id="73d45-296">For example, you can filter the text, format it differently, or write the output to both the console and a designated log file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73d45-297">設定する必要があります<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>に`false`を設定する場合<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>に`true`です。</span><span class="sxs-lookup"><span data-stu-id="73d45-297">You must set <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> to `false` if you want to set <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A> to `true`.</span></span> <span data-ttu-id="73d45-298">それ以外の場合、読み取り、<xref:System.Diagnostics.Process.StandardOutput%2A>ストリームは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="73d45-298">Otherwise, reading from the <xref:System.Diagnostics.Process.StandardOutput%2A> stream throws an exception.</span></span>  
  
 <span data-ttu-id="73d45-299">リダイレクトされた<xref:System.Diagnostics.Process.StandardOutput%2A>同期または非同期でストリームを読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="73d45-299">The redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream can be read synchronously or asynchronously.</span></span> <span data-ttu-id="73d45-300">などのメソッド<xref:System.IO.StreamReader.Read%2A>、 <xref:System.IO.StreamReader.ReadLine%2A>、および<xref:System.IO.StreamReader.ReadToEnd%2A>プロセスの出力ストリームの同期読み取り操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="73d45-300">Methods such as <xref:System.IO.StreamReader.Read%2A>, <xref:System.IO.StreamReader.ReadLine%2A>, and <xref:System.IO.StreamReader.ReadToEnd%2A> perform synchronous read operations on the output stream of the process.</span></span> <span data-ttu-id="73d45-301">これらの同期読み取り操作は、関連するまで完了しません<xref:System.Diagnostics.Process>に書き込み、<xref:System.Diagnostics.Process.StandardOutput%2A>ストリーム、またはストリームを閉じます。</span><span class="sxs-lookup"><span data-stu-id="73d45-301">These synchronous read operations do not complete until the associated <xref:System.Diagnostics.Process> writes to its <xref:System.Diagnostics.Process.StandardOutput%2A> stream, or closes the stream.</span></span>  
  
 <span data-ttu-id="73d45-302">これに対し、<xref:System.Diagnostics.Process.BeginOutputReadLine%2A>で読み取り操作を非同期の開始、<xref:System.Diagnostics.Process.StandardOutput%2A>ストリーム。</span><span class="sxs-lookup"><span data-stu-id="73d45-302">In contrast, <xref:System.Diagnostics.Process.BeginOutputReadLine%2A> starts asynchronous read operations on the <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="73d45-303">このメソッドにより、指定されたイベント ハンドラー (を参照してください<xref:System.Diagnostics.Process.OutputDataReceived>)、ストリームの出力とすぐに呼び出し元に返しますを実行できるその他の作業中に、ストリーム出力は、イベント ハンドラーに送られます。</span><span class="sxs-lookup"><span data-stu-id="73d45-303">This method enables a designated event handler (see <xref:System.Diagnostics.Process.OutputDataReceived>) for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73d45-304">非同期出力を処理するアプリケーションを呼び出す必要があります、<xref:System.Diagnostics.Process.WaitForExit%2A>メソッドを出力バッファーがフラッシュされたことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="73d45-304">The application that is processing the asynchronous output should call the <xref:System.Diagnostics.Process.WaitForExit%2A> method to ensure that the output buffer has been flushed.</span></span>  
  
 <span data-ttu-id="73d45-305">同期読み取り操作は、呼び出し元からの読み取り間の依存関係を導入、<xref:System.Diagnostics.Process.StandardOutput%2A>ストリームと子要素は、そのストリームへの書き込みを処理します。</span><span class="sxs-lookup"><span data-stu-id="73d45-305">Synchronous read operations introduce a dependency between the caller reading from the <xref:System.Diagnostics.Process.StandardOutput%2A> stream and the child process writing to that stream.</span></span> <span data-ttu-id="73d45-306">これらの依存関係が原因で、デッドロック状態があります。</span><span class="sxs-lookup"><span data-stu-id="73d45-306">These dependencies can cause deadlock conditions.</span></span> <span data-ttu-id="73d45-307">呼び出し元は、子プロセスのリダイレクトされたストリームから読み取り、ときに、子に依存しています。</span><span class="sxs-lookup"><span data-stu-id="73d45-307">When the caller reads from the redirected stream of a child process, it is dependent on the child.</span></span> <span data-ttu-id="73d45-308">呼び出し元は、子のストリームに書き込みまたはストリームを閉じるまでの読み取り操作が待機します。</span><span class="sxs-lookup"><span data-stu-id="73d45-308">The caller waits for the read operation until the child writes to the stream or closes the stream.</span></span> <span data-ttu-id="73d45-309">子プロセスでは、リダイレクトされたストリームを入力するための十分なデータを書き込む、場合に、親に依存しています。</span><span class="sxs-lookup"><span data-stu-id="73d45-309">When the child process writes enough data to fill its redirected stream, it is dependent on the parent.</span></span> <span data-ttu-id="73d45-310">子プロセスは、親のすべてのストリームから読み取りまたはストリームを閉じるまでに、次の書き込み操作を待機します。</span><span class="sxs-lookup"><span data-stu-id="73d45-310">The child process waits for the next write operation until the parent reads from the full stream or closes the stream.</span></span> <span data-ttu-id="73d45-311">デッドロック状態の結果、呼び出し元と子プロセスが、操作を完了する互いを待つし、どちらも続行できます。</span><span class="sxs-lookup"><span data-stu-id="73d45-311">The deadlock condition results when the caller and child process wait for each other to complete an operation, and neither can continue.</span></span> <span data-ttu-id="73d45-312">呼び出し元と子プロセスの間の依存関係を評価することにより、デッドロックを回避できます。</span><span class="sxs-lookup"><span data-stu-id="73d45-312">You can avoid deadlocks by evaluating dependencies between the caller and child process.</span></span>  
  
 <span data-ttu-id="73d45-313">たとえば、次の c# コードは、リダイレクトされたストリームから読み取るし、子プロセスを終了するまで待機する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="73d45-313">For example, the following C# code shows how to read from a redirected stream and wait for the child process to exit.</span></span>  
  
```csharp  
Process p = new Process();  
p.StartInfo.UseShellExecute = false;  
p.StartInfo.RedirectStandardOutput = true;  
p.StartInfo.FileName = "Write500Lines.exe";  
p.Start();  
  
// To avoid deadlocks, always read the output stream first and then wait.  
string output = p.StandardOutput.ReadToEnd();  
p.WaitForExit();  
```  
  
 <span data-ttu-id="73d45-314">このコード例を呼び出して、デッドロック状態を回避できます`p.StandardOutput.ReadToEnd`する前に`p.WaitForExit`です。</span><span class="sxs-lookup"><span data-stu-id="73d45-314">The code example avoids a deadlock condition by calling `p.StandardOutput.ReadToEnd` before `p.WaitForExit`.</span></span> <span data-ttu-id="73d45-315">親の呼び出しを処理する場合、デッドロック状態が発生することができます`p.WaitForExit`する前に`p.StandardOutput.ReadToEnd`子プロセスがリダイレクトされたストリームを入力するための十分なテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="73d45-315">A deadlock condition can result if the parent process calls `p.WaitForExit` before `p.StandardOutput.ReadToEnd` and the child process writes enough text to fill the redirected stream.</span></span> <span data-ttu-id="73d45-316">親プロセスは、子プロセスが終了する無期限に待機します。</span><span class="sxs-lookup"><span data-stu-id="73d45-316">The parent process would wait indefinitely for the child process to exit.</span></span> <span data-ttu-id="73d45-317">子プロセスが無期限に待機する、フル アクセスから読み取りに親<xref:System.Diagnostics.Process.StandardOutput%2A>ストリーム。</span><span class="sxs-lookup"><span data-stu-id="73d45-317">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span>  
  
 <span data-ttu-id="73d45-318">同様の問題があるすべてのテキストを標準出力と標準エラー ストリームの両方から読み取るときにします。</span><span class="sxs-lookup"><span data-stu-id="73d45-318">There is a similar issue when you read all text from both the standard output and standard error streams.</span></span> <span data-ttu-id="73d45-319">たとえば、次の c# コードは、両方のストリームで読み取り操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="73d45-319">For example, the following C# code performs a read operation on both streams.</span></span>  
  
```csharp  
// To avoid deadlocks, use asynchronous read operations on at least one of the streams.  
// Do not perform a synchronous read to the end of both redirected streams.  
p.BeginOutputReadLine();  
string error = p.StandardError.ReadToEnd();  
p.WaitForExit();  
```  
  
 <span data-ttu-id="73d45-320">コード例は、非同期の読み取り操作を実行してデッドロックの状態を回避できます、<xref:System.Diagnostics.Process.StandardOutput%2A>ストリーム。</span><span class="sxs-lookup"><span data-stu-id="73d45-320">The code example avoids the deadlock condition by performing asynchronous read operations on the <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="73d45-321">親の呼び出しを処理する場合に、デッドロック状態が結果`p.StandardOutput.ReadToEnd`続く`p.StandardError.ReadToEnd`子プロセスが、エラー ストリームを入力するための十分なテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="73d45-321">A deadlock condition results if the parent process calls `p.StandardOutput.ReadToEnd` followed by `p.StandardError.ReadToEnd` and the child process writes enough text to fill its error stream.</span></span> <span data-ttu-id="73d45-322">親プロセスは、子プロセスが終了するを無期限に待機その<xref:System.Diagnostics.Process.StandardOutput%2A>ストリーム。</span><span class="sxs-lookup"><span data-stu-id="73d45-322">The parent process would wait indefinitely for the child process to close its <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="73d45-323">子プロセスが無期限に待機する、フル アクセスから読み取りに親<xref:System.Diagnostics.Process.StandardError%2A>ストリーム。</span><span class="sxs-lookup"><span data-stu-id="73d45-323">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>  
  
 <span data-ttu-id="73d45-324">非同期読み取り操作を使用して、これらの依存関係とデッドロックの可能性を回避することができます。</span><span class="sxs-lookup"><span data-stu-id="73d45-324">You can use asynchronous read operations to avoid these dependencies and their deadlock potential.</span></span> <span data-ttu-id="73d45-325">代わりに、別のスレッドで各ストリームの出力の読み取りを 2 つのスレッドを作成して、デッドロックを回避できます。</span><span class="sxs-lookup"><span data-stu-id="73d45-325">Alternately, you can avoid the deadlock condition by creating two threads and reading the output of each stream on a separate thread.</span></span>  
  
   
  
## Examples  
 [!code-cpp[ProcessOneStream#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessOneStream/CPP/stdstr.cpp#1)]
 [!code-csharp[ProcessOneStream#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessOneStream/CS/stdstr.cs#1)]
 [!code-vb[ProcessOneStream#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessOneStream/VB/stdstr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <altmember cref="P:System.Diagnostics.Process.StandardOutput" />
      </Docs>
    </Member>
    <Member MemberName="StandardErrorEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding StandardErrorEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardErrorEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardErrorEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ StandardErrorEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StandardErrorEncoding : System.Text.Encoding with get, set" Usage="System.Diagnostics.ProcessStartInfo.StandardErrorEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73d45-326">エラー出力に最適なエンコーディングを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-326">Gets or sets the preferred encoding for error output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73d45-327">エラー出力に最適なエンコーディングを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-327">An object that represents the preferred encoding for error output.</span>
          </span>
          <span data-ttu-id="73d45-328">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-328">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73d45-329">場合の値、<xref:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding%2A>プロパティは`null`プロセスがエラー出力の既定の標準エラー エンコーディングを使用します。</span><span class="sxs-lookup"><span data-stu-id="73d45-329">If the value of the <xref:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding%2A> property is `null`, the process uses the default standard error encoding for error output.</span></span> <span data-ttu-id="73d45-330"><xref:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding%2A>プロセスを開始する前に、プロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="73d45-330">The <xref:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding%2A> property must be set before the process is started.</span></span> <span data-ttu-id="73d45-331">このプロパティを設定しても、指定されたエンコーディング; がプロセスで使用は保証されませんプロセスでは、サポートしているエンコーディングのみを使用します。</span><span class="sxs-lookup"><span data-stu-id="73d45-331">Setting this property does not guarantee that the process will use the specified encoding; the process will use only those encodings that it supports.</span></span> <span data-ttu-id="73d45-332">アプリケーションをテストして、サポートされているエンコーディングを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="73d45-332">The application should be tested to determine which encodings are supported.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardInputEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding StandardInputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardInputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.StandardInputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardInputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ StandardInputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StandardInputEncoding : System.Text.Encoding with get, set" Usage="System.Diagnostics.ProcessStartInfo.StandardInputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding StandardOutputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardOutputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardOutputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ StandardOutputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StandardOutputEncoding : System.Text.Encoding with get, set" Usage="System.Diagnostics.ProcessStartInfo.StandardOutputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73d45-333">標準出力に最適なエンコーディングを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-333">Gets or sets the preferred encoding for standard output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73d45-334">標準出力に最適なエンコーディングを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-334">An object that represents the preferred encoding for standard output.</span>
          </span>
          <span data-ttu-id="73d45-335">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-335">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73d45-336">場合の値、<xref:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding%2A>プロパティは`null`プロセスは、標準出力に既定の標準出力エンコードを使用します。</span><span class="sxs-lookup"><span data-stu-id="73d45-336">If the value of the <xref:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding%2A> property is `null`, the process uses the default standard output encoding for the standard output.</span></span> <span data-ttu-id="73d45-337"><xref:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding%2A>プロセスを開始する前に、プロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="73d45-337">The <xref:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding%2A> property must be set before the process is started.</span></span> <span data-ttu-id="73d45-338">このプロパティを設定しても、プロセスが、指定されたエンコーディングを使用するは保証されません。</span><span class="sxs-lookup"><span data-stu-id="73d45-338">Setting this property does not guarantee that the process will use the specified encoding.</span></span> <span data-ttu-id="73d45-339">アプリケーションをテストして、プロセスでサポートされるエンコーディングを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="73d45-339">The application should be tested to determine which encodings the process supports.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserName : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73d45-340">プロセスを開始するときに使用するユーザー名を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-340">Gets or sets the user name to use when starting the process.</span>
          </span>
          <span data-ttu-id="73d45-341">UPN 形式 (<paramref name="user" />@<paramref name="DNS_domain_name" />) を使用する場合は、<see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> プロパティを <see langword="null" /> に設定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-341">If you use the UPN format, <paramref name="user" />@<paramref name="DNS_domain_name" />, the <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> property must be <see langword="null" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73d45-342">プロセスを開始するときに使用するユーザー名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-342">The user name to use when starting the process.</span>
          </span>
          <span data-ttu-id="73d45-343">UPN 形式 (<paramref name="user" />@<paramref name="DNS_domain_name" />) を使用する場合は、<see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> プロパティを <see langword="null" /> に設定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-343">If you use the UPN format, <paramref name="user" />@<paramref name="DNS_domain_name" />, the <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> property must be <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="73d45-344"><xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>場合は、プロパティを設定する必要があります<xref:System.Diagnostics.ProcessStartInfo.UserName%2A>と<xref:System.Diagnostics.ProcessStartInfo.Password%2A>提供されます。</span><span class="sxs-lookup"><span data-stu-id="73d45-344">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property must be set if <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A> are provided.</span></span> <span data-ttu-id="73d45-345">プロパティが設定されていない場合、既定の作業ディレクトリは %SYSTEMROOT%\system32 を使用します。</span><span class="sxs-lookup"><span data-stu-id="73d45-345">If the property is not set, the default working directory is %SYSTEMROOT%\system32.</span></span>  
  
 <span data-ttu-id="73d45-346">場合、<xref:System.Diagnostics.ProcessStartInfo.UserName%2A>プロパティは使用されません`null`または空の文字列、<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>プロパティである必要があります`false`、または<xref:System.InvalidOperationException>場合にスローされます、<xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="73d45-346">If the <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> property is not `null` or an empty string, the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property must be `false`, or an <xref:System.InvalidOperationException> will be thrown when the <xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType> method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseShellExecute">
      <MemberSignature Language="C#" Value="public bool UseShellExecute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseShellExecute" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
      <MemberSignature Language="VB.NET" Value="Public Property UseShellExecute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseShellExecute { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseShellExecute : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.UseShellExecute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether to use the operating system shell to start the process.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73d45-347">プロセスの起動にオペレーティング システムのシェルを使用するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-347">Gets or sets a value indicating whether to use the operating system shell to start the process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73d45-348">プロセスを起動するときにシェルを使用する場合は <see langword="true" />、プロセスを実行可能ファイルから直接作成する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-348">
              <see langword="true" /> if the shell should be used when starting the process; <see langword="false" /> if the process should be created directly from the executable file.</span>
          </span>
          <span data-ttu-id="73d45-349">既定値は<see langword="true" />で .NET Framework アプリと<see langword="false" />.NET Core アプリにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-349">The default is <see langword="true" /> on .NET Framework apps and <see langword="false" /> on .NET Core apps.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73d45-350">このプロパティを設定`false`入力、出力、およびエラー ストリームをリダイレクトすることができます。</span><span class="sxs-lookup"><span data-stu-id="73d45-350">Setting this property to `false` enables you to redirect input, output, and error streams.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73d45-351"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 必要があります`false`場合、<xref:System.Diagnostics.ProcessStartInfo.UserName%2A>プロパティは使用されません`null`または空の文字列、または<xref:System.InvalidOperationException>場合にスローされます、<xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="73d45-351"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> must be `false` if the <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> property is not `null` or an empty string, or an <xref:System.InvalidOperationException> will be thrown when the <xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType> method is called.</span></span>  
  
 <span data-ttu-id="73d45-352">プロセスを開始するオペレーティング システムのシェルを使用する場合は、(既定のオープン操作が実行可能ファイルに関連付けられている登録されているファイル型である) を任意のドキュメントを起動し、使用して、印刷など、ファイルに対する操作を実行、、 <xref:System.Diagnostics.Process>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="73d45-352">When you use the operating system shell to start processes, you can start any document (which is any registered file type associated with an executable that has a default open action) and perform operations on the file, such as printing, by using the <xref:System.Diagnostics.Process> object.</span></span> <span data-ttu-id="73d45-353">ときに<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>は`false`、実行可能ファイルだけを使用して起動することができます、<xref:System.Diagnostics.Process>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="73d45-353">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`, you can start only executables by using the <xref:System.Diagnostics.Process> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73d45-354"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 必要があります`true`設定した場合、<xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A>プロパティを`true`です。</span><span class="sxs-lookup"><span data-stu-id="73d45-354"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> must be `true` if you set the <xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="73d45-355"><xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>プロパティの動作の値に応じて異なる方法で、<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="73d45-355">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property behaves differently depending on the value of the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property.</span></span> <span data-ttu-id="73d45-356">ときに<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>は`true`、<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>プロパティは、実行可能ファイルの場所を指定します。</span><span class="sxs-lookup"><span data-stu-id="73d45-356">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, the <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property specifies the location of the executable.</span></span> <span data-ttu-id="73d45-357">場合<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>空の文字列は、現在のディレクトリに、実行可能ファイルが含まれていると見なされます。</span><span class="sxs-lookup"><span data-stu-id="73d45-357">If <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> is an empty string, it is assumed that the current directory contains the executable.</span></span>  
  
 <span data-ttu-id="73d45-358">ときに<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>は`false`、<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>実行可能ファイルを検索するプロパティは使用されません。</span><span class="sxs-lookup"><span data-stu-id="73d45-358">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`, the <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property is not used to find the executable.</span></span> <span data-ttu-id="73d45-359">代わりに、プロセスが開始され、新しいプロセスのコンテキスト内でのみ意味を持つことによってのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="73d45-359">Instead, it is used only by the process that is started and has meaning only within the context of the new process.</span></span> <span data-ttu-id="73d45-360">ときに<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>は`false`、<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>プロパティは、実行可能ファイルへの完全修飾パスか、システムは、PATH 環境変数で指定されたフォルダー内で検索しようとする単純な実行可能ファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="73d45-360">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`, the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property can be either a fully qualified path to the executable, or a simple executable name that the system will attempt to find within folders specified by the PATH environment variable.</span></span>  
  
   
  
## Examples  
 [!code-cpp[ProcessOneStream#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessOneStream/CPP/stdstr.cpp#1)]
 [!code-csharp[ProcessOneStream#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessOneStream/CS/stdstr.cs#1)]
 [!code-vb[ProcessOneStream#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessOneStream/VB/stdstr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="73d45-361">ユニバーサル Windows プラットフォーム (UWP) アプリで値を <see langword="true" /> に設定することが試みられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-361">An attempt to set the value to <see langword="true" /> on Universal Windows Platform (UWP) apps occurs.</span>
          </span>
        </exception>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" />
      </Docs>
    </Member>
    <Member MemberName="Verb">
      <MemberSignature Language="C#" Value="public string Verb { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Verb" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Verb" />
      <MemberSignature Language="VB.NET" Value="Public Property Verb As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Verb { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Verb : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.Verb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.VerbConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The verb to apply to the document specified by the FileName property.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73d45-362">
            <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> プロパティで指定したアプリケーションまたはドキュメントを開くときに使用する動詞を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-362">Gets or sets the verb to use when opening the application or document specified by the <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73d45-363">プロセスが開くファイルを使用して実行するアクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-363">The action to take with the file that the process opens.</span>
          </span>
          <span data-ttu-id="73d45-364">既定では、処理が行われないことを示す、空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-364">The default is an empty string (""), which signifies no action.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73d45-365">各ファイル名拡張子がそれ自体、動詞のセットを使用して取得できる<xref:System.Diagnostics.ProcessStartInfo.Verbs%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="73d45-365">Each file name extension has its own set of verbs, which can be obtained by using the <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property.</span></span> <span data-ttu-id="73d45-366">たとえば、"`print`"を使用して指定されたドキュメントを印刷する動詞<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>です。</span><span class="sxs-lookup"><span data-stu-id="73d45-366">For example, the "`print`" verb will print a document specified by using <xref:System.Diagnostics.ProcessStartInfo.FileName%2A>.</span></span> <span data-ttu-id="73d45-367">空の文字列を使用して、既定の動詞を指定することができます ("") です。</span><span class="sxs-lookup"><span data-stu-id="73d45-367">The default verb can be specified by using an empty string ("").</span></span> <span data-ttu-id="73d45-368">動詞には、"Edit"、「開く」、"OpenAsReadOnly"、"Print"および"Printto"があります。</span><span class="sxs-lookup"><span data-stu-id="73d45-368">Examples of verbs are "Edit", "Open", "OpenAsReadOnly", "Print", and "Printto".</span></span> <span data-ttu-id="73d45-369">によって返される動詞のセットに表示される動詞のみを使用する必要があります、<xref:System.Diagnostics.ProcessStartInfo.Verbs%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="73d45-369">You should use only verbs that appear in the set of verbs returned by the <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property.</span></span>  
  
 <span data-ttu-id="73d45-370">使用すると、<xref:System.Diagnostics.ProcessStartInfo.Verb%2A>プロパティの値を設定すると、ファイル名拡張子を含める必要があります、<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="73d45-370">When you use the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property, you must include the file name extension when you set the value of the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="73d45-371">ファイル名は、拡張子が付いている場合の値を手動で入力する必要はありません、<xref:System.Diagnostics.ProcessStartInfo.Verb%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="73d45-371">The file name does not need to have an extension if you manually enter a value for the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73d45-372">次のコード例では、指定された動詞とファイル名を使用して、新しいプロセスを開始します。</span><span class="sxs-lookup"><span data-stu-id="73d45-372">The following code example starts a new process by using the specified verb and file name.</span></span> <span data-ttu-id="73d45-373">このコード例に示されている例の一部である、<xref:System.Diagnostics.ProcessStartInfo.Verbs%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="73d45-373">This code example is part of a larger example provided for the <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property.</span></span>  
  
 [!code-csharp[ProcessVerbs_Diagnostics#4](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessVerbs_Diagnostics/CS/source.cs#4)]
 [!code-vb[ProcessVerbs_Diagnostics#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessVerbs_Diagnostics/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.Verbs" />
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public string[] Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Verbs" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Verbs As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Verbs { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Verbs : string[]" Usage="System.Diagnostics.ProcessStartInfo.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73d45-374">
            <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> プロパティで指定したファイルの種類に関連付けられている動詞のセットを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-374">Gets the set of verbs associated with the type of file specified by the <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73d45-375">
            <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> プロパティで示されたファイルにシステムが適用できるアクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-375">The actions that the system can apply to the file indicated by the <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73d45-376"><xref:System.Diagnostics.ProcessStartInfo.Verbs%2A>プロパティでは、によって指定されたファイルで使用できる動詞を確認することができます、<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="73d45-376">The <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property enables you to determine the verbs that can be used with the file specified by the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="73d45-377">設定することができます、<xref:System.Diagnostics.ProcessStartInfo.Verb%2A>プロパティをセット内のすべての動詞の値にします。</span><span class="sxs-lookup"><span data-stu-id="73d45-377">You can set the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property to the value of any verb in the set.</span></span> <span data-ttu-id="73d45-378">動詞には、"Edit"、「開く」、"OpenAsReadOnly"、"Print"および"Printto"があります。</span><span class="sxs-lookup"><span data-stu-id="73d45-378">Examples of verbs are "Edit", "Open", "OpenAsReadOnly", "Print", and "Printto".</span></span>  
  
 <span data-ttu-id="73d45-379">使用すると、<xref:System.Diagnostics.ProcessStartInfo.Verbs%2A>プロパティの値を設定すると、ファイル名拡張子を含める必要があります、<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="73d45-379">When you use the <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property, you must include the file name extension when you set the value of the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="73d45-380">ファイル名拡張子では、考えられる動詞のセットを決定します。</span><span class="sxs-lookup"><span data-stu-id="73d45-380">The file name extension determines the set of possible verbs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73d45-381">次のコード例では、選択したファイル名に定義されている動詞を表示します。</span><span class="sxs-lookup"><span data-stu-id="73d45-381">The following code example displays the defined verbs for the chosen file name.</span></span> <span data-ttu-id="73d45-382">ユーザーは、定義されている動詞のいずれかを選択する場合、例は、選択した動詞および入力ファイルの名前を使用して、新しいプロセスを開始します。</span><span class="sxs-lookup"><span data-stu-id="73d45-382">If the user selects one of the defined verbs, the example starts a new process using the selected verb and the input file name.</span></span>  
  
 [!code-csharp[ProcessVerbs_Diagnostics#3](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessVerbs_Diagnostics/CS/source.cs#3)]
 [!code-vb[ProcessVerbs_Diagnostics#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessVerbs_Diagnostics/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.Verb" />
      </Docs>
    </Member>
    <Member MemberName="WindowStyle">
      <MemberSignature Language="C#" Value="public System.Diagnostics.ProcessWindowStyle WindowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.ProcessWindowStyle WindowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.WindowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowStyle As ProcessWindowStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::ProcessWindowStyle WindowStyle { System::Diagnostics::ProcessWindowStyle get(); void set(System::Diagnostics::ProcessWindowStyle value); };" />
      <MemberSignature Language="F#" Value="member this.WindowStyle : System.Diagnostics.ProcessWindowStyle with get, set" Usage="System.Diagnostics.ProcessStartInfo.WindowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("How the main window should be created when the process starts.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ProcessWindowStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73d45-383">プロセスを起動するときに使用するウィンドウの状態を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-383">Gets or sets the window state to use when the process is started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73d45-384">プロセスの起動時のウィンドウを、最大化、最小化、通常 (最大化も最小化もしていない状態)、または非表示のどの状態にするかを示す列挙値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-384">One of the enumeration values that indicates whether the process is started in a window that is maximized, minimized, normal (neither maximized nor minimized), or not visible.</span>
          </span>
          <span data-ttu-id="73d45-385">既定値は、<see langword="Normal" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-385">The default is <see langword="Normal" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[Process.Start_static#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp#1)]
 [!code-csharp[Process.Start_static#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs#1)]
 [!code-vb[Process.Start_static#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="73d45-386">ウィンドウ スタイルが、<see cref="T:System.Diagnostics.ProcessWindowStyle" /> 列挙体のメンバーではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-386">The window style is not one of the <see cref="T:System.Diagnostics.ProcessWindowStyle" /> enumeration members.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WorkingDirectory">
      <MemberSignature Language="C#" Value="public string WorkingDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WorkingDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.WorkingDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkingDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WorkingDirectory { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WorkingDirectory : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.WorkingDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.WorkingDirectoryEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The initial working directory for the process.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73d45-387">
            <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> プロパティが <see langword="false" /> の場合に、開始するプロセスの作業ディレクトリを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-387">When the <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> property is <see langword="false" />, gets or sets the working directory for the process to be started.</span>
          </span>
          <span data-ttu-id="73d45-388">
            <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> が <see langword="true" /> の場合に、開始するプロセスを含むディレクトリを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-388">When <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> is <see langword="true" />, gets or sets the directory that contains the process to be started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73d45-389">
            <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> が <see langword="true" /> の場合、起動するプロセスがあるディレクトリの完全修飾名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-389">When <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> is <see langword="true" />, the fully qualified name of the directory that contains the process to be started.</span>
          </span>
          <span data-ttu-id="73d45-390">
            <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> プロパティが <see langword="false" /> の場合、開始するプロセスの作業ディレクトリ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-390">When the <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> property is <see langword="false" />, the working directory for the process to be started.</span>
          </span>
          <span data-ttu-id="73d45-391">既定値は、空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73d45-391">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="73d45-392"><xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>場合は、プロパティを設定する必要があります<xref:System.Diagnostics.ProcessStartInfo.UserName%2A>と<xref:System.Diagnostics.ProcessStartInfo.Password%2A>提供されます。</span><span class="sxs-lookup"><span data-stu-id="73d45-392">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property must be set if <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A> are provided.</span></span> <span data-ttu-id="73d45-393">プロパティが設定されていない場合、既定の作業ディレクトリは %SYSTEMROOT%\system32 を使用します。</span><span class="sxs-lookup"><span data-stu-id="73d45-393">If the property is not set, the default working directory is %SYSTEMROOT%\system32.</span></span>  
  
 <span data-ttu-id="73d45-394">ディレクトリが既にシステム パス変数の一部である場合、このプロパティで、ディレクトリの場所を繰り返すはありません。</span><span class="sxs-lookup"><span data-stu-id="73d45-394">If the directory is already part of the system path variable, you do not have to repeat the directory's location in this property.</span></span>  
  
 <span data-ttu-id="73d45-395"><xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>プロパティの動作が異なるときに<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>は`true`場合より<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>は`false`します。</span><span class="sxs-lookup"><span data-stu-id="73d45-395">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property behaves differently when <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true` than when <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`.</span></span> <span data-ttu-id="73d45-396">ときに<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>は`true`、<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>プロパティは、実行可能ファイルの場所を指定します。</span><span class="sxs-lookup"><span data-stu-id="73d45-396">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, the <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property specifies the location of the executable.</span></span> <span data-ttu-id="73d45-397">場合<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>空の文字列は、実行可能ファイルを格納する、現在のディレクトリを認識します。</span><span class="sxs-lookup"><span data-stu-id="73d45-397">If <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> is an empty string, the current directory is understood to contain the executable.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73d45-398">ときに<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>は`true`を実行可能ファイルを起動するアプリケーションの作業ディレクトリは、実行可能ファイルの作業ディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="73d45-398">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, the working directory of the application that starts the executable is also the working directory of the executable.</span></span>  
  
 <span data-ttu-id="73d45-399">ときに<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>は`false`、<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>実行可能ファイルを検索するプロパティは使用されません。</span><span class="sxs-lookup"><span data-stu-id="73d45-399">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`, the <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property is not used to find the executable.</span></span> <span data-ttu-id="73d45-400">代わりに、その値は、開始のみ意味を持ちますが、新しいプロセスのコンテキスト内でのプロセスに適用されます。</span><span class="sxs-lookup"><span data-stu-id="73d45-400">Instead, its value applies to the process that is started and only has meaning within the context of the new process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>