<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TextWriterTraceListener.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b857fe3" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2eccf4de-4b1c-4706-8cb3-f46682ccfb72d95acec01c061dc9a581ef63651072539c24df28.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d95acec01c061dc9a581ef63651072539c24df28</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b15b8cf0f6dbc1504057c88969d9ef4b790891fe</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/11/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>Directs tracing or debugging output to a <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> or to a <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, such as <ph id="ph3">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>.</source>
          <target state="translated">トレース出力またはデバッグ出力を <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> (<ph id="ph3">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> など) に転送します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> class provides the <ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt;</ph> property to get or set the text writer that receives the tracing or debugging output.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>クラスを提供、<ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt;</ph>を取得またはテキスト ライターの設定のプロパティは、トレース出力またはデバッグ出力を受け取ります。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">この型は、<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">型を使用してが完了したらを直接的または間接的にその破棄する必要があります。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">型の直接 dispose を呼び出す、<ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph>メソッドで、 <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph>ブロックします。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">直接ことのない破棄する場合など、言語コンストラクトを使用して<ph id="ph1">`using`</ph>(C# の場合) または<ph id="ph2">`Using`</ph>(Visual Basic で)。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">詳細についてを参照してください"を使用して、オブジェクトを実装する IDisposable"、<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>インターフェイスに関するトピック。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>This class also provides methods to <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener.Close%2A&gt;</ph> the <ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt;</ph> so that it no longer receives tracing or debugging output, to <ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener.Flush%2A&gt;</ph> the output buffer for the <ph id="ph4">&lt;xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt;</ph>, and to <ph id="ph5">&lt;xref:System.Diagnostics.TextWriterTraceListener.Write%2A&gt;</ph> a message to the <ph id="ph6">&lt;xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt;</ph>.</source>
          <target state="translated">このクラスは、メソッドも用意されています。 <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener.Close%2A&gt;</ph> 、<ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt;</ph>トレース出力またはデバッグ出力、がを受信しないように<ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener.Flush%2A&gt;</ph>の出力バッファーに、 <ph id="ph4">&lt;xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt;</ph>、および<ph id="ph5">&lt;xref:System.Diagnostics.TextWriterTraceListener.Write%2A&gt;</ph>にメッセージを、<ph id="ph6">&lt;xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>You must enable tracing or debugging to use a trace listener.</source>
          <target state="translated">トレースまたはトレース リスナーを使用してデバッグを有効にする必要があります。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>The following syntax is compiler specific.</source>
          <target state="translated">次の構文は、コンパイラに固有です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</source>
          <target state="translated">以外は、c# または Visual Basic コンパイラを使用する場合は、コンパイラのドキュメントを参照してください。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>To enable debugging in C#, add the <ph id="ph1">`/d:DEBUG`</ph> flag to the compiler command line when you compile your code, or you can add <ph id="ph2">`#define DEBUG`</ph> to the top of your file.</source>
          <target state="translated">C# でのデバッグを有効にするには追加、<ph id="ph1">`/d:DEBUG`</ph>するを追加したり、コードをコンパイルするときに、コンパイラのコマンドラインにフラグ<ph id="ph2">`#define DEBUG`</ph>ファイルの先頭にします。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>In Visual Basic, add the <ph id="ph1">`/d:DEBUG=True`</ph> flag to the compiler command line.</source>
          <target state="translated">Visual basic では、追加、<ph id="ph1">`/d:DEBUG=True`</ph>フラグをコンパイラ コマンドライン。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>To enable tracing in C#, add the <ph id="ph1">`/d:TRACE`</ph> flag to the compiler command line when you compile your code, or add <ph id="ph2">`#define TRACE`</ph> to the top of your file.</source>
          <target state="translated">C# でのトレースを有効にするには追加、<ph id="ph1">`/d:TRACE`</ph>フラグを追加したり、コードをコンパイルすると、コンパイラのコマンドライン<ph id="ph2">`#define TRACE`</ph>ファイルの先頭にします。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>In Visual Basic, add the <ph id="ph1">`/d:TRACE=True`</ph> flag to the compiler command line.</source>
          <target state="translated">Visual basic では、追加、<ph id="ph1">`/d:TRACE=True`</ph>フラグをコンパイラ コマンドライン。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>To add a trace listener, edit the configuration file that corresponds to the name of your application.</source>
          <target state="translated">トレース リスナーを追加するには、アプリケーションの名前に対応する構成ファイルを編集します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>Within this file, you can add a listener, set its type and set its parameter, remove a listener, or clear all the listeners previously set by the application.</source>
          <target state="translated">このファイル内でことができます、リスナーを追加、その型およびパラメーターの設定、リスナーの削除またはオフにするアプリケーションで設定したすべてのリスナーです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>The configuration file should be formatted like the following example.</source>
          <target state="translated">構成ファイルは、次の例のようにフォーマットされている必要があります。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.</source>
          <target state="translated">使用されているファイルへの書き込みを試行または使用できない、ファイル名を自動的に付けた GUID。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>The following example implements an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> class that uses a <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> called <ph id="ph3">`myOutputWriter`</ph> to write to a file named <ph id="ph4">`TestFile.txt`</ph>.</source>
          <target state="translated">次の例のインスタンスを実装する、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>を使用してクラス、<ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph>と呼ばれる<ph id="ph3">`myOutputWriter`</ph>という名前のファイルに書き込む<ph id="ph4">`TestFile.txt`</ph>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>First the example creates a file for output.</source>
          <target state="translated">最初の例では、出力用のファイルを作成します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>Then it creates the <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> for the first text writer, assigns it the output file, and adds it to the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>.</source>
          <target state="translated">これを作成し、<ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph>の最初のテキスト ライターの割り当て、出力ファイルとそれを追加、<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>Then, the code outputs one line of text to the file.</source>
          <target state="translated">次に、コードは、1 行のファイルにテキストを出力します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>Finally, the example flushes the output buffer.</source>
          <target state="translated">最後に、例では、出力バッファーをフラッシュします。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>After running this sample, you can open the <ph id="ph1">`TestFile.txt`</ph> file to see the output.</source>
          <target state="translated">このサンプルを実行すると、開くことができます、<ph id="ph1">`TestFile.txt`</ph>ファイル出力を確認します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TextWriterTraceListener">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph> class with <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> as the output recipient.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> を出力宛先として <ph id="ph1">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor">
          <source>This constructor uses the <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> stream as the recipient of the tracing or debugging output.</source>
          <target state="translated">このコンス トラクターを使用して、<ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph>トレース出力またはデバッグ出力の受信者としてのストリーム。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor">
          <source>Its <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property is initialized to an empty string ("", or <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated">その<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph>プロパティは、空の文字列に初期化 (""、または<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> using the <ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener.%23ctor&gt;</ph> constructor.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>を使用して、<ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener.%23ctor&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor">
          <source>It sets the <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt;</ph> property to console output, and then adds the <ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> to the <ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>.</source>
          <target state="translated">設定、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt;</ph>プロパティをコンソールに出力し、追加、<ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>を<ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor">
          <source>It writes a message in two segments, and then closes the <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.</source>
          <target state="translated">2 つのセグメントにメッセージを書き込み、閉じます、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> that represents the stream the <ph id="ph2">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph> writes to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> が書き込むストリームを表す <ph id="ph2">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph> class, using the stream as the recipient of the debugging and tracing output.</source>
          <target state="translated">ストリームをデバッグ出力およびトレース出力の受信者として使用して、<ph id="ph1">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property to an empty string ("").</source>
          <target state="translated">このコンス トラクター、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph>プロパティを空の文字列 ("") です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> using the <ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%29&gt;</ph> constructor and adds it to the <ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>.</source>
          <target state="translated">次のコード例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>を使用して、<ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%29&gt;</ph>コンス トラクターに追加し、<ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)">
          <source>The example then writes two messages to this <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>, and writes a message to all <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> objects in the <ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>.</source>
          <target state="translated">例は、この 2 つのメッセージを書き込みます<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>、メッセージをすべてと<ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>内のオブジェクト、<ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)">
          <source>Finally, it flushes and closes the <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.</source>
          <target state="translated">最後に、フラッシュし、閉じます、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)">
          <source>The stream is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">ストリームが <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that receives the output from the <ph id="ph2">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> からの出力を受信する <ph id="ph2">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph> class using the specified writer as recipient of the tracing or debugging output.</source>
          <target state="translated">指定したライターをトレース出力またはデバッグ出力の受信者として使用して、<ph id="ph1">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property to an empty string ("").</source>
          <target state="translated">このコンス トラクター、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph>プロパティを空の文字列 ("") です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> using the <ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%29&gt;</ph> constructor.</source>
          <target state="translated">次のコード例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>を使用して、<ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%29&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph>, then references the <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> when it creates the <ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>, which it then adds to the <ph id="ph4">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>.</source>
          <target state="translated">例は、作成、<ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph>を参照し、<ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph>を作成すると、 <ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>、次に、追加する、<ph id="ph4">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)">
          <source>The example writes a message to all <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>, then closes this <ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.</source>
          <target state="translated">例では、メッセージをすべて<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>内のオブジェクト、 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>、これを閉じます<ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)">
          <source>The writer is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">ライターが <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String)">
          <source>The name of the file the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph> writes to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph> が出力を書き込むファイルの名前。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph> class, using the file as the recipient of the debugging and tracing output.</source>
          <target state="translated">ファイルをデバッグ出力およびトレース出力の受信者として使用して、<ph id="ph1">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property to an empty string ("").</source>
          <target state="translated">このコンス トラクター、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph>プロパティを空の文字列 ("") です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> using the <ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%29&gt;</ph> constructor, then adds it to the <ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>.</source>
          <target state="translated">次のコード例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>を使用して、<ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%29&gt;</ph>コンス トラクターを追加する、<ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String)">
          <source>The example writes two messages to this <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>, then writes a message to all <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> objects in the <ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>.</source>
          <target state="translated">例では、この 2 つのメッセージを書き込みます<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>、すべてにメッセージを書き込みます<ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>内のオブジェクト、<ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String)">
          <source>Finally, it flushes and closes the <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.</source>
          <target state="translated">最後に、フラッシュし、閉じます、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String)">
          <source>The file is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">ファイルが <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> that represents the stream the <ph id="ph2">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph> writes to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> が書き込むストリームを表す <ph id="ph2">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)">
          <source>The name of the new instance.</source>
          <target state="translated">新規インスタンスの名前。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph> class with the specified name, using the stream as the recipient of the debugging and tracing output.</source>
          <target state="translated">ストリームをデバッグ出力およびトレース出力の受信者として使用して、<ph id="ph1">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property to the <ph id="ph2">`name`</ph> parameter or to an empty string (""), if the <ph id="ph3">`name`</ph> parameter is <ph id="ph4">`null`</ph>.</source>
          <target state="translated">このコンス トラクター、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph>プロパティを<ph id="ph2">`name`</ph>パラメーターまたは空の文字列 ("") 場合は、<ph id="ph3">`name`</ph>パラメーターは<ph id="ph4">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> using the <ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%2CSystem.String%29&gt;</ph> constructor and adds it to the <ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>.</source>
          <target state="translated">次のコード例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>を使用して、<ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%2CSystem.String%29&gt;</ph>コンス トラクターに追加し、<ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)">
          <source>The example then writes two messages to this <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> and writes a message to all <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> objects in the <ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>.</source>
          <target state="translated">例は、この 2 つのメッセージを書き込みます<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>すべてにメッセージを書き込むと<ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>内のオブジェクト、<ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)">
          <source>Finally, it flushes and closes the <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.</source>
          <target state="translated">最後に、フラッシュし、閉じます、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)">
          <source>The stream is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">ストリームが <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that receives the output from the <ph id="ph2">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> からの出力を受信する <ph id="ph2">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)">
          <source>The name of the new instance.</source>
          <target state="translated">新規インスタンスの名前。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph> class with the specified name, using the specified writer as recipient of the tracing or debugging output.</source>
          <target state="translated">指定したライターをトレース出力またはデバッグ出力の受信者として使用して、指定した名前で <ph id="ph1">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> using the <ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> constructor.</source>
          <target state="translated">次のコード例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>を使用して、<ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph>, then references the <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> when it creates the <ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>, which it then adds to the <ph id="ph4">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>.</source>
          <target state="translated">例は、作成、<ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph>を参照し、<ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph>を作成すると、 <ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>、次に、追加する、<ph id="ph4">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)">
          <source>The example writes two messages to this <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>, then writes a message to all <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> objects in the <ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>.</source>
          <target state="translated">例では、この 2 つのメッセージを書き込みます<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>、すべてにメッセージを書き込みます<ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>内のオブジェクト、<ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)">
          <source>Finally, it flushes and closes the <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.</source>
          <target state="translated">最後に、フラッシュし、閉じます、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)">
          <source>The writer is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">ライターが <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)">
          <source>The name of the file the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph> writes to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph> が出力を書き込むファイルの名前。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)">
          <source>The name of the new instance.</source>
          <target state="translated">新規インスタンスの名前。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph> class with the specified name, using the file as the recipient of the debugging and tracing output.</source>
          <target state="translated">ファイルをデバッグ出力およびトレース出力の受信者として使用して、指定した名前で <ph id="ph1">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property to the <ph id="ph2">`name`</ph> parameter or to an empty string (""), if the <ph id="ph3">`name`</ph> parameter is <ph id="ph4">`null`</ph>.</source>
          <target state="translated">このコンス トラクター、<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph>プロパティを<ph id="ph2">`name`</ph>パラメーターまたは空の文字列 ("") 場合は、<ph id="ph3">`name`</ph>パラメーターは<ph id="ph4">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> using the <ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%2CSystem.String%29&gt;</ph> constructor, then adds it to the <ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>.</source>
          <target state="translated">次のコード例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>を使用して、<ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%2CSystem.String%29&gt;</ph>コンス トラクターを追加する、<ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)">
          <source>The example writes two messages to this <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>, then writes a message to all <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> objects in the <ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>.</source>
          <target state="translated">例では、この 2 つのメッセージを書き込みます<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>、すべてにメッセージを書き込みます<ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>内のオブジェクト、<ph id="ph3">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)">
          <source>Finally, it flushes and closes the <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.</source>
          <target state="translated">最後に、フラッシュし、閉じます、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)">
          <source>The stream is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">ストリームが <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.Close">
          <source>Closes the <ph id="ph1">&lt;see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /&gt;</ph> so that it no longer receives tracing or debugging output.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /&gt;</ph> を終了して、トレース出力またはデバッグ出力を受信しないようにします。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.Close">
          <source>Calling a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener.Write%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A&gt;</ph> method after calling <ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener.Close%2A&gt;</ph> automatically reopens the stream.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener.Write%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A&gt;</ph>メソッドを呼び出した後<ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener.Close%2A&gt;</ph>ストリームを自動的に再度開きます。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.Close">
          <source>The following example implements a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> named <ph id="ph2">`myTextListener`</ph>, which uses a <ph id="ph3">&lt;xref:System.IO.StreamWriter&gt;</ph> called <ph id="ph4">`myOutputWriter`</ph> to write to a file named <ph id="ph5">`TestFile.txt`</ph>.</source>
          <target state="translated">次の例では、実装、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>という名前<ph id="ph2">`myTextListener`</ph>が使用される、<ph id="ph3">&lt;xref:System.IO.StreamWriter&gt;</ph>と呼ばれる<ph id="ph4">`myOutputWriter`</ph>という名前のファイルに書き込む<ph id="ph5">`TestFile.txt`</ph>です。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.Close">
          <source>The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the stream.</source>
          <target state="translated">例では、ファイル、ストリーム、およびテキスト ライターを作成、ファイルに 1 行のテキストを書き込みますをフラッシュし、ストリームを閉じます。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release managed resources; if <ph id="ph2">&lt;see langword="false" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" /&gt;</ph> has no effect.</source>
          <target state="translated">マネージ リソースを解放する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。<ph id="ph3">&lt;see cref="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" /&gt;</ph> が影響をもたらさない場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)">
          <source>Disposes this <ph id="ph1">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Diagnostics.TextWriterTraceListener" /&gt;</ph> オブジェクトを破棄します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener.Close%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> class to release the managed resources of a <ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> object.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener.Close%2A&gt;</ph>のメソッド、<ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>のマネージ リソースを解放するクラス、<ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.Flush">
          <source>Flushes the output buffer for the <ph id="ph1">&lt;see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /&gt;</ph> 用の出力バッファーをフラッシュします。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.Flush">
          <source>The following example implements a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> named <ph id="ph2">`myTextListener`</ph>, which uses a <ph id="ph3">&lt;xref:System.IO.StreamWriter&gt;</ph> called <ph id="ph4">`myOutputWriter`</ph> to write to a file named <ph id="ph5">`TestFile.txt`</ph>.</source>
          <target state="translated">次の例では、実装、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>という名前<ph id="ph2">`myTextListener`</ph>が使用される、<ph id="ph3">&lt;xref:System.IO.StreamWriter&gt;</ph>と呼ばれる<ph id="ph4">`myOutputWriter`</ph>という名前のファイルに書き込む<ph id="ph5">`TestFile.txt`</ph>です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.Flush">
          <source>The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the stream.</source>
          <target state="translated">例では、ファイル、ストリーム、およびテキスト ライターを作成、ファイルに 1 行のテキストを書き込みますをフラッシュし、ストリームを閉じます。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.Write(System.String)">
          <source>A message to write.</source>
          <target state="translated">書き込むメッセージ。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.Write(System.String)">
          <source>Writes a message to this instance's <ph id="ph1">&lt;see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの <ph id="ph1">&lt;see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /&gt;</ph> にメッセージを書き込みます。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.Write(System.String)">
          <source>The following example implements a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> named <ph id="ph2">`myWriter`</ph> to write to the console screen.</source>
          <target state="translated">次の例では、実装、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>という名前<ph id="ph2">`myWriter`</ph>コンソール画面に書き込めません。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.Write(System.String)">
          <source>The example writes two lines to the console screen.</source>
          <target state="translated">例では、コンソール画面に 2 つの行を書き込みます。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.Write(System.String)">
          <source>Note the second write appears on the same line as the first write.</source>
          <target state="translated">注 2 番目の出力は、最初の書き込みと同じ行に表示されます。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.Write(System.String)">
          <source>The example then flushes and closes the stream.</source>
          <target state="translated">例では、フラッシュし、ストリームを閉じます。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)">
          <source>A message to write.</source>
          <target state="translated">書き込むメッセージ。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)">
          <source>Writes a message to this instance's <ph id="ph1">&lt;see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /&gt;</ph> followed by a line terminator.</source>
          <target state="translated">このインスタンスの <ph id="ph1">&lt;see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /&gt;</ph> にメッセージを書き込み、続けて行終端記号を書き込みます。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)">
          <source>The default line terminator is a carriage return followed by a line feed (\r\n).</source>
          <target state="translated">既定の行終端記号は、キャリッジ リターンの次に改行が付いた形です (\r\n)。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)">
          <source>The following example implements a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> named <ph id="ph2">`myWriter`</ph> to write to the console screen.</source>
          <target state="translated">次の例では、実装、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>という名前<ph id="ph2">`myWriter`</ph>コンソール画面に書き込めません。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)">
          <source>The example writes two lines to the console screen.</source>
          <target state="translated">例では、コンソール画面に 2 つの行を書き込みます。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)">
          <source>Note the second write appears on the same line as the first write.</source>
          <target state="translated">注 2 番目の出力は、最初の書き込みと同じ行に表示されます。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)">
          <source>The example then flushes and closes the stream.</source>
          <target state="translated">例では、フラッシュし、ストリームを閉じます。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TextWriterTraceListener.Writer">
          <source>Gets or sets the text writer that receives the tracing or debugging output.</source>
          <target state="translated">トレース出力またはデバッグ出力を受信するテキスト ライターを取得または設定します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TextWriterTraceListener.Writer">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that represents the writer that receives the tracing or debugging output.</source>
          <target state="translated">トレース出力またはデバッグ出力を受信するライターを表す <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TextWriterTraceListener.Writer">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> that writes to the console screen.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>コンソール画面に書き込まれる。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TextWriterTraceListener.Writer">
          <source>Then the code adds the new trace listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> in the trace class.</source>
          <target state="translated">コードを新しいトレース リスナーに追加してから、 <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> trace クラスにします。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>