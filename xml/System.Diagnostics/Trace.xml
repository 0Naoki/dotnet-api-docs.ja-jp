<Type Name="Trace" FullName="System.Diagnostics.Trace">
  <Metadata><Meta Name="ms.openlocfilehash" Value="42513516485d982225cdf18b080eac3b9634f407" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58734568" /></Metadata><TypeSignature Language="C#" Value="public sealed class Trace" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Trace extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Trace" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Trace" />
  <TypeSignature Language="C++ CLI" Value="public ref class Trace sealed" />
  <TypeSignature Language="F#" Value="type Trace = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8f45c-101">コードの実行をトレースするための一連のメソッドとプロパティを提供します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-101">Provides a set of methods and properties that help you trace the execution of your code.</span></span> <span data-ttu-id="8f45c-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="8f45c-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-103">プロパティとメソッドを使用することができます、<xref:System.Diagnostics.Trace>リリースのインストルメント化するクラスを作成します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-103">You can use the properties and methods in the <xref:System.Diagnostics.Trace> class to instrument release builds.</span></span> <span data-ttu-id="8f45c-104">インストルメンテーションを使用すると、実際の設定で実行されているアプリケーションの正常性を監視できます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-104">Instrumentation allows you to monitor the health of your application running in real-life settings.</span></span> <span data-ttu-id="8f45c-105">トレースを行う問題を特定し、実行中のシステムに影響を与えずに修正します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-105">Tracing helps you isolate problems and fix them without disturbing a running system.</span></span>  
  
 <span data-ttu-id="8f45c-106">このクラスを表示するメソッドを提供、<xref:System.Diagnostics.Trace.Assert%2A>ダイアログ ボックスは常に、アサーションの生成と<xref:System.Diagnostics.Trace.Fail%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-106">This class provides methods to display an <xref:System.Diagnostics.Trace.Assert%2A> dialog box, and to emit an assertion that will always <xref:System.Diagnostics.Trace.Fail%2A>.</span></span> <span data-ttu-id="8f45c-107">このクラスは、次の種類の書き込みメソッドを提供します。 <xref:System.Diagnostics.Trace.Write%2A>、 <xref:System.Diagnostics.Trace.WriteLine%2A>、 <xref:System.Diagnostics.Trace.WriteIf%2A>、および<xref:System.Diagnostics.Trace.WriteLineIf%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-107">This class provides write methods in the following variations: <xref:System.Diagnostics.Trace.Write%2A>, <xref:System.Diagnostics.Trace.WriteLine%2A>, <xref:System.Diagnostics.Trace.WriteIf%2A>, and <xref:System.Diagnostics.Trace.WriteLineIf%2A>.</span></span>  
  
 <span data-ttu-id="8f45c-108"><xref:System.Diagnostics.BooleanSwitch>と<xref:System.Diagnostics.TraceSwitch>クラスがトレース出力を動的に制御するための手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-108">The <xref:System.Diagnostics.BooleanSwitch> and <xref:System.Diagnostics.TraceSwitch> classes provide means to dynamically control the tracing output.</span></span> <span data-ttu-id="8f45c-109">アプリケーションを再コンパイルしなくても、これらのスイッチの値を変更できます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-109">You can modify the values of these switches without recompiling your application.</span></span> <span data-ttu-id="8f45c-110">スイッチを設定する構成ファイルの使用方法の詳細については、次を参照してください。、<xref:System.Diagnostics.Switch>クラスおよび[方法。初期化およびトレース スイッチの構成の作成、](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md)トピック。</span><span class="sxs-lookup"><span data-stu-id="8f45c-110">For information on using the configuration file to set a switch, see the <xref:System.Diagnostics.Switch> class and the [How to: Create, Initialize and Configure Trace Switches](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md) topic.</span></span>  
  
 <span data-ttu-id="8f45c-111">トレース出力のターゲットを追加してカスタマイズできます<xref:System.Diagnostics.TraceListener>インスタンスまたはインスタンスからの削除、<xref:System.Diagnostics.Trace.Listeners%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="8f45c-111">You can customize the tracing output's target by adding <xref:System.Diagnostics.TraceListener> instances to or removing instances from the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="8f45c-112"><xref:System.Diagnostics.Trace.Listeners%2A>コレクションが両方によって共有、<xref:System.Diagnostics.Debug>と<xref:System.Diagnostics.Trace>クラスです。 追加のどちらかのクラスをトレース リスナーは、両方に、リスナーを追加します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-112">The <xref:System.Diagnostics.Trace.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span> <span data-ttu-id="8f45c-113">既定では、トレース出力を使用して、<xref:System.Diagnostics.DefaultTraceListener>クラス。</span><span class="sxs-lookup"><span data-stu-id="8f45c-113">By default, trace output is emitted using the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f45c-114">トレース リスナーを追加する、<xref:System.Diagnostics.Trace.Listeners%2A>トレース リスナーによって使用されるリソースが利用できない場合、コレクションは、トレース中にスローされる例外を発生できます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-114">Adding a trace listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</span></span> <span data-ttu-id="8f45c-115">条件とスローされる例外は、トレース リスナーに依存し、このトピックで列挙することはできません。</span><span class="sxs-lookup"><span data-stu-id="8f45c-115">The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</span></span> <span data-ttu-id="8f45c-116">呼び出しを配置することができます、<xref:System.Diagnostics.Trace>メソッド`try` / `catch`ブロックを検出し、トレース リスナーから例外を処理します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-116">It may be useful to place calls to the <xref:System.Diagnostics.Trace> methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f45c-117">部分的に信頼されたコードにトレース リスナーを追加する場合、<xref:System.Security.SecurityException>例外、トレース リスナーを追加するため必要<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode>アクセス許可。</span><span class="sxs-lookup"><span data-stu-id="8f45c-117">If you add trace listeners to partially trusted code, you will get a <xref:System.Security.SecurityException> exception, because adding trace listeners requires <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> permission.</span></span> <span data-ttu-id="8f45c-118">Visual Studio でのサンド ボックス内で実行されている部分的に信頼されたコードをトレースするには、トレース リスナーを追加しないでください。</span><span class="sxs-lookup"><span data-stu-id="8f45c-118">To trace partially trusted code that is running in a sandbox in Visual Studio, do not add trace listeners.</span></span> <span data-ttu-id="8f45c-119">代わりに、表示、<xref:System.Diagnostics.Trace>と<xref:System.Diagnostics.Debug>にメッセージが、**出力**ウィンドウ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-119">Instead, view the <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> messages in the **Output** window.</span></span>  
  
 <span data-ttu-id="8f45c-120"><xref:System.Diagnostics.Trace>クラス プロパティを取得または設定のレベルを提供<xref:System.Diagnostics.Trace.Indent%2A>、 <xref:System.Diagnostics.Trace.IndentSize%2A>、するかどうかと<xref:System.Diagnostics.Trace.AutoFlush%2A>各書き込み後にします。</span><span class="sxs-lookup"><span data-stu-id="8f45c-120">The <xref:System.Diagnostics.Trace> class provides properties to get or set the level of <xref:System.Diagnostics.Trace.Indent%2A>, the <xref:System.Diagnostics.Trace.IndentSize%2A>, and whether to <xref:System.Diagnostics.Trace.AutoFlush%2A> after each write.</span></span>  
  
 <span data-ttu-id="8f45c-121">設定する、<xref:System.Diagnostics.Trace.AutoFlush%2A>と<xref:System.Diagnostics.Trace.IndentSize%2A>の<xref:System.Diagnostics.Trace>アプリケーションの名前に対応する構成ファイルを編集することができます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-121">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="8f45c-122">構成ファイルは、次の例のような形式にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="8f45c-122">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="8f45c-123"><xref:System.Diagnostics.ConditionalAttribute>のメソッドに属性が適用される<xref:System.Diagnostics.Trace>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-123">The <xref:System.Diagnostics.ConditionalAttribute> attribute is applied to the methods of <xref:System.Diagnostics.Trace>.</span></span> <span data-ttu-id="8f45c-124">サポートされるコンパイラ<xref:System.Diagnostics.ConditionalAttribute>"TRACE"が条件付きコンパイル シンボルとして定義されていない場合は、これらのメソッドの呼び出しを無視します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-124">Compilers that support <xref:System.Diagnostics.ConditionalAttribute> ignore calls to these methods unless "TRACE" is defined as a conditional compilation symbol.</span></span> <span data-ttu-id="8f45c-125">コンパイラのドキュメントを参照してくださいかどうか<xref:System.Diagnostics.ConditionalAttribute>はサポートされていると、条件付きコンパイル シンボルを定義するための構文。</span><span class="sxs-lookup"><span data-stu-id="8f45c-125">Refer to a compiler's documentation to determine whether <xref:System.Diagnostics.ConditionalAttribute> is supported and the syntax for defining a conditional compilation symbol.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f45c-126">Visual Studio のプロジェクトに既定では、デバッグ ビルドの"DEBUG"の条件付きコンパイル シンボルが定義されているし、両方のデバッグし、リリースのビルドの場合に"TRACE"シンボルが定義されています。</span><span class="sxs-lookup"><span data-stu-id="8f45c-126">In Visual Studio projects, by default, the "DEBUG" conditional compilation symbol is defined for debug builds, and the "TRACE" symbol is defined for both debug and release builds.</span></span> <span data-ttu-id="8f45c-127">この動作を無効にする方法については、Visual Studio のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8f45c-127">For information about how to disable this behavior, see the Visual Studio documentation.</span></span>  
  
 <span data-ttu-id="8f45c-128">C# では、"TRACE"条件付きコンパイル シンボルを定義するには、追加、 `/d:TRACE` 、コマンドラインを使用してコードをコンパイルするときにコンパイラのコマンド ライン オプションまたは追加`#define TRACE`ファイルの先頭にします。</span><span class="sxs-lookup"><span data-stu-id="8f45c-128">To define the "TRACE" conditional compilation symbol in C#, add the `/d:TRACE` option to the compiler command line when you compile your code using a command line, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="8f45c-129">Visual basic では、追加、`/d:TRACE=True`コンパイラのコマンド ライン オプションまたは追加`#Const TRACE=True`ファイルにします。</span><span class="sxs-lookup"><span data-stu-id="8f45c-129">In Visual Basic, add the `/d:TRACE=True` option to the compiler command line or add `#Const TRACE=True` to the file.</span></span>  
  
 <span data-ttu-id="8f45c-130"><xref:System.Diagnostics.ConditionalAttribute> C++ コンパイラではサポートされません。</span><span class="sxs-lookup"><span data-stu-id="8f45c-130"><xref:System.Diagnostics.ConditionalAttribute> is not supported by the C++ compiler.</span></span> <span data-ttu-id="8f45c-131">同等の機能を提供するには、メソッドの呼び出しを囲む必要があります<xref:System.Diagnostics.Trace>で、`#if defined(TRACE) ... #endif`を追加して、ブロック、`/DTRACE`コンパイラのコマンド ライン オプションまたは追加`#define TRACE`ファイルにします。</span><span class="sxs-lookup"><span data-stu-id="8f45c-131">To provide equivalent functionality, you must enclose calls to the methods of <xref:System.Diagnostics.Trace> in an `#if defined(TRACE) ... #endif` block, and add the `/DTRACE` option to the compiler command line or add `#define TRACE` to the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-132">次の例では<xref:System.Diagnostics.Trace>を先頭と末尾のプログラムの実行を示します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-132">The following example uses <xref:System.Diagnostics.Trace> to indicate the beginning and the end of a program's execution.</span></span> <span data-ttu-id="8f45c-133">また、例では、<xref:System.Diagnostics.Trace.Indent%2A?displayProperty=nameWithType>と<xref:System.Diagnostics.Trace.Unindent%2A?displayProperty=nameWithType>トレース出力を区別するためのメソッド。</span><span class="sxs-lookup"><span data-stu-id="8f45c-133">The example also uses the <xref:System.Diagnostics.Trace.Indent%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.Trace.Unindent%2A?displayProperty=nameWithType> methods to distinguish the tracing output.</span></span> <span data-ttu-id="8f45c-134">使用の詳細な例については<xref:System.Diagnostics.Trace>を参照してください[方法。アプリケーション コードにトレース ステートメントを追加](~/docs/framework/debug-trace-profile/how-to-add-trace-statements-to-application-code.md)します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-134">For a more complete example of the use of <xref:System.Diagnostics.Trace>, see [How to: Add Trace Statements to Application Code](~/docs/framework/debug-trace-profile/how-to-add-trace-statements-to-application-code.md).</span></span>  
  
 [!code-cpp[Classic Trace Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace Example/CS/source.cs#1)]
 [!code-vb[Classic Trace Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="8f45c-135">アンマネージ コードと運用します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-135">for operating with unmanaged code.</span></span> <span data-ttu-id="8f45c-136">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-136">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="8f45c-137">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="8f45c-137">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
    <threadsafe><span data-ttu-id="8f45c-138">この型はスレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="8f45c-138">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.Diagnostics.TraceListenerCollection" />
    <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Assert">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8f45c-139">条件をチェックします。条件が <see langword="false" /> の場合、メッセージを出力し、コール スタックを示すメッセージ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-139">Checks for a condition; if the condition is <see langword="false" />, outputs messages and displays a message box that shows the call stack.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition);" />
      <MemberSignature Language="F#" Value="static member Assert : bool -&gt; unit" Usage="System.Diagnostics.Trace.Assert condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="8f45c-140">評価する条件式。</span><span class="sxs-lookup"><span data-stu-id="8f45c-140">The conditional expression to evaluate.</span></span> <span data-ttu-id="8f45c-141">条件が <see langword="true" /> の場合、エラー メッセージは送信されず、メッセージ ボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="8f45c-141">If the condition is <see langword="true" />, a failure message is not sent and the message box is not displayed.</span></span></param>
        <summary><span data-ttu-id="8f45c-142">条件をチェックします。条件が <see langword="false" /> の場合、呼び出し履歴を見せるメッセージ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-142">Checks for a condition; if the condition is <see langword="false" />, displays a message box that shows the call stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-143">使用して、<xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType>リリースでのアサーションを実行する場合、メソッドが構築されます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-143">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="8f45c-144"><xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType>メソッドは、デバッグ ビルドでのみ機能します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-144">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="8f45c-145">詳細については、「[マネージド コードのアサーション](/visualstudio/debugger/assertions-in-managed-code)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8f45c-145">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="8f45c-146">通常、<xref:System.Diagnostics.Trace.Assert%28System.Boolean%29>メソッドはプログラムの開発中に論理エラーを識別するために使用します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-146">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="8f45c-147"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> 条件を評価します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-147"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> evaluates the condition.</span></span> <span data-ttu-id="8f45c-148">結果は場合`false`、エラー メッセージを送信、<xref:System.Diagnostics.Trace.Listeners%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="8f45c-148">If the result is `false`, it sends a failure message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="8f45c-149">追加することでこの動作をカスタマイズすることができます、 <xref:System.Diagnostics.TraceListener> 、または削除から、1 つ、<xref:System.Diagnostics.Trace.Listeners%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="8f45c-149">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="8f45c-150">アプリケーションのユーザー インターフェイス モードで実行すると、ファイルと行番号を持つ呼び出し履歴を示すメッセージ ボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-150">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="8f45c-151">メッセージ ボックスには、3 つのボタンが含まれています。**中止**、**再試行**、および**無視**します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-151">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="8f45c-152">クリックすると、**中止**ボタンは、アプリケーションを終了します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-152">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="8f45c-153">クリックすると**再試行**アプリケーションが、デバッガーで実行されているか、されていない場合、デバッガーを開くには、場合に、デバッガーでコードを送信します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-153">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="8f45c-154">クリックすると**無視**コード内の次の命令を続行します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-154">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f45c-155">メッセージ ボックスの表示の存在に依存、<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-155">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="8f45c-156">場合、<xref:System.Diagnostics.DefaultTraceListener>内にない、<xref:System.Diagnostics.Trace.Listeners%2A>コレクション、メッセージ ボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="8f45c-156">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="8f45c-157"><xref:System.Diagnostics.DefaultTraceListener>して削除できる、 [&lt;オフ&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;削除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)、または呼び出すことによって、 <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> メソッド<xref:System.Diagnostics.Trace.Listeners%2A>プロパティ (`System.Diagnostics.Trace.Listeners.Clear()`)。</span><span class="sxs-lookup"><span data-stu-id="8f45c-157">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="8f45c-158">動作を変更することができます、<xref:System.Diagnostics.DefaultTraceListener>アプリケーションの名前に対応する構成ファイルにします。</span><span class="sxs-lookup"><span data-stu-id="8f45c-158">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="8f45c-159">このファイルでを有効にして assert のメッセージ ボックスを無効にしたり設定、<xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-159">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="8f45c-160">構成ファイルは、次のように書式設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8f45c-160">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-161">次の例では、配列のインデックスを作成します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-161">The following example creates an index for an array.</span></span> <span data-ttu-id="8f45c-162">その後、インデックスの値を設定する何らかのアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-162">Then some action is performed that sets the value of the index.</span></span> <span data-ttu-id="8f45c-163">次に、コードを呼び出す<xref:System.Diagnostics.Trace.Assert%2A>インデックスを確認する値が無効です。</span><span class="sxs-lookup"><span data-stu-id="8f45c-163">Next the code calls <xref:System.Diagnostics.Trace.Assert%2A> to verify the index value is valid.</span></span> <span data-ttu-id="8f45c-164">有効でない場合、<xref:System.Diagnostics.Trace.Assert%2A>コール スタックを出力します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-164">If it is not valid, the <xref:System.Diagnostics.Trace.Assert%2A> outputs the call stack.</span></span>  
  
 [!code-cpp[Classic Trace.Assert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string -&gt; unit" Usage="System.Diagnostics.Trace.Assert (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="8f45c-165">評価する条件式。</span><span class="sxs-lookup"><span data-stu-id="8f45c-165">The conditional expression to evaluate.</span></span> <span data-ttu-id="8f45c-166">条件が <see langword="true" /> の場合、指定したメッセージは送信されず、メッセージ ボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="8f45c-166">If the condition is <see langword="true" />, the specified message is not sent and the message box is not displayed.</span></span></param>
        <param name="message"><span data-ttu-id="8f45c-167"><see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションに送信するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-167">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></param>
        <summary><span data-ttu-id="8f45c-168">条件をチェックします。条件が <see langword="false" /> の場合、指定したメッセージを出力し、コール スタックを示すメッセージ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-168">Checks for a condition; if the condition is <see langword="false" />, outputs a specified message and displays a message box that shows the call stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-169">使用して、<xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType>リリースでのアサーションを実行する場合、メソッドが構築されます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-169">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="8f45c-170"><xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType>メソッドは、デバッグ ビルドでのみ機能します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-170">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="8f45c-171">詳細については、「[マネージド コードのアサーション](/visualstudio/debugger/assertions-in-managed-code)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8f45c-171">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="8f45c-172">通常、<xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29>メソッドはプログラムの開発中に論理エラーを識別するために使用します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-172">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="8f45c-173"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> 条件を評価します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-173"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> evaluates the condition.</span></span> <span data-ttu-id="8f45c-174">結果は場合`false`、指定した診断メッセージを送信、<xref:System.Diagnostics.Trace.Listeners%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="8f45c-174">If the result is `false`, it sends the specified diagnostic message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="8f45c-175">追加することでこの動作をカスタマイズすることができます、 <xref:System.Diagnostics.TraceListener> 、または削除から、1 つ、<xref:System.Diagnostics.Trace.Listeners%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="8f45c-175">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="8f45c-176">アプリケーションのユーザー インターフェイス モードで実行すると、ファイルと行番号を持つ呼び出し履歴を示すメッセージ ボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-176">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="8f45c-177">メッセージ ボックスには、3 つのボタンが含まれています。**中止**、**再試行**、および**無視**します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-177">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="8f45c-178">クリックすると、**中止**ボタンは、アプリケーションを終了します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-178">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="8f45c-179">クリックすると**再試行**アプリケーションが、デバッガーで実行されているか、されていない場合、デバッガーを開くには、場合に、デバッガーでコードを送信します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-179">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="8f45c-180">クリックすると**無視**コード内の次の命令を続行します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-180">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f45c-181">メッセージ ボックスの表示の存在に依存、<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-181">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="8f45c-182">場合、<xref:System.Diagnostics.DefaultTraceListener>内にない、<xref:System.Diagnostics.Trace.Listeners%2A>コレクション、メッセージ ボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="8f45c-182">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="8f45c-183"><xref:System.Diagnostics.DefaultTraceListener>して削除できる、 [&lt;オフ&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;削除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)、または呼び出すことによって、 <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> メソッド<xref:System.Diagnostics.Trace.Listeners%2A>プロパティ (`System.Diagnostics.Trace.Listeners.Clear()`)。</span><span class="sxs-lookup"><span data-stu-id="8f45c-183">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="8f45c-184">動作を変更することができます、<xref:System.Diagnostics.DefaultTraceListener>アプリケーションの名前に対応する構成ファイルにします。</span><span class="sxs-lookup"><span data-stu-id="8f45c-184">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="8f45c-185">このファイルでを有効にして assert のメッセージ ボックスを無効にしたり設定、<xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-185">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="8f45c-186">構成ファイルは、次のように書式設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8f45c-186">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-187">次の例は、ことを確認するチェック、`type`パラメーターは有効です。</span><span class="sxs-lookup"><span data-stu-id="8f45c-187">The following example checks to see that the `type` parameter is valid.</span></span> <span data-ttu-id="8f45c-188">場合、`type`が渡された`null`、<xref:System.Diagnostics.Trace.Assert%2A>メッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-188">If the `type` passed in is `null`, the <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Trace.Assert1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string * string -&gt; unit" Usage="System.Diagnostics.Trace.Assert (condition, message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="8f45c-189">評価する条件式。</span><span class="sxs-lookup"><span data-stu-id="8f45c-189">The conditional expression to evaluate.</span></span> <span data-ttu-id="8f45c-190">条件が <see langword="true" /> の場合、指定したメッセージは送信されず、メッセージ ボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="8f45c-190">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span></span></param>
        <param name="message"><span data-ttu-id="8f45c-191"><see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションに送信するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-191">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="8f45c-192"><see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションに送信する詳細なメッセージ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-192">The detailed message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></param>
        <summary><span data-ttu-id="8f45c-193">条件をチェックします。条件が <see langword="false" /> の場合、指定した 2 つのメッセージを出力し、コール スタックを示すメッセージ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-193">Checks for a condition; if the condition is <see langword="false" />, outputs two specified messages and displays a message box that shows the call stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-194">使用して、<xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType>リリースでのアサーションを実行する場合、メソッドが構築されます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-194">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="8f45c-195"><xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType>メソッドは、デバッグ ビルドでのみ機能します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-195">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="8f45c-196">詳細については、「[マネージド コードのアサーション](/visualstudio/debugger/assertions-in-managed-code)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8f45c-196">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="8f45c-197">通常、<xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29>メソッドはプログラムの開発中に論理エラーを識別するために使用します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-197">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="8f45c-198"><xref:System.Diagnostics.Trace.Assert%2A> 条件を評価します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-198"><xref:System.Diagnostics.Trace.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="8f45c-199">結果は場合`false`、指定した診断メッセージと詳細なメッセージを送信します、<xref:System.Diagnostics.Trace.Listeners%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="8f45c-199">If the result is `false`, it sends the specified diagnostic message and detailed message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="8f45c-200">追加することでこの動作をカスタマイズすることができます、 <xref:System.Diagnostics.TraceListener> 、または削除から、1 つ、<xref:System.Diagnostics.Trace.Listeners%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="8f45c-200">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="8f45c-201">アプリケーションのユーザー インターフェイス モードで実行すると、ファイルと行番号を持つ呼び出し履歴を示すメッセージ ボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-201">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="8f45c-202">メッセージ ボックスには、3 つのボタンが含まれています。**中止**、**再試行**、および**無視**します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-202">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="8f45c-203">クリックすると、**中止**ボタンは、アプリケーションを終了します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-203">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="8f45c-204">クリックすると**再試行**アプリケーションが、デバッガーで実行されているか、されていない場合、デバッガーを開くには、場合に、デバッガーでコードを送信します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-204">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="8f45c-205">クリックすると**無視**コード内の次の命令を続行します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-205">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f45c-206">メッセージ ボックスの表示の存在に依存、<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-206">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="8f45c-207">場合、<xref:System.Diagnostics.DefaultTraceListener>内にない、<xref:System.Diagnostics.Trace.Listeners%2A>コレクション、メッセージ ボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="8f45c-207">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="8f45c-208"><xref:System.Diagnostics.DefaultTraceListener>して削除できる、 [&lt;オフ&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;削除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)、または呼び出すことによって、 <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> メソッド<xref:System.Diagnostics.Trace.Listeners%2A>プロパティ (`System.Diagnostics.Trace.Listeners.Clear()`)。</span><span class="sxs-lookup"><span data-stu-id="8f45c-208">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="8f45c-209">動作を変更することができます、<xref:System.Diagnostics.DefaultTraceListener>アプリケーションの名前に対応する構成ファイルにします。</span><span class="sxs-lookup"><span data-stu-id="8f45c-209">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="8f45c-210">このファイルでを有効にして assert のメッセージ ボックスを無効にしたり設定、<xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-210">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="8f45c-211">構成ファイルは、次のように書式設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8f45c-211">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-212">次の例は、ことを確認するチェック、`type`パラメーターは有効です。</span><span class="sxs-lookup"><span data-stu-id="8f45c-212">The following example checks to see that the `type` parameter is valid.</span></span> <span data-ttu-id="8f45c-213">場合、`type`が渡された`null`、<xref:System.Diagnostics.Trace.Assert%2A>メッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-213">If the `type` passed in is `null`, the <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Trace.Assert2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public static bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="System.Diagnostics.Trace.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f45c-214">すべての書き込み後に <see cref="P:System.Diagnostics.Trace.Listeners" /> で <see cref="M:System.Diagnostics.Trace.Flush" /> を呼び出すかどうかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-214">Gets or sets whether <see cref="M:System.Diagnostics.Trace.Flush" /> should be called on the <see cref="P:System.Diagnostics.Trace.Listeners" /> after every write.</span></span></summary>
        <value><span data-ttu-id="8f45c-215">すべての書き込み後に <see cref="P:System.Diagnostics.Trace.Listeners" /> で <see cref="M:System.Diagnostics.Trace.Flush" /> を呼び出す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8f45c-215"><see langword="true" /> if <see cref="M:System.Diagnostics.Trace.Flush" /> is called on the <see cref="P:System.Diagnostics.Trace.Listeners" /> after every write; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-216">既定値は、`false` です。</span><span class="sxs-lookup"><span data-stu-id="8f45c-216">The default is `false`.</span></span>  
  
 <span data-ttu-id="8f45c-217">ストリームのフラッシュを明示的に呼び出さない限り、その基になるエンコーダー フラッシュしない<xref:System.Diagnostics.Trace.Flush%2A>または<xref:System.Diagnostics.Trace.Close%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-217">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="8f45c-218">設定<xref:System.Diagnostics.Trace.AutoFlush%2A>に`true`データは、バッファーからストリームにフラッシュされますが、エンコーダーの状態はフラッシュされないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-218">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="8f45c-219">これにより、エンコーダーで、次の文字のブロックは正常にエンコードできるように、(一部の文字) の状態を維持できます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-219">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="8f45c-220">このシナリオでは、UTF8、UTF7、特定の文字をエンコードするため、エンコーダーは、隣接する文字または文字列を受信した後に影響します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-220">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="8f45c-221">設定する、<xref:System.Diagnostics.Trace.AutoFlush%2A>と<xref:System.Diagnostics.Trace.IndentSize%2A>の<xref:System.Diagnostics.Trace>アプリケーションの名前に対応する構成ファイルを編集することもできます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-221">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="8f45c-222">構成ファイルは、次の例のような形式にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="8f45c-222">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="8f45c-223">アンマネージ コードと運用します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-223">for operating with unmanaged code.</span></span> <span data-ttu-id="8f45c-224">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-224">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="8f45c-225">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="8f45c-225">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public static void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Close" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Close();" />
      <MemberSignature Language="F#" Value="static member Close : unit -&gt; unit" Usage="System.Diagnostics.Trace.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f45c-226">出力バッファーをフラッシュし、<see cref="P:System.Diagnostics.Trace.Listeners" /> を閉じます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-226">Flushes the output buffer, and then closes the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-227">出力するとき、ファイルなどに、このメソッドを使用して、<xref:System.Diagnostics.TextWriterTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-227">Use this method when the output is going to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 <span data-ttu-id="8f45c-228">ストリームのフラッシュを明示的に呼び出さない限り、その基になるエンコーダー フラッシュしない<xref:System.Diagnostics.Trace.Flush%2A>または<xref:System.Diagnostics.Trace.Close%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-228">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="8f45c-229">設定<xref:System.Diagnostics.Trace.AutoFlush%2A>に`true`データは、バッファーからストリームにフラッシュされますが、エンコーダーの状態はフラッシュされないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-229">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="8f45c-230">これにより、エンコーダーで、次の文字のブロックは正常にエンコードできるように、(一部の文字) の状態を維持できます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-230">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="8f45c-231">このシナリオでは、UTF8、UTF7、特定の文字をエンコードするため、エンコーダーは、隣接する文字または文字列を受信した後に影響します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-231">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-232">次の例では、作成、<xref:System.Diagnostics.TextWriterTraceListener>という`myTextListener`します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-232">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="8f45c-233">`myTextListener` 使用して、<xref:System.IO.StreamWriter>と呼ばれる`myOutputWriter`という名前のファイルに書き込む`TestFile.txt`します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-233">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="8f45c-234">例でファイル、ストリーム、およびテキスト ライターを作成しますと、ファイルを 1 つの行のテキストを書き込みますフラッシュし、出力を閉じます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-234">The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Trace.Flush Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Flush Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Flush Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Flush Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="8f45c-235">アンマネージ コードと運用します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-235">for operating with unmanaged code.</span></span> <span data-ttu-id="8f45c-236">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-236">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="8f45c-237">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="8f45c-237">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CorrelationManager">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.CorrelationManager CorrelationManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.CorrelationManager CorrelationManager" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.CorrelationManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrelationManager As CorrelationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::CorrelationManager ^ CorrelationManager { System::Diagnostics::CorrelationManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CorrelationManager : System.Diagnostics.CorrelationManager" Usage="System.Diagnostics.Trace.CorrelationManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.CorrelationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f45c-238">このトレースのスレッドの相関マネージャーを取得します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-238">Gets the correlation manager for the thread for this trace.</span></span></summary>
        <value><span data-ttu-id="8f45c-239">このトレースのスレッドに関連付けられた <see cref="T:System.Diagnostics.CorrelationManager" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8f45c-239">The <see cref="T:System.Diagnostics.CorrelationManager" /> object associated with the thread for this trace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="8f45c-240">これは、ほとんどのアプリケーションには、何度で使用する必要がありますいない高度なプロパティです。</span><span class="sxs-lookup"><span data-stu-id="8f45c-240">This is an advanced property that most applications should not have occasion to use.</span></span>  
  
 <span data-ttu-id="8f45c-241"><xref:System.Diagnostics.CorrelationManager>クラスはスレッド バインド コンテキストに、論理操作 id を格納し、ストアドの id を持つスレッドによって生成された各トレース イベントを自動的にタグ付けに使用するメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-241">The <xref:System.Diagnostics.CorrelationManager> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="8f45c-242">アンマネージ コードと運用します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-242">for operating with unmanaged code.</span></span> <span data-ttu-id="8f45c-243">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-243">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="8f45c-244">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="8f45c-244">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.CorrelationManager" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8f45c-245">エラー メッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-245">Emits an error message.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Fail : string -&gt; unit" Usage="System.Diagnostics.Trace.Fail message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8f45c-246">出力するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-246">A message to emit.</span></span></param>
        <summary><span data-ttu-id="8f45c-247">指定されたエラー メッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-247">Emits the specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-248">既定のトレース リスナーの既定の動作が出力には、`message`ユーザー インターフェイス モードとに、アプリケーションの実行時に、メッセージ ボックスにパラメーター、<xref:System.Diagnostics.TraceListener>インスタンス、<xref:System.Diagnostics.Trace.Listeners%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="8f45c-248">The default behavior for the default trace listener is to output the `message` parameter to a message box when the application runs in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f45c-249">メッセージ ボックスの表示がの存在に依存、<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-249">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="8f45c-250">場合、<xref:System.Diagnostics.DefaultTraceListener>内にない、<xref:System.Diagnostics.Trace.Listeners%2A>コレクション、メッセージ ボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="8f45c-250">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="8f45c-251"><xref:System.Diagnostics.DefaultTraceListener>して削除できる、 [&lt;オフ&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;削除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)、または呼び出すことによって、 <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> メソッド<xref:System.Diagnostics.Trace.Listeners%2A>プロパティ (`System.Diagnostics.Trace.Listeners.Clear()`)。</span><span class="sxs-lookup"><span data-stu-id="8f45c-251">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="8f45c-252">この動作をカスタマイズするには追加することで、 <xref:System.Diagnostics.TraceListener> 、または削除することから、いずれかで、<xref:System.Diagnostics.Trace.Listeners%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="8f45c-252">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or by removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-253">次の例では、<xref:System.Diagnostics.Trace.Fail%2A>例外処理中にメッセージを印刷する方法。</span><span class="sxs-lookup"><span data-stu-id="8f45c-253">The following example uses the <xref:System.Diagnostics.Trace.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Trace.Fail Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Fail Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Fail Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail Example/VB/source.vb#1)]  
  
 <span data-ttu-id="8f45c-254">使用することも、 <xref:System.Diagnostics.Trace.Fail%2A> switch ステートメント内のメソッド。</span><span class="sxs-lookup"><span data-stu-id="8f45c-254">You can also use the <xref:System.Diagnostics.Trace.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Trace.Fail Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Trace.Fail Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CS/source.cs#2)]
 [!code-vb[Classic Trace.Fail Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="static member Fail : string * string -&gt; unit" Usage="System.Diagnostics.Trace.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8f45c-255">出力するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-255">A message to emit.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="8f45c-256">出力する詳細メッセージ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-256">A detailed message to emit.</span></span></param>
        <summary><span data-ttu-id="8f45c-257">エラー メッセージ、および詳細なエラー メッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-257">Emits an error message, and a detailed error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-258">既定の動作が既定のトレース リスナーを出力するは、`message`パラメーターおよび`detailedMessage`ユーザー インターフェイス モードとに、アプリケーションの実行時に、メッセージ ボックスにパラメーター、<xref:System.Diagnostics.TraceListener>インスタンス、<xref:System.Diagnostics.Trace.Listeners%2A>コレクション.</span><span class="sxs-lookup"><span data-stu-id="8f45c-258">The default behavior is for the default trace listener to output the `message` parameter and the `detailedMessage` parameter to a message box when the application runs in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f45c-259">メッセージ ボックスの表示がの存在に依存、<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-259">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="8f45c-260">場合、<xref:System.Diagnostics.DefaultTraceListener>内にない、<xref:System.Diagnostics.Trace.Listeners%2A>コレクション、メッセージ ボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="8f45c-260">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="8f45c-261"><xref:System.Diagnostics.DefaultTraceListener>して削除できる、 [&lt;オフ&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;削除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)、または呼び出すことによって、 <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> メソッド<xref:System.Diagnostics.Trace.Listeners%2A>プロパティ (`System.Diagnostics.Trace.Listeners.Clear()`)。</span><span class="sxs-lookup"><span data-stu-id="8f45c-261">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="8f45c-262">この動作をカスタマイズするには追加することで、 <xref:System.Diagnostics.TraceListener> 、または削除することから、いずれかで、<xref:System.Diagnostics.Trace.Listeners%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="8f45c-262">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or by removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-263">次の例では、<xref:System.Diagnostics.Trace.Fail%2A>例外処理中にメッセージを印刷する方法。</span><span class="sxs-lookup"><span data-stu-id="8f45c-263">The following example uses the <xref:System.Diagnostics.Trace.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Trace.Fail1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Fail1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Fail1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="8f45c-264">使用することも、 <xref:System.Diagnostics.Trace.Fail%2A> switch ステートメント内のメソッド。</span><span class="sxs-lookup"><span data-stu-id="8f45c-264">You can also use the <xref:System.Diagnostics.Trace.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Trace.Fail1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Trace.Fail1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CS/source.cs#2)]
 [!code-vb[Classic Trace.Fail1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Flush();" />
      <MemberSignature Language="F#" Value="static member Flush : unit -&gt; unit" Usage="System.Diagnostics.Trace.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f45c-265">出力バッファーをフラッシュします。また、バッファー内のデータが <see cref="P:System.Diagnostics.Trace.Listeners" /> に書き込まれるようにします。</span><span class="sxs-lookup"><span data-stu-id="8f45c-265">Flushes the output buffer, and causes buffered data to be written to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-266">ストリームのフラッシュを明示的に呼び出さない限り、その基になるエンコーダー フラッシュしない<xref:System.Diagnostics.Trace.Flush%2A>または<xref:System.Diagnostics.Trace.Close%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-266">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="8f45c-267">設定<xref:System.Diagnostics.Trace.AutoFlush%2A>に`true`データは、バッファーからストリームにフラッシュされますが、エンコーダーの状態はフラッシュされないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-267">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="8f45c-268">これにより、エンコーダーで、次の文字のブロックは正常にエンコードできるように、(一部の文字) の状態を維持できます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-268">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="8f45c-269">このシナリオでは、UTF8、UTF7、特定の文字をエンコードするため、エンコーダーは、隣接する文字または文字列を受信した後に影響します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-269">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-270">次の例では、作成、<xref:System.Diagnostics.TextWriterTraceListener>という`myTextListener`します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-270">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="8f45c-271">`myTextListener` 使用して、<xref:System.IO.StreamWriter>と呼ばれる`myOutputWriter`という名前のファイルに書き込む`TestFile.txt`します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-271">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="8f45c-272">例でファイル、ストリーム、およびテキスト ライターを作成しますと、ファイルを 1 つの行のテキストを書き込みますフラッシュし、出力を閉じます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-272">The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Trace.Flush Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Flush Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Flush Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Flush Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public static void Indent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Indent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Indent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Indent();" />
      <MemberSignature Language="F#" Value="static member Indent : unit -&gt; unit" Usage="System.Diagnostics.Trace.Indent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f45c-273">現在の <see cref="P:System.Diagnostics.Trace.IndentLevel" /> を 1 だけ大きくします。</span><span class="sxs-lookup"><span data-stu-id="8f45c-273">Increases the current <see cref="P:System.Diagnostics.Trace.IndentLevel" /> by one.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8f45c-274">次の例をインクリメントおよびデクリメント インデント レベルのトレース メッセージが出力されます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-274">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="8f45c-275">この例を実行すると、次の出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-275">This example produces the following output:</span></span>  
  
```  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Trace.Unindent" />
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public static int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentLevel : int with get, set" Usage="System.Diagnostics.Trace.IndentLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f45c-276">インデント レベルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-276">Gets or sets the indent level.</span></span></summary>
        <value><span data-ttu-id="8f45c-277">インデント レベル。</span><span class="sxs-lookup"><span data-stu-id="8f45c-277">The indent level.</span></span> <span data-ttu-id="8f45c-278">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="8f45c-278">The default is zero.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-279"><xref:System.Diagnostics.Trace.IndentLevel%2A>プロパティ表します回数の合計サイズのインデント<xref:System.Diagnostics.Trace.IndentSize%2A>が適用されます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-279">The <xref:System.Diagnostics.Trace.IndentLevel%2A> property represents the number of times the indent of size <xref:System.Diagnostics.Trace.IndentSize%2A> is applied.</span></span> <span data-ttu-id="8f45c-280">このプロパティは、スレッド/あたりの要求ごとに格納されます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-280">This property is stored on per-thread/per-request basis.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-281">次の例をインクリメントおよびデクリメント インデント レベルのトレース メッセージが出力されます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-281">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="8f45c-282">この例を実行すると、次の出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-282">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IndentSize">
      <MemberSignature Language="C#" Value="public static int IndentSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.IndentSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentSize : int with get, set" Usage="System.Diagnostics.Trace.IndentSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f45c-283">1 つのインデントに含まれるスペースの数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-283">Gets or sets the number of spaces in an indent.</span></span></summary>
        <value><span data-ttu-id="8f45c-284">インデントに含まれるスペースの数。</span><span class="sxs-lookup"><span data-stu-id="8f45c-284">The number of spaces in an indent.</span></span> <span data-ttu-id="8f45c-285">既定値は 4 です。</span><span class="sxs-lookup"><span data-stu-id="8f45c-285">The default is four.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-286">A<xref:System.Diagnostics.TextWriterTraceListener>スペースとしてこの数値を解釈します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-286">A <xref:System.Diagnostics.TextWriterTraceListener> interprets this number as spaces.</span></span> <span data-ttu-id="8f45c-287"><xref:System.Diagnostics.EventLogTraceListener>はこの値を無視します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-287">An <xref:System.Diagnostics.EventLogTraceListener> ignores this value.</span></span>  
  
 <span data-ttu-id="8f45c-288">このプロパティは、スレッド/あたりの要求ごとに格納されます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-288">This property is stored on per-thread/per-request basis.</span></span>  
  
 <span data-ttu-id="8f45c-289">設定する、<xref:System.Diagnostics.Trace.AutoFlush%2A>と<xref:System.Diagnostics.Trace.IndentSize%2A>の<xref:System.Diagnostics.Trace>アプリケーションの名前に対応する構成ファイルを編集することもできます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-289">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="8f45c-290">構成ファイルは、次の例のような形式にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="8f45c-290">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listeners : System.Diagnostics.TraceListenerCollection" Usage="System.Diagnostics.Trace.Listeners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f45c-291">トレース出力を監視しているリスナーのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-291">Gets the collection of listeners that is monitoring the trace output.</span></span></summary>
        <value><span data-ttu-id="8f45c-292">トレース出力を監視している型 <see cref="T:System.Diagnostics.TraceListener" /> のコレクションを表す <see cref="T:System.Diagnostics.TraceListenerCollection" />。</span><span class="sxs-lookup"><span data-stu-id="8f45c-292">A <see cref="T:System.Diagnostics.TraceListenerCollection" /> that represents a collection of type <see cref="T:System.Diagnostics.TraceListener" /> monitoring the trace output.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-293">リスナーは、トレース出力の書式設定された出力を生成します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-293">The listeners produce formatted output from the trace output.</span></span> <span data-ttu-id="8f45c-294">既定では、コレクションにはインスタンスが含まれています、<xref:System.Diagnostics.DefaultTraceListener>クラス。</span><span class="sxs-lookup"><span data-stu-id="8f45c-294">By default, the collection contains an instance of the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span> <span data-ttu-id="8f45c-295">既定のリスナーを削除する場合は、呼び出し、<xref:System.Diagnostics.TraceListenerCollection.Remove%2A>メソッドのインスタンスを渡すと、<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-295">If you want to remove the default listener, call the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method, and pass it the instance of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="8f45c-296">コンソール ウィンドウに出力をリダイレクトするには、インスタンスを追加、<xref:System.Diagnostics.ConsoleTraceListener>クラス。</span><span class="sxs-lookup"><span data-stu-id="8f45c-296">To redirect output to the console window, add an instance of the <xref:System.Diagnostics.ConsoleTraceListener> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f45c-297"><xref:System.Diagnostics.Trace.Listeners%2A>コレクションが両方によって共有、<xref:System.Diagnostics.Debug>と<xref:System.Diagnostics.Trace>クラスです。 追加のどちらかのクラスをトレース リスナーは、両方に、リスナーを追加します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-297">The <xref:System.Diagnostics.Trace.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-298">次の例では、作成、<xref:System.Diagnostics.ConsoleTraceListener>出力をコンソール画面に表示します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-298">The following example creates a <xref:System.Diagnostics.ConsoleTraceListener> that outputs to the console screen.</span></span> <span data-ttu-id="8f45c-299">コードに新しいリスナーを追加し、<xref:System.Diagnostics.Trace.Listeners%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-299">The code then adds the new listener to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span>  
  
 [!code-cpp[Classic Trace.Listeners Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Listeners Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Listeners Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="8f45c-300">アンマネージ コードと運用します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-300">for operating with unmanaged code.</span></span> <span data-ttu-id="8f45c-301">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-301">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="8f45c-302">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="8f45c-302">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh();" />
      <MemberSignature Language="F#" Value="static member Refresh : unit -&gt; unit" Usage="System.Diagnostics.Trace.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f45c-303">トレース構成データを更新します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-303">Refreshes the trace configuration data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-304">アプリケーションが開始されると、トレースの構成データがキャプチャされます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-304">Trace configuration data is captured when the application is started.</span></span> <span data-ttu-id="8f45c-305">アプリケーションの開始後に、構成データを変更する場合は、呼び出し、<xref:System.Diagnostics.Trace.Refresh%2A>トレース構成データを更新するメソッド。</span><span class="sxs-lookup"><span data-stu-id="8f45c-305">If the configuration data is changed after the application is started, call the <xref:System.Diagnostics.Trace.Refresh%2A> method to update the trace configuration data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceError">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8f45c-306">エラー情報を <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-306">Writes error information to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceError">
      <MemberSignature Language="C#" Value="public static void TraceError (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceError(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceError (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceError(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member TraceError : string -&gt; unit" Usage="System.Diagnostics.Trace.TraceError message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8f45c-307">書き込む情報メッセージ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-307">The informative message to write.</span></span></param>
        <summary><span data-ttu-id="8f45c-308">指定されたメッセージを使用して、エラー メッセージを <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-308">Writes an error message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-309"><xref:System.Diagnostics.Trace.TraceError%2A> 呼び出し、`TraceEvent`トレース イベントの種類と各トレース リスナーにメソッド<xref:System.Diagnostics.TraceEventType.Error>、情報メッセージをメッセージの文字列として渡します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-309"><xref:System.Diagnostics.Trace.TraceError%2A> calls the `TraceEvent` method for each trace listener, with the trace event type <xref:System.Diagnostics.TraceEventType.Error>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceError">
      <MemberSignature Language="C#" Value="public static void TraceError (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceError(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceError(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceError (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceError(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member TraceError : string * obj[] -&gt; unit" Usage="System.Diagnostics.Trace.TraceError (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="8f45c-310">0 個以上の書式項目を格納している書式指定文字列。<paramref name="args" /> 配列内のオブジェクトに対応します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-310">A format string that contains zero or more format items, which correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="8f45c-311">0 個以上の書式設定対象オブジェクトを含んだ <see langword="object" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="8f45c-311">An <see langword="object" /> array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="8f45c-312">指定されたオブジェクトの配列および書式設定情報を使用して、<see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーにエラー メッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-312">Writes an error message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-313"><xref:System.Diagnostics.Trace.TraceError%2A> 呼び出し、`TraceEvent`トレース イベントの種類のトレース リスナーにメソッド<xref:System.Diagnostics.TraceEventType.Error>メッセージの内容を書式設定情報をオブジェクトの配列として渡すことです。</span><span class="sxs-lookup"><span data-stu-id="8f45c-313"><xref:System.Diagnostics.Trace.TraceError%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Error>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="8f45c-314">参照してください、<xref:System.String.Format%2A>メソッドの詳細については、`format`と`args`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="8f45c-314">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceInformation">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8f45c-315">情報メッセージを <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-315">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public static void TraceInformation (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceInformation(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceInformation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceInformation (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceInformation(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member TraceInformation : string -&gt; unit" Usage="System.Diagnostics.Trace.TraceInformation message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8f45c-316">書き込む情報メッセージ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-316">The informative message to write.</span></span></param>
        <summary><span data-ttu-id="8f45c-317">指定されたメッセージを使用して、情報メッセージを <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-317">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-318"><xref:System.Diagnostics.Trace.TraceInformation%2A> 呼び出し、`TraceEvent`トレース イベントの種類と各トレース リスナーにメソッド<xref:System.Diagnostics.TraceEventType.Information>、情報メッセージをメッセージの文字列として渡します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-318"><xref:System.Diagnostics.Trace.TraceInformation%2A> calls the `TraceEvent` method for each trace listener, with the trace event type <xref:System.Diagnostics.TraceEventType.Information>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public static void TraceInformation (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceInformation(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceInformation (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceInformation(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member TraceInformation : string * obj[] -&gt; unit" Usage="System.Diagnostics.Trace.TraceInformation (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="8f45c-319">0 個以上の書式項目を格納している書式指定文字列。<paramref name="args" /> 配列内のオブジェクトに対応します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-319">A format string that contains zero or more format items, which correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="8f45c-320">0 個以上の書式設定対象オブジェクトを含んだ <see langword="object" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="8f45c-320">An <see langword="object" /> array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="8f45c-321">指定されたオブジェクトの配列および書式設定情報を使用して、<see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに情報メッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-321">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-322"><xref:System.Diagnostics.Trace.TraceInformation%2A> 呼び出し、`TraceEvent`トレース イベントの種類のトレース リスナーにメソッド<xref:System.Diagnostics.TraceEventType.Information>メッセージの内容を書式設定情報をオブジェクトの配列として渡すことです。</span><span class="sxs-lookup"><span data-stu-id="8f45c-322"><xref:System.Diagnostics.Trace.TraceInformation%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Information>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="8f45c-323">参照してください、<xref:System.String.Format%2A>メソッドの詳細については、`format`と`args`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="8f45c-323">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceWarning">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8f45c-324">警告情報を <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-324">Writes warning information to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceWarning">
      <MemberSignature Language="C#" Value="public static void TraceWarning (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceWarning(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceWarning(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceWarning (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceWarning(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member TraceWarning : string -&gt; unit" Usage="System.Diagnostics.Trace.TraceWarning message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8f45c-325">書き込む情報メッセージ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-325">The informative message to write.</span></span></param>
        <summary><span data-ttu-id="8f45c-326">指定されたメッセージを使用して、警告メッセージを <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-326">Writes a warning message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-327"><xref:System.Diagnostics.Trace.TraceWarning%2A> 呼び出し、`TraceEvent`トレース イベントの種類では、各トレース リスナーにメソッド<xref:System.Diagnostics.TraceEventType.Warning>、情報メッセージをメッセージの文字列として渡します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-327"><xref:System.Diagnostics.Trace.TraceWarning%2A> calls the `TraceEvent` method for each trace listener with the trace event type <xref:System.Diagnostics.TraceEventType.Warning>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceWarning">
      <MemberSignature Language="C#" Value="public static void TraceWarning (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceWarning(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceWarning (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceWarning(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member TraceWarning : string * obj[] -&gt; unit" Usage="System.Diagnostics.Trace.TraceWarning (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="8f45c-328">0 個以上の書式項目を格納している書式指定文字列。<paramref name="args" /> 配列内のオブジェクトに対応します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-328">A format string that contains zero or more format items, which correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="8f45c-329">0 個以上の書式設定対象オブジェクトを含んだ <see langword="object" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="8f45c-329">An <see langword="object" /> array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="8f45c-330">指定されたオブジェクトの配列および書式設定情報を使用して、<see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに警告メッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-330">Writes a warning message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-331"><xref:System.Diagnostics.Trace.TraceWarning%2A> 呼び出し、`TraceEvent`トレース イベントの種類のトレース リスナーにメソッド<xref:System.Diagnostics.TraceEventType.Warning>メッセージの内容を書式設定情報をオブジェクトの配列として渡すことです。</span><span class="sxs-lookup"><span data-stu-id="8f45c-331"><xref:System.Diagnostics.Trace.TraceWarning%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Warning>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="8f45c-332">参照してください、<xref:System.String.Format%2A>メソッドの詳細については、`format`と`args`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="8f45c-332">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Unindent">
      <MemberSignature Language="C#" Value="public static void Unindent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unindent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Unindent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unindent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unindent();" />
      <MemberSignature Language="F#" Value="static member Unindent : unit -&gt; unit" Usage="System.Diagnostics.Trace.Unindent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f45c-333">現在の <see cref="P:System.Diagnostics.Trace.IndentLevel" /> を 1 だけ減らします。</span><span class="sxs-lookup"><span data-stu-id="8f45c-333">Decreases the current <see cref="P:System.Diagnostics.Trace.IndentLevel" /> by one.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8f45c-334">次の例をインクリメントおよびデクリメント インデント レベルのトレース メッセージが出力されます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-334">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="8f45c-335">この例を実行すると、次の出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-335">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Trace.Indent" />
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="UseGlobalLock">
      <MemberSignature Language="C#" Value="public static bool UseGlobalLock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseGlobalLock" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.UseGlobalLock" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property UseGlobalLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool UseGlobalLock { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseGlobalLock : bool with get, set" Usage="System.Diagnostics.Trace.UseGlobalLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f45c-336">グローバル ロックを使用するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-336">Gets or sets a value indicating whether the global lock should be used.</span></span></summary>
        <value><span data-ttu-id="8f45c-337">グローバル ロックを使用する場合、<see langword="true" />。それ以外の場合、<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8f45c-337"><see langword="true" /> if the global lock is to be used; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8f45c-338">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="8f45c-338">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-339">グローバル ロックは常にトレース リスナーがスレッド セーフの値に関係なくではない場合に使用<xref:System.Diagnostics.Trace.UseGlobalLock%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-339">The global lock is always used if the trace listener is not thread safe, regardless of the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A>.</span></span> <span data-ttu-id="8f45c-340"><xref:System.Diagnostics.TraceListener.IsThreadSafe%2A>プロパティを使用して、リスナーがスレッド セーフであるかを判断します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-340">The <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> property is used to determine if the listener is thread safe.</span></span> <span data-ttu-id="8f45c-341">場合にのみ、グローバル ロックは使用されませんの値<xref:System.Diagnostics.Trace.UseGlobalLock%2A>は`false`の値と<xref:System.Diagnostics.TraceListener.IsThreadSafe%2A>は`true`します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-341">The global lock is not used only if the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A> is `false` and the value of <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> is `true`.</span></span> <span data-ttu-id="8f45c-342">既定の動作では、グローバル ロックを使用します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-342">The default behavior is to use the global lock.</span></span>  
  
 <span data-ttu-id="8f45c-343">設定する、<xref:System.Diagnostics.Trace.UseGlobalLock%2A>の<xref:System.Diagnostics.Trace>アプリケーションの名前に対応する構成ファイルを編集することもできます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-343">To set the <xref:System.Diagnostics.Trace.UseGlobalLock%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="8f45c-344">構成ファイルは、次の例のような形式にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="8f45c-344">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace useGlobalLock="false" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="8f45c-345">アンマネージ コードと運用します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-345">for operating with unmanaged code.</span></span> <span data-ttu-id="8f45c-346">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-346">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="8f45c-347">関連付けられた列挙体。  <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="8f45c-347">Associated enumeration:  <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8f45c-348">トレースについての情報を <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-348">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Write : obj -&gt; unit" Usage="System.Diagnostics.Trace.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8f45c-349">名前が <see cref="P:System.Diagnostics.Trace.Listeners" /> に送信される <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="8f45c-349">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <summary><span data-ttu-id="8f45c-350">オブジェクトの <see cref="M:System.Object.ToString" /> メソッドの値を <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-350">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-351">インスタンスに既定では、出力が書き込まれる<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-351">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="8f45c-352">このメソッドは、<xref:System.Diagnostics.TraceListener.Write%2A>トレース リスナのメソッド。</span><span class="sxs-lookup"><span data-stu-id="8f45c-352">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f45c-353">ASP.NET は、Web ページ向けのトレース機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-353">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="8f45c-354">ASP.NET ページのトレース メッセージを書き込むには使用、<xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-354">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="8f45c-355">既定では、ASP.NET Web ページで、ステートメントに関連付けられているコードで`Trace.Write("...")`への呼び出し、<xref:System.Web.TraceContext.Write%2A>のメソッド、<xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-355">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="8f45c-356">使用する、<xref:System.Diagnostics.Trace?displayProperty=nameWithType>クラスの Web ページでする必要があります、名前空間では、たとえば、`System.Diagnostics.Trace.Write("...")`します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-356">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-357">次の例では、作成、<xref:System.Diagnostics.TraceSwitch>という`generalSwitch`します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-357">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="8f45c-358">このスイッチは、コード サンプルの外部に設定されています。</span><span class="sxs-lookup"><span data-stu-id="8f45c-358">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="8f45c-359">スイッチ設定されている場合、 <xref:System.Diagnostics.TraceLevel> `Error`以降では、最初の名前の出力例では、または、`value`パラメーターを<xref:System.Diagnostics.Trace.Listeners%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-359">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the `value` parameter to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="8f45c-360">リスナーを追加する方法について、 <xref:System.Diagnostics.Trace.Listeners%2A> 、コレクションを参照してください、<xref:System.Diagnostics.TraceListenerCollection>クラス。</span><span class="sxs-lookup"><span data-stu-id="8f45c-360">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="8f45c-361">その後、if、<xref:System.Diagnostics.TraceLevel>に設定されている`Verbose`例では、最初のメッセージと同じ行にメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-361">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="8f45c-362">2 番目のメッセージには、行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-362">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Write : string -&gt; unit" Usage="System.Diagnostics.Trace.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8f45c-363">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-363">A message to write.</span></span></param>
        <summary><span data-ttu-id="8f45c-364"><see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-364">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-365">インスタンスに既定では、出力が書き込まれる<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-365">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="8f45c-366">このメソッドは、<xref:System.Diagnostics.TraceListener.Write%2A>トレース リスナのメソッド。</span><span class="sxs-lookup"><span data-stu-id="8f45c-366">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f45c-367">ASP.NET は、Web ページ向けのトレース機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-367">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="8f45c-368">ASP.NET ページのトレース メッセージを書き込むには使用、<xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-368">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="8f45c-369">既定では、ASP.NET Web ページで、ステートメントに関連付けられているコードで`Trace.Write("...")`への呼び出し、<xref:System.Web.TraceContext.Write%2A>のメソッド、<xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-369">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="8f45c-370">使用する、<xref:System.Diagnostics.Trace?displayProperty=nameWithType>クラスの Web ページでする必要があります、名前空間では、たとえば、`System.Diagnostics.Trace.Write("...")`します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-370">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-371">次の例では、作成、<xref:System.Diagnostics.TraceSwitch>という`generalSwitch`します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-371">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="8f45c-372">このスイッチは、コード サンプルの外部に設定されています。</span><span class="sxs-lookup"><span data-stu-id="8f45c-372">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="8f45c-373">スイッチ設定されている場合、 <xref:System.Diagnostics.TraceLevel> `Error`以降では、最初のエラー メッセージの出力例では、または、<xref:System.Diagnostics.Trace.Listeners%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-373">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="8f45c-374">リスナーを追加する方法について、 <xref:System.Diagnostics.Trace.Listeners%2A> 、コレクションを参照してください、<xref:System.Diagnostics.TraceListenerCollection>クラス。</span><span class="sxs-lookup"><span data-stu-id="8f45c-374">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="8f45c-375">その後、if、<xref:System.Diagnostics.TraceLevel>に設定されている`Verbose`例では、最初のメッセージと同じ行に 2 つ目のエラー メッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-375">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="8f45c-376">行終端記号では、2 番目のメッセージに従います。</span><span class="sxs-lookup"><span data-stu-id="8f45c-376">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Trace.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member Write : obj * string -&gt; unit" Usage="System.Diagnostics.Trace.Write (value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8f45c-377"><see cref="T:System.Object" /> の名前は <see cref="P:System.Diagnostics.Trace.Listeners" /> に送信されます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-377">An <see cref="T:System.Object" /> name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <param name="category"><span data-ttu-id="8f45c-378">出力を編成するために使用するカテゴリ名。</span><span class="sxs-lookup"><span data-stu-id="8f45c-378">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="8f45c-379">カテゴリ名とオブジェクトの <see cref="M:System.Object.ToString" /> メソッドの値を <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-379">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-380">インスタンスに既定では、出力が書き込まれる<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-380">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="8f45c-381">`category`出力メッセージをグループ化するパラメーターを使用できます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-381">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="8f45c-382">このメソッドは、<xref:System.Diagnostics.TraceListener.Write%2A>トレース リスナのメソッド。</span><span class="sxs-lookup"><span data-stu-id="8f45c-382">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f45c-383">ASP.NET は、Web ページ向けのトレース機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-383">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="8f45c-384">ASP.NET ページのトレース メッセージを書き込むには使用、<xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-384">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="8f45c-385">既定では、ASP.NET Web ページで、ステートメントに関連付けられているコードで`Trace.Write("...")`への呼び出し、<xref:System.Web.TraceContext.Write%2A>のメソッド、<xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-385">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="8f45c-386">使用する、<xref:System.Diagnostics.Trace?displayProperty=nameWithType>クラスの Web ページでする必要があります、名前空間では、たとえば、`System.Diagnostics.Trace.Write("...")`します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-386">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-387">次の例では、作成、<xref:System.Diagnostics.TraceSwitch>という`generalSwitch`します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-387">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="8f45c-388">このスイッチは、コード サンプルの外部に設定されています。</span><span class="sxs-lookup"><span data-stu-id="8f45c-388">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="8f45c-389">スイッチ設定されている場合、 <xref:System.Diagnostics.TraceLevel> `Verbose`、例では、出力の名前、`myObject`と`category`を<xref:System.Diagnostics.Trace.Listeners%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-389">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="8f45c-390">リスナーを追加する方法について、 <xref:System.Diagnostics.Trace.Listeners%2A> 、コレクションを参照してください、<xref:System.Diagnostics.TraceListenerCollection>クラス。</span><span class="sxs-lookup"><span data-stu-id="8f45c-390">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="8f45c-391">その後、if、<xref:System.Diagnostics.TraceLevel>に設定されている`Error`または以降では、最初のメッセージと同じ行に 2 つ目のエラー メッセージの出力例では、します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-391">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="8f45c-392">2 番目のメッセージには、行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-392">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member Write : string * string -&gt; unit" Usage="System.Diagnostics.Trace.Write (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8f45c-393">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-393">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="8f45c-394">出力を編成するために使用するカテゴリ名。</span><span class="sxs-lookup"><span data-stu-id="8f45c-394">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="8f45c-395">カテゴリ名とメッセージを <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-395">Writes a category name and a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-396">インスタンスに既定では、出力が書き込まれる<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-396">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="8f45c-397">`category`出力メッセージをグループ化するパラメーターを使用できます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-397">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="8f45c-398">このメソッドは、<xref:System.Diagnostics.TraceListener.Write%2A>トレース リスナのメソッド。</span><span class="sxs-lookup"><span data-stu-id="8f45c-398">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f45c-399">ASP.NET は、Web ページ向けのトレース機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-399">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="8f45c-400">ASP.NET ページのトレース メッセージを書き込むには使用、<xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-400">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="8f45c-401">既定では、ASP.NET Web ページで、ステートメントに関連付けられているコードで`Trace.Write("...")`への呼び出し、<xref:System.Web.TraceContext.Write%2A>のメソッド、<xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-401">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="8f45c-402">使用する、<xref:System.Diagnostics.Trace?displayProperty=nameWithType>クラスの Web ページでする必要があります、名前空間では、たとえば、`System.Diagnostics.Trace.Write("...")`します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-402">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-403">次の例では、作成、<xref:System.Diagnostics.TraceSwitch>という`generalSwitch`します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-403">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="8f45c-404">このスイッチは、コード サンプルの外部に設定されています。</span><span class="sxs-lookup"><span data-stu-id="8f45c-404">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="8f45c-405">スイッチ設定されている場合、 <xref:System.Diagnostics.TraceLevel> `Verbose`、例では、出力には、最初のエラー メッセージ、<xref:System.Diagnostics.Trace.Listeners%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-405">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="8f45c-406">リスナーを追加する方法について、 <xref:System.Diagnostics.Trace.Listeners%2A> 、コレクションを参照してください、<xref:System.Diagnostics.TraceListenerCollection>クラス。</span><span class="sxs-lookup"><span data-stu-id="8f45c-406">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="8f45c-407">その後、if、<xref:System.Diagnostics.TraceLevel>に設定されている`Error`または以降では、最初のメッセージと同じ行に 2 つ目のエラー メッセージの出力例では、します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-407">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="8f45c-408">2 番目のメッセージには、行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-408">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8f45c-409">条件が <see langword="true" /> の場合、トレースについての情報を <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-409">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * obj -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="8f45c-410">メッセージが書き込まれるようにするには <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8f45c-410"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="value"><span data-ttu-id="8f45c-411">名前が <see cref="P:System.Diagnostics.Trace.Listeners" /> に送信される <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="8f45c-411">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <summary><span data-ttu-id="8f45c-412">条件が <see langword="true" /> の場合、オブジェクトの <see cref="M:System.Object.ToString" /> メソッドの値を <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-412">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-413">インスタンスに既定では、出力が書き込まれる<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-413">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="8f45c-414">このメソッドは、<xref:System.Diagnostics.TraceListener.Write%2A>トレース リスナのメソッド。</span><span class="sxs-lookup"><span data-stu-id="8f45c-414">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-415">次の例では、作成、<xref:System.Diagnostics.TraceSwitch>という`generalSwitch`します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-415">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="8f45c-416">このスイッチは、コード サンプルの外部に設定されています。</span><span class="sxs-lookup"><span data-stu-id="8f45c-416">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="8f45c-417">スイッチ設定されている場合、 <xref:System.Diagnostics.TraceLevel> `Error`以降では、値パラメーターの最初の名前の出力例では、または、<xref:System.Diagnostics.Trace.Listeners%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-417">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the value parameter to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="8f45c-418">リスナーを追加する方法について、 <xref:System.Diagnostics.Trace.Listeners%2A> 、コレクションを参照してください、<xref:System.Diagnostics.TraceListenerCollection>クラス。</span><span class="sxs-lookup"><span data-stu-id="8f45c-418">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="8f45c-419">その後、if、<xref:System.Diagnostics.TraceLevel>に設定されている`Verbose`例では、最初のメッセージと同じ行にメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-419">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="8f45c-420">2 番目のメッセージには、行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-420">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8f45c-421">使用して、アプリケーションをインストルメント化のパフォーマンスの低下を最小限に抑えることができます<see langword="If...Then" />ステートメントを使用してではなく<see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />ステートメント。</span><span class="sxs-lookup"><span data-stu-id="8f45c-421">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="8f45c-422">次の 2 つのコード例では、同じデバッグ メッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-422">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="8f45c-423">ただし、最初の例がはるかに高速トレースがオフ場合<c>である</c>に評価される<see langword="false" />呼び出さないでください<see cref="M:System.Diagnostics.Trace.Write(System.String)" />します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-423">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span></span> <span data-ttu-id="8f45c-424">2 番目の例では常に<see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />場合でも、<c>である</c>は<see langword="false" />およびトレース出力は生成されません。</span><span class="sxs-lookup"><span data-stu-id="8f45c-424">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="8f45c-425">これは、結果、任意の複雑なコードの不要な実行。</span><span class="sxs-lookup"><span data-stu-id="8f45c-425">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="8f45c-426">**最初の例**</span><span class="sxs-lookup"><span data-stu-id="8f45c-426">**First example**</span></span>  
  
```csharp  
if(mySwitch.TraceError)   
    Trace.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="8f45c-427">**2 番目の例**</span><span class="sxs-lookup"><span data-stu-id="8f45c-427">**Second example**</span></span>  
  
```csharp  
Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="8f45c-428">メッセージが書き込まれるようにするには <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8f45c-428"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="message"><span data-ttu-id="8f45c-429">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-429">A message to write.</span></span></param>
        <summary><span data-ttu-id="8f45c-430">条件が <see langword="true" /> である場合、メッセージを <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-430">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-431">インスタンスに既定では、出力が書き込まれる<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-431">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="8f45c-432">このメソッドは、<xref:System.Diagnostics.TraceListener.Write%2A>トレース リスナのメソッド。</span><span class="sxs-lookup"><span data-stu-id="8f45c-432">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-433">次の例では、作成、<xref:System.Diagnostics.TraceSwitch>という`generalSwitch`します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-433">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="8f45c-434">このスイッチは、コード サンプルの外部に設定されています。</span><span class="sxs-lookup"><span data-stu-id="8f45c-434">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="8f45c-435">スイッチ設定されている場合、 <xref:System.Diagnostics.TraceLevel> `Error`以降では、最初のエラー メッセージの出力例では、または、<xref:System.Diagnostics.Trace.Listeners%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-435">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="8f45c-436">リスナーを追加する方法について、 <xref:System.Diagnostics.Trace.Listeners%2A> 、コレクションを参照してください、<xref:System.Diagnostics.TraceListenerCollection>クラス。</span><span class="sxs-lookup"><span data-stu-id="8f45c-436">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="8f45c-437">その後、if、<xref:System.Diagnostics.TraceLevel>に設定されている`Verbose`例では、最初のメッセージと同じ行に 2 つ目のエラー メッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-437">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="8f45c-438">2 番目のメッセージには、行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-438">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8f45c-439">使用して、アプリケーションをインストルメント化のパフォーマンスの低下を最小限に抑えることができます<see langword="If...Then" />ステートメントを使用してではなく<see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />ステートメント。</span><span class="sxs-lookup"><span data-stu-id="8f45c-439">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="8f45c-440">次の 2 つのコード例では、同じデバッグ メッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-440">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="8f45c-441">ただし、最初の例がはるかに高速トレースがオフ場合<c>である</c>に評価される<see langword="false" />呼び出さないでください<see cref="M:System.Diagnostics.Trace.Write(System.String)" />します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-441">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span></span> <span data-ttu-id="8f45c-442">2 番目の例では常に<see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />場合でも、<c>である</c>は<see langword="false" />およびトレース出力は生成されません。</span><span class="sxs-lookup"><span data-stu-id="8f45c-442">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="8f45c-443">これは、結果、任意の複雑なコードの不要な実行。</span><span class="sxs-lookup"><span data-stu-id="8f45c-443">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="8f45c-444">**最初の例**</span><span class="sxs-lookup"><span data-stu-id="8f45c-444">**First example**</span></span>  
  
```csharp  
if(mySwitch.TraceError)   
    Trace.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="8f45c-445">**2 番目の例**</span><span class="sxs-lookup"><span data-stu-id="8f45c-445">**Second example**</span></span>  
  
```csharp  
Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * obj * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="8f45c-446">メッセージが書き込まれるようにするには <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8f45c-446"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="value"><span data-ttu-id="8f45c-447">名前が <see cref="P:System.Diagnostics.Trace.Listeners" /> に送信される <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="8f45c-447">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <param name="category"><span data-ttu-id="8f45c-448">出力を編成するために使用するカテゴリ名。</span><span class="sxs-lookup"><span data-stu-id="8f45c-448">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="8f45c-449">条件が <see langword="true" /> の場合は、カテゴリ名とオブジェクトの <see cref="M:System.Object.ToString" /> メソッドの値を <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-449">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-450">インスタンスに既定では、出力が書き込まれる<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-450">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="8f45c-451">`category`出力メッセージをグループ化するパラメーターを使用できます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-451">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="8f45c-452">このメソッドは、<xref:System.Diagnostics.TraceListener.Write%2A>トレース リスナのメソッド。</span><span class="sxs-lookup"><span data-stu-id="8f45c-452">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-453">次の例では、作成、<xref:System.Diagnostics.TraceSwitch>という`generalSwitch`します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-453">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="8f45c-454">このスイッチは、コード サンプルの外部に設定されています。</span><span class="sxs-lookup"><span data-stu-id="8f45c-454">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="8f45c-455">スイッチ設定されている場合、 <xref:System.Diagnostics.TraceLevel> `Verbose`、例では、出力の名前、`myObject`と`category`を<xref:System.Diagnostics.Trace.Listeners%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-455">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="8f45c-456">リスナーを追加する方法について、 <xref:System.Diagnostics.Trace.Listeners%2A> 、コレクションを参照してください、<xref:System.Diagnostics.TraceListenerCollection>クラス。</span><span class="sxs-lookup"><span data-stu-id="8f45c-456">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="8f45c-457">その後、if、<xref:System.Diagnostics.TraceLevel>に設定されている`Error`または以降では、最初のメッセージと同じ行に 2 つ目のエラー メッセージの出力例では、します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-457">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="8f45c-458">2 番目のメッセージには、行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-458">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8f45c-459">使用して、アプリケーションをインストルメント化のパフォーマンスの低下を最小限に抑えることができます<see langword="If...Then" />ステートメントを使用してではなく<see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />ステートメント。</span><span class="sxs-lookup"><span data-stu-id="8f45c-459">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="8f45c-460">次の 2 つのコード例では、同じデバッグ メッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-460">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="8f45c-461">ただし、最初の例がはるかに高速トレースがオフ場合<c>である</c>に評価される<see langword="false" />呼び出さないでください<see cref="M:System.Diagnostics.Trace.Write(System.String)" />します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-461">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span></span> <span data-ttu-id="8f45c-462">2 番目の例では常に<see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />場合でも、<c>である</c>は<see langword="false" />およびトレース出力は生成されません。</span><span class="sxs-lookup"><span data-stu-id="8f45c-462">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="8f45c-463">これは、結果、任意の複雑なコードの不要な実行。</span><span class="sxs-lookup"><span data-stu-id="8f45c-463">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="8f45c-464">**最初の例**</span><span class="sxs-lookup"><span data-stu-id="8f45c-464">**First example**</span></span>  
  
```csharp  
if(mySwitch.TraceError)   
    Trace.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="8f45c-465">**2 番目の例**</span><span class="sxs-lookup"><span data-stu-id="8f45c-465">**Second example**</span></span>  
  
```csharp  
Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * string * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="8f45c-466">メッセージが書き込まれるようにするには <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8f45c-466"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="message"><span data-ttu-id="8f45c-467">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-467">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="8f45c-468">出力を編成するために使用するカテゴリ名。</span><span class="sxs-lookup"><span data-stu-id="8f45c-468">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="8f45c-469">条件が <see langword="true" /> である場合、カテゴリ名とメッセージを <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-469">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-470">インスタンスに既定では、出力が書き込まれる<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-470">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="8f45c-471">`category`出力メッセージをグループ化するパラメーターを使用できます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-471">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="8f45c-472">このメソッドは、<xref:System.Diagnostics.TraceListener.Write%2A>トレース リスナのメソッド。</span><span class="sxs-lookup"><span data-stu-id="8f45c-472">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-473">次の例では、作成、<xref:System.Diagnostics.TraceSwitch>という`generalSwitch`します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-473">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="8f45c-474">このスイッチは、コード サンプルの外部に設定されています。</span><span class="sxs-lookup"><span data-stu-id="8f45c-474">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="8f45c-475">スイッチ設定されている場合、 <xref:System.Diagnostics.TraceLevel> `Verbose`、例では、出力には、最初のエラー メッセージ、<xref:System.Diagnostics.Trace.Listeners%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-475">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="8f45c-476">リスナーを追加する方法について、 <xref:System.Diagnostics.Trace.Listeners%2A> 、コレクションを参照してください、<xref:System.Diagnostics.TraceListenerCollection>クラス。</span><span class="sxs-lookup"><span data-stu-id="8f45c-476">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="8f45c-477">その後、if、<xref:System.Diagnostics.TraceLevel>に設定されている`Error`または以降では、最初のメッセージと同じ行に 2 つ目のエラー メッセージの出力例では、します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-477">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="8f45c-478">2 番目のメッセージには、行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-478">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8f45c-479">使用して、アプリケーションをインストルメント化のパフォーマンスの低下を最小限に抑えることができます<see langword="If...Then" />ステートメントを使用してではなく<see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />ステートメント。</span><span class="sxs-lookup"><span data-stu-id="8f45c-479">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="8f45c-480">次の 2 つのコード例では、同じデバッグ メッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-480">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="8f45c-481">ただし、最初の例がはるかに高速トレースがオフ場合<c>である</c>に評価される<see langword="false" />呼び出さないでください<see cref="M:System.Diagnostics.Trace.Write(System.String)" />します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-481">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span></span> <span data-ttu-id="8f45c-482">2 番目の例では常に<see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />場合でも、<c>である</c>は<see langword="false" />およびトレース出力は生成されません。</span><span class="sxs-lookup"><span data-stu-id="8f45c-482">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="8f45c-483">これは、結果、任意の複雑なコードの不要な実行。</span><span class="sxs-lookup"><span data-stu-id="8f45c-483">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="8f45c-484">**最初の例**</span><span class="sxs-lookup"><span data-stu-id="8f45c-484">**First example**</span></span>  
  
```csharp  
if(mySwitch.TraceError)   
    Trace.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="8f45c-485">**2 番目の例**</span><span class="sxs-lookup"><span data-stu-id="8f45c-485">**Second example**</span></span>  
  
```csharp  
Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8f45c-486">トレースについての情報を <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-486">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8f45c-487">名前が <see cref="P:System.Diagnostics.Trace.Listeners" /> に送信される <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="8f45c-487">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <summary><span data-ttu-id="8f45c-488">オブジェクトの <see cref="M:System.Object.ToString" /> メソッドの値を <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-488">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-489">インスタンスに既定では、出力が書き込まれる<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-489">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="8f45c-490">このメソッドは、<xref:System.Diagnostics.TraceListener.WriteLine%2A>トレース リスナのメソッド。</span><span class="sxs-lookup"><span data-stu-id="8f45c-490">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-491">次の例では、作成、<xref:System.Diagnostics.TraceSwitch>という`generalSwitch`します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-491">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="8f45c-492">このスイッチは、コード サンプルの外部に設定されています。</span><span class="sxs-lookup"><span data-stu-id="8f45c-492">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="8f45c-493">スイッチ設定されている場合、 <xref:System.Diagnostics.TraceLevel> `Error`以降では、最初のエラー メッセージの出力例では、または、<xref:System.Diagnostics.Trace.Listeners%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-493">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="8f45c-494">リスナーを追加する方法について、 <xref:System.Diagnostics.Trace.Listeners%2A> 、コレクションを参照してください、<xref:System.Diagnostics.TraceListenerCollection>クラス。</span><span class="sxs-lookup"><span data-stu-id="8f45c-494">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="8f45c-495">その後、if、<xref:System.Diagnostics.TraceLevel>に設定されている`Verbose`例では、最初のメッセージと同じ行にオブジェクトの名前を出力します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-495">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="8f45c-496">2 番目のメッセージには、行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-496">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8f45c-497">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-497">A message to write.</span></span></param>
        <summary><span data-ttu-id="8f45c-498"><see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-498">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-499">インスタンスに既定では、出力が書き込まれる<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-499">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="8f45c-500">このメソッドは、<xref:System.Diagnostics.TraceListener.WriteLine%2A>トレース リスナのメソッド。</span><span class="sxs-lookup"><span data-stu-id="8f45c-500">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-501">次の例では、作成、<xref:System.Diagnostics.TraceSwitch>という`generalSwitch`します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-501">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="8f45c-502">このスイッチは、コード サンプルの外部に設定されています。</span><span class="sxs-lookup"><span data-stu-id="8f45c-502">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="8f45c-503">スイッチ設定されている場合、 <xref:System.Diagnostics.TraceLevel> `Error`以降では、最初のエラー メッセージの出力例では、または、<xref:System.Diagnostics.Trace.Listeners%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-503">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="8f45c-504">リスナーを追加する方法について、 <xref:System.Diagnostics.Trace.Listeners%2A> 、コレクションを参照してください、<xref:System.Diagnostics.TraceListenerCollection>クラス。</span><span class="sxs-lookup"><span data-stu-id="8f45c-504">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="8f45c-505">その後、if、<xref:System.Diagnostics.TraceLevel>に設定されている`Verbose`例では、最初のメッセージと同じ行に 2 つ目のエラー メッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-505">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="8f45c-506">2 番目のメッセージには、行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-506">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine (value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8f45c-507">名前が <see cref="P:System.Diagnostics.Trace.Listeners" /> に送信される <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="8f45c-507">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <param name="category"><span data-ttu-id="8f45c-508">出力を編成するために使用するカテゴリ名。</span><span class="sxs-lookup"><span data-stu-id="8f45c-508">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="8f45c-509">カテゴリ名とオブジェクトの <see cref="M:System.Object.ToString" /> メソッドの値を <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-509">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-510">インスタンスに既定では、出力が書き込まれる<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-510">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="8f45c-511">`category`出力メッセージをグループ化するパラメーターを使用できます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-511">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="8f45c-512">このメソッドは、<xref:System.Diagnostics.TraceListener.WriteLine%2A>トレース リスナのメソッド。</span><span class="sxs-lookup"><span data-stu-id="8f45c-512">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-513">次の例では、作成、<xref:System.Diagnostics.TraceSwitch>という`generalSwitch`します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-513">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="8f45c-514">このスイッチは、コード サンプルの外部に設定されています。</span><span class="sxs-lookup"><span data-stu-id="8f45c-514">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="8f45c-515">スイッチ設定されている場合、 <xref:System.Diagnostics.TraceLevel> `Error`以降では、最初のエラー メッセージの出力例では、または、<xref:System.Diagnostics.Trace.Listeners%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-515">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="8f45c-516">リスナーを追加する方法について、 <xref:System.Diagnostics.Trace.Listeners%2A> 、コレクションを参照してください、<xref:System.Diagnostics.TraceListenerCollection>クラス。</span><span class="sxs-lookup"><span data-stu-id="8f45c-516">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="8f45c-517">その後、if、<xref:System.Diagnostics.TraceLevel>に設定されている`Verbose`例では、最初のメッセージと同じ行に 2 つ目のエラー メッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-517">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="8f45c-518">2 番目のメッセージには、行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-518">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8f45c-519">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-519">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="8f45c-520">出力を編成するために使用するカテゴリ名。</span><span class="sxs-lookup"><span data-stu-id="8f45c-520">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="8f45c-521">カテゴリ名とメッセージを <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-521">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-522">インスタンスに既定では、出力が書き込まれる<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-522">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="8f45c-523">`category`出力メッセージをグループ化するパラメーターを使用できます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-523">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="8f45c-524">このメソッドは、<xref:System.Diagnostics.TraceListener.WriteLine%2A>トレース リスナのメソッド。</span><span class="sxs-lookup"><span data-stu-id="8f45c-524">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-525">次の例では、作成、<xref:System.Diagnostics.TraceSwitch>という`generalSwitch`します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-525">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="8f45c-526">このスイッチは、コード サンプルの外部に設定されています。</span><span class="sxs-lookup"><span data-stu-id="8f45c-526">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="8f45c-527">スイッチ設定されている場合、 <xref:System.Diagnostics.TraceLevel> `Error`以降では、最初のエラー メッセージの出力例では、または、<xref:System.Diagnostics.Trace.Listeners%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-527">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="8f45c-528">リスナーを追加する方法について、 <xref:System.Diagnostics.Trace.Listeners%2A> 、コレクションを参照してください、<xref:System.Diagnostics.TraceListenerCollection>クラス。</span><span class="sxs-lookup"><span data-stu-id="8f45c-528">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="8f45c-529">場合はその後、<xref:System.Diagnostics.TraceLevel>に設定されている`Verbose`、例では、2 番目のエラー メッセージを出力して、`category`最初のメッセージと同じ行にします。</span><span class="sxs-lookup"><span data-stu-id="8f45c-529">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="8f45c-530">2 番目のメッセージには、行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-530">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8f45c-531">条件が <see langword="true" /> の場合、トレースについての情報を <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-531">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * obj -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="8f45c-532">メッセージが書き込まれるようにするには <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8f45c-532"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="value"><span data-ttu-id="8f45c-533">名前が <see cref="P:System.Diagnostics.Trace.Listeners" /> に送信される <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="8f45c-533">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <summary><span data-ttu-id="8f45c-534">条件が <see langword="true" /> の場合、オブジェクトの <see cref="M:System.Object.ToString" /> メソッドの値を <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-534">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-535">インスタンスに既定では、出力が書き込まれる<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-535">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="8f45c-536">このメソッドは、<xref:System.Diagnostics.TraceListener.WriteLine%2A>トレース リスナのメソッド。</span><span class="sxs-lookup"><span data-stu-id="8f45c-536">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-537">次の例では、作成、<xref:System.Diagnostics.TraceSwitch>という`generalSwitch`します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-537">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="8f45c-538">このスイッチは、コード サンプルの外部に設定されています。</span><span class="sxs-lookup"><span data-stu-id="8f45c-538">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="8f45c-539">スイッチ設定されている場合、 <xref:System.Diagnostics.TraceLevel> `Error`以降では、最初のエラー メッセージの出力例では、または、<xref:System.Diagnostics.Trace.Listeners%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-539">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="8f45c-540">リスナーを追加する方法について、 <xref:System.Diagnostics.Trace.Listeners%2A> 、コレクションを参照してください、<xref:System.Diagnostics.TraceListenerCollection>クラス。</span><span class="sxs-lookup"><span data-stu-id="8f45c-540">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="8f45c-541">その後、if、<xref:System.Diagnostics.TraceLevel>に設定されている`Verbose`例では、最初のメッセージと同じ行にオブジェクトの名前を出力します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-541">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="8f45c-542">2 番目のメッセージには、行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-542">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8f45c-543">使用して、アプリケーションをインストルメント化のパフォーマンスの低下を最小限に抑えることができます<see langword="If...Then" />ステートメントを使用してではなく<see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />ステートメント。</span><span class="sxs-lookup"><span data-stu-id="8f45c-543">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="8f45c-544">次の 2 つのコード例では、同じデバッグ メッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-544">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="8f45c-545">ただし、最初の例がはるかに高速トレースがオフ場合<c>である</c>に評価される<see langword="false" />呼び出さないでください<see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-545">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span></span> <span data-ttu-id="8f45c-546">2 番目の例では常に<see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />場合でも、<c>である</c>は<see langword="false" />およびトレース出力は生成されません。</span><span class="sxs-lookup"><span data-stu-id="8f45c-546">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="8f45c-547">これは、結果、任意の複雑なコードの不要な実行。</span><span class="sxs-lookup"><span data-stu-id="8f45c-547">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="8f45c-548">**最初の例**</span><span class="sxs-lookup"><span data-stu-id="8f45c-548">**First example**</span></span>  
  
```csharp  
if(mySwitch.TraceError)   
    Trace.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="8f45c-549">**2 番目の例**</span><span class="sxs-lookup"><span data-stu-id="8f45c-549">**Second example**</span></span>  
  
```csharp  
Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="8f45c-550">メッセージが書き込まれるようにするには <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8f45c-550"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="message"><span data-ttu-id="8f45c-551">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-551">A message to write.</span></span></param>
        <summary><span data-ttu-id="8f45c-552">条件が <see langword="true" /> である場合、メッセージを <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-552">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-553">インスタンスに既定では、出力が書き込まれる<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-553">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="8f45c-554">このメソッドは、<xref:System.Diagnostics.TraceListener.WriteLine%2A>トレース リスナのメソッド。</span><span class="sxs-lookup"><span data-stu-id="8f45c-554">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-555">次の例では、作成、<xref:System.Diagnostics.TraceSwitch>という`generalSwitch`します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-555">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="8f45c-556">このスイッチは、コード サンプルの外部に設定されています。</span><span class="sxs-lookup"><span data-stu-id="8f45c-556">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="8f45c-557">スイッチ設定されている場合、 <xref:System.Diagnostics.TraceLevel> `Error`以降では、最初のエラー メッセージの出力例では、または、<xref:System.Diagnostics.Trace.Listeners%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-557">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="8f45c-558">リスナーを追加する方法について、 <xref:System.Diagnostics.Trace.Listeners%2A> 、コレクションを参照してください、<xref:System.Diagnostics.TraceListenerCollection>クラス。</span><span class="sxs-lookup"><span data-stu-id="8f45c-558">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="8f45c-559">その後、if、<xref:System.Diagnostics.TraceLevel>に設定されている`Verbose`例では、最初のメッセージと同じ行に 2 つ目のエラー メッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-559">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="8f45c-560">2 番目のメッセージには、行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-560">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8f45c-561">使用して、アプリケーションをインストルメント化のパフォーマンスの低下を最小限に抑えることができます<see langword="If...Then" />ステートメントを使用してではなく<see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />ステートメント。</span><span class="sxs-lookup"><span data-stu-id="8f45c-561">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="8f45c-562">次の 2 つのコード例では、同じデバッグ メッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-562">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="8f45c-563">ただし、最初の例がはるかに高速トレースがオフ場合<c>である</c>に評価される<see langword="false" />呼び出さないでください<see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-563">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span></span> <span data-ttu-id="8f45c-564">2 番目の例では常に<see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />場合でも、<c>である</c>は<see langword="false" />およびトレース出力は生成されません。</span><span class="sxs-lookup"><span data-stu-id="8f45c-564">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="8f45c-565">これは、結果、任意の複雑なコードの不要な実行。</span><span class="sxs-lookup"><span data-stu-id="8f45c-565">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="8f45c-566">**最初の例**</span><span class="sxs-lookup"><span data-stu-id="8f45c-566">**First example**</span></span>  
  
```csharp  
if(mySwitch.TraceError)   
    Trace.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="8f45c-567">**2 番目の例**</span><span class="sxs-lookup"><span data-stu-id="8f45c-567">**Second example**</span></span>  
  
```csharp  
Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * obj * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="8f45c-568">メッセージが書き込まれるようにするには <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8f45c-568"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="value"><span data-ttu-id="8f45c-569">名前が <see cref="P:System.Diagnostics.Trace.Listeners" /> に送信される <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="8f45c-569">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <param name="category"><span data-ttu-id="8f45c-570">出力を編成するために使用するカテゴリ名。</span><span class="sxs-lookup"><span data-stu-id="8f45c-570">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="8f45c-571">条件が <see langword="true" /> の場合は、カテゴリ名とオブジェクトの <see cref="M:System.Object.ToString" /> メソッドの値を <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-571">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-572">インスタンスに既定では、出力が書き込まれる<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-572">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="8f45c-573">`category`出力メッセージをグループ化するパラメーターを使用できます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-573">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="8f45c-574">このメソッドは、<xref:System.Diagnostics.TraceListener.WriteLine%2A>トレース リスナのメソッド。</span><span class="sxs-lookup"><span data-stu-id="8f45c-574">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-575">次の例では、作成、<xref:System.Diagnostics.TraceSwitch>という`generalSwitch`します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-575">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="8f45c-576">このスイッチは、コード サンプルの外部に設定されています。</span><span class="sxs-lookup"><span data-stu-id="8f45c-576">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="8f45c-577">スイッチ設定されている場合、 <xref:System.Diagnostics.TraceLevel> `Error`以降では、最初のエラー メッセージの出力例では、または、<xref:System.Diagnostics.Trace.Listeners%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-577">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="8f45c-578">リスナーを追加する方法について、 <xref:System.Diagnostics.Trace.Listeners%2A> 、コレクションを参照してください、<xref:System.Diagnostics.TraceListenerCollection>クラス。</span><span class="sxs-lookup"><span data-stu-id="8f45c-578">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="8f45c-579">その後、if、<xref:System.Diagnostics.TraceLevel>に設定されている`Verbose`例では、最初のメッセージと同じ行に 2 つ目のエラー メッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-579">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="8f45c-580">2 番目のメッセージには、行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-580">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8f45c-581">使用して、アプリケーションをインストルメント化のパフォーマンスの低下を最小限に抑えることができます<see langword="If...Then" />ステートメントを使用してではなく<see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />ステートメント。</span><span class="sxs-lookup"><span data-stu-id="8f45c-581">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="8f45c-582">次の 2 つのコード例では、同じデバッグ メッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-582">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="8f45c-583">ただし、最初の例がはるかに高速トレースがオフ場合<c>である</c>に評価される<see langword="false" />呼び出さないでください<see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-583">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span></span> <span data-ttu-id="8f45c-584">2 番目の例では常に<see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />場合でも、<c>である</c>は<see langword="false" />およびトレース出力は生成されません。</span><span class="sxs-lookup"><span data-stu-id="8f45c-584">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="8f45c-585">これは、結果、任意の複雑なコードの不要な実行。</span><span class="sxs-lookup"><span data-stu-id="8f45c-585">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="8f45c-586">**最初の例**</span><span class="sxs-lookup"><span data-stu-id="8f45c-586">**First example**</span></span>  
  
```csharp  
if(mySwitch.TraceError)   
    Trace.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="8f45c-587">**2 番目の例**</span><span class="sxs-lookup"><span data-stu-id="8f45c-587">**Second example**</span></span>  
  
```csharp  
Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * string * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="8f45c-588">メッセージが書き込まれるようにするには <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8f45c-588"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="message"><span data-ttu-id="8f45c-589">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="8f45c-589">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="8f45c-590">出力を編成するために使用するカテゴリ名。</span><span class="sxs-lookup"><span data-stu-id="8f45c-590">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="8f45c-591">条件が <see langword="true" /> である場合、カテゴリ名とメッセージを <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-591">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f45c-592">インスタンスに既定では、出力が書き込まれる<xref:System.Diagnostics.DefaultTraceListener>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-592">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="8f45c-593">`category`出力メッセージをグループ化するパラメーターを使用できます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-593">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="8f45c-594">このメソッドは、<xref:System.Diagnostics.TraceListener.WriteLine%2A>トレース リスナのメソッド。</span><span class="sxs-lookup"><span data-stu-id="8f45c-594">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f45c-595">次の例では、作成、<xref:System.Diagnostics.TraceSwitch>という`generalSwitch`します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-595">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="8f45c-596">このスイッチは、コード サンプルの外部に設定されています。</span><span class="sxs-lookup"><span data-stu-id="8f45c-596">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="8f45c-597">スイッチ設定されている場合、 <xref:System.Diagnostics.TraceLevel> `Error`以降では、最初のエラー メッセージの出力例では、または、<xref:System.Diagnostics.Trace.Listeners%2A>します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-597">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="8f45c-598">リスナーを追加する方法について、 <xref:System.Diagnostics.Trace.Listeners%2A> 、コレクションを参照してください、<xref:System.Diagnostics.TraceListenerCollection>クラス。</span><span class="sxs-lookup"><span data-stu-id="8f45c-598">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="8f45c-599">場合はその後、<xref:System.Diagnostics.TraceLevel>に設定されている`Verbose`、例では、2 番目のエラー メッセージを出力して、`category`最初のメッセージと同じ行にします。</span><span class="sxs-lookup"><span data-stu-id="8f45c-599">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="8f45c-600">2 番目のメッセージには、行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="8f45c-600">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8f45c-601">使用して、アプリケーションをインストルメント化のパフォーマンスの低下を最小限に抑えることができます<see langword="If...Then" />ステートメントを使用してではなく<see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />ステートメント。</span><span class="sxs-lookup"><span data-stu-id="8f45c-601">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="8f45c-602">次の 2 つのコード例では、同じデバッグ メッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-602">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="8f45c-603">ただし、最初の例がはるかに高速トレースがオフ場合<c>である</c>に評価される<see langword="false" />呼び出さないでください<see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />します。</span><span class="sxs-lookup"><span data-stu-id="8f45c-603">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span></span> <span data-ttu-id="8f45c-604">2 番目の例では常に<see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />場合でも、<c>である</c>は<see langword="false" />およびトレース出力は生成されません。</span><span class="sxs-lookup"><span data-stu-id="8f45c-604">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="8f45c-605">これは、結果、任意の複雑なコードの不要な実行。</span><span class="sxs-lookup"><span data-stu-id="8f45c-605">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="8f45c-606">**最初の例**</span><span class="sxs-lookup"><span data-stu-id="8f45c-606">**First example**</span></span>  
  
```csharp  
if(mySwitch.TraceError)   
    Trace.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="8f45c-607">**2 番目の例**</span><span class="sxs-lookup"><span data-stu-id="8f45c-607">**Second example**</span></span>  
  
```csharp  
Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>