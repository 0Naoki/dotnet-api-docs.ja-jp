<Type Name="BooleanSwitch" FullName="System.Diagnostics.BooleanSwitch">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b58e7d34a5fb79c78b3d636524b0f55025244987" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48707831" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BooleanSwitch : System.Diagnostics.Switch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BooleanSwitch extends System.Diagnostics.Switch" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.BooleanSwitch" />
  <TypeSignature Language="VB.NET" Value="Public Class BooleanSwitch&#xA;Inherits Switch" />
  <TypeSignature Language="C++ CLI" Value="public ref class BooleanSwitch : System::Diagnostics::Switch" />
  <TypeSignature Language="F#" Value="type BooleanSwitch = class&#xA;    inherit Switch" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.Switch</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.SwitchLevel(typeof(System.Boolean))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>デバッグとトレースの出力を制御する単純なオン/オフの切り替え機能を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ブール型のトレース スイッチを使用するには有効または重要度に基づいてメッセージを無効にします。 使用して、<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>スイッチの現在の値を取得するプロパティ。  
  
 有効または無効にすることができます、<xref:System.Diagnostics.BooleanSwitch>を通じて、アプリケーション構成ファイルと、使用して、構成された<xref:System.Diagnostics.BooleanSwitch>アプリケーション内の値。 また、作成することができます、 <xref:System.Diagnostics.BooleanSwitch> 、コードとセットで、<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>コードの特定のセクションをインストルメント化するには、直接プロパティ。  
  
 構成する、<xref:System.Diagnostics.BooleanSwitch>アプリケーションの名前に対応する構成ファイルを編集します。 このファイルでことができますを追加またはスイッチの削除、スイッチの値を設定またはオフにするスイッチは以前、アプリケーションによって設定されたすべて。 構成ファイルは、次の例のように書式設定する必要があります。  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="1"/>  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
 この例の構成セクションを定義、<xref:System.Diagnostics.BooleanSwitch>で、<xref:System.Diagnostics.Switch.DisplayName%2A>プロパティに設定`mySwitch`と<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>値に設定`true`します。 作成して構成されているスイッチの値を使用する、アプリケーション内に、<xref:System.Diagnostics.BooleanSwitch>に次のコード例に示すように、同じ名前を持つ。  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/remarks.cs#2)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/remarks.vb#2)]  
  
 既定で、<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>構成ファイルで指定された値を使用してプロパティを設定します。 値 0 を設定すると、スイッチを構成、<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>プロパティを`false`; 0 以外の値を設定すると、スイッチを構成、<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>プロパティを`true`します。 場合、<xref:System.Diagnostics.BooleanSwitch>コンス トラクターは、構成ファイルでスイッチの初期設定を見つけることができません、<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>新しいスイッチのプロパティに設定されて`false`既定。  
  
 トレース出力またはスイッチを使用してデバッグを有効にする必要があります。 次の構文では、特定のコンパイラです。 C# または Visual Basic 以外のコンパイラを使用する場合は、コンパイラは、ドキュメントを参照してください。  
  
-   C# でのデバッグを有効にするには追加、`/d:DEBUG`するを追加したり、コードをコンパイルするときに、コンパイラのコマンドラインにフラグ`#define DEBUG`ファイルの先頭にします。 Visual basic では、追加、`/d:DEBUG=True`フラグをコンパイラ コマンドライン。  
  
-   C# でのトレースを有効にするには追加、`/d:TRACE`フラグをコードのコンパイルまたは追加するときに、コンパイラのコマンドライン`#define TRACE`ファイルの先頭にします。 Visual basic では、追加、`/d:TRACE=True`フラグをコンパイラ コマンドライン。  
  
> [!NOTE]
>  これらのデバッグし、トレースのコンパイラ スイッチを使用する場合は必要ありません、<xref:System.Diagnostics.BooleanSwitch>クラスに分離します。 組み合わせてのみに必要な<xref:System.Diagnostics.Trace>または<xref:System.Diagnostics.Debug>条件付きでコンパイルされるメソッド。  
  
 アプリケーションをインストルメント化の詳細については、次を参照してください。<xref:System.Diagnostics.Debug>と<xref:System.Diagnostics.Trace>します。 構成とトレース スイッチの使用に関する詳細については、次を参照してください。[トレース スイッチ](~/docs/framework/debug-trace-profile/trace-switches.md)します。  
  
> [!NOTE]
>  パフォーマンスを向上させるのには設定<xref:System.Diagnostics.BooleanSwitch>メンバー`static`クラスにします。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Diagnostics.BooleanSwitch>スイッチを使用するエラー メッセージを表示するかどうかを決定します。 クラス レベルでは、スイッチを作成します。 `Main`メソッドは、その場所を渡します`MyMethod`、エラー メッセージを出力して、エラーが発生します。  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Diagnostics.BooleanSwitch" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BooleanSwitch (string displayName, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BooleanSwitch(System::String ^ displayName, System::String ^ description);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.BooleanSwitch : string * string -&gt; System.Diagnostics.BooleanSwitch" Usage="new System.Diagnostics.BooleanSwitch (displayName, description)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">ユーザー インターフェイスに表示される名前。</param>
        <param name="description">スイッチの説明。</param>
        <summary>指定した表示名と説明を使用して、<see cref="T:System.Diagnostics.BooleanSwitch" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 作成するときに、 <xref:System.Diagnostics.BooleanSwitch>、`displayName`スイッチの初期設定を検索するパラメーターを使用します。 コンス トラクターは、初期設定を見つけられない場合、<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>プロパティに設定されて`false`(無効)。  
  
 レベルを設定する、<xref:System.Diagnostics.BooleanSwitch>アプリケーションの名前に対応する構成ファイルを編集します。 このファイルでスイッチを追加してその値を設定、スイッチの削除したり、アプリケーションによって以前に設定するすべてのスイッチをオフに。 構成ファイルは、次の例のような形式にする必要があります。  
  
```xml  
<configuration>  
    <system.diagnostics>  
       <switches>  
          <add name="mySwitch" value="10" />  
          <add name="myNewSwitch" value="20" />  
          <remove name="mySwitch" />  
          <clear/>  
       </switches>  
    </system.diagnostics>  
 </configuration>  
```  
  
> [!NOTE]
>  スイッチを作成する必要があります`static`します。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Diagnostics.BooleanSwitch>スイッチを使用するエラー メッセージを表示するかどうかを決定します。 スイッチは、クラス レベルで作成されます。 `Main`メソッドは、その場所を渡します`MyMethod`、エラー メッセージを出力して、エラーが発生します。  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BooleanSwitch (string displayName, string description, string defaultSwitchValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description, string defaultSwitchValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String, defaultSwitchValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BooleanSwitch(System::String ^ displayName, System::String ^ description, System::String ^ defaultSwitchValue);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.BooleanSwitch : string * string * string -&gt; System.Diagnostics.BooleanSwitch" Usage="new System.Diagnostics.BooleanSwitch (displayName, description, defaultSwitchValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="defaultSwitchValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">ユーザー インターフェイスに表示される名前。</param>
        <param name="description">スイッチの説明。</param>
        <param name="defaultSwitchValue">スイッチの既定値。</param>
        <summary>指定した表示名、説明、および既定のスイッチ値を使用して、<see cref="T:System.Diagnostics.BooleanSwitch" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `displayName`パラメーターの値を設定するため、<xref:System.Diagnostics.Switch.DisplayName%2A>プロパティ、および`description`の値を設定するパラメーターを使用して、<xref:System.Diagnostics.Switch.Description%2A>プロパティ。 `defaultSwitchValue`パラメーターがフィールドとして保存され、初期化に使用される、<xref:System.Diagnostics.Switch.Value%2A>最初の参照のプロパティ。 コンス トラクターの使用の詳細については、次を参照してください。、<xref:System.Diagnostics.BooleanSwitch.%23ctor%28System.String%2CSystem.String%29>コンス トラクター。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.BooleanSwitch.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Diagnostics.BooleanSwitch.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スイッチが有効であるか、または無効であるかを示す値を取得または設定します。</summary>
        <value>スイッチが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定では、このフィールドに設定`false`(無効)。 スイッチを有効にするこのフィールドの値を割り当てる`true`します。 スイッチを無効にするに値を割り当てて`false`します。  このプロパティの値は、基底クラスのプロパティの値によって決まります<xref:System.Diagnostics.Switch.SwitchSetting%2A>します。  
  
> [!NOTE]
>  このメソッドを使用して、<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>フラグを信頼できないコードから呼び出されるようにするのには、直前の呼び出し元のみである必要が<xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=nameWithType>権限。 コードは、部分的に信頼されたコードから呼び出すことが場合、は、ユーザー入力を渡さない<xref:System.Runtime.InteropServices.Marshal>クラスの検証を伴わないメソッド。  
  
   
  
## Examples  
 次のコード例を作成、<xref:System.Diagnostics.BooleanSwitch>スイッチを使用するエラー メッセージを表示するかどうかを決定します。 スイッチは、クラス レベルで作成されます。 `Main`メソッドは、その場所を渡します`MyMethod`、エラー メッセージとエラーが発生した場所が出力されます。  
  
 [!code-cpp[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">呼び出し元に、正しいアクセス許可がありません。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードと運用します。 要求値<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;列挙型に関連付けられている:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />します。</permission>
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected override void OnValueChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValueChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.OnValueChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValueChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValueChanged();" />
      <MemberSignature Language="F#" Value="override this.OnValueChanged : unit -&gt; unit" Usage="booleanSwitch.OnValueChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Diagnostics.Switch.Value" /> プロパティの新しい値を、ブール値として解析可能かどうかを判別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.BooleanSwitch.OnValueChanged%2A>メソッドは、新しい値がブール値 ("false"または"true") の有効な文字列形式であるかどうかを判断します。 そのため、メソッドが設定されている場合、<xref:System.Diagnostics.Switch.SwitchSetting%2A>プロパティを 0 または 1。  それ以外の場合、基本メソッドが呼び出されると、設定を使用して、整数値を文字列値に変換する、<xref:System.Diagnostics.Switch.SwitchSetting%2A>プロパティ。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>