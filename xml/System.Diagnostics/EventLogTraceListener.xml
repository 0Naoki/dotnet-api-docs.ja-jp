<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EventLogTraceListener.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59f2e66aeb4eac22b1ec61f9f7cb2a049f2d0706e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9f2e66aeb4eac22b1ec61f9f7cb2a049f2d0706e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>Provides a simple listener that directs tracing or debugging output to an <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLog" /&gt;</ph>.</source>
          <target state="translated">トレース出力またはデバッグ出力を <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLog" /&gt;</ph> に転送する簡単なリスナーを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>An instance of this <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> can be added to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph>, or <ph id="ph4">&lt;xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=nameWithType&gt;</ph> collections to send output from tracing or debugging to an <ph id="ph5">&lt;xref:System.Diagnostics.EventLog&gt;</ph>.</source>
          <target state="translated">このインスタンス<ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph>に追加することができます、 <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType&gt;</ph>、 <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph>、または<ph id="ph4">&lt;xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=nameWithType&gt;</ph>からトレース出力またはデバッグ出力を送信するコレクション、<ph id="ph5">&lt;xref:System.Diagnostics.EventLog&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>You can add the instance in your code or specify it in the application configuration file.</source>
          <target state="translated">コードでインスタンスを追加したり、アプリケーション構成ファイルで指定することができます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>To add an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> using an application configuration file, edit the file that corresponds to the name of your application or the app.config file in a <ph id="ph2">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> project.</source>
          <target state="translated">追加する、 <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> 、アプリケーション構成ファイルを使用して、アプリケーションの名前に対応するファイルまたは app.config ファイルを編集、<ph id="ph2">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph>プロジェクト。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>In this file, insert an element for a <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener?displayProperty=nameWithType&gt;</ph> type.</source>
          <target state="translated">このファイル内の要素を挿入、<ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener?displayProperty=nameWithType&gt;</ph>型です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>The following example adds a <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> object named <ph id="ph2">`myListener`</ph> to the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collection.</source>
          <target state="translated">次の例では追加、<ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph>という名前のオブジェクト<ph id="ph2">`myListener`</ph>を<ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>The <ph id="ph1">`initializeData`</ph> parameter specifies the name of the event log source that is to be passed to the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener.%23ctor%28System.String%29&gt;</ph> constructor.</source>
          <target state="translated"><ph id="ph1">`initializeData`</ph>パラメーターに渡されるイベント ログのソースの名前を指定する、<ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener.%23ctor%28System.String%29&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>For more information about how to add trace listeners in the application configuration file, see  or .</source>
          <target state="translated">アプリケーション構成ファイルにトレース リスナーを追加する方法の詳細については、次を参照してください。 またはします。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> for the event log that is associated with the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> instance does not exist, a new event source is created.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph>に関連付けられているイベント ログに対して、<ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph>インスタンスが存在しないか、新しいイベント ソースを作成します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>To create an event source in Windows Vista, Windows XP Professional, or Windows Server 2003, you must have administrative privileges.</source>
          <target state="translated">Windows Vista、Windows XP Professional、または Windows Server 2003 でイベント ソースを作成するには、管理者特権が必要です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</source>
          <target state="translated">この要件の理由では、セキュリティを含む、すべてのイベント ログを検索して、イベント ソースが一意かどうかを確認する必要があります。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>In Windows Vista, users do not have permission to access the security log; therefore, a <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown.</source>
          <target state="translated">Windows Vista でのユーザー権限がありません。 セキュリティ ログにアクセスするにはしたがって、<ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>In Windows Vista, User Account Control (UAC) determines the privileges of a user.</source>
          <target state="translated">Windows Vista では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</source>
          <target state="translated">ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>By default, you are in the standard user role.</source>
          <target state="translated">既定では、ユーザーは標準ユーザー ロールに所属します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator.</source>
          <target state="translated">セキュリティ ログにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</source>
          <target state="translated">この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>The class provides the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.EventLog%2A&gt;</ph> property to get or set the event log that receives the tracing or debugging output, and the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener.Name%2A&gt;</ph> property to hold the name of the <ph id="ph3">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph>.</source>
          <target state="translated">クラスは、提供、<ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.EventLog%2A&gt;</ph>プロパティを取得または設定を受け取るトレース出力またはデバッグ出力をイベント ログと<ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener.Name%2A&gt;</ph>プロパティの名前を保持するために、<ph id="ph3">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.Close%2A&gt;</ph> method closes the event log so it no longer receives tracing or debugging output.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.Close%2A&gt;</ph>トレース出力またはデバッグ出力を受信しないように、メソッドは、イベント ログを閉じます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.Write%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener.WriteLine%2A&gt;</ph> methods write a message to the event log.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.Write%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener.WriteLine%2A&gt;</ph>メソッドは、イベント ログにメッセージを書き込みます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>To avoid the possibility of writing large amounts of data to the event log, the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> does not output the optional trace data specified by the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">イベント ログに大量のデータを書き込む可能性を回避する、<ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph>で指定された、省略可能なトレース データを出力しません、<ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>The following example creates a trace listener that sends output to an event log.</source>
          <target state="translated">次の例では、イベント ログに出力を送信するトレース リスナーを作成します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>First, the code creates a new <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> that uses the source <ph id="ph2">`myEventLogSource`</ph>.</source>
          <target state="translated">新しいコードを最初に、作成<ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph>ソースを使用する<ph id="ph2">`myEventLogSource`</ph>です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>Next, <ph id="ph1">`myTraceListener`</ph> is added to the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collection.</source>
          <target state="translated">次に、<ph id="ph1">`myTraceListener`</ph>に追加、<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>Finally, the example sends a line of output to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> object.</source>
          <target state="translated">最後に、例では、送信する出力の行、<ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>This type is thread safe.</source>
          <target state="translated">この型はスレッド セーフです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogTraceListener" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogTraceListener" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogTraceListener" /&gt;</ph> class without a trace listener.</source>
          <target state="translated">トレース リスナーを指定せずに、<ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogTraceListener" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.#ctor(System.Diagnostics.EventLog)">
          <source>The event log to write to.</source>
          <target state="translated">書き込み先のイベント ログ。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.#ctor(System.Diagnostics.EventLog)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogTraceListener" /&gt;</ph> class using the specified event log.</source>
          <target state="translated">イベント ログを指定して、<ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogTraceListener" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.#ctor(System.String)">
          <source>The name of an existing event log source.</source>
          <target state="translated">既存のイベント ログ ソースの名前。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogTraceListener" /&gt;</ph> class using the specified source.</source>
          <target state="translated">ソースを指定して、<ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogTraceListener" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.Close">
          <source>Closes the event log so that it no longer receives tracing or debugging output.</source>
          <target state="translated">イベント ログを終了して、トレース出力またはデバッグ出力を受信しないようにします。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.EventLogTraceListener.EventLog">
          <source>Gets or sets the event log to write to.</source>
          <target state="translated">書き込み先となるイベント ログを取得または設定します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventLogTraceListener.EventLog">
          <source>The event log to write to.</source>
          <target state="translated">書き込み先のイベント ログ。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.EventLogTraceListener.Name">
          <source>Gets or sets the name of this <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogTraceListener" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogTraceListener" /&gt;</ph> の名前を取得または設定します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventLogTraceListener.Name">
          <source>The name of this trace listener.</source>
          <target state="translated">トレース リスナーの名前。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventLogTraceListener.Name">
          <source>This property defaults to the source name of the event log.</source>
          <target state="translated">このプロパティの既定値は、イベント ログのソース名です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>Writes trace data to the event log.</source>
          <target state="translated">イベント ログにトレース データを書き込みます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>An object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納しているオブジェクト。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A name used to identify the output; typically the name of the application that generated the trace event.</source>
          <target state="translated">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">イベントの数値識別子。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The combination of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>id<ept id="p2">&lt;/c&gt;</ept> uniquely identifies an event.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>ソース<ept id="p1">&lt;/c&gt;</ept>と <bpt id="p2">&lt;c&gt;</bpt>id<ept id="p2">&lt;/c&gt;</ept> の組み合わせにより、イベントが一意に識別されます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A data object to write to the output file or stream.</source>
          <target state="translated">出力ファイルまたは出力ストリームに書き込むデータ オブジェクト。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Writes trace information, a data object, and event information to the event log.</source>
          <target state="translated">トレース情報、データ オブジェクト、およびイベント情報をイベント ログに書き込みます。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceData%2A&gt;</ph> methods are not intended to be called by application code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceData%2A&gt;</ph>メソッドは、アプリケーション コードによって呼び出されるものではありません。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>They are called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to output trace data.</source>
          <target state="translated">メソッドによって呼び出される、 <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>、 <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>、および<ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph>トレース データを出力するクラスします。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceData%2A&gt;</ph> method, like the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph> method is intended for automated tools but also allows the attaching of additional objects, for example an exception instance, to the trace.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceData%2A&gt;</ph>メソッドと同様、<ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph>メソッドは、自動化されたツールが、トレースに、例外インスタンスなど、追加のオブジェクトのアタッチすることもできます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">`eventCache`</ph> and <ph id="ph2">`source`</ph> parameters are used to determine if the event should be traced.</source>
          <target state="translated"><ph id="ph1">`eventCache`</ph>と<ph id="ph2">`source`</ph>かどうか、イベントをトレースするかを決定するパラメーターが使用されます。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source><ph id="ph1">`id`</ph> is used to create an <ph id="ph2">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> object and the <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType&gt;</ph> is equated to an <ph id="ph4">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph> for the <ph id="ph5">&lt;xref:System.Diagnostics.EventInstance.EntryType%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`id`</ph> 作成に使用される、<ph id="ph2">&lt;xref:System.Diagnostics.EventInstance&gt;</ph>オブジェクトおよび<ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType&gt;</ph>するパフォーマンスは、<ph id="ph4">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph>の<ph id="ph5">&lt;xref:System.Diagnostics.EventInstance.EntryType%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> is written to the event log with the <ph id="ph2">`data`</ph> object, formatted as a string, using the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventInstance&gt;</ph>でイベント ログに書き込まれる、<ph id="ph2">`data`</ph>オブジェクト、文字列として書式設定を使用して、<ph id="ph3">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The maximum value of the <ph id="ph1">`id`</ph> parameter is 65,535.</source>
          <target state="translated">最大値、<ph id="ph1">`id`</ph>パラメーターは、65,535 です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>If the <ph id="ph1">`id`</ph> value specified is greater than 65,535, the maximum value is used.</source>
          <target state="translated">場合、<ph id="ph1">`id`</ph>指定された値が 65,535 を超える場合、最大値を使用します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is not specified.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> が指定されていません。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The log entry string exceeds 32,766 characters.</source>
          <target state="translated">ログ エントリの文字列の長さが 32,766 文字を超えています。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>An object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納しているオブジェクト。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>A name used to identify the output; typically the name of the application that generated the trace event.</source>
          <target state="translated">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>A numeric identifier for the event.</source>
          <target state="translated">イベントの数値識別子。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The combination of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>id<ept id="p2">&lt;/c&gt;</ept> uniquely identifies an event.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>ソース<ept id="p1">&lt;/c&gt;</ept>と <bpt id="p2">&lt;c&gt;</bpt>id<ept id="p2">&lt;/c&gt;</ept> の組み合わせにより、イベントが一意に識別されます。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>An array of data objects.</source>
          <target state="translated">データ オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Writes trace information, an array of data objects, and event information to the event log.</source>
          <target state="translated">トレース情報、データ オブジェクトの配列、およびイベント情報をイベント ログに書き込みます。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceData%2A&gt;</ph> methods are not intended to be called by application code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceData%2A&gt;</ph>メソッドは、アプリケーション コードによって呼び出されるものではありません。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>They are called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to output trace data.</source>
          <target state="translated">メソッドによって呼び出される、 <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>、 <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>、および<ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph>トレース データを出力するクラスします。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceData%2A&gt;</ph> method, like the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph> method is intended for automated tools but also allows the attaching of additional objects, for example an exception instance, to the trace.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceData%2A&gt;</ph>メソッドと同様、<ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph>メソッドは、自動化されたツールが、トレースに、例外インスタンスなど、追加のオブジェクトのアタッチすることもできます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">`severity`</ph> and <ph id="ph2">`id`</ph> parameter data is used to create an <ph id="ph3">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> object, which is written to the event log with the data from the array of data objects.</source>
          <target state="translated"><ph id="ph1">`severity`</ph>と<ph id="ph2">`id`</ph>パラメーター データを使用して、作成、<ph id="ph3">&lt;xref:System.Diagnostics.EventInstance&gt;</ph>オブジェクトで、データ オブジェクトの配列からデータをイベント ログに書き込まれます。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">`eventCache`</ph> and <ph id="ph2">`source`</ph> parameters are used to determine if the event should be traced.</source>
          <target state="translated"><ph id="ph1">`eventCache`</ph>と<ph id="ph2">`source`</ph>かどうか、イベントをトレースするかを決定するパラメーターが使用されます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source><ph id="ph1">`id`</ph> is used to create an <ph id="ph2">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> object and the <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType&gt;</ph> is equated to an <ph id="ph4">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph> for the <ph id="ph5">&lt;xref:System.Diagnostics.EventInstance.EntryType%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`id`</ph> 作成に使用される、<ph id="ph2">&lt;xref:System.Diagnostics.EventInstance&gt;</ph>オブジェクトおよび<ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType&gt;</ph>するパフォーマンスは、<ph id="ph4">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph>の<ph id="ph5">&lt;xref:System.Diagnostics.EventInstance.EntryType%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> is written to the event log with the <ph id="ph2">`data`</ph> object array, formatted as a string array, using the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventInstance&gt;</ph>でイベント ログに書き込まれる、<ph id="ph2">`data`</ph>オブジェクトの配列を文字列の配列として書式設定を使用して、<ph id="ph3">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The maximum value of the <ph id="ph1">`id`</ph> parameter is 65,535.</source>
          <target state="translated">最大値、<ph id="ph1">`id`</ph>パラメーターは、65,535 です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>If the <ph id="ph1">`id`</ph> value specified is greater than 65,535, the maximum value is used.</source>
          <target state="translated">場合、<ph id="ph1">`id`</ph>指定された値が 65,535 を超える場合、最大値を使用します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is not specified.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> が指定されていません。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The log entry string exceeds 32,766 characters.</source>
          <target state="translated">ログ エントリの文字列の長さが 32,766 文字を超えています。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>Writes event trace information to the event log.</source>
          <target state="translated">イベント ログにトレース情報を書き込みます。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>An object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納しているオブジェクト。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A name used to identify the output; typically the name of the application that generated the trace event.</source>
          <target state="translated">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">イベントの数値識別子。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The combination of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>id<ept id="p2">&lt;/c&gt;</ept> uniquely identifies an event.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>ソース<ept id="p1">&lt;/c&gt;</ept>と <bpt id="p2">&lt;c&gt;</bpt>id<ept id="p2">&lt;/c&gt;</ept> の組み合わせにより、イベントが一意に識別されます。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The trace message.</source>
          <target state="translated">トレース メッセージ。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Writes trace information, a message, and event information to the event log.</source>
          <target state="translated">トレース情報、メッセージ、およびイベント情報をイベント ログに書き込みます。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph> methods are not intended to be called by application code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph>メソッドは、アプリケーション コードによって呼び出されるものではありません。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>These methods are called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.</source>
          <target state="translated">メソッドによってこれらのメソッドが呼び出される、 <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>、 <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>、および<ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph>トレース データを書き込むクラスです。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph> method is intended to trace events that can be processed automatically by tools.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph>ツールによって自動的に処理できるイベントをトレースするメソッドです。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>For example a monitoring tool can notify an administrator if a specific event is traced by a specific source.</source>
          <target state="translated">たとえば特定のソースから特定のイベントがトレースされる場合、監視ツールは管理者に通知できます。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">`eventCache`</ph> and <ph id="ph2">`source`</ph> parameters are used to determine if the event should be traced.</source>
          <target state="translated"><ph id="ph1">`eventCache`</ph>と<ph id="ph2">`source`</ph>かどうか、イベントをトレースするかを決定するパラメーターが使用されます。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source><ph id="ph1">`id`</ph> is used to create an <ph id="ph2">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> object and the <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType&gt;</ph> is equated to an <ph id="ph4">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph> for the <ph id="ph5">&lt;xref:System.Diagnostics.EventInstance.EntryType%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`id`</ph> 作成に使用される、<ph id="ph2">&lt;xref:System.Diagnostics.EventInstance&gt;</ph>オブジェクトおよび<ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType&gt;</ph>するパフォーマンスは、<ph id="ph4">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph>の<ph id="ph5">&lt;xref:System.Diagnostics.EventInstance.EntryType%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> is written to the event log with the <ph id="ph2">`message`</ph> data using the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventInstance&gt;</ph>でイベント ログに書き込まれる、<ph id="ph2">`message`</ph>データを使用して、<ph id="ph3">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The maximum value of the <ph id="ph1">`id`</ph> parameter is 65,535.</source>
          <target state="translated">最大値、<ph id="ph1">`id`</ph>パラメーターは、65,535 です。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>If the <ph id="ph1">`id`</ph> value specified is greater than 65,535, the maximum value is used.</source>
          <target state="translated">場合、<ph id="ph1">`id`</ph>指定された値が 65,535 を超える場合、最大値を使用します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is not specified.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> が指定されていません。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The log entry string exceeds 32,766 characters.</source>
          <target state="translated">ログ エントリの文字列の長さが 32,766 文字を超えています。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>An object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納しているオブジェクト。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A name used to identify the output; typically the name of the application that generated the trace event.</source>
          <target state="translated">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A numeric identifier for the event.</source>
          <target state="translated">イベントの数値識別子。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The combination of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>id<ept id="p2">&lt;/c&gt;</ept> uniquely identifies an event.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>ソース<ept id="p1">&lt;/c&gt;</ept>と <bpt id="p2">&lt;c&gt;</bpt>id<ept id="p2">&lt;/c&gt;</ept> の組み合わせにより、イベントが一意に識別されます。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A format string that contains zero or more format items that correspond to objects in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">0 個以上の書式項目を格納している書式指定文字列。<bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 配列内のオブジェクトに対応します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>An <ph id="ph1">&lt;see langword="object" /&gt;</ph> array containing zero or more objects to format.</source>
          <target state="translated">0 個以上の書式設定対象オブジェクトを含んだ <ph id="ph1">&lt;see langword="object" /&gt;</ph> 配列。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Writes trace information, a formatted array of objects, and event information to the event log.</source>
          <target state="translated">トレース情報、オブジェクトの書式付き配列、およびイベント情報をイベント ログに書き込みます。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph> methods are not intended to be called by application code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph>メソッドは、アプリケーション コードによって呼び出されるものではありません。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>These methods are called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.</source>
          <target state="translated">メソッドによってこれらのメソッドが呼び出される、 <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>、 <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>、および<ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph>トレース データを書き込むクラスです。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph> method is intended to trace events that can be processed automatically by tools.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph>ツールによって自動的に処理できるイベントをトレースするメソッドです。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>For example a monitoring tool can notify an administrator if a specific event is traced by a specific source.</source>
          <target state="translated">たとえば特定のソースから特定のイベントがトレースされる場合、監視ツールは管理者に通知できます。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">`eventCache`</ph> and <ph id="ph2">`source`</ph> parameters are used to determine if the event should be traced.</source>
          <target state="translated"><ph id="ph1">`eventCache`</ph>と<ph id="ph2">`source`</ph>かどうか、イベントをトレースするかを決定するパラメーターが使用されます。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source><ph id="ph1">`id`</ph> is used to create an <ph id="ph2">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> object and the <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType&gt;</ph> is equated to an <ph id="ph4">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph> for the <ph id="ph5">&lt;xref:System.Diagnostics.EventInstance.EntryType%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`id`</ph> 作成に使用される、<ph id="ph2">&lt;xref:System.Diagnostics.EventInstance&gt;</ph>オブジェクトおよび<ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType&gt;</ph>するパフォーマンスは、<ph id="ph4">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph>の<ph id="ph5">&lt;xref:System.Diagnostics.EventInstance.EntryType%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> is written to the event log, using the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method, with the message obtained from the <ph id="ph3">`format`</ph> and <ph id="ph4">`args`</ph> parameters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventInstance&gt;</ph>イベント ログに書き込まれるを使用して、<ph id="ph2">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph>から取得したメッセージと、メソッド、<ph id="ph3">`format`</ph>と<ph id="ph4">`args`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">`args`</ph> object array is converted to a string using the <ph id="ph2">&lt;xref:System.String.Format%2A&gt;</ph> method, passing the <ph id="ph3">`format`</ph> string and <ph id="ph4">`args`</ph> array to format the string as the message for the event log.</source>
          <target state="translated"><ph id="ph1">`args`</ph>オブジェクトの配列を使用して文字列に変換、<ph id="ph2">&lt;xref:System.String.Format%2A&gt;</ph>渡して、メソッド、<ph id="ph3">`format`</ph>文字列と<ph id="ph4">`args`</ph>イベント ログのメッセージとして、文字列の書式を設定する配列。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The maximum value of the <ph id="ph1">`id`</ph> parameter is 65,535.</source>
          <target state="translated">最大値、<ph id="ph1">`id`</ph>パラメーターは、65,535 です。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>If the <ph id="ph1">`id`</ph> value specified is greater than 65,535, the maximum value is used.</source>
          <target state="translated">場合、<ph id="ph1">`id`</ph>指定された値が 65,535 を超える場合、最大値を使用します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is not specified.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> が指定されていません。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The log entry string exceeds 32,766 characters.</source>
          <target state="translated">ログ エントリの文字列の長さが 32,766 文字を超えています。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.Write(System.String)">
          <source>The message to write.</source>
          <target state="translated">書き込むメッセージ。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.Write(System.String)">
          <source>Writes a message to the event log for this instance.</source>
          <target state="translated">このインスタンスのイベント ログにメッセージを書き込みます。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.Write(System.String)">
          <source><ph id="ph1">&lt;paramref name="message" /&gt;</ph> exceeds 32,766 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="message" /&gt;</ph> が 32,766 文字を超えています。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.WriteLine(System.String)">
          <source>The message to write.</source>
          <target state="translated">書き込むメッセージ。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.WriteLine(System.String)">
          <source>Writes a message to the event log for this instance.</source>
          <target state="translated">このインスタンスのイベント ログにメッセージを書き込みます。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.WriteLine(System.String)">
          <source><ph id="ph1">&lt;paramref name="message" /&gt;</ph> exceeds 32,766 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="message" /&gt;</ph> が 32,766 文字を超えています。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>