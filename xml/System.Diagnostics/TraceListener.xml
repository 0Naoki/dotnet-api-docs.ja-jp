<Type Name="TraceListener" FullName="System.Diagnostics.TraceListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c9cb075430e9f7d263376c1b7e4b50bb88df0fdd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36342329" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TraceListener : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TraceListener extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceListener" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TraceListener&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceListener abstract : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type TraceListener = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="3e01d-101">トレース出力およびデバッグ出力を監視するリスナーの <see langword="abstract" /> 基本クラスを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3e01d-101">Provides the <see langword="abstract" /> base class for the listeners who monitor trace and debug output.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e01d-102">実装する方法の例については、<xref:System.Diagnostics.TraceListener>を参照してください、 <xref:System.Diagnostics.DefaultTraceListener>、<xref:System.Diagnostics.TextWriterTraceListener>と<xref:System.Diagnostics.EventLogTraceListener>クラスです。</span><span class="sxs-lookup"><span data-stu-id="3e01d-102">For examples of how to implement a <xref:System.Diagnostics.TraceListener>, see the <xref:System.Diagnostics.DefaultTraceListener>, <xref:System.Diagnostics.TextWriterTraceListener> and the <xref:System.Diagnostics.EventLogTraceListener> classes.</span></span>  
  
 <span data-ttu-id="3e01d-103">トレースまたはトレース リスナーを使用してデバッグを有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="3e01d-103">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="3e01d-104">次の構文は、コンパイラに固有です。</span><span class="sxs-lookup"><span data-stu-id="3e01d-104">The following syntax is compiler specific.</span></span> <span data-ttu-id="3e01d-105">以外は、c# または Visual Basic コンパイラを使用する場合は、コンパイラのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3e01d-105">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="3e01d-106">C# でのデバッグを有効にするには追加、`/d:DEBUG`するを追加したり、コードをコンパイルするときに、コンパイラのコマンドラインにフラグ`#define DEBUG`ファイルの先頭にします。</span><span class="sxs-lookup"><span data-stu-id="3e01d-106">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="3e01d-107">Visual basic では、追加、`/d:DEBUG=True`フラグをコンパイラ コマンドライン。</span><span class="sxs-lookup"><span data-stu-id="3e01d-107">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="3e01d-108">C# でのトレースを有効にするには追加、`/d:TRACE`フラグを追加したり、コードをコンパイルすると、コンパイラのコマンドライン`#define TRACE`ファイルの先頭にします。</span><span class="sxs-lookup"><span data-stu-id="3e01d-108">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="3e01d-109">Visual basic では、追加、`/d:TRACE=True`フラグをコンパイラ コマンドライン。</span><span class="sxs-lookup"><span data-stu-id="3e01d-109">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="3e01d-110">トレース リスナーを追加するには、アプリケーションの名前に対応する構成ファイルを編集します。</span><span class="sxs-lookup"><span data-stu-id="3e01d-110">To add a trace listener, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="3e01d-111">このファイル内でことができます、リスナーを追加、その型およびパラメーターの設定、リスナーの削除またはオフにするアプリケーションで設定したすべてのリスナーです。</span><span class="sxs-lookup"><span data-stu-id="3e01d-111">Within this file, you can add a listener, set its type and set its parameter, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="3e01d-112">構成ファイルは次の例のようにフォーマットされている必要があります。</span><span class="sxs-lookup"><span data-stu-id="3e01d-112">The configuration file should be formatted similar to the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="myListener" type="System.Diagnostics.TextWriterTraceListener" initializeData="TextWriterOutput.log" />  
        <remove name="Default" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="3e01d-113">トレースの構成ファイルを使用する方法については、次を参照してください。 [ &lt;system.diagnostics&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/system-diagnostics-element.md)です。</span><span class="sxs-lookup"><span data-stu-id="3e01d-113">For more information on using configuration files for tracing, see [&lt;system.diagnostics&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/system-diagnostics-element.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="3e01d-114">この型はスレッド セーフです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3e01d-114">This type is thread safe.</span>
      </span>
    </threadsafe>
    <block subset="none" type="overrides">
      <span data-ttu-id="3e01d-115">
        <para>カスタム リスナーを実装するには、このクラスから継承、<see cref="T:System.Diagnostics.Debug" />と<see cref="T:System.Diagnostics.Trace" />クラスです。実装する必要がありますには、少なくとも、<see cref="M:System.Diagnostics.TraceListener.Write(System.String)" />と<see cref="M:System.Diagnostics.TraceListener.WriteLine(System.String)" />メソッドです。また、実装、 <see cref="M:System.Diagnostics.TraceListener.Fail(System.String)" />、<see cref="M:System.Diagnostics.TraceListener.Close" />と<see cref="M:System.Diagnostics.TraceListener.Flush" />メソッドです。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="3e01d-115">
          <para>Inherit from this class to implement a custom listener for the <see cref="T:System.Diagnostics.Debug" /> and <see cref="T:System.Diagnostics.Trace" /> classes. At a minimum, you must implement the <see cref="M:System.Diagnostics.TraceListener.Write(System.String)" /> and <see cref="M:System.Diagnostics.TraceListener.WriteLine(System.String)" /> methods. Additionally, you can implement the <see cref="M:System.Diagnostics.TraceListener.Fail(System.String)" />, <see cref="M:System.Diagnostics.TraceListener.Close" /> and <see cref="M:System.Diagnostics.TraceListener.Flush" /> methods.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3e01d-116">
            <see cref="T:System.Diagnostics.TraceListener" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-116">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3e01d-117">
            <see cref="T:System.Diagnostics.TraceListener" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-117">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e01d-118">次の表は、のインスタンスの初期プロパティ値を示しています。<xref:System.Diagnostics.TraceListener>です。</span><span class="sxs-lookup"><span data-stu-id="3e01d-118">The following table shows initial property values for an instance of <xref:System.Diagnostics.TraceListener>.</span></span>  
  
|<span data-ttu-id="3e01d-119">プロパティ</span><span class="sxs-lookup"><span data-stu-id="3e01d-119">Property</span></span>|<span data-ttu-id="3e01d-120">既定値</span><span class="sxs-lookup"><span data-stu-id="3e01d-120">Default Value</span></span>|  
|--------------|-------------------|  
|<span data-ttu-id="3e01d-121">name</span><span class="sxs-lookup"><span data-stu-id="3e01d-121">Name</span></span>|<span data-ttu-id="3e01d-122">空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="3e01d-122">The empty string ("").</span></span>|  
|<span data-ttu-id="3e01d-123">Indent</span><span class="sxs-lookup"><span data-stu-id="3e01d-123">Indent</span></span>|<span data-ttu-id="3e01d-124">0 を返します。</span><span class="sxs-lookup"><span data-stu-id="3e01d-124">Zero.</span></span>|  
|<span data-ttu-id="3e01d-125">IndentSize</span><span class="sxs-lookup"><span data-stu-id="3e01d-125">IndentSize</span></span>|<span data-ttu-id="3e01d-126">4 つのスペースです。</span><span class="sxs-lookup"><span data-stu-id="3e01d-126">Four spaces.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TraceListener (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TraceListener(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceListener : string -&gt; System.Diagnostics.TraceListener" Usage="new System.Diagnostics.TraceListener name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="3e01d-127">
            <see cref="T:System.Diagnostics.TraceListener" /> の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-127">The name of the <see cref="T:System.Diagnostics.TraceListener" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e01d-128">指定した名前をリスナーとして使用して、<see cref="T:System.Diagnostics.TraceListener" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-128">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceListener" /> class using the specified name as the listener.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Attributes { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Specialized.StringDictionary" Usage="System.Diagnostics.TraceListener.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e01d-129">アプリケーション構成ファイルに定義されているトレース リスナーのカスタム属性を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-129">Gets the custom trace listener attributes defined in the application configuration file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e01d-130">トレース リスナーのカスタム属性を格納している <see cref="T:System.Collections.Specialized.StringDictionary" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-130">A <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the custom attributes for the trace listener.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e01d-131">継承するクラス、<xref:System.Diagnostics.TraceListener>クラスがオーバーライドすることでカスタム属性を追加できる、<xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A>メソッドをカスタム属性の名前の文字列配列を返します。</span><span class="sxs-lookup"><span data-stu-id="3e01d-131">Classes that inherit from the <xref:System.Diagnostics.TraceListener> class can add custom attributes by overriding the <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> method and returning a string array of custom attribute names.</span></span> <span data-ttu-id="3e01d-132"><xref:System.Diagnostics.TraceListener.Attributes%2A>プロパティは、アプリケーションの構成ファイルで参照されているカスタム属性を識別します。</span><span class="sxs-lookup"><span data-stu-id="3e01d-132">The <xref:System.Diagnostics.TraceListener.Attributes%2A> property identifies the custom attributes that are referenced in the application's configuration file.</span></span> <span data-ttu-id="3e01d-133">たとえば、次の構成ファイルの抜粋で、<xref:System.Diagnostics.DelimitedListTraceListener>カスタム属性「区切り記号」が参照されています。</span><span class="sxs-lookup"><span data-stu-id="3e01d-133">For example, in the following configuration file excerpt the <xref:System.Diagnostics.DelimitedListTraceListener> custom attribute "delimiter" is referenced.</span></span> <span data-ttu-id="3e01d-134">ここで、<xref:System.Diagnostics.TraceListener.Attributes%2A>プロパティから返される、<xref:System.Collections.Specialized.StringDictionary>文字列「区切り記号」を含むです。</span><span class="sxs-lookup"><span data-stu-id="3e01d-134">In this case, the <xref:System.Diagnostics.TraceListener.Attributes%2A> property returns a <xref:System.Collections.Specialized.StringDictionary> containing the string "delimiter".</span></span>  
  
```  
<listeners>  
  <add name="delimitedListener"   
    type="System.Diagnostics.DelimitedListTraceListener"   
    delimiter=":"   
    initializeData="delimitedOutput.txt"   
    traceOutputOptions="ProcessId, DateTime" />  
  <remove name="Default" />  
</listeners>  
```  
  
 <span data-ttu-id="3e01d-135">参照されていないカスタム属性は列挙されません。</span><span class="sxs-lookup"><span data-stu-id="3e01d-135">Unreferenced custom attributes are not enumerated.</span></span>  <span data-ttu-id="3e01d-136">詳細については、<xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3e01d-136">For more information, see the <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="traceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3e01d-137">派生クラスでオーバーライドされた場合、出力ストリームを終了して、トレース出力またはデバッグ出力を受信しないようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-137">When overridden in a derived class, closes the output stream so it no longer receives tracing or debugging output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e01d-138">出力するとき、ファイルなどをこのメソッドを使用して、<xref:System.Diagnostics.TextWriterTraceListener>です。</span><span class="sxs-lookup"><span data-stu-id="3e01d-138">Use this method when the output is going to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span> <span data-ttu-id="3e01d-139">このメソッドを呼び出し、オブジェクトを再初期化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3e01d-139">After a call to this method, you must reinitialize the object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3e01d-140">
            <see cref="T:System.Diagnostics.TraceListener" /> で使用したリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-140">Releases the resources used by the <see cref="T:System.Diagnostics.TraceListener" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="traceListener.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3e01d-141">
            <see cref="T:System.Diagnostics.TraceListener" /> によって使用されているすべてのリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-141">Releases all resources used by the <see cref="T:System.Diagnostics.TraceListener" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e01d-142">呼び出す<xref:System.Diagnostics.TraceListener.Dispose%2A>によりによって使用されるリソース、<xref:System.Diagnostics.TraceListener>を他の目的に再割り当てされます。</span><span class="sxs-lookup"><span data-stu-id="3e01d-142">Calling <xref:System.Diagnostics.TraceListener.Dispose%2A> allows the resources used by the <xref:System.Diagnostics.TraceListener> to be reallocated for other purposes.</span></span> <span data-ttu-id="3e01d-143">詳細については<xref:System.Diagnostics.TraceListener.Dispose%2A>を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)です。</span><span class="sxs-lookup"><span data-stu-id="3e01d-143">For more information about <xref:System.Diagnostics.TraceListener.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="traceListener.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="3e01d-144">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-144">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e01d-145">
            <see cref="T:System.Diagnostics.TraceListener" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-145">Releases the unmanaged resources used by the <see cref="T:System.Diagnostics.TraceListener" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e01d-146">このメソッドは、パブリック<xref:System.Diagnostics.TraceListener.Dispose%2A>メソッドおよび<xref:System.Object.Finalize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3e01d-146">This method is called by the public <xref:System.Diagnostics.TraceListener.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="3e01d-147">`Dispose` プロテクト呼び出します<xref:System.Diagnostics.TraceListener.Dispose%2A>メソッドを`disposing`パラメーターに設定`true`です。</span><span class="sxs-lookup"><span data-stu-id="3e01d-147">`Dispose` invokes the protected <xref:System.Diagnostics.TraceListener.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="3e01d-148"><xref:System.Object.Finalize%2A> 呼び出す`Dispose`で`disposing`'éý'`false`です。</span><span class="sxs-lookup"><span data-stu-id="3e01d-148"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="3e01d-149">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.Diagnostics.TraceListener> が参照しているすべてのマネージ オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="3e01d-149">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Diagnostics.TraceListener> references.</span></span> <span data-ttu-id="3e01d-150">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3e01d-150">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="3e01d-151">
            <para>
              <see langword="Dispose" /> 複数回呼び出す他のオブジェクトから。このメソッドをオーバーライドする場合は、既に破棄されているを以前の呼び出しでオブジェクトを参照しないように注意する<see langword="Dispose" />です。実装する方法の詳細についての<see langword="Dispose" />、[Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md) を実装を参照してください。 します。詳細については<see langword="Dispose" />と<see langword="Finalize" />、[管理されていない Resources](~/docs/standard/garbage-collection/unmanaged.md) をクリーニングを参照してください。 します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-151">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3e01d-152">
            <see cref="T:System.Diagnostics.TraceListener" /> クラスを実装した場合、作成したリスナーにエラー メッセージを出力します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-152">Emits error messages to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public virtual void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Fail(System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Fail : string -&gt; unit&#xA;override this.Fail : string -&gt; unit" Usage="traceListener.Fail message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="3e01d-153">出力するメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-153">A message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e01d-154">
            <see cref="T:System.Diagnostics.TraceListener" /> クラスを実装した場合、作成したリスナーにエラー メッセージを出力します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-154">Emits an error message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e01d-155">既定の動作がモードでは、ユーザー インターフェイス、およびアプリケーションが実行されているときに、メッセージ ボックスに、指定したメッセージを表示するには、<xref:System.Diagnostics.TraceListener>のインスタンスにある、<xref:System.Diagnostics.TraceListenerCollection>コレクション。</span><span class="sxs-lookup"><span data-stu-id="3e01d-155">The default behavior is to display the specified message in a message box when the application is running in a user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in a <xref:System.Diagnostics.TraceListenerCollection> collection.</span></span> <span data-ttu-id="3e01d-156">既定では、<xref:System.Diagnostics.TraceListenerCollection>コレクションのインスタンスには、<xref:System.Diagnostics.DefaultTraceListener>です。</span><span class="sxs-lookup"><span data-stu-id="3e01d-156">By default, the <xref:System.Diagnostics.TraceListenerCollection> collection has an instance of a <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="3e01d-157">追加することでこの動作をカスタマイズすることができます、<xref:System.Diagnostics.TraceListener>にまたは、コレクションから削除します。</span><span class="sxs-lookup"><span data-stu-id="3e01d-157">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to or removing one from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public virtual void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="abstract member Fail : string * string -&gt; unit&#xA;override this.Fail : string * string -&gt; unit" Usage="traceListener.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="3e01d-158">出力するメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-158">A message to emit.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="3e01d-159">出力する詳細メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-159">A detailed message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e01d-160">
            <see cref="T:System.Diagnostics.TraceListener" /> クラスを実装した場合、作成したリスナーにエラー メッセージと詳細エラー メッセージを出力します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-160">Emits an error message and a detailed error message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e01d-161">既定の動作がモードでは、ユーザー インターフェイス、およびアプリケーションが実行されているときに、メッセージ ボックスに、メッセージと詳細なメッセージを表示するには、<xref:System.Diagnostics.TraceListener>のインスタンスにある、<xref:System.Diagnostics.TraceListenerCollection>コレクション。</span><span class="sxs-lookup"><span data-stu-id="3e01d-161">The default behavior is to display the message and detailed message in a message box when the application is running in a user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in a <xref:System.Diagnostics.TraceListenerCollection> collection.</span></span> <span data-ttu-id="3e01d-162">既定では、<xref:System.Diagnostics.TraceListenerCollection>コレクションのインスタンスには、<xref:System.Diagnostics.DefaultTraceListener>です。</span><span class="sxs-lookup"><span data-stu-id="3e01d-162">By default, the <xref:System.Diagnostics.TraceListenerCollection> collection has an instance of a <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="3e01d-163">追加することでこの動作をカスタマイズすることができます、<xref:System.Diagnostics.TraceListener>にまたは、コレクションから削除します。</span><span class="sxs-lookup"><span data-stu-id="3e01d-163">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to or removing one from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceFilter Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.TraceFilter Filter" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As TraceFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceFilter ^ Filter { System::Diagnostics::TraceFilter ^ get(); void set(System::Diagnostics::TraceFilter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Diagnostics.TraceFilter with get, set" Usage="System.Diagnostics.TraceListener.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e01d-164">トレース リスナーのトレース フィルターを取得および設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-164">Gets and sets the trace filter for the trace listener.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e01d-165">
            <see cref="T:System.Diagnostics.TraceFilter" /> 基本クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-165">An object derived from the <see cref="T:System.Diagnostics.TraceFilter" /> base class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e01d-166">トレース リスナーをトレース ソース スイッチで提供される範囲を超えてスクリーン処理のレイヤーを提供するには、トレース フィルターを追加できます。</span><span class="sxs-lookup"><span data-stu-id="3e01d-166">A trace filter can be added to a trace listener to provide a layer of screening beyond that provided to the trace source by switches.</span></span> <span data-ttu-id="3e01d-167">たとえば、<xref:System.Diagnostics.EventTypeFilter>リスナーによって出力されるイベントの種類を制御するトレース リスナーに追加することができます。</span><span class="sxs-lookup"><span data-stu-id="3e01d-167">For example, the <xref:System.Diagnostics.EventTypeFilter> can be added to a trace listener to control the event types that are output by the listener.</span></span>  <span data-ttu-id="3e01d-168">トレースが出力に送信するかを判断、存在する場合、スイッチの条件が満たされるために呼び出されたリスナーは、フィルターをクエリできます。</span><span class="sxs-lookup"><span data-stu-id="3e01d-168">Listeners that are called because the switch criteria are met can query their filter, if present, to determine if a trace is to be sent to output.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e01d-169">次のコード例を使用する方法を示しています、<xref:System.Diagnostics.TraceListener.Filter%2A>コンソール トレース リスナーにソース フィルターを追加するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="3e01d-169">The following code example shows how to use the <xref:System.Diagnostics.TraceListener.Filter%2A> property to add a source filter to a console trace listener.</span></span> <span data-ttu-id="3e01d-170">このコード例に示されている例の一部である、<xref:System.Diagnostics.TraceSource>クラスです。</span><span class="sxs-lookup"><span data-stu-id="3e01d-170">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#28)]
 [!code-vb[System.Diagnostics.TraceSource2#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#28)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public virtual void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="traceListener.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3e01d-171">派生クラスでオーバーライドされた場合、出力バッファーをフラッシュします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-171">When overridden in a derived class, flushes the output buffer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected internal virtual string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedAttributes : unit -&gt; string[]&#xA;override this.GetSupportedAttributes : unit -&gt; string[]" Usage="traceListener.GetSupportedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3e01d-172">トレース リスナーによってサポートされるカスタム属性を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-172">Gets the custom attributes supported by the trace listener.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e01d-173">トレース リスナーによってサポートされるカスタム属性の名前を付ける文字列配列。カスタム属性がない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-173">A string array naming the custom attributes supported by the trace listener, or <see langword="null" /> if there are no custom attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e01d-174">既定の実装<xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A>返します`null`です。</span><span class="sxs-lookup"><span data-stu-id="3e01d-174">The default implementation for <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e01d-175">次のコード サンプルのオーバーライドを示しています、<xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A>カスタム トレース リスナーのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="3e01d-175">The following code sample shows an override of the <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> method for a custom trace listener.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceListener.CustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceListener.CustomAttributes/cs/program.cs#1)]
 [!code-vb[System.Diagnostics.TraceListener.CustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceListener.CustomAttributes/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="3e01d-176">
            <para>継承する場合、<see cref="T:System.Diagnostics.TraceListener" />クラスまたは派生クラスでは、オーバーライドできる、<see cref="M:System.Diagnostics.TraceListener.GetSupportedAttributes" />クラスのカスタム属性を指定するメソッド。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-176">
              <para>When inheriting from the <see cref="T:System.Diagnostics.TraceListener" /> class or a derived class, you can override the <see cref="M:System.Diagnostics.TraceListener.GetSupportedAttributes" /> method to provide custom attributes for your class.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IndentLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentLevel : int with get, set" Usage="System.Diagnostics.TraceListener.IndentLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e01d-177">インデント レベルを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-177">Gets or sets the indent level.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e01d-178">インデント レベル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-178">The indent level.</span>
          </span>
          <span data-ttu-id="3e01d-179">既定値は 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-179">The default is zero.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e01d-180"><xref:System.Diagnostics.TraceListener.IndentLevel%2A>プロパティがインデントがで指定された回数を表す、<xref:System.Diagnostics.TraceListener.IndentSize%2A>プロパティを適用します。</span><span class="sxs-lookup"><span data-stu-id="3e01d-180">The <xref:System.Diagnostics.TraceListener.IndentLevel%2A> property represents the number of times that the indent specified by the <xref:System.Diagnostics.TraceListener.IndentSize%2A> property is applied.</span></span> <span data-ttu-id="3e01d-181">このプロパティは、スレッド/あたりの要求ごとに格納されます。</span><span class="sxs-lookup"><span data-stu-id="3e01d-181">This property is stored on per-thread/per-request basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="IndentSize">
      <MemberSignature Language="C#" Value="public int IndentSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IndentSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.IndentSize" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IndentSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentSize : int with get, set" Usage="System.Diagnostics.TraceListener.IndentSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e01d-182">1 つのインデントに含まれるスペースの数を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-182">Gets or sets the number of spaces in an indent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e01d-183">インデントに含まれるスペースの数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-183">The number of spaces in an indent.</span>
          </span>
          <span data-ttu-id="3e01d-184">既定値は 4 スペースです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-184">The default is four spaces.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e01d-185">プロパティは、スレッド/あたりの要求ごとに格納されます。</span><span class="sxs-lookup"><span data-stu-id="3e01d-185">The property is stored on per-thread/per-request basis.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3e01d-186">値が 0 未満のため、設定操作に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-186">Set operation failed because the value is less than zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="IsThreadSafe">
      <MemberSignature Language="C#" Value="public virtual bool IsThreadSafe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsThreadSafe" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.IsThreadSafe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsThreadSafe As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsThreadSafe { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsThreadSafe : bool" Usage="System.Diagnostics.TraceListener.IsThreadSafe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e01d-187">トレース リスナーがスレッド セーフかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-187">Gets a value indicating whether the trace listener is thread safe.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e01d-188">トレース リスナーがスレッド セーフである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-188">
              <see langword="true" /> if the trace listener is thread safe; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3e01d-189">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-189">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e01d-190">値<xref:System.Diagnostics.TraceListener.IsThreadSafe%2A>リスナーに書き込む際に、グローバル ロックを使用するかどうかを決定するために使用します。</span><span class="sxs-lookup"><span data-stu-id="3e01d-190">The value of <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> is used to determine whether to use a global lock when writing to the listener.</span></span> <span data-ttu-id="3e01d-191">場合の値<xref:System.Diagnostics.TraceListener.IsThreadSafe%2A>は`false`、グローバル ロックの値に関係なく使用<xref:System.Diagnostics.Trace.UseGlobalLock%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3e01d-191">If the value of <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> is `false`, the global lock is used regardless of the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A>.</span></span> <span data-ttu-id="3e01d-192">場合にのみ、グローバルのロックは使用されませんの値<xref:System.Diagnostics.TraceListener.IsThreadSafe%2A>は`true`の値と<xref:System.Diagnostics.Trace.UseGlobalLock%2A>は`false`します。</span><span class="sxs-lookup"><span data-stu-id="3e01d-192">The global lock is not used only if the value of <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> is `true` and the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A> is `false`.</span></span> <span data-ttu-id="3e01d-193">既定の動作がグローバルを使用するには、リスナーに書き込むときにロックします。</span><span class="sxs-lookup"><span data-stu-id="3e01d-193">The default behavior is to use the global lock whenever writing to the listener.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Diagnostics.TraceListener.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e01d-194">この <see cref="T:System.Diagnostics.TraceListener" /> の名前を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-194">Gets or sets a name for this <see cref="T:System.Diagnostics.TraceListener" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e01d-195">この <see cref="T:System.Diagnostics.TraceListener" /> の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-195">A name for this <see cref="T:System.Diagnostics.TraceListener" />.</span>
          </span>
          <span data-ttu-id="3e01d-196">既定値は、空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-196">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e01d-197">名前の整理し、リスナーのアクセスに使用できます、<xref:System.Diagnostics.TraceListenerCollection>コレクション。</span><span class="sxs-lookup"><span data-stu-id="3e01d-197">The name can be used to organize and access listeners in a <xref:System.Diagnostics.TraceListenerCollection> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="NeedIndent">
      <MemberSignature Language="C#" Value="protected bool NeedIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NeedIndent" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.NeedIndent" />
      <MemberSignature Language="VB.NET" Value="Protected Property NeedIndent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool NeedIndent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NeedIndent : bool with get, set" Usage="System.Diagnostics.TraceListener.NeedIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e01d-198">出力にインデントを設定するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-198">Gets or sets a value indicating whether to indent the output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e01d-199">出力にインデントを設定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-199">
              <see langword="true" /> if the output should be indented; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e01d-200">**注**、<xref:System.Diagnostics.TraceListener.WriteIndent%2A>によって呼び出されたメソッド、<xref:System.Diagnostics.DefaultTraceListener>と<xref:System.Diagnostics.TextWriterTraceListener>クラス、セット、<xref:System.Diagnostics.TraceListener.NeedIndent%2A>プロパティの値を`false`を後で、不要なインデントを防ぐためにします。</span><span class="sxs-lookup"><span data-stu-id="3e01d-200">**Note** The <xref:System.Diagnostics.TraceListener.WriteIndent%2A> method, called by the <xref:System.Diagnostics.DefaultTraceListener> and <xref:System.Diagnostics.TextWriterTraceListener> classes, sets the <xref:System.Diagnostics.TraceListener.NeedIndent%2A> property value to `false` to prevent later, unnecessary indents.</span></span> <span data-ttu-id="3e01d-201">設定する必要があります、<xref:System.Diagnostics.TraceListener.NeedIndent%2A>プロパティを`true`たびにトレース出力をインデントする場合します。</span><span class="sxs-lookup"><span data-stu-id="3e01d-201">You must set the <xref:System.Diagnostics.TraceListener.NeedIndent%2A> property to `true` each time you wish to indent trace output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3e01d-202">トレース データをリスナー固有の出力に書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-202">Writes trace data to the listener specific output.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public virtual void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit&#xA;override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="traceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="3e01d-203">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-203">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="3e01d-204">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-204">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="3e01d-205">トレースを発生させたイベントのタイプを指定する <see cref="T:System.Diagnostics.TraceEventType" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-205">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="3e01d-206">イベントの数値識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-206">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="3e01d-207">出力するトレース データ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-207">The trace data to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e01d-208">トレース情報、データ オブジェクト、およびイベント情報をリスナー固有の出力に書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-208">Writes trace information, a data object and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e01d-209">このメソッドは、アプリケーション コードで直接のメンバーによっても呼び出されるものではありません、 <xref:System.Diagnostics.Debug>、 <xref:System.Diagnostics.Trace>、および<xref:System.Diagnostics.TraceSource>を出力するトレース データを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3e01d-209">This method is not intended to be called directly by application code but by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 <span data-ttu-id="3e01d-210">既定の実装の書き込み、 `eventCache`、 `source`、`eventType`と`id`ヘッダーとトレースのフッター内のパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="3e01d-210">The default implementation writes the `eventCache`, `source`, `eventType` and `id` parameters in the header and footer of the trace.</span></span> <span data-ttu-id="3e01d-211">`data`パラメーターは、トレース メッセージの本文として書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="3e01d-211">The `data` parameter is written as the body of the trace message.</span></span> <span data-ttu-id="3e01d-212">`ToString`データ オブジェクトのメソッドを使用して変換するオブジェクト、<xref:System.String>です。</span><span class="sxs-lookup"><span data-stu-id="3e01d-212">The `ToString` method of the data object is used to convert the object to a <xref:System.String>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public virtual void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit&#xA;override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="traceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="3e01d-213">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-213">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="3e01d-214">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-214">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="3e01d-215">トレースを発生させたイベントのタイプを指定する <see cref="T:System.Diagnostics.TraceEventType" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-215">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="3e01d-216">イベントの数値識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-216">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="3e01d-217">データとして出力するオブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-217">An array of objects to emit as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e01d-218">トレース情報、データ オブジェクトの配列、およびイベント情報をリスナー固有の出力に書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-218">Writes trace information, an array of data objects and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e01d-219">このメソッドは、アプリケーション コードで直接のメンバーによっても呼び出されるものではありません、 <xref:System.Diagnostics.Debug>、 <xref:System.Diagnostics.Trace>、および<xref:System.Diagnostics.TraceSource>を出力するトレース データを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3e01d-219">This method is not intended to be called directly by application code but by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 <span data-ttu-id="3e01d-220">既定の実装がの値を書き込みます、 `source`、`eventType`と`id`ヘッダーとして使用されるパラメーター。</span><span class="sxs-lookup"><span data-stu-id="3e01d-220">The default implementation writes the values of the `source`, `eventType` and `id` parameters as a header.</span></span> <span data-ttu-id="3e01d-221">データ オブジェクトを使用して文字列に変換されます、`ToString`各オブジェクトのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="3e01d-221">The data objects are converted to strings using the `ToString` method of each object.</span></span> <span data-ttu-id="3e01d-222">`eventCache`フッターの値に依存している出力データの性質としてデータが書き込まれる、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3e01d-222">The `eventCache` data is written as a footer, the nature of the output data being dependent on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3e01d-223">トレース情報およびイベント情報をリスナー固有の出力に書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-223">Writes trace and event information to the listener specific output.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public virtual void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id);" />
      <MemberSignature Language="F#" Value="abstract member TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int -&gt; unit&#xA;override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int -&gt; unit" Usage="traceListener.TraceEvent (eventCache, source, eventType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="3e01d-224">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-224">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="3e01d-225">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-225">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="3e01d-226">トレースを発生させたイベントのタイプを指定する <see cref="T:System.Diagnostics.TraceEventType" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-226">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="3e01d-227">イベントの数値識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-227">A numeric identifier for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e01d-228">トレース情報およびイベント情報をリスナー固有の出力に書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-228">Writes trace and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e01d-229">このメソッドは、アプリケーション コードで直接のメンバーによっても呼び出されるものではありません、 <xref:System.Diagnostics.Debug>、 <xref:System.Diagnostics.Trace>、および<xref:System.Diagnostics.TraceSource>を出力するトレース データを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3e01d-229">This method is not intended to be called directly by application code but by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 <span data-ttu-id="3e01d-230">既定の実装がの値を書き込みます、 `source`、`eventType`と`id`ヘッダーとして使用されるパラメーター。</span><span class="sxs-lookup"><span data-stu-id="3e01d-230">The default implementation writes the values of the `source`, `eventType` and `id` parameters as a header.</span></span> <span data-ttu-id="3e01d-231">`eventCache`フッターの値に依存している出力データの性質としてデータが書き込まれる、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3e01d-231">The `eventCache` data is written as a footer, the nature of the output data being dependent on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public virtual void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit&#xA;override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="traceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="3e01d-232">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-232">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="3e01d-233">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-233">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="3e01d-234">トレースを発生させたイベントのタイプを指定する <see cref="T:System.Diagnostics.TraceEventType" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-234">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="3e01d-235">イベントの数値識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-235">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="3e01d-236">書き込むメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-236">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e01d-237">トレース情報、メッセージ、およびイベント情報をリスナー固有の出力に書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-237">Writes trace information, a message, and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e01d-238">このメソッドは、アプリケーション コードで直接のメンバーによっても呼び出されるものではありません、 <xref:System.Diagnostics.Debug>、 <xref:System.Diagnostics.Trace>、および<xref:System.Diagnostics.TraceSource>を出力するトレース データを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3e01d-238">This method is not intended to be called directly by application code but by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 <span data-ttu-id="3e01d-239">既定の実装がの値を書き込みます、 `source`、`eventType`と`id`、ヘッダーとして使用されるパラメーターが続く、`message`データ。</span><span class="sxs-lookup"><span data-stu-id="3e01d-239">The default implementation writes the values of the `source`, `eventType` and `id` parameters as a header, followed by the `message` data.</span></span> <span data-ttu-id="3e01d-240">`eventCache`フッターの値に依存している出力データの性質としてデータが書き込まれる、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3e01d-240">The `eventCache` data is written as a footer, the nature of the output data being dependent on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public virtual void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit&#xA;override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="traceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="3e01d-241">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-241">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="3e01d-242">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-242">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="3e01d-243">トレースを発生させたイベントのタイプを指定する <see cref="T:System.Diagnostics.TraceEventType" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-243">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="3e01d-244">イベントの数値識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-244">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="3e01d-245">0 個以上の書式項目を格納している書式指定文字列。<c>args</c> 配列内のオブジェクトに対応します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-245">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="3e01d-246">0 個以上の書式設定対象オブジェクトを含んだ <see langword="object" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-246">An <see langword="object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e01d-247">トレース情報、オブジェクトの書式付き配列、およびイベント情報をリスナー固有の出力に書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-247">Writes trace information, a formatted array of objects and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e01d-248">このメソッドは、アプリケーション コードで直接のメンバーによっても呼び出されるものではありません、 <xref:System.Diagnostics.Debug>、 <xref:System.Diagnostics.Trace>、および<xref:System.Diagnostics.TraceSource>を出力するトレース データを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3e01d-248">This method is not intended to be called directly by application code but by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 <span data-ttu-id="3e01d-249">既定の実装がの値を書き込みます、 `source`、`eventType`と`id`ヘッダーとして使用されるパラメーター。</span><span class="sxs-lookup"><span data-stu-id="3e01d-249">The default implementation writes the values of the `source`, `eventType` and `id` parameters as a header.</span></span> <span data-ttu-id="3e01d-250">`args`オブジェクトの配列を使用して文字列に変換、<xref:System.String.Format%2A>渡して、メソッド、`format`文字列と`args`トレースのメッセージ部分として文字列を書式設定する配列。</span><span class="sxs-lookup"><span data-stu-id="3e01d-250">The `args` object array is converted to a string using the <xref:System.String.Format%2A> method, passing the `format` string and `args` array to format the string as the message portion of the trace.</span></span> <span data-ttu-id="3e01d-251">`eventCache`フッターの値に依存している出力データの性質としてデータが書き込まれる、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3e01d-251">The `eventCache` data is written as a footer, the nature of the output data being dependent on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceOutputOptions">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceOptions TraceOutputOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.TraceOptions TraceOutputOptions" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property TraceOutputOptions As TraceOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceOptions TraceOutputOptions { System::Diagnostics::TraceOptions get(); void set(System::Diagnostics::TraceOptions value); };" />
      <MemberSignature Language="F#" Value="member this.TraceOutputOptions : System.Diagnostics.TraceOptions with get, set" Usage="System.Diagnostics.TraceListener.TraceOutputOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e01d-252">トレース出力オプションを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-252">Gets or sets the trace output options.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e01d-253">列挙値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-253">A bitwise combination of the enumeration values.</span>
          </span>
          <span data-ttu-id="3e01d-254">既定値は、<see cref="F:System.Diagnostics.TraceOptions.None" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-254">The default is <see cref="F:System.Diagnostics.TraceOptions.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e01d-255"><xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティは、トレース出力の省略可能なコンテンツを決定します。</span><span class="sxs-lookup"><span data-stu-id="3e01d-255">The <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property determines the optional content of trace output.</span></span> <span data-ttu-id="3e01d-256">プロパティは、コードのセクションを具体的には追加のデータを含む構成ファイルまたはプログラムで実行中に設定できます。</span><span class="sxs-lookup"><span data-stu-id="3e01d-256">The property can be set in the configuration file or programmatically during execution to include additional data specifically for a section of code.</span></span> <span data-ttu-id="3e01d-257">たとえば、設定することができます、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>コンソール トレース リスナーのプロパティを<xref:System.Diagnostics.TraceOptions.Callstack?displayProperty=nameWithType>トレース出力にコール スタック情報を追加します。</span><span class="sxs-lookup"><span data-stu-id="3e01d-257">For example, you can set the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for the console trace listener to <xref:System.Diagnostics.TraceOptions.Callstack?displayProperty=nameWithType> to add call stack information to the trace output.</span></span>  
  
 <span data-ttu-id="3e01d-258"><xref:System.Diagnostics.TraceOptions>列挙体は、次のクラスやメソッドでは使用されません。</span><span class="sxs-lookup"><span data-stu-id="3e01d-258">The <xref:System.Diagnostics.TraceOptions> enumeration is not used by the following classes and methods:</span></span>  
  
-   <span data-ttu-id="3e01d-259"><xref:System.Diagnostics.EventLogTraceListener>クラス、大量のログに書き込まれるデータを引き起こす可能性があるためです。</span><span class="sxs-lookup"><span data-stu-id="3e01d-259">The <xref:System.Diagnostics.EventLogTraceListener> class, because it can cause a large volume of data to be written to the log.</span></span>  
  
-   <span data-ttu-id="3e01d-260">`Write`と`WriteLine`のメソッド、 <xref:System.Diagnostics.ConsoleTraceListener>、 <xref:System.Diagnostics.DefaultTraceListener>、および<xref:System.Diagnostics.TextWriterTraceListener>クラスです。</span><span class="sxs-lookup"><span data-stu-id="3e01d-260">The `Write` and `WriteLine` methods of the <xref:System.Diagnostics.ConsoleTraceListener>, <xref:System.Diagnostics.DefaultTraceListener>, and <xref:System.Diagnostics.TextWriterTraceListener> classes.</span></span>  
  
-   <span data-ttu-id="3e01d-261"><xref:System.Diagnostics.TraceListener.Write%2A>と<xref:System.Diagnostics.TraceListener.WriteLine%2A>のメソッド、<xref:System.Diagnostics.TraceListener>クラスの派生クラスでオーバーライドされないときです。</span><span class="sxs-lookup"><span data-stu-id="3e01d-261">The <xref:System.Diagnostics.TraceListener.Write%2A> and <xref:System.Diagnostics.TraceListener.WriteLine%2A> methods of the <xref:System.Diagnostics.TraceListener> class when they are not overridden in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e01d-262">次の例の設定が表示、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>コンソール トレース リスナーのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="3e01d-262">The following example shows the setting of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for a console trace listener.</span></span> <span data-ttu-id="3e01d-263">列挙されたリスナーのいずれかのコンソール トレース リスナーは、<xref:System.Diagnostics.TraceSource.Listeners%2A>トレース ソースのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="3e01d-263">The console trace listener is one of the listeners enumerated in the <xref:System.Diagnostics.TraceSource.Listeners%2A> property of a trace source.</span></span> <span data-ttu-id="3e01d-264">このコード例に示されている例の一部である、<xref:System.Diagnostics.TraceSource>クラスです。</span><span class="sxs-lookup"><span data-stu-id="3e01d-264">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#16)]
 [!code-vb[System.Diagnostics.TraceSource2#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3e01d-265">値が無効なため、設定操作に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-265">Set operation failed because the value is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public virtual void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceTransfer(class System.Diagnostics.TraceEventCache eventCache, string source, int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraceTransfer (eventCache As TraceEventCache, source As String, id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TraceTransfer(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberSignature Language="F#" Value="abstract member TraceTransfer : System.Diagnostics.TraceEventCache * string * int * string * Guid -&gt; unit&#xA;override this.TraceTransfer : System.Diagnostics.TraceEventCache * string * int * string * Guid -&gt; unit" Usage="traceListener.TraceTransfer (eventCache, source, id, message, relatedActivityId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="3e01d-266">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-266">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="3e01d-267">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-267">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="3e01d-268">イベントの数値識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-268">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="3e01d-269">書き込むメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-269">A message to write.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="3e01d-270">関連するアクティビティを識別する <see cref="T:System.Guid" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-270">A <see cref="T:System.Guid" /> object identifying a related activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e01d-271">トレース情報、メッセージ、関連するアクティビティ ID、およびイベント情報をリスナー固有の出力に書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-271">Writes trace information, a message, a related activity identity and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e01d-272">このメソッドは、アプリケーション コードで直接のメンバーによっても呼び出されるものではありません、 <xref:System.Diagnostics.Debug>、 <xref:System.Diagnostics.Trace>、および<xref:System.Diagnostics.TraceSource>を出力するトレース データを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3e01d-272">This method is not intended to be called directly by application code but by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 <span data-ttu-id="3e01d-273"><xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A>メソッドは、関連するトレースの相関関係を使用します。</span><span class="sxs-lookup"><span data-stu-id="3e01d-273">The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is used for the correlation of related traces.</span></span> <span data-ttu-id="3e01d-274"><xref:System.Diagnostics.TraceListener.TraceTransfer%2A>メソッドの呼び出し、 <xref:System.Diagnostics.TraceListener.TraceEvent%2A> eventType レベル設定されている呼び出しを処理するメソッド<xref:System.Diagnostics.TraceEventType.Transfer>と`relatedActivityId`<xref:System.Guid>としてメッセージに追加される文字列。</span><span class="sxs-lookup"><span data-stu-id="3e01d-274">The <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> method calls the <xref:System.Diagnostics.TraceListener.TraceEvent%2A> method to process the call, with the eventType level set to <xref:System.Diagnostics.TraceEventType.Transfer> and the `relatedActivityId`<xref:System.Guid> as a string appended to the message.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3e01d-275">
            <see cref="M:System.Object.ToString" /> クラスを実装した時に作成したリスナーにメッセージ、カテゴリ名、またはオブジェクトの <see cref="T:System.Diagnostics.TraceListener" /> メソッドの値を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-275">Writes a message, category name, or the value of an object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="abstract member Write : obj -&gt; unit&#xA;override this.Write : obj -&gt; unit" Usage="traceListener.Write o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="3e01d-276">書き込む完全修飾クラス名をもつ <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-276">An <see cref="T:System.Object" /> whose fully qualified class name you want to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e01d-277">オブジェクトの <see cref="M:System.Object.ToString" /> メソッドの値を、<see cref="T:System.Diagnostics.TraceListener" /> クラスを実装した時に作成したリスナーに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-277">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Write : string -&gt; unit" Usage="traceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="3e01d-278">書き込むメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-278">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e01d-279">派生クラスでオーバーライドした場合、指定したメッセージを派生クラスで作成したリスナーに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-279">When overridden in a derived class, writes the specified message to the listener you create in the derived class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="3e01d-280">
            <para>このクラスから継承する、ときに、このメソッドを実装する必要があります。サポートするには、インデントを呼び出す必要があります<see cref="M:System.Diagnostics.TraceListener.WriteIndent" />場合<see cref="P:System.Diagnostics.TraceListener.NeedIndent" />は<see langword="true" />します。リセットする必要がある、次の行のインデントを設定する必要がある場合<see cref="P:System.Diagnostics.TraceListener.NeedIndent" />に<see langword="true" />です。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-280">
              <para>When inheriting from this class, you must implement this method. To support an indentation, you should call <see cref="M:System.Diagnostics.TraceListener.WriteIndent" /> if <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> is <see langword="true" />. If you need to indent the following line, you must reset <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> to <see langword="true" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (object o, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(object o, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (o As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Object ^ o, System::String ^ category);" />
      <MemberSignature Language="F#" Value="abstract member Write : obj * string -&gt; unit&#xA;override this.Write : obj * string -&gt; unit" Usage="traceListener.Write (o, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="3e01d-281">書き込む完全修飾クラス名をもつ <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-281">An <see cref="T:System.Object" /> whose fully qualified class name you want to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="3e01d-282">出力を編成するために使用するカテゴリ名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-282">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e01d-283">カテゴリ名と、オブジェクトの <see cref="M:System.Object.ToString" /> メソッドの値を、<see cref="T:System.Diagnostics.TraceListener" /> クラスを実装するときに作成したリスナーに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-283">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * string -&gt; unit&#xA;override this.Write : string * string -&gt; unit" Usage="traceListener.Write (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="3e01d-284">書き込むメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-284">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="3e01d-285">出力を編成するために使用するカテゴリ名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-285">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e01d-286">
            <see cref="T:System.Diagnostics.TraceListener" /> クラスを実装した時に作成したリスナーにカテゴリ名とメッセージを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-286">Writes a category name and a message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteIndent">
      <MemberSignature Language="C#" Value="protected virtual void WriteIndent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteIndent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.WriteIndent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteIndent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteIndent();" />
      <MemberSignature Language="F#" Value="abstract member WriteIndent : unit -&gt; unit&#xA;override this.WriteIndent : unit -&gt; unit" Usage="traceListener.WriteIndent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3e01d-287">このクラスの実装時に作成したリスナーにインデントを書き込み、<see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> プロパティを <see langword="false" /> にリセットします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-287">Writes the indent to the listener you create when you implement this class, and resets the <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> property to <see langword="false" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e01d-288">このメソッドを選択し、インデントを書き込み、リセット、<xref:System.Diagnostics.TraceListener.NeedIndent%2A>プロパティを`false`です。</span><span class="sxs-lookup"><span data-stu-id="3e01d-288">This method writes the indent and resets the <xref:System.Diagnostics.TraceListener.NeedIndent%2A> property to `false`.</span></span> <span data-ttu-id="3e01d-289">場合、このメソッドを呼び出す<xref:System.Diagnostics.TraceListener.NeedIndent%2A>は`true`オーバーライドして、<xref:System.Diagnostics.TraceListener.Write%2A>と<xref:System.Diagnostics.TraceListener.WriteLine%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="3e01d-289">Call this method if <xref:System.Diagnostics.TraceListener.NeedIndent%2A> is `true` when you are overriding the <xref:System.Diagnostics.TraceListener.Write%2A> and <xref:System.Diagnostics.TraceListener.WriteLine%2A> methods.</span></span> <span data-ttu-id="3e01d-290">既定は、このメソッドは、インデントに含まれている空白を使用します。</span><span class="sxs-lookup"><span data-stu-id="3e01d-290">By default, this method uses blank spaces for indentation.</span></span> <span data-ttu-id="3e01d-291">インデントのサイズの値によって決まります、<xref:System.Diagnostics.TraceListener.IndentSize%2A>と<xref:System.Diagnostics.TraceListener.IndentLevel%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3e01d-291">The size of the indent is determined by the values of the <xref:System.Diagnostics.TraceListener.IndentSize%2A> and <xref:System.Diagnostics.TraceListener.IndentLevel%2A> properties.</span></span> <span data-ttu-id="3e01d-292"><xref:System.Diagnostics.TraceListener.IndentLevel%2A>プロパティを表す回数が指定したサイズのインデント、<xref:System.Diagnostics.TraceListener.IndentSize%2A>プロパティを適用します。</span><span class="sxs-lookup"><span data-stu-id="3e01d-292">The <xref:System.Diagnostics.TraceListener.IndentLevel%2A> property represents the number of times the indent of the size specified by the <xref:System.Diagnostics.TraceListener.IndentSize%2A> property is applied.</span></span> <span data-ttu-id="3e01d-293">このメソッドは、<xref:System.Diagnostics.DefaultTraceListener>と<xref:System.Diagnostics.TextWriterTraceListener>クラスです。</span><span class="sxs-lookup"><span data-stu-id="3e01d-293">This method is called by the <xref:System.Diagnostics.DefaultTraceListener> and <xref:System.Diagnostics.TextWriterTraceListener> classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3e01d-294">
            <see cref="M:System.Object.ToString" /> クラスの実装時に作成したリスナーにメッセージ、カテゴリ名、またはオブジェクトの <see cref="T:System.Diagnostics.TraceListener" /> メソッドの値と、行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-294">Writes a message, category name, or the value of an object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class, followed by a line terminator.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : obj -&gt; unit&#xA;override this.WriteLine : obj -&gt; unit" Usage="traceListener.WriteLine o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="3e01d-295">書き込む完全修飾クラス名をもつ <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-295">An <see cref="T:System.Object" /> whose fully qualified class name you want to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e01d-296">
            <see cref="T:System.Diagnostics.TraceListener" /> クラスの実装時に作成したリスナーにオブジェクトの <see cref="M:System.Object.ToString" /> メソッドの値と行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-296">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class, followed by a line terminator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e01d-297">実装することが通常の行終端記号は、キャリッジ リターンとライン フィード (\r\n) です。</span><span class="sxs-lookup"><span data-stu-id="3e01d-297">The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public abstract void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string -&gt; unit" Usage="traceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="3e01d-298">書き込むメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-298">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e01d-299">派生クラスでオーバーライドした場合、派生クラスで作成したリスナーにメッセージと行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-299">When overridden in a derived class, writes a message to the listener you create in the derived class, followed by a line terminator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e01d-300">実装することが通常の行終端記号は、キャリッジ リターンとライン フィード (\r\n) です。</span><span class="sxs-lookup"><span data-stu-id="3e01d-300">The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="3e01d-301">
            <para>このクラスから継承する、ときに、このメソッドを実装する必要があります。サポートするには、インデント呼び出す<see cref="M:System.Diagnostics.TraceListener.WriteIndent" />場合<see cref="P:System.Diagnostics.TraceListener.NeedIndent" />は<see langword="true" />します。次の行のインデントを設定する必要がありますをリセットする<see cref="P:System.Diagnostics.TraceListener.NeedIndent" />に<see langword="true" />です。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-301">
              <para>When inheriting from this class, you must implement this method. To support an indentation, call <see cref="M:System.Diagnostics.TraceListener.WriteIndent" /> if <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> is <see langword="true" />. To indent the following line, you must reset <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> to <see langword="true" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (object o, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(object o, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (o As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::Object ^ o, System::String ^ category);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : obj * string -&gt; unit&#xA;override this.WriteLine : obj * string -&gt; unit" Usage="traceListener.WriteLine (o, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="3e01d-302">書き込む完全修飾クラス名をもつ <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-302">An <see cref="T:System.Object" /> whose fully qualified class name you want to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="3e01d-303">出力を編成するために使用するカテゴリ名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-303">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e01d-304">
            <see cref="T:System.Diagnostics.TraceListener" /> クラスの実装時に作成したリスナーにカテゴリ名、オブジェクトの <see cref="M:System.Object.ToString" /> メソッドの値、および行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-304">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class, followed by a line terminator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e01d-305">実装することが通常の行終端記号は、キャリッジ リターンとライン フィード (\r\n) です。</span><span class="sxs-lookup"><span data-stu-id="3e01d-305">The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * string -&gt; unit&#xA;override this.WriteLine : string * string -&gt; unit" Usage="traceListener.WriteLine (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="3e01d-306">書き込むメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-306">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="3e01d-307">出力を編成するために使用するカテゴリ名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-307">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e01d-308">
            <see cref="T:System.Diagnostics.TraceListener" /> クラスの実装時に作成したリスナーにカテゴリ名、メッセージ、および行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e01d-308">Writes a category name and a message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class, followed by a line terminator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e01d-309">実装することが通常の行終端記号は、キャリッジ リターンとライン フィード (\r\n) です。</span><span class="sxs-lookup"><span data-stu-id="3e01d-309">The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
  </Members>
</Type>