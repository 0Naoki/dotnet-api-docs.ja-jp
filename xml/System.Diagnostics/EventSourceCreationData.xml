<Type Name="EventSourceCreationData" FullName="System.Diagnostics.EventSourceCreationData">
  <TypeSignature Language="C#" Value="public class EventSourceCreationData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventSourceCreationData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventSourceCreationData" />
  <TypeSignature Language="VB.NET" Value="Public Class EventSourceCreationData" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventSourceCreationData" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c1eb3-101">ローカル コンピューターまたはリモート コンピューターでイベント ログ ソースを作成するために使用される構成設定を表します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-101">Represents the configuration settings used to create an event log source on the local computer or a remote computer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1eb3-102">使用して、<xref:System.Diagnostics.EventSourceCreationData>ローカライズされたエントリをイベント ログに書き込むための新しいソースを構成するクラス。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-102">Use the <xref:System.Diagnostics.EventSourceCreationData> class to configure a new source for writing localized entries to an event log.</span></span> <span data-ttu-id="c1eb3-103">このクラスをイベント ログから読み取りに使用する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-103">It is not necessary to use this class to read from an event log.</span></span>  
  
 <span data-ttu-id="c1eb3-104">このクラスは、新しいイベント ソースとその関連のイベント ログの構成設定を定義します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-104">This class defines the configuration settings for a new event source and its associated event log.</span></span> <span data-ttu-id="c1eb3-105">関連のイベント ログは、ローカル コンピューターまたはリモート コンピューターに配置できます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-105">The associated event log can be on the local computer or a remote computer.</span></span> <span data-ttu-id="c1eb3-106">ローカル コンピューターで、新規または既存のイベント ログ用に新しいソースを作成するには、設定、<xref:System.Diagnostics.EventSourceCreationData.LogName%2A>と<xref:System.Diagnostics.EventSourceCreationData.Source%2A>のプロパティ、<xref:System.Diagnostics.EventSourceCreationData>を呼び出すと、<xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-106">To create a new source for a new or existing event log on the local computer, set the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> and <xref:System.Diagnostics.EventSourceCreationData.Source%2A> properties of an <xref:System.Diagnostics.EventSourceCreationData> and call the <xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c1eb3-107">このメソッドで指定したイベント ソースを作成する、<xref:System.Diagnostics.EventSourceCreationData.Source%2A>で指定されたイベント ログのプロパティとレジスタ<xref:System.Diagnostics.EventSourceCreationData.LogName%2A>です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-107">This method creates the event source you specify in the <xref:System.Diagnostics.EventSourceCreationData.Source%2A> property and registers it for the event log specified in <xref:System.Diagnostics.EventSourceCreationData.LogName%2A>.</span></span> <span data-ttu-id="c1eb3-108">この動作の使用と似ています、<xref:System.Diagnostics.EventLogInstaller>イベント ログのイベント ソースを登録するクラス。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-108">This behavior is similar to using the <xref:System.Diagnostics.EventLogInstaller> class to register an event source for an event log.</span></span>  
  
 <span data-ttu-id="c1eb3-109">使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>と<xref:System.Diagnostics.EventLog.WriteEntry%2A>メソッド、イベント ログにイベントを書き込めません。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-109">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods to write events to an event log.</span></span> <span data-ttu-id="c1eb3-110">イベントを書き込むイベント ソースを指定する必要があります。作成し、ソースとの最初のエントリを書き込む前に、イベント ソースを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-110">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="c1eb3-111">アプリケーションのインストール中に新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-111">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="c1eb3-112">これにより、登録されたイベント ソースの一覧とその構成を更新するオペレーティング システムの時間です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-112">This allows time for the operating system to refresh its list of registered event sources and their configurations.</span></span> <span data-ttu-id="c1eb3-113">オペレーティング システムがイベント ソースの一覧を更新していないしようとして、新しいソースとイベントを書き込む、書き込み操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-113">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="c1eb3-114">新しいソースを使用して、構成することができます、 <xref:System.Diagnostics.EventLogInstaller>、またはを使用して、<xref:System.Diagnostics.EventLog.CreateEventSource%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-114">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="c1eb3-115">新しいイベント ソースを作成するコンピューターで管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-115">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="c1eb3-116">既存のイベント ログまたは新しいイベント ログのイベント ソースを作成することができます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-116">You can create an event source for an existing event log or a new event log.</span></span> <span data-ttu-id="c1eb3-117">新しいイベント ログ用に新しいソースを作成するときに、システムがそのログのソースを登録しますが、最初のエントリが書き込まれるまで、ログは作成されません。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-117">When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="c1eb3-118">同時に、各ソースは 1 つのイベント ログに書き込むだけことができます。ただし、アプリケーションでは、複数のイベント ログに書き込むに複数のソースを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-118">Each source can only write to one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="c1eb3-119">たとえば、アプリケーションでは、異なるイベント ログまたは別のリソース ファイル用に構成された複数のソースを必要があります。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-119">For example, your application might need multiple sources configured for different event logs or different resource files.</span></span>  
  
 <span data-ttu-id="c1eb3-120">既存のソースの構成の詳細を変更するには、ソースを削除してから、新しい構成を使用して作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-120">To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</span></span> <span data-ttu-id="c1eb3-121">他のアプリケーションやコンポーネントは、既存のソースを使用して、既存のソースを削除するのではなく、更新された構成で新しいソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-121">If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.</span></span>  
  
 <span data-ttu-id="c1eb3-122">イベント ソースは、イベント カテゴリおよびメッセージ文字列のローカライズされたリソースを登録できます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-122">You can register the event source with localized resources for your event category and message strings.</span></span> <span data-ttu-id="c1eb3-123">アプリケーションでは、実際の文字列を指定するのではなく、リソースの識別子を使用してイベント ログ エントリを書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-123">Your application can write event log entries using resource identifiers, rather than specifying the actual string.</span></span> <span data-ttu-id="c1eb3-124">イベント ビューアーでは、リソースの識別子を使用して、検索し、現在の言語設定に基づくローカライズされたリソース ファイルから対応する文字列を表示します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-124">The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings.</span></span> <span data-ttu-id="c1eb3-125">イベント カテゴリ、メッセージ、および挿入の文字列のパラメーターに個別のファイルを登録することができます、またはすべての 3 種類の文字列に同じリソース ファイルを登録することができます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-125">You can register a separate file for event categories, messages, and parameter insertion strings, or you can register the same resource file for all three types of strings.</span></span> <span data-ttu-id="c1eb3-126">使用して、 <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>、 <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>、 <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>、および<xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A>ローカライズされたエントリをイベント ログに書き込むには、ソースを構成するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-126">Use the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>, <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>, <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>, and <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> properties to configure the source to write localized entries to the event log.</span></span> <span data-ttu-id="c1eb3-127">アプリケーションがイベント ログに直接文字列値を書き込む場合は、これらのプロパティを設定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-127">If your application writes string values directly to the event log, you do not need to set these properties.</span></span>  
  
 <span data-ttu-id="c1eb3-128">ローカライズされたエントリを書き込むか、または直接の文字列を作成するため、ソースを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-128">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="c1eb3-129"><xref:System.Diagnostics.EventLog.WriteEntry%2A>メソッドは、イベント ログに直接指定した文字列を書き込みます。 ローカライズ可能なメッセージ リソース ファイルは使用されません。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-129">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="c1eb3-130">使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>ローカライズされたメッセージ リソース ファイルを使用してイベントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-130">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="c1eb3-131">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2 つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-131">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="c1eb3-132">たとえば、リソース ファイルを 1 つのソースを構成しでそのソースを使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>をイベント ログのリソース識別子を使用してエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-132">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="c1eb3-133">リソース ファイルなしで別のソースを作成し、使用するソースで、、<xref:System.Diagnostics.EventLog.WriteEntry%2A>にそのソースを使用して、イベント ログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-133">Then create a different source without resource files and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1eb3-134">次のコード例では、コマンドライン引数からイベント ソースの構成プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-134">The following code example sets the configuration properties for an event source from command-line arguments.</span></span> <span data-ttu-id="c1eb3-135">入力引数は、イベント ソースの名前、イベント ログ名、コンピューター名、およびイベント メッセージ リソース ファイルを指定します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-135">The input arguments specify the event source name, event log name, computer name, and event message resource file.</span></span> <span data-ttu-id="c1eb3-136">このコード例は、ソースは既存のイベント ソースと競合しないし、指定されたイベント ログの新しいイベント ソースを作成を検証します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-136">The code example verifies that the source does not conflict with an existing event source, and then creates the new event source for the specified event log.</span></span>  
  
 [!code-cpp[EventLog_EventSourceCreation_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CPP/source.cpp#1)]
 [!code-csharp[EventLog_EventSourceCreation_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CS/source.cs#1)]
 [!code-vb[EventLog_EventSourceCreation_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c1eb3-137">すべてのメンバーを呼び出すため<see cref="T:System.Diagnostics.EventSourceCreationData" />完全に信頼します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-137">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span></span> <span data-ttu-id="c1eb3-138">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c1eb3-138">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
    <altmember cref="T:System.Diagnostics.EventLog" />
    <altmember cref="T:System.Diagnostics.EventLogInstaller" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSourceCreationData (string source, string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string source, string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As String, logName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSourceCreationData(System::String ^ source, System::String ^ logName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="c1eb3-139">エントリのソースとしてイベント ログに登録する名前。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-139">The name to register with the event log as a source of entries.</span></span></param>
        <param name="logName"><span data-ttu-id="c1eb3-140">ソースのエントリが書き込まれるログの名前。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-140">The name of the log to which entries from the source are written.</span></span></param>
        <summary><span data-ttu-id="c1eb3-141">指定したイベント ソースおよびイベント ログ名を使用して、<see cref="T:System.Diagnostics.EventSourceCreationData" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-141">Initializes a new instance of the <see cref="T:System.Diagnostics.EventSourceCreationData" /> class with a specified event source and event log name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1eb3-142">エントリをイベント ログに書き込むには、まず、イベント ログのイベント ソースを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-142">To write entries to an event log, you must first create an event source for the event log.</span></span> <span data-ttu-id="c1eb3-143">新しいソースを登録するには、初期化、<xref:System.Diagnostics.EventSourceCreationData>インスタンスのアプリケーション、および呼び出しのインスタンスのプロパティを構成、<xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-143">To register a new source, initialize an <xref:System.Diagnostics.EventSourceCreationData> instance, configure the instance properties for your application, and call the <xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c1eb3-144">使用して、ソースからエントリを記述するには、ソースを登録した後、<xref:System.Diagnostics.EventLog.WriteEvent%2A>または<xref:System.Diagnostics.EventLog.WriteEntry%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-144">After the source is registered, you can write entries from the source using the <xref:System.Diagnostics.EventLog.WriteEvent%2A> or <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods.</span></span>  
  
 <span data-ttu-id="c1eb3-145">イベント ソースは、イベント カテゴリおよびメッセージ文字列のローカライズされたリソースを登録できます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-145">You can register the event source with localized resources for your event category and message strings.</span></span> <span data-ttu-id="c1eb3-146">アプリケーションでは、実際の文字列を指定するのではなく、リソースの識別子を使用してイベント ログ エントリを書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-146">Your application can write event log entries using resource identifiers, rather than specifying the actual string.</span></span> <span data-ttu-id="c1eb3-147">イベント ビューアーでは、リソースの識別子を使用して、検索し、現在の言語設定に基づくローカライズされたリソース ファイルから対応する文字列を表示します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-147">The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings.</span></span> <span data-ttu-id="c1eb3-148">イベント カテゴリ、メッセージ、および挿入の文字列のパラメーターに個別のファイルを登録することができます、またはすべての 3 種類の文字列に同じリソース ファイルを登録することができます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-148">You can register a separate file for event categories, messages, and parameter insertion strings, or you can register the same resource file for all three types of strings.</span></span> <span data-ttu-id="c1eb3-149">使用して、 <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>、 <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>、 <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>、および<xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A>ローカライズされたエントリをイベント ログに書き込むには、ソースを構成するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-149">Use the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>, <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>, <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>, and <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> properties to configure the source to write localized entries to the event log.</span></span> <span data-ttu-id="c1eb3-150">アプリケーションがイベント ログに直接文字列値を書き込む場合は、これらのプロパティを設定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-150">If your application writes string values directly to the event log, you do not need to set these properties.</span></span>  
  
 <span data-ttu-id="c1eb3-151">ローカライズされたエントリを書き込むか、または直接の文字列を作成するため、ソースを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-151">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="c1eb3-152">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2 つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-152">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="c1eb3-153">たとえば、リソース ファイルを 1 つのソースを構成しでそのソースを使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>をイベント ログのリソース識別子を使用してエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-153">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="c1eb3-154">リソース ファイルなしで別のソースを作成し、使用するソースで、、<xref:System.Diagnostics.EventLog.WriteEntry%2A>イベント ログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-154">Then create a different source without resource files and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log.</span></span>  
  
 <span data-ttu-id="c1eb3-155">次の表の初期プロパティ値を示しています、<xref:System.Diagnostics.EventSourceCreationData>です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-155">The following table shows initial property values for an <xref:System.Diagnostics.EventSourceCreationData>.</span></span>  
  
|<span data-ttu-id="c1eb3-156">プロパティ</span><span class="sxs-lookup"><span data-stu-id="c1eb3-156">Property</span></span>|<span data-ttu-id="c1eb3-157">初期値</span><span class="sxs-lookup"><span data-stu-id="c1eb3-157">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Diagnostics.EventSourceCreationData.Source%2A>|<span data-ttu-id="c1eb3-158">`source` パラメーター。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-158">The `source` parameter.</span></span>|  
|<xref:System.Diagnostics.EventSourceCreationData.LogName%2A>|<span data-ttu-id="c1eb3-159">`logName` パラメーター。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-159">The `logName` parameter.</span></span>|  
|<xref:System.Diagnostics.EventSourceCreationData.MachineName%2A>|<span data-ttu-id="c1eb3-160">ローカル コンピューター ("です。") です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-160">The local computer (".").</span></span>|  
|<xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>|<span data-ttu-id="c1eb3-161">0</span><span class="sxs-lookup"><span data-stu-id="c1eb3-161">Zero</span></span>|  
|<xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>|<span data-ttu-id="c1eb3-162">`null` (Visual Basic の場合は `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-162">`null` (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>|<span data-ttu-id="c1eb3-163">`null` (Visual Basic の場合は `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-163">`null` (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A>|<span data-ttu-id="c1eb3-164">`null` (Visual Basic の場合は `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-164">`null` (`Nothing` in Visual Basic).</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c1eb3-165">次のコード例では、イベント ソースが名前付きかどうかを判断`SampleApplicationSource`がローカル コンピューターに登録されています。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-165">The following code example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="c1eb3-166">イベント ソースが存在しない場合の例は、ソースのメッセージ リソース ファイルを設定し、新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-166">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="c1eb3-167">コード例で、リソースの識別子の値を使用して、イベント ログのローカライズされた表示名を設定する最後に、`DisplayNameMsgId`とリソース ファイルのパスに`messageFile`です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-167">Finally, the code example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="c1eb3-168">コード例では、リソース ライブラリ EventLogMsgs.dll に組み込まれている次のメッセージ テキスト ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-168">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="c1eb3-169">メッセージのテキスト ファイルは、メッセージ リソース ファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-169">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="c1eb3-170">メッセージのテキスト ファイルでは、リソース識別子とカテゴリ、イベント メッセージ、および挿入の文字列のパラメーターのテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-170">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c1eb3-171">すべてのメンバーを呼び出すため<see cref="T:System.Diagnostics.EventSourceCreationData" />完全に信頼します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-171">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span></span> <span data-ttu-id="c1eb3-172">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c1eb3-172">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.Source" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.LogName" />
      </Docs>
    </Member>
    <Member MemberName="CategoryCount">
      <MemberSignature Language="C#" Value="public int CategoryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CategoryCount" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.CategoryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CategoryCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1eb3-173">カテゴリ リソース ファイル内のカテゴリの数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-173">Gets or sets the number of categories in the category resource file.</span></span></summary>
        <value><span data-ttu-id="c1eb3-174">カテゴリ リソース ファイル内のカテゴリの数。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-174">The number of categories in the category resource file.</span></span> <span data-ttu-id="c1eb3-175">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-175">The default value is zero.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1eb3-176">使用して、<xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>と<xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>でイベントを書き込むためのプロパティがカテゴリ文字列をローカライズします。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-176">Use the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> and <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> properties to write events with localized category strings.</span></span> <span data-ttu-id="c1eb3-177">イベント ビューアーでは、イベントを記述するときに、カテゴリを指定する場合、イベントのエントリのカテゴリが表示されます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-177">The Event Viewer displays the category for an event entry if you supply a category when you write the event.</span></span> <span data-ttu-id="c1eb3-178">イベント ログのカテゴリとは、イベントをフィルター処理、またはイベントで詳細情報を提供するアプリケーション定義の文字列です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-178">Event log categories are application-defined strings that help filter events, or provide further information on the event.</span></span> <span data-ttu-id="c1eb3-179">たとえば、アプリケーションでは、異なるコンポーネントまたは操作ごとに個別のカテゴリを定義できます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-179">For example, your application can define separate categories for different components or different operations.</span></span>  
  
 <span data-ttu-id="c1eb3-180">イベント カテゴリは省略可能です。アプリケーションがカテゴリを使用していない場合は設定しないで、<xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>と<xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-180">Event categories are optional; if your application does not use categories, do not set the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> and <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> properties.</span></span>  
  
 <span data-ttu-id="c1eb3-181">詳細については、イベント メッセージを定義し、イベントのリソース ファイルを構築する、プラットフォーム SDK のドキュメントの「メッセージ コンパイラ」トピックを参照してください[ http://msdn.microsoft.com](http://msdn.microsoft.com/)です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-181">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1eb3-182">次のコード例では、イベント ソースが名前付きかどうかを判断`SampleApplicationSource`がローカル コンピューターに登録されています。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-182">The following code example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="c1eb3-183">イベント ソースが存在しない場合の例は、ソースのメッセージ リソース ファイルを設定し、新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-183">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="c1eb3-184">コード例で、リソースの識別子の値を使用して、イベント ログのローカライズされた表示名を設定する最後に、`DisplayNameMsgId`とリソース ファイルのパスに`messageFile`です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-184">Finally, the code example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="c1eb3-185">コード例では、リソース ライブラリ EventLogMsgs.dll に組み込まれている次のメッセージ テキスト ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-185">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="c1eb3-186">メッセージのテキスト ファイルは、メッセージ リソース ファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-186">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="c1eb3-187">メッセージのテキスト ファイルでは、リソース識別子とカテゴリ、イベント メッセージ、および挿入の文字列のパラメーターのテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-187">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c1eb3-188">プロパティが負の値または <see cref="F:System.UInt16.MaxValue" /> より大きい値に設定されています。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-188">The property is set to a negative value or to a value larger than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c1eb3-189">すべてのメンバーを呼び出すため<see cref="T:System.Diagnostics.EventSourceCreationData" />完全に信頼します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-189">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span></span> <span data-ttu-id="c1eb3-190">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c1eb3-190">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="CategoryResourceFile">
      <MemberSignature Language="C#" Value="public string CategoryResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1eb3-191">ソースのカテゴリ文字列が格納されたリソース ファイルのパスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-191">Gets or sets the path of the resource file that contains category strings for the source.</span></span></summary>
        <value><span data-ttu-id="c1eb3-192">カテゴリ リソース ファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-192">The path of the category resource file.</span></span> <span data-ttu-id="c1eb3-193">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-193">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1eb3-194">使用して、<xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>と<xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>でイベントを書き込むためのプロパティがカテゴリ文字列をローカライズします。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-194">Use the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> and <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> properties to write events with localized category strings.</span></span> <span data-ttu-id="c1eb3-195">イベント ビューアーでは、イベントを記述するときに、カテゴリを指定する場合、イベントのエントリのカテゴリが表示されます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-195">The Event Viewer displays the category for an event entry if you supply a category when you write the event.</span></span> <span data-ttu-id="c1eb3-196">イベント ログのカテゴリとは、イベントをフィルター処理、またはイベントで詳細情報を提供するアプリケーション定義の文字列です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-196">Event log categories are application-defined strings that help filter events, or provide further information on the event.</span></span> <span data-ttu-id="c1eb3-197">たとえば、アプリケーションでは、異なるコンポーネントまたは操作ごとに個別のカテゴリを定義できます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-197">For example, your application can define separate categories for different components or different operations.</span></span>  
  
 <span data-ttu-id="c1eb3-198">イベント カテゴリは省略可能です。アプリケーションがカテゴリを使用していない場合は設定しないで、<xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>と<xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-198">Event categories are optional; if your application does not use categories, do not set the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> and <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> properties.</span></span>  
  
 <span data-ttu-id="c1eb3-199">詳細については、イベント メッセージを定義し、イベントのリソース ファイルを構築する、プラットフォーム SDK のドキュメントの「メッセージ コンパイラ」トピックを参照してください[ http://msdn.microsoft.com](http://msdn.microsoft.com/)です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-199">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1eb3-200">次のコード例では、イベント ソースが名前付きかどうかを判断`SampleApplicationSource`がローカル コンピューターに登録されています。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-200">The following code example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="c1eb3-201">イベント ソースが存在しない場合の例は、ソースのメッセージ リソース ファイルを設定し、新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-201">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="c1eb3-202">コード例で、リソースの識別子の値を使用して、イベント ログのローカライズされた表示名を設定する最後に、`DisplayNameMsgId`とリソース ファイルのパスに`messageFile`です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-202">Finally, the code example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="c1eb3-203">コード例では、リソース ライブラリ EventLogMsgs.dll に組み込まれている次のメッセージ テキスト ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-203">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="c1eb3-204">メッセージのテキスト ファイルは、メッセージ リソース ファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-204">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="c1eb3-205">メッセージのテキスト ファイルでは、リソース識別子とカテゴリ、イベント メッセージ、および挿入の文字列のパラメーターのテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-205">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c1eb3-206">すべてのメンバーを呼び出すため<see cref="T:System.Diagnostics.EventSourceCreationData" />完全に信頼します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-206">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span></span> <span data-ttu-id="c1eb3-207">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c1eb3-207">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryCount" />
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="LogName">
      <MemberSignature Language="C#" Value="public string LogName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.LogName" />
      <MemberSignature Language="VB.NET" Value="Public Property LogName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LogName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1eb3-208">ソースがエントリを書き込むイベント ログの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-208">Gets or sets the name of the event log to which the source writes entries.</span></span></summary>
        <value><span data-ttu-id="c1eb3-209">イベント ログの名前。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-209">The name of the event log.</span></span> <span data-ttu-id="c1eb3-210">ログ名には、アプリケーション ログ名、システム ログ名、またはカスタム ログ名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-210">This can be Application, System, or a custom log name.</span></span> <span data-ttu-id="c1eb3-211">既定値は "Application" です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-211">The default value is "Application."</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1eb3-212">使用して、<xref:System.Diagnostics.EventSourceCreationData.LogName%2A>アプリケーションが、新しいソースを使用してにエントリを書き込むことは、イベント ログを識別するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-212">Use the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> property to identify the event log that your application writes entries to using the new source.</span></span> <span data-ttu-id="c1eb3-213">イベント ログには、新しいログまたは既存のログを指定できます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-213">The event log can be a new log or an existing log.</span></span> <span data-ttu-id="c1eb3-214">アプリケーションとサービスは、アプリケーション ログまたはカスタムのログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-214">Applications and services should write to the Application log or a custom log.</span></span> <span data-ttu-id="c1eb3-215">デバイス ドライバーは、システム ログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-215">Device drivers should write to the System log.</span></span> <span data-ttu-id="c1eb3-216">明示的に設定しない場合、<xref:System.Diagnostics.EventSourceCreationData.LogName%2A>プロパティ、イベント ログの既定値は、アプリケーション ログ。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-216">If you do not explicitly set the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> property, the event log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1eb3-217">セキュリティ ログは、読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-217">The Security log is read-only.</span></span>  
  
 <span data-ttu-id="c1eb3-218">新しいソースの既存のログを対象とする設定、<xref:System.Diagnostics.EventSourceCreationData.LogName%2A>プロパティを既存のイベント ログ名です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-218">To target an existing log for the new source, set the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> property to the existing event log name.</span></span> <span data-ttu-id="c1eb3-219">ソースの新しいイベント ログを作成する必要がありますを設定する、<xref:System.Diagnostics.EventSourceCreationData.LogName%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-219">To create a new event log for the source, you must set the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> property.</span></span> <span data-ttu-id="c1eb3-220">イベント ログ名は、印字可能な文字で構成されている必要があります。文字 '\*'、'?'、または '\\' を含めないでください。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-220">Event log names must consist of printable characters, and cannot include the characters '\*', '?', or '\\'.</span></span> <span data-ttu-id="c1eb3-221">イベント ログ名の最初の 8 文字を指定したコンピューター上のイベント ログの既存の名前の最初の 8 文字別にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-221">The first 8 characters of the event log name must be different from the first 8 characters of existing names of event logs on the specified computer.</span></span>  
  
 <span data-ttu-id="c1eb3-222">オペレーティング システムは、イベント ログをファイルとして保存します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-222">The operating system stores event logs as files.</span></span> <span data-ttu-id="c1eb3-223">使用すると<xref:System.Diagnostics.EventLogInstaller>または<xref:System.Diagnostics.EventLog.CreateEventSource%2A>を新しいイベント ログでは、関連付けられているファイルを作成するメソッドが、指定されたコンピューター上の %SystemRoot%\System32\Config ディレクトリに格納されています。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-223">When you use <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</span></span> <span data-ttu-id="c1eb3-224">最初の 8 文字を追加することにより、ファイル名が設定されて、 <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> ".evt"ファイル名拡張子を持つプロパティです。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-224">The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> property with the ".evt" file name extension.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1eb3-225">次のコード例では、コマンドライン引数からイベント ソースの構成プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-225">The following code example sets the configuration properties for an event source from command-line arguments.</span></span> <span data-ttu-id="c1eb3-226">入力引数は、イベント ソースの名前、イベント ログ名、コンピューター名、およびイベント メッセージ リソース ファイルを指定します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-226">The input arguments specify the event source name, event log name, computer name, and event message resource file.</span></span> <span data-ttu-id="c1eb3-227">この例に示されている例の一部である、<xref:System.Diagnostics.EventSourceCreationData>クラスです。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-227">This example is part of a larger example provided for the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 [!code-cpp[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CPP/source.cpp#2)]
 [!code-csharp[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CS/source.cs#2)]
 [!code-vb[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c1eb3-228">すべてのメンバーを呼び出すため<see cref="T:System.Diagnostics.EventSourceCreationData" />完全に信頼します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-228">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span></span> <span data-ttu-id="c1eb3-229">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c1eb3-229">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.Log" />
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1eb3-230">イベント ソースを登録するコンピューターの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-230">Gets or sets the name of the computer on which to register the event source.</span></span></summary>
        <value><span data-ttu-id="c1eb3-231">イベント ソースを登録するシステムの名前。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-231">The name of the system on which to register the event source.</span></span> <span data-ttu-id="c1eb3-232">既定値はローカル コンピューター (".") です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-232">The default is the local computer (".").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1eb3-233"><xref:System.Diagnostics.EventSourceCreationData.MachineName%2A>値が空の文字列にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-233">The <xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> value cannot be an empty string.</span></span> <span data-ttu-id="c1eb3-234">コンピューター名が明示的に設定されていない場合は、既定によりローカル コンピューター ("です。") です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-234">If the machine name is not explicitly set, it defaults to the local computer (".").</span></span>  
  
 <span data-ttu-id="c1eb3-235">リモート コンピューター上のソースを登録するときに、十分なアクセス許可を持つレジストリ値を書き込むためには、そのコンピューターで管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-235">When registering a source on a remote computer, you must have administrative rights on that computer to write the registry values with sufficient permissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1eb3-236">次のコード例では、コマンドライン引数からイベント ソースの構成プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-236">The following code example sets the configuration properties for an event source from command-line arguments.</span></span> <span data-ttu-id="c1eb3-237">入力引数は、イベント ソースの名前、イベント ログ名、コンピューター名、およびイベント メッセージ リソース ファイルを指定します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-237">The input arguments specify the event source name, event log name, computer name, and event message resource file.</span></span> <span data-ttu-id="c1eb3-238">この例に示されている例の一部である、<xref:System.Diagnostics.EventSourceCreationData>クラスです。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-238">This example is part of a larger example provided for the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 [!code-cpp[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CPP/source.cpp#2)]
 [!code-csharp[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CS/source.cs#2)]
 [!code-vb[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c1eb3-239">コンピューター名が無効です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-239">The computer name is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c1eb3-240">すべてのメンバーを呼び出すため<see cref="T:System.Diagnostics.EventSourceCreationData" />完全に信頼します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-240">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span></span> <span data-ttu-id="c1eb3-241">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c1eb3-241">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.Source" />
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MessageResourceFile">
      <MemberSignature Language="C#" Value="public string MessageResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MessageResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1eb3-242">ソースのメッセージ書式指定文字列が格納されたメッセージ リソース ファイルのパスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-242">Gets or sets the path of the message resource file that contains message formatting strings for the source.</span></span></summary>
        <value><span data-ttu-id="c1eb3-243">メッセージ リソース ファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-243">The path of the message resource file.</span></span> <span data-ttu-id="c1eb3-244">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-244">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1eb3-245">使用して、<xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>ローカライズされたイベント メッセージを書き込むためのイベント ログ ソースを構成するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-245">Use the <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> property to configure an event log source to write localized event messages.</span></span> <span data-ttu-id="c1eb3-246">イベント メッセージは、ユーザーにイベントを記述するアプリケーション定義の文字列です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-246">Event messages are application-defined strings that describe the event to the user.</span></span>  
  
 <span data-ttu-id="c1eb3-247">アプリケーションでは、リソースの識別子を使用してイベント ログ エントリを書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-247">Your application can write event log entries using resource identifiers.</span></span> <span data-ttu-id="c1eb3-248">リソース識別子であるメッセージのインデックスを作成、<xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-248">A resource identifier indexes a message located in the <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>.</span></span> <span data-ttu-id="c1eb3-249">イベント ビューアーでは、リソースの識別子を使用して、検索し、現在の言語設定に基づくローカライズされたメッセージ リソース ファイルから対応する文字列を表示します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-249">The Event Viewer uses the resource identifier to find and display the corresponding string from the localized message resource file based on current language settings.</span></span>  
  
 <span data-ttu-id="c1eb3-250">ローカライズされたエントリを書き込むか、または直接の文字列を書き込むには、イベント ソースを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-250">The event source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="c1eb3-251">使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メッセージ リソース ファイルで構成されているソースのローカライズされたエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-251">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write localized entries for a source configured with a message resource file.</span></span>  
  
 <span data-ttu-id="c1eb3-252">書き込み中の場合、アプリケーション イベント メッセージ文字列を直接リソース識別子を使用して、ローカライズされたリソース ファイル内ではなくは設定しないでください、<xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-252">If your application writes event message strings directly, rather than using a resource identifier in a localized resource file, do not set the <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> property.</span></span>  
  
 <span data-ttu-id="c1eb3-253">詳細については、イベント メッセージを定義し、イベントのリソース ファイルを構築する、プラットフォーム SDK のドキュメントの「メッセージ コンパイラ」トピックを参照してください[ http://msdn.microsoft.com](http://msdn.microsoft.com/)です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-253">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1eb3-254">次のコード例では、イベント ソースが名前付きかどうかを判断`SampleApplicationSource`がローカル コンピューターに登録されています。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-254">The following code example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="c1eb3-255">イベント ソースが存在しない場合の例は、ソースのメッセージ リソース ファイルを設定し、新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-255">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="c1eb3-256">コード例で、リソースの識別子の値を使用して、イベント ログのローカライズされた表示名を設定する最後に、`DisplayNameMsgId`とリソース ファイルのパスに`messageFile`です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-256">Finally, the code example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="c1eb3-257">コード例では、リソース ライブラリ EventLogMsgs.dll に組み込まれている次のメッセージ テキスト ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-257">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="c1eb3-258">メッセージのテキスト ファイルは、メッセージ リソース ファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-258">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="c1eb3-259">メッセージのテキスト ファイルでは、リソース識別子とカテゴリ、イベント メッセージ、および挿入の文字列のパラメーターのテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-259">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c1eb3-260">すべてのメンバーを呼び出すため<see cref="T:System.Diagnostics.EventSourceCreationData" />完全に信頼します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-260">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span></span> <span data-ttu-id="c1eb3-261">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c1eb3-261">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="ParameterResourceFile">
      <MemberSignature Language="C#" Value="public string ParameterResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1eb3-262">ソースのメッセージ パラメーター文字列が格納されたリソース ファイルのパスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-262">Gets or sets the path of the resource file that contains message parameter strings for the source.</span></span></summary>
        <value><span data-ttu-id="c1eb3-263">パラメーター リソース ファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-263">The path of the parameter resource file.</span></span> <span data-ttu-id="c1eb3-264">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-264">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1eb3-265">使用して、<xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A>でローカライズされたイベント メッセージを書き込むためのイベント ログ ソースを構成するプロパティは、パラメーター文字列を挿入します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-265">Use the <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> property to configure an event log source to write localized event messages with inserted parameter strings.</span></span> <span data-ttu-id="c1eb3-266">指定した各ローカライズされたイベント メッセージ、<xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>プロパティは、挿入文字列のプレース ホルダーを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-266">Each localized event message specified in the <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> property can contain placeholders for insertion strings.</span></span> <span data-ttu-id="c1eb3-267">これらのプレース ホルダーを使用して、位置と、イベント メッセージ内の言語に依存しない文字列のリソース識別子を指定します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-267">These placeholders are used to specify the position and resource identifier for a language-independent string within the event message.</span></span> <span data-ttu-id="c1eb3-268">イベント ビューアーから対応する文字列を使用するプレース ホルダーを入力、<xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A>およびローカライズされたイベント エントリのイベント ログ メッセージを書式設定します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-268">The Event Viewer fills in the placeholders using the corresponding strings from the <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> and formats the event log message for the localized event entry.</span></span>  
  
 <span data-ttu-id="c1eb3-269">たとえば、メッセージのテキスト ファイルの次のセクションでは、パラメーターのプレース ホルダーを含む文字列を定義します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-269">For example, the following section of a message text file defines a string with a parameter placeholder:</span></span>  
  
```  
  
MessageId = 1501  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_STARTING  
Language=English  
Component %%6050 is starting.  
.  
```  
  
 <span data-ttu-id="c1eb3-270">パラメーター、リソース ファイル内では次のように挿入文字列、プレース ホルダーに対応するリソース識別子を持つ定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-270">Within the parameter resource file, the insertion string must be defined with the resource identifier that corresponds to the placeholder, as shown below:</span></span>  
  
```  
MessageId = 6050  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_NAME_MSGID  
Language=English  
TRIGGER.EXE  
.  
```  
  
 <span data-ttu-id="c1eb3-271">ローカライズされたエントリを書き込むか、または直接の文字列を書き込むには、イベント ソースを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-271">The event source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="c1eb3-272">使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メッセージ リソース ファイルで構成されているソースのローカライズされたエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-272">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write localized entries for a source configured with a message resource file.</span></span>  
  
 <span data-ttu-id="c1eb3-273">アプリケーションがイベント ログに直接イベント メッセージ文字列を書き込む場合、または、<xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>プロパティにパラメーターの挿入のプレース ホルダーでメッセージが含まれていない、設定しないでください、<xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-273">If your application writes event message strings directly to the event log, or if your <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> property does not contain messages with parameter insertion placeholders, do not set the <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> property.</span></span>  
  
 <span data-ttu-id="c1eb3-274">詳細については、イベント メッセージを定義し、イベントのリソース ファイルを構築する、プラットフォーム SDK のドキュメントの「メッセージ コンパイラ」トピックを参照してください[ http://msdn.microsoft.com](http://msdn.microsoft.com/)です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-274">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1eb3-275">次のコード例では、イベント ソースが名前付きかどうかを判断`SampleApplicationSource`がローカル コンピューターに登録されています。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-275">The following code example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="c1eb3-276">イベント ソースが存在しない場合の例は、ソースのメッセージ リソース ファイルを設定し、新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-276">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="c1eb3-277">コード例で、リソースの識別子の値を使用して、イベント ログのローカライズされた表示名を設定する最後に、`DisplayNameMsgId`とリソース ファイルのパスに`messageFile`です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-277">Finally, the code example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="c1eb3-278">コード例では、リソース ライブラリ EventLogMsgs.dll に組み込まれている次のメッセージ テキスト ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-278">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="c1eb3-279">メッセージのテキスト ファイルは、メッセージ リソース ファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-279">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="c1eb3-280">メッセージのテキスト ファイルでは、リソース識別子とカテゴリ、イベント メッセージ、および挿入の文字列のパラメーターのテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-280">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span> <span data-ttu-id="c1eb3-281">具体的には、リソース id 1004 に対して定義されているメッセージは、リソース id 5002 に対して定義されているパラメーターの文字列のプレース ホルダーを使用します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-281">Specifically, the message defined for resource identifier 1004 uses a placeholder for a parameter string defined for resource identifier 5002.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c1eb3-282">すべてのメンバーを呼び出すため<see cref="T:System.Diagnostics.EventSourceCreationData" />完全に信頼します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-282">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span></span> <span data-ttu-id="c1eb3-283">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c1eb3-283">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.ParameterResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1eb3-284">イベント ソースとしてイベント ログに登録する名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-284">Gets or sets the name to register with the event log as an event source.</span></span></summary>
        <value><span data-ttu-id="c1eb3-285">エントリのソースとしてイベント ログに登録する名前。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-285">The name to register with the event log as a source of entries.</span></span> <span data-ttu-id="c1eb3-286">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-286">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1eb3-287">ソース名は、アプリケーションの名前または大規模なアプリケーション内のコンポーネントの名前では多くの場合です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-287">The source name is often the name of the application, or the name of a component within a large application.</span></span> <span data-ttu-id="c1eb3-288"><xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType>メソッドを使用、 <xref:System.Diagnostics.EventSourceCreationData.Source%2A>、 <xref:System.Diagnostics.EventSourceCreationData.LogName%2A>、および<xref:System.Diagnostics.EventSourceCreationData.MachineName%2A>新しいソースとその関連のイベント ログでターゲット コンピューター上のレジストリ値を作成するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-288">The <xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType> method uses the <xref:System.Diagnostics.EventSourceCreationData.Source%2A>, <xref:System.Diagnostics.EventSourceCreationData.LogName%2A>, and <xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> properties to create registry values on the target computer for the new source and its associated event log.</span></span> <span data-ttu-id="c1eb3-289">新しいソース名には、既存のソース名またはターゲット コンピューター上の既存のイベント ログ名を一致ことはできません。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-289">A new source name cannot match an existing source name or an existing event log name on the target computer.</span></span>  
  
 <span data-ttu-id="c1eb3-290">ソースのレジストリ値を作成したら、アプリケーションは、構成済みのイベント ログにエントリを書き込む、ソースを使用できます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-290">After the registry values for the source are created, your application can use the source to write entries to the configured event log.</span></span>  
  
 <span data-ttu-id="c1eb3-291">同時に、各ソースは 1 つのイベント ログに書き込むだけことができます。ただし、アプリケーションでは、複数のイベント ログに書き込むに複数のソースを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-291">Each source can only write to one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="c1eb3-292">たとえば、アプリケーションでは、異なるイベント ログまたは別のリソース ファイル用に構成された複数のソースが必要です。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-292">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1eb3-293">次のコード例では、コマンドライン引数からイベント ソースの構成プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-293">The following code example sets the configuration properties for an event source from command-line arguments.</span></span> <span data-ttu-id="c1eb3-294">入力引数は、イベント ソースの名前、イベント ログ名、コンピューター名、およびイベント メッセージ リソース ファイルを指定します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-294">The input arguments specify the event source name, event log name, computer name, and event message resource file.</span></span> <span data-ttu-id="c1eb3-295">この例に示されている例の一部である、<xref:System.Diagnostics.EventSourceCreationData>クラスです。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-295">This example is part of a larger example provided for the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 [!code-cpp[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CPP/source.cpp#2)]
 [!code-csharp[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CS/source.cs#2)]
 [!code-vb[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c1eb3-296">すべてのメンバーを呼び出すため<see cref="T:System.Diagnostics.EventSourceCreationData" />完全に信頼します。</span><span class="sxs-lookup"><span data-stu-id="c1eb3-296">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span></span> <span data-ttu-id="c1eb3-297">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c1eb3-297">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.Source" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>