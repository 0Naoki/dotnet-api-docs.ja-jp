<Type Name="Stopwatch" FullName="System.Diagnostics.Stopwatch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7eed23eed830d885974c2c49ca7497e4f2db1423" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39884999" /></Metadata><TypeSignature Language="C#" Value="public class Stopwatch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Stopwatch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Stopwatch" />
  <TypeSignature Language="VB.NET" Value="Public Class Stopwatch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stopwatch" />
  <TypeSignature Language="F#" Value="type Stopwatch = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e4e20-101">経過時間を正確に計測するために使用できる一連のメソッドとプロパティを提供します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-101">Provides a set of methods and properties that you can use to accurately measure elapsed time.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4e20-102">A<xref:System.Diagnostics.Stopwatch>インスタンスは複数の間隔の間で 1 つの間隔の経過時間の合計経過時間を測定することができます。</span><span class="sxs-lookup"><span data-stu-id="e4e20-102">A <xref:System.Diagnostics.Stopwatch> instance can measure elapsed time for one interval, or the total of elapsed time across multiple intervals.</span></span> <span data-ttu-id="e4e20-103">一般的な<xref:System.Diagnostics.Stopwatch>シナリオを呼び出す、<xref:System.Diagnostics.Stopwatch.Start%2A>メソッド、最終的に呼び出す、<xref:System.Diagnostics.Stopwatch.Stop%2A>メソッド、およびし確認の経過時間を使用して、<xref:System.Diagnostics.Stopwatch.Elapsed%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e4e20-103">In a typical <xref:System.Diagnostics.Stopwatch> scenario, you call the <xref:System.Diagnostics.Stopwatch.Start%2A> method, then eventually call the <xref:System.Diagnostics.Stopwatch.Stop%2A> method, and then you check elapsed time using the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property.</span></span>  
  
 <span data-ttu-id="e4e20-104">A<xref:System.Diagnostics.Stopwatch>インスタンスは実行中または停止。 使用<xref:System.Diagnostics.Stopwatch.IsRunning%2A>の現在の状態を判断する、<xref:System.Diagnostics.Stopwatch>します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-104">A <xref:System.Diagnostics.Stopwatch> instance is either running or stopped; use <xref:System.Diagnostics.Stopwatch.IsRunning%2A> to determine the current state of a <xref:System.Diagnostics.Stopwatch>.</span></span> <span data-ttu-id="e4e20-105">使用して、 <xref:System.Diagnostics.Stopwatch.Start%2A> ; の経過時間の測定を開始するを使用して、<xref:System.Diagnostics.Stopwatch.Stop%2A>経過時間の計測を停止します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-105">Use <xref:System.Diagnostics.Stopwatch.Start%2A> to begin measuring elapsed time; use <xref:System.Diagnostics.Stopwatch.Stop%2A> to stop measuring elapsed time.</span></span> <span data-ttu-id="e4e20-106">プロパティを使用した経過時間値をクエリ<xref:System.Diagnostics.Stopwatch.Elapsed%2A>、 <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>、または<xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-106">Query the elapsed time value through the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, or <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>.</span></span> <span data-ttu-id="e4e20-107">インスタンスが実行中か停止中に、経過時間のプロパティを照会できます。</span><span class="sxs-lookup"><span data-stu-id="e4e20-107">You can query the elapsed time properties while the instance is running or stopped.</span></span> <span data-ttu-id="e4e20-108">プロパティが順調に増加する経過時間中に、<xref:System.Diagnostics.Stopwatch>が実行中です。 引き続き定数インスタンスを停止します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-108">The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.</span></span>  
  
 <span data-ttu-id="e4e20-109">既定での経過時間の値を<xref:System.Diagnostics.Stopwatch>のインスタンスが等しいすべての測定時間間隔の合計。</span><span class="sxs-lookup"><span data-stu-id="e4e20-109">By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals.</span></span> <span data-ttu-id="e4e20-110">呼び出しごとに<xref:System.Diagnostics.Stopwatch.Start%2A>; 累積的な経過時間のカウントを開始の各呼び出し<xref:System.Diagnostics.Stopwatch.Stop%2A>現在の間隔の計測を終了し、累積的な経過時間の値がフリーズします。</span><span class="sxs-lookup"><span data-stu-id="e4e20-110">Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value.</span></span> <span data-ttu-id="e4e20-111">使用して、<xref:System.Diagnostics.Stopwatch.Reset%2A>メソッドを既存の累積的な経過時間をオフに<xref:System.Diagnostics.Stopwatch>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="e4e20-111">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
 <span data-ttu-id="e4e20-112"><xref:System.Diagnostics.Stopwatch>基になるタイマー機構のタイマー刻みをカウントすることによって、経過時間を測定します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-112">The <xref:System.Diagnostics.Stopwatch> measures elapsed time by counting timer ticks in the underlying timer mechanism.</span></span> <span data-ttu-id="e4e20-113">インストールされているハードウェアとオペレーティング システム、高解像度のパフォーマンス カウンターをサポートする場合、<xref:System.Diagnostics.Stopwatch>クラスは、経過時間を測定するカウンターを使用します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-113">If the installed hardware and operating system support a high-resolution performance counter, then the <xref:System.Diagnostics.Stopwatch> class uses that counter to measure elapsed time.</span></span> <span data-ttu-id="e4e20-114">それ以外の場合、<xref:System.Diagnostics.Stopwatch>クラスでは、システムのタイマーを使用して、経過時間を測定します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-114">Otherwise, the <xref:System.Diagnostics.Stopwatch> class uses the system timer to measure elapsed time.</span></span> <span data-ttu-id="e4e20-115">使用して、<xref:System.Diagnostics.Stopwatch.Frequency>と<xref:System.Diagnostics.Stopwatch.IsHighResolution>、有効桁数と解決策を決定するフィールド、<xref:System.Diagnostics.Stopwatch>タイミング実装します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-115">Use the <xref:System.Diagnostics.Stopwatch.Frequency> and <xref:System.Diagnostics.Stopwatch.IsHighResolution> fields to determine the precision and resolution of the <xref:System.Diagnostics.Stopwatch> timing implementation.</span></span>  
  
 <span data-ttu-id="e4e20-116"><xref:System.Diagnostics.Stopwatch>クラスはタイミングに関連するパフォーマンス カウンター マネージ コード内での操作を支援します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-116">The <xref:System.Diagnostics.Stopwatch> class assists the manipulation of timing-related performance counters within managed code.</span></span> <span data-ttu-id="e4e20-117">具体的には、<xref:System.Diagnostics.Stopwatch.Frequency>フィールドと<xref:System.Diagnostics.Stopwatch.GetTimestamp%2A>メソッドは、アンマネージ Win32 Api の代わりに使用できる`QueryPerformanceFrequency`と`QueryPerformanceCounter`します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-117">Specifically, the <xref:System.Diagnostics.Stopwatch.Frequency> field and <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> method can be used in place of the unmanaged Win32 APIs `QueryPerformanceFrequency` and `QueryPerformanceCounter`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e4e20-118">マルチプロセッサのコンピューターで必要に、スレッドが実行されているプロセッサはありません。</span><span class="sxs-lookup"><span data-stu-id="e4e20-118">On a multiprocessor computer, it does not matter which processor the thread runs on.</span></span> <span data-ttu-id="e4e20-119">ただし、BIOS、またはハードウェア アブストラクション レイヤー (HAL) でのバグのためには、別のプロセッサでさまざまなタイミングの結果を取得できます。</span><span class="sxs-lookup"><span data-stu-id="e4e20-119">However, because of bugs in the BIOS or the Hardware Abstraction Layer (HAL), you can get different timing results on different processors.</span></span> <span data-ttu-id="e4e20-120">スレッドのプロセッサのアフィニティを指定するには、使用、<xref:System.Diagnostics.ProcessThread.ProcessorAffinity%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="e4e20-120">To specify processor affinity for a thread, use the <xref:System.Diagnostics.ProcessThread.ProcessorAffinity%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4e20-121">次の例では、使用する方法、<xref:System.Diagnostics.Stopwatch>クラス アプリケーションの実行時間を決定します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-121">The following example demonstrates how to use the <xref:System.Diagnostics.Stopwatch> class to determine the execution time for an application.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 <span data-ttu-id="e4e20-122">次の例では、使用、<xref:System.Diagnostics.Stopwatch>パフォーマンス データを計算するクラス。</span><span class="sxs-lookup"><span data-stu-id="e4e20-122">The following example demonstrates the use of the <xref:System.Diagnostics.Stopwatch> class to calculate performance data.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#1)]
 [!code-csharp[StopWatchPerfSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#1)]
 [!code-vb[StopWatchPerfSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.TimeSpan" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stopwatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stopwatch();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4e20-123"><see cref="T:System.Diagnostics.Stopwatch" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-123">Initializes a new instance of the <see cref="T:System.Diagnostics.Stopwatch" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4e20-124">返された<xref:System.Diagnostics.Stopwatch>インスタンスは停止し、インスタンスの経過時間のプロパティは 0 です。</span><span class="sxs-lookup"><span data-stu-id="e4e20-124">The returned <xref:System.Diagnostics.Stopwatch> instance is stopped, and the elapsed time property of the instance is zero.</span></span>  
  
 <span data-ttu-id="e4e20-125">使用して、<xref:System.Diagnostics.Stopwatch.Start%2A>メソッドを新しい経過時間の計測を開始する<xref:System.Diagnostics.Stopwatch>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="e4e20-125">Use the <xref:System.Diagnostics.Stopwatch.Start%2A> method to begin measuring elapsed time with the new <xref:System.Diagnostics.Stopwatch> instance.</span></span> <span data-ttu-id="e4e20-126">使用して、<xref:System.Diagnostics.Stopwatch.StartNew%2A>メソッドは、新しい初期化を<xref:System.Diagnostics.Stopwatch>インスタンス化し、それをすぐに開始します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-126">Use the <xref:System.Diagnostics.Stopwatch.StartNew%2A> method to initialize a new <xref:System.Diagnostics.Stopwatch> instance and immediately start it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4e20-127">次の例では、初期化、<xref:System.Diagnostics.Stopwatch>単純なクラスのコンス トラクターを使用してインスタンス。</span><span class="sxs-lookup"><span data-stu-id="e4e20-127">The following example initializes a <xref:System.Diagnostics.Stopwatch> instance by using a simple class constructor.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
      </Docs>
    </Member>
    <Member MemberName="Elapsed">
      <MemberSignature Language="C#" Value="public TimeSpan Elapsed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Elapsed" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.Elapsed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Elapsed As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Elapsed { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.Elapsed : TimeSpan" Usage="System.Diagnostics.Stopwatch.Elapsed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4e20-128">現在のインスタンスで計測された経過時間の合計を取得します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-128">Gets the total elapsed time measured by the current instance.</span></span></summary>
        <value><span data-ttu-id="e4e20-129">現在のインスタンスで計測された経過時間の合計を表す読み取り専用の <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="e4e20-129">A read-only <see cref="T:System.TimeSpan" /> representing the total elapsed time measured by the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4e20-130">一般的な<xref:System.Diagnostics.Stopwatch>シナリオを呼び出す、<xref:System.Diagnostics.Stopwatch.Start%2A>メソッド、最終的に呼び出す、<xref:System.Diagnostics.Stopwatch.Stop%2A>メソッド、およびし確認の経過時間を使用して、<xref:System.Diagnostics.Stopwatch.Elapsed%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e4e20-130">In a typical <xref:System.Diagnostics.Stopwatch> scenario, you call the <xref:System.Diagnostics.Stopwatch.Start%2A> method, then eventually call the <xref:System.Diagnostics.Stopwatch.Stop%2A> method, and then you check elapsed time using the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property.</span></span>  
  
 <span data-ttu-id="e4e20-131">使用して、<xref:System.Diagnostics.Stopwatch.Elapsed%2A>経過時間を取得するプロパティの値を使用して<xref:System.TimeSpan>メソッドとプロパティ。</span><span class="sxs-lookup"><span data-stu-id="e4e20-131">Use the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property to retrieve the elapsed time value using <xref:System.TimeSpan> methods and properties.</span></span> <span data-ttu-id="e4e20-132">たとえば、書式を設定できます、返された<xref:System.TimeSpan>インスタンスをテキスト形式、または必要とする別のクラスに渡すこと、<xref:System.TimeSpan>パラメーター。</span><span class="sxs-lookup"><span data-stu-id="e4e20-132">For example, you can format the returned <xref:System.TimeSpan> instance into a text representation, or pass it to another class that requires a <xref:System.TimeSpan> parameter.</span></span>  
  
 <span data-ttu-id="e4e20-133">プロパティを照会する<xref:System.Diagnostics.Stopwatch.Elapsed%2A>、 <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>、および<xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>中に、<xref:System.Diagnostics.Stopwatch>インスタンスが実行中か停止します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-133">You can query the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, and <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> while the <xref:System.Diagnostics.Stopwatch> instance is running or stopped.</span></span> <span data-ttu-id="e4e20-134">プロパティが順調に増加する経過時間中に、<xref:System.Diagnostics.Stopwatch>が実行中です。 引き続き定数インスタンスを停止します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-134">The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.</span></span>  
  
 <span data-ttu-id="e4e20-135">既定での経過時間の値を<xref:System.Diagnostics.Stopwatch>のインスタンスが等しいすべての測定時間間隔の合計。</span><span class="sxs-lookup"><span data-stu-id="e4e20-135">By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals.</span></span> <span data-ttu-id="e4e20-136">呼び出しごとに<xref:System.Diagnostics.Stopwatch.Start%2A>; 累積的な経過時間のカウントを開始の各呼び出し<xref:System.Diagnostics.Stopwatch.Stop%2A>現在の間隔の計測を終了し、累積的な経過時間の値がフリーズします。</span><span class="sxs-lookup"><span data-stu-id="e4e20-136">Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value.</span></span> <span data-ttu-id="e4e20-137">使用して、<xref:System.Diagnostics.Stopwatch.Reset%2A>メソッドを既存の累積的な経過時間をオフに<xref:System.Diagnostics.Stopwatch>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="e4e20-137">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4e20-138">次の例では、使用する方法、<xref:System.Diagnostics.Stopwatch.Elapsed%2A>プロパティをアプリケーションの実行に時間を決定します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-138">The following example demonstrates how to use the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property to determine the execution time for an application.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      </Docs>
    </Member>
    <Member MemberName="ElapsedMilliseconds">
      <MemberSignature Language="C#" Value="public long ElapsedMilliseconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ElapsedMilliseconds" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElapsedMilliseconds As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ElapsedMilliseconds { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ElapsedMilliseconds : int64" Usage="System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4e20-139">現在のインスタンスで計測された経過時間の合計を取得します (ミリ秒単位)。</span><span class="sxs-lookup"><span data-stu-id="e4e20-139">Gets the total elapsed time measured by the current instance, in milliseconds.</span></span></summary>
        <value><span data-ttu-id="e4e20-140">現在のインスタンスで計測されたミリ秒の合計を表す読み取り専用の長整数。</span><span class="sxs-lookup"><span data-stu-id="e4e20-140">A read-only long integer representing the total number of milliseconds measured by the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4e20-141">このプロパティは、最も近い全体のミリ秒の値に丸められた、経過時間を表します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-141">This property represents elapsed time rounded down to the nearest whole millisecond value.</span></span> <span data-ttu-id="e4e20-142">高い精度の測定値を使用して、<xref:System.Diagnostics.Stopwatch.Elapsed%2A>または<xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e4e20-142">For higher precision measurements, use the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> or <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> properties.</span></span>  
  
 <span data-ttu-id="e4e20-143">プロパティを照会する<xref:System.Diagnostics.Stopwatch.Elapsed%2A>、 <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>、および<xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>中に、<xref:System.Diagnostics.Stopwatch>インスタンスが実行中か停止します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-143">You can query the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, and <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> while the <xref:System.Diagnostics.Stopwatch> instance is running or stopped.</span></span> <span data-ttu-id="e4e20-144">プロパティが順調に増加する経過時間中に、<xref:System.Diagnostics.Stopwatch>が実行中です。 引き続き定数インスタンスを停止します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-144">The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.</span></span>  
  
 <span data-ttu-id="e4e20-145">既定での経過時間の値を<xref:System.Diagnostics.Stopwatch>のインスタンスが等しいすべての測定時間間隔の合計。</span><span class="sxs-lookup"><span data-stu-id="e4e20-145">By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals.</span></span> <span data-ttu-id="e4e20-146">呼び出しごとに<xref:System.Diagnostics.Stopwatch.Start%2A>; 累積的な経過時間のカウントを開始の各呼び出し<xref:System.Diagnostics.Stopwatch.Stop%2A>現在の間隔の計測を終了し、累積的な経過時間の値がフリーズします。</span><span class="sxs-lookup"><span data-stu-id="e4e20-146">Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value.</span></span> <span data-ttu-id="e4e20-147">使用して、<xref:System.Diagnostics.Stopwatch.Reset%2A>メソッドを既存の累積的な経過時間をオフに<xref:System.Diagnostics.Stopwatch>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="e4e20-147">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4e20-148">次の例では、<xref:System.Diagnostics.Stopwatch>クラス文字列から整数に解析するための 4 つの異なる実装のパフォーマンスを測定します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-148">The following example uses the <xref:System.Diagnostics.Stopwatch> class to measure the performance of four different implementations for parsing an integer from a string.</span></span> <span data-ttu-id="e4e20-149">このコード例が示されている例の一部、<xref:System.Diagnostics.Stopwatch>クラス。</span><span class="sxs-lookup"><span data-stu-id="e4e20-149">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#3](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#3)]
 [!code-csharp[StopWatchPerfSample#3](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#3)]
 [!code-vb[StopWatchPerfSample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Stopwatch.Elapsed" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      </Docs>
    </Member>
    <Member MemberName="ElapsedTicks">
      <MemberSignature Language="C#" Value="public long ElapsedTicks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ElapsedTicks" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElapsedTicks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ElapsedTicks { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ElapsedTicks : int64" Usage="System.Diagnostics.Stopwatch.ElapsedTicks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4e20-150">現在のインスタンスで計測された経過時間の合計を取得します (タイマー刻み)。</span><span class="sxs-lookup"><span data-stu-id="e4e20-150">Gets the total elapsed time measured by the current instance, in timer ticks.</span></span></summary>
        <value><span data-ttu-id="e4e20-151">現在のインスタンスで計測されたタイマー刻みの合計を表す読み取り専用の長整数。</span><span class="sxs-lookup"><span data-stu-id="e4e20-151">A read-only long integer representing the total number of timer ticks measured by the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4e20-152">このプロパティは、基になるタイマー機構の経過したタイマー刻みの数を表します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-152">This property represents the number of elapsed ticks in the underlying timer mechanism.</span></span> <span data-ttu-id="e4e20-153">1 ティックは時間の最小単位を<xref:System.Diagnostics.Stopwatch>タイマーを測定できます。</span><span class="sxs-lookup"><span data-stu-id="e4e20-153">A tick is the smallest unit of time that the <xref:System.Diagnostics.Stopwatch> timer can measure.</span></span> <span data-ttu-id="e4e20-154">使用して、<xref:System.Diagnostics.Stopwatch.Frequency>に変換するフィールド、<xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>値を秒数にします。</span><span class="sxs-lookup"><span data-stu-id="e4e20-154">Use the <xref:System.Diagnostics.Stopwatch.Frequency> field to convert the <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> value into a number of seconds.</span></span>  
  
 <span data-ttu-id="e4e20-155">プロパティを照会する<xref:System.Diagnostics.Stopwatch.Elapsed%2A>、 <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>、および<xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>中に、<xref:System.Diagnostics.Stopwatch>インスタンスが実行中か停止します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-155">You can query the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, and <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> while the <xref:System.Diagnostics.Stopwatch> instance is running or stopped.</span></span> <span data-ttu-id="e4e20-156">プロパティが順調に増加する経過時間中に、<xref:System.Diagnostics.Stopwatch>が実行中です。 引き続き定数インスタンスを停止します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-156">The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.</span></span>  
  
 <span data-ttu-id="e4e20-157">既定での経過時間の値を<xref:System.Diagnostics.Stopwatch>のインスタンスが等しいすべての測定時間間隔の合計。</span><span class="sxs-lookup"><span data-stu-id="e4e20-157">By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals.</span></span> <span data-ttu-id="e4e20-158">呼び出しごとに<xref:System.Diagnostics.Stopwatch.Start%2A>; 累積的な経過時間のカウントを開始の各呼び出し<xref:System.Diagnostics.Stopwatch.Stop%2A>現在の間隔の計測を終了し、累積的な経過時間の値がフリーズします。</span><span class="sxs-lookup"><span data-stu-id="e4e20-158">Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value.</span></span> <span data-ttu-id="e4e20-159">使用して、<xref:System.Diagnostics.Stopwatch.Reset%2A>メソッドを既存の累積的な経過時間をオフに<xref:System.Diagnostics.Stopwatch>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="e4e20-159">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e4e20-160"><xref:System.Diagnostics.Stopwatch> ティックとは異なる<xref:System.DateTime.Ticks%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-160"><xref:System.Diagnostics.Stopwatch> ticks are different from <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e4e20-161">各ティック、<xref:System.DateTime.Ticks%2A?displayProperty=nameWithType>値が 1 つの 100 ナノ秒間隔を表します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-161">Each tick in the <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> value represents one 100-nanosecond interval.</span></span> <span data-ttu-id="e4e20-162">各ティック、<xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>値で割った値 1 秒に等しい時間間隔を表す、<xref:System.Diagnostics.Stopwatch.Frequency>します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-162">Each tick in the <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> value represents the time interval equal to 1 second divided by the <xref:System.Diagnostics.Stopwatch.Frequency>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4e20-163">次の例では、<xref:System.Diagnostics.Stopwatch>クラス文字列から整数に解析するための 4 つの異なる実装のパフォーマンスを測定します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-163">The following example uses the <xref:System.Diagnostics.Stopwatch> class to measure the performance of four different implementations for parsing an integer from a string.</span></span> <span data-ttu-id="e4e20-164">このコード例が示されている例の一部、<xref:System.Diagnostics.Stopwatch>クラス。</span><span class="sxs-lookup"><span data-stu-id="e4e20-164">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#4](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#4)]
 [!code-csharp[StopWatchPerfSample#4](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#4)]
 [!code-vb[StopWatchPerfSample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Stopwatch.Elapsed" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
        <altmember cref="F:System.Diagnostics.Stopwatch.Frequency" />
      </Docs>
    </Member>
    <Member MemberName="Frequency">
      <MemberSignature Language="C#" Value="public static readonly long Frequency;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int64 Frequency" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Stopwatch.Frequency" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Frequency As Long " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly long Frequency;" />
      <MemberSignature Language="F#" Value=" staticval mutable Frequency : int64" Usage="System.Diagnostics.Stopwatch.Frequency" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4e20-165">1 秒あたりのタイマー刻みの数として、タイマーの頻度を取得します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-165">Gets the frequency of the timer as the number of ticks per second.</span></span> <span data-ttu-id="e4e20-166">このフィールドは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e4e20-166">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4e20-167">タイマーの頻度は、タイマー精度と解決策を示します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-167">The timer frequency indicates the timer precision and resolution.</span></span> <span data-ttu-id="e4e20-168">たとえば、200万のタイマーの頻度ティックあたり 2 つ目の equals ティックあたり 500 ナノ秒のタイマー精度。</span><span class="sxs-lookup"><span data-stu-id="e4e20-168">For example, a timer frequency of 2 million ticks per second equals a timer resolution of 500 nanoseconds per tick.</span></span> <span data-ttu-id="e4e20-169">つまり、1 秒間は、10億ナノ秒に等しい、ために、1 秒あたり 200万タイマー刻みのタイマーの頻度を 500 ナノ秒あたり 1 ティックをさらに簡略化 10億ナノ秒あたり 200万ティック数と同じです。</span><span class="sxs-lookup"><span data-stu-id="e4e20-169">In other words, because one second equals 1 billion nanoseconds, a timer frequency of 2 million ticks per second is equivalent to 2 million ticks per 1 billion nanoseconds, which can be further simplified to 1 tick per 500 nanoseconds.</span></span>  
  
 <span data-ttu-id="e4e20-170"><xref:System.Diagnostics.Stopwatch.Frequency>値は、基になる時間調整メカニズムの解像度によって異なります。</span><span class="sxs-lookup"><span data-stu-id="e4e20-170">The <xref:System.Diagnostics.Stopwatch.Frequency> value depends on the resolution of the underlying timing mechanism.</span></span> <span data-ttu-id="e4e20-171">インストールされているハードウェアとオペレーティング システム、高解像度のパフォーマンス カウンターをサポートする場合、<xref:System.Diagnostics.Stopwatch.Frequency>値には、そのカウンターの頻度が反映されます。</span><span class="sxs-lookup"><span data-stu-id="e4e20-171">If the installed hardware and operating system support a high-resolution performance counter, then the <xref:System.Diagnostics.Stopwatch.Frequency> value reflects the frequency of that counter.</span></span> <span data-ttu-id="e4e20-172">それ以外の場合、<xref:System.Diagnostics.Stopwatch.Frequency>値のシステム タイマーの頻度に基づきます。</span><span class="sxs-lookup"><span data-stu-id="e4e20-172">Otherwise, the <xref:System.Diagnostics.Stopwatch.Frequency> value is based on the system timer frequency.</span></span>  
  
 <span data-ttu-id="e4e20-173"><xref:System.Diagnostics.Stopwatch>頻度は、インストールされているハードウェアとオペレーティング システムに依存、<xref:System.Diagnostics.Stopwatch.Frequency>システムが実行されている間、値が一定です。</span><span class="sxs-lookup"><span data-stu-id="e4e20-173">Because the <xref:System.Diagnostics.Stopwatch> frequency depends on the installed hardware and operating system, the <xref:System.Diagnostics.Stopwatch.Frequency> value remains constant while the system is running.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4e20-174">次の例は、頻度と解決策が表示されます、<xref:System.Diagnostics.Stopwatch>タイマー。</span><span class="sxs-lookup"><span data-stu-id="e4e20-174">The following example displays the frequency and resolution of a <xref:System.Diagnostics.Stopwatch> timer.</span></span> <span data-ttu-id="e4e20-175">このコード例が示されている例の一部、<xref:System.Diagnostics.Stopwatch>クラス。</span><span class="sxs-lookup"><span data-stu-id="e4e20-175">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#2](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#2)]
 [!code-csharp[StopWatchPerfSample#2](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#2)]
 [!code-vb[StopWatchPerfSample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      </Docs>
    </Member>
    <Member MemberName="GetTimestamp">
      <MemberSignature Language="C#" Value="public static long GetTimestamp ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 GetTimestamp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.GetTimestamp" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTimestamp () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long GetTimestamp();" />
      <MemberSignature Language="F#" Value="static member GetTimestamp : unit -&gt; int64" Usage="System.Diagnostics.Stopwatch.GetTimestamp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4e20-176">タイマー機構の現在のタイマー刻み数を取得します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-176">Gets the current number of ticks in the timer mechanism.</span></span></summary>
        <returns><span data-ttu-id="e4e20-177">基になるタイマー機構のタイマー刻みカウンター値を表す長整数。</span><span class="sxs-lookup"><span data-stu-id="e4e20-177">A long integer representing the tick counter value of the underlying timer mechanism.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4e20-178">場合、<xref:System.Diagnostics.Stopwatch>クラスは、高解像度のパフォーマンス カウンターを使用して<xref:System.Diagnostics.Stopwatch.GetTimestamp%2A>そのカウンターの現在の値を返します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-178">If the <xref:System.Diagnostics.Stopwatch> class uses a high-resolution performance counter, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the current value of that counter.</span></span> <span data-ttu-id="e4e20-179">場合、<xref:System.Diagnostics.Stopwatch>クラスは、システム タイマーを使用して<xref:System.Diagnostics.Stopwatch.GetTimestamp%2A>、現在を返して<xref:System.DateTime.Ticks%2A?displayProperty=nameWithType>のプロパティ、<xref:System.DateTime.Now%2A?displayProperty=nameWithType>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="e4e20-179">If the <xref:System.Diagnostics.Stopwatch> class uses the system timer, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the current <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> property of the <xref:System.DateTime.Now%2A?displayProperty=nameWithType> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4e20-180">次の例では、使用、<xref:System.Diagnostics.Stopwatch.GetTimestamp%2A>パフォーマンス カウンターを更新するメソッド。</span><span class="sxs-lookup"><span data-stu-id="e4e20-180">The following example illustrates the use of the <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> method to update a performance counter.</span></span>  
  
 [!code-cpp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CPP/elapsedtime.cpp#2)]
 [!code-csharp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CS/elapsedtime.cs#2)]
 [!code-vb[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/VB/elapsedtime.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      </Docs>
    </Member>
    <Member MemberName="IsHighResolution">
      <MemberSignature Language="C#" Value="public static readonly bool IsHighResolution;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly bool IsHighResolution" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHighResolution As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly bool IsHighResolution;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsHighResolution : bool" Usage="System.Diagnostics.Stopwatch.IsHighResolution" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4e20-181">タイマーが高解像力のパフォーマンス カウンターに基づいているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-181">Indicates whether the timer is based on a high-resolution performance counter.</span></span> <span data-ttu-id="e4e20-182">このフィールドは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e4e20-182">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4e20-183">使用されるタイマー、<xref:System.Diagnostics.Stopwatch>クラスは、システムのハードウェアとオペレーティング システムによって異なります。</span><span class="sxs-lookup"><span data-stu-id="e4e20-183">The timer used by the <xref:System.Diagnostics.Stopwatch> class depends on the system hardware and operating system.</span></span> <span data-ttu-id="e4e20-184"><xref:System.Diagnostics.Stopwatch.IsHighResolution> `true`場合、<xref:System.Diagnostics.Stopwatch>タイマーは高解像度のパフォーマンス カウンターに基づいています。</span><span class="sxs-lookup"><span data-stu-id="e4e20-184"><xref:System.Diagnostics.Stopwatch.IsHighResolution> is `true` if the <xref:System.Diagnostics.Stopwatch> timer is based on a high-resolution performance counter.</span></span> <span data-ttu-id="e4e20-185">それ以外の場合、<xref:System.Diagnostics.Stopwatch.IsHighResolution>は`false`、ことを示します、<xref:System.Diagnostics.Stopwatch>タイマーは、システム タイマーに基づきます。</span><span class="sxs-lookup"><span data-stu-id="e4e20-185">Otherwise, <xref:System.Diagnostics.Stopwatch.IsHighResolution> is `false`, which indicates that the <xref:System.Diagnostics.Stopwatch> timer is based on the system timer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4e20-186">次の例は、頻度と解決策が表示されます、<xref:System.Diagnostics.Stopwatch>タイマー。</span><span class="sxs-lookup"><span data-stu-id="e4e20-186">The following example displays the frequency and resolution of a <xref:System.Diagnostics.Stopwatch> timer.</span></span> <span data-ttu-id="e4e20-187">このコード例が示されている例の一部、<xref:System.Diagnostics.Stopwatch>クラス。</span><span class="sxs-lookup"><span data-stu-id="e4e20-187">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#2](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#2)]
 [!code-csharp[StopWatchPerfSample#2](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#2)]
 [!code-vb[StopWatchPerfSample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.Frequency" />
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public bool IsRunning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunning" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.IsRunning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRunning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRunning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRunning : bool" Usage="System.Diagnostics.Stopwatch.IsRunning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4e20-188"><see cref="T:System.Diagnostics.Stopwatch" /> タイマーが実行中かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-188">Gets a value indicating whether the <see cref="T:System.Diagnostics.Stopwatch" /> timer is running.</span></span></summary>
        <value><span data-ttu-id="e4e20-189"><see cref="T:System.Diagnostics.Stopwatch" /> インスタンスが現在実行中で、間隔の経過時間を計測中の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e4e20-189"><see langword="true" /> if the <see cref="T:System.Diagnostics.Stopwatch" /> instance is currently running and measuring elapsed time for an interval; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4e20-190">A<xref:System.Diagnostics.Stopwatch>インスタンスへの呼び出しでの実行が開始<xref:System.Diagnostics.Stopwatch.Start%2A>または<xref:System.Diagnostics.Stopwatch.StartNew%2A>します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-190">A <xref:System.Diagnostics.Stopwatch> instance begins running with a call to <xref:System.Diagnostics.Stopwatch.Start%2A> or <xref:System.Diagnostics.Stopwatch.StartNew%2A>.</span></span> <span data-ttu-id="e4e20-191">呼び出しを実行しているインスタンスが停止<xref:System.Diagnostics.Stopwatch.Stop%2A>または<xref:System.Diagnostics.Stopwatch.Reset%2A>します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-191">The instance stops running with a call to <xref:System.Diagnostics.Stopwatch.Stop%2A> or <xref:System.Diagnostics.Stopwatch.Reset%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="stopwatch.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4e20-192">タイマー間隔の計測を停止して、経過時間をゼロにリセットします。</span><span class="sxs-lookup"><span data-stu-id="e4e20-192">Stops time interval measurement and resets the elapsed time to zero.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4e20-193">A<xref:System.Diagnostics.Stopwatch>インスタンスを計算し、インスタンスがリセットされるまで、複数の時間間隔の間で累積的な経過時間を保持します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-193">A <xref:System.Diagnostics.Stopwatch> instance calculates and retains the cumulative elapsed time across multiple time intervals, until the instance is reset.</span></span> <span data-ttu-id="e4e20-194">使用<xref:System.Diagnostics.Stopwatch.Stop%2A>を現在の間隔の計測を停止し、累積的な経過時間の値を保持します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-194">Use <xref:System.Diagnostics.Stopwatch.Stop%2A> to stop the current interval measurement and retain the cumulative elapsed time value.</span></span> <span data-ttu-id="e4e20-195">使用<xref:System.Diagnostics.Stopwatch.Reset%2A>進行中の間隔の計測を停止し、経過時間の値をオフにします。</span><span class="sxs-lookup"><span data-stu-id="e4e20-195">Use <xref:System.Diagnostics.Stopwatch.Reset%2A> to stop any interval measurement in progress and clear the elapsed time value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
      </Docs>
    </Member>
    <Member MemberName="Restart">
      <MemberSignature Language="C#" Value="public void Restart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Restart() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Restart" />
      <MemberSignature Language="VB.NET" Value="Public Sub Restart ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Restart();" />
      <MemberSignature Language="F#" Value="member this.Restart : unit -&gt; unit" Usage="stopwatch.Restart " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4e20-196">時間間隔の計測を停止し、経過時間をゼロにリセットして、経過時間の計測を開始します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-196">Stops time interval measurement, resets the elapsed time to zero, and starts measuring elapsed time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4e20-197">A<xref:System.Diagnostics.Stopwatch>インスタンスを計算し、インスタンスがリセットまたは再起動するまで、複数の時間間隔の間で累積的な経過時間を保持します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-197">A <xref:System.Diagnostics.Stopwatch> instance calculates and retains the cumulative elapsed time across multiple time intervals, until the instance is reset or restarted.</span></span> <span data-ttu-id="e4e20-198">使用<xref:System.Diagnostics.Stopwatch.Stop%2A>を現在の間隔の計測を停止し、累積的な経過時間の値を保持します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-198">Use <xref:System.Diagnostics.Stopwatch.Stop%2A> to stop the current interval measurement and retain the cumulative elapsed time value.</span></span> <span data-ttu-id="e4e20-199">使用<xref:System.Diagnostics.Stopwatch.Reset%2A>進行中の間隔の計測を停止し、経過時間の値をオフにします。</span><span class="sxs-lookup"><span data-stu-id="e4e20-199">Use <xref:System.Diagnostics.Stopwatch.Reset%2A> to stop any interval measurement in progress and clear the elapsed time value.</span></span> <span data-ttu-id="e4e20-200">使用<xref:System.Diagnostics.Stopwatch.Restart%2A>を現在の間隔の計測を停止し、新しい間隔の計測を開始します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-200">Use <xref:System.Diagnostics.Stopwatch.Restart%2A> to stop current interval measurement and start a new interval measurement.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="stopwatch.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4e20-201">間隔の経過時間の計測を開始または再開します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-201">Starts, or resumes, measuring elapsed time for an interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4e20-202">一般的な<xref:System.Diagnostics.Stopwatch>シナリオを呼び出す、<xref:System.Diagnostics.Stopwatch.Start%2A>メソッド、最終的に呼び出す、<xref:System.Diagnostics.Stopwatch.Stop%2A>メソッド、およびし確認の経過時間を使用して、<xref:System.Diagnostics.Stopwatch.Elapsed%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e4e20-202">In a typical <xref:System.Diagnostics.Stopwatch> scenario, you call the <xref:System.Diagnostics.Stopwatch.Start%2A> method, then eventually call the <xref:System.Diagnostics.Stopwatch.Stop%2A> method, and then you check elapsed time using the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property.</span></span>  
  
 <span data-ttu-id="e4e20-203">開始されると、<xref:System.Diagnostics.Stopwatch>タイマーは、インスタンスが停止またはリセットされるまでに経過したタイマーのティック単位で、現在の間隔を測定します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-203">Once started, a <xref:System.Diagnostics.Stopwatch> timer measures the current interval, in elapsed timer ticks, until the instance is stopped or reset.</span></span> <span data-ttu-id="e4e20-204">以降、<xref:System.Diagnostics.Stopwatch>は既に実行されているが、タイマーの状態を変更または経過時間のプロパティをリセットしません。</span><span class="sxs-lookup"><span data-stu-id="e4e20-204">Starting a <xref:System.Diagnostics.Stopwatch> that is already running does not change the timer state or reset the elapsed time properties.</span></span>  
  
 <span data-ttu-id="e4e20-205">ときに、<xref:System.Diagnostics.Stopwatch>インスタンスが 1 つ以上の間隔を測定、<xref:System.Diagnostics.Stopwatch.Start%2A>メソッドは、現在の経過時間の値から時間の計測を再開します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-205">When a <xref:System.Diagnostics.Stopwatch> instance measures more than one interval, the <xref:System.Diagnostics.Stopwatch.Start%2A> method resumes measuring time from the current elapsed time value.</span></span> <span data-ttu-id="e4e20-206">A<xref:System.Diagnostics.Stopwatch>インスタンスを計算し、インスタンスがリセットされるまで、複数の時間間隔の間で累積的な経過時間を保持します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-206">A <xref:System.Diagnostics.Stopwatch> instance calculates and retains the cumulative elapsed time across multiple time intervals, until the instance is reset.</span></span> <span data-ttu-id="e4e20-207">使用して、<xref:System.Diagnostics.Stopwatch.Reset%2A>メソッドを呼び出す前に<xref:System.Diagnostics.Stopwatch.Start%2A>で累積的な経過時間をオフにする、<xref:System.Diagnostics.Stopwatch>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="e4e20-207">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method before calling <xref:System.Diagnostics.Stopwatch.Start%2A> to clear the cumulative elapsed time in a <xref:System.Diagnostics.Stopwatch> instance.</span></span> <span data-ttu-id="e4e20-208">使用して、<xref:System.Diagnostics.Stopwatch.Restart%2A>メソッドを<xref:System.Diagnostics.Stopwatch.Reset%2A>と<xref:System.Diagnostics.Stopwatch.Start%2A>、 <xref:System.Diagnostics.Stopwatch> 1 つのコマンドを使用します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-208">Use the <xref:System.Diagnostics.Stopwatch.Restart%2A> method to <xref:System.Diagnostics.Stopwatch.Reset%2A> and <xref:System.Diagnostics.Stopwatch.Start%2A> the <xref:System.Diagnostics.Stopwatch> with a single command.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4e20-209">次の例では、使用する方法、<xref:System.Diagnostics.Stopwatch.Start%2A>メソッドは、アプリケーションの実行時間を測定するタイマーを開始します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-209">The following example demonstrates how to use the <xref:System.Diagnostics.Stopwatch.Start%2A> method to start a timer that measures the execution time of an application.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Stopwatch StartNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.Stopwatch StartNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.StartNew" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StartNew () As Stopwatch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::Stopwatch ^ StartNew();" />
      <MemberSignature Language="F#" Value="static member StartNew : unit -&gt; System.Diagnostics.Stopwatch" Usage="System.Diagnostics.Stopwatch.StartNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Stopwatch</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4e20-210">新しい <see cref="T:System.Diagnostics.Stopwatch" /> インスタンスを初期化して、経過時間のプロパティをゼロに設定し、経過時間の計測を開始します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-210">Initializes a new <see cref="T:System.Diagnostics.Stopwatch" /> instance, sets the elapsed time property to zero, and starts measuring elapsed time.</span></span></summary>
        <returns><span data-ttu-id="e4e20-211">経過時間の計測を開始した <see cref="T:System.Diagnostics.Stopwatch" />。</span><span class="sxs-lookup"><span data-stu-id="e4e20-211">A <see cref="T:System.Diagnostics.Stopwatch" /> that has just begun measuring elapsed time.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4e20-212">このメソッドを呼び出すことは、<xref:System.Diagnostics.Stopwatch>コンス トラクターを呼び出して<xref:System.Diagnostics.Stopwatch.Start%2A>の新しいインスタンス。</span><span class="sxs-lookup"><span data-stu-id="e4e20-212">This method is equivalent to calling the <xref:System.Diagnostics.Stopwatch> constructor and then calling <xref:System.Diagnostics.Stopwatch.Start%2A> on the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4e20-213">次の例では、<xref:System.Diagnostics.Stopwatch>クラス文字列から整数に解析するための 4 つの異なる実装のパフォーマンスを測定します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-213">The following example uses the <xref:System.Diagnostics.Stopwatch> class to measure the performance of four different implementations for parsing an integer from a string.</span></span> <span data-ttu-id="e4e20-214">このコード例が示されている例の一部、<xref:System.Diagnostics.Stopwatch>クラス。</span><span class="sxs-lookup"><span data-stu-id="e4e20-214">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#4](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#4)]
 [!code-csharp[StopWatchPerfSample#4](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#4)]
 [!code-vb[StopWatchPerfSample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="stopwatch.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4e20-215">間隔の経過時間の計測を停止します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-215">Stops measuring elapsed time for an interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4e20-216">一般的な<xref:System.Diagnostics.Stopwatch>シナリオを呼び出す、<xref:System.Diagnostics.Stopwatch.Start%2A>メソッド、最終的に呼び出す、<xref:System.Diagnostics.Stopwatch.Stop%2A>メソッド、およびし確認の経過時間を使用して、<xref:System.Diagnostics.Stopwatch.Elapsed%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e4e20-216">In a typical <xref:System.Diagnostics.Stopwatch> scenario, you call the <xref:System.Diagnostics.Stopwatch.Start%2A> method, then eventually call the <xref:System.Diagnostics.Stopwatch.Stop%2A> method, and then you check elapsed time using the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property.</span></span>  
  
 <span data-ttu-id="e4e20-217"><xref:System.Diagnostics.Stopwatch.Stop%2A>メソッドは現在の時間間隔の計測を終了します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-217">The <xref:System.Diagnostics.Stopwatch.Stop%2A> method ends the current time interval measurement.</span></span> <span data-ttu-id="e4e20-218">停止、<xref:System.Diagnostics.Stopwatch>が実行されていませんが、タイマーの状態を変更または経過時間のプロパティをリセットしません。</span><span class="sxs-lookup"><span data-stu-id="e4e20-218">Stopping a <xref:System.Diagnostics.Stopwatch> that is not running does not change the timer state or reset the elapsed time properties.</span></span>  
  
 <span data-ttu-id="e4e20-219">ときに、<xref:System.Diagnostics.Stopwatch>インスタンスが 1 つ以上の間隔を測定、<xref:System.Diagnostics.Stopwatch.Stop%2A>メソッドは、経過時間の測定値を一時停止に相当します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-219">When a <xref:System.Diagnostics.Stopwatch> instance measures more than one interval, the <xref:System.Diagnostics.Stopwatch.Stop%2A> method is equivalent to pausing the elapsed time measurement.</span></span> <span data-ttu-id="e4e20-220">後続の呼び出し<xref:System.Diagnostics.Stopwatch.Start%2A>現在の経過時間の値からの時間の計測を再開します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-220">A subsequent call to <xref:System.Diagnostics.Stopwatch.Start%2A> resumes measuring time from the current elapsed time value.</span></span> <span data-ttu-id="e4e20-221">使用して、<xref:System.Diagnostics.Stopwatch.Reset%2A>で累積的な経過時間を消去するメソッド、<xref:System.Diagnostics.Stopwatch>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="e4e20-221">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in a <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4e20-222">次の例では、使用する方法、<xref:System.Diagnostics.Stopwatch.Stop%2A>メソッドをアプリケーションの実行時間を測定するタイマーを停止します。</span><span class="sxs-lookup"><span data-stu-id="e4e20-222">The following example demonstrates how to use the <xref:System.Diagnostics.Stopwatch.Stop%2A> method to stop a timer that measures the execution time of an application.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
  </Members>
</Type>