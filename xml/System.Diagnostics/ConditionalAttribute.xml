<Type Name="ConditionalAttribute" FullName="System.Diagnostics.ConditionalAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="81f6a270fe659ce8724aaa882a4ba2dbdfb14f48" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30397826" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ConditionalAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ConditionalAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ConditionalAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConditionalAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConditionalAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="97829-101">指定した条件付きコンパイル シンボルが定義されていない場合、メソッド呼び出しまたは属性を無視するようコンパイラに指示します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="97829-101">Indicates to compilers that a method call or attribute should be ignored unless a specified conditional compilation symbol is defined.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97829-102">適用することができます、<xref:System.Diagnostics.ConditionalAttribute>メソッドおよびクラス属性します。</span><span class="sxs-lookup"><span data-stu-id="97829-102">You can apply the <xref:System.Diagnostics.ConditionalAttribute> attribute to methods and classes.</span></span> <span data-ttu-id="97829-103">ただし、クラスで使用することはから派生した型に対してのみ有効<xref:System.Attribute>です。</span><span class="sxs-lookup"><span data-stu-id="97829-103">However, its use on classes is valid only for types that are derived from <xref:System.Attribute>.</span></span> <span data-ttu-id="97829-104"><xref:System.Diagnostics.ConditionalAttribute> いずれかが無視されるか、その他の種類に適用する場合、コンパイラの警告またはエラー メッセージが生成されます。</span><span class="sxs-lookup"><span data-stu-id="97829-104"><xref:System.Diagnostics.ConditionalAttribute> either will be ignored or will produce a compiler warning or error message if you apply it to any other type.</span></span>  
  
 <span data-ttu-id="97829-105">適用する<xref:System.Diagnostics.ConditionalAttribute>メソッドにコンパイラに指示する、メソッドを呼び出す必要がありますにコンパイルできません Microsoft intermediate language (MSIL) しない限り、条件付きコンパイル シンボルに関連付けられている<xref:System.Diagnostics.ConditionalAttribute>が定義されています。</span><span class="sxs-lookup"><span data-stu-id="97829-105">Applying <xref:System.Diagnostics.ConditionalAttribute> to a method indicates to compilers that a call to the method should not be compiled into Microsoft intermediate language (MSIL) unless the conditional compilation symbol that is associated with <xref:System.Diagnostics.ConditionalAttribute> is defined.</span></span> <span data-ttu-id="97829-106">メソッドは void を返しませんにこの属性を適用する場合、Visual Studio でのコンパイル エラーが表示されます。</span><span class="sxs-lookup"><span data-stu-id="97829-106">You will get a compilation error in Visual Studio if you apply this attribute to a method that does not return void.</span></span> <span data-ttu-id="97829-107">適用する<xref:System.Diagnostics.ConditionalAttribute>属性にある属性出力しないメタデータに条件付きコンパイル シンボルが定義されていない場合を示します。</span><span class="sxs-lookup"><span data-stu-id="97829-107">Applying <xref:System.Diagnostics.ConditionalAttribute> to an attribute indicates that the attribute should not be emitted to metadata unless the conditional compilation symbol is defined.</span></span> <span data-ttu-id="97829-108">メソッドに渡された引数または属性は、コンパイラによってまだ型チェックします。</span><span class="sxs-lookup"><span data-stu-id="97829-108">Any arguments passed to the method or attribute are still type-checked by the compiler.</span></span>  
  
 <span data-ttu-id="97829-109">条件付きコンパイル シンボルを定義するのに、次の手法を使用できます。</span><span class="sxs-lookup"><span data-stu-id="97829-109">You can use the following techniques to define conditional compilation symbols:</span></span>  
  
-   <span data-ttu-id="97829-110">コンパイラのコマンド ライン オプションを使用します。たとえば、 **/define: デバッグ**です。</span><span class="sxs-lookup"><span data-stu-id="97829-110">Use compiler command-line options; for example, **/define:DEBUG**.</span></span>  
  
-   <span data-ttu-id="97829-111">オペレーティング システムのシェルで環境変数を使用します。たとえば、**デバッグ設定 = 1**です。</span><span class="sxs-lookup"><span data-stu-id="97829-111">Use environment variables in the operating system shell; for example, **set DEBUG=1**.</span></span>  
  
-   <span data-ttu-id="97829-112">プラグマ、ソース コードで使用します。たとえば、次のようにコンパイル変数を定義します。</span><span class="sxs-lookup"><span data-stu-id="97829-112">Use pragmas in the source code; for example, define the compilation variable as follows:</span></span>  
  
    ```csharp  
    #define DEBUG  
    ```  
  
    ```vb  
    #Const DEBUG=True  
    ```  
  
     <span data-ttu-id="97829-113">変数を未定義にするには、次の手順に従います。</span><span class="sxs-lookup"><span data-stu-id="97829-113">To undefine the variable, use the following:</span></span>  
  
    ```csharp  
    #undef DEBUG  
    ```  
  
    ```vb  
    #Const DEBUG=False  
    ```  
  
 <span data-ttu-id="97829-114">共通言語仕様 (CLS) に準拠するいるとするコンパイラの無視が許可されて<xref:System.Diagnostics.ConditionalAttribute>です。</span><span class="sxs-lookup"><span data-stu-id="97829-114">Compilers that comply with the Common Language Specification (CLS) are permitted to ignore <xref:System.Diagnostics.ConditionalAttribute>.</span></span> <span data-ttu-id="97829-115">C#、Visual Basic、および C コンパイラ サポート<xref:System.Diagnostics.ConditionalAttribute>; JScript コンパイラは、属性をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="97829-115">The C#, Visual Basic, and C++ compilers support <xref:System.Diagnostics.ConditionalAttribute>; the JScript compiler does not support the attribute.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="97829-116">Visual Basic では、`AddressOf`演算子は、この属性して影響はありません。</span><span class="sxs-lookup"><span data-stu-id="97829-116">In Visual Basic, the `AddressOf` operator is not affected by this attribute.</span></span> <span data-ttu-id="97829-117">たとえば、`Call CType(AddressOf delegate, Action)`続かなければ`delegate`ですが、`Call delegate()`ない場合があります。</span><span class="sxs-lookup"><span data-stu-id="97829-117">For example, `Call CType(AddressOf delegate, Action)` always invokes `delegate`, although `Call delegate()` might not.</span></span>  
  
 <span data-ttu-id="97829-118"><xref:System.Diagnostics.ConditionalAttribute> 定義されているメソッドに適用される、<xref:System.Diagnostics.Debug>と<xref:System.Diagnostics.Trace>クラスです。</span><span class="sxs-lookup"><span data-stu-id="97829-118"><xref:System.Diagnostics.ConditionalAttribute> is applied to the methods that are defined in the <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes.</span></span>  
  
 <span data-ttu-id="97829-119">属性を使用する方法の詳細については、次を参照してください。[属性](~/docs/standard/attributes/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="97829-119">For more information about how to use attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97829-120">次の例は、<xref:System.Diagnostics.ConditionalAttribute> の使い方を示しています。</span><span class="sxs-lookup"><span data-stu-id="97829-120">The following example demonstrates the use of <xref:System.Diagnostics.ConditionalAttribute>.</span></span> <span data-ttu-id="97829-121">この例では、条件がで定義されていること、 **/define**コンパイラ オプション。</span><span class="sxs-lookup"><span data-stu-id="97829-121">The example assumes that the condition is defined with the **/define** compiler option.</span></span> <span data-ttu-id="97829-122">コンパイラ オプションを変更することによって、異なる結果を得ることができます。</span><span class="sxs-lookup"><span data-stu-id="97829-122">You can obtain different results by changing the compiler option.</span></span> <span data-ttu-id="97829-123">コンパイラ オプションとして指定するのではなく、サンプル コードのプラグマを使用して、条件を定義できます。</span><span class="sxs-lookup"><span data-stu-id="97829-123">You can optionally define the conditions by using pragmas in the sample code instead of identifying them as compiler options.</span></span>  
  
 [!code-csharp[ConditionalAttributeSample1#7](~/samples/snippets/csharp/VS_Snippets_CLR/ConditionalAttributeSample1/CS/cas.cs#7)]
 [!code-vb[ConditionalAttributeSample1#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConditionalAttributeSample1/VB/cas.vb#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionalAttribute (string conditionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string conditionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConditionalAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (conditionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConditionalAttribute(System::String ^ conditionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="conditionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="conditionString">
          <span data-ttu-id="97829-124">大文字小文字が区別される、属性に関連付けられた条件付きコンパイルのシンボルを指定する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97829-124">A string that specifies the case-sensitive conditional compilation symbol that is associated with the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97829-125">
            <see cref="T:System.Diagnostics.ConditionalAttribute" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97829-125">Initializes a new instance of the <see cref="T:System.Diagnostics.ConditionalAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="97829-126">次の例で使用する方法、<xref:System.Diagnostics.ConditionalAttribute.%23ctor%2A>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="97829-126">The following example demonstrates how to use the <xref:System.Diagnostics.ConditionalAttribute.%23ctor%2A> constructor.</span></span> <span data-ttu-id="97829-127">この例に示されている例の一部である、<xref:System.Diagnostics.ConditionalAttribute>クラスです。</span><span class="sxs-lookup"><span data-stu-id="97829-127">This example is part of a larger example provided for the <xref:System.Diagnostics.ConditionalAttribute> class.</span></span>  
  
 [!code-csharp[ConditionalAttributeSample1#8](~/samples/snippets/csharp/VS_Snippets_CLR/ConditionalAttributeSample1/CS/cas.cs#8)]
 [!code-vb[ConditionalAttributeSample1#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConditionalAttributeSample1/VB/cas.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionString">
      <MemberSignature Language="C#" Value="public string ConditionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConditionString" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ConditionalAttribute.ConditionString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConditionString { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="97829-128">
            <see cref="T:System.Diagnostics.ConditionalAttribute" /> 属性に関連付けられた条件付きコンパイル シンボルを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97829-128">Gets the conditional compilation symbol that is associated with the <see cref="T:System.Diagnostics.ConditionalAttribute" /> attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="97829-129">大文字小文字が区別される、<see cref="T:System.Diagnostics.ConditionalAttribute" /> 属性に関連付けられた条件付きコンパイル シンボルを指定する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97829-129">A string that specifies the case-sensitive conditional compilation symbol that is associated with the <see cref="T:System.Diagnostics.ConditionalAttribute" /> attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97829-130">このプロパティは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="97829-130">This property is read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>