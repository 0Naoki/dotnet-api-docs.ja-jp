<Type Name="DataReceivedEventArgs" FullName="System.Diagnostics.DataReceivedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="512efbab93320933478311ee04c44018863b11df" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39982414" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataReceivedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataReceivedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DataReceivedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataReceivedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataReceivedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DataReceivedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a63e8-101">
        <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> イベントおよび <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> イベントのデータを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a63e8-101">Provides data for the <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> and <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a63e8-102">リダイレクトされたを非同期的に収集する<xref:System.Diagnostics.Process.StandardOutput%2A>または<xref:System.Diagnostics.Process.StandardError%2A>ストリームは、プロセスの出力リダイレクトされたストリームの出力イベントを処理するメソッドを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a63e8-102">To asynchronously collect the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream output of a process, you must create a method that handles the redirected stream output events.</span></span> <span data-ttu-id="a63e8-103">プロセスが、リダイレクトされたストリームに書き込むイベント ハンドラー メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="a63e8-103">The event-handler method is called when the process writes to the redirected stream.</span></span> <span data-ttu-id="a63e8-104">イベント デリゲートのインスタンスと、イベント ハンドラーを呼び出す<xref:System.Diagnostics.DataReceivedEventArgs>します。</span><span class="sxs-lookup"><span data-stu-id="a63e8-104">The event delegate calls your event handler with an instance of <xref:System.Diagnostics.DataReceivedEventArgs>.</span></span> <span data-ttu-id="a63e8-105"><xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>プロパティには、プロセスは、リダイレクトされたストリームに書き込んだテキスト行が含まれています。</span><span class="sxs-lookup"><span data-stu-id="a63e8-105">The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property contains the text line that the process wrote to the redirected stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a63e8-106">次のコード例は、リダイレクトされたで非同期の読み取り操作を実行する方法を示しています。<xref:System.Diagnostics.Process.StandardOutput%2A>のストリーム、`sort`コマンド。</span><span class="sxs-lookup"><span data-stu-id="a63e8-106">The following code example illustrates how to perform asynchronous read operations on the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream of the `sort` command.</span></span> <span data-ttu-id="a63e8-107">`sort`コマンドは、コンソール アプリケーションを読み取り、テキスト入力を並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="a63e8-107">The `sort` command is a console application that reads and sorts text input.</span></span>  
  
 <span data-ttu-id="a63e8-108">例でのイベントのデリゲートを作成、`SortOutputHandler`イベント ハンドラーを関連付けます、<xref:System.Diagnostics.Process.OutputDataReceived>イベント。</span><span class="sxs-lookup"><span data-stu-id="a63e8-108">The example creates an event delegate for the `SortOutputHandler` event handler and associates it with the <xref:System.Diagnostics.Process.OutputDataReceived> event.</span></span> <span data-ttu-id="a63e8-109">イベント ハンドラーがリダイレクトされたからテキスト行を受け取る<xref:System.Diagnostics.Process.StandardOutput%2A>ストリーム、テキストを書式設定し、画面にテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="a63e8-109">The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/sort_async.cpp#1)]
 [!code-csharp[Process_AsyncStreams#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/sort_async.cs#1)]
 [!code-vb[Process_AsyncStreams#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/sort_async.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.DataReceivedEventHandler" />
    <altmember cref="E:System.Diagnostics.Process.OutputDataReceived" />
    <altmember cref="E:System.Diagnostics.Process.ErrorDataReceived" />
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
  <Members>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public string Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Data" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DataReceivedEventArgs.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Data { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : string" Usage="System.Diagnostics.DataReceivedEventArgs.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a63e8-110">リダイレクトされた <see cref="T:System.Diagnostics.Process" /> 出力ストリームに書き込まれた文字の行を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a63e8-110">Gets the line of characters that was written to a redirected <see cref="T:System.Diagnostics.Process" /> output stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a63e8-111">関連する <see cref="T:System.Diagnostics.Process" /> によって、リダイレクトされた <see cref="P:System.Diagnostics.Process.StandardOutput" /> または <see cref="P:System.Diagnostics.Process.StandardError" /> ストリームに書き込まれた行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a63e8-111">The line that was written by an associated <see cref="T:System.Diagnostics.Process" /> to its redirected <see cref="P:System.Diagnostics.Process.StandardOutput" /> or <see cref="P:System.Diagnostics.Process.StandardError" /> stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a63e8-112">リダイレクトされると、<xref:System.Diagnostics.Process.StandardOutput%2A>または<xref:System.Diagnostics.Process.StandardError%2A>のストリームを<xref:System.Diagnostics.Process>イベント ハンドラーにイベントが、プロセスは、リダイレクトされたストリームに行を書き込むたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="a63e8-112">When you redirect the <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream of a <xref:System.Diagnostics.Process> to your event handler, an event is raised each time the process writes a line to the redirected stream.</span></span> <span data-ttu-id="a63e8-113"><xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>プロパティは、行を<xref:System.Diagnostics.Process>がリダイレクトされた出力ストリームに書き込みました。</span><span class="sxs-lookup"><span data-stu-id="a63e8-113">The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property is the line that the <xref:System.Diagnostics.Process> wrote to the redirected output stream.</span></span> <span data-ttu-id="a63e8-114">イベント ハンドラーを使用できる、<xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>プロセスの出力をフィルター処理または別の場所に出力を記述するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="a63e8-114">Your event handler can use the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property to filter process output or write output to an alternate location.</span></span> <span data-ttu-id="a63e8-115">たとえば、指定されたエラー ログ ファイルにすべてのエラー出力の行を格納するイベント ハンドラーを作成する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="a63e8-115">For example, you might create an event handler that stores all error output lines into a designated error log file.</span></span>  
  
 <span data-ttu-id="a63e8-116">行は、改行 ("\n") で指定されている文字のシーケンスや、キャリッジ リターンとライン フィード ("\r\n") として定義されます。</span><span class="sxs-lookup"><span data-stu-id="a63e8-116">A line is defined as a sequence of characters followed by a line feed ("\n") or a carriage return immediately followed by a line feed ("\r\n").</span></span> <span data-ttu-id="a63e8-117">改行文字は、既定のシステム ANSI コード ページを使用してエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="a63e8-117">The line characters are encoded using the default system ANSI code page.</span></span> <span data-ttu-id="a63e8-118"><xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>プロパティは、終端のキャリッジ リターンを含めるまたは改行しません。</span><span class="sxs-lookup"><span data-stu-id="a63e8-118">The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property does not include the terminating carriage return or line feed.</span></span>  
  
 <span data-ttu-id="a63e8-119">リダイレクトされたストリームが閉じられたときに、null の行は、イベント ハンドラーに送信されます。</span><span class="sxs-lookup"><span data-stu-id="a63e8-119">When the redirected stream is closed, a null line is sent to the event handler.</span></span> <span data-ttu-id="a63e8-120">ように、イベント ハンドラーのチェック、<xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>プロパティにアクセスする前に、適切にします。</span><span class="sxs-lookup"><span data-stu-id="a63e8-120">Ensure your event handler checks the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property appropriately before accessing it.</span></span> <span data-ttu-id="a63e8-121">たとえば、静的メソッドを使用することができます<xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType>を検証する、<xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>プロパティ、イベント ハンドラーにします。</span><span class="sxs-lookup"><span data-stu-id="a63e8-121">For example, you can use the static method <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> to validate the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property in your event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a63e8-122">次のコード例に関連付けられている単純なイベント ハンドラーを示しています、<xref:System.Diagnostics.Process.OutputDataReceived>イベント。</span><span class="sxs-lookup"><span data-stu-id="a63e8-122">The following code example illustrates a simple event handler associated with the <xref:System.Diagnostics.Process.OutputDataReceived> event.</span></span> <span data-ttu-id="a63e8-123">イベント ハンドラーがリダイレクトされたからテキスト行を受け取る<xref:System.Diagnostics.Process.StandardOutput%2A>ストリーム、テキストを書式設定し、画面にテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="a63e8-123">The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#4](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/datareceivedevent.cpp#4)]
 [!code-csharp[Process_AsyncStreams#4](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/datareceivedevent.cs#4)]
 [!code-vb[Process_AsyncStreams#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/datareceivedevent.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>