<Type Name="DataReceivedEventArgs" FullName="System.Diagnostics.DataReceivedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="24682d8d98bf71ce57b52a0544cc49ca120af4cc" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69253161" /></Metadata><TypeSignature Language="C#" Value="public class DataReceivedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataReceivedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DataReceivedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataReceivedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataReceivedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DataReceivedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b9e4b-101"><see cref="E:System.Diagnostics.Process.OutputDataReceived" /> イベントおよび <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> イベントのデータを提供します。</span><span class="sxs-lookup"><span data-stu-id="b9e4b-101">Provides data for the <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> and <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9e4b-102">プロセスのリダイレクト<xref:System.Diagnostics.Process.StandardOutput%2A>または<xref:System.Diagnostics.Process.StandardError%2A>ストリーム出力を非同期に収集するには、リダイレクトされたストリーム出力イベントを処理するメソッドを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9e4b-102">To asynchronously collect the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream output of a process, you must create a method that handles the redirected stream output events.</span></span> <span data-ttu-id="b9e4b-103">プロセスがリダイレクトされたストリームに書き込むときに、イベントハンドラーメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b9e4b-103">The event-handler method is called when the process writes to the redirected stream.</span></span> <span data-ttu-id="b9e4b-104">イベントデリゲートは、の<xref:System.Diagnostics.DataReceivedEventArgs>インスタンスを使用してイベントハンドラーを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b9e4b-104">The event delegate calls your event handler with an instance of <xref:System.Diagnostics.DataReceivedEventArgs>.</span></span> <span data-ttu-id="b9e4b-105">プロパティ<xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>は、リダイレクトされたストリームにプロセスが書き込んだテキスト行を格納します。</span><span class="sxs-lookup"><span data-stu-id="b9e4b-105">The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property contains the text line that the process wrote to the redirected stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9e4b-106">次のコード例は、 <xref:System.Diagnostics.Process.StandardOutput%2A> `sort`コマンドのリダイレクトされたストリームで非同期読み取り操作を実行する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b9e4b-106">The following code example illustrates how to perform asynchronous read operations on the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream of the `sort` command.</span></span> <span data-ttu-id="b9e4b-107">`sort`コマンドは、テキスト入力の読み取りと並べ替えを行うコンソールアプリケーションです。</span><span class="sxs-lookup"><span data-stu-id="b9e4b-107">The `sort` command is a console application that reads and sorts text input.</span></span>  
  
 <span data-ttu-id="b9e4b-108">この例では、イベントハンドラーの`SortOutputHandler`イベントデリゲートを作成し、イベント<xref:System.Diagnostics.Process.OutputDataReceived>に関連付けます。</span><span class="sxs-lookup"><span data-stu-id="b9e4b-108">The example creates an event delegate for the `SortOutputHandler` event handler and associates it with the <xref:System.Diagnostics.Process.OutputDataReceived> event.</span></span> <span data-ttu-id="b9e4b-109">イベントハンドラーは、リダイレクト<xref:System.Diagnostics.Process.StandardOutput%2A>されたストリームからテキスト行を受け取り、テキストを書式設定して、画面にテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b9e4b-109">The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/sort_async.cpp#1)]
 [!code-csharp[Process_AsyncStreams#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/sort_async.cs#1)]
 [!code-vb[Process_AsyncStreams#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/sort_async.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.DataReceivedEventHandler" />
    <altmember cref="E:System.Diagnostics.Process.OutputDataReceived" />
    <altmember cref="E:System.Diagnostics.Process.ErrorDataReceived" />
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
  <Members>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public string Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Data" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DataReceivedEventArgs.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Data { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : string" Usage="System.Diagnostics.DataReceivedEventArgs.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9e4b-110">リダイレクトされた <see cref="T:System.Diagnostics.Process" /> 出力ストリームに書き込まれた文字の行を取得します。</span><span class="sxs-lookup"><span data-stu-id="b9e4b-110">Gets the line of characters that was written to a redirected <see cref="T:System.Diagnostics.Process" /> output stream.</span></span></summary>
        <value><span data-ttu-id="b9e4b-111">関連する <see cref="T:System.Diagnostics.Process" /> によって、リダイレクトされた <see cref="P:System.Diagnostics.Process.StandardOutput" /> または <see cref="P:System.Diagnostics.Process.StandardError" /> ストリームに書き込まれた行。</span><span class="sxs-lookup"><span data-stu-id="b9e4b-111">The line that was written by an associated <see cref="T:System.Diagnostics.Process" /> to its redirected <see cref="P:System.Diagnostics.Process.StandardOutput" /> or <see cref="P:System.Diagnostics.Process.StandardError" /> stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9e4b-112"><xref:System.Diagnostics.Process.StandardOutput%2A>または<xref:System.Diagnostics.Process.StandardError%2A> の<xref:System.Diagnostics.Process>ストリームをイベントハンドラーにリダイレクトすると、プロセスがリダイレクトされたストリームに行を書き込むたびにイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="b9e4b-112">When you redirect the <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream of a <xref:System.Diagnostics.Process> to your event handler, an event is raised each time the process writes a line to the redirected stream.</span></span> <span data-ttu-id="b9e4b-113">プロパティは、に<xref:System.Diagnostics.Process>よってリダイレクトされた出力ストリームに書き込まれた行です。 <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A></span><span class="sxs-lookup"><span data-stu-id="b9e4b-113">The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property is the line that the <xref:System.Diagnostics.Process> wrote to the redirected output stream.</span></span> <span data-ttu-id="b9e4b-114">イベントハンドラーは、プロパティを<xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>使用して、プロセスの出力をフィルター処理したり、出力を別の場所に書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="b9e4b-114">Your event handler can use the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property to filter process output or write output to an alternate location.</span></span> <span data-ttu-id="b9e4b-115">たとえば、すべてのエラー出力行を指定されたエラーログファイルに格納するイベントハンドラーを作成できます。</span><span class="sxs-lookup"><span data-stu-id="b9e4b-115">For example, you might create an event handler that stores all error output lines into a designated error log file.</span></span>  
  
 <span data-ttu-id="b9e4b-116">行は、一連の文字として定義され、その後に改行 ("\n")、またはキャリッジリターンの直後に改行 ("\r\n") が続きます。</span><span class="sxs-lookup"><span data-stu-id="b9e4b-116">A line is defined as a sequence of characters followed by a line feed ("\n") or a carriage return immediately followed by a line feed ("\r\n").</span></span> <span data-ttu-id="b9e4b-117">行文字は、既定のシステム ANSI コードページを使用してエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="b9e4b-117">The line characters are encoded using the default system ANSI code page.</span></span> <span data-ttu-id="b9e4b-118">プロパティ<xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>には、終端の復帰またはラインフィードは含まれません。</span><span class="sxs-lookup"><span data-stu-id="b9e4b-118">The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property does not include the terminating carriage return or line feed.</span></span>  
  
 <span data-ttu-id="b9e4b-119">リダイレクトされたストリームが閉じられると、null 行がイベントハンドラーに送信されます。</span><span class="sxs-lookup"><span data-stu-id="b9e4b-119">When the redirected stream is closed, a null line is sent to the event handler.</span></span> <span data-ttu-id="b9e4b-120">アクセスする前に、イベント<xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>ハンドラーがプロパティを適切に確認するようにしてください。</span><span class="sxs-lookup"><span data-stu-id="b9e4b-120">Ensure your event handler checks the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property appropriately before accessing it.</span></span> <span data-ttu-id="b9e4b-121">たとえば、静的メソッド<xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType>を使用して、イベントハンドラーの<xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>プロパティを検証できます。</span><span class="sxs-lookup"><span data-stu-id="b9e4b-121">For example, you can use the static method <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> to validate the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property in your event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9e4b-122">次のコード例は、 <xref:System.Diagnostics.Process.OutputDataReceived>イベントに関連付けられている単純なイベントハンドラーを示しています。</span><span class="sxs-lookup"><span data-stu-id="b9e4b-122">The following code example illustrates a simple event handler associated with the <xref:System.Diagnostics.Process.OutputDataReceived> event.</span></span> <span data-ttu-id="b9e4b-123">イベントハンドラーは、リダイレクト<xref:System.Diagnostics.Process.StandardOutput%2A>されたストリームからテキスト行を受け取り、テキストを書式設定して、画面にテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b9e4b-123">The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#4](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/datareceivedevent.cpp#4)]
 [!code-csharp[Process_AsyncStreams#4](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/datareceivedevent.cs#4)]
 [!code-vb[Process_AsyncStreams#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/datareceivedevent.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
