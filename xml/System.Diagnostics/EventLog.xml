<Type Name="EventLog" FullName="System.Diagnostics.EventLog">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8dbd7c54611eae4fc67bc3cfb380e97f4369f241" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63887937" /></Metadata><TypeSignature Language="C#" Value="public class EventLog : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLog extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventLog" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLog&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLog : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type EventLog = class&#xA;    inherit Component&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
      <AttributeName>System.ComponentModel.DefaultEvent("EntryWritten")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.InstallerType(typeof(System.Diagnostics.EventLogInstaller))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.Diagnostics.MonitoringDescription("Represents an event log")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Install.EventLogInstallableComponentDesigner, Microsoft.VisualStudio, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.InstallerType("System.Diagnostics.EventLogInstaller, System.Configuration.Install, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.InstallerType("System.Diagnostics.EventLogInstaller, System.Configuration.Install, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.MonitoringDescription("EventLogDesc")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.InstallerType("System.Diagnostics.EventLogInstaller, System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="68165-101">Windows イベント ログとの相互作用を提供します。</span><span class="sxs-lookup"><span data-stu-id="68165-101">Provides interaction with Windows event logs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-102"><xref:System.Diagnostics.EventLog> アクセスしたり、Windows イベント ログは、ソフトウェアまたはハードウェアの重要なイベントに関する情報を記録をカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="68165-102"><xref:System.Diagnostics.EventLog> lets you access or customize Windows event logs, which record information about important software or hardware events.</span></span> <span data-ttu-id="68165-103">使用して<xref:System.Diagnostics.EventLog>、既存のログからの読み取り、ログにエントリを書き込む、作成またはイベント ソースを削除する、ログを削除してログ エントリに対応します。</span><span class="sxs-lookup"><span data-stu-id="68165-103">Using <xref:System.Diagnostics.EventLog>, you can read from existing logs, write entries to logs, create or delete event sources, delete logs, and respond to log entries.</span></span> <span data-ttu-id="68165-104">イベント ソースを作成するときに、新しいログを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="68165-104">You can also create new logs when creating an event source.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="68165-105">この型は <xref:System.IDisposable> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="68165-105">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="68165-106">型の使用が完了したら、直接的または間接的に型を破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-106">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="68165-107">直接的に型を破棄するには、`try` / `catch` ブロック内で <xref:System.IDisposable.Dispose%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="68165-107">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="68165-108">間接的に型を破棄するには、`using` (C# の場合) または `Using` (Visual Basic 言語) などの言語構成要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="68165-108">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="68165-109">詳細については、<xref:System.IDisposable> インターフェイスに関するトピック内の「IDisposable を実装するオブジェクトの使用」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="68165-109">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="68165-110">個々 のイベント ログと、そのエントリへのアクセスを提供することに加えて、<xref:System.Diagnostics.EventLog>クラスでは、すべてのイベント ログのコレクションにアクセスすることができます。</span><span class="sxs-lookup"><span data-stu-id="68165-110">In addition to providing access to individual event logs and their entries, the <xref:System.Diagnostics.EventLog> class lets you access the collection of all event logs.</span></span> <span data-ttu-id="68165-111">使用することができます、`static`のメンバー<xref:System.Diagnostics.EventLog>ログを削除するログの一覧を取得、作成や、ソースの削除またはコンピューターに既に特定のソースが含まれるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="68165-111">You can use the `static` members of <xref:System.Diagnostics.EventLog> to delete logs, get log lists, create or delete a source, or determine if a computer already contains a particular source.</span></span>  
  
 <span data-ttu-id="68165-112">これには 3 つの既定のイベント ログがあります。アプリケーション、システム、およびセキュリティ。</span><span class="sxs-lookup"><span data-stu-id="68165-112">There are three default event logs: Application, System, and Security.</span></span> <span data-ttu-id="68165-113">セキュリティ ログとは、読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="68165-113">A Security log is read-only.</span></span> <span data-ttu-id="68165-114">他のアプリケーションやサービスなど、Active Directory をインストールするには、追加のイベント ログがある場合があります。</span><span class="sxs-lookup"><span data-stu-id="68165-114">Other applications and services you install, such as Active Directory, might have additional event logs.</span></span>  
  
 <span data-ttu-id="68165-115">セキュリティに関する考慮事項があるを使用する場合、<xref:System.Diagnostics.EventLog>クラス。</span><span class="sxs-lookup"><span data-stu-id="68165-115">There are security considerations when using the <xref:System.Diagnostics.EventLog> class.</span></span> <span data-ttu-id="68165-116"><xref:System.Diagnostics.EventLog> 必要があります<xref:System.Diagnostics.EventLogPermission>で .NET Framework 2.0 およびそれ以降のバージョンでは、特定のアクションまたは .NET Framework 1.0 および 1.1 で完全な信頼のアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="68165-116"><xref:System.Diagnostics.EventLog> requires <xref:System.Diagnostics.EventLogPermission> permissions for specific actions in the .NET Framework 2.0 and later versions, or full trust in the .NET Framework 1.0 and 1.1.</span></span> <span data-ttu-id="68165-117">お勧め<xref:System.Diagnostics.EventLogPermission>部分的に信頼されたコードに付与することです。</span><span class="sxs-lookup"><span data-stu-id="68165-117">We recommend that <xref:System.Diagnostics.EventLogPermission> not be granted to partially trusted code.</span></span>  <span data-ttu-id="68165-118">任意のイベント ログ オブジェクトを渡す必要がありますしないなど<xref:System.Diagnostics.EventLogEntryCollection>と<xref:System.Diagnostics.EventLogEntry>オブジェクトの信頼度の低いコード。</span><span class="sxs-lookup"><span data-stu-id="68165-118">You should never pass any event log object, including <xref:System.Diagnostics.EventLogEntryCollection> and <xref:System.Diagnostics.EventLogEntry> objects, to less trusted code.</span></span> <span data-ttu-id="68165-119">作成など、<xref:System.Diagnostics.EventLog>オブジェクトが、エントリの書き込み、および渡す、<xref:System.Diagnostics.EventLog>を読み取り、イベント ログに書き込む機能の発行などのアクションを実行するコードを使用するため、部分的に信頼されたコードにオブジェクトがセキュリティの問題を作成できますイベント ログ メッセージの別のアプリケーションの名前。</span><span class="sxs-lookup"><span data-stu-id="68165-119">For example, creating an <xref:System.Diagnostics.EventLog> object, writing an entry, and then passing the <xref:System.Diagnostics.EventLog> object to partially trusted code can create a security issue, because the ability to read and write to the event log allows code to perform actions such as issuing event log messages in the name of another application.</span></span>  
  
 <span data-ttu-id="68165-120">Windows Vista 以降、ユーザー アカウント制御 (UAC) は、ユーザーの資格情報を決定します。</span><span class="sxs-lookup"><span data-stu-id="68165-120">Starting with Windows Vista, User Account Control (UAC) determines the credentials of a user.</span></span> <span data-ttu-id="68165-121">ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="68165-121">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="68165-122">既定では、ユーザーは標準ユーザー ロールに所属します。</span><span class="sxs-lookup"><span data-stu-id="68165-122">By default, you are in the standard user role.</span></span> <span data-ttu-id="68165-123">セキュリティ ログにアクセスするコードを実行するには、最初に、資格情報を標準ユーザーから管理者に昇格させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-123">To run the code that accesses the Security log, you must first elevate your credentials from standard user to administrator.</span></span> <span data-ttu-id="68165-124">これを行うアプリケーションのショートカット メニューを開き、アプリケーションを起動するときに (マウスを使用している場合は、アプリケーションのアイコンを右) に管理者として実行することを示すとします。</span><span class="sxs-lookup"><span data-stu-id="68165-124">You can do this when you start an application by opening the shortcut menu for the application (if you're using a mouse, right-click the application icon) and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="68165-125">使用することができます<xref:System.Diagnostics.EventLog>イベント ビューアーのサーバーを表示できるカスタムのイベント ログを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-125">You can use <xref:System.Diagnostics.EventLog> to create custom event logs that you can view through the server's Event Viewer.</span></span> <span data-ttu-id="68165-126">使用して、<xref:System.Diagnostics.EventLog.RegisterDisplayName%2A>メソッドをイベント ビューアーでイベント ログのローカライズされた名前を表示します。</span><span class="sxs-lookup"><span data-stu-id="68165-126">Use the <xref:System.Diagnostics.EventLog.RegisterDisplayName%2A> method to display a localized name for your event log in the Event Viewer.</span></span> <span data-ttu-id="68165-127">使用して、<xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A>最大ログ サイズに達したときに、イベント ログの動作を構成する方法。</span><span class="sxs-lookup"><span data-stu-id="68165-127">Use the <xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> method to configure the behavior of your event log when it reaches its maximum log size.</span></span>  
  
 <span data-ttu-id="68165-128">イベント ログからの読み取り、ログの名前を指定します (<xref:System.Diagnostics.EventLog.Log%2A>プロパティ) とサーバーのコンピューター名 (<xref:System.Diagnostics.EventLog.MachineName%2A>イベント ログのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="68165-128">To read from an event log, specify the log name (<xref:System.Diagnostics.EventLog.Log%2A> property) and server computer name (<xref:System.Diagnostics.EventLog.MachineName%2A> property for the event log.</span></span> <span data-ttu-id="68165-129">ローカルのコンピューターでは、サーバー コンピューターの名前を指定しない場合は、"."と見なされます。</span><span class="sxs-lookup"><span data-stu-id="68165-129">If you don't specify the server computer name, the local computer, ".", is assumed.</span></span> <span data-ttu-id="68165-130">イベント ソースを指定する必要はありません (<xref:System.Diagnostics.EventLog.Source%2A>プロパティ)、ソースはログに書き込むのみ必要であるためです。</span><span class="sxs-lookup"><span data-stu-id="68165-130">It's not necessary to specify the event source (<xref:System.Diagnostics.EventLog.Source%2A> property), because a source is required only for writing to logs.</span></span> <span data-ttu-id="68165-131"><xref:System.Diagnostics.EventLog.Entries%2A>プロパティはエントリのイベント ログの一覧が設定されます。</span><span class="sxs-lookup"><span data-stu-id="68165-131">The  <xref:System.Diagnostics.EventLog.Entries%2A> property is automatically populated with the event log's list of entries.</span></span>  
  
 <span data-ttu-id="68165-132">イベント ログに書き込み、指定するか、イベント ソースの作成 (<xref:System.Diagnostics.EventLog.Source%2A>プロパティ)。</span><span class="sxs-lookup"><span data-stu-id="68165-132">To write to an event log, specify or create an event source (<xref:System.Diagnostics.EventLog.Source%2A> property).</span></span> <span data-ttu-id="68165-133">新しいイベント ソースを作成するコンピューターの管理者の資格情報が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-133">You must have administrative credentials on the computer to create a new event source.</span></span> <span data-ttu-id="68165-134">イベント ソースは、有効なエントリのソースとしてイベント ログに、アプリケーションを登録します。</span><span class="sxs-lookup"><span data-stu-id="68165-134">The event source registers your application with the event log as a valid source of entries.</span></span> <span data-ttu-id="68165-135">イベント ソースを使用するには、一度に 1 つのログに書き込めません。</span><span class="sxs-lookup"><span data-stu-id="68165-135">You can use the event source  to write to only one log at a time.</span></span> <span data-ttu-id="68165-136"><xref:System.Diagnostics.EventLog.Source%2A>プロパティは、任意のランダムな文字列を指定できますが、名前は、コンピューター上の他のソースから個別である必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-136">The <xref:System.Diagnostics.EventLog.Source%2A> property can be any random string, but the name must be distinct from other sources on the computer.</span></span> <span data-ttu-id="68165-137">イベント ソースは、通常、アプリケーションまたは別の識別文字列の名前です。</span><span class="sxs-lookup"><span data-stu-id="68165-137">The event source is typically the name of the application or another identifying string.</span></span> <span data-ttu-id="68165-138">複製を作成しようとしています。<xref:System.Diagnostics.EventLog.Source%2A>値は、例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="68165-138">Trying to create a duplicate <xref:System.Diagnostics.EventLog.Source%2A> value throws an exception.</span></span> <span data-ttu-id="68165-139">ただし、1 つのイベント ログは、複数のソースを関連付けることができます。</span><span class="sxs-lookup"><span data-stu-id="68165-139">However, a single event log can be associated with multiple sources.</span></span>  
  
 <span data-ttu-id="68165-140">イベント ログのイベント ソースに関連付けられた、<xref:System.Diagnostics.EventLog>インスタンスが存在しないと、新しいイベント ソースが作成されます。</span><span class="sxs-lookup"><span data-stu-id="68165-140">If the event source for the event log associated with the <xref:System.Diagnostics.EventLog> instance doesn't exist, a new event source is created.</span></span> <span data-ttu-id="68165-141">Windows Vista 以降のイベント ソースまたは Windows Server 2003 を作成するには、管理者の資格情報があります。</span><span class="sxs-lookup"><span data-stu-id="68165-141">To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative credentials.</span></span>  
  
 <span data-ttu-id="68165-142">この要件はセキュリティのログを含め、すべてのイベント ログを検索して、イベント ソースが一意であるかどうかを確認する必要があるためにです。</span><span class="sxs-lookup"><span data-stu-id="68165-142">This requirement is because all event logs, including Security logs, must be searched to determine whether the event source is unique.</span></span> <span data-ttu-id="68165-143">Windows Vista 以降、ユーザー権限がありません。 セキュリティ ログにアクセスするにはそのため、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="68165-143">Starting with Windows Vista, users do not have permission to access the Security log; therefore, a <xref:System.Security.SecurityException> is thrown.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="68165-144">イベント ソースを作成、削除する名前付きミュー テックスを使用して、基になるコードの同期が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-144">Creating or deleting an event source requires synchronization of the underlying code by using a named mutex.</span></span> <span data-ttu-id="68165-145">高い特権を持つアプリケーションは、名前付きミュー テックスをロックする場合、作成、またはイベント ソースを削除しようとしています。 すると、アプリケーションは、ロックが解放されるまでの応答を停止します。</span><span class="sxs-lookup"><span data-stu-id="68165-145">If a highly privileged application locks the named mutex, trying to create or delete an event source causes the application to stop responding until the lock is released.</span></span> <span data-ttu-id="68165-146">この問題を回避するには、決して付与<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode>信頼されていないコードへのアクセスを許可します。</span><span class="sxs-lookup"><span data-stu-id="68165-146">To help prevent this problem, never grant <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> permission to untrusted code.</span></span> <span data-ttu-id="68165-147">さらに、<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode>アクセス許可は、可能性のあるにより、他のアクセス許可をバイパスすることし、信頼性の高いコードにのみ付与する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-147">In addition, <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> permission potentially allows other permissions to be bypassed and should only be granted to highly trusted code.</span></span>  
  
 <span data-ttu-id="68165-148">アプリケーションとサービスは、アプリケーション ログまたはカスタムのログを書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-148">Applications and services should write to the Application log or to a custom log.</span></span> <span data-ttu-id="68165-149">デバイス ドライバーは、システム ログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-149">Device drivers should write to the System log.</span></span> <span data-ttu-id="68165-150">明示的に設定しない場合、<xref:System.Diagnostics.EventLog.Log%2A>プロパティ、アプリケーション ログにイベント ログの既定値します。</span><span class="sxs-lookup"><span data-stu-id="68165-150">If you do not explicitly set the <xref:System.Diagnostics.EventLog.Log%2A> property, the event log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-151">登録済みのソースとしての書き込みアプリケーションを保護するために何もないです。</span><span class="sxs-lookup"><span data-stu-id="68165-151">There is nothing to protect an application from writing as any registered source.</span></span>  <span data-ttu-id="68165-152">アプリケーションが与えられる場合<xref:System.Diagnostics.EventLogPermissionAccess.Write>アクセス許可は、コンピューターに登録されている任意の有効なソースのイベントを書き込むことです。</span><span class="sxs-lookup"><span data-stu-id="68165-152">If an application is granted <xref:System.Diagnostics.EventLogPermissionAccess.Write> permission, it can write events for any valid source registered on the computer.</span></span>  
  
 <span data-ttu-id="68165-153">使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>と<xref:System.Diagnostics.EventLog.WriteEntry%2A>メソッド、イベント ログにイベントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-153">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods to write events to an event log.</span></span> <span data-ttu-id="68165-154">イベントを書き込むイベント ソースを指定する必要があります。作成し、ソースと最初のエントリを書き込む前に、イベント ソースを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-154">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="68165-155">アプリケーションのインストール中に新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-155">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="68165-156">これにより、登録済みのイベント ソースの一覧とその構成を更新するオペレーティング システムまでの時間です。</span><span class="sxs-lookup"><span data-stu-id="68165-156">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="68165-157">場合は、オペレーティング システムは、イベント ソースの一覧を更新していないし、新しいソースを持つイベントの書き込み、書き込み操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="68165-157">If the operating system hasn't refreshed its list of event sources, and you try to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="68165-158">使用して新しいソースを構成することができます、<xref:System.Diagnostics.EventLogInstaller>オブジェクトまたは<xref:System.Diagnostics.EventLog.CreateEventSource%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68165-158">You can configure a new source by using an <xref:System.Diagnostics.EventLogInstaller> object or the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="68165-159">新しいイベント ソースを作成するコンピューターの管理者の資格情報が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-159">You must have administrative credentials on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="68165-160">各ソースは、一度に 1 つだけのイベント ログに書き込むことができます。ただし、アプリケーションでは、複数のソースを使用して、複数のイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-160">Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="68165-161">たとえば、アプリケーションでは、別のイベント ログまたは別のリソース ファイル用に構成された複数のソースを必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-161">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span> <span data-ttu-id="68165-162">既存のソースの構成の詳細を変更するには、ソースを削除し、新しい構成を使用して作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-162">To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</span></span> <span data-ttu-id="68165-163">他のアプリケーションやコンポーネントは、既存のソースを使用する場合は、既存のソースを削除する代わりに更新された構成と新しいソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-163">If other applications or components use the existing source, create a new source with the updated configuration instead of deleting the existing source.</span></span>  
  
 <span data-ttu-id="68165-164">イベント ソースは、イベント カテゴリ、メッセージ文字列のローカライズされたリソースを登録できます。</span><span class="sxs-lookup"><span data-stu-id="68165-164">You can register the event source with localized resources for your event category and message strings.</span></span> <span data-ttu-id="68165-165">アプリケーションでは、実際の文字列値を指定する代わりに、リソース識別子を使用して、イベント ログ エントリを書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="68165-165">Your application can write event log entries by using resource identifiers instead of specifying the actual string values.</span></span> <span data-ttu-id="68165-166">参照してください、<xref:System.Diagnostics.EventLogInstaller>と<xref:System.Diagnostics.EventSourceCreationData>リソース ファイル、ソースを構成する方法の詳細についてはクラスです。</span><span class="sxs-lookup"><span data-stu-id="68165-166">Refer to the <xref:System.Diagnostics.EventLogInstaller> and <xref:System.Diagnostics.EventSourceCreationData> classes for more information about configuring your source with resource files.</span></span>  
  
 <span data-ttu-id="68165-167">アプリケーションがイベント ログに直接文字列値を書き込む場合は、リソース、ソース ファイルのプロパティを設定するはありません。</span><span class="sxs-lookup"><span data-stu-id="68165-167">If your application writes string values directly to the event log, you do not have to set the resource file properties for the source.</span></span> <span data-ttu-id="68165-168">ソースは、ローカライズされたエントリを書き込むか、または直接の文字列を書き込むように構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-168">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="68165-169">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2 つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-169">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="68165-170">たとえば、リソース ファイルでは、1 つのソースを構成およびでは、そのソースを使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッドをイベント ログのリソース識別子を使用してエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-170">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="68165-171">リソースのファイルがない場合、別のソースを作成しでそのソースを使用し、<xref:System.Diagnostics.EventLog.WriteEntry%2A>そのソースを使用して、イベント ログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-171">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
 <span data-ttu-id="68165-172">イベントを記述する場合は、メッセージ文字列またはメッセージ文字列のリソース識別子を少なくとも指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-172">When writing events, you must at least specify either a message string or the resource identifier for a message string.</span></span> <span data-ttu-id="68165-173">その他のイベント プロパティは省略可能です。</span><span class="sxs-lookup"><span data-stu-id="68165-173">Other event properties are optional.</span></span> <span data-ttu-id="68165-174">省略可能なイベントの設定の例については、次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="68165-174">Examples of optional event settings include the following:</span></span>  
  
-   <span data-ttu-id="68165-175">設定することができます、<xref:System.Diagnostics.EventLogEntryType>エントリのイベント ビューアーを表示するアイコンを指定します。</span><span class="sxs-lookup"><span data-stu-id="68165-175">You can set the <xref:System.Diagnostics.EventLogEntryType> to specify the icon that the Event Viewer displays for the entry.</span></span>  
  
-   <span data-ttu-id="68165-176">アプリケーションは、イベントをフィルター処理するためのカテゴリを使用する場合は、イベントのカテゴリの識別子を指定できます。</span><span class="sxs-lookup"><span data-stu-id="68165-176">You can specify a category identifier for the event, if your application uses categories for filtering the events.</span></span>  
  
-   <span data-ttu-id="68165-177">特定のイベントに追加情報を関連付ける場合は、イベント エントリにバイナリ データをアタッチできます。</span><span class="sxs-lookup"><span data-stu-id="68165-177">You can attach binary data to your event entry if you want to associate additional information with a given event.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="68165-178">イベントのログ記録は、ディスク領域、プロセッサ時間、およびその他のシステム リソースを消費します。</span><span class="sxs-lookup"><span data-stu-id="68165-178">Event logging consumes disk space, processor time, and other system resources.</span></span> <span data-ttu-id="68165-179">重要な情報のみをログに重要です。</span><span class="sxs-lookup"><span data-stu-id="68165-179">It is important to log only essential information.</span></span> <span data-ttu-id="68165-180">エラー パスにイベント ログの呼び出しを配置するではなく、メインのコード パスでので、しないパフォーマンスに悪影響をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="68165-180">We recommend that you place event log calls in an error path, rather than in the main code path, so they don't adversely affect performance.</span></span>  
  
 <span data-ttu-id="68165-181">インスタンスの初期プロパティ値の一覧については<xref:System.Diagnostics.EventLog>を参照してください、<xref:System.Diagnostics.EventLog.%23ctor%2A>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="68165-181">For a list of initial property values for an instance of <xref:System.Diagnostics.EventLog>, see the <xref:System.Diagnostics.EventLog.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-182">次の例では、イベント ソースを作成する`MySource`が既に存在し、イベント ログにエントリを書き込みかどうか`MyNewLog`します。</span><span class="sxs-lookup"><span data-stu-id="68165-182">The following example creates the event source `MySource` if it doesn't already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-183">Windows Vista 以降、管理者としてこのアプリケーションを実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-183">Starting with Windows Vista, you must run this application as an administrator.</span></span>  
  
 [!code-cpp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.EventLogInstaller" />
    <altmember cref="T:System.Diagnostics.EventLogEntry" />
    <altmember cref="T:System.Diagnostics.EntryWrittenEventArgs" />
    <altmember cref="T:System.ServiceProcess.ServiceBase" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68165-184"><see cref="T:System.Diagnostics.EventLog" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="68165-184">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLog" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68165-185"><see cref="T:System.Diagnostics.EventLog" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="68165-185">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLog" /> class.</span></span> <span data-ttu-id="68165-186">このインスタンスは、ログとは関連付けられません。</span><span class="sxs-lookup"><span data-stu-id="68165-186">Does not associate the instance with any log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-187">呼び出しの前に<xref:System.Diagnostics.EventLog.WriteEntry%2A>、指定、<xref:System.Diagnostics.EventLog.Source%2A>のプロパティ、<xref:System.Diagnostics.EventLog>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="68165-187">Before calling <xref:System.Diagnostics.EventLog.WriteEntry%2A>, specify the <xref:System.Diagnostics.EventLog.Source%2A> property of the <xref:System.Diagnostics.EventLog> instance.</span></span> <span data-ttu-id="68165-188">読み取りのみを行う場合<xref:System.Diagnostics.EventLog.Entries%2A>ログからを指定できますのみ、<xref:System.Diagnostics.EventLog.Log%2A>と<xref:System.Diagnostics.EventLog.MachineName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="68165-188">If you are only reading <xref:System.Diagnostics.EventLog.Entries%2A> from the log, you can alternatively specify only the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-189">指定しない場合、 <xref:System.Diagnostics.EventLog.MachineName%2A>、ローカル コンピューター (".") と見なされます。</span><span class="sxs-lookup"><span data-stu-id="68165-189">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="68165-190">次の表のインスタンスの初期プロパティ値<xref:System.Diagnostics.EventLog>します。</span><span class="sxs-lookup"><span data-stu-id="68165-190">The following table shows initial property values for an instance of <xref:System.Diagnostics.EventLog>.</span></span>  
  
|<span data-ttu-id="68165-191">プロパティ</span><span class="sxs-lookup"><span data-stu-id="68165-191">Property</span></span>|<span data-ttu-id="68165-192">初期値</span><span class="sxs-lookup"><span data-stu-id="68165-192">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Diagnostics.EventLog.Source%2A>|<span data-ttu-id="68165-193">空の文字列 ("")。</span><span class="sxs-lookup"><span data-stu-id="68165-193">An empty string ("").</span></span>|  
|<xref:System.Diagnostics.EventLog.Log%2A>|<span data-ttu-id="68165-194">空の文字列 ("")。</span><span class="sxs-lookup"><span data-stu-id="68165-194">An empty string ("").</span></span>|  
|<xref:System.Diagnostics.EventLog.MachineName%2A>|<span data-ttu-id="68165-195">ローカル コンピューター (".")。</span><span class="sxs-lookup"><span data-stu-id="68165-195">The local computer (".").</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="68165-196">次の例では、ソース`MySource`が存在しない場合、イベント ログにエントリを書き込みます`MyNewLog`します。</span><span class="sxs-lookup"><span data-stu-id="68165-196">The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-197">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-197">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-198">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-198">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEntry" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLog (string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLog(System::String ^ logName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventLog : string -&gt; System.Diagnostics.EventLog" Usage="new System.Diagnostics.EventLog logName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="68165-199">ローカル コンピューター上のログの名前。</span><span class="sxs-lookup"><span data-stu-id="68165-199">The name of the log on the local computer.</span></span></param>
        <summary><span data-ttu-id="68165-200"><see cref="T:System.Diagnostics.EventLog" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="68165-200">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLog" /> class.</span></span> <span data-ttu-id="68165-201">ローカル コンピューター上のログにインスタンスを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="68165-201">Associates the instance with a log on the local computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-202">このオーバー ロードの設定、<xref:System.Diagnostics.EventLog.Log%2A>プロパティを`logName`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="68165-202">This overload sets the <xref:System.Diagnostics.EventLog.Log%2A> property to the `logName` parameter.</span></span> <span data-ttu-id="68165-203">呼び出しの前に<xref:System.Diagnostics.EventLog.WriteEntry%2A>、指定、<xref:System.Diagnostics.EventLog.Source%2A>のプロパティ、<xref:System.Diagnostics.EventLog>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="68165-203">Before calling <xref:System.Diagnostics.EventLog.WriteEntry%2A>, specify the <xref:System.Diagnostics.EventLog.Source%2A> property of the <xref:System.Diagnostics.EventLog> instance.</span></span> <span data-ttu-id="68165-204">読み取りのみを行う場合<xref:System.Diagnostics.EventLog.Entries%2A>ログからを指定できますのみ、<xref:System.Diagnostics.EventLog.Log%2A>と<xref:System.Diagnostics.EventLog.MachineName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="68165-204">If you are only reading <xref:System.Diagnostics.EventLog.Entries%2A> from the log, you can alternatively specify only the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-205">指定しない場合、 <xref:System.Diagnostics.EventLog.MachineName%2A>、ローカル コンピューター (".") と見なされます。</span><span class="sxs-lookup"><span data-stu-id="68165-205">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A>, the local computer (".") is assumed.</span></span> <span data-ttu-id="68165-206">このコンス トラクターのオーバー ロードを指定します、<xref:System.Diagnostics.EventLog.Log%2A>プロパティが変更できます読み取る前に、<xref:System.Diagnostics.EventLog.Entries%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="68165-206">This overload of the constructor specifies the <xref:System.Diagnostics.EventLog.Log%2A> property, but you can change this before reading the <xref:System.Diagnostics.EventLog.Entries%2A> property.</span></span>  
  
 <span data-ttu-id="68165-207">ソースで指定した場合、<xref:System.Diagnostics.EventLog.Source%2A>プロパティは、コンピューターでは、後続の呼び出しでは、他のソースから<xref:System.Diagnostics.EventLog.WriteEntry%2A>が既に存在しない場合は、指定の名前を持つログを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-207">If the source you specify in the <xref:System.Diagnostics.EventLog.Source%2A> property is unique from other sources on the computer, a subsequent call to <xref:System.Diagnostics.EventLog.WriteEntry%2A> creates a log with the specified name, if it does not already exist.</span></span>  
  
 <span data-ttu-id="68165-208">次の表のインスタンスの初期プロパティ値<xref:System.Diagnostics.EventLog>します。</span><span class="sxs-lookup"><span data-stu-id="68165-208">The following table shows initial property values for an instance of <xref:System.Diagnostics.EventLog>.</span></span>  
  
|<span data-ttu-id="68165-209">プロパティ</span><span class="sxs-lookup"><span data-stu-id="68165-209">Property</span></span>|<span data-ttu-id="68165-210">初期値</span><span class="sxs-lookup"><span data-stu-id="68165-210">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Diagnostics.EventLog.Source%2A>|<span data-ttu-id="68165-211">空の文字列 ("")。</span><span class="sxs-lookup"><span data-stu-id="68165-211">An empty string ("").</span></span>|  
|<xref:System.Diagnostics.EventLog.Log%2A>|<span data-ttu-id="68165-212">`logName` パラメーター。</span><span class="sxs-lookup"><span data-stu-id="68165-212">The `logName` parameter.</span></span>|  
|<xref:System.Diagnostics.EventLog.MachineName%2A>|<span data-ttu-id="68165-213">ローカル コンピューター (".")。</span><span class="sxs-lookup"><span data-stu-id="68165-213">The local computer (".").</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="68165-214">次の例では、ローカル コンピューターの"myNewLog"、イベント ログにエントリを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="68165-214">The following example reads entries in the event log, "myNewLog", on the local computer.</span></span>  
  
 [!code-cpp[Classic EventLog.EventLog1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.EventLog1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.EventLog1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.EventLog1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.EventLog1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.EventLog1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68165-215">ログ名が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68165-215">The log name is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-216">ログ名が無効です。</span><span class="sxs-lookup"><span data-stu-id="68165-216">The log name is invalid.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-217">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-217">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-218">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-218">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEntry" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLog (string logName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logName As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLog(System::String ^ logName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventLog : string * string -&gt; System.Diagnostics.EventLog" Usage="new System.Diagnostics.EventLog (logName, machineName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="68165-219">指定したコンピューター上のログの名前。</span><span class="sxs-lookup"><span data-stu-id="68165-219">The name of the log on the specified computer.</span></span></param>
        <param name="machineName"><span data-ttu-id="68165-220">ログが存在するコンピューター。</span><span class="sxs-lookup"><span data-stu-id="68165-220">The computer on which the log exists.</span></span></param>
        <summary><span data-ttu-id="68165-221"><see cref="T:System.Diagnostics.EventLog" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="68165-221">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLog" /> class.</span></span> <span data-ttu-id="68165-222">指定したコンピューター上のログにインスタンスを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="68165-222">Associates the instance with a log on the specified computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-223">このオーバー ロードの設定、<xref:System.Diagnostics.EventLog.Log%2A>プロパティを`logName`パラメーターおよび<xref:System.Diagnostics.EventLog.MachineName%2A>プロパティを`machineName`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="68165-223">This overload sets the <xref:System.Diagnostics.EventLog.Log%2A> property to the `logName` parameter and the <xref:System.Diagnostics.EventLog.MachineName%2A> property to the `machineName` parameter.</span></span> <span data-ttu-id="68165-224">呼び出しの前に<xref:System.Diagnostics.EventLog.WriteEntry%2A>、指定、<xref:System.Diagnostics.EventLog.Source%2A>のプロパティ、<xref:System.Diagnostics.EventLog>します。</span><span class="sxs-lookup"><span data-stu-id="68165-224">Before calling <xref:System.Diagnostics.EventLog.WriteEntry%2A>, specify the <xref:System.Diagnostics.EventLog.Source%2A> property of the <xref:System.Diagnostics.EventLog>.</span></span> <span data-ttu-id="68165-225">読み取りのみを行う場合<xref:System.Diagnostics.EventLog.Entries%2A>ログからを指定できますのみ、<xref:System.Diagnostics.EventLog.Log%2A>と<xref:System.Diagnostics.EventLog.MachineName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="68165-225">If you are only reading <xref:System.Diagnostics.EventLog.Entries%2A> from the log, you can alternatively specify only the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-226">このコンス トラクターのオーバー ロードを指定します、<xref:System.Diagnostics.EventLog.Log%2A>と<xref:System.Diagnostics.EventLog.MachineName%2A>が、プロパティは読み取り前にいずれかで変更できます、<xref:System.Diagnostics.EventLog.Entries%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="68165-226">This overload of the constructor specifies the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A> properties, but you can change either before reading the <xref:System.Diagnostics.EventLog.Entries%2A> property.</span></span>  
  
 <span data-ttu-id="68165-227">次の表のインスタンスの初期プロパティ値<xref:System.Diagnostics.EventLog>します。</span><span class="sxs-lookup"><span data-stu-id="68165-227">The following table shows initial property values for an instance of <xref:System.Diagnostics.EventLog>.</span></span>  
  
|<span data-ttu-id="68165-228">プロパティ</span><span class="sxs-lookup"><span data-stu-id="68165-228">Property</span></span>|<span data-ttu-id="68165-229">初期値</span><span class="sxs-lookup"><span data-stu-id="68165-229">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Diagnostics.EventLog.Source%2A>|<span data-ttu-id="68165-230">空の文字列 ("")。</span><span class="sxs-lookup"><span data-stu-id="68165-230">An empty string ("").</span></span>|  
|<xref:System.Diagnostics.EventLog.Log%2A>|<span data-ttu-id="68165-231">`logName` パラメーター。</span><span class="sxs-lookup"><span data-stu-id="68165-231">The `logName` parameter.</span></span>|  
|<xref:System.Diagnostics.EventLog.MachineName%2A>|<span data-ttu-id="68165-232">`machineName` パラメーター。</span><span class="sxs-lookup"><span data-stu-id="68165-232">The `machineName` parameter.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="68165-233">次の例では、コンピューター"myServer"上"myNewLog"、イベント ログにエントリを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="68165-233">The following example reads entries in the event log, "myNewLog", on the computer "myServer".</span></span>  
  
 [!code-cpp[Classic EventLog.EventLog2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.EventLog2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.EventLog2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.EventLog2 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.EventLog2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.EventLog2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68165-234">ログ名が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68165-234">The log name is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-235">ログ名が無効です。</span><span class="sxs-lookup"><span data-stu-id="68165-235">The log name is invalid.</span></span>  
  
 <span data-ttu-id="68165-236">または</span><span class="sxs-lookup"><span data-stu-id="68165-236">-or-</span></span>  
  
 <span data-ttu-id="68165-237">コンピューター名が無効です。</span><span class="sxs-lookup"><span data-stu-id="68165-237">The computer name is invalid.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-238">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-238">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-239">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-239">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEntry" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLog (string logName, string machineName, string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logName, string machineName, string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logName As String, machineName As String, source As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLog(System::String ^ logName, System::String ^ machineName, System::String ^ source);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventLog : string * string * string -&gt; System.Diagnostics.EventLog" Usage="new System.Diagnostics.EventLog (logName, machineName, source)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="68165-240">指定したコンピューター上のログの名前。</span><span class="sxs-lookup"><span data-stu-id="68165-240">The name of the log on the specified computer</span></span></param>
        <param name="machineName"><span data-ttu-id="68165-241">ログが存在するコンピューター。</span><span class="sxs-lookup"><span data-stu-id="68165-241">The computer on which the log exists.</span></span></param>
        <param name="source"><span data-ttu-id="68165-242">イベント ログ エントリのソース。</span><span class="sxs-lookup"><span data-stu-id="68165-242">The source of event log entries.</span></span></param>
        <summary><span data-ttu-id="68165-243"><see cref="T:System.Diagnostics.EventLog" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="68165-243">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLog" /> class.</span></span> <span data-ttu-id="68165-244">指定したコンピューター上のログにインスタンスを関連付け、指定したソースを作成するか、または <see cref="T:System.Diagnostics.EventLog" /> に割り当てます。</span><span class="sxs-lookup"><span data-stu-id="68165-244">Associates the instance with a log on the specified computer and creates or assigns the specified source to the <see cref="T:System.Diagnostics.EventLog" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-245">このコンス トラクターの設定、<xref:System.Diagnostics.EventLog.Log%2A>プロパティを`logName`パラメーター、<xref:System.Diagnostics.EventLog.MachineName%2A>プロパティを`machineName`パラメーター、および<xref:System.Diagnostics.EventLog.Source%2A>プロパティを`source`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="68165-245">This constructor sets the <xref:System.Diagnostics.EventLog.Log%2A> property to the `logName` parameter, the <xref:System.Diagnostics.EventLog.MachineName%2A> property to the `machineName` parameter, and the <xref:System.Diagnostics.EventLog.Source%2A> property to the `source` parameter.</span></span> <span data-ttu-id="68165-246"><xref:System.Diagnostics.EventLog.Source%2A>イベント ログに書き込むときに、プロパティが必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-246">The <xref:System.Diagnostics.EventLog.Source%2A> property is required when writing to an event log.</span></span> <span data-ttu-id="68165-247">ただし、イベント ログのみからの読み取りのみの場合、<xref:System.Diagnostics.EventLog.Log%2A>と<xref:System.Diagnostics.EventLog.MachineName%2A>である限り、サーバー上のイベント ログでは、既に関連付けられているソースを持つ) は、プロパティが必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-247">However, if you are only reading from an event log, only the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A> properties are required (as long as the event log on the server has a source already associated with it).</span></span> <span data-ttu-id="68165-248">イベント ログからの読み取りのみの場合は、コンス トラクターの別のオーバー ロードがありますで十分です。</span><span class="sxs-lookup"><span data-stu-id="68165-248">If you are only reading from the event log, another overload of the constructor might suffice.</span></span>  
  
 <span data-ttu-id="68165-249">次の表のインスタンスの初期プロパティ値<xref:System.Diagnostics.EventLog>します。</span><span class="sxs-lookup"><span data-stu-id="68165-249">The following table shows initial property values for an instance of <xref:System.Diagnostics.EventLog>.</span></span>  
  
|<span data-ttu-id="68165-250">プロパティ</span><span class="sxs-lookup"><span data-stu-id="68165-250">Property</span></span>|<span data-ttu-id="68165-251">初期値</span><span class="sxs-lookup"><span data-stu-id="68165-251">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Diagnostics.EventLog.Source%2A>|<span data-ttu-id="68165-252">`source` パラメーター。</span><span class="sxs-lookup"><span data-stu-id="68165-252">The `source` parameter.</span></span>|  
|<xref:System.Diagnostics.EventLog.Log%2A>|<span data-ttu-id="68165-253">`logName` パラメーター。</span><span class="sxs-lookup"><span data-stu-id="68165-253">The `logName` parameter.</span></span>|  
|<xref:System.Diagnostics.EventLog.MachineName%2A>|<span data-ttu-id="68165-254">`machineName` パラメーター。</span><span class="sxs-lookup"><span data-stu-id="68165-254">The `machineName` parameter.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="68165-255">次の例では、ソース""を使用して、ローカル コンピューターで"MyNewLog"イベント ログにエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-255">The following example writes an entry to an event log, "MyNewLog", on the local computer, using the source "MySource".</span></span>  
  
 [!code-cpp[Classic EventLog.EventLog3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.EventLog3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.EventLog3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.EventLog3 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.EventLog3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.EventLog3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68165-256">ログ名が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68165-256">The log name is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-257">ログ名が無効です。</span><span class="sxs-lookup"><span data-stu-id="68165-257">The log name is invalid.</span></span>  
  
 <span data-ttu-id="68165-258">または</span><span class="sxs-lookup"><span data-stu-id="68165-258">-or-</span></span>  
  
 <span data-ttu-id="68165-259">コンピューター名が無効です。</span><span class="sxs-lookup"><span data-stu-id="68165-259">The computer name is invalid.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-260">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-260">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-261">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-261">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEntry" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="eventLog.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68165-262">フォームまたは別のコンポーネントで使用される <see cref="T:System.Diagnostics.EventLog" /> の初期化を開始します。</span><span class="sxs-lookup"><span data-stu-id="68165-262">Begins the initialization of an <see cref="T:System.Diagnostics.EventLog" /> used on a form or used by another component.</span></span> <span data-ttu-id="68165-263">初期化は実行時に発生します。</span><span class="sxs-lookup"><span data-stu-id="68165-263">The initialization occurs at runtime.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-264">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]デザイン環境では、このメソッドを使用して、フォームまたは別のコンポーネントで使用されるコンポーネントの初期化を開始します。</span><span class="sxs-lookup"><span data-stu-id="68165-264">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to start the initialization of a component used on a form or by another component.</span></span> <span data-ttu-id="68165-265"><xref:System.Diagnostics.EventLog.EndInit%2A>メソッドは、初期化を終了します。</span><span class="sxs-lookup"><span data-stu-id="68165-265">The <xref:System.Diagnostics.EventLog.EndInit%2A> method ends the initialization.</span></span> <span data-ttu-id="68165-266">使用して、<xref:System.Diagnostics.EventLog.BeginInit%2A>と<xref:System.Diagnostics.EventLog.EndInit%2A>メソッドのコントロールは完全に初期化される前に使用を禁止します。</span><span class="sxs-lookup"><span data-stu-id="68165-266">Using the <xref:System.Diagnostics.EventLog.BeginInit%2A> and <xref:System.Diagnostics.EventLog.EndInit%2A> methods prevent the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-267"><see cref="T:System.Diagnostics.EventLog" /> は、既に初期化されています。</span><span class="sxs-lookup"><span data-stu-id="68165-267"><see cref="T:System.Diagnostics.EventLog" /> is already initialized.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-268">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-268">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-269">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-269">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.EndInit" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="eventLog.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68165-270">イベント ログからすべてのエントリを削除します。</span><span class="sxs-lookup"><span data-stu-id="68165-270">Removes all entries from the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-271">イベント ログには、格納できるエントリの数を決定する最大サイズが設定されます。</span><span class="sxs-lookup"><span data-stu-id="68165-271">Event logs are set with a maximum size that determines how many entries they can contain.</span></span> <span data-ttu-id="68165-272">イベント ログがいっぱいになった場合は新しいイベント情報の記録を停止または以前のエントリが上書きします。</span><span class="sxs-lookup"><span data-stu-id="68165-272">When an event log is full, it stops recording new event information or begins to overwrite earlier entries.</span></span> <span data-ttu-id="68165-273">イベントの記録を停止する場合は、既存のエントリのログを消去し、イベントの記録をもう一度起動することをこのメソッドを使用できます。</span><span class="sxs-lookup"><span data-stu-id="68165-273">If event recording stops, you can use this method to clear the log of existing entries and allow it to start recording events again.</span></span> <span data-ttu-id="68165-274">イベント ログ エントリを消去するログが存在するコンピューターに管理者のアクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-274">You must have administrator permissions to the computer on which the log resides to clear event log entries.</span></span>  
  
 <span data-ttu-id="68165-275"><xref:System.Diagnostics.EventLog.Clear%2A> イベント ログを閉じて新しいを取得しますが、ハンドルを読み書きイベント ハンドルを解放します。 イベント ログを再度開かれます。</span><span class="sxs-lookup"><span data-stu-id="68165-275"><xref:System.Diagnostics.EventLog.Clear%2A> closes the event log, releases the event handles, retrieves new read and write handles, and reopens the event log.</span></span> <span data-ttu-id="68165-276">既存のイベントと共にメソッド呼び出しの後に受信したイベントはオフにします。</span><span class="sxs-lookup"><span data-stu-id="68165-276">Events received after the call to the method are not cleared along with the existing events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-277">次の例では、イベント ログを消去します。</span><span class="sxs-lookup"><span data-stu-id="68165-277">The following example clears an event log.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="68165-278">アプリケーション、システム、セキュリティ、およびその他の非カスタム ログは、重要な情報を含めることができますので、このコード例を実行する前にカスタム ログを指定することを確認します。</span><span class="sxs-lookup"><span data-stu-id="68165-278">Because Application, System, Security, and other non-custom logs can contain crucial information; be sure to specify a custom log before executing this example code.</span></span> <span data-ttu-id="68165-279">この例では、カスタム ログを削除します。`myNewLog`します。</span><span class="sxs-lookup"><span data-stu-id="68165-279">This example deletes the custom log `myNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="68165-280">イベント ログが正常に消去されませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-280">The event log was not cleared successfully.</span></span>  
  
 <span data-ttu-id="68165-281">または</span><span class="sxs-lookup"><span data-stu-id="68165-281">-or-</span></span>  
  
 <span data-ttu-id="68165-282">ログを開くことができません。</span><span class="sxs-lookup"><span data-stu-id="68165-282">The log cannot be opened.</span></span> <span data-ttu-id="68165-283">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68165-283">A Windows error code is not available.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-284"><see cref="P:System.Diagnostics.EventLog.Log" /> プロパティの値が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="68165-284">A value is not specified for the <see cref="P:System.Diagnostics.EventLog.Log" /> property.</span></span> <span data-ttu-id="68165-285">ログ名が空の文字列でないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="68165-285">Make sure the log name is not an empty string.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-286">ログが存在しません。</span><span class="sxs-lookup"><span data-stu-id="68165-286">The log does not exist.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-287">コンピューターのイベント ログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="68165-287">for administering event log information on the computer.</span></span> <span data-ttu-id="68165-288">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="68165-288">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.Close" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="eventLog.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68165-289">イベント ログを閉じ、読み取りハンドルと書き込みハンドルを解放します。</span><span class="sxs-lookup"><span data-stu-id="68165-289">Closes the event log and releases read and write handles.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-290"><xref:System.Diagnostics.EventLog.Close%2A>メソッドが呼び出されるプロテクトによって<xref:System.ComponentModel.Component.Dispose%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68165-290">The <xref:System.Diagnostics.EventLog.Close%2A> method is called by the protected <xref:System.ComponentModel.Component.Dispose%2A> method.</span></span> <span data-ttu-id="68165-291">呼び出す必要はありません<xref:System.Diagnostics.EventLog.Close%2A>呼び出す前に<xref:System.ComponentModel.Component.Dispose%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-291">You do not need to invoke <xref:System.Diagnostics.EventLog.Close%2A> before calling <xref:System.ComponentModel.Component.Dispose%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="68165-292">イベント ログの読み取りハンドルまたは書き込みハンドルが解放されませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-292">The event log's read handle or write handle was not released successfully.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-293">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-293">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-294">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-294">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Clear" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEventSource">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68165-295">システム上の特定のログにイベント情報を書き込むことができるようにアプリケーションを設定します。</span><span class="sxs-lookup"><span data-stu-id="68165-295">Establishes an application as able to write event information to a particular log on the system.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEventSource">
      <MemberSignature Language="C#" Value="public static void CreateEventSource (System.Diagnostics.EventSourceCreationData sourceData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateEventSource(class System.Diagnostics.EventSourceCreationData sourceData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.CreateEventSource(System.Diagnostics.EventSourceCreationData)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateEventSource (sourceData As EventSourceCreationData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateEventSource(System::Diagnostics::EventSourceCreationData ^ sourceData);" />
      <MemberSignature Language="F#" Value="static member CreateEventSource : System.Diagnostics.EventSourceCreationData -&gt; unit" Usage="System.Diagnostics.EventLog.CreateEventSource sourceData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceData" Type="System.Diagnostics.EventSourceCreationData" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sourceData"><span data-ttu-id="68165-296">イベント ソースおよび対象のイベント ログの構成プロパティ。</span><span class="sxs-lookup"><span data-stu-id="68165-296">The configuration properties for the event source and its target event log.</span></span></param>
        <summary><span data-ttu-id="68165-297">イベント ソースおよび対応するイベント ログに指定された構成プロパティを使用して、ローカライズされたイベント メッセージを書き込むための有効なイベント ソースを設定します。</span><span class="sxs-lookup"><span data-stu-id="68165-297">Establishes a valid event source for writing localized event messages, using the specified configuration properties for the event source and the corresponding event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-298">このオーバー ロードを使用すると、ローカル コンピューターまたはリモート コンピューター上のイベント ログにエントリを書き込むための新しいソースを構成できます。</span><span class="sxs-lookup"><span data-stu-id="68165-298">Use this overload to configure a new source for writing entries to an event log on the local computer or a remote computer.</span></span> <span data-ttu-id="68165-299">このメソッドを使用すると、イベント ログから読み取る必要はありません。</span><span class="sxs-lookup"><span data-stu-id="68165-299">It is not necessary to use this method to read from an event log.</span></span>  
  
 <span data-ttu-id="68165-300"><xref:System.Diagnostics.EventLog.CreateEventSource%2A>メソッドは、入力を使用して`sourceData` <xref:System.Diagnostics.EventSourceCreationData.Source%2A>、<xref:System.Diagnostics.EventSourceCreationData.LogName%2A>と<xref:System.Diagnostics.EventSourceCreationData.MachineName%2A>新しいソースとその関連のイベント ログのターゲット コンピューター上のレジストリ値を作成するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="68165-300">The <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method uses the input `sourceData`<xref:System.Diagnostics.EventSourceCreationData.Source%2A>, <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> and <xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> properties to create registry values on the target computer for the new source and its associated event log.</span></span> <span data-ttu-id="68165-301">新しいソース名には、既存のソース名またはターゲット コンピューター上の既存のイベント ログ名を一致ことはできません。</span><span class="sxs-lookup"><span data-stu-id="68165-301">A new source name cannot match an existing source name or an existing event log name on the target computer.</span></span> <span data-ttu-id="68165-302">場合、<xref:System.Diagnostics.EventSourceCreationData.LogName%2A>プロパティが設定されていない、アプリケーション イベント ログのソースが登録されています。</span><span class="sxs-lookup"><span data-stu-id="68165-302">If the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> property is not set, the source is registered for the Application event log.</span></span> <span data-ttu-id="68165-303">場合、<xref:System.Diagnostics.EventSourceCreationData.MachineName%2A>が、ソースをローカル コンピューターの登録が設定されています。</span><span class="sxs-lookup"><span data-stu-id="68165-303">If the <xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> is not set, the source is registered on the local computer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-304">Windows Vista 以降のイベント ソースまたは Windows Server 2003 を作成、管理特権が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-304">To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.</span></span>  
>   
>  <span data-ttu-id="68165-305">この要件の理由では、セキュリティを含むすべてのイベント ログを検索して、イベント ソースが一意かどうかを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-305">The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</span></span> <span data-ttu-id="68165-306">Windows Vista 以降、ユーザー権限がありません。 セキュリティ ログにアクセスするにはそのため、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="68165-306">Starting with Windows Vista, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.</span></span>  
>   
>  <span data-ttu-id="68165-307">Windows Vista 以降、ユーザー アカウント制御 (UAC) は、ユーザーの権限を決定します。</span><span class="sxs-lookup"><span data-stu-id="68165-307">Starting with Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="68165-308">ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="68165-308">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="68165-309">既定では、ユーザーは標準ユーザー ロールに所属します。</span><span class="sxs-lookup"><span data-stu-id="68165-309">By default, you are in the standard user role.</span></span> <span data-ttu-id="68165-310">セキュリティ ログにアクセスするコードを実行するには標準ユーザーから管理者に、特権を昇格する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-310">To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="68165-311">この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。</span><span class="sxs-lookup"><span data-stu-id="68165-311">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="68165-312">使用<xref:System.Diagnostics.EventLog.WriteEvent%2A>と<xref:System.Diagnostics.EventLog.WriteEntry%2A>イベント ログにイベントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-312">Use <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> to write events to an event log.</span></span> <span data-ttu-id="68165-313">イベントを書き込むイベント ソースを指定する必要があります。作成し、ソースと最初のエントリを書き込む前に、イベント ソースを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-313">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="68165-314">アプリケーションのインストール中に新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-314">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="68165-315">これにより、登録済みのイベント ソースの一覧とその構成を更新するオペレーティング システムまでの時間です。</span><span class="sxs-lookup"><span data-stu-id="68165-315">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="68165-316">オペレーティング システムでは、イベントのソースの一覧は更新されていない場合は、書き込み操作は失敗、新しいソースを持つイベントを記述しようとしました。</span><span class="sxs-lookup"><span data-stu-id="68165-316">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="68165-317">使用して新しいソースを構成することができます、 <xref:System.Diagnostics.EventLogInstaller>、またはを使用して、<xref:System.Diagnostics.EventLog.CreateEventSource%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68165-317">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="68165-318">新しいイベント ソースを作成するコンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-318">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="68165-319">既存のイベント ログまたは新しいイベント ログのイベント ソースを作成することができます。</span><span class="sxs-lookup"><span data-stu-id="68165-319">You can create an event source for an existing event log or a new event log.</span></span> <span data-ttu-id="68165-320">新しいイベント ログの新しいソースを作成するときに、システムがそのログのソースを登録しますが、最初のエントリが書き込まれるまで、ログは作成されません。</span><span class="sxs-lookup"><span data-stu-id="68165-320">When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="68165-321">オペレーティング システムは、イベント ログをファイルとして格納します。</span><span class="sxs-lookup"><span data-stu-id="68165-321">The operating system stores event logs as files.</span></span> <span data-ttu-id="68165-322">使用すると<xref:System.Diagnostics.EventLogInstaller>または<xref:System.Diagnostics.EventLog.CreateEventSource%2A>指定したコンピューター上の %SystemRoot%\System32\Config ディレクトリに新しいイベント ログを作成する、関連付けられたファイルが格納されています。</span><span class="sxs-lookup"><span data-stu-id="68165-322">When you use <xref:System.Diagnostics.EventLogInstaller> or <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</span></span> <span data-ttu-id="68165-323">最初の 8 文字を付加して、ファイル名が設定されて、 <xref:System.Diagnostics.EventLog.Log%2A> ".evt"ファイル名拡張子を持つプロパティです。</span><span class="sxs-lookup"><span data-stu-id="68165-323">The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventLog.Log%2A> property with the ".evt" file name extension.</span></span>  
  
 <span data-ttu-id="68165-324">同時に、各ソースは 1 つだけのイベント ログに書き込むだけできます。ただし、アプリケーションでは、複数のソースを使用して、複数のイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-324">Each source can only write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="68165-325">たとえば、アプリケーションでは、別のイベント ログまたは別のリソース ファイル用に構成された複数のソースを必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-325">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span>  
  
 <span data-ttu-id="68165-326">イベント ソースは、イベント カテゴリ、メッセージ文字列のローカライズされたリソース ファイルを登録できます。</span><span class="sxs-lookup"><span data-stu-id="68165-326">You can register the event source with localized resource file(s) for your event category and message strings.</span></span> <span data-ttu-id="68165-327">アプリケーションでは、実際の文字列を指定するのではなく、リソースの識別子を使用してイベント ログ エントリを書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="68165-327">Your application can write event log entries using resource identifiers, rather than specifying the actual string.</span></span> <span data-ttu-id="68165-328">イベント ビューアーでは、リソース識別子を使用して、検索し、現在の言語設定に基づいてローカライズされたリソース ファイルから、対応する文字列を表示します。</span><span class="sxs-lookup"><span data-stu-id="68165-328">The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings.</span></span> <span data-ttu-id="68165-329">イベント カテゴリ、メッセージ、およびパラメーターの挿入文字列に個別のファイルを登録する、または 3 つすべての種類の文字列に同じリソース ファイルを登録することができます。</span><span class="sxs-lookup"><span data-stu-id="68165-329">You can register a separate file for event categories, messages and parameter insertion strings, or you can register the same resource file for all three types of strings.</span></span> <span data-ttu-id="68165-330">使用して、 <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>、 <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>、 <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>、および<xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A>ローカライズされたエントリをイベント ログに書き込むソースを構成するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="68165-330">Use the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>, <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>, <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>, and <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> properties to configure the source to write localized entries to the event log.</span></span> <span data-ttu-id="68165-331">アプリケーションがイベント ログに直接文字列値を書き込む場合は、これらのプロパティを設定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="68165-331">If your application writes strings values directly to the event log, you do not need to set these properties.</span></span>  
  
 <span data-ttu-id="68165-332">ソースは、ローカライズされたエントリを書き込むか、または直接の文字列を書き込むように構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-332">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="68165-333">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2 つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-333">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="68165-334">たとえば、リソース ファイルでは、1 つのソースを構成およびでは、そのソースを使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッドをイベント ログのリソース識別子を使用してエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-334">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="68165-335">リソースのファイルがない場合、別のソースを作成しでそのソースを使用し、<xref:System.Diagnostics.EventLog.WriteEntry%2A>そのソースを使用して、イベント ログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-335">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
 <span data-ttu-id="68165-336">既存のソースの構成の詳細を変更するには、ソースを削除し、新しい構成を使用して作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-336">To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</span></span> <span data-ttu-id="68165-337">他のアプリケーションやコンポーネントは、既存のソースを使用する場合は、既存のソースを削除するのではなく、更新された構成で新しいソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-337">If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-338">場合は、ソースは、イベント ログの構成し、別のイベント ログの再設定、変更を反映するには、コンピューターを再起動する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-338">If a source is configured for an event log, and you reconfigure it for another event log, you must restart the computer for the changes to take effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-339">次の例は、イベント ソースが名前付きかどうかを判断`SampleApplicationSource`ローカル コンピューターに登録します。</span><span class="sxs-lookup"><span data-stu-id="68165-339">The following example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="68165-340">イベント ソースが存在しない場合、例は、ソースのメッセージ リソース ファイルを設定し、新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-340">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="68165-341">最後に、リソース識別子の値を使用して、イベント ログのローカライズされた表示名の設定例では、`DisplayNameMsgId`とリソース ファイルのパスで`messageFile`します。</span><span class="sxs-lookup"><span data-stu-id="68165-341">Finally, the example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="68165-342">EventLogMsgs.dll リソース ライブラリに組み込まれている次のメッセージのテキスト ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="68165-342">The example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="68165-343">メッセージのテキスト ファイルは、メッセージ リソース ファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="68165-343">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="68165-344">メッセージのテキスト ファイルでは、リソース識別子とカテゴリ、イベント メッセージ、およびパラメーターの挿入文字列のテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="68165-344">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span> <span data-ttu-id="68165-345">具体的には、イベント ログのローカライズされた名前のリソース識別子 5001 が定義されます。</span><span class="sxs-lookup"><span data-stu-id="68165-345">Specifically, resource identifier 5001 is defined for the localized name of the event log.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-346"><paramref name="sourceData" /> で指定されたコンピューター名が無効です。</span><span class="sxs-lookup"><span data-stu-id="68165-346">The computer name specified in <paramref name="sourceData" /> is not valid.</span></span>  
  
<span data-ttu-id="68165-347">または</span><span class="sxs-lookup"><span data-stu-id="68165-347">-or-</span></span> 
<span data-ttu-id="68165-348"><paramref name="sourceData" /> で指定されたソース名が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68165-348">The source name specified in <paramref name="sourceData" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="68165-349">または</span><span class="sxs-lookup"><span data-stu-id="68165-349">-or-</span></span> 
<span data-ttu-id="68165-350"><paramref name="sourceData" /> で指定されたログ名が無効です。</span><span class="sxs-lookup"><span data-stu-id="68165-350">The log name specified in <paramref name="sourceData" /> is not valid.</span></span> <span data-ttu-id="68165-351">イベント ログ名は、印字可能な文字で構成されている必要があります。文字 '\*'、'?'、または '\\' を含めないでください。</span><span class="sxs-lookup"><span data-stu-id="68165-351">Event log names must consist of printable characters and cannot include the characters '\*', '?', or '\\'.</span></span>  
  
<span data-ttu-id="68165-352">または</span><span class="sxs-lookup"><span data-stu-id="68165-352">-or-</span></span> 
<span data-ttu-id="68165-353"><paramref name="sourceData" /> で指定されたログ名は、ユーザー ログの作成には無効です。</span><span class="sxs-lookup"><span data-stu-id="68165-353">The log name specified in <paramref name="sourceData" /> is not valid for user log creation.</span></span> <span data-ttu-id="68165-354">イベント ログ名 AppEvent、SysEvent、および SecEvent は、システムで使用するために予約されています。</span><span class="sxs-lookup"><span data-stu-id="68165-354">The Event log names AppEvent, SysEvent, and SecEvent are reserved for system use.</span></span>  
  
<span data-ttu-id="68165-355">または</span><span class="sxs-lookup"><span data-stu-id="68165-355">-or-</span></span> 
<span data-ttu-id="68165-356">ログ名が既存のイベント ソース名に一致します。</span><span class="sxs-lookup"><span data-stu-id="68165-356">The log name matches an existing event source name.</span></span>  
  
<span data-ttu-id="68165-357">または</span><span class="sxs-lookup"><span data-stu-id="68165-357">-or-</span></span> 
<span data-ttu-id="68165-358"><paramref name="sourceData" /> で指定されたソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="68165-358">The source name specified in <paramref name="sourceData" /> results in a registry key path longer than 254 characters.</span></span>  
  
<span data-ttu-id="68165-359">または</span><span class="sxs-lookup"><span data-stu-id="68165-359">-or-</span></span> 
<span data-ttu-id="68165-360"><paramref name="sourceData" /> で指定されたログ名の最初の 8 文字が一意ではありません。</span><span class="sxs-lookup"><span data-stu-id="68165-360">The first 8 characters of the log name specified in <paramref name="sourceData" /> are not unique.</span></span>  
  
<span data-ttu-id="68165-361">または</span><span class="sxs-lookup"><span data-stu-id="68165-361">-or-</span></span> 
<span data-ttu-id="68165-362"><paramref name="sourceData" /> で指定されたソース名は既に登録されています。</span><span class="sxs-lookup"><span data-stu-id="68165-362">The source name specified in <paramref name="sourceData" /> is already registered.</span></span>  
  
<span data-ttu-id="68165-363">または</span><span class="sxs-lookup"><span data-stu-id="68165-363">-or-</span></span> 
<span data-ttu-id="68165-364"><paramref name="sourceData" /> で指定されたソース名が既存のイベント ログ名に一致しません。</span><span class="sxs-lookup"><span data-stu-id="68165-364">The source name specified in <paramref name="sourceData" /> matches an existing event log name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-365">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-365">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68165-366"><paramref name="sourceData" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="68165-366"><paramref name="sourceData" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-367">コンピューターのイベント ログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="68165-367">for administering event log information on the computer.</span></span> <span data-ttu-id="68165-368">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="68165-368">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventSourceCreationData" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="T:System.Diagnostics.EventLogInstaller" />
      </Docs>
    </Member>
    <Member MemberName="CreateEventSource">
      <MemberSignature Language="C#" Value="public static void CreateEventSource (string source, string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateEventSource(string source, string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateEventSource (source As String, logName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateEventSource(System::String ^ source, System::String ^ logName);" />
      <MemberSignature Language="F#" Value="static member CreateEventSource : string * string -&gt; unit" Usage="System.Diagnostics.EventLog.CreateEventSource (source, logName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="68165-369">アプリケーションをローカル コンピューター上に登録するときに使用するソース名。</span><span class="sxs-lookup"><span data-stu-id="68165-369">The source name by which the application is registered on the local computer.</span></span></param>
        <param name="logName"><span data-ttu-id="68165-370">ソースのエントリが書き込まれるログの名前。</span><span class="sxs-lookup"><span data-stu-id="68165-370">The name of the log the source's entries are written to.</span></span> <span data-ttu-id="68165-371">指定できる値は、"Application"、"System"、またはカスタム イベント ログです。</span><span class="sxs-lookup"><span data-stu-id="68165-371">Possible values include Application, System, or a custom event log.</span></span></param>
        <summary><span data-ttu-id="68165-372">ローカル コンピューター上のログにエントリを書き込むための有効なイベント ソースとして指定したソース名を設定します。</span><span class="sxs-lookup"><span data-stu-id="68165-372">Establishes the specified source name as a valid event source for writing entries to a log on the local computer.</span></span> <span data-ttu-id="68165-373">また、このメソッドによってローカル コンピューター上に新しいカスタム ログを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="68165-373">This method can also create a new custom log on the local computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-374">カスタム ログを作成または作成し、登録するこのオーバー ロードを使用して、<xref:System.Diagnostics.EventLog.Source%2A>ローカル コンピューターの既存のログ。</span><span class="sxs-lookup"><span data-stu-id="68165-374">Use this overload to create a custom log or to create and register a <xref:System.Diagnostics.EventLog.Source%2A> to an existing log on the local computer.</span></span>  
  
 <span data-ttu-id="68165-375">場合`logName`は`null`または空の文字列 ("") を呼び出すと<xref:System.Diagnostics.EventLog.CreateEventSource%2A>ログの既定値は、アプリケーション ログ。</span><span class="sxs-lookup"><span data-stu-id="68165-375">If `logName` is `null` or an empty string ("") when you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A>, the log defaults to the Application log.</span></span> <span data-ttu-id="68165-376">システムがカスタム ログを作成し、として、アプリケーションを登録します。 ローカル コンピューターのログが存在しない場合、<xref:System.Diagnostics.EventLog.Source%2A>そのログ。</span><span class="sxs-lookup"><span data-stu-id="68165-376">If the log does not exist on the local computer, the system creates a custom log and registers your application as a <xref:System.Diagnostics.EventLog.Source%2A> for that log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-377">Windows Vista 以降のイベント ソースまたは Windows Server 2003 を作成、管理特権が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-377">To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.</span></span>  
>   
>  <span data-ttu-id="68165-378">この要件の理由では、セキュリティを含むすべてのイベント ログを検索して、イベント ソースが一意かどうかを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-378">The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</span></span> <span data-ttu-id="68165-379">Windows Vista 以降、ユーザー権限がありません。 セキュリティ ログにアクセスするにはそのため、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="68165-379">Starting with Windows Vista, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.</span></span>  
>   
>  <span data-ttu-id="68165-380">Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。</span><span class="sxs-lookup"><span data-stu-id="68165-380">In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="68165-381">ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="68165-381">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="68165-382">既定では、ユーザーは標準ユーザー ロールに所属します。</span><span class="sxs-lookup"><span data-stu-id="68165-382">By default, you are in the standard user role.</span></span> <span data-ttu-id="68165-383">セキュリティ ログにアクセスするコードを実行するには標準ユーザーから管理者に、特権を昇格する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-383">To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="68165-384">この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。</span><span class="sxs-lookup"><span data-stu-id="68165-384">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="68165-385">のみ、イベント ログに書き込みを行う場合は、イベント ソースを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-385">You only need to create an event source if you are writing to the event log.</span></span> <span data-ttu-id="68165-386">イベント ログにエントリを書き込む前に、有効なイベントのソースとして、イベント ログにイベント ソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-386">Before writing an entry to an event log, you must register the event source with the event log as a valid source of events.</span></span> <span data-ttu-id="68165-387">ログ エントリを記述するときに、システムを使用して、<xref:System.Diagnostics.EventLog.Source%2A>エントリを配置するための適切なログを検索します。</span><span class="sxs-lookup"><span data-stu-id="68165-387">When you write a log entry, the system uses the <xref:System.Diagnostics.EventLog.Source%2A> to find the appropriate log in which to place your entry.</span></span> <span data-ttu-id="68165-388">かどうか、イベント ログを読んでいるを指定するか、 <xref:System.Diagnostics.EventLog.Source%2A>、または<xref:System.Diagnostics.EventLog.Log%2A>と<xref:System.Diagnostics.EventLog.MachineName%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-388">If you are reading the event log, you can either specify the <xref:System.Diagnostics.EventLog.Source%2A>, or a <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-389">指定する必要はありません、<xref:System.Diagnostics.EventLog.MachineName%2A>ローカル コンピューター上のログに接続している場合。</span><span class="sxs-lookup"><span data-stu-id="68165-389">You are not required to specify the <xref:System.Diagnostics.EventLog.MachineName%2A> if you are connecting to a log on the local computer.</span></span> <span data-ttu-id="68165-390">指定しない場合、<xref:System.Diagnostics.EventLog.MachineName%2A>を読み取るときに、ログから、ローカル コンピューター (".") と見なされます。</span><span class="sxs-lookup"><span data-stu-id="68165-390">If you do not specify the <xref:System.Diagnostics.EventLog.MachineName%2A> when reading from a log, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="68165-391">使用<xref:System.Diagnostics.EventLog.WriteEvent%2A>と<xref:System.Diagnostics.EventLog.WriteEntry%2A>イベント ログにイベントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-391">Use <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> to write events to an event log.</span></span> <span data-ttu-id="68165-392">イベントを書き込むイベント ソースを指定する必要があります。作成し、ソースと最初のエントリを書き込む前に、イベント ソースを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-392">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="68165-393">アプリケーションのインストール中に新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-393">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="68165-394">これにより、登録済みのイベント ソースの一覧とその構成を更新するオペレーティング システムまでの時間です。</span><span class="sxs-lookup"><span data-stu-id="68165-394">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="68165-395">オペレーティング システムでは、イベントのソースの一覧は更新されていない場合は、書き込み操作は失敗、新しいソースを持つイベントを記述しようとしました。</span><span class="sxs-lookup"><span data-stu-id="68165-395">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="68165-396">使用して新しいソースを構成することができます、 <xref:System.Diagnostics.EventLogInstaller>、またはを使用して、<xref:System.Diagnostics.EventLog.CreateEventSource%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68165-396">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="68165-397">新しいイベント ソースを作成するコンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-397">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="68165-398">既存のイベント ログまたは新しいイベント ログのイベント ソースを作成することができます。</span><span class="sxs-lookup"><span data-stu-id="68165-398">You can create an event source for an existing event log or a new event log.</span></span> <span data-ttu-id="68165-399">新しいイベント ログの新しいソースを作成するときに、システムがそのログのソースを登録しますが、最初のエントリが書き込まれるまで、ログは作成されません。</span><span class="sxs-lookup"><span data-stu-id="68165-399">When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="68165-400">オペレーティング システムは、イベント ログをファイルとして格納します。</span><span class="sxs-lookup"><span data-stu-id="68165-400">The operating system stores event logs as files.</span></span> <span data-ttu-id="68165-401">使用すると<xref:System.Diagnostics.EventLogInstaller>または<xref:System.Diagnostics.EventLog.CreateEventSource%2A>指定したコンピューター上の %SystemRoot%\System32\Config ディレクトリに新しいイベント ログを作成する、関連付けられたファイルが格納されています。</span><span class="sxs-lookup"><span data-stu-id="68165-401">When you use <xref:System.Diagnostics.EventLogInstaller> or <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</span></span> <span data-ttu-id="68165-402">最初の 8 文字を付加して、ファイル名が設定されて、 <xref:System.Diagnostics.EventLog.Log%2A> ".evt"ファイル名拡張子を持つプロパティです。</span><span class="sxs-lookup"><span data-stu-id="68165-402">The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventLog.Log%2A> property with the ".evt" file name extension.</span></span>  
  
 <span data-ttu-id="68165-403">ソースは、ローカル コンピューター上で一意である必要があります。新しいソース名には、既存のソース名または既存のイベント ログ名を一致ことはできません。</span><span class="sxs-lookup"><span data-stu-id="68165-403">The source must be unique on the local computer; a new source name cannot match an existing source name or an existing event log name.</span></span> <span data-ttu-id="68165-404">各ソースは、一度に 1 つだけのイベント ログに書き込むことができます。ただし、アプリケーションでは、複数のソースを使用して、複数のイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-404">Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="68165-405">たとえば、アプリケーションでは、別のイベント ログまたは別のリソース ファイル用に構成された複数のソースを必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-405">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span>  
  
 <span data-ttu-id="68165-406">ソースは、ローカライズされたエントリを書き込むか、または直接の文字列を書き込むように構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-406">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="68165-407">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2 つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-407">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="68165-408">たとえば、リソース ファイルでは、1 つのソースを構成およびでは、そのソースを使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッドをイベント ログのリソース識別子を使用してエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-408">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="68165-409">リソースのファイルがない場合、別のソースを作成しでそのソースを使用し、<xref:System.Diagnostics.EventLog.WriteEntry%2A>そのソースを使用して、イベント ログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-409">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
 <span data-ttu-id="68165-410">既存のソースの構成の詳細を変更するには、ソースを削除し、新しい構成を使用して作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-410">To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</span></span> <span data-ttu-id="68165-411">他のアプリケーションやコンポーネントは、既存のソースを使用する場合は、既存のソースを削除するのではなく、更新された構成で新しいソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-411">If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-412">ソースはログに既にマップされて、新しいログにマッピングする場合は、変更を反映するには、コンピューターを再起動する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-412">If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-413">次の例では、ソース`MySource`が存在しない場合、イベント ログにエントリを書き込みます`MyNewLog`します。</span><span class="sxs-lookup"><span data-stu-id="68165-413">The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-414"><paramref name="source" /> が空の文字列 ("") または <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="68165-414"><paramref name="source" /> is an empty string ("") or <see langword="null" />.</span></span>  
  
<span data-ttu-id="68165-415">または</span><span class="sxs-lookup"><span data-stu-id="68165-415">-or-</span></span> 
 <span data-ttu-id="68165-416"><paramref name="logName" /> が有効なイベント ログ名ではありません。</span><span class="sxs-lookup"><span data-stu-id="68165-416"><paramref name="logName" /> is not a valid event log name.</span></span> <span data-ttu-id="68165-417">イベント ログ名は、印字可能な文字で構成されている必要があります。文字 '\*'、'?'、または '\\' を含めないでください。</span><span class="sxs-lookup"><span data-stu-id="68165-417">Event log names must consist of printable characters, and cannot include the characters '\*', '?', or '\\'.</span></span>  
  
<span data-ttu-id="68165-418">または</span><span class="sxs-lookup"><span data-stu-id="68165-418">-or-</span></span> 
 <span data-ttu-id="68165-419"><paramref name="logName" /> はユーザー ログの作成に有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="68165-419"><paramref name="logName" /> is not valid for user log creation.</span></span> <span data-ttu-id="68165-420">イベント ログ名 AppEvent、SysEvent、および SecEvent は、システムで使用するために予約されています。</span><span class="sxs-lookup"><span data-stu-id="68165-420">The event log names AppEvent, SysEvent, and SecEvent are reserved for system use.</span></span>  
  
<span data-ttu-id="68165-421">または</span><span class="sxs-lookup"><span data-stu-id="68165-421">-or-</span></span> 
<span data-ttu-id="68165-422">ログ名が既存のイベント ソース名に一致します。</span><span class="sxs-lookup"><span data-stu-id="68165-422">The log name matches an existing event source name.</span></span>  
  
<span data-ttu-id="68165-423">または</span><span class="sxs-lookup"><span data-stu-id="68165-423">-or-</span></span> 
<span data-ttu-id="68165-424">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="68165-424">The source name results in a registry key path longer than 254 characters.</span></span>  
  
<span data-ttu-id="68165-425">または</span><span class="sxs-lookup"><span data-stu-id="68165-425">-or-</span></span> 
<span data-ttu-id="68165-426"><paramref name="logName" /> の最初の 8 文字が既存のイベント ログ名の最初の 8 文字に一致します。</span><span class="sxs-lookup"><span data-stu-id="68165-426">The first 8 characters of <paramref name="logName" /> match the first 8 characters of an existing event log name.</span></span>  
  
<span data-ttu-id="68165-427">または</span><span class="sxs-lookup"><span data-stu-id="68165-427">-or-</span></span> 
<span data-ttu-id="68165-428">ローカル コンピューター上に既にソースが存在するため、ソースを登録できません。</span><span class="sxs-lookup"><span data-stu-id="68165-428">The source cannot be registered because it already exists on the local computer.</span></span>  
  
<span data-ttu-id="68165-429">または</span><span class="sxs-lookup"><span data-stu-id="68165-429">-or-</span></span> 
<span data-ttu-id="68165-430">ソース名が既存のイベント ログ名に一致します。</span><span class="sxs-lookup"><span data-stu-id="68165-430">The source name matches an existing event log name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-431">ローカル コンピューター上のイベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-431">The registry key for the event log could not be opened on the local computer.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-432">コンピューターのイベント ログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="68165-432">for administering event log information on the computer.</span></span> <span data-ttu-id="68165-433">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="68165-433">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateEventSource">
      <MemberSignature Language="C#" Value="public static void CreateEventSource (string source, string logName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateEventSource(string source, string logName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateEventSource (source As String, logName As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateEventSource(System::String ^ source, System::String ^ logName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member CreateEventSource : string * string * string -&gt; unit" Usage="System.Diagnostics.EventLog.CreateEventSource (source, logName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("use CreateEventSource(EventSourceCreationData) instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2;netcore-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.EventLog.CreateEventSource(EventSourceCreationData sourceData) instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.EventLog.CreateEventSource(EventSourceCreationData sourceData) instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="68165-434">アプリケーションを指定されたコンピューターに登録するために使用されるソース。</span><span class="sxs-lookup"><span data-stu-id="68165-434">The source by which the application is registered on the specified computer.</span></span></param>
        <param name="logName"><span data-ttu-id="68165-435">ソースのエントリが書き込まれるログの名前。</span><span class="sxs-lookup"><span data-stu-id="68165-435">The name of the log the source's entries are written to.</span></span> <span data-ttu-id="68165-436">指定できる値は、"Application"、"System"、またはカスタム イベント ログです。</span><span class="sxs-lookup"><span data-stu-id="68165-436">Possible values include Application, System, or a custom event log.</span></span> <span data-ttu-id="68165-437">値を指定しなかった場合、<paramref name="logName" /> は既定によりアプリケーションに設定されます。</span><span class="sxs-lookup"><span data-stu-id="68165-437">If you do not specify a value, <paramref name="logName" /> defaults to Application.</span></span></param>
        <param name="machineName"><span data-ttu-id="68165-438">このイベント ソースを登録するコンピューターの名前。ローカル コンピューターの場合は "."。</span><span class="sxs-lookup"><span data-stu-id="68165-438">The name of the computer to register this event source with, or "." for the local computer.</span></span></param>
        <summary><span data-ttu-id="68165-439">指定したコンピューター上のログにエントリを書き込むための有効なイベント ソースとして指定したソース名を設定します。</span><span class="sxs-lookup"><span data-stu-id="68165-439">Establishes the specified source name as a valid event source for writing entries to a log on the specified computer.</span></span> <span data-ttu-id="68165-440">このメソッドを使用して、指定したコンピューター上に新しいカスタム ログを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="68165-440">This method can also be used to create a new custom log on the specified computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-441">カスタム ログを作成または作成し、登録するこのオーバー ロードを使用して、<xref:System.Diagnostics.EventLog.Source%2A>指定したコンピューター上の既存のログ。</span><span class="sxs-lookup"><span data-stu-id="68165-441">Use this overload to create a custom log or to create and register a <xref:System.Diagnostics.EventLog.Source%2A> to an existing log on the specified computer.</span></span>  
  
 <span data-ttu-id="68165-442">場合`logName`は`null`または空の文字列 ("") を呼び出すと<xref:System.Diagnostics.EventLog.CreateEventSource%2A>ログの既定値は、アプリケーション ログ。</span><span class="sxs-lookup"><span data-stu-id="68165-442">If `logName` is `null` or an empty string ("") when you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A>, the log defaults to the Application log.</span></span> <span data-ttu-id="68165-443">システムがカスタム ログを作成し、として、アプリケーションを登録します。 指定したコンピューター上にログが存在しない場合、<xref:System.Diagnostics.EventLog.Source%2A>そのログ。</span><span class="sxs-lookup"><span data-stu-id="68165-443">If the log does not exist on the specified computer, the system creates a custom log and registers your application as a <xref:System.Diagnostics.EventLog.Source%2A> for that log.</span></span>  
  
 <span data-ttu-id="68165-444">のみ、イベント ログに書き込みを行う場合は、イベント ソースを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-444">You only need to create an event source if you are writing to the event log.</span></span> <span data-ttu-id="68165-445">イベント ログにエントリを書き込む前に、有効なイベントのソースとして、イベント ログにイベント ソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-445">Before writing an entry to an event log, you must register the event source with the event log as a valid source of events.</span></span> <span data-ttu-id="68165-446">ログ エントリを記述するときに、システムを使用して、<xref:System.Diagnostics.EventLog.Source%2A>エントリを配置するための適切なログを検索します。</span><span class="sxs-lookup"><span data-stu-id="68165-446">When you write a log entry, the system uses the <xref:System.Diagnostics.EventLog.Source%2A> to find the appropriate log in which to place your entry.</span></span> <span data-ttu-id="68165-447">かどうか、イベント ログを読んでいるを指定するか、 <xref:System.Diagnostics.EventLog.Source%2A>、または<xref:System.Diagnostics.EventLog.Log%2A>と<xref:System.Diagnostics.EventLog.MachineName%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-447">If you are reading the event log, you can either specify the <xref:System.Diagnostics.EventLog.Source%2A>, or a <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-448">Windows Vista 以降のイベント ソースまたは Windows Server 2003 を作成、管理特権が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-448">To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.</span></span>  
>   
>  <span data-ttu-id="68165-449">この要件の理由では、セキュリティを含むすべてのイベント ログを検索して、イベント ソースが一意かどうかを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-449">The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</span></span> <span data-ttu-id="68165-450">ユーザーは、セキュリティ ログにアクセスする権限はありません Windows Vista 以降では、そのため、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="68165-450">In Windows Vista and later, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.</span></span>  
>   
>  <span data-ttu-id="68165-451">Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。</span><span class="sxs-lookup"><span data-stu-id="68165-451">In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="68165-452">ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="68165-452">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="68165-453">既定では、ユーザーは標準ユーザー ロールに所属します。</span><span class="sxs-lookup"><span data-stu-id="68165-453">By default, you are in the standard user role.</span></span> <span data-ttu-id="68165-454">セキュリティ ログにアクセスするコードを実行するには標準ユーザーから管理者に、特権を昇格する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-454">To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="68165-455">この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。</span><span class="sxs-lookup"><span data-stu-id="68165-455">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="68165-456">使用<xref:System.Diagnostics.EventLog.WriteEvent%2A>と<xref:System.Diagnostics.EventLog.WriteEntry%2A>イベント ログにイベントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-456">Use <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> to write events to an event log.</span></span> <span data-ttu-id="68165-457">イベントを書き込むイベント ソースを指定する必要があります。作成し、ソースと最初のエントリを書き込む前に、イベント ソースを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-457">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="68165-458">アプリケーションのインストール中に新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-458">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="68165-459">これにより、登録済みのイベント ソースの一覧とその構成を更新するオペレーティング システムまでの時間です。</span><span class="sxs-lookup"><span data-stu-id="68165-459">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="68165-460">オペレーティング システムでは、イベントのソースの一覧は更新されていない場合は、書き込み操作は失敗、新しいソースを持つイベントを記述しようとしました。</span><span class="sxs-lookup"><span data-stu-id="68165-460">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="68165-461">使用して新しいソースを構成することができます、 <xref:System.Diagnostics.EventLogInstaller>、またはを使用して、<xref:System.Diagnostics.EventLog.CreateEventSource%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68165-461">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="68165-462">新しいイベント ソースを作成するコンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-462">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="68165-463">既存のイベント ログまたは新しいイベント ログのイベント ソースを作成することができます。</span><span class="sxs-lookup"><span data-stu-id="68165-463">You can create an event source for an existing event log or a new event log.</span></span> <span data-ttu-id="68165-464">新しいイベント ログの新しいソースを作成するときに、システムがそのログのソースを登録しますが、最初のエントリが書き込まれるまで、ログは作成されません。</span><span class="sxs-lookup"><span data-stu-id="68165-464">When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="68165-465">オペレーティング システムは、イベント ログをファイルとして格納します。</span><span class="sxs-lookup"><span data-stu-id="68165-465">The operating system stores event logs as files.</span></span> <span data-ttu-id="68165-466">使用すると<xref:System.Diagnostics.EventLogInstaller>または<xref:System.Diagnostics.EventLog.CreateEventSource%2A>指定したコンピューター上の %SystemRoot%\System32\Config ディレクトリに新しいイベント ログを作成する、関連付けられたファイルが格納されています。</span><span class="sxs-lookup"><span data-stu-id="68165-466">When you use <xref:System.Diagnostics.EventLogInstaller> or <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</span></span> <span data-ttu-id="68165-467">最初の 8 文字を付加して、ファイル名が設定されて、 <xref:System.Diagnostics.EventLog.Log%2A> ".evt"ファイル名拡張子を持つプロパティです。</span><span class="sxs-lookup"><span data-stu-id="68165-467">The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventLog.Log%2A> property with the ".evt" file name extension.</span></span>  
  
 <span data-ttu-id="68165-468">ソースは、ローカル コンピューター上で一意である必要があります。新しいソース名には、既存のソース名または既存のイベント ログ名を一致ことはできません。</span><span class="sxs-lookup"><span data-stu-id="68165-468">The source must be unique on the local computer; a new source name cannot match an existing source name or an existing event log name.</span></span> <span data-ttu-id="68165-469">各ソースは、一度に 1 つだけのイベント ログに書き込むことができます。ただし、アプリケーションでは、複数のソースを使用して、複数のイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-469">Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="68165-470">たとえば、アプリケーションでは、別のイベント ログまたは別のリソース ファイル用に構成された複数のソースを必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-470">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span>  
  
 <span data-ttu-id="68165-471">ソースは、ローカライズされたエントリを書き込むか、または直接の文字列を書き込むように構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-471">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="68165-472">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2 つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-472">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="68165-473">たとえば、リソース ファイルでは、1 つのソースを構成およびでは、そのソースを使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッドをイベント ログのリソース識別子を使用してエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-473">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="68165-474">リソースのファイルがない場合、別のソースを作成しでそのソースを使用し、<xref:System.Diagnostics.EventLog.WriteEntry%2A>そのソースを使用して、イベント ログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-474">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
 <span data-ttu-id="68165-475">既存のソースの構成の詳細を変更するには、ソースを削除し、新しい構成を使用して作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-475">To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</span></span> <span data-ttu-id="68165-476">他のアプリケーションやコンポーネントは、既存のソースを使用する場合は、既存のソースを削除するのではなく、更新された構成で新しいソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-476">If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-477">ソースはログに既にマップされて、新しいログにマッピングする場合は、変更を反映するには、コンピューターを再起動する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-477">If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-478">次の例では、ソースを作成します`MySource`コンピューターの`MyServer`、イベント ログにエントリを書き込み、`MyNewLog`します。</span><span class="sxs-lookup"><span data-stu-id="68165-478">The following example creates the source `MySource` on the computer `MyServer`, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.SourceExists1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.SourceExists1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.SourceExists1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.SourceExists1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.SourceExists1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.SourceExists1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-479"><paramref name="machineName" /> が有効なコンピューター名ではありません。</span><span class="sxs-lookup"><span data-stu-id="68165-479">The <paramref name="machineName" /> is not a valid computer name.</span></span>  
  
<span data-ttu-id="68165-480">または</span><span class="sxs-lookup"><span data-stu-id="68165-480">-or-</span></span> 
 <span data-ttu-id="68165-481"><paramref name="source" /> が空の文字列 ("") または <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="68165-481"><paramref name="source" /> is an empty string ("") or <see langword="null" />.</span></span>  
  
<span data-ttu-id="68165-482">または</span><span class="sxs-lookup"><span data-stu-id="68165-482">-or-</span></span> 
 <span data-ttu-id="68165-483"><paramref name="logName" /> が有効なイベント ログ名ではありません。</span><span class="sxs-lookup"><span data-stu-id="68165-483"><paramref name="logName" /> is not a valid event log name.</span></span> <span data-ttu-id="68165-484">イベント ログ名は、印字可能な文字で構成されている必要があります。文字 '\*'、'?'、または '\\' を含めないでください。</span><span class="sxs-lookup"><span data-stu-id="68165-484">Event log names must consist of printable characters, and cannot include the characters '\*', '?', or '\\'.</span></span>  
  
<span data-ttu-id="68165-485">または</span><span class="sxs-lookup"><span data-stu-id="68165-485">-or-</span></span> 
 <span data-ttu-id="68165-486"><paramref name="logName" /> はユーザー ログの作成に有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="68165-486"><paramref name="logName" /> is not valid for user log creation.</span></span> <span data-ttu-id="68165-487">イベント ログ名 AppEvent、SysEvent、および SecEvent は、システムで使用するために予約されています。</span><span class="sxs-lookup"><span data-stu-id="68165-487">The event log names AppEvent, SysEvent, and SecEvent are reserved for system use.</span></span>  
  
<span data-ttu-id="68165-488">または</span><span class="sxs-lookup"><span data-stu-id="68165-488">-or-</span></span> 
<span data-ttu-id="68165-489">ログ名が既存のイベント ソース名に一致します。</span><span class="sxs-lookup"><span data-stu-id="68165-489">The log name matches an existing event source name.</span></span>  
  
<span data-ttu-id="68165-490">または</span><span class="sxs-lookup"><span data-stu-id="68165-490">-or-</span></span> 
<span data-ttu-id="68165-491">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="68165-491">The source name results in a registry key path longer than 254 characters.</span></span>  
  
<span data-ttu-id="68165-492">または</span><span class="sxs-lookup"><span data-stu-id="68165-492">-or-</span></span> 
<span data-ttu-id="68165-493"><paramref name="logName" /> の最初の 8 文字が指定したコンピューター上の既存のイベント ログ名の最初の 8 文字に一致します。</span><span class="sxs-lookup"><span data-stu-id="68165-493">The first 8 characters of <paramref name="logName" /> match the first 8 characters of an existing event log name on the specified computer.</span></span>  
  
<span data-ttu-id="68165-494">または</span><span class="sxs-lookup"><span data-stu-id="68165-494">-or-</span></span> 
<span data-ttu-id="68165-495">指定したコンピューター上に既にソースが存在するため、ソースを登録できません。</span><span class="sxs-lookup"><span data-stu-id="68165-495">The source cannot be registered because it already exists on the specified computer.</span></span>  
  
<span data-ttu-id="68165-496">または</span><span class="sxs-lookup"><span data-stu-id="68165-496">-or-</span></span> 
<span data-ttu-id="68165-497">ソース名が既存のイベント ソース名に一致します。</span><span class="sxs-lookup"><span data-stu-id="68165-497">The source name matches an existing event source name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-498">指定したコンピューター上のイベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-498">The registry key for the event log could not be opened on the specified computer.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-499">コンピューターのイベント ログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="68165-499">for administering event log information on the computer.</span></span> <span data-ttu-id="68165-500">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="68165-500">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68165-501">ログ リソースを削除します。</span><span class="sxs-lookup"><span data-stu-id="68165-501">Removes a log resource.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Delete (logName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Delete(System::String ^ logName);" />
      <MemberSignature Language="F#" Value="static member Delete : string -&gt; unit" Usage="System.Diagnostics.EventLog.Delete logName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="68165-502">削除するログの名前。</span><span class="sxs-lookup"><span data-stu-id="68165-502">The name of the log to delete.</span></span> <span data-ttu-id="68165-503">次のような値となる場合があります。アプリケーション、セキュリティ、システム、およびコンピューター上の任意のカスタム イベント ログ。</span><span class="sxs-lookup"><span data-stu-id="68165-503">Possible values include: Application, Security, System, and any custom event logs on the computer.</span></span></param>
        <summary><span data-ttu-id="68165-504">ローカル コンピューターからイベント ログを削除します。</span><span class="sxs-lookup"><span data-stu-id="68165-504">Removes an event log from the local computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-505">削除するログは、ローカル コンピューター上には、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="68165-505">Use this method when the log you want to delete is on the local computer.</span></span> <span data-ttu-id="68165-506">適切なレジストリ権限が与えられていれば、コンピューター上のすべてのログを削除できます。</span><span class="sxs-lookup"><span data-stu-id="68165-506">You can delete any log on the computer, provided you have the appropriate registry permissions.</span></span>  
  
 <span data-ttu-id="68165-507"><xref:System.Diagnostics.EventLog.Delete%2A> 指定されたログを削除します。 `logName` 、ローカル コンピューターから。</span><span class="sxs-lookup"><span data-stu-id="68165-507"><xref:System.Diagnostics.EventLog.Delete%2A> removes the log specified by `logName` from the local computer.</span></span> <span data-ttu-id="68165-508">ソースのみをログに登録されているを削除する場合は、呼び出す<xref:System.Diagnostics.EventLog.DeleteEventSource%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-508">If you want to delete only the source registered to a log, call <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>.</span></span> <span data-ttu-id="68165-509">ログ エントリを削除する場合は、呼び出す<xref:System.Diagnostics.EventLog.Clear%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-509">If you only want to delete the log entries, call <xref:System.Diagnostics.EventLog.Clear%2A>.</span></span> <span data-ttu-id="68165-510"><xref:System.Diagnostics.EventLog.Delete%2A> <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>は`static`メソッド、クラス自体を呼び出すことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="68165-510"><xref:System.Diagnostics.EventLog.Delete%2A> and <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> are `static` methods, so they can be called on the class itself.</span></span> <span data-ttu-id="68165-511">新しいインスタンスを作成する必要はありません<xref:System.Diagnostics.EventLog>をいずれかのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="68165-511">It is not necessary to create a new instance of <xref:System.Diagnostics.EventLog> to call either method.</span></span>  
  
 <span data-ttu-id="68165-512"><xref:System.Diagnostics.EventLog.Delete%2A>メソッドが最初に、ログの内容を保持するファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="68165-512">The <xref:System.Diagnostics.EventLog.Delete%2A> method first deletes the file that holds the contents of the log.</span></span> <span data-ttu-id="68165-513">レジストリにアクセスし、そのログに登録されているすべてのイベント ソースを削除します。</span><span class="sxs-lookup"><span data-stu-id="68165-513">It then accesses the registry and removes all the event sources registered for that log.</span></span> <span data-ttu-id="68165-514">その後の時点のログを再作成する場合、再利用する場合は、ここでも、イベント ソースを登録してください。</span><span class="sxs-lookup"><span data-stu-id="68165-514">If you recreate the log at a later point, you should register the event sources again, if they are to be reused.</span></span> <span data-ttu-id="68165-515">イベント ソースを登録しないし、ログ名を指定せず、他のユーザーがイベント ソースに書き込みは、アプリケーション イベント ログでイベント ソースが作成されます。</span><span class="sxs-lookup"><span data-stu-id="68165-515">If you do not register the event sources and other users write to an event source without specifying a log name, the event source will be created in the Application event log.</span></span> <span data-ttu-id="68165-516">そのため、以前に削除して再作成するログ エントリを書き込むことはアプリケーションは、アプリケーション ログに書き込む代わりに、イベント ソースが現在含まれています。</span><span class="sxs-lookup"><span data-stu-id="68165-516">Therefore, applications that previously were able to write entries to the log you deleted and recreated will write to the Application log instead, because it now contains the event source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-517">イベント ログを再作成すると、困難なプロセスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="68165-517">Recreating an event log can be a difficult process.</span></span> <span data-ttu-id="68165-518">システムで作成されたイベント ログで、アプリケーション ログなどのいずれかが削除されないようにします。</span><span class="sxs-lookup"><span data-stu-id="68165-518">Avoid deleting any of the system-created event logs, such as the Application log.</span></span>  
  
 <span data-ttu-id="68165-519">呼び出すことによって、ログを削除する<xref:System.Diagnostics.EventLog.Delete%2A>ログに登録されたソースを自動的に削除されます。</span><span class="sxs-lookup"><span data-stu-id="68165-519">Deleting a log through a call to <xref:System.Diagnostics.EventLog.Delete%2A> automatically deletes the sources registered to that log.</span></span> <span data-ttu-id="68165-520">そのログ機能を使用して他のアプリケーションがあることがあります。</span><span class="sxs-lookup"><span data-stu-id="68165-520">This can make other applications using that log inoperative.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-521">次の例では、ローカル コンピューターからログを削除します。</span><span class="sxs-lookup"><span data-stu-id="68165-521">The following example deletes a log from the local computer.</span></span> <span data-ttu-id="68165-522">例では、そのソースからログを決定します。</span><span class="sxs-lookup"><span data-stu-id="68165-522">The example determines the log from its source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-523">複数のソースは、イベント ログに書き込む可能性があります。</span><span class="sxs-lookup"><span data-stu-id="68165-523">More than one source might write to an event log.</span></span> <span data-ttu-id="68165-524">カスタム ログを削除する前にそのログへの書き込み、その他のソースがないになっていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="68165-524">Before deleting a custom log, make sure there are no other sources writing to that log.</span></span>  
  
 [!code-cpp[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-525"><paramref name="logName" /> が空の文字列 ("") または <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="68165-525"><paramref name="logName" /> is an empty string ("") or <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-526">ローカル コンピューター上のイベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-526">The registry key for the event log could not be opened on the local computer.</span></span>  
  
<span data-ttu-id="68165-527">または</span><span class="sxs-lookup"><span data-stu-id="68165-527">-or-</span></span>
  
 <span data-ttu-id="68165-528">ローカル コンピューター上にログが存在しません。</span><span class="sxs-lookup"><span data-stu-id="68165-528">The log does not exist on the local computer.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="68165-529">イベント ログが正常に消去されませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-529">The event log was not cleared successfully.</span></span>  
  
 <span data-ttu-id="68165-530">または</span><span class="sxs-lookup"><span data-stu-id="68165-530">-or-</span></span>  
  
 <span data-ttu-id="68165-531">ログを開くことができません。</span><span class="sxs-lookup"><span data-stu-id="68165-531">The log cannot be opened.</span></span> <span data-ttu-id="68165-532">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68165-532">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-533">コンピューターのイベント ログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="68165-533">for administering event log information on the computer.</span></span> <span data-ttu-id="68165-534">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="68165-534">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.Clear" />
        <altmember cref="M:System.Diagnostics.EventLog.Close" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (string logName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(string logName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Delete(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Delete (logName As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Delete(System::String ^ logName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member Delete : string * string -&gt; unit" Usage="System.Diagnostics.EventLog.Delete (logName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="68165-535">削除するログの名前。</span><span class="sxs-lookup"><span data-stu-id="68165-535">The name of the log to delete.</span></span> <span data-ttu-id="68165-536">次のような値となる場合があります。アプリケーション、セキュリティ、システム、および指定したコンピューター上の任意のカスタム イベント ログ。</span><span class="sxs-lookup"><span data-stu-id="68165-536">Possible values include: Application, Security, System, and any custom event logs on the specified computer.</span></span></param>
        <param name="machineName"><span data-ttu-id="68165-537">ログを削除するコンピューターの名前。ローカル コンピューターの場合は "."。</span><span class="sxs-lookup"><span data-stu-id="68165-537">The name of the computer to delete the log from, or "." for the local computer.</span></span></param>
        <summary><span data-ttu-id="68165-538">指定したコンピューターからイベント ログを削除します。</span><span class="sxs-lookup"><span data-stu-id="68165-538">Removes an event log from the specified computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-539">削除するログは、リモート コンピューター上には、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="68165-539">Use this method when the log you want to delete is on a remote computer.</span></span> <span data-ttu-id="68165-540">適切なレジストリ権限が与えられていれば、コンピューター上のすべてのログを削除できます。</span><span class="sxs-lookup"><span data-stu-id="68165-540">You can delete any log on the computer, provided you have the appropriate registry permissions.</span></span>  
  
 <span data-ttu-id="68165-541"><xref:System.Diagnostics.EventLog.Delete%2A> 指定されたログを削除します。`logName`で指定されたコンピューターから`machineName`します。</span><span class="sxs-lookup"><span data-stu-id="68165-541"><xref:System.Diagnostics.EventLog.Delete%2A> removes the log specified by `logName` from the computer specified by `machineName`.</span></span> <span data-ttu-id="68165-542">ソースのみをログに登録されているを削除する場合は、呼び出す<xref:System.Diagnostics.EventLog.DeleteEventSource%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-542">If you want to delete only the source registered to a log, call <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>.</span></span> <span data-ttu-id="68165-543">ログ エントリを削除する場合は、呼び出す<xref:System.Diagnostics.EventLog.Clear%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-543">If you only want to delete the log entries, call <xref:System.Diagnostics.EventLog.Clear%2A>.</span></span> <span data-ttu-id="68165-544"><xref:System.Diagnostics.EventLog.Delete%2A> <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>は`static`メソッド、クラス自体を呼び出すことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="68165-544"><xref:System.Diagnostics.EventLog.Delete%2A> and <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> are `static` methods, so they can be called on the class itself.</span></span> <span data-ttu-id="68165-545">インスタンスを作成する必要はありません<xref:System.Diagnostics.EventLog>をいずれかのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="68165-545">It is not necessary to create an instance of <xref:System.Diagnostics.EventLog> to call either method.</span></span>  
  
 <span data-ttu-id="68165-546">このメソッドは、まず、ログの内容を保持するファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="68165-546">This method first deletes the file that holds the contents of the log.</span></span> <span data-ttu-id="68165-547">レジストリにアクセスし、そのログに登録されているすべてのイベント ソースを削除します。</span><span class="sxs-lookup"><span data-stu-id="68165-547">It then accesses the registry and removes all the event sources registered for that log.</span></span> <span data-ttu-id="68165-548">その後の時点のログを再作成する場合、再利用する場合は、ここでも、イベント ソースを登録してください。</span><span class="sxs-lookup"><span data-stu-id="68165-548">If you recreate the log at a later point, you should register the event sources again, if they are to be reused.</span></span> <span data-ttu-id="68165-549">イベント ソースを登録しないし、ログ名を指定せず、他のユーザーがイベント ソースに書き込みは、アプリケーション イベント ログでイベント ソースが作成されます。</span><span class="sxs-lookup"><span data-stu-id="68165-549">If you do not register the event sources and other users write to an event source without specifying a log name, the event source will be created in the Application event log.</span></span> <span data-ttu-id="68165-550">そのため、以前に削除して再作成するログ エントリを書き込むことはアプリケーションは、アプリケーション ログに書き込む代わりに、イベント ソースが現在含まれています。</span><span class="sxs-lookup"><span data-stu-id="68165-550">Therefore, applications that previously were able to write entries to the log you deleted and recreated will write to the Application log instead, because it now contains the event source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-551">イベント ログを再作成すると、困難なプロセスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="68165-551">Recreating an event log can be a difficult process.</span></span> <span data-ttu-id="68165-552">システムで作成されたイベント ログで、アプリケーション ログなどのいずれかが削除されないようにします。</span><span class="sxs-lookup"><span data-stu-id="68165-552">Avoid deleting any of the system-created event logs, such as the Application log.</span></span>  
  
 <span data-ttu-id="68165-553">呼び出すことによって、ログを削除する<xref:System.Diagnostics.EventLog.Delete%2A>ログに登録されたソースを自動的に削除されます。</span><span class="sxs-lookup"><span data-stu-id="68165-553">Deleting a log through a call to <xref:System.Diagnostics.EventLog.Delete%2A> automatically deletes the sources registered to that log.</span></span> <span data-ttu-id="68165-554">そのログ機能を使用して他のアプリケーションがあることがあります。</span><span class="sxs-lookup"><span data-stu-id="68165-554">This can make other applications using that log inoperative.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-555">次の例では、指定したコンピューターからログを削除します。</span><span class="sxs-lookup"><span data-stu-id="68165-555">The following example deletes a log from the specified computer.</span></span> <span data-ttu-id="68165-556">例では、そのソースからログを決定します。</span><span class="sxs-lookup"><span data-stu-id="68165-556">The example determines the log from its source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-557">複数のソースは、イベント ログに書き込む可能性があります。</span><span class="sxs-lookup"><span data-stu-id="68165-557">More than one source might write to an event log.</span></span> <span data-ttu-id="68165-558">カスタム ログを削除する前にそのログへの書き込み、その他のソースがないになっていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="68165-558">Before deleting a custom log, make sure there are no other sources writing to that log.</span></span>  
  
 [!code-cpp[Classic EventLog.Delete1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Delete1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Delete1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Delete1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Delete1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Delete1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-559"><paramref name="logName" /> が空の文字列 ("") または <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="68165-559"><paramref name="logName" /> is an empty string ("") or <see langword="null" />.</span></span>  
  
<span data-ttu-id="68165-560">または</span><span class="sxs-lookup"><span data-stu-id="68165-560">-or-</span></span> 
 <span data-ttu-id="68165-561"><paramref name="machineName" /> が有効なコンピューター名ではありません。</span><span class="sxs-lookup"><span data-stu-id="68165-561"><paramref name="machineName" /> is not a valid computer name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-562">指定したコンピューター上のイベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-562">The registry key for the event log could not be opened on the specified computer.</span></span>  
  
<span data-ttu-id="68165-563">または</span><span class="sxs-lookup"><span data-stu-id="68165-563">-or-</span></span>
  
 <span data-ttu-id="68165-564">指定したコンピューター上にログが存在しません。</span><span class="sxs-lookup"><span data-stu-id="68165-564">The log does not exist on the specified computer.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="68165-565">イベント ログが正常に消去されませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-565">The event log was not cleared successfully.</span></span>  
  
 <span data-ttu-id="68165-566">または</span><span class="sxs-lookup"><span data-stu-id="68165-566">-or-</span></span>  
  
 <span data-ttu-id="68165-567">ログを開くことができません。</span><span class="sxs-lookup"><span data-stu-id="68165-567">The log cannot be opened.</span></span> <span data-ttu-id="68165-568">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68165-568">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-569">コンピューターのイベント ログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="68165-569">for administering event log information on the computer.</span></span> <span data-ttu-id="68165-570">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="68165-570">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.Clear" />
        <altmember cref="M:System.Diagnostics.EventLog.Close" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteEventSource">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68165-571">イベント ログからアプリケーションのイベント ソース登録を削除します。</span><span class="sxs-lookup"><span data-stu-id="68165-571">Removes an application's event source registration from the event log.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteEventSource">
      <MemberSignature Language="C#" Value="public static void DeleteEventSource (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteEventSource(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeleteEventSource (source As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteEventSource(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member DeleteEventSource : string -&gt; unit" Usage="System.Diagnostics.EventLog.DeleteEventSource source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="68165-572">イベント ログ システムにアプリケーションを登録するときに使用する名前。</span><span class="sxs-lookup"><span data-stu-id="68165-572">The name by which the application is registered in the event log system.</span></span></param>
        <summary><span data-ttu-id="68165-573">ローカル コンピューターのイベント ログからイベント ソースの登録を削除します。</span><span class="sxs-lookup"><span data-stu-id="68165-573">Removes the event source registration from the event log of the local computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-574">登録を削除するには、このメソッドを使用して、<xref:System.Diagnostics.EventLog.Source%2A>ローカル コンピューターから。</span><span class="sxs-lookup"><span data-stu-id="68165-574">Use this method to remove the registration of a <xref:System.Diagnostics.EventLog.Source%2A> from the local computer.</span></span> <span data-ttu-id="68165-575"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> ローカル コンピューターのレジストリにアクセスし、有効なイベントのソースとして、アプリケーションの登録を削除します。</span><span class="sxs-lookup"><span data-stu-id="68165-575"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> accesses the registry on the local computer and removes the registration of your application as a valid source of events.</span></span>  
  
 <span data-ttu-id="68165-576">ログにエントリを書き込むことが不要になった場合は、有効なイベントのソースとして、コンポーネントを削除できます。</span><span class="sxs-lookup"><span data-stu-id="68165-576">You can remove your component as a valid source of events if you no longer need it to write entries to that log.</span></span> <span data-ttu-id="68165-577">たとえば、これを行います、コンポーネントを別の 1 つのログに変更する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="68165-577">For example, you might do this if you need to change your component from one log to another.</span></span> <span data-ttu-id="68165-578">ソースを 1 つのログに登録するには、一度に、ため、ログを変更する必要がありますを現在の登録を削除します。</span><span class="sxs-lookup"><span data-stu-id="68165-578">Because a source can only be registered to one log at a time, changing the log requires you to remove the current registration.</span></span>  
  
 <span data-ttu-id="68165-579"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> ログに登録されているソースのみを削除します。</span><span class="sxs-lookup"><span data-stu-id="68165-579"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> removes only the source registered to a log.</span></span> <span data-ttu-id="68165-580">ログ自体を削除する場合は、呼び出す<xref:System.Diagnostics.EventLog.Delete%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-580">If you want to remove the log itself, call <xref:System.Diagnostics.EventLog.Delete%2A>.</span></span> <span data-ttu-id="68165-581">ログ エントリを削除する場合は、呼び出す<xref:System.Diagnostics.EventLog.Clear%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-581">If you only want to delete the log entries, call <xref:System.Diagnostics.EventLog.Clear%2A>.</span></span> <span data-ttu-id="68165-582"><xref:System.Diagnostics.EventLog.Delete%2A> <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>は`static`メソッド、クラス自体を呼び出すことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="68165-582"><xref:System.Diagnostics.EventLog.Delete%2A> and <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> are `static` methods, so they can be called on the class itself.</span></span> <span data-ttu-id="68165-583">インスタンスを作成する必要はありません<xref:System.Diagnostics.EventLog>をいずれかのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="68165-583">It is not necessary to create an instance of <xref:System.Diagnostics.EventLog> to call either method.</span></span>  
  
 <span data-ttu-id="68165-584">呼び出すことによって、ログを削除する<xref:System.Diagnostics.EventLog.Delete%2A>ログに登録されたソースを自動的に削除されます。</span><span class="sxs-lookup"><span data-stu-id="68165-584">Deleting a log through a call to <xref:System.Diagnostics.EventLog.Delete%2A> automatically deletes the sources registered to that log.</span></span> <span data-ttu-id="68165-585">そのログ機能を使用して他のアプリケーションがあることがあります。</span><span class="sxs-lookup"><span data-stu-id="68165-585">This can make other applications using that log inoperative.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-586">ソースはログに既にマップされて、新しいログにマッピングする場合は、変更を反映するには、コンピューターを再起動する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-586">If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-587">次の例では、ローカル コンピューターから、ソースを削除します。</span><span class="sxs-lookup"><span data-stu-id="68165-587">The following example deletes a source from the local computer.</span></span> <span data-ttu-id="68165-588">この例では、ソースからログを特定し、ログを削除します。</span><span class="sxs-lookup"><span data-stu-id="68165-588">The example determines the log from its source, and then deletes the log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-589">複数のソースは、イベント ログに書き込む可能性があります。</span><span class="sxs-lookup"><span data-stu-id="68165-589">More than one source might write to an event log.</span></span> <span data-ttu-id="68165-590">カスタム ログを削除する前にそのログへの書き込み、その他のソースがないになっていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="68165-590">Before deleting a custom log, make sure there are no other sources writing to that log.</span></span>  
  
 [!code-cpp[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-591">ローカル コンピューターのレジストリに <paramref name="source" /> パラメーターがありません。</span><span class="sxs-lookup"><span data-stu-id="68165-591">The <paramref name="source" /> parameter does not exist in the registry of the local computer.</span></span>  
  
<span data-ttu-id="68165-592">または</span><span class="sxs-lookup"><span data-stu-id="68165-592">-or-</span></span> 
<span data-ttu-id="68165-593">イベント ログのレジストリ キーに対する書き込みアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="68165-593">You do not have write access on the registry key for the event log.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-594">コンピューターのイベント ログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="68165-594">for administering event log information on the computer.</span></span> <span data-ttu-id="68165-595">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="68165-595">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Clear" />
      </Docs>
    </Member>
    <Member MemberName="DeleteEventSource">
      <MemberSignature Language="C#" Value="public static void DeleteEventSource (string source, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteEventSource(string source, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.DeleteEventSource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeleteEventSource (source As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteEventSource(System::String ^ source, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member DeleteEventSource : string * string -&gt; unit" Usage="System.Diagnostics.EventLog.DeleteEventSource (source, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="68165-596">イベント ログ システムにアプリケーションを登録するときに使用する名前。</span><span class="sxs-lookup"><span data-stu-id="68165-596">The name by which the application is registered in the event log system.</span></span></param>
        <param name="machineName"><span data-ttu-id="68165-597">登録を削除するコンピューターの名前。ローカル コンピューターの場合は "."。</span><span class="sxs-lookup"><span data-stu-id="68165-597">The name of the computer to remove the registration from, or "." for the local computer.</span></span></param>
        <summary><span data-ttu-id="68165-598">指定したコンピューターからアプリケーションのイベント ソース登録を削除します。</span><span class="sxs-lookup"><span data-stu-id="68165-598">Removes the application's event source registration from the specified computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-599">このオーバー ロードを使用して、登録を削除する、<xref:System.Diagnostics.EventLog.Source%2A>リモート コンピューターから。</span><span class="sxs-lookup"><span data-stu-id="68165-599">Use this overload to remove the registration of a <xref:System.Diagnostics.EventLog.Source%2A> from a remote computer.</span></span> <span data-ttu-id="68165-600"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> 指定されたコンピューターのレジストリにアクセスする`machineName`し、有効なイベントのソースとして、アプリケーションの登録を削除します。</span><span class="sxs-lookup"><span data-stu-id="68165-600"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> accesses the registry on the computer specified by `machineName` and removes the registration of your application as a valid source of events.</span></span>  
  
 <span data-ttu-id="68165-601">ログにエントリを書き込むことが不要になった場合は、有効なイベントのソースとして、コンポーネントを削除できます。</span><span class="sxs-lookup"><span data-stu-id="68165-601">You can remove your component as a valid source of events if you no longer need it to write entries to that log.</span></span> <span data-ttu-id="68165-602">たとえば、これを行います、コンポーネントを別の 1 つのログに変更する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="68165-602">For example, you might do this if you need to change your component from one log to another.</span></span> <span data-ttu-id="68165-603">ソースを 1 つのログに登録するには、一度に、ため、ログを変更する必要がありますを現在の登録を削除します。</span><span class="sxs-lookup"><span data-stu-id="68165-603">Because a source can only be registered to one log at a time, changing the log requires you to remove the current registration.</span></span>  
  
 <span data-ttu-id="68165-604"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> ログに登録されているソースのみを削除します。</span><span class="sxs-lookup"><span data-stu-id="68165-604"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> removes only the source registered to a log.</span></span> <span data-ttu-id="68165-605">ログ自体を削除する場合は、呼び出す<xref:System.Diagnostics.EventLog.Delete%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-605">If you want to remove the log itself, call <xref:System.Diagnostics.EventLog.Delete%2A>.</span></span> <span data-ttu-id="68165-606">ログ エントリを削除する場合は、呼び出す<xref:System.Diagnostics.EventLog.Clear%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-606">If you only want to delete the log entries, call <xref:System.Diagnostics.EventLog.Clear%2A>.</span></span> <span data-ttu-id="68165-607"><xref:System.Diagnostics.EventLog.Delete%2A> <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>は`static`メソッド、クラス自体を呼び出すことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="68165-607"><xref:System.Diagnostics.EventLog.Delete%2A> and <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> are `static` methods, so they can be called on the class itself.</span></span> <span data-ttu-id="68165-608">インスタンスを作成する必要はありません<xref:System.Diagnostics.EventLog>をいずれかのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="68165-608">It is not necessary to create an instance of <xref:System.Diagnostics.EventLog> to call either method.</span></span>  
  
 <span data-ttu-id="68165-609">呼び出すことによって、ログを削除する<xref:System.Diagnostics.EventLog.Delete%2A>ログに登録されたソースを自動的に削除されます。</span><span class="sxs-lookup"><span data-stu-id="68165-609">Deleting a log through a call to <xref:System.Diagnostics.EventLog.Delete%2A> automatically deletes the sources registered to that log.</span></span> <span data-ttu-id="68165-610">そのログ機能を使用して他のアプリケーションがあることがあります。</span><span class="sxs-lookup"><span data-stu-id="68165-610">This can make other applications using that log inoperative.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-611">ソースはログに既にマップされて、新しいログにマッピングする場合は、変更を反映するには、コンピューターを再起動する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-611">If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-612">次の例では、指定したコンピューターから、ソースを削除します。</span><span class="sxs-lookup"><span data-stu-id="68165-612">The following example deletes a source from the specified computer.</span></span> <span data-ttu-id="68165-613">この例では、ソースからログを特定し、ログを削除します。</span><span class="sxs-lookup"><span data-stu-id="68165-613">The example determines the log from its source, and then deletes the log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-614">複数のソースは、イベント ログに書き込む可能性があります。</span><span class="sxs-lookup"><span data-stu-id="68165-614">More than one source might write to an event log.</span></span> <span data-ttu-id="68165-615">カスタム ログを削除する前にそのログへの書き込み、その他のソースがないになっていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="68165-615">Before deleting a custom log, make sure there are no other sources writing to that log.</span></span>  
  
 [!code-cpp[Classic EventLog.Delete1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Delete1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Delete1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Delete1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Delete1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Delete1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-616"><paramref name="machineName" /> パラメーターが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="68165-616">The <paramref name="machineName" /> parameter is invalid.</span></span>  
  
<span data-ttu-id="68165-617">または</span><span class="sxs-lookup"><span data-stu-id="68165-617">-or-</span></span> 
<span data-ttu-id="68165-618">指定したコンピューターのレジストリに <paramref name="source" /> パラメーターがありません。</span><span class="sxs-lookup"><span data-stu-id="68165-618">The <paramref name="source" /> parameter does not exist in the registry of the specified computer.</span></span>  
  
<span data-ttu-id="68165-619">または</span><span class="sxs-lookup"><span data-stu-id="68165-619">-or-</span></span> 
<span data-ttu-id="68165-620">イベント ログのレジストリ キーに対する書き込みアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="68165-620">You do not have write access on the registry key for the event log.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-621">レジストリで <paramref name="source" /> の親レジストリ キーに同じ名前のサブキーが含まれないため、<paramref name="source" /> は削除できません。</span><span class="sxs-lookup"><span data-stu-id="68165-621"><paramref name="source" /> cannot be deleted because in the registry, the parent registry key for <paramref name="source" /> does not contain a subkey with the same name.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-622">コンピューターのイベント ログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="68165-622">for administering event log information on the computer.</span></span> <span data-ttu-id="68165-623">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="68165-623">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="eventLog.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="68165-624">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68165-624"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="68165-625"><see cref="T:System.Diagnostics.EventLog" /> が使用しているアンマネージド リソースを解放します。オプションとして、マネージド リソースを解放することもできます。</span><span class="sxs-lookup"><span data-stu-id="68165-625">Releases the unmanaged resources used by the <see cref="T:System.Diagnostics.EventLog" />, and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-626">このメソッドは、パブリック`Dispose()`メソッドと<xref:System.Object.Finalize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68165-626">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="68165-627">`Dispose()` 保護された起動`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="68165-627">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="68165-628"><xref:System.Object.Finalize%2A> 呼び出す`Dispose`で`disposing`に設定`false`します。</span><span class="sxs-lookup"><span data-stu-id="68165-628"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="68165-629">ときに、`disposing`パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<xref:System.Diagnostics.EventLog>参照。</span><span class="sxs-lookup"><span data-stu-id="68165-629">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Diagnostics.EventLog> references.</span></span> <span data-ttu-id="68165-630">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="68165-630">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="68165-631">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="68165-631">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="68165-632">オーバーライドするときに<see langword="Dispose(Boolean)" />の事前に呼び出したで以前破棄されたオブジェクトを参照しないように注意する<see langword="Dispose" />します。</span><span class="sxs-lookup"><span data-stu-id="68165-632">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="68165-633">実装する方法についての詳細は<see langword="Dispose(Boolean)" />を参照してください[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)します。</span><span class="sxs-lookup"><span data-stu-id="68165-633">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="68165-634">詳細については<see langword="Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)します。</span><span class="sxs-lookup"><span data-stu-id="68165-634">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EnableRaisingEvents">
      <MemberSignature Language="C#" Value="public bool EnableRaisingEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableRaisingEvents" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.EnableRaisingEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableRaisingEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableRaisingEvents { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableRaisingEvents : bool with get, set" Usage="System.Diagnostics.EventLog.EnableRaisingEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("If enabled raises event when a log is written.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogMonitoring")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68165-635"><see cref="T:System.Diagnostics.EventLog" /> が <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> イベント通知を受信するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="68165-635">Gets or sets a value indicating whether the <see cref="T:System.Diagnostics.EventLog" /> receives <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> event notifications.</span></span></summary>
        <value><span data-ttu-id="68165-636">エントリがログに書き込まれたときに <see cref="T:System.Diagnostics.EventLog" /> が通知を受信する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68165-636"><see langword="true" /> if the <see cref="T:System.Diagnostics.EventLog" /> receives notification when an entry is written to the log; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-637"><xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A>プロパティを決定するかどうか、<xref:System.Diagnostics.EventLog>エントリがログに書き込まれるときにイベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="68165-637">The <xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A> property determines whether the <xref:System.Diagnostics.EventLog> raises events when entries are written to the log.</span></span> <span data-ttu-id="68165-638">プロパティが`true`、コンポーネントを受信する、<xref:System.Diagnostics.EventLog.EntryWritten>イベントはエントリがで指定されているログに書き込まれるたびに通知を受信、<xref:System.Diagnostics.EventLog.Log%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="68165-638">When the property is `true`, components that receive the <xref:System.Diagnostics.EventLog.EntryWritten> event will receive notification any time an entry is written to the log that is specified in the <xref:System.Diagnostics.EventLog.Log%2A> property.</span></span> <span data-ttu-id="68165-639">場合<xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A>は`false`イベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="68165-639">If <xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A> is `false`, no events are raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-640">ローカル コンピューターのエントリが書き込まれる場合にのみ、イベント通知を受け取ることができます。</span><span class="sxs-lookup"><span data-stu-id="68165-640">You can receive event notifications only when entries are written on the local computer.</span></span> <span data-ttu-id="68165-641">リモート コンピューター上で書き込まれたエントリの通知を受信することはできません。</span><span class="sxs-lookup"><span data-stu-id="68165-641">You cannot receive notifications for entries written on remote computers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-642">次の例のハンドル、<xref:System.Diagnostics.EventLog.EntryWritten>イベント。</span><span class="sxs-lookup"><span data-stu-id="68165-642">The following example handles an <xref:System.Diagnostics.EventLog.EntryWritten> event.</span></span>  
  
 [!code-cpp[Classic EventLog.EnableRaisingEvents Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.EnableRaisingEvents Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.EnableRaisingEvents Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.EnableRaisingEvents Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.EnableRaisingEvents Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.EnableRaisingEvents Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-643">イベント ログは、リモート コンピューター上にあります。</span><span class="sxs-lookup"><span data-stu-id="68165-643">The event log is on a remote computer.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-644">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-644">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-645">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-645">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="E:System.Diagnostics.EventLog.EntryWritten" />
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="eventLog.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68165-646">フォームまたは別のコンポーネントで使用される <see cref="T:System.Diagnostics.EventLog" /> の初期化を終了します。</span><span class="sxs-lookup"><span data-stu-id="68165-646">Ends the initialization of an <see cref="T:System.Diagnostics.EventLog" /> used on a form or by another component.</span></span> <span data-ttu-id="68165-647">初期化は実行時に発生します。</span><span class="sxs-lookup"><span data-stu-id="68165-647">The initialization occurs at runtime.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-648">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]デザイン環境では、このメソッドを使用して、フォームまたは別のコンポーネントで使用されるコンポーネントの初期化を終了します。</span><span class="sxs-lookup"><span data-stu-id="68165-648">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to end the initialization of a component used on a form or by another component.</span></span> <span data-ttu-id="68165-649"><xref:System.Diagnostics.EventLog.BeginInit%2A>メソッドは、初期化を開始します。</span><span class="sxs-lookup"><span data-stu-id="68165-649">The <xref:System.Diagnostics.EventLog.BeginInit%2A> method starts the initialization.</span></span> <span data-ttu-id="68165-650">使用して、<xref:System.Diagnostics.EventLog.BeginInit%2A>と<xref:System.Diagnostics.EventLog.EndInit%2A>メソッドにより、コントロールは完全に初期化される前に使用されているからです。</span><span class="sxs-lookup"><span data-stu-id="68165-650">Using the <xref:System.Diagnostics.EventLog.BeginInit%2A> and <xref:System.Diagnostics.EventLog.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-651">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-651">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-652">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-652">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.BeginInit" />
      </Docs>
    </Member>
    <Member MemberName="Entries">
      <MemberSignature Language="C#" Value="public System.Diagnostics.EventLogEntryCollection Entries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.EventLogEntryCollection Entries" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.Entries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entries As EventLogEntryCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::EventLogEntryCollection ^ Entries { System::Diagnostics::EventLogEntryCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Entries : System.Diagnostics.EventLogEntryCollection" Usage="System.Diagnostics.EventLog.Entries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The entries in the log.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogEntries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLogEntryCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68165-653">イベント ログの内容を取得します。</span><span class="sxs-lookup"><span data-stu-id="68165-653">Gets the contents of the event log.</span></span></summary>
        <value><span data-ttu-id="68165-654">イベント ログのエントリを保持している <see cref="T:System.Diagnostics.EventLogEntryCollection" />。</span><span class="sxs-lookup"><span data-stu-id="68165-654">An <see cref="T:System.Diagnostics.EventLogEntryCollection" /> holding the entries in the event log.</span></span> <span data-ttu-id="68165-655">1 つのエントリが <see cref="T:System.Diagnostics.EventLogEntry" /> クラスの 1 つのインスタンスに関連付けられます。</span><span class="sxs-lookup"><span data-stu-id="68165-655">Each entry is associated with an instance of the <see cref="T:System.Diagnostics.EventLogEntry" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-656">使用して、<xref:System.Diagnostics.EventLog.Entries%2A>メンバー、イベント ログから読み取るときにします。</span><span class="sxs-lookup"><span data-stu-id="68165-656">Use the <xref:System.Diagnostics.EventLog.Entries%2A> member when reading from the event log.</span></span>  
  
 <span data-ttu-id="68165-657">エントリを変更またはを使用してログに書き込むことはできません、プロパティが読み取り専用であるため、<xref:System.Diagnostics.EventLog.Entries%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-657">Because the property is read-only, you cannot modify an entry or write to the log using <xref:System.Diagnostics.EventLog.Entries%2A>.</span></span> <span data-ttu-id="68165-658">代わりに、指定、<xref:System.Diagnostics.EventLog.Source%2A>を呼び出すと<xref:System.Diagnostics.EventLog.WriteEntry%2A>新しいログ エントリの書き込みにします。</span><span class="sxs-lookup"><span data-stu-id="68165-658">Instead, specify a <xref:System.Diagnostics.EventLog.Source%2A> and call <xref:System.Diagnostics.EventLog.WriteEntry%2A> to write a new log entry.</span></span> <span data-ttu-id="68165-659">使用することができます<xref:System.Diagnostics.EventLog.Entries%2A>、イベント ログ エントリの数をカウントし、各表示<xref:System.Diagnostics.EventLogEntry>コレクション内で。</span><span class="sxs-lookup"><span data-stu-id="68165-659">You can use <xref:System.Diagnostics.EventLog.Entries%2A> to count the number of entries in the event log, and view each <xref:System.Diagnostics.EventLogEntry> in the collection.</span></span> <span data-ttu-id="68165-660">使用して、インデックス付き<xref:System.Diagnostics.EventLogEntryCollection.Item%2A>など特定のエントリに関する情報を取得するメンバー <xref:System.Diagnostics.EventLogEntry.Message%2A>、 <xref:System.Diagnostics.EventLogEntry.Category%2A>、 <xref:System.Diagnostics.EventLogEntry.TimeWritten%2A>、または<xref:System.Diagnostics.EventLogEntry.EntryType%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-660">Use the indexed <xref:System.Diagnostics.EventLogEntryCollection.Item%2A> member to retrieve information about a specific entry, such as <xref:System.Diagnostics.EventLogEntry.Message%2A>, <xref:System.Diagnostics.EventLogEntry.Category%2A>, <xref:System.Diagnostics.EventLogEntry.TimeWritten%2A>, or <xref:System.Diagnostics.EventLogEntry.EntryType%2A>.</span></span>  
  
 <span data-ttu-id="68165-661">指定する必要はありません、<xref:System.Diagnostics.EventLog.Source%2A>のみをログから読み取るときにします。</span><span class="sxs-lookup"><span data-stu-id="68165-661">It is not necessary to specify a <xref:System.Diagnostics.EventLog.Source%2A> when only reading from a log.</span></span> <span data-ttu-id="68165-662">のみを指定することができます、<xref:System.Diagnostics.EventLog.Log%2A>名と<xref:System.Diagnostics.EventLog.MachineName%2A>(サーバーのコンピューター名) のプロパティを<xref:System.Diagnostics.EventLog>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="68165-662">You can specify only the <xref:System.Diagnostics.EventLog.Log%2A> name and <xref:System.Diagnostics.EventLog.MachineName%2A> (server computer name) properties for the <xref:System.Diagnostics.EventLog> instance.</span></span> <span data-ttu-id="68165-663">どちらの場合、<xref:System.Diagnostics.EventLog.Entries%2A>メンバーはエントリのイベント ログの一覧が設定されます。</span><span class="sxs-lookup"><span data-stu-id="68165-663">In either case, the <xref:System.Diagnostics.EventLog.Entries%2A> member is automatically populated with the event log's list of entries.</span></span> <span data-ttu-id="68165-664">個々 のエントリを読み取るには、この一覧では、該当する項目のインデックスを選択できます。</span><span class="sxs-lookup"><span data-stu-id="68165-664">You can select the appropriate index for an item in this list to read individual entries.</span></span>  
  
 <span data-ttu-id="68165-665">ログ エントリの読み取りと書き込みの重要な違いを明示的に読み取りメソッドを呼び出す必要はありません。</span><span class="sxs-lookup"><span data-stu-id="68165-665">An important distinction between reading and writing log entries is that it is not necessary to explicitly call a read method.</span></span> <span data-ttu-id="68165-666">後に、<xref:System.Diagnostics.EventLog.Log%2A>と<xref:System.Diagnostics.EventLog.MachineName%2A>が指定されて、<xref:System.Diagnostics.EventLog.Entries%2A>プロパティが自動的に設定されます。</span><span class="sxs-lookup"><span data-stu-id="68165-666">After the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A> are specified, the <xref:System.Diagnostics.EventLog.Entries%2A> property is automatically populated.</span></span> <span data-ttu-id="68165-667">値を変更する場合、<xref:System.Diagnostics.EventLog.Log%2A>または<xref:System.Diagnostics.EventLog.MachineName%2A>プロパティ、<xref:System.Diagnostics.EventLog.Entries%2A>プロパティが、次回読むことを再作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-667">If you change the value of the <xref:System.Diagnostics.EventLog.Log%2A> or <xref:System.Diagnostics.EventLog.MachineName%2A> property, the <xref:System.Diagnostics.EventLog.Entries%2A> property is repopulated the next time you read it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-668">指定する必要はありません、<xref:System.Diagnostics.EventLog.MachineName%2A>をログに接続している場合。</span><span class="sxs-lookup"><span data-stu-id="68165-668">You are not required to specify the <xref:System.Diagnostics.EventLog.MachineName%2A> if you are connecting to a log.</span></span> <span data-ttu-id="68165-669">指定しない場合、 <xref:System.Diagnostics.EventLog.MachineName%2A>、ローカルのコンピューターでは、"."と見なされます。</span><span class="sxs-lookup"><span data-stu-id="68165-669">If you do not specify the <xref:System.Diagnostics.EventLog.MachineName%2A>, the local computer, ".", is assumed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-670">次の例では、ローカル コンピューターのイベント ログ"MyNewLog"のエントリを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="68165-670">The following example reads entries in the event log, "MyNewLog", on the local computer.</span></span>  
  
 [!code-cpp[Classic EventLog.Entries Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Entries Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Entries Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Entries Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Entries Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Entries Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-671">コンピューターのイベント ログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="68165-671">for administering event log information on the computer.</span></span> <span data-ttu-id="68165-672">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="68165-672">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryCollection" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEntry" />
      </Docs>
    </Member>
    <Member MemberName="EntryWritten">
      <MemberSignature Language="C#" Value="public event System.Diagnostics.EntryWrittenEventHandler EntryWritten;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Diagnostics.EntryWrittenEventHandler EntryWritten" />
      <MemberSignature Language="DocId" Value="E:System.Diagnostics.EventLog.EntryWritten" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EntryWritten As EntryWrittenEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Diagnostics::EntryWrittenEventHandler ^ EntryWritten;" />
      <MemberSignature Language="F#" Value="member this.EntryWritten : System.Diagnostics.EntryWrittenEventHandler " Usage="member this.EntryWritten : System.Diagnostics.EntryWrittenEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Raised for each EventLog entry written.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogEntryWritten")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EntryWrittenEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68165-673">ローカル コンピューター上のイベント ログにエントリが書き込まれたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="68165-673">Occurs when an entry is written to an event log on the local computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-674">設定する必要があります、イベント通知を受信する<xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A>に`true`します。</span><span class="sxs-lookup"><span data-stu-id="68165-674">To get event notifications, you must set <xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A> to `true`.</span></span> <span data-ttu-id="68165-675">ローカル コンピューターのエントリが書き込まれるときにのみ、イベント通知を受信できます。</span><span class="sxs-lookup"><span data-stu-id="68165-675">You can only receive event notifications when entries are written on the local computer.</span></span> <span data-ttu-id="68165-676">リモート コンピューター上で書き込まれたエントリの通知を受信することはできません。</span><span class="sxs-lookup"><span data-stu-id="68165-676">You cannot receive notifications for entries written on remote computers.</span></span>  
  
 <span data-ttu-id="68165-677"><xref:System.Diagnostics.EventLog.EntryWritten> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="68165-677">When you create an <xref:System.Diagnostics.EventLog.EntryWritten> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="68165-678">イベントをイベント ハンドラーに関連付けるには、デリゲートのインスタンスをイベントに追加します。</span><span class="sxs-lookup"><span data-stu-id="68165-678">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="68165-679">デリゲートを削除するまで、イベントが発生するたびに、イベント ハンドラーが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="68165-679">The event handler is called whenever the event occurs, until you remove the delegate.</span></span> <span data-ttu-id="68165-680">デリゲートとイベントの処理についての詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="68165-680">For more information about handling events with delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="68165-681">システムに応答する<xref:System.Diagnostics.EventLog.WriteEntry%2A>最後の書き込みイベントには、少なくとも 6 秒前が発生した場合のみです。</span><span class="sxs-lookup"><span data-stu-id="68165-681">The system responds to <xref:System.Diagnostics.EventLog.WriteEntry%2A> only if the last write event occurred at least six seconds previously.</span></span> <span data-ttu-id="68165-682">つまり、受信はのみ<xref:System.Diagnostics.EventLog.EntryWritten>イベント通知、6 秒間隔に含まれる場合でも、1 つ以上のイベント ログの変更が発生します。</span><span class="sxs-lookup"><span data-stu-id="68165-682">This implies you will only receive one <xref:System.Diagnostics.EventLog.EntryWritten> event notification within a six-second interval, even if more than one event log change occurs.</span></span> <span data-ttu-id="68165-683">呼び出しの間で十分に長いスリープ間隔 (約 10 秒) を挿入する場合<xref:System.Diagnostics.EventLog.WriteEntry%2A>イベントを見逃す可能性が少なくします。</span><span class="sxs-lookup"><span data-stu-id="68165-683">If you insert a sufficiently long sleep interval (around 10 seconds) between calls to <xref:System.Diagnostics.EventLog.WriteEntry%2A>, you are less likely to miss an event.</span></span> <span data-ttu-id="68165-684">ただし、書き込みイベントが頻繁に発生する場合に、次の間隔までのイベント通知を受信しません可能性があります。</span><span class="sxs-lookup"><span data-stu-id="68165-684">However, if write events occur more frequently, you might not receive the event notification until the next interval.</span></span> <span data-ttu-id="68165-685">通常、見逃されたイベント通知は失われませんが、遅延します。</span><span class="sxs-lookup"><span data-stu-id="68165-685">Typically, missed event notifications are not lost, but delayed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-686">次の例では、エントリ書き込みイベントを処理します。</span><span class="sxs-lookup"><span data-stu-id="68165-686">The following example handles an entry written event.</span></span>  
  
 [!code-cpp[Classic EventLog.EntryWritten Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.EntryWritten Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.EntryWritten Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.EntryWritten Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.EntryWritten Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.EntryWritten Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-687">コンピューターのイベント ログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="68165-687">for administering event log information on the computer.</span></span> <span data-ttu-id="68165-688">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="68165-688">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.EnableRaisingEvents" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Exists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68165-689">指定したログが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="68165-689">Determines whether the specified log exists.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Exists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (logName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ logName);" />
      <MemberSignature Language="F#" Value="static member Exists : string -&gt; bool" Usage="System.Diagnostics.EventLog.Exists logName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="68165-690">検索するログの名前。</span><span class="sxs-lookup"><span data-stu-id="68165-690">The name of the log to search for.</span></span> <span data-ttu-id="68165-691">次のような値となる場合があります。アプリケーション、セキュリティ、システム、アプリケーション固有のその他のログ (Active Directory に関連するログなど)、またはコンピューター上の任意のカスタム ログ。</span><span class="sxs-lookup"><span data-stu-id="68165-691">Possible values include: Application, Security, System, other application-specific logs (such as those associated with Active Directory), or any custom log on the computer.</span></span></param>
        <summary><span data-ttu-id="68165-692">ローカル コンピューター上にログが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="68165-692">Determines whether the log exists on the local computer.</span></span></summary>
        <returns><span data-ttu-id="68165-693">ローカル コンピューター上にログが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68165-693"><see langword="true" /> if the log exists on the local computer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-694">ローカル コンピューターのログが存在するかどうかを判断するのにには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="68165-694">Use this method to determine if a log exists on the local computer.</span></span> <span data-ttu-id="68165-695">使用して、ローカル コンピューターで、ソースが存在するかどうかを確認する<xref:System.Diagnostics.EventLog.SourceExists%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-695">If you want to determine whether a source exists on the local computer, use <xref:System.Diagnostics.EventLog.SourceExists%2A>.</span></span>  
  
 <span data-ttu-id="68165-696">このメソッドが、レジストリにアクセスするため、ローカル コンピューターに適切なレジストリのアクセス許可が必要クエリを返しますそれ以外の場合、`false`します。</span><span class="sxs-lookup"><span data-stu-id="68165-696">Because this method accesses the registry, you must have the appropriate registry permissions on the local computer; otherwise, the query returns `false`.</span></span>  
  
 <span data-ttu-id="68165-697">同じコンピューターに新しいログを既存のログの名前を付けることはできませんは、新しいログを作成する前にこのメソッドをかどうかを使用して、指定した`logName`ローカル コンピューターに既に存在します。</span><span class="sxs-lookup"><span data-stu-id="68165-697">Because you cannot give a new log the name of an existing log on the same computer, use this method before creating a new log to determine if the specified `logName` already exists on the local computer.</span></span> <span data-ttu-id="68165-698">`logName`パラメーターは大文字小文字が区別されません。</span><span class="sxs-lookup"><span data-stu-id="68165-698">The `logName` parameter is not case sensitive.</span></span>  
  
 <span data-ttu-id="68165-699"><xref:System.Diagnostics.EventLog.Exists%2A> `static`メソッド、クラス自体で呼び出せるようにします。</span><span class="sxs-lookup"><span data-stu-id="68165-699"><xref:System.Diagnostics.EventLog.Exists%2A> is a `static` method, so it can be called on the class itself.</span></span> <span data-ttu-id="68165-700">インスタンスを作成する必要はありません<xref:System.Diagnostics.EventLog>を呼び出す<xref:System.Diagnostics.EventLog.Exists%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-700">It is not necessary to create an instance of <xref:System.Diagnostics.EventLog> to call <xref:System.Diagnostics.EventLog.Exists%2A>.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_Exists_1#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_Exists_1/CPP/eventlog_exists_1.cpp#1)]
 [!code-csharp[EventLog_Exists_1#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_Exists_1/CS/eventlog_exists_1.cs#1)]
 [!code-vb[EventLog_Exists_1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_Exists_1/VB/eventlog_exists_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-701">logName が <see langword="null" /> です。または値が空です。</span><span class="sxs-lookup"><span data-stu-id="68165-701">The logName is <see langword="null" /> or the value is empty.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-702">コンピューターのイベント ログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="68165-702">for administering event log information on the computer.</span></span> <span data-ttu-id="68165-703">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="68165-703">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string logName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string logName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Exists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (logName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ logName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member Exists : string * string -&gt; bool" Usage="System.Diagnostics.EventLog.Exists (logName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="68165-704">検索するログ。</span><span class="sxs-lookup"><span data-stu-id="68165-704">The log for which to search.</span></span> <span data-ttu-id="68165-705">次のような値となる場合があります。アプリケーション、セキュリティ、システム、アプリケーション固有のその他のログ (Active Directory に関連するログなど)、またはコンピューター上の任意のカスタム ログ。</span><span class="sxs-lookup"><span data-stu-id="68165-705">Possible values include: Application, Security, System, other application-specific logs (such as those associated with Active Directory), or any custom log on the computer.</span></span></param>
        <param name="machineName"><span data-ttu-id="68165-706">ログ検索の対象となるコンピューターの名前。ローカル コンピューターの場合は "."。</span><span class="sxs-lookup"><span data-stu-id="68165-706">The name of the computer on which to search for the log, or "." for the local computer.</span></span></param>
        <summary><span data-ttu-id="68165-707">指定したコンピューター上にログが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="68165-707">Determines whether the log exists on the specified computer.</span></span></summary>
        <returns><span data-ttu-id="68165-708">指定したコンピューター上にログが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68165-708"><see langword="true" /> if the log exists on the specified computer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-709">ログがリモート コンピューター上に存在するかどうかを判断するのにには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="68165-709">Use this method to determine if a log exists on a remote computer.</span></span> <span data-ttu-id="68165-710">リモート コンピューターで、ソースが存在するかどうかを確認する<xref:System.Diagnostics.EventLog.SourceExists%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-710">If you want to determine whether a source exists on a remote computer, use <xref:System.Diagnostics.EventLog.SourceExists%2A>.</span></span>  
  
 <span data-ttu-id="68165-711">このメソッドが、レジストリにアクセスするため、適切なレジストリ アクセス許可が必要です。 指定したコンピューター上クエリを返しますそれ以外の場合、`false`します。</span><span class="sxs-lookup"><span data-stu-id="68165-711">Because this method accesses the registry, you must have the appropriate registry permissions on the specified computer; otherwise, the query returns `false`.</span></span>  
  
 <span data-ttu-id="68165-712">同じコンピューターに新しいログを既存のログの名前を付けることはできませんは、新しいログを作成する前にこのメソッドを 1 つであるかどうかを使用して、指定した`logName`で指定されたサーバーに既に存在する、`machineName`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="68165-712">Because you cannot give a new log the name of an existing log on the same computer, use this method before creating a new log to determine if one with the specified `logName` already exists on the server specified by the `machineName` parameter.</span></span> <span data-ttu-id="68165-713">`logName`と`machineName`パラメーターは大文字小文字が区別されません。</span><span class="sxs-lookup"><span data-stu-id="68165-713">The `logName` and `machineName` parameters are not case sensitive.</span></span>  
  
 <span data-ttu-id="68165-714"><xref:System.Diagnostics.EventLog.Exists%2A> `static`メソッド、クラス自体で呼び出せるようにします。</span><span class="sxs-lookup"><span data-stu-id="68165-714"><xref:System.Diagnostics.EventLog.Exists%2A> is a `static` method, so it can be called on the class itself.</span></span> <span data-ttu-id="68165-715">新しいインスタンスを作成する必要はありません<xref:System.Diagnostics.EventLog>を呼び出す<xref:System.Diagnostics.EventLog.Exists%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-715">It is not necessary to create a new instance of <xref:System.Diagnostics.EventLog> to call <xref:System.Diagnostics.EventLog.Exists%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-716"><paramref name="machineName" /> パラメーターの書式が無効です。</span><span class="sxs-lookup"><span data-stu-id="68165-716">The <paramref name="machineName" /> parameter is an invalid format.</span></span> <span data-ttu-id="68165-717">検索しているコンピューターに対して正しい構文を使用したかどうかを確認してください。</span><span class="sxs-lookup"><span data-stu-id="68165-717">Make sure you have used proper syntax for the computer on which you are searching.</span></span>  
  
<span data-ttu-id="68165-718">または</span><span class="sxs-lookup"><span data-stu-id="68165-718">-or-</span></span> 
<span data-ttu-id="68165-719"><paramref name="logName" /> が <see langword="null" /> です。または値が空です。</span><span class="sxs-lookup"><span data-stu-id="68165-719">The <paramref name="logName" /> is <see langword="null" /> or the value is empty.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-720">コンピューターのイベント ログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="68165-720">for administering event log information on the computer.</span></span> <span data-ttu-id="68165-721">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="68165-721">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEventLogs">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68165-722">イベント ログの配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-722">Creates an array of the event logs.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEventLogs">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.EventLog[] GetEventLogs ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.EventLog[] GetEventLogs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.GetEventLogs" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEventLogs () As EventLog()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::EventLog ^&gt; ^ GetEventLogs();" />
      <MemberSignature Language="F#" Value="static member GetEventLogs : unit -&gt; System.Diagnostics.EventLog[]" Usage="System.Diagnostics.EventLog.GetEventLogs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLog[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68165-723">ローカル コンピューター上のすべてのイベント ログを検索し、リストを格納する <see cref="T:System.Diagnostics.EventLog" /> オブジェクトの配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-723">Searches for all event logs on the local computer and creates an array of <see cref="T:System.Diagnostics.EventLog" /> objects that contain the list.</span></span></summary>
        <returns><span data-ttu-id="68165-724">ローカル コンピューター上のログを表す <see cref="T:System.Diagnostics.EventLog" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="68165-724">An array of type <see cref="T:System.Diagnostics.EventLog" /> that represents the logs on the local computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-725">配列<xref:System.Diagnostics.EventLog>オブジェクトは、ローカル コンピューター上のすべてのイベント ログのスナップショットとへの呼び出し<xref:System.Diagnostics.EventLog.GetEventLogs%2A>されます。</span><span class="sxs-lookup"><span data-stu-id="68165-725">The array of <xref:System.Diagnostics.EventLog> objects is a snapshot of all event logs on the local computer when the call to <xref:System.Diagnostics.EventLog.GetEventLogs%2A> is made.</span></span> <span data-ttu-id="68165-726">これは、動的なコレクションのため、リアルタイムでログの作成または削除は反映されません。</span><span class="sxs-lookup"><span data-stu-id="68165-726">This is not a dynamic collection, so it does not reflect the deletion or creation of logs in real time.</span></span> <span data-ttu-id="68165-727">読み取りまたは書き込みを実行する前に、配列内のログが存在することを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-727">You should verify that a log in the array exists before you read or write to it.</span></span> <span data-ttu-id="68165-728">通常、配列には、少なくとも 3 つのログが含まれています。アプリケーション、システム、およびセキュリティ。</span><span class="sxs-lookup"><span data-stu-id="68165-728">The array usually includes at least three logs: Application, System, and Security.</span></span> <span data-ttu-id="68165-729">ローカル コンピューターのカスタム ログを作成した場合も、配列に表示されます。</span><span class="sxs-lookup"><span data-stu-id="68165-729">If you created custom logs on the local computer, they will appear in the array as well.</span></span>  
  
 <span data-ttu-id="68165-730">イベント ログの一覧を取得するには、適切なレジストリ権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-730">To retrieve the list of event logs, you must have the appropriate registry permissions.</span></span> <span data-ttu-id="68165-731">これらのアクセス許可が呼び出しに必要なものと同じ<xref:System.Diagnostics.EventLog.Exists%2A>と<xref:System.Diagnostics.EventLog.SourceExists%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-731">These permissions are identical to those required to call <xref:System.Diagnostics.EventLog.Exists%2A> and <xref:System.Diagnostics.EventLog.SourceExists%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-732">次の例では、ローカル コンピューターでは、定義されたイベント ログを列挙し、各イベント ログの構成の詳細が表示されます。</span><span class="sxs-lookup"><span data-stu-id="68165-732">The following example enumerates the event logs defined on the local computer, and displays configuration details for each event log.</span></span>  
  
 [!code-cpp[EventLogProperties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogProperties/CPP/source.cpp#2)]
 [!code-csharp[EventLogProperties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogProperties/CS/source.cs#2)]
 [!code-vb[EventLogProperties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogProperties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="68165-733">レジストリの読み取りアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="68165-733">You do not have read access to the registry.</span></span>  
  
 <span data-ttu-id="68165-734">または</span><span class="sxs-lookup"><span data-stu-id="68165-734">-or-</span></span>  
  
 <span data-ttu-id="68165-735">コンピューター上にイベント ログ サービスがありません。</span><span class="sxs-lookup"><span data-stu-id="68165-735">There is no event log service on the computer.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-736">コンピューターのイベント ログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="68165-736">for administering event log information on the computer.</span></span> <span data-ttu-id="68165-737">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="68165-737">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
      </Docs>
    </Member>
    <Member MemberName="GetEventLogs">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.EventLog[] GetEventLogs (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.EventLog[] GetEventLogs(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.GetEventLogs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEventLogs (machineName As String) As EventLog()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::EventLog ^&gt; ^ GetEventLogs(System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member GetEventLogs : string -&gt; System.Diagnostics.EventLog[]" Usage="System.Diagnostics.EventLog.GetEventLogs machineName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLog[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName"><span data-ttu-id="68165-738">イベント ログの検索対象となるコンピューター。</span><span class="sxs-lookup"><span data-stu-id="68165-738">The computer on which to search for event logs.</span></span></param>
        <summary><span data-ttu-id="68165-739">指定したコンピューター上のすべてのイベント ログを検索し、リストを格納する <see cref="T:System.Diagnostics.EventLog" /> オブジェクトの配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-739">Searches for all event logs on the given computer and creates an array of <see cref="T:System.Diagnostics.EventLog" /> objects that contain the list.</span></span></summary>
        <returns><span data-ttu-id="68165-740">指定したコンピューター上のログを表す <see cref="T:System.Diagnostics.EventLog" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="68165-740">An array of type <see cref="T:System.Diagnostics.EventLog" /> that represents the logs on the given computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-741">配列<xref:System.Diagnostics.EventLog>オブジェクトで指定されたコンピューター上のすべてのイベント ログのスナップショットは、`machineName`パラメーターと呼び出し<xref:System.Diagnostics.EventLog.GetEventLogs%2A>されます。</span><span class="sxs-lookup"><span data-stu-id="68165-741">The array of <xref:System.Diagnostics.EventLog> objects is a snapshot of all event logs on the computer specified by the `machineName` parameter when the call to <xref:System.Diagnostics.EventLog.GetEventLogs%2A> is made.</span></span> <span data-ttu-id="68165-742">これは、動的なコレクションのため、リアルタイムでログの作成または削除は反映されません。</span><span class="sxs-lookup"><span data-stu-id="68165-742">This is not a dynamic collection, so it does not reflect the deletion or creation of logs in real time.</span></span> <span data-ttu-id="68165-743">読み取りまたは書き込みを実行する前に、配列内のログが存在することを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-743">You should verify that a log in the array exists before you read or write to it.</span></span> <span data-ttu-id="68165-744">通常、配列には、少なくとも 3 つのログが含まれています。アプリケーション、システム、およびセキュリティ。</span><span class="sxs-lookup"><span data-stu-id="68165-744">The array usually includes at least three logs: Application, System, and Security.</span></span> <span data-ttu-id="68165-745">指定したコンピューター上のカスタム ログを作成した場合も、配列に表示されます。</span><span class="sxs-lookup"><span data-stu-id="68165-745">If you created custom logs on the specified computer, they will appear in the array as well.</span></span>  
  
 <span data-ttu-id="68165-746"><xref:System.Diagnostics.EventLog.GetEventLogs%2A> `static`メソッドを呼び出せるように、<xref:System.Diagnostics.EventLog>クラス自体。</span><span class="sxs-lookup"><span data-stu-id="68165-746"><xref:System.Diagnostics.EventLog.GetEventLogs%2A> is a `static` method, so it can be called on the <xref:System.Diagnostics.EventLog> class itself.</span></span> <span data-ttu-id="68165-747">インスタンスを作成する必要はありません、<xref:System.Diagnostics.EventLog>メソッドに呼び出しを実行するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="68165-747">It is not necessary to create an instance of an <xref:System.Diagnostics.EventLog> object to make a call to the method.</span></span>  
  
 <span data-ttu-id="68165-748">イベント ログの一覧を取得するには、適切なレジストリ権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-748">To retrieve the list of event logs, you must have the appropriate registry permissions.</span></span> <span data-ttu-id="68165-749">これらのアクセス許可が呼び出しに必要なものと同じ<xref:System.Diagnostics.EventLog.Exists%2A>と<xref:System.Diagnostics.EventLog.SourceExists%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-749">These permissions are identical to those required to call <xref:System.Diagnostics.EventLog.Exists%2A> and <xref:System.Diagnostics.EventLog.SourceExists%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-750">次の例では、"myServer"のコンピューター上のログの一覧を取得します。</span><span class="sxs-lookup"><span data-stu-id="68165-750">The following example gets a list of logs on the computer "myServer".</span></span> <span data-ttu-id="68165-751">各ログの名前が出力されます。</span><span class="sxs-lookup"><span data-stu-id="68165-751">It then outputs the name of each log.</span></span>  
  
 [!code-cpp[Classic EventLog.GetEventLogs1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.GetEventLogs1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.GetEventLogs1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.GetEventLogs1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.GetEventLogs1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.GetEventLogs1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-752"><paramref name="machineName" /> パラメーターに無効なコンピューター名が指定されています。</span><span class="sxs-lookup"><span data-stu-id="68165-752">The <paramref name="machineName" /> parameter is an invalid computer name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-753">レジストリの読み取りアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="68165-753">You do not have read access to the registry.</span></span>  
  
 <span data-ttu-id="68165-754">または</span><span class="sxs-lookup"><span data-stu-id="68165-754">-or-</span></span>  
  
 <span data-ttu-id="68165-755">コンピューター上にイベント ログ サービスがありません。</span><span class="sxs-lookup"><span data-stu-id="68165-755">There is no event log service on the computer.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-756">コンピューターのイベント ログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="68165-756">for administering event log information on the computer.</span></span> <span data-ttu-id="68165-757">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="68165-757">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public string Log { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Log" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.Log" />
      <MemberSignature Language="VB.NET" Value="Public Property Log As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Log { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Log : string with get, set" Usage="System.Diagnostics.EventLog.Log" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.LogConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Name of the log that is read and written.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.LogConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogLog")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.LogConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68165-758">読み取るログまたは書き込むログの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="68165-758">Gets or sets the name of the log to read from or write to.</span></span></summary>
        <value><span data-ttu-id="68165-759">ログの名前。</span><span class="sxs-lookup"><span data-stu-id="68165-759">The name of the log.</span></span> <span data-ttu-id="68165-760">ログ名には、アプリケーション ログ名、システム ログ名、セキュリティ ログ名、またはカスタム ログ名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="68165-760">This can be Application, System, Security, or a custom log name.</span></span> <span data-ttu-id="68165-761">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="68165-761">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-762">次の 3 つのログ ファイルは、既定で、サーバーが存在します。アプリケーション、システム、およびセキュリティ。</span><span class="sxs-lookup"><span data-stu-id="68165-762">Three log files exist by default on the server: Application, System, and Security.</span></span> <span data-ttu-id="68165-763">アプリケーションとサービスは、アプリケーションのログ ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="68165-763">Applications and services use the Application log file.</span></span> <span data-ttu-id="68165-764">デバイス ドライバーは、システム ログ ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="68165-764">Device drivers use the System log file.</span></span> <span data-ttu-id="68165-765">監査をオンにすると、セキュリティ ログで成功と失敗の監査イベントが生成されます。</span><span class="sxs-lookup"><span data-stu-id="68165-765">The system generates success and failure audit events in the Security log when auditing is turned on.</span></span> <span data-ttu-id="68165-766">Windows のサーバー上の Active Directory のように、インストールされている他のアプリケーションがある場合、その他の既定のログ ファイルがあります。</span><span class="sxs-lookup"><span data-stu-id="68165-766">If you have other applications installed, like Active Directory on Windows servers, there might be other default log files.</span></span> <span data-ttu-id="68165-767">さらに、ローカルまたはリモート コンピューター上のカスタム ログ ファイルを作成することができます。</span><span class="sxs-lookup"><span data-stu-id="68165-767">In addition, you can create custom log files on a local or remote computer.</span></span> <span data-ttu-id="68165-768">カスタム ログは、既定のアプリケーション ログにイベントを書き込むときに許可されているより詳細な方法で、エントリを整理します。</span><span class="sxs-lookup"><span data-stu-id="68165-768">Custom logs help organize your entries in a more detailed way than is allowed when your components write events to the default Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-769">ログ名は、8 文字に制限されます。</span><span class="sxs-lookup"><span data-stu-id="68165-769">Log names are limited to eight characters.</span></span> <span data-ttu-id="68165-770">システムに従って MyLogSample1 と MyLogSample2 は、同じログです。</span><span class="sxs-lookup"><span data-stu-id="68165-770">According to the system, MyLogSample1 and MyLogSample2 are the same log.</span></span>  
  
 <span data-ttu-id="68165-771">イベント ログに記述する場合は指定するのに十分な<xref:System.Diagnostics.EventLog.Log%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="68165-771">If you write to an event log, it is not enough to specify the <xref:System.Diagnostics.EventLog.Log%2A> property.</span></span> <span data-ttu-id="68165-772">関連付ける必要があります、<xref:System.Diagnostics.EventLog.Source%2A>特定のログに接続するようにイベント ログ リソースを持つプロパティです。</span><span class="sxs-lookup"><span data-stu-id="68165-772">You must associate a <xref:System.Diagnostics.EventLog.Source%2A> property with your event log resource to connect it to a particular log.</span></span> <span data-ttu-id="68165-773">指定する必要はありません、<xref:System.Diagnostics.EventLog.Source%2A>ときに、ログがイベント ソースからの読み取りのみがあります、サーバーのレジストリのイベント ログのリソースに関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="68165-773">It is not necessary to specify a <xref:System.Diagnostics.EventLog.Source%2A> when only reading from a log, but an event source must be associated with the event log resource in the server's registry.</span></span> <span data-ttu-id="68165-774">のみを指定することができます、<xref:System.Diagnostics.EventLog.Log%2A>名と<xref:System.Diagnostics.EventLog.MachineName%2A>からの読み取りに (サーバーのコンピューター名)。</span><span class="sxs-lookup"><span data-stu-id="68165-774">You can specify only the <xref:System.Diagnostics.EventLog.Log%2A> name and <xref:System.Diagnostics.EventLog.MachineName%2A> (server computer name) to read from it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-775">指定する必要はありません、<xref:System.Diagnostics.EventLog.MachineName%2A>をログに接続している場合。</span><span class="sxs-lookup"><span data-stu-id="68165-775">You are not required to specify the <xref:System.Diagnostics.EventLog.MachineName%2A> if you are connecting to a log.</span></span> <span data-ttu-id="68165-776">指定しない場合、 <xref:System.Diagnostics.EventLog.MachineName%2A>、ローカル コンピューター (".") と見なされます。</span><span class="sxs-lookup"><span data-stu-id="68165-776">If you do not specify the <xref:System.Diagnostics.EventLog.MachineName%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="68165-777">場合、<xref:System.Diagnostics.EventLog.Source%2A>プロパティが指定されていないへの呼び出し<xref:System.Diagnostics.EventLog.Log%2A>場合は、空の文字列を返します<xref:System.Diagnostics.EventLog.Log%2A>明示的に設定されていません (設定して、<xref:System.Diagnostics.EventLog.Log%2A>プロパティ、またはコンス トラクターを使用)。</span><span class="sxs-lookup"><span data-stu-id="68165-777">If the <xref:System.Diagnostics.EventLog.Source%2A> property has not been specified, a call to <xref:System.Diagnostics.EventLog.Log%2A> returns an empty string if <xref:System.Diagnostics.EventLog.Log%2A> has not been explicitly set (by setting the <xref:System.Diagnostics.EventLog.Log%2A> property, or through the constructor).</span></span> <span data-ttu-id="68165-778">場合、<xref:System.Diagnostics.EventLog.Source%2A>が指定されている<xref:System.Diagnostics.EventLog.Log%2A>そのソースが登録されているログの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="68165-778">If the <xref:System.Diagnostics.EventLog.Source%2A> has been specified, <xref:System.Diagnostics.EventLog.Log%2A> returns the name of the log to which that source was registered.</span></span>  
  
 <span data-ttu-id="68165-779">ソースは、一度に 1 つのログにのみ登録できます。</span><span class="sxs-lookup"><span data-stu-id="68165-779">A source can only be registered to one log at a time.</span></span> <span data-ttu-id="68165-780">場合、<xref:System.Diagnostics.EventLog.Source%2A>のインスタンスのプロパティが設定された<xref:System.Diagnostics.EventLog>、変更することはできません、<xref:System.Diagnostics.EventLog.Log%2A>プロパティを<xref:System.Diagnostics.EventLog>の値を変更することがなく<xref:System.Diagnostics.EventLog.Source%2A>呼び出しまたは<xref:System.Diagnostics.EventLog.DeleteEventSource%2A>最初。</span><span class="sxs-lookup"><span data-stu-id="68165-780">If the <xref:System.Diagnostics.EventLog.Source%2A> property was set for an instance of <xref:System.Diagnostics.EventLog>, you cannot change the <xref:System.Diagnostics.EventLog.Log%2A> property for that <xref:System.Diagnostics.EventLog> without changing the value of <xref:System.Diagnostics.EventLog.Source%2A> or calling <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> first.</span></span> <span data-ttu-id="68165-781">変更する場合、<xref:System.Diagnostics.EventLog.Log%2A>プロパティの後、<xref:System.Diagnostics.EventLog.Source%2A>プロパティが設定されて、例外をスローするログ エントリを記述します。</span><span class="sxs-lookup"><span data-stu-id="68165-781">If you change the <xref:System.Diagnostics.EventLog.Log%2A> property after the <xref:System.Diagnostics.EventLog.Source%2A> property has been set, writing a log entry throws an exception.</span></span>  
  
 <span data-ttu-id="68165-782">オペレーティング システムは、イベント ログをファイルとして格納します。</span><span class="sxs-lookup"><span data-stu-id="68165-782">The operating system stores event logs as files.</span></span> <span data-ttu-id="68165-783">使用すると<xref:System.Diagnostics.EventLogInstaller>または<xref:System.Diagnostics.EventLog.CreateEventSource%2A>指定したコンピューター上の %SystemRoot%\System32\Config ディレクトリに新しいイベント ログを作成する、関連付けられたファイルが格納されています。</span><span class="sxs-lookup"><span data-stu-id="68165-783">When you use <xref:System.Diagnostics.EventLogInstaller> or <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</span></span> <span data-ttu-id="68165-784">最初の 8 文字を付加して、ファイル名が設定されて、 <xref:System.Diagnostics.EventLog.Log%2A> ".evt"ファイル名拡張子を持つプロパティです。</span><span class="sxs-lookup"><span data-stu-id="68165-784">The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventLog.Log%2A> property with the ".evt" file name extension.</span></span>  
  
 <span data-ttu-id="68165-785">使用して新しいログを作成することはできません、<xref:System.Diagnostics.EventLog.Log%2A>プロパティ (なし、ログのソースを指定する) だけです。</span><span class="sxs-lookup"><span data-stu-id="68165-785">You cannot create a new log using the <xref:System.Diagnostics.EventLog.Log%2A> property alone (without specifying a source for the log).</span></span> <span data-ttu-id="68165-786">呼び出すことができます<xref:System.Diagnostics.EventLog.CreateEventSource%2A>、新しいログ名をパラメーターとして渡してを呼び出して<xref:System.Diagnostics.EventLog.DeleteEventSource%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-786">You can call <xref:System.Diagnostics.EventLog.CreateEventSource%2A>, passing in a new log name as a parameter, and then call <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>.</span></span> <span data-ttu-id="68165-787">ただし、目的は、通常、作成 (および、エントリを書き込む) をアプリケーションに固有の新しいログや、既存のログからの読み取り。</span><span class="sxs-lookup"><span data-stu-id="68165-787">However, the intent is usually either to create (and write entries to) new application-specific logs, or to read from existing logs.</span></span>  
  
 <span data-ttu-id="68165-788">場合、<xref:System.Diagnostics.EventLog.Log%2A>値の変更は、イベント ログが閉じられ、すべてのイベント ハンドルが解放されます。</span><span class="sxs-lookup"><span data-stu-id="68165-788">If the <xref:System.Diagnostics.EventLog.Log%2A> value changes, the event log is closed and all event handles are released.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="68165-789">設定した場合、<xref:System.Diagnostics.EventLog.Log%2A>プロパティが存在しないログの名前をシステムのアタッチ、<xref:System.Diagnostics.EventLog>アプリケーション ログには、警告ログ以外に指定した 1 つのログが使用されているが、します。</span><span class="sxs-lookup"><span data-stu-id="68165-789">If you set the <xref:System.Diagnostics.EventLog.Log%2A> property to the name of a log that does not exist, the system attaches the <xref:System.Diagnostics.EventLog> to the Application log, but does not warn you that it is using a log other than the one you specified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-790">次の例では、ローカル コンピューターのイベント ログ"NewEventLog"のエントリを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="68165-790">The following example reads entries in the event log, "NewEventLog", on the local computer.</span></span>  
  
 [!code-cpp[Classic EventLog.Log Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Log Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Log Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Log Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Log Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Log Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-791">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-791">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-792">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-792">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="T:System.Diagnostics.EventLogEntryCollection" />
      </Docs>
    </Member>
    <Member MemberName="LogDisplayName">
      <MemberSignature Language="C#" Value="public string LogDisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogDisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.LogDisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogDisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LogDisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogDisplayName : string" Usage="System.Diagnostics.EventLog.LogDisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68165-793">イベント ログの表示名を取得します。</span><span class="sxs-lookup"><span data-stu-id="68165-793">Gets the event log's friendly name.</span></span></summary>
        <value><span data-ttu-id="68165-794">システムのイベント ビューアーのイベント ログを表す名前。</span><span class="sxs-lookup"><span data-stu-id="68165-794">A name that represents the event log in the system's event viewer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="68165-795">Windows Vista 以降では、ユーザーには、セキュリティ ログにアクセスする権限はありません。</span><span class="sxs-lookup"><span data-stu-id="68165-795">In Windows Vista and later, users do not have permission to access the security log.</span></span> <span data-ttu-id="68165-796">Windows Vista を実行している場合、get がするユーザーは、後で、<xref:System.Security.SecurityException>しようとすると、セキュリティ ログのイベントの表示名にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="68165-796">If you are running Windows Vista or later as a user, you will get a <xref:System.Security.SecurityException> when you attempt to access the display name for an event in the security log.</span></span>  
>   
>  <span data-ttu-id="68165-797">Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。</span><span class="sxs-lookup"><span data-stu-id="68165-797">In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="68165-798">ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="68165-798">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="68165-799">既定では、ユーザーは標準ユーザー ロールに所属します。</span><span class="sxs-lookup"><span data-stu-id="68165-799">By default, you are in the standard user role.</span></span> <span data-ttu-id="68165-800">セキュリティ ログにアクセスするコードを実行するには標準ユーザーから管理者に、特権を昇格する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-800">To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="68165-801">この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。</span><span class="sxs-lookup"><span data-stu-id="68165-801">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-802">次の例は、ローカル コンピューターで定義されたイベント ログを列挙し、表示、<xref:System.Diagnostics.EventLog.LogDisplayName%2A>の各イベント ログ。</span><span class="sxs-lookup"><span data-stu-id="68165-802">The following example enumerates the event logs defined on the local computer and displays the <xref:System.Diagnostics.EventLog.LogDisplayName%2A> for each event log.</span></span>  
  
 [!code-cpp[EventLogProperties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogProperties/CPP/source.cpp#2)]
 [!code-csharp[EventLogProperties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogProperties/CS/source.cs#2)]
 [!code-vb[EventLogProperties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogProperties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-803">このコンピューターのレジストリに、指定した <see cref="P:System.Diagnostics.EventLog.Log" /> が存在しません。</span><span class="sxs-lookup"><span data-stu-id="68165-803">The specified <see cref="P:System.Diagnostics.EventLog.Log" /> does not exist in the registry for this computer.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-804">コンピューターのイベント ログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="68165-804">for administering event log information on the computer.</span></span> <span data-ttu-id="68165-805">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="68165-805">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="68165-806">指定されたレジストリ キーの読み取りに必要なアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="68165-806">for the ability to read the specified registry key.</span></span> <span data-ttu-id="68165-807">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="68165-807">Associated enumeration: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="68165-808">場合は指定されたレジストリ キーにアクセスする機能をリモートのキーになります。</span><span class="sxs-lookup"><span data-stu-id="68165-808">for the ability to access the specified registry key if it is a remote key.</span></span> <span data-ttu-id="68165-809">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="68165-809">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.RegisterDisplayName(System.String,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="LogNameFromSourceName">
      <MemberSignature Language="C#" Value="public static string LogNameFromSourceName (string source, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string LogNameFromSourceName(string source, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.LogNameFromSourceName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogNameFromSourceName (source As String, machineName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LogNameFromSourceName(System::String ^ source, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member LogNameFromSourceName : string * string -&gt; string" Usage="System.Diagnostics.EventLog.LogNameFromSourceName (source, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="68165-810">イベント ソースの名前。</span><span class="sxs-lookup"><span data-stu-id="68165-810">The name of the event source.</span></span></param>
        <param name="machineName"><span data-ttu-id="68165-811">検索対象のコンピューターの名前。ローカル コンピューターの場合は "."。</span><span class="sxs-lookup"><span data-stu-id="68165-811">The name of the computer on which to look, or "." for the local computer.</span></span></param>
        <summary><span data-ttu-id="68165-812">指定したソースが登録されているログの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="68165-812">Gets the name of the log to which the specified source is registered.</span></span></summary>
        <returns><span data-ttu-id="68165-813">レジストリ内で指定したソースに関連付けられているログの名前。</span><span class="sxs-lookup"><span data-stu-id="68165-813">The name of the log associated with the specified source in the registry.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-814">イベント ソースは、ログのイベントを示します。</span><span class="sxs-lookup"><span data-stu-id="68165-814">The event source indicates what logs the event.</span></span> <span data-ttu-id="68165-815">これは、アプリケーションが大きい場合多くの場合、アプリケーションの名前またはアプリケーションのサブコンポーネントの名前。</span><span class="sxs-lookup"><span data-stu-id="68165-815">It is often the name of the application, or the name of a subcomponent of the application, if the application is large.</span></span> <span data-ttu-id="68165-816">アプリケーションとサービスは、アプリケーション ログまたはカスタムのログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-816">Applications and services should write to the Application log or a custom log.</span></span> <span data-ttu-id="68165-817">デバイス ドライバーは、システム ログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-817">Device drivers should write to the System log.</span></span>  
  
 <span data-ttu-id="68165-818">できますのみログに書き込む 1 つずつ、新しいソースを作成するときに、システムは、有効なエントリのソースとしてイベント ログに、アプリケーションを登録します。</span><span class="sxs-lookup"><span data-stu-id="68165-818">When you create a new source, which can only write to one log at a time, the system registers your application with the event log as a valid source of entries.</span></span> <span data-ttu-id="68165-819"><xref:System.Diagnostics.EventLog.Source%2A>プロパティは、任意の文字列を指定できますが、コンピューター上の他のソースで名前は使用できません。</span><span class="sxs-lookup"><span data-stu-id="68165-819">The <xref:System.Diagnostics.EventLog.Source%2A> property can be any string, but the name cannot be used by other sources on the computer.</span></span> <span data-ttu-id="68165-820">作成、複製されたしよう<xref:System.Diagnostics.EventLog.Source%2A>値は、例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="68165-820">An attempt to create a duplicated <xref:System.Diagnostics.EventLog.Source%2A> value throws an exception.</span></span> <span data-ttu-id="68165-821">ただし、1 つのイベント ログには、さまざまなソースを書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="68165-821">However, a single event log can have many different sources writing to it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-822">次の例では、ローカル コンピューターから、ソースを削除します。</span><span class="sxs-lookup"><span data-stu-id="68165-822">The following example deletes a source from the local computer.</span></span> <span data-ttu-id="68165-823">この例では、ソースからログを特定し、ログを削除します。</span><span class="sxs-lookup"><span data-stu-id="68165-823">The example determines the log from its source, and then deletes the log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-824">複数のソースは、イベント ログに書き込む可能性があります。</span><span class="sxs-lookup"><span data-stu-id="68165-824">More than one source might write to an event log.</span></span> <span data-ttu-id="68165-825">カスタム ログを削除する前にそのログへの書き込み、その他のソースがないになっていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="68165-825">Before deleting a custom log, make sure there are no other sources writing to that log.</span></span>  
  
 [!code-cpp[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-826">コンピューターのイベント ログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="68165-826">for administering event log information on the computer.</span></span> <span data-ttu-id="68165-827">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="68165-827">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string with get, set" Usage="System.Diagnostics.EventLog.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Name of the machine that this log get written to.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogMachineName")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68165-828">イベントを読み取るコンピューターまたは書き込むコンピューターの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="68165-828">Gets or sets the name of the computer on which to read or write events.</span></span></summary>
        <value><span data-ttu-id="68165-829">イベント ログが存在するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="68165-829">The name of the server on which the event log resides.</span></span> <span data-ttu-id="68165-830">既定値はローカル コンピューター (".") です。</span><span class="sxs-lookup"><span data-stu-id="68165-830">The default is the local computer (".").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-831">イベント ログに記述する場合に関連付ける必要があります、<xref:System.Diagnostics.EventLog.Source%2A>特定のログに接続するため、イベント ログ オブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="68165-831">If you write to an event log, you must associate a <xref:System.Diagnostics.EventLog.Source%2A> with your event log object to connect it to a particular log.</span></span> <span data-ttu-id="68165-832">指定する必要はありません、<xref:System.Diagnostics.EventLog.Source%2A>プロパティのみをログから読み取るときにします。</span><span class="sxs-lookup"><span data-stu-id="68165-832">It is not necessary to specify the <xref:System.Diagnostics.EventLog.Source%2A> property when only reading from a log.</span></span> <span data-ttu-id="68165-833">のみを指定することができます、<xref:System.Diagnostics.EventLog.Log%2A>名と<xref:System.Diagnostics.EventLog.MachineName%2A>(サーバーのコンピューター名)。</span><span class="sxs-lookup"><span data-stu-id="68165-833">You can specify only the <xref:System.Diagnostics.EventLog.Log%2A> name and <xref:System.Diagnostics.EventLog.MachineName%2A> (server computer name).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-834">指定する必要はありません、<xref:System.Diagnostics.EventLog.MachineName%2A>をログに接続している場合。</span><span class="sxs-lookup"><span data-stu-id="68165-834">You need not specify the <xref:System.Diagnostics.EventLog.MachineName%2A> if you are connecting to a log.</span></span> <span data-ttu-id="68165-835">指定しない場合、 <xref:System.Diagnostics.EventLog.MachineName%2A>、ローカル コンピューター (".") と見なされます。</span><span class="sxs-lookup"><span data-stu-id="68165-835">If you do not specify the <xref:System.Diagnostics.EventLog.MachineName%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="68165-836">ソースは、一度に 1 つのログにのみ登録できます。</span><span class="sxs-lookup"><span data-stu-id="68165-836">A source can only be registered to one log at a time.</span></span> <span data-ttu-id="68165-837">場合、<xref:System.Diagnostics.EventLog.Source%2A>のインスタンスのプロパティが設定された<xref:System.Diagnostics.EventLog>、変更することはできません、<xref:System.Diagnostics.EventLog.MachineName%2A>プロパティを<xref:System.Diagnostics.EventLog>の値を変更することがなく<xref:System.Diagnostics.EventLog.Source%2A>呼び出しまたは<xref:System.Diagnostics.EventLog.DeleteEventSource%2A>最初。</span><span class="sxs-lookup"><span data-stu-id="68165-837">If the <xref:System.Diagnostics.EventLog.Source%2A> property was set for an instance of <xref:System.Diagnostics.EventLog>, you cannot change the <xref:System.Diagnostics.EventLog.MachineName%2A> property for that <xref:System.Diagnostics.EventLog> without changing the value of <xref:System.Diagnostics.EventLog.Source%2A> or calling <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> first.</span></span> <span data-ttu-id="68165-838">変更した場合、<xref:System.Diagnostics.EventLog.MachineName%2A>プロパティ、<xref:System.Diagnostics.EventLog>すべてのハンドルを閉じ、ログと、新しいコンピューター上のソースに再アタッチします。</span><span class="sxs-lookup"><span data-stu-id="68165-838">If you change the <xref:System.Diagnostics.EventLog.MachineName%2A> property, the <xref:System.Diagnostics.EventLog> closes all handles and reattaches to the log and source on the new computer.</span></span>  
  
 <span data-ttu-id="68165-839"><xref:System.Diagnostics.EventLog.MachineName%2A>値が空の文字列にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="68165-839">The <xref:System.Diagnostics.EventLog.MachineName%2A> value cannot be an empty string.</span></span> <span data-ttu-id="68165-840">明示的に設定されていない場合、ローカル コンピューターに既定値 (".")。</span><span class="sxs-lookup"><span data-stu-id="68165-840">If it is not explicitly set, it defaults to the local computer (".").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-841">次の例では、指定されたコンピューター上のイベント ログ"NewEventLog"のエントリを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="68165-841">The following example reads entries in the event log, "NewEventLog", on a specified computer.</span></span>  
  
 [!code-cpp[Classic EventLog.MachineName Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.MachineName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.MachineName Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.MachineName Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.MachineName Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.MachineName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-842">コンピューター名が無効です。</span><span class="sxs-lookup"><span data-stu-id="68165-842">The computer name is invalid.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-843">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-843">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-844">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-844">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.GetEventLogs" />
      </Docs>
    </Member>
    <Member MemberName="MaximumKilobytes">
      <MemberSignature Language="C#" Value="public long MaximumKilobytes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumKilobytes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.MaximumKilobytes" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumKilobytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumKilobytes { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumKilobytes : int64 with get, set" Usage="System.Diagnostics.EventLog.MaximumKilobytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68165-845">イベント ログの最大サイズを KB 単位で取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="68165-845">Gets or sets the maximum event log size in kilobytes.</span></span></summary>
        <value><span data-ttu-id="68165-846">イベント ログの最大サイズ。単位は KB です。</span><span class="sxs-lookup"><span data-stu-id="68165-846">The maximum event log size in kilobytes.</span></span> <span data-ttu-id="68165-847">既定値は、512 KB の最大ファイル サイズを示す 512 です。</span><span class="sxs-lookup"><span data-stu-id="68165-847">The default is 512, indicating a maximum file size of 512 kilobytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-848"><xref:System.Diagnostics.EventLog.MaximumKilobytes%2A>プロパティは、イベント ログ ファイルのサイズ制限を表します。</span><span class="sxs-lookup"><span data-stu-id="68165-848">The <xref:System.Diagnostics.EventLog.MaximumKilobytes%2A> property represents the size limit of the event log file.</span></span> <span data-ttu-id="68165-849">イベント ログが構成されているサイズ制限に達したとき<xref:System.Diagnostics.EventLog.OverflowAction%2A>値が新しいエントリが破棄されたかどうか、または新しいエントリが古いエントリを上書きするかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="68165-849">When the event log reaches the size limit, the configured <xref:System.Diagnostics.EventLog.OverflowAction%2A> value determines whether new entries are discarded, or whether new entries overwrite older entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-850">このプロパティは、このインスタンスで表される、イベント ログの構成設定を表します。</span><span class="sxs-lookup"><span data-stu-id="68165-850">This property represents a configuration setting for the event log represented by this instance.</span></span> <span data-ttu-id="68165-851">イベント ログには、最大サイズに達すると、このプロパティは、オペレーティング システムがイベント ログに登録されているすべてのイベント ソースによって書き込まれる新しいエントリを処理する方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="68165-851">When the event log reaches its maximum size, this property specifies how the operating system handles new entries written by all event sources registered for the event log.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-852">次の例では、ローカル コンピューターでは、定義されたイベント ログを列挙し、各イベント ログの構成の詳細が表示されます。</span><span class="sxs-lookup"><span data-stu-id="68165-852">The following example enumerates the event logs defined on the local computer, and displays configuration details for each event log.</span></span>  
  
 [!code-cpp[EventLogProperties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogProperties/CPP/source.cpp#2)]
 [!code-csharp[EventLogProperties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogProperties/CS/source.cs#2)]
 [!code-vb[EventLogProperties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogProperties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68165-853">指定した値が 64 未満か、4194240 を超える値です。または、64 の倍数ではありません。</span><span class="sxs-lookup"><span data-stu-id="68165-853">The specified value is less than 64, or greater than 4194240, or not an even multiple of 64.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-854"><see cref="P:System.Diagnostics.EventLog.Log" /> 値が有効なログ名ではありません。</span><span class="sxs-lookup"><span data-stu-id="68165-854">The <see cref="P:System.Diagnostics.EventLog.Log" /> value is not a valid log name.</span></span>  
  
<span data-ttu-id="68165-855">または</span><span class="sxs-lookup"><span data-stu-id="68165-855">-or-</span></span> 
<span data-ttu-id="68165-856">ターゲット コンピューター上のイベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-856">The registry key for the event log could not be opened on the target computer.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-857">コンピューターのイベント ログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="68165-857">for administering event log information on the computer.</span></span> <span data-ttu-id="68165-858">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="68165-858">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.OverflowAction" />
        <altmember cref="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MinimumRetentionDays">
      <MemberSignature Language="C#" Value="public int MinimumRetentionDays { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumRetentionDays" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.MinimumRetentionDays" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinimumRetentionDays As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumRetentionDays { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinimumRetentionDays : int" Usage="System.Diagnostics.EventLog.MinimumRetentionDays" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68165-859">イベント ログ内のエントリを保持する日数を取得します。</span><span class="sxs-lookup"><span data-stu-id="68165-859">Gets the number of days to retain entries in the event log.</span></span></summary>
        <value><span data-ttu-id="68165-860">イベント ログ内のエントリが保持される日数。</span><span class="sxs-lookup"><span data-stu-id="68165-860">The number of days that entries in the event log are retained.</span></span> <span data-ttu-id="68165-861">既定値は 7 です。</span><span class="sxs-lookup"><span data-stu-id="68165-861">The default value is 7.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-862">使用して、<xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A>プロパティをイベント ログの現在の設定を確認します。</span><span class="sxs-lookup"><span data-stu-id="68165-862">Use the <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> property to examine the current setting for an event log.</span></span> <span data-ttu-id="68165-863">使用<xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A>イベント ログ内の各エントリを保持する必要があります最小日数を変更します。</span><span class="sxs-lookup"><span data-stu-id="68165-863">Use <xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> to change the minimum number of days that each entry in the event log must be retained.</span></span>  
  
 <span data-ttu-id="68165-864"><xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A>値は、イベント ログのオーバーフロー動作に依存します。</span><span class="sxs-lookup"><span data-stu-id="68165-864">The <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> value depends on the configured overflow behavior of the event log.</span></span> <span data-ttu-id="68165-865">場合、 <xref:System.Diagnostics.OverflowAction> 、イベント ログのプロパティに設定されて<xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded>、<xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A>値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="68165-865">If the <xref:System.Diagnostics.OverflowAction> property for an event log is set to <xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded>, then the <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> value is 0.</span></span> <span data-ttu-id="68165-866">場合、 <xref:System.Diagnostics.OverflowAction> 、イベント ログのプロパティに設定されて<xref:System.Diagnostics.OverflowAction.DoNotOverwrite>、<xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A>値は-1 です。</span><span class="sxs-lookup"><span data-stu-id="68165-866">If the <xref:System.Diagnostics.OverflowAction> property for an event log is set to <xref:System.Diagnostics.OverflowAction.DoNotOverwrite>, then the <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> value is -1.</span></span> <span data-ttu-id="68165-867">場合、 <xref:System.Diagnostics.OverflowAction> 、イベント ログのプロパティに設定されて<xref:System.Diagnostics.OverflowAction.OverwriteOlder>、<xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A>値が 0 より大きいと、イベント ログがいっぱいになったときにイベント ログ エントリを保持する日数の数を表します。</span><span class="sxs-lookup"><span data-stu-id="68165-867">If the <xref:System.Diagnostics.OverflowAction> property for an event log is set to <xref:System.Diagnostics.OverflowAction.OverwriteOlder>, then the <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> value is greater than zero, and represents the number of days to retain event log entries when the event log is full.</span></span>  
  
 <span data-ttu-id="68165-868">オーバーフロー動作は、イベント ログがそのサイズの上限に達したときにのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="68165-868">The overflow behavior only occurs when an event log reaches its size limit.</span></span> <span data-ttu-id="68165-869">ときに、<xref:System.Diagnostics.EventLog>がその<xref:System.Diagnostics.EventLog.OverflowAction%2A>設定<xref:System.Diagnostics.OverflowAction.OverwriteOlder>、し、イベント ログが最大サイズに達すると、新しいエントリとして、年齢を超えるエントリを置き換えることができるかどうかにのみ書き込まれます、<xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A>期間。</span><span class="sxs-lookup"><span data-stu-id="68165-869">When an <xref:System.Diagnostics.EventLog> has its <xref:System.Diagnostics.EventLog.OverflowAction%2A> set to <xref:System.Diagnostics.OverflowAction.OverwriteOlder>, and the event log reaches its maximum size, then new entries are written only if they can replace entries whose age exceeds the <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> period.</span></span> <span data-ttu-id="68165-870">イベント エントリの最低限の期間の保持は、イベント ログを定期的にアーカイブする場合に適しています。</span><span class="sxs-lookup"><span data-stu-id="68165-870">Retaining event entries for a minimum period is appropriate when the event log is archived regularly.</span></span> <span data-ttu-id="68165-871">それ以外の場合、イベント ログが、上限に達するときに新しいエントリの損失する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="68165-871">Otherwise, you risk losing new entries when the event log reaches its limit.</span></span> <span data-ttu-id="68165-872">新しいイベント情報の損失を回避するには、特定のイベント ログのアーカイブ スケジュールに基づいたイベントの最小保持日数を設定します。</span><span class="sxs-lookup"><span data-stu-id="68165-872">To avoid losing new event information, set the minimum retention days for events based on your archive schedule for a particular event log.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-873">次の例では、ローカル コンピューターでは、定義されたイベント ログを列挙し、各イベント ログの構成の詳細が表示されます。</span><span class="sxs-lookup"><span data-stu-id="68165-873">The following example enumerates the event logs defined on the local computer, and displays configuration details for each event log.</span></span>  
  
 [!code-cpp[EventLogProperties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogProperties/CPP/source.cpp#2)]
 [!code-csharp[EventLogProperties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogProperties/CS/source.cs#2)]
 [!code-vb[EventLogProperties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogProperties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-874">コンピューターのイベント ログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="68165-874">for administering event log information on the computer.</span></span> <span data-ttu-id="68165-875">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="68165-875">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.MaximumKilobytes" />
        <altmember cref="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)" />
        <altmember cref="P:System.Diagnostics.EventLog.OverflowAction" />
      </Docs>
    </Member>
    <Member MemberName="ModifyOverflowPolicy">
      <MemberSignature Language="C#" Value="public void ModifyOverflowPolicy (System.Diagnostics.OverflowAction action, int retentionDays);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ModifyOverflowPolicy(valuetype System.Diagnostics.OverflowAction action, int32 retentionDays) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ModifyOverflowPolicy (action As OverflowAction, retentionDays As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ModifyOverflowPolicy(System::Diagnostics::OverflowAction action, int retentionDays);" />
      <MemberSignature Language="F#" Value="member this.ModifyOverflowPolicy : System.Diagnostics.OverflowAction * int -&gt; unit" Usage="eventLog.ModifyOverflowPolicy (action, retentionDays)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Diagnostics.OverflowAction" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="retentionDays" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="68165-876">イベント ログに新しいエントリを書き込むためのオーバーフロー動作。</span><span class="sxs-lookup"><span data-stu-id="68165-876">The overflow behavior for writing new entries to the event log.</span></span></param>
        <param name="retentionDays"><span data-ttu-id="68165-877">イベント ログの各エントリが保持される最小日数。</span><span class="sxs-lookup"><span data-stu-id="68165-877">The minimum number of days each event log entry is retained.</span></span> <span data-ttu-id="68165-878">このパラメーターは、<paramref name="action" /> が <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" /> に設定されている場合にのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="68165-878">This parameter is used only if <paramref name="action" /> is set to <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" />.</span></span></param>
        <summary><span data-ttu-id="68165-879">イベント ログが最大ファイル サイズに達した場合に、新しいエントリを書き込むように構成された動作を変更します。</span><span class="sxs-lookup"><span data-stu-id="68165-879">Changes the configured behavior for writing new entries when the event log reaches its maximum file size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-880">イベント ログのオーバーフロー動作では、新しいエントリが最大ファイル サイズに達したログに書き込まれるときの動作を指定します。</span><span class="sxs-lookup"><span data-stu-id="68165-880">The overflow behavior for an event log specifies what happens when new entries are to be written to a log that has reached its maximum file size.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-881">オーバーフロー動作は、イベント ログが最大ファイル サイズに達した場合にのみ反映されます。</span><span class="sxs-lookup"><span data-stu-id="68165-881">The overflow behavior takes effect only when an event log reaches its maximum file size.</span></span> <span data-ttu-id="68165-882">オーバーフロー動作は、追加のイベント ログ エントリに対応できるログに新しいエントリを書き込むには影響しません。</span><span class="sxs-lookup"><span data-stu-id="68165-882">The overflow behavior does not affect writing a new entry to a log that can accommodate additional event log entries.</span></span>  
  
 <span data-ttu-id="68165-883"><xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A>メソッドは、イベント ログのオーバーフロー動作を構成します。</span><span class="sxs-lookup"><span data-stu-id="68165-883">The <xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> method configures the overflow behavior of an event log.</span></span> <span data-ttu-id="68165-884"><xref:System.Diagnostics.EventLog> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="68165-884"><xref:System.Diagnostics.EventLog> instance.</span></span> <span data-ttu-id="68165-885">指定されたイベント ログにこのメソッドを呼び出した後、<xref:System.Diagnostics.EventLog.Log%2A>プロパティ、<xref:System.Diagnostics.EventLog.OverflowAction%2A>と<xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A>プロパティの値は、新しく構成されたオーバーフロー動作を反映します。</span><span class="sxs-lookup"><span data-stu-id="68165-885">After calling this method for the event log specified by the <xref:System.Diagnostics.EventLog.Log%2A> property, the <xref:System.Diagnostics.EventLog.OverflowAction%2A> and <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> property values reflect the newly configured overflow behavior.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-886">このプロパティは、このインスタンスで表される、イベント ログの構成設定を表します。</span><span class="sxs-lookup"><span data-stu-id="68165-886">This property represents a configuration setting for the event log represented by this instance.</span></span> <span data-ttu-id="68165-887">イベント ログには、最大サイズに達すると、このプロパティは、オペレーティング システムがイベント ログに登録されているすべてのイベント ソースによって書き込まれる新しいエントリを処理する方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="68165-887">When the event log reaches its maximum size, this property specifies how the operating system handles new entries written by all event sources registered for the event log.</span></span>  
  
 <span data-ttu-id="68165-888">設定、`action`パラメーターを<xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded>を新しいエントリが最も古いエントリを上書きすることを示すときに、<xref:System.Diagnostics.EventLog>最大サイズに達した。</span><span class="sxs-lookup"><span data-stu-id="68165-888">Set the `action` parameter to <xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded> to indicate that a new entry overwrites the oldest entry when the <xref:System.Diagnostics.EventLog> reaches its maximum size.</span></span> <span data-ttu-id="68165-889">場合、`action`にパラメーターが設定されている<xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded>、`retentionDays`パラメーターの値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="68165-889">If the `action` parameter is set to <xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded>, the `retentionDays` parameter value is ignored.</span></span>  
  
 <span data-ttu-id="68165-890">設定、`action`パラメーターを<xref:System.Diagnostics.OverflowAction.OverwriteOlder>を新しいエントリが古いエントリを上書きすることを示すときに、<xref:System.Diagnostics.EventLog>最大サイズに達した。</span><span class="sxs-lookup"><span data-stu-id="68165-890">Set the `action` parameter to <xref:System.Diagnostics.OverflowAction.OverwriteOlder> to indicate that each new entry overwrites older entries when the <xref:System.Diagnostics.EventLog> reaches its maximum size.</span></span> <span data-ttu-id="68165-891">ログを使用して、イベントを保持する日数を指定、`retentionDays`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="68165-891">Specify the number of days that events must be retained in the log using the `retentionDays` parameter.</span></span> <span data-ttu-id="68165-892">保有期間の範囲内のイベントは、新しいエントリでは上書きされません。</span><span class="sxs-lookup"><span data-stu-id="68165-892">Events written within the retention range are not overwritten by new entries.</span></span>  
  
 <span data-ttu-id="68165-893">設定、`action`パラメーターを<xref:System.Diagnostics.OverflowAction.DoNotOverwrite>最大ログ サイズに達すると、新しいイベントを破棄します。</span><span class="sxs-lookup"><span data-stu-id="68165-893">Set the `action` parameter to <xref:System.Diagnostics.OverflowAction.DoNotOverwrite> to discard new events when the maximum log size is reached.</span></span> <span data-ttu-id="68165-894">場合、`action`にパラメーターが設定されている<xref:System.Diagnostics.OverflowAction.DoNotOverwrite>、`retentionDays`パラメーターの値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="68165-894">If the `action` parameter is set to <xref:System.Diagnostics.OverflowAction.DoNotOverwrite>, the `retentionDays` parameter value is ignored.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="68165-895">オーバーフローのポリシーを設定<xref:System.Diagnostics.OverflowAction.DoNotOverwrite>イベント ログがいっぱいになったときに、新しいエントリが破棄されたことを指定します。</span><span class="sxs-lookup"><span data-stu-id="68165-895">Setting the overflow policy to <xref:System.Diagnostics.OverflowAction.DoNotOverwrite> specifies that new entries are discarded when the event log is full.</span></span> <span data-ttu-id="68165-896">この設定を使用する場合は、イベント ログが定期的にアーカイブし、その最大サイズの上限に達しないようにを確認します。</span><span class="sxs-lookup"><span data-stu-id="68165-896">If you use this setting, ensure the event log is regularly archived and cleared to avoid reaching its maximum size limit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-897">次の例では、特定のイベント ログのオーバーフローが構成されているポリシーを表示しを新しいイベント ログのオーバーフロー ポリシー設定を選択できます。</span><span class="sxs-lookup"><span data-stu-id="68165-897">The following example displays the configured overflow policy for a specified event log, and allows the user to select a new overflow policy setting for the event log.</span></span>  
  
 [!code-cpp[EventLogProperties#3](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogProperties/CPP/source.cpp#3)]
 [!code-csharp[EventLogProperties#3](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogProperties/CS/source.cs#3)]
 [!code-vb[EventLogProperties#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogProperties/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="68165-898"><paramref name="action" /> は有効な <see cref="P:System.Diagnostics.EventLog.OverflowAction" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="68165-898"><paramref name="action" /> is not a valid <see cref="P:System.Diagnostics.EventLog.OverflowAction" /> value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68165-899"><paramref name="retentionDays" /> が 1 未満であるか、365 を超えています。</span><span class="sxs-lookup"><span data-stu-id="68165-899"><paramref name="retentionDays" /> is less than one, or larger than 365.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-900"><see cref="P:System.Diagnostics.EventLog.Log" /> 値が有効なログ名ではありません。</span><span class="sxs-lookup"><span data-stu-id="68165-900">The <see cref="P:System.Diagnostics.EventLog.Log" /> value is not a valid log name.</span></span>  
  
<span data-ttu-id="68165-901">または</span><span class="sxs-lookup"><span data-stu-id="68165-901">-or-</span></span> 
<span data-ttu-id="68165-902">ターゲット コンピューター上のイベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-902">The registry key for the event log could not be opened on the target computer.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-903">コンピューターのイベント ログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="68165-903">for administering event log information on the computer.</span></span> <span data-ttu-id="68165-904">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="68165-904">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.OverflowAction" />
        <altmember cref="P:System.Diagnostics.EventLog.MaximumKilobytes" />
        <altmember cref="P:System.Diagnostics.EventLog.OverflowAction" />
        <altmember cref="P:System.Diagnostics.EventLog.MinimumRetentionDays" />
      </Docs>
    </Member>
    <Member MemberName="OverflowAction">
      <MemberSignature Language="C#" Value="public System.Diagnostics.OverflowAction OverflowAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.OverflowAction OverflowAction" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.OverflowAction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OverflowAction As OverflowAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::OverflowAction OverflowAction { System::Diagnostics::OverflowAction get(); };" />
      <MemberSignature Language="F#" Value="member this.OverflowAction : System.Diagnostics.OverflowAction" Usage="System.Diagnostics.EventLog.OverflowAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.OverflowAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68165-905">イベント ログが最大ファイル サイズに達した場合に、新しいエントリを格納するように構成された動作を取得します。</span><span class="sxs-lookup"><span data-stu-id="68165-905">Gets the configured behavior for storing new entries when the event log reaches its maximum log file size.</span></span></summary>
        <value><span data-ttu-id="68165-906">イベント ログが最大サイズに達した場合に、新しいエントリを格納するために構成された動作を指定する <see cref="T:System.Diagnostics.OverflowAction" /> 値。</span><span class="sxs-lookup"><span data-stu-id="68165-906">The <see cref="T:System.Diagnostics.OverflowAction" /> value that specifies the configured behavior for storing new entries when the event log reaches its maximum log size.</span></span> <span data-ttu-id="68165-907">既定値は、<see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" /> です。</span><span class="sxs-lookup"><span data-stu-id="68165-907">The default is <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-908">イベント ログは、新しいイベントが書き込まれた時に、サイズで拡張します。</span><span class="sxs-lookup"><span data-stu-id="68165-908">Event logs grow in size as new events are written to them.</span></span> <span data-ttu-id="68165-909">各イベント ログが構成されている最大サイズ制限。<xref:System.Diagnostics.EventLog.MaximumKilobytes%2A>プロパティは、イベント ログ ファイルのサイズに許可されているキロバイトの最大数を定義します。</span><span class="sxs-lookup"><span data-stu-id="68165-909">Each event log has a configured maximum size limit; the <xref:System.Diagnostics.EventLog.MaximumKilobytes%2A> property defines the maximum number of kilobytes allowed for the event log file size.</span></span>  
  
 <span data-ttu-id="68165-910">使用して、<xref:System.Diagnostics.EventLog.OverflowAction%2A>プロパティの値をその最大サイズにイベント ログのオーバーフロー動作を確認します。</span><span class="sxs-lookup"><span data-stu-id="68165-910">Use the <xref:System.Diagnostics.EventLog.OverflowAction%2A> property value to examine the configured overflow behavior for an event log at its maximum size.</span></span> <span data-ttu-id="68165-911">使用して、<xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A>メソッド、イベント ログのオーバーフロー動作を変更します。</span><span class="sxs-lookup"><span data-stu-id="68165-911">Use the <xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> method to change the overflow behavior for an event log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-912">オーバーフロー動作は、イベント ログが最大ファイル サイズに達した場合にのみ反映されます。</span><span class="sxs-lookup"><span data-stu-id="68165-912">The overflow behavior takes effect only when an event log reaches its maximum file size.</span></span> <span data-ttu-id="68165-913">オーバーフロー動作は、追加のイベント ログ エントリに対応できるログに新しいエントリを書き込むには影響しません。</span><span class="sxs-lookup"><span data-stu-id="68165-913">The overflow behavior does not affect writing a new entry to a log that can accommodate additional event log entries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-914">次の例では、ローカル コンピューターでは、定義されたイベント ログを列挙し、各イベント ログの構成の詳細が表示されます。</span><span class="sxs-lookup"><span data-stu-id="68165-914">The following example enumerates the event logs defined on the local computer, and displays configuration details for each event log.</span></span>  
  
 [!code-cpp[EventLogProperties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogProperties/CPP/source.cpp#2)]
 [!code-csharp[EventLogProperties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogProperties/CS/source.cs#2)]
 [!code-vb[EventLogProperties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogProperties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-915">コンピューターのイベント ログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="68165-915">for administering event log information on the computer.</span></span> <span data-ttu-id="68165-916">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="68165-916">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.OverflowAction" />
        <altmember cref="P:System.Diagnostics.EventLog.MaximumKilobytes" />
        <altmember cref="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)" />
        <altmember cref="P:System.Diagnostics.EventLog.MinimumRetentionDays" />
      </Docs>
    </Member>
    <Member MemberName="RegisterDisplayName">
      <MemberSignature Language="C#" Value="public void RegisterDisplayName (string resourceFile, long resourceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterDisplayName(string resourceFile, int64 resourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.RegisterDisplayName(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterDisplayName (resourceFile As String, resourceId As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterDisplayName(System::String ^ resourceFile, long resourceId);" />
      <MemberSignature Language="F#" Value="member this.RegisterDisplayName : string * int64 -&gt; unit" Usage="eventLog.RegisterDisplayName (resourceFile, resourceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceFile" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="resourceId" Type="System.Int64" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="resourceFile"><span data-ttu-id="68165-917">ローカライズされたリソース ファイルの完全指定パス。</span><span class="sxs-lookup"><span data-stu-id="68165-917">The fully specified path to a localized resource file.</span></span></param>
        <param name="resourceId"><span data-ttu-id="68165-918">リソース ファイル内のローカライズされた文字列のインデックスを示すリソース識別子。</span><span class="sxs-lookup"><span data-stu-id="68165-918">The resource identifier that indexes a localized string within the resource file.</span></span></param>
        <summary><span data-ttu-id="68165-919">イベント ログのローカライズされた名前を指定します。これは、サーバーのイベント ビューアーに表示されます。</span><span class="sxs-lookup"><span data-stu-id="68165-919">Specifies the localized name of the event log, which is displayed in the server Event Viewer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-920">使用<xref:System.Diagnostics.EventLog.RegisterDisplayName%2A>を登録し、カスタム イベント ログのイベント ビューアーでローカライズされた名前を表示します。</span><span class="sxs-lookup"><span data-stu-id="68165-920">Use <xref:System.Diagnostics.EventLog.RegisterDisplayName%2A> to register and display a localized name in the Event Viewer for custom event logs.</span></span>  
  
 <span data-ttu-id="68165-921">指定されたリソース識別子は、リソース ファイルで定義されているローカライズされた文字列に対応する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-921">The specified resource identifier must correspond to a localized string defined in the resource file.</span></span> <span data-ttu-id="68165-922">イベント ビューアーには、ローカライズされた文字列と現在のカルチャ設定を使用してカスタム イベント ログ名が表示されます。</span><span class="sxs-lookup"><span data-stu-id="68165-922">The Event Viewer displays the custom event log name using the localized string and the current culture settings.</span></span> <span data-ttu-id="68165-923">たとえば、複数のイベント ログ名、リソース ファイル内の異なるカルチャのローカライズを定義できます。</span><span class="sxs-lookup"><span data-stu-id="68165-923">For example, you can define multiple event log names localized for different cultures in your resource file.</span></span> <span data-ttu-id="68165-924">イベント ビューアーには、現在のユーザーのカルチャ設定に対応するローカライズされた文字列が表示されます。</span><span class="sxs-lookup"><span data-stu-id="68165-924">The Event Viewer displays the localized string corresponding to the culture settings of the current user.</span></span>  
  
 <span data-ttu-id="68165-925">イベント ビューアーは、リソース ファイルからローカライズされた文字列を読み込むことができませんか、イベント ログの表示名が登録されていない場合、イベント ビューアーに表示されますで定義されているイベント ログ名<xref:System.Diagnostics.EventLog.Log%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-925">If the Event Viewer cannot load the localized string from the resource file, or if no display name was registered for the event log, then the Event Viewer displays the event log name defined in <xref:System.Diagnostics.EventLog.Log%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-926">定義済みのイベント ログの表示名を登録する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="68165-926">You do not need to register a display name for the pre-defined event logs.</span></span> <span data-ttu-id="68165-927">オペレーティング システムでは、アプリケーション、システム、およびセキュリティ イベント ログのローカライズされた表示名を登録します。</span><span class="sxs-lookup"><span data-stu-id="68165-927">The operating system registers the localized display names for the Application, System, and Security event logs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-928">次の例は、イベント ソースが名前付きかどうかを判断`SampleApplicationSource`ローカル コンピューターに登録します。</span><span class="sxs-lookup"><span data-stu-id="68165-928">The following example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="68165-929">イベント ソースが存在しない場合、例は、ソースのメッセージ リソース ファイルを設定し、新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-929">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="68165-930">最後に、リソース識別子の値を使用して、イベント ログのローカライズされた表示名の設定例では、`DisplayNameMsgId`とリソース ファイルのパスで`messageFile`します。</span><span class="sxs-lookup"><span data-stu-id="68165-930">Finally, the example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="68165-931">EventLogMsgs.dll リソース ライブラリに組み込まれている次のメッセージのテキスト ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="68165-931">The example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="68165-932">メッセージのテキスト ファイルは、メッセージ リソース ファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="68165-932">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="68165-933">メッセージのテキスト ファイルでは、リソース識別子とカテゴリ、イベント メッセージ、およびパラメーターの挿入文字列のテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="68165-933">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span> <span data-ttu-id="68165-934">具体的には、イベント ログのローカライズされた名前のリソース識別子 5001 が定義されます。</span><span class="sxs-lookup"><span data-stu-id="68165-934">Specifically, resource identifier 5001 is defined for the localized name of the event log.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-935"><see cref="P:System.Diagnostics.EventLog.Log" /> 値が有効なログ名ではありません。</span><span class="sxs-lookup"><span data-stu-id="68165-935">The <see cref="P:System.Diagnostics.EventLog.Log" /> value is not a valid log name.</span></span>  
  
<span data-ttu-id="68165-936">または</span><span class="sxs-lookup"><span data-stu-id="68165-936">-or-</span></span> 
<span data-ttu-id="68165-937">ターゲット コンピューター上のイベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-937">The registry key for the event log could not be opened on the target computer.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68165-938"><paramref name="resourceFile" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="68165-938"><paramref name="resourceFile" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-939">コンピューターのイベント ログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="68165-939">for administering event log information on the computer.</span></span> <span data-ttu-id="68165-940">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="68165-940">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.LogDisplayName" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="System.Diagnostics.EventLog.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The application name that writes the log.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogSource")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68165-941">イベント ログを書き込むときに登録して使用するソース名を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="68165-941">Gets or sets the source name to register and use when writing to the event log.</span></span></summary>
        <value><span data-ttu-id="68165-942">エントリのソースとしてイベント ログに登録される名前。</span><span class="sxs-lookup"><span data-stu-id="68165-942">The name registered with the event log as a source of entries.</span></span> <span data-ttu-id="68165-943">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="68165-943">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-944">イベント ソースは、ログのイベントを示します。</span><span class="sxs-lookup"><span data-stu-id="68165-944">The event source indicates what logs the event.</span></span> <span data-ttu-id="68165-945">これは、アプリケーションが大きい場合多くの場合、アプリケーションの名前またはアプリケーションのサブコンポーネントの名前。</span><span class="sxs-lookup"><span data-stu-id="68165-945">It is often the name of the application, or the name of a subcomponent of the application, if the application is large.</span></span> <span data-ttu-id="68165-946">アプリケーションとサービスは、アプリケーション ログまたはカスタムのログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-946">Applications and services should write to the Application log or a custom log.</span></span> <span data-ttu-id="68165-947">デバイス ドライバーは、システム ログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-947">Device drivers should write to the System log.</span></span>  
  
 <span data-ttu-id="68165-948">のみ、イベント ログに書き込みを行う場合は、イベント ソースを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-948">You only need to specify an event source if you are writing to an event log.</span></span> <span data-ttu-id="68165-949">イベント ログにエントリを書き込む前に、有効なイベントのソースとして、イベント ログにイベント ソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-949">Before writing an entry to an event log, you must register the event source with the event log as a valid source of events.</span></span> <span data-ttu-id="68165-950">ログ エントリを記述するときに、システムを使用して、<xref:System.Diagnostics.EventLog.Source%2A>エントリを配置するための適切なログを検索するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="68165-950">When you write a log entry, the system uses the <xref:System.Diagnostics.EventLog.Source%2A> property to find the appropriate log in which to place your entry.</span></span> <span data-ttu-id="68165-951">かどうか、イベント ログを読んでいるを指定するか、 <xref:System.Diagnostics.EventLog.Source%2A>、または<xref:System.Diagnostics.EventLog.Log%2A>と<xref:System.Diagnostics.EventLog.MachineName%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-951">If you are reading the event log, you can either specify the <xref:System.Diagnostics.EventLog.Source%2A>, or a <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-952">指定する必要はありません、<xref:System.Diagnostics.EventLog.MachineName%2A>ローカル コンピューター上のログに接続している場合。</span><span class="sxs-lookup"><span data-stu-id="68165-952">You are not required to specify the <xref:System.Diagnostics.EventLog.MachineName%2A> if you are connecting to a log on the local computer.</span></span> <span data-ttu-id="68165-953">指定しない場合、 <xref:System.Diagnostics.EventLog.MachineName%2A>、ローカル コンピューター (".") と見なされます。</span><span class="sxs-lookup"><span data-stu-id="68165-953">If you do not specify the <xref:System.Diagnostics.EventLog.MachineName%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="68165-954">使用<xref:System.Diagnostics.EventLog.WriteEvent%2A>と<xref:System.Diagnostics.EventLog.WriteEntry%2A>イベント ログにイベントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-954">Use <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> to write events to an event log.</span></span> <span data-ttu-id="68165-955">イベントを書き込むイベント ソースを指定する必要があります。作成し、ソースと最初のエントリを書き込む前に、イベント ソースを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-955">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="68165-956">アプリケーションのインストール中に新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-956">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="68165-957">これにより、登録済みのイベント ソースの一覧とその構成を更新するオペレーティング システムまでの時間です。</span><span class="sxs-lookup"><span data-stu-id="68165-957">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="68165-958">オペレーティング システムでは、イベントのソースの一覧は更新されていない場合は、書き込み操作は失敗、新しいソースを持つイベントを記述しようとしました。</span><span class="sxs-lookup"><span data-stu-id="68165-958">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="68165-959">使用して新しいソースを構成することができます、 <xref:System.Diagnostics.EventLogInstaller>、またはを使用して、<xref:System.Diagnostics.EventLog.CreateEventSource%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68165-959">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="68165-960">新しいイベント ソースを作成するコンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-960">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="68165-961">既存のイベント ログまたは新しいイベント ログのイベント ソースを作成することができます。</span><span class="sxs-lookup"><span data-stu-id="68165-961">You can create an event source for an existing event log or a new event log.</span></span> <span data-ttu-id="68165-962">新しいイベント ログの新しいソースを作成するときに、システムがそのログのソースを登録しますが、最初のエントリが書き込まれるまで、ログは作成されません。</span><span class="sxs-lookup"><span data-stu-id="68165-962">When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="68165-963">ソースは、ローカル コンピューター上で一意である必要があります。新しいソース名には、既存のソース名または既存のイベント ログ名を一致ことはできません。</span><span class="sxs-lookup"><span data-stu-id="68165-963">The source must be unique on the local computer; a new source name cannot match an existing source name or an existing event log name.</span></span> <span data-ttu-id="68165-964">各ソースは、一度に 1 つだけのイベント ログに書き込むことができます。ただし、アプリケーションでは、複数のソースを使用して、複数のイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-964">Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="68165-965">たとえば、アプリケーションでは、別のイベント ログまたは別のリソース ファイル用に構成された複数のソースを必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-965">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span>  
  
 <span data-ttu-id="68165-966">変更する場合、<xref:System.Diagnostics.EventLog.Source%2A>値、<xref:System.Diagnostics.EventLog>に登録されているが閉じられ、すべてのイベント ハンドルが解放されます。</span><span class="sxs-lookup"><span data-stu-id="68165-966">If you change the <xref:System.Diagnostics.EventLog.Source%2A> value, the <xref:System.Diagnostics.EventLog> to which it is registered is closed and all event handles are released.</span></span>  
  
 <span data-ttu-id="68165-967">ソースは、ローカライズされたエントリを書き込むか、または直接の文字列を書き込むように構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-967">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="68165-968">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2 つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-968">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="68165-969">たとえば、リソース ファイルでは、1 つのソースを構成およびでは、そのソースを使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッドをイベント ログのリソース識別子を使用してエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-969">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="68165-970">リソースのファイルがない場合、別のソースを作成しでそのソースを使用し、<xref:System.Diagnostics.EventLog.WriteEntry%2A>そのソースを使用して、イベント ログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-970">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
 <span data-ttu-id="68165-971">既存のソースの構成の詳細を変更するには、ソースを削除し、新しい構成を使用して作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-971">To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</span></span> <span data-ttu-id="68165-972">他のアプリケーションやコンポーネントは、既存のソースを使用する場合は、既存のソースを削除するのではなく、更新された構成で新しいソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-972">If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-973">ソースはログに既にマップされて、新しいログにマッピングする場合は、変更を反映するには、コンピューターを再起動する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-973">If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-974">次の例では、ソース`MySource`が存在しない場合、イベント ログにエントリを書き込みます`MyNewLog`します。</span><span class="sxs-lookup"><span data-stu-id="68165-974">The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.Source Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Source Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Source Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Source Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Source Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Source Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-975">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="68165-975">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-976">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-976">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-977">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-977">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SourceExists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68165-978">コンピューターのレジストリ内で、指定したイベント ソースを検索します。</span><span class="sxs-lookup"><span data-stu-id="68165-978">Searches a computer's registry for a given event source.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SourceExists">
      <MemberSignature Language="C#" Value="public static bool SourceExists (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SourceExists(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SourceExists (source As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SourceExists(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member SourceExists : string -&gt; bool" Usage="System.Diagnostics.EventLog.SourceExists source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="68165-979">イベント ソースの名前。</span><span class="sxs-lookup"><span data-stu-id="68165-979">The name of the event source.</span></span></param>
        <summary><span data-ttu-id="68165-980">ローカル コンピューターにイベント ソースが登録されているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="68165-980">Determines whether an event source is registered on the local computer.</span></span></summary>
        <returns><span data-ttu-id="68165-981">ローカル コンピューターにイベント ソースが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68165-981"><see langword="true" /> if the event source is registered on the local computer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-982">このメソッドを使用して、ローカル コンピューターのイベント ソースが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="68165-982">Use this method to determine whether an event source exists on the local computer.</span></span> <span data-ttu-id="68165-983">使用して、ローカル コンピューターのログが存在するかどうかを判断する<xref:System.Diagnostics.EventLog.Exists%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-983">If you want to determine whether a log exists on the local computer, use <xref:System.Diagnostics.EventLog.Exists%2A>.</span></span>  
  
 <span data-ttu-id="68165-984">このメソッドが、レジストリにアクセスするため、ローカル コンピューターに適切なレジストリのアクセス許可が必要それ以外の場合、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="68165-984">Because this method accesses the registry, you must have the appropriate registry permissions on the local computer; otherwise, a <xref:System.Security.SecurityException> will be thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-985">Windows Server 2003 または Windows Vista 以降のイベント ソースを検索するには、管理者特権があります。</span><span class="sxs-lookup"><span data-stu-id="68165-985">To search for an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.</span></span>  
>   
>  <span data-ttu-id="68165-986">この要件の理由では、セキュリティを含むすべてのイベント ログを検索して、イベント ソースが一意かどうかを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-986">The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</span></span> <span data-ttu-id="68165-987">Windows Vista 以降、ユーザー権限がありません。 セキュリティ ログにアクセスするにはそのため、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="68165-987">Starting with Windows Vista, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.</span></span>  
>   
>  <span data-ttu-id="68165-988">Windows Vista 以降、ユーザー アカウント制御 (UAC) は、ユーザーの権限を決定します。</span><span class="sxs-lookup"><span data-stu-id="68165-988">Starting with Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="68165-989">ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="68165-989">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="68165-990">既定では、ユーザーは標準ユーザー ロールに所属します。</span><span class="sxs-lookup"><span data-stu-id="68165-990">By default, you are in the standard user role.</span></span> <span data-ttu-id="68165-991">パフォーマンス カウンターにアクセスするコードを実行するには標準ユーザーから管理者に、特権を昇格する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-991">To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="68165-992">この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。</span><span class="sxs-lookup"><span data-stu-id="68165-992">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-993">実行されているサービス、<xref:System.ServiceProcess.ServiceAccount.LocalSystem>アカウントには、このメソッドを実行するための権限はありません。</span><span class="sxs-lookup"><span data-stu-id="68165-993">A service that is executing under the <xref:System.ServiceProcess.ServiceAccount.LocalSystem> account does not have the privileges required to execute this method.</span></span> <span data-ttu-id="68165-994">解決でイベント ソースが存在するかどうかを確認するには、 <xref:System.ServiceProcess.ServiceInstaller>、それが存在しない場合、インストーラーのソースを作成するとします。</span><span class="sxs-lookup"><span data-stu-id="68165-994">The solution is to check whether the event source exists in the <xref:System.ServiceProcess.ServiceInstaller>, and if it does not exist, to create the source in the installer.</span></span>  
  
 <span data-ttu-id="68165-995">新しいソースには、同じコンピューター上の既存のソースの名前を付けることはできません、ために、試行する前にこのメソッドを使用して、呼び出す<xref:System.Diagnostics.EventLog.CreateEventSource%2A>で指定された名前のソースを確実に`source`ローカル コンピューターに既に存在しません。</span><span class="sxs-lookup"><span data-stu-id="68165-995">Because you cannot give a new source the name of an existing source on the same computer, use this method before attempting to call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to ensure that a source with the name specified by `source` does not already exist on the local computer.</span></span> <span data-ttu-id="68165-996">`source`パラメーター小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="68165-996">The `source` parameter is not case-sensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-997">次の例では、ソース`MySource`が存在しない場合、イベント ログにエントリを書き込みます`MyNewLog`します。</span><span class="sxs-lookup"><span data-stu-id="68165-997">The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.Source Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Source Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Source Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Source Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Source Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Source Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="68165-998"><paramref name="source" /> が見つかりませんでしたが、イベント ログの一部またはすべてが検索できませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-998"><paramref name="source" /> was not found, but some or all of the event logs could not be searched.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-999">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-999">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-1000">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-1000">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
      </Docs>
    </Member>
    <Member MemberName="SourceExists">
      <MemberSignature Language="C#" Value="public static bool SourceExists (string source, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SourceExists(string source, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.SourceExists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SourceExists (source As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SourceExists(System::String ^ source, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member SourceExists : string * string -&gt; bool" Usage="System.Diagnostics.EventLog.SourceExists (source, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="68165-1001">イベント ソースの名前。</span><span class="sxs-lookup"><span data-stu-id="68165-1001">The name of the event source.</span></span></param>
        <param name="machineName"><span data-ttu-id="68165-1002">検索対象のコンピューターの名前。ローカル コンピューターの場合は "."。</span><span class="sxs-lookup"><span data-stu-id="68165-1002">The name the computer on which to look, or "." for the local computer.</span></span></param>
        <summary><span data-ttu-id="68165-1003">指定したコンピューターにイベント ソースが登録されているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="68165-1003">Determines whether an event source is registered on a specified computer.</span></span></summary>
        <returns><span data-ttu-id="68165-1004">指定したコンピューターにイベント ソースが登録されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68165-1004"><see langword="true" /> if the event source is registered on the given computer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-1005">指定されたコンピューターのイベント ソースが存在するかどうかを確認するには、このメソッドを使用して、`machineName`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="68165-1005">Use this method to determine whether an event source exists on the computer specified by the `machineName` parameter.</span></span> <span data-ttu-id="68165-1006">ログが使用して、指定したコンピューター上に存在するかどうかを判断する<xref:System.Diagnostics.EventLog.Exists%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-1006">If you want to determine whether a log exists on the specified computer, use <xref:System.Diagnostics.EventLog.Exists%2A>.</span></span>  
  
 <span data-ttu-id="68165-1007">このメソッドが、レジストリにアクセスするため、特定のサーバーに適切なレジストリのアクセス許可が必要それ以外の場合、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="68165-1007">Because this method accesses the registry, you must have the appropriate registry permissions on the given server; otherwise, a <xref:System.Security.SecurityException> will be thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1008">Windows Server 2003 または Windows Vista 以降のイベント ソースを検索するには、管理者特権があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1008">To search for an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.</span></span>  
>   
>  <span data-ttu-id="68165-1009">この要件の理由では、セキュリティを含むすべてのイベント ログを検索して、イベント ソースが一意かどうかを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1009">The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</span></span> <span data-ttu-id="68165-1010">Windows Vista 以降、ユーザー権限がありません。 セキュリティ ログにアクセスするにはそのため、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="68165-1010">Starting with Windows Vista, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.</span></span>  
>   
>  <span data-ttu-id="68165-1011">Windows Vista 以降、ユーザー アカウント制御 (UAC) は、ユーザーの権限を決定します。</span><span class="sxs-lookup"><span data-stu-id="68165-1011">Starting with Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="68165-1012">ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="68165-1012">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="68165-1013">既定では、ユーザーは標準ユーザー ロールに所属します。</span><span class="sxs-lookup"><span data-stu-id="68165-1013">By default, you are in the standard user role.</span></span> <span data-ttu-id="68165-1014">パフォーマンス カウンターにアクセスするコードを実行するには標準ユーザーから管理者に、特権を昇格する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1014">To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="68165-1015">この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。</span><span class="sxs-lookup"><span data-stu-id="68165-1015">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1016">実行されているサービス、<xref:System.ServiceProcess.ServiceAccount.LocalSystem>アカウントには、このメソッドを実行するための権限はありません。</span><span class="sxs-lookup"><span data-stu-id="68165-1016">A service that is executing under the <xref:System.ServiceProcess.ServiceAccount.LocalSystem> account does not have the privileges required to execute this method.</span></span> <span data-ttu-id="68165-1017">解決でイベント ソースが存在するかどうかを確認するには、 <xref:System.ServiceProcess.ServiceInstaller>、それが存在しない場合、インストーラーのソースを作成するとします。</span><span class="sxs-lookup"><span data-stu-id="68165-1017">The solution is to check whether the event source exists in the <xref:System.ServiceProcess.ServiceInstaller>, and if it does not exist, to create the source in the installer.</span></span>  
  
 <span data-ttu-id="68165-1018">新しいソースには、同じコンピューター上の既存のソースの名前を付けることはできません、ために、試行する前にこのメソッドを使用して、呼び出す<xref:System.Diagnostics.EventLog.CreateEventSource%2A>で指定された名前のソースを確実に`source`コンピューターに既に存在しません。</span><span class="sxs-lookup"><span data-stu-id="68165-1018">Because you cannot give a new source the name of an existing source on the same computer, use this method before attempting to call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to ensure that a source with the name specified by `source` does not already exist on the computer.</span></span> <span data-ttu-id="68165-1019">`source`と`machineName`パラメーターは大文字小文字が区別されません。</span><span class="sxs-lookup"><span data-stu-id="68165-1019">The `source` and `machineName` parameters are not case sensitive.</span></span>  
  
 <span data-ttu-id="68165-1020"><xref:System.Diagnostics.EventLog.SourceExists%2A> `static`メソッド、クラス自体で呼び出せるようにします。</span><span class="sxs-lookup"><span data-stu-id="68165-1020"><xref:System.Diagnostics.EventLog.SourceExists%2A> is a `static` method, so it can be called on the class itself.</span></span> <span data-ttu-id="68165-1021">インスタンスを作成する必要はありません<xref:System.Diagnostics.EventLog>を呼び出す<xref:System.Diagnostics.EventLog.SourceExists%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-1021">It is not necessary to create an instance of <xref:System.Diagnostics.EventLog> to call <xref:System.Diagnostics.EventLog.SourceExists%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-1022">次の例では、ソースを作成します`MySource`コンピューターの`MyServer`、イベント ログにエントリを書き込み、`MyNewLog`します。</span><span class="sxs-lookup"><span data-stu-id="68165-1022">The following example creates the source `MySource` on the computer `MyServer`, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.SourceExists1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.SourceExists1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.SourceExists1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.SourceExists1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.SourceExists1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.SourceExists1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-1023"><paramref name="machineName" /> が無効なコンピューター名です。</span><span class="sxs-lookup"><span data-stu-id="68165-1023"><paramref name="machineName" /> is an invalid computer name.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="68165-1024"><paramref name="source" /> が見つかりませんでしたが、イベント ログの一部またはすべてが検索できませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-1024"><paramref name="source" /> was not found, but some or all of the event logs could not be searched.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-1025">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-1025">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-1026">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-1026">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.Diagnostics.EventLog.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("An object that synchronizes event handler calls.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogSynchronizingObject")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68165-1027"><see cref="T:System.Diagnostics.EventLog" /> エントリ書き込みイベントの結果として発行されるイベント ハンドラー呼び出しをマーシャリングするために使用するオブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="68165-1027">Gets or sets the object used to marshal the event handler calls issued as a result of an <see cref="T:System.Diagnostics.EventLog" /> entry written event.</span></span></summary>
        <value><span data-ttu-id="68165-1028">イベント ログの <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> イベントの結果として発行されるイベント ハンドラー呼び出しをマーシャリングするために使用する <see cref="T:System.ComponentModel.ISynchronizeInvoke" />。</span><span class="sxs-lookup"><span data-stu-id="68165-1028">The <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> used to marshal event-handler calls issued as a result of an <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> event on the event log.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-1029">ときに<xref:System.Diagnostics.EventLog.SynchronizingObject%2A>は`null`、処理するメソッド、<xref:System.Diagnostics.EventLog.EntryWritten>イベントは、システム スレッド プールのスレッドで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="68165-1029">When <xref:System.Diagnostics.EventLog.SynchronizingObject%2A> is `null`, methods handling the <xref:System.Diagnostics.EventLog.EntryWritten> event are called on a thread from the system thread pool.</span></span> <span data-ttu-id="68165-1030">システム スレッド プールの詳細については、次を参照してください。<xref:System.Threading.ThreadPool>します。</span><span class="sxs-lookup"><span data-stu-id="68165-1030">For more information on system thread pools, see <xref:System.Threading.ThreadPool>.</span></span>  
  
 <span data-ttu-id="68165-1031">ときに、<xref:System.Diagnostics.EventLog.EntryWritten>イベントはビジュアルの Windows フォーム システム スレッド プールを介したコンポーネントへのアクセス、ボタンなどのコンポーネントが動作しないか、例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1031">When the <xref:System.Diagnostics.EventLog.EntryWritten> event is handled by a visual Windows Forms component, such as a button, accessing the component through the system thread pool might not work, or might result in an exception.</span></span> <span data-ttu-id="68165-1032">設定してこの問題を回避<xref:System.Diagnostics.EventLog.SynchronizingObject%2A>これにより、Windows フォームのコンポーネントを処理するメソッド、<xref:System.Diagnostics.EventLog.EntryWritten>コンポーネントが作成された同じスレッドで呼び出されるイベント。</span><span class="sxs-lookup"><span data-stu-id="68165-1032">Avoid this by setting <xref:System.Diagnostics.EventLog.SynchronizingObject%2A> to a Windows Forms component, which causes the methods handling the <xref:System.Diagnostics.EventLog.EntryWritten> event to be called on the same thread on which the component was created.</span></span>  
  
 <span data-ttu-id="68165-1033">場合、<xref:System.Diagnostics.EventLog>内で使用する[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]Windows フォーム デザイナーで<xref:System.Diagnostics.EventLog.SynchronizingObject%2A>を含むコントロールに自動的に設定されている、<xref:System.Diagnostics.EventLog>します。</span><span class="sxs-lookup"><span data-stu-id="68165-1033">If the <xref:System.Diagnostics.EventLog> is used inside [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] in a Windows Forms designer, <xref:System.Diagnostics.EventLog.SynchronizingObject%2A> is automatically set to the control containing the <xref:System.Diagnostics.EventLog>.</span></span> <span data-ttu-id="68165-1034">配置する場合など、 <xref:System.Diagnostics.EventLog> Form1 のデザイナーで (から継承される<xref:System.Windows.Forms.Form>)、<xref:System.Diagnostics.EventLog.SynchronizingObject%2A>プロパティの<xref:System.Diagnostics.EventLog>Form1 のインスタンスに設定されています。</span><span class="sxs-lookup"><span data-stu-id="68165-1034">For example, if you place an <xref:System.Diagnostics.EventLog> on a designer for Form1 (which inherits from <xref:System.Windows.Forms.Form>) the <xref:System.Diagnostics.EventLog.SynchronizingObject%2A> property of <xref:System.Diagnostics.EventLog> is set to the instance of Form1.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-1035">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-1035">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-1036">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-1036">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="E:System.Diagnostics.EventLog.EntryWritten" />
        <altmember cref="T:System.Threading.ThreadPool" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68165-1037">イベント ログにエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1037">Writes an entry in the event log.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEntry(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string -&gt; unit" Usage="eventLog.WriteEntry message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="68165-1038">イベント ログに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="68165-1038">The string to write to the event log.</span></span></param>
        <summary><span data-ttu-id="68165-1039">種類が Information のエントリを、指定したメッセージ テキストと共にイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1039">Writes an information type entry, with the given message text, to the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-1040">このメソッドを使用に関連付けられているイベント ログが information のエントリを書き込む<xref:System.Diagnostics.EventLog>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="68165-1040">Use this method to write an information entry to the event log associated with this <xref:System.Diagnostics.EventLog> instance.</span></span> <span data-ttu-id="68165-1041">その他を指定したい場合<xref:System.Diagnostics.EventLogEntryType>の異なるオーバー ロードを使用して、<xref:System.Diagnostics.EventLog.WriteEntry%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-1041">If you want to specify any other <xref:System.Diagnostics.EventLogEntryType>, use a different overload of <xref:System.Diagnostics.EventLog.WriteEntry%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1042">`message`文字列は、% を含めることはできません*n*ここで、 *n*整数値 (たとえば、%1) は、イベント ビューアーは、挿入文字列として扱います。</span><span class="sxs-lookup"><span data-stu-id="68165-1042">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="68165-1043">文字のシーケンスをインターネット プロトコル バージョン 6 (IPv6) アドレスはこれを含めることができます、ために、IPv6 アドレスを含むイベント メッセージがログ記録できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1043">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
 <span data-ttu-id="68165-1044">設定する必要があります、<xref:System.Diagnostics.EventLog.Source%2A>プロパティを<xref:System.Diagnostics.EventLog>コンポーネントがログにエントリを記述する前にします。</span><span class="sxs-lookup"><span data-stu-id="68165-1044">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before you can write entries to the log.</span></span> <span data-ttu-id="68165-1045">作成し、ソースと最初のエントリを書き込む前に、イベント ソースを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1045">You must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="68165-1046">アプリケーションのインストール中に新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-1046">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="68165-1047">これにより、登録済みのイベント ソースの一覧とその構成を更新するオペレーティング システムまでの時間です。</span><span class="sxs-lookup"><span data-stu-id="68165-1047">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="68165-1048">オペレーティング システムでは、イベントのソースの一覧は更新されていない場合は、書き込み操作は失敗、新しいソースを持つイベントを記述しようとしました。</span><span class="sxs-lookup"><span data-stu-id="68165-1048">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="68165-1049">使用して新しいソースを構成することができます、 <xref:System.Diagnostics.EventLogInstaller>、またはを使用して、<xref:System.Diagnostics.EventLog.CreateEventSource%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68165-1049">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="68165-1050">新しいイベント ソースを作成するコンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-1050">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="68165-1051">ソースが指定されている場合、<xref:System.Diagnostics.EventLog.Source%2A>このプロパティ<xref:System.Diagnostics.EventLog>コンポーネントが書き込むコンピューターのインスタンスが登録されていない<xref:System.Diagnostics.EventLog.WriteEntry%2A>呼び出し<xref:System.Diagnostics.EventLog.CreateEventSource%2A>ソースを登録します。</span><span class="sxs-lookup"><span data-stu-id="68165-1051">If the source specified in the <xref:System.Diagnostics.EventLog.Source%2A> property of this <xref:System.Diagnostics.EventLog> instance is not registered on the computer that your component is writing to, <xref:System.Diagnostics.EventLog.WriteEntry%2A> calls <xref:System.Diagnostics.EventLog.CreateEventSource%2A> and registers the source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1052">指定しない場合、<xref:System.Diagnostics.EventLog.MachineName%2A>の<xref:System.Diagnostics.EventLog>インスタンスを呼び出す前に<xref:System.Diagnostics.EventLog.CreateEventSource%2A>または<xref:System.Diagnostics.EventLog.WriteEntry%2A>、ローカル コンピューター (".") と見なされます。</span><span class="sxs-lookup"><span data-stu-id="68165-1052">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A> for your <xref:System.Diagnostics.EventLog> instance before you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> or <xref:System.Diagnostics.EventLog.WriteEntry%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="68165-1053">システムを登録する必要がある場合、<xref:System.Diagnostics.EventLog.Source%2A>呼び出しを通じて<xref:System.Diagnostics.EventLog.WriteEntry%2A>と<xref:System.Diagnostics.EventLog.Log%2A>プロパティに設定されていない、<xref:System.Diagnostics.EventLog>インスタンス、アプリケーション ログには、ログの既定値します。</span><span class="sxs-lookup"><span data-stu-id="68165-1053">If the system needs to register the <xref:System.Diagnostics.EventLog.Source%2A> through a call to <xref:System.Diagnostics.EventLog.WriteEntry%2A> and the <xref:System.Diagnostics.EventLog.Log%2A> property has not been set on your <xref:System.Diagnostics.EventLog> instance, the log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1054">上記の例外の多くは、登録プロセス中に発生したエラーによって生成される、<xref:System.Diagnostics.EventLog.Source%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-1054">Many of the exceptions listed above are generated by errors raised during the process of registering the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span>  
  
 <span data-ttu-id="68165-1055">ソースは、ローカライズされたエントリを書き込むか、または直接の文字列を書き込むように構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1055">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="68165-1056"><xref:System.Diagnostics.EventLog.WriteEntry%2A>メソッドは、イベント ログに直接指定された文字列を書き込みます。 ローカライズ可能なメッセージ リソース ファイルを使用しません。</span><span class="sxs-lookup"><span data-stu-id="68165-1056">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="68165-1057">使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>ローカライズされたメッセージ リソース ファイルを使用してイベントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1057">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="68165-1058">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2 つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1058">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="68165-1059">たとえば、リソース ファイルでは、1 つのソースを構成およびでは、そのソースを使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッドをイベント ログのリソース識別子を使用してエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1059">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="68165-1060">リソースのファイルがない場合、別のソースを作成しでそのソースを使用し、<xref:System.Diagnostics.EventLog.WriteEntry%2A>そのソースを使用して、イベント ログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1060">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1061">リモート コンピューターへのエントリを記述する場合 (文字列)、メッセージの値可能性がありますいない期待どおりでは、リモート コンピューターに .NET Framework が実行されていない場合。</span><span class="sxs-lookup"><span data-stu-id="68165-1061">If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1062">場合、`message`パラメーターには、NUL 文字が含まれる、イベント ログにメッセージは、NUL 文字で終了します。</span><span class="sxs-lookup"><span data-stu-id="68165-1062">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-1063">次の例では、ソース`MySource`が存在しない場合、イベント ログにエントリを書き込みます`MyNewLog`します。</span><span class="sxs-lookup"><span data-stu-id="68165-1063">The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-1064"><see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。</span><span class="sxs-lookup"><span data-stu-id="68165-1064">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="68165-1065">または</span><span class="sxs-lookup"><span data-stu-id="68165-1065">-or-</span></span> 
<span data-ttu-id="68165-1066">メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。</span><span class="sxs-lookup"><span data-stu-id="68165-1066">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="68165-1067">または</span><span class="sxs-lookup"><span data-stu-id="68165-1067">-or-</span></span> 
<span data-ttu-id="68165-1068">ソースは既に別のイベント ログに登録されています。</span><span class="sxs-lookup"><span data-stu-id="68165-1068">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="68165-1069">または</span><span class="sxs-lookup"><span data-stu-id="68165-1069">-or-</span></span> 
<span data-ttu-id="68165-1070">メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。</span><span class="sxs-lookup"><span data-stu-id="68165-1070">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="68165-1071">または</span><span class="sxs-lookup"><span data-stu-id="68165-1071">-or-</span></span> 
<span data-ttu-id="68165-1072">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="68165-1072">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-1073">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-1073">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="68165-1074">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="68165-1074">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="68165-1075">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1075">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-1076">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-1076">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-1077">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-1077">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.EventLogEntryType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEntry(string message, valuetype System.Diagnostics.EventLogEntryType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, type As EventLogEntryType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::EventLogEntryType type);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.EventLogEntryType -&gt; unit" Usage="eventLog.WriteEntry (message, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="68165-1078">イベント ログに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="68165-1078">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="68165-1079"><see cref="T:System.Diagnostics.EventLogEntryType" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="68165-1079">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <summary><span data-ttu-id="68165-1080">エラー、警告、情報、監査正常終了、または監査エラー エントリを、指定したメッセージ テキストと共にイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1080">Writes an error, warning, information, success audit, or failure audit entry with the given message text to the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-1081">このメソッドを使用して、指定したエントリの書き込み<xref:System.Diagnostics.EventLogEntryType>イベント ログにします。</span><span class="sxs-lookup"><span data-stu-id="68165-1081">Use this method to write an entry of a specified <xref:System.Diagnostics.EventLogEntryType> to the event log.</span></span> <span data-ttu-id="68165-1082">`type`アイコンとテキスト ログのイベント ビューアーの種類 列で示されます。</span><span class="sxs-lookup"><span data-stu-id="68165-1082">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1083">`message`文字列は、% を含めることはできません*n*ここで、 *n*整数値 (たとえば、%1) は、イベント ビューアーは、挿入文字列として扱います。</span><span class="sxs-lookup"><span data-stu-id="68165-1083">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="68165-1084">文字のシーケンスをインターネット プロトコル バージョン 6 (IPv6) アドレスはこれを含めることができます、ために、IPv6 アドレスを含むイベント メッセージがログ記録できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1084">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
 <span data-ttu-id="68165-1085">設定する必要があります、<xref:System.Diagnostics.EventLog.Source%2A>プロパティを<xref:System.Diagnostics.EventLog>コンポーネントがログにエントリを記述する前にします。</span><span class="sxs-lookup"><span data-stu-id="68165-1085">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before you can write entries to the log.</span></span> <span data-ttu-id="68165-1086">作成し、ソースと最初のエントリを書き込む前に、イベント ソースを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1086">You must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="68165-1087">アプリケーションのインストール中に新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-1087">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="68165-1088">これにより、登録済みのイベント ソースの一覧とその構成を更新するオペレーティング システムまでの時間です。</span><span class="sxs-lookup"><span data-stu-id="68165-1088">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="68165-1089">オペレーティング システムでは、イベントのソースの一覧は更新されていない場合は、書き込み操作は失敗、新しいソースを持つイベントを記述しようとしました。</span><span class="sxs-lookup"><span data-stu-id="68165-1089">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="68165-1090">使用して新しいソースを構成することができます、 <xref:System.Diagnostics.EventLogInstaller>、またはを使用して、<xref:System.Diagnostics.EventLog.CreateEventSource%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68165-1090">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="68165-1091">新しいイベント ソースを作成するコンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-1091">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="68165-1092">ソースが指定されている場合、<xref:System.Diagnostics.EventLog.Source%2A>このプロパティ<xref:System.Diagnostics.EventLog>コンポーネントが書き込むコンピューターのインスタンスが登録されていない<xref:System.Diagnostics.EventLog.WriteEntry%2A>呼び出し<xref:System.Diagnostics.EventLog.CreateEventSource%2A>ソースを登録します。</span><span class="sxs-lookup"><span data-stu-id="68165-1092">If the source specified in the <xref:System.Diagnostics.EventLog.Source%2A> property of this <xref:System.Diagnostics.EventLog> instance is not registered on the computer that your component is writing to, <xref:System.Diagnostics.EventLog.WriteEntry%2A> calls <xref:System.Diagnostics.EventLog.CreateEventSource%2A> and registers the source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1093">指定しない場合、<xref:System.Diagnostics.EventLog.MachineName%2A>の<xref:System.Diagnostics.EventLog>インスタンスを呼び出す前に<xref:System.Diagnostics.EventLog.CreateEventSource%2A>または<xref:System.Diagnostics.EventLog.WriteEntry%2A>、ローカル コンピューター (".") と見なされます。</span><span class="sxs-lookup"><span data-stu-id="68165-1093">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A> for your <xref:System.Diagnostics.EventLog> instance before you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> or <xref:System.Diagnostics.EventLog.WriteEntry%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="68165-1094">システムを登録する必要がある場合、<xref:System.Diagnostics.EventLog.Source%2A>呼び出しを通じて<xref:System.Diagnostics.EventLog.WriteEntry%2A>と<xref:System.Diagnostics.EventLog.Log%2A>プロパティに設定されていない、<xref:System.Diagnostics.EventLog>インスタンス、アプリケーション ログには、ログの既定値します。</span><span class="sxs-lookup"><span data-stu-id="68165-1094">If the system needs to register the <xref:System.Diagnostics.EventLog.Source%2A> through a call to <xref:System.Diagnostics.EventLog.WriteEntry%2A> and the <xref:System.Diagnostics.EventLog.Log%2A> property has not been set on your <xref:System.Diagnostics.EventLog> instance, the log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1095">上に示した多くの例外は、登録プロセス中に発生したエラーによって生成される、<xref:System.Diagnostics.EventLog.Source%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-1095">Many exceptions listed above are generated by errors raised during the process of registering the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span>  
  
 <span data-ttu-id="68165-1096">ソースは、ローカライズされたエントリを書き込むか、または直接の文字列を書き込むように構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1096">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="68165-1097"><xref:System.Diagnostics.EventLog.WriteEntry%2A>メソッドは、イベント ログに直接指定された文字列を書き込みます。 ローカライズ可能なメッセージ リソース ファイルを使用しません。</span><span class="sxs-lookup"><span data-stu-id="68165-1097">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="68165-1098">使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>ローカライズされたメッセージ リソース ファイルを使用してイベントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1098">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="68165-1099">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2 つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1099">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="68165-1100">たとえば、リソース ファイルでは、1 つのソースを構成およびでは、そのソースを使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッドをイベント ログのリソース識別子を使用してエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1100">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="68165-1101">リソースのファイルがない場合、別のソースを作成しでそのソースを使用し、<xref:System.Diagnostics.EventLog.WriteEntry%2A>そのソースを使用して、イベント ログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1101">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1102">リモート コンピューターへのエントリを記述する場合 (文字列)、メッセージの値可能性がありますいない期待どおりでは、リモート コンピューターに .NET Framework が実行されていない場合。</span><span class="sxs-lookup"><span data-stu-id="68165-1102">If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1103">場合、`message`パラメーターには、NUL 文字が含まれる、イベント ログにメッセージは、NUL 文字で終了します。</span><span class="sxs-lookup"><span data-stu-id="68165-1103">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-1104">次の例では、ローカル コンピューターの"MyNewLog"イベント ログに警告エントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1104">The following example writes a warning entry to an event log, "MyNewLog", on the local computer.</span></span>  
  
 [!code-cpp[Classic EventLog.WriteEntry2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.WriteEntry2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry2 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.WriteEntry2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-1105"><see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。</span><span class="sxs-lookup"><span data-stu-id="68165-1105">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="68165-1106">または</span><span class="sxs-lookup"><span data-stu-id="68165-1106">-or-</span></span> 
<span data-ttu-id="68165-1107">メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。</span><span class="sxs-lookup"><span data-stu-id="68165-1107">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="68165-1108">または</span><span class="sxs-lookup"><span data-stu-id="68165-1108">-or-</span></span> 
<span data-ttu-id="68165-1109">ソースは既に別のイベント ログに登録されています。</span><span class="sxs-lookup"><span data-stu-id="68165-1109">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="68165-1110">または</span><span class="sxs-lookup"><span data-stu-id="68165-1110">-or-</span></span> 
<span data-ttu-id="68165-1111">メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。</span><span class="sxs-lookup"><span data-stu-id="68165-1111">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="68165-1112">または</span><span class="sxs-lookup"><span data-stu-id="68165-1112">-or-</span></span> 
<span data-ttu-id="68165-1113">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="68165-1113">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="68165-1114"><paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="68165-1114"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-1115">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-1115">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="68165-1116">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="68165-1116">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="68165-1117">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1117">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-1118">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-1118">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-1119">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-1119">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public static void WriteEntry (string source, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEntry(string source, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEntry (source As String, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEntry(System::String ^ source, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteEntry : string * string -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEntry (source, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="68165-1120">アプリケーションを指定されたコンピューターに登録するために使用されるソース。</span><span class="sxs-lookup"><span data-stu-id="68165-1120">The source by which the application is registered on the specified computer.</span></span></param>
        <param name="message"><span data-ttu-id="68165-1121">イベント ログに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="68165-1121">The string to write to the event log.</span></span></param>
        <summary><span data-ttu-id="68165-1122">指定した登録イベント ソースを使用して、種類が Information のエントリを、指定したメッセージ テキストと共にイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1122">Writes an information type entry with the given message text to the event log, using the specified registered event source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-1123">このメソッドを使用すると、適切なログのイベント ソースとして既に登録されているソースを使用して、イベント ログが information のエントリを記述できます。</span><span class="sxs-lookup"><span data-stu-id="68165-1123">Use this method to write an information entry to the event log, using a source that is already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="68165-1124">その他を指定したい場合<xref:System.Diagnostics.EventLogEntryType>の異なるオーバー ロードを使用して、<xref:System.Diagnostics.EventLog.WriteEntry%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-1124">If you want to specify any other <xref:System.Diagnostics.EventLogEntryType>, use a different overload of <xref:System.Diagnostics.EventLog.WriteEntry%2A>.</span></span>  
  
 <span data-ttu-id="68165-1125">作成し、ソースと最初のエントリを書き込む前に、イベント ソースを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1125">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="68165-1126">アプリケーションのインストール中に新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-1126">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="68165-1127">これにより、登録済みのイベント ソースの一覧とその構成を更新するオペレーティング システムまでの時間です。</span><span class="sxs-lookup"><span data-stu-id="68165-1127">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="68165-1128">オペレーティング システムでは、イベントのソースの一覧は更新されていない場合は、書き込み操作は失敗、新しいソースを持つイベントを記述しようとしました。</span><span class="sxs-lookup"><span data-stu-id="68165-1128">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="68165-1129">使用して新しいソースを構成することができます、 <xref:System.Diagnostics.EventLogInstaller>、またはを使用して、<xref:System.Diagnostics.EventLog.CreateEventSource%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68165-1129">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="68165-1130">新しいイベント ソースを作成するコンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-1130">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="68165-1131">ソースは、ローカライズされたエントリを書き込むか、または直接の文字列を書き込むように構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1131">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="68165-1132"><xref:System.Diagnostics.EventLog.WriteEntry%2A>メソッドは、イベント ログに直接指定された文字列を書き込みます。 ローカライズ可能なメッセージ リソース ファイルを使用しません。</span><span class="sxs-lookup"><span data-stu-id="68165-1132">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="68165-1133">使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>ローカライズされたメッセージ リソース ファイルを使用してイベントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1133">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="68165-1134">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2 つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1134">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="68165-1135">たとえば、リソース ファイルでは、1 つのソースを構成およびでは、そのソースを使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッドをイベント ログのリソース識別子を使用してエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1135">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="68165-1136">リソースのファイルがない場合、別のソースを作成しでそのソースを使用し、<xref:System.Diagnostics.EventLog.WriteEntry%2A>そのソースを使用して、イベント ログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1136">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1137">場合、`message`パラメーターには、NUL 文字が含まれる、イベント ログにメッセージは、NUL 文字で終了します。</span><span class="sxs-lookup"><span data-stu-id="68165-1137">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
>   
>  <span data-ttu-id="68165-1138">`message`文字列は、% を含めることはできません*n*ここで、 *n*整数値 (たとえば、%1) は、イベント ビューアーは、挿入文字列として扱います。</span><span class="sxs-lookup"><span data-stu-id="68165-1138">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="68165-1139">文字のシーケンスをインターネット プロトコル バージョン 6 (IPv6) アドレスはこれを含めることができます、ために、IPv6 アドレスを含むイベント メッセージがログ記録できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1139">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-1140">次の例では、ソース`MySource`が存在しない場合、イベント ログにエントリを書き込みます`MyNewLog`します。</span><span class="sxs-lookup"><span data-stu-id="68165-1140">The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.WriteEntry1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.WriteEntry1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.WriteEntry1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-1141"><paramref name="source" /> 値が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="68165-1141">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="68165-1142">または</span><span class="sxs-lookup"><span data-stu-id="68165-1142">-or-</span></span> 
<span data-ttu-id="68165-1143"><paramref name="source" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68165-1143">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="68165-1144">または</span><span class="sxs-lookup"><span data-stu-id="68165-1144">-or-</span></span> 
<span data-ttu-id="68165-1145">メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。</span><span class="sxs-lookup"><span data-stu-id="68165-1145">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="68165-1146">または</span><span class="sxs-lookup"><span data-stu-id="68165-1146">-or-</span></span> 
<span data-ttu-id="68165-1147">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="68165-1147">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-1148">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-1148">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="68165-1149">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="68165-1149">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="68165-1150">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1150">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-1151">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-1151">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-1152">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-1152">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.EventLogEntryType type, int eventID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEntry(string message, valuetype System.Diagnostics.EventLogEntryType type, int32 eventID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, type As EventLogEntryType, eventID As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::EventLogEntryType type, int eventID);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.EventLogEntryType * int -&gt; unit" Usage="eventLog.WriteEntry (message, type, eventID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
        <Parameter Name="eventID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="68165-1153">イベント ログに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="68165-1153">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="68165-1154"><see cref="T:System.Diagnostics.EventLogEntryType" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="68165-1154">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <param name="eventID"><span data-ttu-id="68165-1155">イベントの、アプリケーション固有の識別子。</span><span class="sxs-lookup"><span data-stu-id="68165-1155">The application-specific identifier for the event.</span></span></param>
        <summary><span data-ttu-id="68165-1156">エントリを、指定したメッセージ テキストおよびアプリケーション定義のイベント識別子と共にイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1156">Writes an entry with the given message text and application-defined event identifier to the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-1157">このメソッドを使用して、アプリケーション定義を持つエントリを書き込む`eventID`イベント ログにします。</span><span class="sxs-lookup"><span data-stu-id="68165-1157">Use this method to write an entry with an application-defined `eventID` to the event log.</span></span> <span data-ttu-id="68165-1158">`eventID`ソースとイベントを一意に識別します。</span><span class="sxs-lookup"><span data-stu-id="68165-1158">The `eventID` together with the source uniquely identify an event.</span></span> <span data-ttu-id="68165-1159">各アプリケーションには、番号付きのイベントとマップ先の説明文字列を定義できます。</span><span class="sxs-lookup"><span data-stu-id="68165-1159">Each application can define its own numbered events and the description strings to which they map.</span></span> <span data-ttu-id="68165-1160">イベント ビューアーでは、ユーザーの問題点を理解し、実行するアクションを提案するためにこれらの文字列値を表示します。</span><span class="sxs-lookup"><span data-stu-id="68165-1160">Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1161">`message`文字列は、% を含めることはできません*n*ここで、 *n*整数値 (たとえば、%1) は、イベント ビューアーは、挿入文字列として扱います。</span><span class="sxs-lookup"><span data-stu-id="68165-1161">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="68165-1162">文字のシーケンスをインターネット プロトコル バージョン 6 (IPv6) アドレスはこれを含めることができます、ために、IPv6 アドレスを含むイベント メッセージがログ記録できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1162">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
 <span data-ttu-id="68165-1163">イベント識別子、以外を指定できます、<xref:System.Diagnostics.EventLogEntryType>イベント ログに書き込まれるイベント。</span><span class="sxs-lookup"><span data-stu-id="68165-1163">In addition to the event identifier, you can specify an <xref:System.Diagnostics.EventLogEntryType> for the event being written to the event log.</span></span> <span data-ttu-id="68165-1164">`type`アイコンとテキスト ログのイベント ビューアーの種類 列で示されます。</span><span class="sxs-lookup"><span data-stu-id="68165-1164">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span> <span data-ttu-id="68165-1165">このパラメーターは、イベントの種類がエラー、警告、情報、監査正常終了、または失敗の監査であるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="68165-1165">This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</span></span>  
  
 <span data-ttu-id="68165-1166">設定する必要があります、<xref:System.Diagnostics.EventLog.Source%2A>プロパティを<xref:System.Diagnostics.EventLog>コンポーネントがログにエントリを記述する前にします。</span><span class="sxs-lookup"><span data-stu-id="68165-1166">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before you can write entries to the log.</span></span> <span data-ttu-id="68165-1167">作成し、ソースと最初のエントリを書き込む前に、イベント ソースを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1167">You must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="68165-1168">アプリケーションのインストール中に新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-1168">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="68165-1169">これにより、登録済みのイベント ソースの一覧とその構成を更新するオペレーティング システムまでの時間です。</span><span class="sxs-lookup"><span data-stu-id="68165-1169">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="68165-1170">オペレーティング システムでは、イベントのソースの一覧は更新されていない場合は、書き込み操作は失敗、新しいソースを持つイベントを記述しようとしました。</span><span class="sxs-lookup"><span data-stu-id="68165-1170">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="68165-1171">使用して新しいソースを構成することができます、 <xref:System.Diagnostics.EventLogInstaller>、またはを使用して、<xref:System.Diagnostics.EventLog.CreateEventSource%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68165-1171">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="68165-1172">新しいイベント ソースを作成するコンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-1172">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="68165-1173">ソースが指定されている場合、<xref:System.Diagnostics.EventLog.Source%2A>このプロパティ<xref:System.Diagnostics.EventLog>コンポーネントが書き込むコンピューターのインスタンスが登録されていない<xref:System.Diagnostics.EventLog.WriteEntry%2A>呼び出し<xref:System.Diagnostics.EventLog.CreateEventSource%2A>ソースを登録します。</span><span class="sxs-lookup"><span data-stu-id="68165-1173">If the source specified in the <xref:System.Diagnostics.EventLog.Source%2A> property of this <xref:System.Diagnostics.EventLog> instance is not registered on the computer that your component is writing to, <xref:System.Diagnostics.EventLog.WriteEntry%2A> calls <xref:System.Diagnostics.EventLog.CreateEventSource%2A> and registers the source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1174">指定しない場合、<xref:System.Diagnostics.EventLog.MachineName%2A>の<xref:System.Diagnostics.EventLog>インスタンスを呼び出す前に<xref:System.Diagnostics.EventLog.CreateEventSource%2A>または<xref:System.Diagnostics.EventLog.WriteEntry%2A>、ローカル コンピューター (".") と見なされます。</span><span class="sxs-lookup"><span data-stu-id="68165-1174">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A> for your <xref:System.Diagnostics.EventLog> instance before you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> or <xref:System.Diagnostics.EventLog.WriteEntry%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="68165-1175">システムを登録する必要がある場合、<xref:System.Diagnostics.EventLog.Source%2A>呼び出しを通じて<xref:System.Diagnostics.EventLog.WriteEntry%2A>と<xref:System.Diagnostics.EventLog.Log%2A>プロパティに設定されていない、<xref:System.Diagnostics.EventLog>インスタンス、アプリケーション ログには、ログの既定値します。</span><span class="sxs-lookup"><span data-stu-id="68165-1175">If the system needs to register the <xref:System.Diagnostics.EventLog.Source%2A> through a call to <xref:System.Diagnostics.EventLog.WriteEntry%2A> and the <xref:System.Diagnostics.EventLog.Log%2A> property has not been set on your <xref:System.Diagnostics.EventLog> instance, the log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1176">上に示した多くの例外は、登録プロセス中に発生したエラーによって生成される、<xref:System.Diagnostics.EventLog.Source%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-1176">Many exceptions listed above are generated by errors raised during the process of registering the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span>  
  
 <span data-ttu-id="68165-1177">ソースは、ローカライズされたエントリを書き込むか、または直接の文字列を書き込むように構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1177">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="68165-1178"><xref:System.Diagnostics.EventLog.WriteEntry%2A>メソッドは、イベント ログに直接指定された文字列を書き込みます。 ローカライズ可能なメッセージ リソース ファイルを使用しません。</span><span class="sxs-lookup"><span data-stu-id="68165-1178">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="68165-1179">使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>ローカライズされたメッセージ リソース ファイルを使用してイベントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1179">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="68165-1180">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2 つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1180">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="68165-1181">たとえば、リソース ファイルでは、1 つのソースを構成およびでは、そのソースを使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッドをイベント ログのリソース識別子を使用してエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1181">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="68165-1182">リソースのファイルがない場合、別のソースを作成しでそのソースを使用し、<xref:System.Diagnostics.EventLog.WriteEntry%2A>そのソースを使用して、イベント ログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1182">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1183">リモート コンピューターへのエントリを記述する場合 (文字列)、メッセージの値可能性がありますいない期待どおりでは、リモート コンピューターに .NET Framework が実行されていない場合。</span><span class="sxs-lookup"><span data-stu-id="68165-1183">If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1184">場合、`message`パラメーターには、NUL 文字が含まれる、イベント ログにメッセージは、NUL 文字で終了します。</span><span class="sxs-lookup"><span data-stu-id="68165-1184">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_WriteEntry_1_3#3](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CPP/eventlog_writeentry_1_3.cpp#3)]
 [!code-csharp[EventLog_WriteEntry_1_3#3](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CS/eventlog_writeentry_1_3.cs#3)]
 [!code-vb[EventLog_WriteEntry_1_3#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_WriteEntry_1_3/VB/eventlog_writeentry_1_3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-1185"><see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。</span><span class="sxs-lookup"><span data-stu-id="68165-1185">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="68165-1186">または</span><span class="sxs-lookup"><span data-stu-id="68165-1186">-or-</span></span> 
<span data-ttu-id="68165-1187">メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。</span><span class="sxs-lookup"><span data-stu-id="68165-1187">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="68165-1188">または</span><span class="sxs-lookup"><span data-stu-id="68165-1188">-or-</span></span> 
<span data-ttu-id="68165-1189">ソースは既に別のイベント ログに登録されています。</span><span class="sxs-lookup"><span data-stu-id="68165-1189">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="68165-1190">または</span><span class="sxs-lookup"><span data-stu-id="68165-1190">-or-</span></span> 
 <span data-ttu-id="68165-1191"><paramref name="eventID" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="68165-1191"><paramref name="eventID" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="68165-1192">または</span><span class="sxs-lookup"><span data-stu-id="68165-1192">-or-</span></span> 
<span data-ttu-id="68165-1193">メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。</span><span class="sxs-lookup"><span data-stu-id="68165-1193">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="68165-1194">または</span><span class="sxs-lookup"><span data-stu-id="68165-1194">-or-</span></span> 
<span data-ttu-id="68165-1195">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="68165-1195">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-1196">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-1196">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="68165-1197"><paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="68165-1197"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="68165-1198">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="68165-1198">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="68165-1199">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1199">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-1200">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-1200">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-1201">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-1201">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public static void WriteEntry (string source, string message, System.Diagnostics.EventLogEntryType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEntry(string source, string message, valuetype System.Diagnostics.EventLogEntryType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEntry (source As String, message As String, type As EventLogEntryType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEntry(System::String ^ source, System::String ^ message, System::Diagnostics::EventLogEntryType type);" />
      <MemberSignature Language="F#" Value="static member WriteEntry : string * string * System.Diagnostics.EventLogEntryType -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEntry (source, message, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="68165-1202">アプリケーションを指定されたコンピューターに登録するために使用されるソース。</span><span class="sxs-lookup"><span data-stu-id="68165-1202">The source by which the application is registered on the specified computer.</span></span></param>
        <param name="message"><span data-ttu-id="68165-1203">イベント ログに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="68165-1203">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="68165-1204"><see cref="T:System.Diagnostics.EventLogEntryType" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="68165-1204">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <summary><span data-ttu-id="68165-1205">指定した登録イベント ソースを使用して、エラー、警告、情報、監査正常終了、または監査エラー エントリを、指定したメッセージ テキストと共にイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1205">Writes an error, warning, information, success audit, or failure audit entry with the given message text to the event log, using the specified registered event source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-1206">このメソッドを使用して、指定したエントリの書き込み<xref:System.Diagnostics.EventLogEntryType>をイベント ログ ソースを既に使用して、適切なログのイベント ソースとして登録されています。</span><span class="sxs-lookup"><span data-stu-id="68165-1206">Use this method to write an entry of a specified <xref:System.Diagnostics.EventLogEntryType> to the event log, using a source already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="68165-1207">`type`アイコンとテキスト ログのイベント ビューアーの種類 列で示されます。</span><span class="sxs-lookup"><span data-stu-id="68165-1207">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1208">`message`文字列は、% を含めることはできません*n*ここで、 *n*整数値 (たとえば、%1) は、イベント ビューアーは、挿入文字列として扱います。</span><span class="sxs-lookup"><span data-stu-id="68165-1208">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="68165-1209">文字のシーケンスをインターネット プロトコル バージョン 6 (IPv6) アドレスはこれを含めることができます、ために、IPv6 アドレスを含むイベント メッセージがログ記録できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1209">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
 <span data-ttu-id="68165-1210">作成し、ソースと最初のエントリを書き込む前に、イベント ソースを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1210">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="68165-1211">アプリケーションのインストール中に新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-1211">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="68165-1212">これにより、登録済みのイベント ソースの一覧とその構成を更新するオペレーティング システムまでの時間です。</span><span class="sxs-lookup"><span data-stu-id="68165-1212">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="68165-1213">オペレーティング システムでは、イベントのソースの一覧は更新されていない場合は、書き込み操作は失敗、新しいソースを持つイベントを記述しようとしました。</span><span class="sxs-lookup"><span data-stu-id="68165-1213">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="68165-1214">使用して新しいソースを構成することができます、 <xref:System.Diagnostics.EventLogInstaller>、またはを使用して、<xref:System.Diagnostics.EventLog.CreateEventSource%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68165-1214">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="68165-1215">新しいイベント ソースを作成するコンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-1215">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="68165-1216">ソースは、ローカライズされたエントリを書き込むか、または直接の文字列を書き込むように構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1216">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="68165-1217"><xref:System.Diagnostics.EventLog.WriteEntry%2A>メソッドは、イベント ログに直接指定された文字列を書き込みます。 ローカライズ可能なメッセージ リソース ファイルを使用しません。</span><span class="sxs-lookup"><span data-stu-id="68165-1217">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="68165-1218">使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>ローカライズされたメッセージ リソース ファイルを使用してイベントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1218">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="68165-1219">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2 つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1219">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="68165-1220">たとえば、リソース ファイルでは、1 つのソースを構成およびでは、そのソースを使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッドをイベント ログのリソース識別子を使用してエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1220">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="68165-1221">リソースのファイルがない場合、別のソースを作成しでそのソースを使用し、<xref:System.Diagnostics.EventLog.WriteEntry%2A>そのソースを使用して、イベント ログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1221">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1222">場合、`message`パラメーターには、NUL 文字が含まれる、イベント ログにメッセージは、NUL 文字で終了します。</span><span class="sxs-lookup"><span data-stu-id="68165-1222">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-1223">次の例では、ローカル コンピューターの"MyNewLog"イベント ログに警告エントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1223">The following example writes a warning entry to an event log, "MyNewLog", on the local computer.</span></span>  
  
 [!code-cpp[Classic EventLog.WriteEntry3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.WriteEntry3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry3 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.WriteEntry3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-1224"><paramref name="source" /> 値が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="68165-1224">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="68165-1225">または</span><span class="sxs-lookup"><span data-stu-id="68165-1225">-or-</span></span> 
<span data-ttu-id="68165-1226"><paramref name="source" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68165-1226">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="68165-1227">または</span><span class="sxs-lookup"><span data-stu-id="68165-1227">-or-</span></span> 
<span data-ttu-id="68165-1228">メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。</span><span class="sxs-lookup"><span data-stu-id="68165-1228">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="68165-1229">または</span><span class="sxs-lookup"><span data-stu-id="68165-1229">-or-</span></span> 
<span data-ttu-id="68165-1230">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="68165-1230">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-1231">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-1231">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="68165-1232"><paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="68165-1232"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="68165-1233">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="68165-1233">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="68165-1234">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1234">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-1235">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-1235">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-1236">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-1236">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.EventLogEntryType type, int eventID, short category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEntry(string message, valuetype System.Diagnostics.EventLogEntryType type, int32 eventID, int16 category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, type As EventLogEntryType, eventID As Integer, category As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::EventLogEntryType type, int eventID, short category);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.EventLogEntryType * int * int16 -&gt; unit" Usage="eventLog.WriteEntry (message, type, eventID, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
        <Parameter Name="eventID" Type="System.Int32" />
        <Parameter Name="category" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="68165-1237">イベント ログに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="68165-1237">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="68165-1238"><see cref="T:System.Diagnostics.EventLogEntryType" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="68165-1238">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <param name="eventID"><span data-ttu-id="68165-1239">イベントの、アプリケーション固有の識別子。</span><span class="sxs-lookup"><span data-stu-id="68165-1239">The application-specific identifier for the event.</span></span></param>
        <param name="category"><span data-ttu-id="68165-1240">メッセージと関連付けられた、アプリケーション固有のサブカテゴリ。</span><span class="sxs-lookup"><span data-stu-id="68165-1240">The application-specific subcategory associated with the message.</span></span></param>
        <summary><span data-ttu-id="68165-1241">指定したメッセージ テキスト、アプリケーション定義のイベント識別子、およびアプリケーション定義のカテゴリと共にエントリをイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1241">Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-1242">このメソッドを使用して、アプリケーション定義を持つエントリを書き込む`category`イベント ログにします。</span><span class="sxs-lookup"><span data-stu-id="68165-1242">Use this method to write an entry with an application-defined `category` to the event log.</span></span> <span data-ttu-id="68165-1243">イベント ビューアーでは、イベント ソースによって書き込まれたイベントをフィルター処理するカテゴリを使用します。</span><span class="sxs-lookup"><span data-stu-id="68165-1243">The Event Viewer uses the category to filter events written by an event source.</span></span> <span data-ttu-id="68165-1244">ローカライズされたカテゴリ文字列を表示するカテゴリ リソース識別子として使用できます。 またはイベント ビューアーは、数値の値として、カテゴリを表示できます。</span><span class="sxs-lookup"><span data-stu-id="68165-1244">The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1245">`category`パラメーターは、正の値を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1245">The `category` parameter should be a positive value.</span></span> <span data-ttu-id="68165-1246">負の値のカテゴリの値は、イベント ビューアーの補完的な正の数値として表示します。</span><span class="sxs-lookup"><span data-stu-id="68165-1246">Negative category values appear as a complementary positive number in the Event Viewer.</span></span> <span data-ttu-id="68165-1247">たとえばを-10 は 65,526、65,535 として-1 が表示されます。</span><span class="sxs-lookup"><span data-stu-id="68165-1247">For example, a -10 appears as 65,526, a -1 as 65,535.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1248">`message`文字列は、% を含めることはできません*n*ここで、 *n*整数値 (たとえば、%1) は、イベント ビューアーは、挿入文字列として扱います。</span><span class="sxs-lookup"><span data-stu-id="68165-1248">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="68165-1249">文字のシーケンスをインターネット プロトコル バージョン 6 (IPv6) アドレスはこれを含めることができます、ために、IPv6 アドレスを含むイベント メッセージがログ記録できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1249">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
 <span data-ttu-id="68165-1250">イベント ビューアーでは、ローカライズされたカテゴリ文字列を表示するには、イベント ソース、カテゴリ リソース ファイルで構成され、設定を使用する必要があります、`category`カテゴリ リソース ファイル内のリソース識別子。</span><span class="sxs-lookup"><span data-stu-id="68165-1250">To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the `category` to a resource identifier in the category resource file.</span></span> <span data-ttu-id="68165-1251">構成済みのカテゴリ リソース ファイル、または指定したイベント ソースが持っていない場合`category`し、イベント ビューアーでは、そのエントリの数値のカテゴリの値を表示します。 カテゴリ リソース ファイル内の文字列のインデックスはされません。</span><span class="sxs-lookup"><span data-stu-id="68165-1251">If the event source does not have a configured category resource file, or the specified `category` does not index a string in the category resource file, then the Event Viewer displays the numeric category value for that entry.</span></span> <span data-ttu-id="68165-1252">カテゴリ リソース ファイルのリソース ファイルでカテゴリ文字列の数と構成を使用して、<xref:System.Diagnostics.EventLogInstaller>または<xref:System.Diagnostics.EventSourceCreationData>クラス。</span><span class="sxs-lookup"><span data-stu-id="68165-1252">Configure the category resource file, along with the number of category strings in the resource file, using the <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 <span data-ttu-id="68165-1253">カテゴリだけでなく、イベント ログに書き込まれるイベントのイベント識別子を指定できます。</span><span class="sxs-lookup"><span data-stu-id="68165-1253">In addition to the category, you can specify an event identifier for the event being written to the event log.</span></span> <span data-ttu-id="68165-1254">イベント識別子、イベント ソースおよびイベントを一意に識別します。</span><span class="sxs-lookup"><span data-stu-id="68165-1254">Event identifiers, along with the event source, uniquely identify an event.</span></span> <span data-ttu-id="68165-1255">各アプリケーションには、番号付きのイベントとマップ先の説明文字列を定義できます。</span><span class="sxs-lookup"><span data-stu-id="68165-1255">Each application can define its own numbered events and the description strings to which they map.</span></span> <span data-ttu-id="68165-1256">イベント ビューアーでは、ユーザーの問題点を理解し、実行するアクションを提案するためにこれらの文字列値を表示します。</span><span class="sxs-lookup"><span data-stu-id="68165-1256">Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.</span></span>  
  
 <span data-ttu-id="68165-1257">最後に、指定、<xref:System.Diagnostics.EventLogEntryType>イベント ログに書き込まれるイベント。</span><span class="sxs-lookup"><span data-stu-id="68165-1257">Finally, you can specify an <xref:System.Diagnostics.EventLogEntryType> for the event being written to the event log.</span></span> <span data-ttu-id="68165-1258">`type`アイコンとテキスト ログのイベント ビューアーの種類 列で示されます。</span><span class="sxs-lookup"><span data-stu-id="68165-1258">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span> <span data-ttu-id="68165-1259">このパラメーターは、イベントの種類がエラー、警告、情報、監査正常終了、または失敗の監査であるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="68165-1259">This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</span></span>  
  
 <span data-ttu-id="68165-1260">設定する必要があります、<xref:System.Diagnostics.EventLog.Source%2A>プロパティを<xref:System.Diagnostics.EventLog>コンポーネントがログにエントリを記述する前にします。</span><span class="sxs-lookup"><span data-stu-id="68165-1260">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before you can write entries to the log.</span></span> <span data-ttu-id="68165-1261">作成し、ソースと最初のエントリを書き込む前に、イベント ソースを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1261">You must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="68165-1262">アプリケーションのインストール中に新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-1262">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="68165-1263">これにより、登録済みのイベント ソースの一覧とその構成を更新するオペレーティング システムまでの時間です。</span><span class="sxs-lookup"><span data-stu-id="68165-1263">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="68165-1264">オペレーティング システムでは、イベントのソースの一覧は更新されていない場合は、書き込み操作は失敗、新しいソースを持つイベントを記述しようとしました。</span><span class="sxs-lookup"><span data-stu-id="68165-1264">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="68165-1265">使用して新しいソースを構成することができます、 <xref:System.Diagnostics.EventLogInstaller>、またはを使用して、<xref:System.Diagnostics.EventLog.CreateEventSource%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68165-1265">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="68165-1266">新しいイベント ソースを作成するコンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-1266">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="68165-1267">ソースが指定されている場合、<xref:System.Diagnostics.EventLog.Source%2A>このプロパティ<xref:System.Diagnostics.EventLog>コンポーネントが書き込むコンピューターのインスタンスが登録されていない<xref:System.Diagnostics.EventLog.WriteEntry%2A>呼び出し<xref:System.Diagnostics.EventLog.CreateEventSource%2A>ソースを登録します。</span><span class="sxs-lookup"><span data-stu-id="68165-1267">If the source specified in the <xref:System.Diagnostics.EventLog.Source%2A> property of this <xref:System.Diagnostics.EventLog> instance is not registered on the computer that your component is writing to, <xref:System.Diagnostics.EventLog.WriteEntry%2A> calls <xref:System.Diagnostics.EventLog.CreateEventSource%2A> and registers the source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1268">指定しない場合、<xref:System.Diagnostics.EventLog.MachineName%2A>の<xref:System.Diagnostics.EventLog>インスタンスを呼び出す前に<xref:System.Diagnostics.EventLog.CreateEventSource%2A>または<xref:System.Diagnostics.EventLog.WriteEntry%2A>、ローカル コンピューター (".") と見なされます。</span><span class="sxs-lookup"><span data-stu-id="68165-1268">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A> for your <xref:System.Diagnostics.EventLog> instance before you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> or <xref:System.Diagnostics.EventLog.WriteEntry%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="68165-1269">システムを登録する必要がある場合、<xref:System.Diagnostics.EventLog.Source%2A>呼び出しを通じて<xref:System.Diagnostics.EventLog.WriteEntry%2A>と<xref:System.Diagnostics.EventLog.Log%2A>プロパティに設定されていない、<xref:System.Diagnostics.EventLog>インスタンス、アプリケーション ログには、ログの既定値します。</span><span class="sxs-lookup"><span data-stu-id="68165-1269">If the system needs to register the <xref:System.Diagnostics.EventLog.Source%2A> through a call to <xref:System.Diagnostics.EventLog.WriteEntry%2A> and the <xref:System.Diagnostics.EventLog.Log%2A> property has not been set on your <xref:System.Diagnostics.EventLog> instance, the log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1270">上に示した多くの例外は、登録プロセス中に発生したエラーによって生成される、<xref:System.Diagnostics.EventLog.Source%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-1270">Many exceptions listed above are generated by errors raised during the process of registering the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span>  
  
 <span data-ttu-id="68165-1271">ソースは、ローカライズされたエントリを書き込むか、または直接の文字列を書き込むように構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1271">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="68165-1272"><xref:System.Diagnostics.EventLog.WriteEntry%2A>メソッドは、イベント ログに直接指定された文字列を書き込みます。 ローカライズ可能なメッセージ リソース ファイルを使用しません。</span><span class="sxs-lookup"><span data-stu-id="68165-1272">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="68165-1273">使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>ローカライズされたメッセージ リソース ファイルを使用してイベントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1273">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="68165-1274">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2 つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1274">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="68165-1275">たとえば、リソース ファイルでは、1 つのソースを構成およびでは、そのソースを使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッドをイベント ログのリソース識別子を使用してエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1275">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="68165-1276">リソースのファイルがない場合、別のソースを作成しでそのソースを使用し、<xref:System.Diagnostics.EventLog.WriteEntry%2A>そのソースを使用して、イベント ログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1276">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1277">リモート コンピューターへのエントリを記述する場合 (文字列)、メッセージの値可能性がありますいない期待どおりでは、リモート コンピューターに .NET Framework が実行されていない場合。</span><span class="sxs-lookup"><span data-stu-id="68165-1277">If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1278">場合、`message`パラメーターには、NUL 文字が含まれる、イベント ログにメッセージは、NUL 文字で終了します。</span><span class="sxs-lookup"><span data-stu-id="68165-1278">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_WriteEntry_1_3#3](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CPP/eventlog_writeentry_1_3.cpp#3)]
 [!code-csharp[EventLog_WriteEntry_1_3#3](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CS/eventlog_writeentry_1_3.cs#3)]
 [!code-vb[EventLog_WriteEntry_1_3#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_WriteEntry_1_3/VB/eventlog_writeentry_1_3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-1279"><see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。</span><span class="sxs-lookup"><span data-stu-id="68165-1279">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="68165-1280">または</span><span class="sxs-lookup"><span data-stu-id="68165-1280">-or-</span></span> 
<span data-ttu-id="68165-1281">メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。</span><span class="sxs-lookup"><span data-stu-id="68165-1281">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="68165-1282">または</span><span class="sxs-lookup"><span data-stu-id="68165-1282">-or-</span></span> 
<span data-ttu-id="68165-1283">ソースは既に別のイベント ログに登録されています。</span><span class="sxs-lookup"><span data-stu-id="68165-1283">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="68165-1284">または</span><span class="sxs-lookup"><span data-stu-id="68165-1284">-or-</span></span> 
 <span data-ttu-id="68165-1285"><paramref name="eventID" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="68165-1285"><paramref name="eventID" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="68165-1286">または</span><span class="sxs-lookup"><span data-stu-id="68165-1286">-or-</span></span> 
<span data-ttu-id="68165-1287">メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。</span><span class="sxs-lookup"><span data-stu-id="68165-1287">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="68165-1288">または</span><span class="sxs-lookup"><span data-stu-id="68165-1288">-or-</span></span> 
<span data-ttu-id="68165-1289">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="68165-1289">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-1290">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-1290">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="68165-1291"><paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="68165-1291"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="68165-1292">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="68165-1292">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="68165-1293">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1293">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-1294">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-1294">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-1295">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-1295">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public static void WriteEntry (string source, string message, System.Diagnostics.EventLogEntryType type, int eventID);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEntry(string source, string message, valuetype System.Diagnostics.EventLogEntryType type, int32 eventID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEntry (source As String, message As String, type As EventLogEntryType, eventID As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEntry(System::String ^ source, System::String ^ message, System::Diagnostics::EventLogEntryType type, int eventID);" />
      <MemberSignature Language="F#" Value="static member WriteEntry : string * string * System.Diagnostics.EventLogEntryType * int -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEntry (source, message, type, eventID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
        <Parameter Name="eventID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="68165-1296">アプリケーションを指定されたコンピューターに登録するために使用されるソース。</span><span class="sxs-lookup"><span data-stu-id="68165-1296">The source by which the application is registered on the specified computer.</span></span></param>
        <param name="message"><span data-ttu-id="68165-1297">イベント ログに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="68165-1297">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="68165-1298"><see cref="T:System.Diagnostics.EventLogEntryType" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="68165-1298">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <param name="eventID"><span data-ttu-id="68165-1299">イベントの、アプリケーション固有の識別子。</span><span class="sxs-lookup"><span data-stu-id="68165-1299">The application-specific identifier for the event.</span></span></param>
        <summary><span data-ttu-id="68165-1300">指定した登録イベント ソースを使用して、指定したメッセージ テキストおよびアプリケーション定義のイベント識別子と共にエントリをイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1300">Writes an entry with the given message text and application-defined event identifier to the event log, using the specified registered event source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-1301">このメソッドを使用して、アプリケーション定義を持つエントリを書き込む`eventID`をイベント ログ ソースを既に使用して、適切なログのイベント ソースとして登録されています。</span><span class="sxs-lookup"><span data-stu-id="68165-1301">Use this method to write an entry with an application-defined `eventID` to the event log, using a source already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="68165-1302">`eventID`ソースとイベントを一意に識別します。</span><span class="sxs-lookup"><span data-stu-id="68165-1302">The `eventID`, along with the source, uniquely identify an event.</span></span> <span data-ttu-id="68165-1303">各アプリケーションには、番号付きのイベントとマップ先の説明文字列を定義できます。</span><span class="sxs-lookup"><span data-stu-id="68165-1303">Each application can define its own numbered events and the description strings to which they map.</span></span> <span data-ttu-id="68165-1304">イベント ビューアーでは、ユーザーの問題点を理解し、実行するアクションを提案するためにユーザーにこれらの文字列を提示します。</span><span class="sxs-lookup"><span data-stu-id="68165-1304">Event viewers present these strings to the user to help the user understand what went wrong and suggest what actions to take.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1305">`message`文字列は、% を含めることはできません*n*ここで、 *n*整数値 (たとえば、%1) は、イベント ビューアーは、挿入文字列として扱います。</span><span class="sxs-lookup"><span data-stu-id="68165-1305">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="68165-1306">文字のシーケンスをインターネット プロトコル バージョン 6 (IPv6) アドレスはこれを含めることができます、ために、IPv6 アドレスを含むイベント メッセージがログ記録できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1306">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
 <span data-ttu-id="68165-1307">このオーバー ロードだけでなく、イベント識別子、<xref:System.Diagnostics.EventLog.WriteEntry%2A>を指定することができます、<xref:System.Diagnostics.EventLogEntryType>イベント ログに書き込まれるイベント。</span><span class="sxs-lookup"><span data-stu-id="68165-1307">In addition to the event identifier, this overload of <xref:System.Diagnostics.EventLog.WriteEntry%2A> lets you specify an <xref:System.Diagnostics.EventLogEntryType> for the event being written to the event log.</span></span> <span data-ttu-id="68165-1308">`type`アイコンとテキスト ログのイベント ビューアーの種類 列で示されます。</span><span class="sxs-lookup"><span data-stu-id="68165-1308">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span> <span data-ttu-id="68165-1309">このパラメーターは、イベントの種類がエラー、警告、情報、監査正常終了、または失敗の監査であるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="68165-1309">This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</span></span>  
  
 <span data-ttu-id="68165-1310">作成し、ソースと最初のエントリを書き込む前に、イベント ソースを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1310">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="68165-1311">アプリケーションのインストール中に新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-1311">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="68165-1312">これにより、登録済みのイベント ソースの一覧とその構成を更新するオペレーティング システムまでの時間です。</span><span class="sxs-lookup"><span data-stu-id="68165-1312">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="68165-1313">オペレーティング システムでは、イベントのソースの一覧は更新されていない場合は、書き込み操作は失敗、新しいソースを持つイベントを記述しようとしました。</span><span class="sxs-lookup"><span data-stu-id="68165-1313">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="68165-1314">使用して新しいソースを構成することができます、 <xref:System.Diagnostics.EventLogInstaller>、またはを使用して、<xref:System.Diagnostics.EventLog.CreateEventSource%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68165-1314">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="68165-1315">新しいイベント ソースを作成するコンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-1315">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="68165-1316">ソースは、ローカライズされたエントリを書き込むか、または直接の文字列を書き込むように構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1316">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="68165-1317"><xref:System.Diagnostics.EventLog.WriteEntry%2A>メソッドは、イベント ログに直接指定された文字列を書き込みます。 ローカライズ可能なメッセージ リソース ファイルを使用しません。</span><span class="sxs-lookup"><span data-stu-id="68165-1317">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="68165-1318">使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>ローカライズされたメッセージ リソース ファイルを使用してイベントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1318">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="68165-1319">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2 つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1319">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="68165-1320">たとえば、リソース ファイルでは、1 つのソースを構成およびでは、そのソースを使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッドをイベント ログのリソース識別子を使用してエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1320">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="68165-1321">リソースのファイルがない場合、別のソースを作成しでそのソースを使用し、<xref:System.Diagnostics.EventLog.WriteEntry%2A>そのソースを使用して、イベント ログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1321">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1322">場合、`message`パラメーターには、NUL 文字が含まれる、イベント ログにメッセージは、NUL 文字で終了します。</span><span class="sxs-lookup"><span data-stu-id="68165-1322">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_WriteEntry_4#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_WriteEntry_4/CPP/eventlog_writeentry_4.cpp#1)]
 [!code-csharp[EventLog_WriteEntry_4#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_WriteEntry_4/CS/eventlog_writeentry_4.cs#1)]
 [!code-vb[EventLog_WriteEntry_4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_WriteEntry_4/VB/eventlog_writeentry_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-1323"><paramref name="source" /> 値が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="68165-1323">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="68165-1324">または</span><span class="sxs-lookup"><span data-stu-id="68165-1324">-or-</span></span> 
<span data-ttu-id="68165-1325"><paramref name="source" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68165-1325">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="68165-1326">または</span><span class="sxs-lookup"><span data-stu-id="68165-1326">-or-</span></span> 
 <span data-ttu-id="68165-1327"><paramref name="eventID" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="68165-1327"><paramref name="eventID" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="68165-1328">または</span><span class="sxs-lookup"><span data-stu-id="68165-1328">-or-</span></span> 
<span data-ttu-id="68165-1329">メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。</span><span class="sxs-lookup"><span data-stu-id="68165-1329">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="68165-1330">または</span><span class="sxs-lookup"><span data-stu-id="68165-1330">-or-</span></span> 
<span data-ttu-id="68165-1331">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="68165-1331">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-1332">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-1332">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="68165-1333"><paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="68165-1333"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="68165-1334">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="68165-1334">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="68165-1335">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1335">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-1336">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-1336">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-1337">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-1337">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.EventLogEntryType type, int eventID, short category, byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEntry(string message, valuetype System.Diagnostics.EventLogEntryType type, int32 eventID, int16 category, unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, type As EventLogEntryType, eventID As Integer, category As Short, rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::EventLogEntryType type, int eventID, short category, cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.EventLogEntryType * int * int16 * byte[] -&gt; unit" Usage="eventLog.WriteEntry (message, type, eventID, category, rawData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
        <Parameter Name="eventID" Type="System.Int32" />
        <Parameter Name="category" Type="System.Int16" />
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="68165-1338">イベント ログに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="68165-1338">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="68165-1339"><see cref="T:System.Diagnostics.EventLogEntryType" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="68165-1339">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <param name="eventID"><span data-ttu-id="68165-1340">イベントの、アプリケーション固有の識別子。</span><span class="sxs-lookup"><span data-stu-id="68165-1340">The application-specific identifier for the event.</span></span></param>
        <param name="category"><span data-ttu-id="68165-1341">メッセージと関連付けられた、アプリケーション固有のサブカテゴリ。</span><span class="sxs-lookup"><span data-stu-id="68165-1341">The application-specific subcategory associated with the message.</span></span></param>
        <param name="rawData"><span data-ttu-id="68165-1342">エントリに関連付けられているバイナリ データを保持するバイト配列。</span><span class="sxs-lookup"><span data-stu-id="68165-1342">An array of bytes that holds the binary data associated with the entry.</span></span></param>
        <summary><span data-ttu-id="68165-1343">指定したメッセージ テキスト、アプリケーション定義のイベント識別子、およびアプリケーション定義のカテゴリと共にエントリをイベント ログに書き込み、メッセージにバイナリ データを付加します。</span><span class="sxs-lookup"><span data-stu-id="68165-1343">Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log, and appends binary data to the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-1344">このオーバー ロードを使用すると、イベント ログにイベント固有のデータをアプリケーション定義を記述できます。</span><span class="sxs-lookup"><span data-stu-id="68165-1344">Use this overload to write application-defined event-specific data to the event log.</span></span> <span data-ttu-id="68165-1345">イベント ビューアーでこのデータを解釈しません結合の 16 進数およびテキスト形式でのみ、生データを表示します。</span><span class="sxs-lookup"><span data-stu-id="68165-1345">The Event Viewer does not interpret this data; it displays raw data only in a combined hexadecimal and text format.</span></span> <span data-ttu-id="68165-1346">だれかが問題のデバッグに役に立つことを確認する場合にだけ、イベントに固有のデータを使用します。</span><span class="sxs-lookup"><span data-stu-id="68165-1346">Use event-specific data sparingly, including it only if you are sure it will be useful to someone debugging the problem.</span></span> <span data-ttu-id="68165-1347">イベント ビューアーとは無関係に、アプリケーションが処理できる情報を格納するのにイベントに固有のデータを使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="68165-1347">You can also use event-specific data to store information the application can process independently of the Event Viewer.</span></span> <span data-ttu-id="68165-1348">たとえば、具体的には、イベントのビューアーを記述したり、ログ ファイルをスキャンし、イベントに固有のデータから情報を含むレポートを作成するプログラムを記述します。</span><span class="sxs-lookup"><span data-stu-id="68165-1348">For example, you could write a viewer specifically for your events, or write a program that scans the logfile and creates reports that include information from the event-specific data.</span></span>  
  
 <span data-ttu-id="68165-1349">バイナリのデータだけでなく、アプリケーション定義のカテゴリと、アプリケーション定義のイベント識別子を指定できます。</span><span class="sxs-lookup"><span data-stu-id="68165-1349">In addition to the binary data, you can specify an application-defined category and an application-defined event identifier.</span></span> <span data-ttu-id="68165-1350">イベント ビューアーでは、イベント ソースによって書き込まれたイベントをフィルター処理するカテゴリを使用します。</span><span class="sxs-lookup"><span data-stu-id="68165-1350">The Event Viewer uses the category to filter events written by an event source.</span></span> <span data-ttu-id="68165-1351">ローカライズされたカテゴリ文字列を表示するカテゴリ リソース識別子として使用できます。 またはイベント ビューアーは、数値の値として、カテゴリを表示できます。</span><span class="sxs-lookup"><span data-stu-id="68165-1351">The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1352">`message`文字列は、% を含めることはできません*n*ここで、 *n*整数値 (たとえば、%1) は、イベント ビューアーは、挿入文字列として扱います。</span><span class="sxs-lookup"><span data-stu-id="68165-1352">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="68165-1353">文字のシーケンスをインターネット プロトコル バージョン 6 (IPv6) アドレスはこれを含めることができます、ために、IPv6 アドレスを含むイベント メッセージがログ記録できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1353">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1354">`category`パラメーターは、正の値を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1354">The `category` parameter should be a positive value.</span></span> <span data-ttu-id="68165-1355">負の値のカテゴリの値は、イベント ビューアーの補完的な正の数値として表示します。</span><span class="sxs-lookup"><span data-stu-id="68165-1355">Negative category values appear as a complementary positive number in the Event Viewer.</span></span> <span data-ttu-id="68165-1356">たとえばを-10 は 65,526、65,535 として-1 が表示されます。</span><span class="sxs-lookup"><span data-stu-id="68165-1356">For example, a -10 appears as 65,526, a -1 as 65,535.</span></span>  
  
 <span data-ttu-id="68165-1357">イベント ビューアーでは、ローカライズされたカテゴリ文字列を表示するには、イベント ソース、カテゴリ リソース ファイルで構成され、設定を使用する必要があります、`category`カテゴリ リソース ファイル内のリソース識別子。</span><span class="sxs-lookup"><span data-stu-id="68165-1357">To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the `category` to a resource identifier in the category resource file.</span></span> <span data-ttu-id="68165-1358">構成済みのカテゴリ リソース ファイル、または指定したイベント ソースが持っていない場合`category`し、イベント ビューアーでは、そのエントリの数値のカテゴリの値を表示します。 カテゴリ リソース ファイル内の文字列のインデックスはされません。</span><span class="sxs-lookup"><span data-stu-id="68165-1358">If the event source does not have a configured category resource file, or the specified `category` does not index a string in the category resource file, then the Event Viewer displays the numeric category value for that entry.</span></span> <span data-ttu-id="68165-1359">カテゴリ リソース ファイルのリソース ファイルでカテゴリ文字列の数と構成を使用して、<xref:System.Diagnostics.EventLogInstaller>または<xref:System.Diagnostics.EventSourceCreationData>クラス。</span><span class="sxs-lookup"><span data-stu-id="68165-1359">Configure the category resource file, along with the number of category strings in the resource file, using the <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 <span data-ttu-id="68165-1360">イベント識別子、イベント ソースおよびイベントを一意に識別します。</span><span class="sxs-lookup"><span data-stu-id="68165-1360">Event identifiers, along with the event source, uniquely identify an event.</span></span> <span data-ttu-id="68165-1361">各アプリケーションには、番号付きのイベントとマップ先の説明文字列を定義できます。</span><span class="sxs-lookup"><span data-stu-id="68165-1361">Each application can define its own numbered events and the description strings to which they map.</span></span> <span data-ttu-id="68165-1362">イベント ビューアーでは、ユーザーの問題点を理解し、実行するアクションを提案するためにこれらの文字列値を表示します。</span><span class="sxs-lookup"><span data-stu-id="68165-1362">Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.</span></span>  
  
 <span data-ttu-id="68165-1363">最後に、指定、<xref:System.Diagnostics.EventLogEntryType>イベント ログに書き込まれるイベント。</span><span class="sxs-lookup"><span data-stu-id="68165-1363">Finally, you can specify an <xref:System.Diagnostics.EventLogEntryType> for the event being written to the event log.</span></span> <span data-ttu-id="68165-1364">`type`アイコンとテキスト ログのイベント ビューアーの種類 列で示されます。</span><span class="sxs-lookup"><span data-stu-id="68165-1364">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span> <span data-ttu-id="68165-1365">このパラメーターは、イベントの種類がエラー、警告、情報、監査正常終了、または失敗の監査であるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="68165-1365">This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</span></span>  
  
 <span data-ttu-id="68165-1366">設定する必要があります、<xref:System.Diagnostics.EventLog.Source%2A>プロパティを<xref:System.Diagnostics.EventLog>コンポーネントがログにエントリを記述する前にします。</span><span class="sxs-lookup"><span data-stu-id="68165-1366">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before you can write entries to the log.</span></span> <span data-ttu-id="68165-1367">作成し、ソースと最初のエントリを書き込む前に、イベント ソースを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1367">You must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="68165-1368">アプリケーションのインストール中に新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-1368">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="68165-1369">これにより、登録済みのイベント ソースの一覧とその構成を更新するオペレーティング システムまでの時間です。</span><span class="sxs-lookup"><span data-stu-id="68165-1369">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="68165-1370">オペレーティング システムでは、イベントのソースの一覧は更新されていない場合は、書き込み操作は失敗、新しいソースを持つイベントを記述しようとしました。</span><span class="sxs-lookup"><span data-stu-id="68165-1370">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="68165-1371">使用して新しいソースを構成することができます、 <xref:System.Diagnostics.EventLogInstaller>、またはを使用して、<xref:System.Diagnostics.EventLog.CreateEventSource%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68165-1371">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="68165-1372">新しいイベント ソースを作成するコンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-1372">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="68165-1373">ソースが指定されている場合、<xref:System.Diagnostics.EventLog.Source%2A>このプロパティ<xref:System.Diagnostics.EventLog>コンポーネントが書き込むコンピューターのインスタンスが登録されていない<xref:System.Diagnostics.EventLog.WriteEntry%2A>呼び出し<xref:System.Diagnostics.EventLog.CreateEventSource%2A>ソースを登録します。</span><span class="sxs-lookup"><span data-stu-id="68165-1373">If the source specified in the <xref:System.Diagnostics.EventLog.Source%2A> property of this <xref:System.Diagnostics.EventLog> instance is not registered on the computer that your component is writing to, <xref:System.Diagnostics.EventLog.WriteEntry%2A> calls <xref:System.Diagnostics.EventLog.CreateEventSource%2A> and registers the source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1374">指定しない場合、<xref:System.Diagnostics.EventLog.MachineName%2A>の<xref:System.Diagnostics.EventLog>インスタンスを呼び出す前に<xref:System.Diagnostics.EventLog.CreateEventSource%2A>または<xref:System.Diagnostics.EventLog.WriteEntry%2A>、ローカル コンピューター (".") と見なされます。</span><span class="sxs-lookup"><span data-stu-id="68165-1374">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A> for your <xref:System.Diagnostics.EventLog> instance before you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> or <xref:System.Diagnostics.EventLog.WriteEntry%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="68165-1375">システムを登録する必要がある場合、<xref:System.Diagnostics.EventLog.Source%2A>呼び出しを通じて<xref:System.Diagnostics.EventLog.WriteEntry%2A>と<xref:System.Diagnostics.EventLog.Log%2A>プロパティに設定されていない、<xref:System.Diagnostics.EventLog>インスタンス、アプリケーション ログには、ログの既定値します。</span><span class="sxs-lookup"><span data-stu-id="68165-1375">If the system needs to register the <xref:System.Diagnostics.EventLog.Source%2A> through a call to <xref:System.Diagnostics.EventLog.WriteEntry%2A> and the <xref:System.Diagnostics.EventLog.Log%2A> property has not been set on your <xref:System.Diagnostics.EventLog> instance, the log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1376">上に示した多くの例外は、登録プロセス中に発生したエラーによって生成される、<xref:System.Diagnostics.EventLog.Source%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-1376">Many exceptions listed above are generated by errors raised during the process of registering the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span>  
  
 <span data-ttu-id="68165-1377">ソースは、ローカライズされたエントリを書き込むか、または直接の文字列を書き込むように構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1377">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="68165-1378"><xref:System.Diagnostics.EventLog.WriteEntry%2A>メソッドは、イベント ログに直接指定された文字列を書き込みます。 ローカライズ可能なメッセージ リソース ファイルを使用しません。</span><span class="sxs-lookup"><span data-stu-id="68165-1378">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="68165-1379">使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>ローカライズされたメッセージ リソース ファイルを使用してイベントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1379">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="68165-1380">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2 つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1380">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="68165-1381">たとえば、リソース ファイルでは、1 つのソースを構成およびでは、そのソースを使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッドをイベント ログのリソース識別子を使用してエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1381">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="68165-1382">リソースのファイルがない場合、別のソースを作成しでそのソースを使用し、<xref:System.Diagnostics.EventLog.WriteEntry%2A>そのソースを使用して、イベント ログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1382">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1383">リモート コンピューターへのエントリを記述する場合 (文字列)、メッセージの値可能性がありますいない期待どおりでは、リモート コンピューターに .NET Framework が実行されていない場合。</span><span class="sxs-lookup"><span data-stu-id="68165-1383">If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1384">場合、`message`パラメーターには、NUL 文字が含まれる、イベント ログにメッセージは、NUL 文字で終了します。</span><span class="sxs-lookup"><span data-stu-id="68165-1384">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_WriteEntry_5#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_WriteEntry_5/CPP/eventlog_writeentry_5.cpp#1)]
 [!code-csharp[EventLog_WriteEntry_5#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_WriteEntry_5/CS/eventlog_writeentry_5.cs#1)]
 [!code-vb[EventLog_WriteEntry_5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_WriteEntry_5/VB/eventlog_writeentry_5.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-1385"><see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。</span><span class="sxs-lookup"><span data-stu-id="68165-1385">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="68165-1386">または</span><span class="sxs-lookup"><span data-stu-id="68165-1386">-or-</span></span> 
<span data-ttu-id="68165-1387">メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。</span><span class="sxs-lookup"><span data-stu-id="68165-1387">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="68165-1388">または</span><span class="sxs-lookup"><span data-stu-id="68165-1388">-or-</span></span> 
<span data-ttu-id="68165-1389">ソースは既に別のイベント ログに登録されています。</span><span class="sxs-lookup"><span data-stu-id="68165-1389">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="68165-1390">または</span><span class="sxs-lookup"><span data-stu-id="68165-1390">-or-</span></span> 
 <span data-ttu-id="68165-1391"><paramref name="eventID" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="68165-1391"><paramref name="eventID" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="68165-1392">または</span><span class="sxs-lookup"><span data-stu-id="68165-1392">-or-</span></span> 
<span data-ttu-id="68165-1393">メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。</span><span class="sxs-lookup"><span data-stu-id="68165-1393">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="68165-1394">または</span><span class="sxs-lookup"><span data-stu-id="68165-1394">-or-</span></span> 
<span data-ttu-id="68165-1395">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="68165-1395">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-1396">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-1396">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="68165-1397"><paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="68165-1397"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="68165-1398">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="68165-1398">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="68165-1399">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1399">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-1400">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-1400">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-1401">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-1401">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public static void WriteEntry (string source, string message, System.Diagnostics.EventLogEntryType type, int eventID, short category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEntry(string source, string message, valuetype System.Diagnostics.EventLogEntryType type, int32 eventID, int16 category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEntry (source As String, message As String, type As EventLogEntryType, eventID As Integer, category As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEntry(System::String ^ source, System::String ^ message, System::Diagnostics::EventLogEntryType type, int eventID, short category);" />
      <MemberSignature Language="F#" Value="static member WriteEntry : string * string * System.Diagnostics.EventLogEntryType * int * int16 -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEntry (source, message, type, eventID, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
        <Parameter Name="eventID" Type="System.Int32" />
        <Parameter Name="category" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="68165-1402">アプリケーションを指定されたコンピューターに登録するために使用されるソース。</span><span class="sxs-lookup"><span data-stu-id="68165-1402">The source by which the application is registered on the specified computer.</span></span></param>
        <param name="message"><span data-ttu-id="68165-1403">イベント ログに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="68165-1403">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="68165-1404"><see cref="T:System.Diagnostics.EventLogEntryType" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="68165-1404">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <param name="eventID"><span data-ttu-id="68165-1405">イベントの、アプリケーション固有の識別子。</span><span class="sxs-lookup"><span data-stu-id="68165-1405">The application-specific identifier for the event.</span></span></param>
        <param name="category"><span data-ttu-id="68165-1406">メッセージと関連付けられた、アプリケーション固有のサブカテゴリ。</span><span class="sxs-lookup"><span data-stu-id="68165-1406">The application-specific subcategory associated with the message.</span></span></param>
        <summary><span data-ttu-id="68165-1407">指定した登録イベント ソースを使用して、メッセージ テキスト、アプリケーション定義のイベント識別子、およびアプリケーション定義のカテゴリと共にエントリをイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1407">Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log, using the specified registered event source.</span></span> <span data-ttu-id="68165-1408"><paramref name="category" /> は、イベント ビューアーでログ内のイベントをフィルター処理するときに使用できます。</span><span class="sxs-lookup"><span data-stu-id="68165-1408">The <paramref name="category" /> can be used by the Event Viewer to filter events in the log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-1409">このメソッドを使用して、アプリケーション定義を持つエントリを書き込む`category`イベント ログに適切なログのイベント ソースとして既に登録されているソースを使用します。</span><span class="sxs-lookup"><span data-stu-id="68165-1409">Use this method to write an entry with an application-defined `category` to the event log, using a source that is already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="68165-1410">イベント ビューアーでは、イベント ソースによって書き込まれたイベントをフィルター処理するカテゴリを使用します。</span><span class="sxs-lookup"><span data-stu-id="68165-1410">The Event Viewer uses the category to filter events written by an event source.</span></span> <span data-ttu-id="68165-1411">ローカライズされたカテゴリ文字列を表示するカテゴリ リソース識別子として使用できます。 またはイベント ビューアーは、数値の値として、カテゴリを表示できます。</span><span class="sxs-lookup"><span data-stu-id="68165-1411">The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1412">`category`パラメーターは、正の値を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1412">The `category` parameter should be a positive value.</span></span> <span data-ttu-id="68165-1413">負の値のカテゴリの値は、イベント ビューアーの補完的な正の数値として表示します。</span><span class="sxs-lookup"><span data-stu-id="68165-1413">Negative category values appear as a complementary positive number in the Event Viewer.</span></span> <span data-ttu-id="68165-1414">たとえばを-10 は 65,526、65,535 として-1 が表示されます。</span><span class="sxs-lookup"><span data-stu-id="68165-1414">For example, a -10 appears as 65,526, a -1 as 65,535.</span></span>  
  
 <span data-ttu-id="68165-1415">イベント ビューアーでは、ローカライズされたカテゴリ文字列を表示するには、イベント ソース、カテゴリ リソース ファイルで構成され、設定を使用する必要があります、`category`カテゴリ リソース ファイル内のリソース識別子。</span><span class="sxs-lookup"><span data-stu-id="68165-1415">To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the `category` to a resource identifier in the category resource file.</span></span> <span data-ttu-id="68165-1416">構成済みのカテゴリ リソース ファイル、または指定したイベント ソースが持っていない場合`category`し、イベント ビューアーでは、そのエントリの数値のカテゴリの値を表示します。 カテゴリ リソース ファイル内の文字列のインデックスはされません。</span><span class="sxs-lookup"><span data-stu-id="68165-1416">If the event source does not have a configured category resource file, or the specified `category` does not index a string in the category resource file, then the Event Viewer displays the numeric category value for that entry.</span></span> <span data-ttu-id="68165-1417">カテゴリ リソース ファイルのリソース ファイルでカテゴリ文字列の数と構成を使用して、<xref:System.Diagnostics.EventLogInstaller>または<xref:System.Diagnostics.EventSourceCreationData>クラス。</span><span class="sxs-lookup"><span data-stu-id="68165-1417">Configure the category resource file, along with the number of category strings in the resource file, using the <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 <span data-ttu-id="68165-1418">カテゴリだけでなく、イベント ログに書き込まれるイベントのイベント識別子を指定できます。</span><span class="sxs-lookup"><span data-stu-id="68165-1418">In addition to the category, you can specify an event identifier for the event being written to the event log.</span></span> <span data-ttu-id="68165-1419">イベント識別子、イベント ソースおよびイベントを一意に識別します。</span><span class="sxs-lookup"><span data-stu-id="68165-1419">Event identifiers, along with the event source, uniquely identify an event.</span></span> <span data-ttu-id="68165-1420">各アプリケーションには、番号付きのイベントとマップ先の説明文字列を定義できます。</span><span class="sxs-lookup"><span data-stu-id="68165-1420">Each application can define its own numbered events and the description strings to which they map.</span></span> <span data-ttu-id="68165-1421">イベント ビューアーでは、ユーザーの問題点を理解し、実行するアクションを提案するためにこれらの文字列値を表示します。</span><span class="sxs-lookup"><span data-stu-id="68165-1421">Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.</span></span>  
  
 <span data-ttu-id="68165-1422">最後に、指定、<xref:System.Diagnostics.EventLogEntryType>イベント ログに書き込まれるイベント。</span><span class="sxs-lookup"><span data-stu-id="68165-1422">Finally, you can specify an <xref:System.Diagnostics.EventLogEntryType> for the event being written to the event log.</span></span> <span data-ttu-id="68165-1423">`type`アイコンとテキスト ログのイベント ビューアーの種類 列で示されます。</span><span class="sxs-lookup"><span data-stu-id="68165-1423">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span> <span data-ttu-id="68165-1424">このパラメーターは、イベントの種類がエラー、警告、情報、監査正常終了、または失敗の監査であるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="68165-1424">This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</span></span>  
  
 <span data-ttu-id="68165-1425">作成し、ソースと最初のエントリを書き込む前に、イベント ソースを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1425">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="68165-1426">アプリケーションのインストール中に新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-1426">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="68165-1427">これにより、登録済みのイベント ソースの一覧とその構成を更新するオペレーティング システムまでの時間です。</span><span class="sxs-lookup"><span data-stu-id="68165-1427">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="68165-1428">オペレーティング システムでは、イベントのソースの一覧は更新されていない場合は、書き込み操作は失敗、新しいソースを持つイベントを記述しようとしました。</span><span class="sxs-lookup"><span data-stu-id="68165-1428">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="68165-1429">使用して新しいソースを構成することができます、 <xref:System.Diagnostics.EventLogInstaller>、またはを使用して、<xref:System.Diagnostics.EventLog.CreateEventSource%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68165-1429">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="68165-1430">新しいイベント ソースを作成するコンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-1430">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="68165-1431">ソースは、ローカライズされたエントリを書き込むか、または直接の文字列を書き込むように構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1431">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="68165-1432"><xref:System.Diagnostics.EventLog.WriteEntry%2A>メソッドは、イベント ログに直接指定された文字列を書き込みます。 ローカライズ可能なメッセージ リソース ファイルを使用しません。</span><span class="sxs-lookup"><span data-stu-id="68165-1432">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="68165-1433">使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>ローカライズされたメッセージ リソース ファイルを使用してイベントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1433">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="68165-1434">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2 つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1434">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="68165-1435">たとえば、リソース ファイルでは、1 つのソースを構成およびでは、そのソースを使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッドをイベント ログのリソース識別子を使用してエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1435">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="68165-1436">リソースのファイルがない場合、別のソースを作成しでそのソースを使用し、<xref:System.Diagnostics.EventLog.WriteEntry%2A>そのソースを使用して、イベント ログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1436">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1437">場合、`message`パラメーターには、NUL 文字が含まれる、イベント ログにメッセージは、NUL 文字で終了します。</span><span class="sxs-lookup"><span data-stu-id="68165-1437">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
>   
>  <span data-ttu-id="68165-1438">`message`文字列は、% を含めることはできません*n*ここで、 *n*整数値 (たとえば、%1) は、イベント ビューアーは、挿入文字列として扱います。</span><span class="sxs-lookup"><span data-stu-id="68165-1438">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="68165-1439">文字のシーケンスをインターネット プロトコル バージョン 6 (IPv6) アドレスはこれを含めることができます、ために、IPv6 アドレスを含むイベント メッセージがログ記録できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1439">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_WriteEntry_1_3#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CPP/eventlog_writeentry_1_3.cpp#1)]
 [!code-csharp[EventLog_WriteEntry_1_3#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CS/eventlog_writeentry_1_3.cs#1)]
 [!code-vb[EventLog_WriteEntry_1_3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_WriteEntry_1_3/VB/eventlog_writeentry_1_3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-1440"><paramref name="source" /> 値が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="68165-1440">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="68165-1441">または</span><span class="sxs-lookup"><span data-stu-id="68165-1441">-or-</span></span> 
<span data-ttu-id="68165-1442"><paramref name="source" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68165-1442">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="68165-1443">または</span><span class="sxs-lookup"><span data-stu-id="68165-1443">-or-</span></span> 
 <span data-ttu-id="68165-1444"><paramref name="eventID" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="68165-1444"><paramref name="eventID" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="68165-1445">または</span><span class="sxs-lookup"><span data-stu-id="68165-1445">-or-</span></span> 
<span data-ttu-id="68165-1446">メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。</span><span class="sxs-lookup"><span data-stu-id="68165-1446">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="68165-1447">または</span><span class="sxs-lookup"><span data-stu-id="68165-1447">-or-</span></span> 
<span data-ttu-id="68165-1448">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="68165-1448">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-1449">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-1449">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="68165-1450"><paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="68165-1450"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="68165-1451">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="68165-1451">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="68165-1452">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1452">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-1453">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-1453">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-1454">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-1454">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public static void WriteEntry (string source, string message, System.Diagnostics.EventLogEntryType type, int eventID, short category, byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEntry(string source, string message, valuetype System.Diagnostics.EventLogEntryType type, int32 eventID, int16 category, unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEntry (source As String, message As String, type As EventLogEntryType, eventID As Integer, category As Short, rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEntry(System::String ^ source, System::String ^ message, System::Diagnostics::EventLogEntryType type, int eventID, short category, cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="static member WriteEntry : string * string * System.Diagnostics.EventLogEntryType * int * int16 * byte[] -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEntry (source, message, type, eventID, category, rawData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
        <Parameter Name="eventID" Type="System.Int32" />
        <Parameter Name="category" Type="System.Int16" />
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="68165-1455">アプリケーションを指定されたコンピューターに登録するために使用されるソース。</span><span class="sxs-lookup"><span data-stu-id="68165-1455">The source by which the application is registered on the specified computer.</span></span></param>
        <param name="message"><span data-ttu-id="68165-1456">イベント ログに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="68165-1456">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="68165-1457"><see cref="T:System.Diagnostics.EventLogEntryType" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="68165-1457">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <param name="eventID"><span data-ttu-id="68165-1458">イベントの、アプリケーション固有の識別子。</span><span class="sxs-lookup"><span data-stu-id="68165-1458">The application-specific identifier for the event.</span></span></param>
        <param name="category"><span data-ttu-id="68165-1459">メッセージと関連付けられた、アプリケーション固有のサブカテゴリ。</span><span class="sxs-lookup"><span data-stu-id="68165-1459">The application-specific subcategory associated with the message.</span></span></param>
        <param name="rawData"><span data-ttu-id="68165-1460">エントリに関連付けられているバイナリ データを保持するバイト配列。</span><span class="sxs-lookup"><span data-stu-id="68165-1460">An array of bytes that holds the binary data associated with the entry.</span></span></param>
        <summary><span data-ttu-id="68165-1461">指定した登録イベント ソースを使用して、指定したメッセージ テキスト、アプリケーション定義のイベント識別子、およびアプリケーション定義のカテゴリと共にエントリをイベント ログに書き込み、メッセージにバイナリ データを付加します。</span><span class="sxs-lookup"><span data-stu-id="68165-1461">Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log (using the specified registered event source) and appends binary data to the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-1462">アプリケーションで定義されたイベントに固有のデータを適切なログのイベント ソースとして既に登録されているソースを使用して、イベント ログに書き込むには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="68165-1462">Use this method to write application-defined event-specific data to the event log, using a source already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="68165-1463">イベント ビューアーでこのデータを解釈しません結合の 16 進数およびテキスト形式でのみ、生データを表示します。</span><span class="sxs-lookup"><span data-stu-id="68165-1463">The Event Viewer does not interpret this data; it displays raw data only in a combined hexadecimal and text format.</span></span> <span data-ttu-id="68165-1464">イベントに固有のデータを多用します。役に立つことを確認する場合にのみ含めます。</span><span class="sxs-lookup"><span data-stu-id="68165-1464">Use event-specific data sparingly; include it only if you are sure it will be useful.</span></span> <span data-ttu-id="68165-1465">イベント ビューアーとは無関係に、アプリケーションが処理できる情報を格納するのにイベントに固有のデータを使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="68165-1465">You can also use event-specific data to store information the application can process independently of the Event Viewer.</span></span> <span data-ttu-id="68165-1466">たとえば、具体的には、イベントのビューアーを記述したり、ログ ファイルをスキャンし、イベントに固有のデータから情報を含むレポートを作成するプログラムを記述します。</span><span class="sxs-lookup"><span data-stu-id="68165-1466">For example, you could write a viewer specifically for your events, or write a program that scans the logfile and creates reports that include information from the event-specific data.</span></span>  
  
 <span data-ttu-id="68165-1467">バイナリのデータだけでなく、アプリケーション定義のカテゴリと、アプリケーション定義のイベント識別子を指定できます。</span><span class="sxs-lookup"><span data-stu-id="68165-1467">In addition to the binary data, you can specify an application-defined category and an application-defined event identifier.</span></span> <span data-ttu-id="68165-1468">イベント ビューアーでは、イベント ソースによって書き込まれたイベントをフィルター処理するカテゴリを使用します。</span><span class="sxs-lookup"><span data-stu-id="68165-1468">The Event Viewer uses the category to filter events written by an event source.</span></span> <span data-ttu-id="68165-1469">ローカライズされたカテゴリ文字列を表示するカテゴリ リソース識別子として使用できます。 またはイベント ビューアーは、数値の値として、カテゴリを表示できます。</span><span class="sxs-lookup"><span data-stu-id="68165-1469">The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1470">`category`パラメーターは、正の値を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1470">The `category` parameter should be a positive value.</span></span> <span data-ttu-id="68165-1471">負の値のカテゴリの値は、イベント ビューアーの補完的な正の数値として表示します。</span><span class="sxs-lookup"><span data-stu-id="68165-1471">Negative category values appear as a complementary positive number in the Event Viewer.</span></span> <span data-ttu-id="68165-1472">たとえば、65,526、65,535 として-1 を-10 が表示されます。</span><span class="sxs-lookup"><span data-stu-id="68165-1472">For example, a -10 will appear as 65,526, a -1 as 65,535.</span></span>  
  
 <span data-ttu-id="68165-1473">イベント ビューアーでは、ローカライズされたカテゴリ文字列を表示するには、イベント ソース、カテゴリ リソース ファイルで構成され、設定を使用する必要があります、`category`カテゴリ リソース ファイル内のリソース識別子。</span><span class="sxs-lookup"><span data-stu-id="68165-1473">To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the `category` to a resource identifier in the category resource file.</span></span> <span data-ttu-id="68165-1474">構成済みのカテゴリ リソース ファイル、または指定したイベント ソースが持っていない場合`category`し、イベント ビューアーでは、そのエントリの数値のカテゴリの値を表示します。 カテゴリ リソース ファイル内の文字列のインデックスはされません。</span><span class="sxs-lookup"><span data-stu-id="68165-1474">If the event source does not have a configured category resource file, or the specified `category` does not index a string in the category resource file, then the Event Viewer displays the numeric category value for that entry.</span></span> <span data-ttu-id="68165-1475">カテゴリ リソース ファイルのリソース ファイルでカテゴリ文字列の数と構成を使用して、<xref:System.Diagnostics.EventLogInstaller>または<xref:System.Diagnostics.EventSourceCreationData>クラス。</span><span class="sxs-lookup"><span data-stu-id="68165-1475">Configure the category resource file, along with the number of category strings in the resource file, using the <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 <span data-ttu-id="68165-1476">イベント識別子、と共に、イベント ソースは、イベントを一意に識別します。</span><span class="sxs-lookup"><span data-stu-id="68165-1476">Event identifiers, together with the event source, uniquely identify an event.</span></span> <span data-ttu-id="68165-1477">各アプリケーションには、番号付きのイベントとマップ先の説明文字列を定義できます。</span><span class="sxs-lookup"><span data-stu-id="68165-1477">Each application can define its own numbered events and the description strings to which they map.</span></span> <span data-ttu-id="68165-1478">イベント ビューアーでは、ユーザーの問題点を理解し、実行するアクションを提案するためにこれらの文字列値を表示します。</span><span class="sxs-lookup"><span data-stu-id="68165-1478">Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.</span></span>  
  
 <span data-ttu-id="68165-1479">最後に、指定、<xref:System.Diagnostics.EventLogEntryType>イベント ログに書き込まれるイベント。</span><span class="sxs-lookup"><span data-stu-id="68165-1479">Finally, you can specify an <xref:System.Diagnostics.EventLogEntryType> for the event being written to the event log.</span></span> <span data-ttu-id="68165-1480">`type`アイコンとテキスト ログのイベント ビューアーの種類 列で示されます。</span><span class="sxs-lookup"><span data-stu-id="68165-1480">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span> <span data-ttu-id="68165-1481">このパラメーターは、イベントの種類がエラー、警告、情報、監査正常終了、または失敗の監査であるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="68165-1481">This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</span></span>  
  
 <span data-ttu-id="68165-1482">作成し、ソースと最初のエントリを書き込む前に、イベント ソースを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1482">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="68165-1483">アプリケーションのインストール中に新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-1483">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="68165-1484">これにより、登録済みのイベント ソースの一覧とその構成を更新するオペレーティング システムまでの時間です。</span><span class="sxs-lookup"><span data-stu-id="68165-1484">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="68165-1485">オペレーティング システムでは、イベントのソースの一覧は更新されていない場合は、書き込み操作は失敗、新しいソースを持つイベントを記述しようとしました。</span><span class="sxs-lookup"><span data-stu-id="68165-1485">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="68165-1486">使用して新しいソースを構成することができます、 <xref:System.Diagnostics.EventLogInstaller>、またはを使用して、<xref:System.Diagnostics.EventLog.CreateEventSource%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68165-1486">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="68165-1487">新しいイベント ソースを作成するコンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-1487">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="68165-1488">ソースは、ローカライズされたエントリを書き込むか、または直接の文字列を書き込むように構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1488">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="68165-1489"><xref:System.Diagnostics.EventLog.WriteEntry%2A>メソッドは、イベント ログに直接指定された文字列を書き込みます。 ローカライズ可能なメッセージ リソース ファイルを使用しません。</span><span class="sxs-lookup"><span data-stu-id="68165-1489">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="68165-1490">使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>ローカライズされたメッセージ リソース ファイルを使用してイベントを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1490">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="68165-1491">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2 つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1491">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="68165-1492">たとえば、リソース ファイルでは、1 つのソースを構成およびでは、そのソースを使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッドをイベント ログのリソース識別子を使用してエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1492">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="68165-1493">リソースのファイルがない場合、別のソースを作成しでそのソースを使用し、<xref:System.Diagnostics.EventLog.WriteEntry%2A>そのソースを使用して、イベント ログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1493">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1494">場合、`message`パラメーターには、NUL 文字が含まれる、イベント ログにメッセージは、NUL 文字で終了します。</span><span class="sxs-lookup"><span data-stu-id="68165-1494">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
>   
>  <span data-ttu-id="68165-1495">`message`文字列は、% を含めることはできません*n*ここで、 *n*整数値 (たとえば、%1) は、イベント ビューアーは、挿入文字列として扱います。</span><span class="sxs-lookup"><span data-stu-id="68165-1495">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="68165-1496">文字のシーケンスをインターネット プロトコル バージョン 6 (IPv6) アドレスはこれを含めることができます、ために、IPv6 アドレスを含むイベント メッセージがログ記録できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1496">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_WriteEntry_1_3#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CPP/eventlog_writeentry_1_3.cpp#2)]
 [!code-csharp[EventLog_WriteEntry_1_3#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CS/eventlog_writeentry_1_3.cs#2)]
 [!code-vb[EventLog_WriteEntry_1_3#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_WriteEntry_1_3/VB/eventlog_writeentry_1_3.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-1497"><paramref name="source" /> 値が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="68165-1497">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="68165-1498">または</span><span class="sxs-lookup"><span data-stu-id="68165-1498">-or-</span></span> 
<span data-ttu-id="68165-1499"><paramref name="source" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68165-1499">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="68165-1500">または</span><span class="sxs-lookup"><span data-stu-id="68165-1500">-or-</span></span> 
 <span data-ttu-id="68165-1501"><paramref name="eventID" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="68165-1501"><paramref name="eventID" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="68165-1502">または</span><span class="sxs-lookup"><span data-stu-id="68165-1502">-or-</span></span> 
<span data-ttu-id="68165-1503">メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。</span><span class="sxs-lookup"><span data-stu-id="68165-1503">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="68165-1504">または</span><span class="sxs-lookup"><span data-stu-id="68165-1504">-or-</span></span> 
<span data-ttu-id="68165-1505">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="68165-1505">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="68165-1506"><paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="68165-1506"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-1507">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-1507">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="68165-1508">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="68165-1508">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="68165-1509">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1509">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-1510">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-1510">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-1511">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-1511">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEvent">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68165-1512">ローカライズされたイベント エントリをイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1512">Writes a localized event entry to the event log.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="public void WriteEvent (System.Diagnostics.EventInstance instance, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEvent(class System.Diagnostics.EventInstance instance, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEvent (instance As EventInstance, ParamArray values As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEvent(System::Diagnostics::EventInstance ^ instance, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : System.Diagnostics.EventInstance * obj[] -&gt; unit" Usage="eventLog.WriteEvent (instance, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Diagnostics.EventInstance" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="values" Type="System.Object[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="68165-1513">ローカライズされたイベント ログ エントリを表す <see cref="T:System.Diagnostics.EventInstance" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="68165-1513">An <see cref="T:System.Diagnostics.EventInstance" /> instance that represents a localized event log entry.</span></span></param>
        <param name="values"><span data-ttu-id="68165-1514">イベント ログ エントリのメッセージ テキストにマージする文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="68165-1514">An array of strings to merge into the message text of the event log entry.</span></span></param>
        <summary><span data-ttu-id="68165-1515">ローカライズされたエントリをイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1515">Writes a localized entry to the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-1516">ローカライズされたエントリをイベント ログに書き込むには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="68165-1516">Use this method to write a localized entry to the event log.</span></span> <span data-ttu-id="68165-1517">文字列値ではなく、リソース識別子では、イベントのプロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="68165-1517">You specify the event properties with resource identifiers rather than string values.</span></span> <span data-ttu-id="68165-1518">イベント ビューアーでは、リソース識別子を使用して、ローカライズされたリソース ファイルから対応する文字列を表示、<xref:System.Diagnostics.EventLog.Source%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-1518">The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource file for the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span> <span data-ttu-id="68165-1519">リソース識別子を使用してイベントを記述する前に、対応するリソース ファイルとソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1519">You must register the source with the corresponding resource file before you write events using resource identifiers.</span></span>  
  
 <span data-ttu-id="68165-1520">入力`instance`インスタンスは、イベント メッセージとプロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="68165-1520">The input `instance` instance specifies the event message and properties.</span></span> <span data-ttu-id="68165-1521">設定、<xref:System.Diagnostics.EventInstance.InstanceId%2A>の`instance`ソース メッセージ リソース ファイルで定義されたメッセージを入力します。</span><span class="sxs-lookup"><span data-stu-id="68165-1521">Set the <xref:System.Diagnostics.EventInstance.InstanceId%2A> of the `instance` input for the defined message in the source message resource file.</span></span> <span data-ttu-id="68165-1522">必要に応じて設定することができます、<xref:System.Diagnostics.EventInstance.CategoryId%2A>と<xref:System.Diagnostics.EventInstance.EntryType%2A>の`instance`イベント エントリのカテゴリとイベントの種類を定義する入力。</span><span class="sxs-lookup"><span data-stu-id="68165-1522">You can optionally set the <xref:System.Diagnostics.EventInstance.CategoryId%2A> and <xref:System.Diagnostics.EventInstance.EntryType%2A> of the `instance` input to define the category and event type of your event entry.</span></span> <span data-ttu-id="68165-1523">ローカライズされたメッセージ テキストに挿入する言語に依存しない文字列の配列を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="68165-1523">You can also specify an array of language-independent strings to insert into the localized message text.</span></span> <span data-ttu-id="68165-1524">設定`values`に`null`イベント メッセージに置換文字列の書式設定プレース ホルダーが含まれていない場合。</span><span class="sxs-lookup"><span data-stu-id="68165-1524">Set `values` to `null` if the event message does not contain formatting placeholders for replacement strings.</span></span>  
  
 <span data-ttu-id="68165-1525">設定する必要があります、<xref:System.Diagnostics.EventLog.Source%2A>プロパティを<xref:System.Diagnostics.EventLog>コンポーネントを使用する前に<xref:System.Diagnostics.EventLog.WriteEvent%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-1525">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before using <xref:System.Diagnostics.EventLog.WriteEvent%2A>.</span></span> <span data-ttu-id="68165-1526">指定したソースは、ローカライズされたエントリをログに書き込むように構成する必要があります。ソースには少なくとも必要メッセージ リソース ファイルの定義です。</span><span class="sxs-lookup"><span data-stu-id="68165-1526">The specified source must be configured for writing localized entries to the log; the source must at minimum have a message resource file defined.</span></span>  
  
 <span data-ttu-id="68165-1527">作成し、ソースと最初のエントリを書き込む前に、イベント ソースを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1527">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="68165-1528">アプリケーションのインストール中に新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-1528">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="68165-1529">これにより、登録済みのイベント ソースの一覧とその構成を更新するオペレーティング システムまでの時間です。</span><span class="sxs-lookup"><span data-stu-id="68165-1529">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="68165-1530">オペレーティング システムでは、イベントのソースの一覧は更新されていない場合は、書き込み操作は失敗、新しいソースを持つイベントを記述しようとしました。</span><span class="sxs-lookup"><span data-stu-id="68165-1530">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="68165-1531">使用して新しいソースを構成することができます、 <xref:System.Diagnostics.EventLogInstaller>、またはを使用して、<xref:System.Diagnostics.EventLog.CreateEventSource%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68165-1531">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="68165-1532">新しいイベント ソースを作成するコンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-1532">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="68165-1533">ソースは、ローカライズされたエントリを書き込むか、または直接の文字列を書き込むように構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1533">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="68165-1534">使用して、<xref:System.Diagnostics.EventLog.WriteEntry%2A>メソッドの場合は、アプリケーション イベント ログに直接文字列値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1534">Use the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method if your application writes string values directly to the event log.</span></span>  
  
 <span data-ttu-id="68165-1535">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2 つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1535">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="68165-1536">たとえば、リソース ファイルでは、1 つのソースを構成およびでは、そのソースを使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッドをイベント ログのリソース識別子を使用してエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1536">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="68165-1537">リソースのファイルがない場合、別のソースを作成しでそのソースを使用し、<xref:System.Diagnostics.EventLog.WriteEntry%2A>そのソースを使用して、イベント ログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1537">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1538">リモート コンピューターの値には、エントリを記述するかどうか、`message`文字列は、リモート コンピューターに .NET Framework が実行されていない場合に期待はない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1538">If you write an entry to a remote computer, the value of the `message` string might not be what you expect if the remote computer is not running the .NET Framework.</span></span> <span data-ttu-id="68165-1539">また、`message`文字列は、% を含めることはできません*n*ここで、 *n*整数値 (たとえば、%1) は、イベント ビューアーは、挿入文字列として扱います。</span><span class="sxs-lookup"><span data-stu-id="68165-1539">Also, the `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="68165-1540">文字のシーケンスをインターネット プロトコル バージョン 6 (IPv6) アドレスはこれを含めることができます、ために、IPv6 アドレスを含むイベント メッセージがログ記録できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1540">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-1541">次の例は、2 つの監査イベント ログにエントリを書き込みます`myNewLog`します。</span><span class="sxs-lookup"><span data-stu-id="68165-1541">The following example writes two audit entries to the event log `myNewLog`.</span></span> <span data-ttu-id="68165-1542">ローカル コンピューターに存在しない場合は、例では、新しいイベント ソースおよび新しいイベント ログを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-1542">The example creates a new event source and a new event log if they do not exist on the local computer.</span></span> <span data-ttu-id="68165-1543">リソース ファイル内のリソース識別子を使用してイベントのメッセージ テキストを指定します。</span><span class="sxs-lookup"><span data-stu-id="68165-1543">The event message text is specified using a resource identifier in a resource file.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#7](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#7)]
 [!code-csharp[EventLog_WriteEvent#7](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#7)]
 [!code-vb[EventLog_WriteEvent#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#7)]  
  
 <span data-ttu-id="68165-1544">EventLogMsgs.dll リソース ライブラリに組み込まれている次のメッセージのテキスト ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="68165-1544">The example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="68165-1545">メッセージのテキスト ファイルは、メッセージ リソース ファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="68165-1545">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="68165-1546">メッセージのテキスト ファイルでは、リソース識別子とカテゴリ、イベント メッセージ、およびパラメーターの挿入文字列のテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="68165-1546">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-1547"><see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。</span><span class="sxs-lookup"><span data-stu-id="68165-1547">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="68165-1548">または</span><span class="sxs-lookup"><span data-stu-id="68165-1548">-or-</span></span> 
<span data-ttu-id="68165-1549">メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。</span><span class="sxs-lookup"><span data-stu-id="68165-1549">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="68165-1550">または</span><span class="sxs-lookup"><span data-stu-id="68165-1550">-or-</span></span> 
<span data-ttu-id="68165-1551">ソースは既に別のイベント ログに登録されています。</span><span class="sxs-lookup"><span data-stu-id="68165-1551">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="68165-1552">または</span><span class="sxs-lookup"><span data-stu-id="68165-1552">-or-</span></span> 
 <span data-ttu-id="68165-1553"><paramref name="instance.InstanceId" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="68165-1553"><paramref name="instance.InstanceId" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="68165-1554">または</span><span class="sxs-lookup"><span data-stu-id="68165-1554">-or-</span></span> 
 <span data-ttu-id="68165-1555"><paramref name="values" /> には 256 を超える要素が格納されています。</span><span class="sxs-lookup"><span data-stu-id="68165-1555"><paramref name="values" /> has more than 256 elements.</span></span>  
  
<span data-ttu-id="68165-1556">または</span><span class="sxs-lookup"><span data-stu-id="68165-1556">-or-</span></span> 
<span data-ttu-id="68165-1557"><paramref name="values" /> 要素の 1 つが 32766 バイトを超えています。</span><span class="sxs-lookup"><span data-stu-id="68165-1557">One of the <paramref name="values" /> elements is longer than 32766 bytes.</span></span>  
  
<span data-ttu-id="68165-1558">または</span><span class="sxs-lookup"><span data-stu-id="68165-1558">-or-</span></span> 
<span data-ttu-id="68165-1559">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="68165-1559">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68165-1560"><paramref name="instance" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="68165-1560"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-1561">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-1561">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="68165-1562">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="68165-1562">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="68165-1563">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1563">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-1564">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-1564">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-1565">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-1565">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="T:System.Diagnostics.EventInstance" />
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="public void WriteEvent (System.Diagnostics.EventInstance instance, byte[] data, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEvent(class System.Diagnostics.EventInstance instance, unsigned int8[] data, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Byte[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEvent (instance As EventInstance, data As Byte(), ParamArray values As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEvent(System::Diagnostics::EventInstance ^ instance, cli::array &lt;System::Byte&gt; ^ data, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : System.Diagnostics.EventInstance * byte[] * obj[] -&gt; unit" Usage="eventLog.WriteEvent (instance, data, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Diagnostics.EventInstance" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Byte[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="values" Type="System.Object[]" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="68165-1566">ローカライズされたイベント ログ エントリを表す <see cref="T:System.Diagnostics.EventInstance" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="68165-1566">An <see cref="T:System.Diagnostics.EventInstance" /> instance that represents a localized event log entry.</span></span></param>
        <param name="data"><span data-ttu-id="68165-1567">エントリに関連付けられているバイナリ データを保持するバイト配列。</span><span class="sxs-lookup"><span data-stu-id="68165-1567">An array of bytes that holds the binary data associated with the entry.</span></span></param>
        <param name="values"><span data-ttu-id="68165-1568">イベント ログ エントリのメッセージ テキストにマージする文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="68165-1568">An array of strings to merge into the message text of the event log entry.</span></span></param>
        <summary><span data-ttu-id="68165-1569">指定したイベント データ、メッセージ置換文字列、および関連するバイナリ データと共にイベント ログ エントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1569">Writes an event log entry with the given event data, message replacement strings, and associated binary data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-1570">このメソッドを使用すると、イベント ログに追加のイベントに固有のデータのローカライズされたエントリを記述できます。</span><span class="sxs-lookup"><span data-stu-id="68165-1570">Use this method to write a localized entry with additional event-specific data to the event log.</span></span> <span data-ttu-id="68165-1571">文字列値ではなく、リソース識別子では、イベントのプロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="68165-1571">You specify the event properties with resource identifiers rather than string values.</span></span> <span data-ttu-id="68165-1572">イベント ビューアーでは、リソース識別子を使用して、ローカライズされたリソース ファイルから対応する文字列を表示、<xref:System.Diagnostics.EventLog.Source%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-1572">The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource file for the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span> <span data-ttu-id="68165-1573">リソース識別子を使用してイベントを記述する前に、対応するリソース ファイルとソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1573">You must register the source with the corresponding resource file before you write events using resource identifiers.</span></span>  
  
 <span data-ttu-id="68165-1574">入力`instance`インスタンスは、イベント メッセージとプロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="68165-1574">The input `instance` instance specifies the event message and properties.</span></span> <span data-ttu-id="68165-1575">設定、<xref:System.Diagnostics.EventInstance.InstanceId%2A>の`instance`ソース メッセージ リソース ファイルで定義されたメッセージを入力します。</span><span class="sxs-lookup"><span data-stu-id="68165-1575">Set the <xref:System.Diagnostics.EventInstance.InstanceId%2A> of the `instance` input for the defined message in the source message resource file.</span></span> <span data-ttu-id="68165-1576">必要に応じて設定することができます、<xref:System.Diagnostics.EventInstance.CategoryId%2A>と<xref:System.Diagnostics.EventInstance.EntryType%2A>の`instance`イベント エントリのカテゴリとイベントの種類を定義する入力。</span><span class="sxs-lookup"><span data-stu-id="68165-1576">You can optionally set the <xref:System.Diagnostics.EventInstance.CategoryId%2A> and <xref:System.Diagnostics.EventInstance.EntryType%2A> of the `instance` input to define the category and event type of your event entry.</span></span> <span data-ttu-id="68165-1577">ローカライズされたメッセージ テキストに挿入する言語に依存しない文字列の配列を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="68165-1577">You can also specify an array of language-independent strings to insert into the localized message text.</span></span> <span data-ttu-id="68165-1578">設定`values`に`null`イベント メッセージに置換文字列の書式設定プレース ホルダーが含まれていない場合。</span><span class="sxs-lookup"><span data-stu-id="68165-1578">Set `values` to `null` if the event message does not contain formatting placeholders for replacement strings.</span></span>  
  
 <span data-ttu-id="68165-1579">イベントのイベントの追加の詳細を提供する必要がある場合に、バイナリ データを指定します。</span><span class="sxs-lookup"><span data-stu-id="68165-1579">Specify binary data with an event when it is necessary to provide additional details for the event.</span></span> <span data-ttu-id="68165-1580">たとえば、使用して、`data`パラメーターは、特定のエラーに関する情報を含めます。</span><span class="sxs-lookup"><span data-stu-id="68165-1580">For example, use the `data` parameter to include information on a specific error.</span></span> <span data-ttu-id="68165-1581">イベント ビューアーでは、関連付けられたイベント データを解釈しません16 進数およびテキストを組み合わせた形式でデータを表示します。</span><span class="sxs-lookup"><span data-stu-id="68165-1581">The Event Viewer does not interpret the associated event data; it displays the data in a combined hexadecimal and text format.</span></span> <span data-ttu-id="68165-1582">イベントに固有のデータを多用します。役に立つことを確認する場合にのみ含めます。</span><span class="sxs-lookup"><span data-stu-id="68165-1582">Use event-specific data sparingly; include it only if you are sure it will be useful.</span></span> <span data-ttu-id="68165-1583">イベント ビューアーとは無関係に、アプリケーションが処理できる情報を格納するのにイベントに固有のデータを使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="68165-1583">You can also use event-specific data to store information the application can process independently of the Event Viewer.</span></span> <span data-ttu-id="68165-1584">たとえば、具体的には、イベントのビューアーを記述したり、イベント ログをスキャンし、イベントに固有のデータから情報を含むレポートを作成するプログラムを記述します。</span><span class="sxs-lookup"><span data-stu-id="68165-1584">For example, you could write a viewer specifically for your events, or write a program that scans the event log and creates reports that include information from the event-specific data.</span></span>  
  
 <span data-ttu-id="68165-1585">設定する必要があります、<xref:System.Diagnostics.EventLog.Source%2A>プロパティを<xref:System.Diagnostics.EventLog>コンポーネントを使用する前にコンポーネントの前に<xref:System.Diagnostics.EventLog.WriteEvent%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-1585">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before component before using <xref:System.Diagnostics.EventLog.WriteEvent%2A>.</span></span> <span data-ttu-id="68165-1586">指定したソースは、ローカライズされたエントリをログに書き込むように構成する必要があります。ソースには少なくとも必要メッセージ リソース ファイルの定義です。</span><span class="sxs-lookup"><span data-stu-id="68165-1586">The specified source must be configured for writing localized entries to the log; the source must at minimum have a message resource file defined.</span></span>  
  
 <span data-ttu-id="68165-1587">作成し、ソースと最初のエントリを書き込む前に、イベント ソースを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1587">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="68165-1588">アプリケーションのインストール中に新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-1588">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="68165-1589">これにより、登録済みのイベント ソースの一覧とその構成を更新するオペレーティング システムまでの時間です。</span><span class="sxs-lookup"><span data-stu-id="68165-1589">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="68165-1590">オペレーティング システムでは、イベントのソースの一覧は更新されていない場合は、書き込み操作は失敗、新しいソースを持つイベントを記述しようとしました。</span><span class="sxs-lookup"><span data-stu-id="68165-1590">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="68165-1591">使用して新しいソースを構成することができます、 <xref:System.Diagnostics.EventLogInstaller>、またはを使用して、<xref:System.Diagnostics.EventLog.CreateEventSource%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68165-1591">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="68165-1592">新しいイベント ソースを作成するコンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-1592">You must have administrative rights on the computer to create a new event source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1593">指定しない場合、<xref:System.Diagnostics.EventLog.MachineName%2A>の<xref:System.Diagnostics.EventLog>インスタンスを呼び出す前に<xref:System.Diagnostics.EventLog.WriteEvent%2A>、ローカル コンピューター (".") と見なされます。</span><span class="sxs-lookup"><span data-stu-id="68165-1593">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A> for your <xref:System.Diagnostics.EventLog> instance before you call <xref:System.Diagnostics.EventLog.WriteEvent%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="68165-1594">ソースは、ローカライズされたエントリを書き込むか、または直接の文字列を書き込むように構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1594">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="68165-1595">使用して、<xref:System.Diagnostics.EventLog.WriteEntry%2A>メソッドの場合は、アプリケーション イベント ログに直接文字列値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1595">Use the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method if your application writes string values directly to the event log.</span></span>  
  
 <span data-ttu-id="68165-1596">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2 つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1596">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="68165-1597">たとえば、リソース ファイルでは、1 つのソースを構成およびでは、そのソースを使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッドをイベント ログのリソース識別子を使用してエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1597">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="68165-1598">リソースのファイルがない場合、別のソースを作成しでそのソースを使用し、<xref:System.Diagnostics.EventLog.WriteEntry%2A>そのソースを使用して、イベント ログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1598">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68165-1599">リモート コンピューターの値には、エントリを記述するかどうか、`message`文字列は、リモート コンピューターに .NET Framework が実行されていない場合に期待はない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1599">If you write an entry to a remote computer, the value of the `message` string might not be what you expect if the remote computer is not running the .NET Framework.</span></span> <span data-ttu-id="68165-1600">また、`message`文字列は、% を含めることはできません*n*ここで、 *n*整数値 (たとえば、%1) は、イベント ビューアーは、挿入文字列として扱います。</span><span class="sxs-lookup"><span data-stu-id="68165-1600">Also, the `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="68165-1601">文字のシーケンスをインターネット プロトコル バージョン 6 (IPv6) アドレスはこれを含めることができます、ために、IPv6 アドレスを含むイベント メッセージがログ記録できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1601">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-1602">次の例は、2 つの監査イベント ログにエントリを書き込みます`myNewLog`します。</span><span class="sxs-lookup"><span data-stu-id="68165-1602">The following example writes two audit entries to the event log `myNewLog`.</span></span> <span data-ttu-id="68165-1603">ローカル コンピューターに存在しない場合は、例では、新しいイベント ソースおよび新しいイベント ログを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-1603">The example creates a new event source and a new event log if they do not exist on the local computer.</span></span> <span data-ttu-id="68165-1604">リソース ファイル内のリソース識別子を使用してイベントのメッセージ テキストを指定します。</span><span class="sxs-lookup"><span data-stu-id="68165-1604">The event message text is specified using a resource identifier in a resource file.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#7](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#7)]
 [!code-csharp[EventLog_WriteEvent#7](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#7)]
 [!code-vb[EventLog_WriteEvent#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#7)]  
  
 <span data-ttu-id="68165-1605">EventLogMsgs.dll リソース ライブラリに組み込まれている次のメッセージのテキスト ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="68165-1605">The example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="68165-1606">メッセージのテキスト ファイルは、メッセージ リソース ファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="68165-1606">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="68165-1607">メッセージのテキスト ファイルでは、リソース識別子とカテゴリ、イベント メッセージ、およびパラメーターの挿入文字列のテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="68165-1607">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-1608"><see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。</span><span class="sxs-lookup"><span data-stu-id="68165-1608">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="68165-1609">または</span><span class="sxs-lookup"><span data-stu-id="68165-1609">-or-</span></span> 
<span data-ttu-id="68165-1610">メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。</span><span class="sxs-lookup"><span data-stu-id="68165-1610">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="68165-1611">または</span><span class="sxs-lookup"><span data-stu-id="68165-1611">-or-</span></span> 
<span data-ttu-id="68165-1612">ソースは既に別のイベント ログに登録されています。</span><span class="sxs-lookup"><span data-stu-id="68165-1612">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="68165-1613">または</span><span class="sxs-lookup"><span data-stu-id="68165-1613">-or-</span></span> 
 <span data-ttu-id="68165-1614"><paramref name="instance.InstanceId" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="68165-1614"><paramref name="instance.InstanceId" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="68165-1615">または</span><span class="sxs-lookup"><span data-stu-id="68165-1615">-or-</span></span> 
 <span data-ttu-id="68165-1616"><paramref name="values" /> には 256 を超える要素が格納されています。</span><span class="sxs-lookup"><span data-stu-id="68165-1616"><paramref name="values" /> has more than 256 elements.</span></span>  
  
<span data-ttu-id="68165-1617">または</span><span class="sxs-lookup"><span data-stu-id="68165-1617">-or-</span></span> 
<span data-ttu-id="68165-1618"><paramref name="values" /> 要素の 1 つが 32766 バイトを超えています。</span><span class="sxs-lookup"><span data-stu-id="68165-1618">One of the <paramref name="values" /> elements is longer than 32766 bytes.</span></span>  
  
<span data-ttu-id="68165-1619">または</span><span class="sxs-lookup"><span data-stu-id="68165-1619">-or-</span></span> 
<span data-ttu-id="68165-1620">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="68165-1620">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68165-1621"><paramref name="instance" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="68165-1621"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-1622">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-1622">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="68165-1623">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="68165-1623">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="68165-1624">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1624">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-1625">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-1625">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-1626">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-1626">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="T:System.Diagnostics.EventInstance" />
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="public static void WriteEvent (string source, System.Diagnostics.EventInstance instance, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEvent(string source, class System.Diagnostics.EventInstance instance, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEvent (source As String, instance As EventInstance, ParamArray values As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEvent(System::String ^ source, System::Diagnostics::EventInstance ^ instance, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="static member WriteEvent : string * System.Diagnostics.EventInstance * obj[] -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEvent (source, instance, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Diagnostics.EventInstance" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="values" Type="System.Object[]" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="68165-1627">指定したコンピューター上のアプリケーションに登録されるイベント ソースの名前。</span><span class="sxs-lookup"><span data-stu-id="68165-1627">The name of the event source registered for the application on the specified computer.</span></span></param>
        <param name="instance"><span data-ttu-id="68165-1628">ローカライズされたイベント ログ エントリを表す <see cref="T:System.Diagnostics.EventInstance" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="68165-1628">An <see cref="T:System.Diagnostics.EventInstance" /> instance that represents a localized event log entry.</span></span></param>
        <param name="values"><span data-ttu-id="68165-1629">イベント ログ エントリのメッセージ テキストにマージする文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="68165-1629">An array of strings to merge into the message text of the event log entry.</span></span></param>
        <summary><span data-ttu-id="68165-1630">指定した登録イベント ソースを使用して、指定したイベント データとメッセージ置換文字列と共にイベント ログ エントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1630">Writes an event log entry with the given event data and message replacement strings, using the specified registered event source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-1631">ローカライズされたエントリを適切なログのイベント ソースとして既に登録されているソースを使用して、イベント ログに書き込むには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="68165-1631">Use this method to write a localized entry to the event log, using a source already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="68165-1632">文字列値ではなく、リソース識別子では、イベントのプロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="68165-1632">You specify the event properties with resource identifiers rather than string values.</span></span> <span data-ttu-id="68165-1633">イベント ビューアーでは、リソース識別子を使用して、ソースのローカライズされたリソース ファイルから対応する文字列を表示します。</span><span class="sxs-lookup"><span data-stu-id="68165-1633">The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource file for the source.</span></span> <span data-ttu-id="68165-1634">リソース識別子を使用してイベントを記述する前に、対応するリソース ファイルとソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1634">You must register the source with the corresponding resource file before you write events using resource identifiers.</span></span>  
  
 <span data-ttu-id="68165-1635">入力`instance`インスタンスは、イベント メッセージとプロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="68165-1635">The input `instance` instance specifies the event message and properties.</span></span> <span data-ttu-id="68165-1636">設定、<xref:System.Diagnostics.EventInstance.InstanceId%2A>の`instance`ソース メッセージ リソース ファイルで定義されたメッセージを入力します。</span><span class="sxs-lookup"><span data-stu-id="68165-1636">Set the <xref:System.Diagnostics.EventInstance.InstanceId%2A> of the `instance` input for the defined message in the source message resource file.</span></span> <span data-ttu-id="68165-1637">必要に応じて設定することができます、<xref:System.Diagnostics.EventInstance.CategoryId%2A>と<xref:System.Diagnostics.EventInstance.EntryType%2A>の`instance`イベント エントリのカテゴリとイベントの種類を定義する入力。</span><span class="sxs-lookup"><span data-stu-id="68165-1637">You can optionally set the <xref:System.Diagnostics.EventInstance.CategoryId%2A> and <xref:System.Diagnostics.EventInstance.EntryType%2A> of the `instance` input to define the category and event type of your event entry.</span></span> <span data-ttu-id="68165-1638">ローカライズされたメッセージ テキストに挿入する言語に依存しない文字列の配列を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="68165-1638">You can also specify an array of language-independent strings to insert into the localized message text.</span></span> <span data-ttu-id="68165-1639">設定`values`に`null`イベント メッセージに置換文字列の書式設定プレース ホルダーが含まれていない場合。</span><span class="sxs-lookup"><span data-stu-id="68165-1639">Set `values` to `null` if the event message does not contain formatting placeholders for replacement strings.</span></span>  
  
 <span data-ttu-id="68165-1640">使用する前に、イベント ログの指定したソースを登録する必要があります<xref:System.Diagnostics.EventLog.WriteEvent%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-1640">The specified source must be registered for an event log before using <xref:System.Diagnostics.EventLog.WriteEvent%2A>.</span></span> <span data-ttu-id="68165-1641">指定したソースは、ローカライズされたエントリをログに書き込むように構成する必要があります。ソースには少なくとも必要メッセージ リソース ファイルの定義です。</span><span class="sxs-lookup"><span data-stu-id="68165-1641">The specified source must be configured for writing localized entries to the log; the source must at minimum have a message resource file defined.</span></span>  
  
 <span data-ttu-id="68165-1642">作成し、ソースと最初のエントリを書き込む前に、イベント ソースを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1642">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="68165-1643">アプリケーションのインストール中に新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-1643">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="68165-1644">これにより、登録済みのイベント ソースの一覧とその構成を更新するオペレーティング システムまでの時間です。</span><span class="sxs-lookup"><span data-stu-id="68165-1644">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="68165-1645">オペレーティング システムでは、イベントのソースの一覧は更新されていない場合は、書き込み操作は失敗、新しいソースを持つイベントを記述しようとしました。</span><span class="sxs-lookup"><span data-stu-id="68165-1645">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="68165-1646">使用して新しいソースを構成することができます、 <xref:System.Diagnostics.EventLogInstaller>、またはを使用して、<xref:System.Diagnostics.EventLog.CreateEventSource%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68165-1646">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="68165-1647">新しいイベント ソースを作成するコンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-1647">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="68165-1648">ソースは、ローカライズされたエントリを書き込むか、または直接の文字列を書き込むように構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1648">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="68165-1649">使用して、<xref:System.Diagnostics.EventLog.WriteEntry%2A>メソッドの場合は、アプリケーション イベント ログに直接文字列値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1649">Use the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method if your application writes string values directly to the event log.</span></span>  
  
 <span data-ttu-id="68165-1650">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2 つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1650">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="68165-1651">たとえば、リソース ファイルでは、1 つのソースを構成およびでは、そのソースを使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッドをイベント ログのリソース識別子を使用してエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1651">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="68165-1652">リソースのファイルがない場合、別のソースを作成しでそのソースを使用し、<xref:System.Diagnostics.EventLog.WriteEntry%2A>そのソースを使用して、イベント ログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1652">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-1653">次の例では、既存のイベント ログに情報イベントのエントリと警告イベント エントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1653">The following example writes an informational event entry and a warning event entry to an existing event log.</span></span> <span data-ttu-id="68165-1654">リソース ファイル内のリソース識別子を使用してイベントのメッセージ テキストを指定します。</span><span class="sxs-lookup"><span data-stu-id="68165-1654">The event message text is specified using a resource identifier in a resource file.</span></span> <span data-ttu-id="68165-1655">例では、対応するリソース ファイルがソースの登録されたと仮定します。</span><span class="sxs-lookup"><span data-stu-id="68165-1655">The example assumes the corresponding resource file has been registered for the source.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#8](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#8)]
 [!code-csharp[EventLog_WriteEvent#8](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#8)]
 [!code-vb[EventLog_WriteEvent#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#8)]  
  
 <span data-ttu-id="68165-1656">EventLogMsgs.dll リソース ライブラリに組み込まれている次のメッセージのテキスト ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="68165-1656">The example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="68165-1657">メッセージのテキスト ファイルは、メッセージ リソース ファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="68165-1657">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="68165-1658">メッセージのテキスト ファイルでは、リソース識別子とカテゴリ、イベント メッセージ、およびパラメーターの挿入文字列のテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="68165-1658">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-1659"><paramref name="source" /> 値が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="68165-1659">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="68165-1660">または</span><span class="sxs-lookup"><span data-stu-id="68165-1660">-or-</span></span> 
<span data-ttu-id="68165-1661"><paramref name="source" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68165-1661">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="68165-1662">または</span><span class="sxs-lookup"><span data-stu-id="68165-1662">-or-</span></span> 
 <span data-ttu-id="68165-1663"><paramref name="instance.InstanceId" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="68165-1663"><paramref name="instance.InstanceId" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="68165-1664">または</span><span class="sxs-lookup"><span data-stu-id="68165-1664">-or-</span></span> 
 <span data-ttu-id="68165-1665"><paramref name="values" /> には 256 を超える要素が格納されています。</span><span class="sxs-lookup"><span data-stu-id="68165-1665"><paramref name="values" /> has more than 256 elements.</span></span>  
  
<span data-ttu-id="68165-1666">または</span><span class="sxs-lookup"><span data-stu-id="68165-1666">-or-</span></span> 
<span data-ttu-id="68165-1667"><paramref name="values" /> 要素の 1 つが 32766 バイトを超えています。</span><span class="sxs-lookup"><span data-stu-id="68165-1667">One of the <paramref name="values" /> elements is longer than 32766 bytes.</span></span>  
  
<span data-ttu-id="68165-1668">または</span><span class="sxs-lookup"><span data-stu-id="68165-1668">-or-</span></span> 
<span data-ttu-id="68165-1669">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="68165-1669">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68165-1670"><paramref name="instance" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="68165-1670"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-1671">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-1671">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="68165-1672">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="68165-1672">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="68165-1673">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1673">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-1674">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-1674">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-1675">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-1675">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="T:System.Diagnostics.EventInstance" />
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="public static void WriteEvent (string source, System.Diagnostics.EventInstance instance, byte[] data, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEvent(string source, class System.Diagnostics.EventInstance instance, unsigned int8[] data, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Byte[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEvent (source As String, instance As EventInstance, data As Byte(), ParamArray values As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEvent(System::String ^ source, System::Diagnostics::EventInstance ^ instance, cli::array &lt;System::Byte&gt; ^ data, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="static member WriteEvent : string * System.Diagnostics.EventInstance * byte[] * obj[] -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEvent (source, instance, data, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Diagnostics.EventInstance" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Byte[]" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="values" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="68165-1676">指定したコンピューター上のアプリケーションに登録されるイベント ソースの名前。</span><span class="sxs-lookup"><span data-stu-id="68165-1676">The name of the event source registered for the application on the specified computer.</span></span></param>
        <param name="instance"><span data-ttu-id="68165-1677">ローカライズされたイベント ログ エントリを表す <see cref="T:System.Diagnostics.EventInstance" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="68165-1677">An <see cref="T:System.Diagnostics.EventInstance" /> instance that represents a localized event log entry.</span></span></param>
        <param name="data"><span data-ttu-id="68165-1678">エントリに関連付けられているバイナリ データを保持するバイト配列。</span><span class="sxs-lookup"><span data-stu-id="68165-1678">An array of bytes that holds the binary data associated with the entry.</span></span></param>
        <param name="values"><span data-ttu-id="68165-1679">イベント ログ エントリのメッセージ テキストにマージする文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="68165-1679">An array of strings to merge into the message text of the event log entry.</span></span></param>
        <summary><span data-ttu-id="68165-1680">指定した登録イベント ソースを使用して、指定したイベント データ、メッセージ置換文字列、および関連するバイナリ データと共にイベント ログ エントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1680">Writes an event log entry with the given event data, message replacement strings, and associated binary data, and using the specified registered event source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68165-1681">このメソッドを使用すると、適切なログのイベント ソースとして既に登録されているソースを使用して、イベント ログに追加のイベントに固有のデータのローカライズされたエントリを記述できます。</span><span class="sxs-lookup"><span data-stu-id="68165-1681">Use this method to write a localized entry with additional event-specific data to the event log, using a source already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="68165-1682">文字列値ではなく、リソース識別子では、イベントのプロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="68165-1682">You specify the event properties with resource identifiers rather than string values.</span></span> <span data-ttu-id="68165-1683">イベント ビューアーでは、リソース識別子を使用して、ソースのローカライズされたリソース ファイルから対応する文字列を表示します。</span><span class="sxs-lookup"><span data-stu-id="68165-1683">The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource file for the source.</span></span> <span data-ttu-id="68165-1684">リソース識別子を使用してイベントを記述する前に、対応するリソース ファイルとソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1684">You must register the source with the corresponding resource file before you write events using resource identifiers.</span></span>  
  
 <span data-ttu-id="68165-1685">入力`instance`インスタンスは、イベント メッセージとプロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="68165-1685">The input `instance` instance specifies the event message and properties.</span></span> <span data-ttu-id="68165-1686">設定、<xref:System.Diagnostics.EventInstance.InstanceId%2A>の`instance`ソース メッセージ リソース ファイルで定義されたメッセージを入力します。</span><span class="sxs-lookup"><span data-stu-id="68165-1686">Set the <xref:System.Diagnostics.EventInstance.InstanceId%2A> of the `instance` input for the defined message in the source message resource file.</span></span> <span data-ttu-id="68165-1687">必要に応じて設定することができます、<xref:System.Diagnostics.EventInstance.CategoryId%2A>と<xref:System.Diagnostics.EventInstance.EntryType%2A>の`instance`イベント エントリのカテゴリとイベントの種類を定義する入力。</span><span class="sxs-lookup"><span data-stu-id="68165-1687">You can optionally set the <xref:System.Diagnostics.EventInstance.CategoryId%2A> and <xref:System.Diagnostics.EventInstance.EntryType%2A> of the `instance` input to define the category and event type of your event entry.</span></span> <span data-ttu-id="68165-1688">ローカライズされたメッセージ テキストに挿入する言語に依存しない文字列の配列を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="68165-1688">You can also specify an array of language-independent strings to insert into the localized message text.</span></span> <span data-ttu-id="68165-1689">設定`values`に`null`イベント メッセージに置換文字列の書式設定プレース ホルダーが含まれていない場合。</span><span class="sxs-lookup"><span data-stu-id="68165-1689">Set `values` to `null` if the event message does not contain formatting placeholders for replacement strings.</span></span>  
  
 <span data-ttu-id="68165-1690">イベントのイベントの追加の詳細を提供する必要がある場合に、バイナリ データを指定します。</span><span class="sxs-lookup"><span data-stu-id="68165-1690">Specify binary data with an event when it is necessary to provide additional details for the event.</span></span> <span data-ttu-id="68165-1691">たとえば、使用して、`data`パラメーターは、特定のエラーに関する情報を含めます。</span><span class="sxs-lookup"><span data-stu-id="68165-1691">For example, use the `data` parameter to include information on a specific error.</span></span> <span data-ttu-id="68165-1692">イベント ビューアーでは、関連付けられたイベント データを解釈しません16 進数およびテキストを組み合わせた形式でデータを表示します。</span><span class="sxs-lookup"><span data-stu-id="68165-1692">The Event Viewer does not interpret the associated event data; it displays the data in a combined hexadecimal and text format.</span></span> <span data-ttu-id="68165-1693">イベントに固有のデータを多用します。役に立つことを確認する場合にのみ含めます。</span><span class="sxs-lookup"><span data-stu-id="68165-1693">Use event-specific data sparingly; include it only if you are sure it will be useful.</span></span> <span data-ttu-id="68165-1694">イベント ビューアーとは無関係に、アプリケーションが処理できる情報を格納するのにイベントに固有のデータを使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="68165-1694">You can also use event-specific data to store information the application can process independently of the Event Viewer.</span></span> <span data-ttu-id="68165-1695">たとえば、具体的には、イベントのビューアーを記述したり、イベント ログをスキャンし、イベントに固有のデータから情報を含むレポートを作成するプログラムを記述します。</span><span class="sxs-lookup"><span data-stu-id="68165-1695">For example, you could write a viewer specifically for your events, or write a program that scans the event log and creates reports that include information from the event-specific data.</span></span>  
  
 <span data-ttu-id="68165-1696">使用する前に、イベント ログの指定したソースを登録する必要があります<xref:System.Diagnostics.EventLog.WriteEvent%2A>します。</span><span class="sxs-lookup"><span data-stu-id="68165-1696">The specified source must be registered for an event log before using <xref:System.Diagnostics.EventLog.WriteEvent%2A>.</span></span> <span data-ttu-id="68165-1697">指定したソースは、ローカライズされたエントリをログに書き込むように構成する必要があります。ソースには少なくとも必要メッセージ リソース ファイルの定義です。</span><span class="sxs-lookup"><span data-stu-id="68165-1697">The specified source must be configured for writing localized entries to the log; the source must at minimum have a message resource file defined.</span></span>  
  
 <span data-ttu-id="68165-1698">作成し、ソースと最初のエントリを書き込む前に、イベント ソースを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1698">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="68165-1699">アプリケーションのインストール中に新しいイベント ソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="68165-1699">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="68165-1700">これにより、登録済みのイベント ソースの一覧とその構成を更新するオペレーティング システムまでの時間です。</span><span class="sxs-lookup"><span data-stu-id="68165-1700">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="68165-1701">オペレーティング システムでは、イベントのソースの一覧は更新されていない場合は、書き込み操作は失敗、新しいソースを持つイベントを記述しようとしました。</span><span class="sxs-lookup"><span data-stu-id="68165-1701">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="68165-1702">使用して新しいソースを構成することができます、 <xref:System.Diagnostics.EventLogInstaller>、またはを使用して、<xref:System.Diagnostics.EventLog.CreateEventSource%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="68165-1702">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="68165-1703">新しいイベント ソースを作成するコンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="68165-1703">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="68165-1704">ソースは、ローカライズされたエントリを書き込むか、または直接の文字列を書き込むように構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1704">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="68165-1705">使用して、<xref:System.Diagnostics.EventLog.WriteEntry%2A>メソッドの場合は、アプリケーション イベント ログに直接文字列値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1705">Use the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method if your application writes string values directly to the event log.</span></span>  
  
 <span data-ttu-id="68165-1706">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2 つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68165-1706">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="68165-1707">たとえば、リソース ファイルでは、1 つのソースを構成およびでは、そのソースを使用して、<xref:System.Diagnostics.EventLog.WriteEvent%2A>メソッドをイベント ログのリソース識別子を使用してエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1707">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="68165-1708">リソースのファイルがない場合、別のソースを作成しでそのソースを使用し、<xref:System.Diagnostics.EventLog.WriteEntry%2A>そのソースを使用して、イベント ログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1708">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68165-1709">次の例では、既存のイベント ログに情報イベントのエントリと警告イベント エントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68165-1709">The following example writes an informational event entry and a warning event entry to an existing event log.</span></span> <span data-ttu-id="68165-1710">リソース ファイル内のリソース識別子を使用してイベントのメッセージ テキストを指定します。</span><span class="sxs-lookup"><span data-stu-id="68165-1710">The event message text is specified using a resource identifier in a resource file.</span></span> <span data-ttu-id="68165-1711">例では、対応するリソース ファイルがソースの登録されたと仮定します。</span><span class="sxs-lookup"><span data-stu-id="68165-1711">The example assumes the corresponding resource file has been registered for the source.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#8](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#8)]
 [!code-csharp[EventLog_WriteEvent#8](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#8)]
 [!code-vb[EventLog_WriteEvent#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#8)]  
  
 <span data-ttu-id="68165-1712">EventLogMsgs.dll リソース ライブラリに組み込まれている次のメッセージのテキスト ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="68165-1712">The example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="68165-1713">メッセージのテキスト ファイルは、メッセージ リソース ファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="68165-1713">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="68165-1714">メッセージのテキスト ファイルでは、リソース識別子とカテゴリ、イベント メッセージ、およびパラメーターの挿入文字列のテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="68165-1714">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68165-1715"><paramref name="source" /> 値が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="68165-1715">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="68165-1716">または</span><span class="sxs-lookup"><span data-stu-id="68165-1716">-or-</span></span> 
<span data-ttu-id="68165-1717"><paramref name="source" /> 値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68165-1717">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="68165-1718">または</span><span class="sxs-lookup"><span data-stu-id="68165-1718">-or-</span></span> 
 <span data-ttu-id="68165-1719"><paramref name="instance.InstanceId" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="68165-1719"><paramref name="instance.InstanceId" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="68165-1720">または</span><span class="sxs-lookup"><span data-stu-id="68165-1720">-or-</span></span> 
 <span data-ttu-id="68165-1721"><paramref name="values" /> には 256 を超える要素が格納されています。</span><span class="sxs-lookup"><span data-stu-id="68165-1721"><paramref name="values" /> has more than 256 elements.</span></span>  
  
<span data-ttu-id="68165-1722">または</span><span class="sxs-lookup"><span data-stu-id="68165-1722">-or-</span></span> 
<span data-ttu-id="68165-1723"><paramref name="values" /> 要素の 1 つが 32766 バイトを超えています。</span><span class="sxs-lookup"><span data-stu-id="68165-1723">One of the <paramref name="values" /> elements is longer than 32766 bytes.</span></span>  
  
<span data-ttu-id="68165-1724">または</span><span class="sxs-lookup"><span data-stu-id="68165-1724">-or-</span></span> 
<span data-ttu-id="68165-1725">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="68165-1725">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68165-1726"><paramref name="instance" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="68165-1726"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68165-1727">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="68165-1727">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="68165-1728">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="68165-1728">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="68165-1729">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68165-1729">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="68165-1730">コンピューターのイベント ログ情報を書き込む。</span><span class="sxs-lookup"><span data-stu-id="68165-1730">for writing the event log information on the computer.</span></span> <span data-ttu-id="68165-1731">関連付けられた列挙体。 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="68165-1731">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="T:System.Diagnostics.EventInstance" />
      </Docs>
    </Member>
  </Members>
</Type>