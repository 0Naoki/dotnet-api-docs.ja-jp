<Type Name="SearchExpression" FullName="System.Web.UI.WebControls.Expressions.SearchExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="78b7af51247d62f3709dc8e326c043bb0b6d5cee" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70524473" /></Metadata><TypeSignature Language="C#" Value="public class SearchExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SearchExpression extends System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.SearchExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class SearchExpression&#xA;Inherits ParameterDataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class SearchExpression : System::Web::UI::WebControls::Expressions::ParameterDataSourceExpression" />
  <TypeSignature Language="F#" Value="type SearchExpression = class&#xA;    inherit ParameterDataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>文字列値のフィールドを検索して、それらを指定された文字列の値と比較する方法を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.QueryExtender>は、 <xref:System.Web.UI.WebControls.Expressions.SearchExpression>クラスを使用して Web ページ内のデータをフィルター処理する機能を提供します。 クラス<xref:System.Web.UI.WebControls.Expressions.SearchExpression>は、フィールド内の指定された文字列を、指定した値と比較します。 この式では、"開始"、"contains"、または "end with" の検索が実行されます。 実行する検索の種類と<xref:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType%2A>検索する<xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields%2A>データフィールドを示すために、プロパティとプロパティの値を指定する必要があります。 <xref:System.Web.UI.WebControls.QueryExtender>コントロールで使用する LINQ プロバイダーで大文字と小文字の区別がサポートされ<xref:System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType%2A>ている場合は、プロパティを使用して、大文字と小文字の区別を有効または無視できます。  
  
 検索する値は、 [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]コントロールで指定できます。 これを指定するには、 <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> <xref:System.Web.UI.WebControls.Expressions.SearchExpression>オブジェクトの<xref:System.Web.UI.WebControls.ControlParameter>クラスのプロパティを[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]コントロールの ID に設定します。 たとえば、検索する値がテキストボックスに入力されている場合、 <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A>プロパティはテキストボックスコントロールの ID に設定されている必要があります。 クラスは<xref:System.Web.UI.WebControls.Expressions.SearchExpression> 、が<xref:System.Web.UI.WebControls.QueryExtender>サポートする他の式 (フィルターなど) と組み合わせて使用できます。 <xref:System.Web.UI.WebControls.Expressions.RangeExpression> たとえば、文字列 "紅茶" を含む製品名と、100から200までの定価を検索できます。  
  
   
  
## Examples  
 次の例では、AdventureWorks データベースの products テーブルの Name 列で、 `SearchTextBox`コントロールで指定された文字列で始まる製品を検索する方法を示します。 コントロールから<xref:System.Web.UI.WebControls.LinqDataSource>返された結果が<xref:System.Web.UI.WebControls.GridView>コントロールに表示されます。  
  
 このコード例は、「[チュートリアル: 宣言型の構文を使用した Web ページ内のデータのフィルター処理](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)」で提供されている大規模な例の一部です。  
  
  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> プロパティは <see langword="null" /> です (Visual Basic では <see langword="Nothing" />)</exception>
    <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
    <related type="Article" href="https://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702">QueryExtender Web サーバーコントロールの概要</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.SearchExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SearchExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComparisonType">
      <MemberSignature Language="C#" Value="public StringComparison ComparisonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.StringComparison ComparisonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType" />
      <MemberSignature Language="VB.NET" Value="Public Property ComparisonType As StringComparison" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property StringComparison ComparisonType { StringComparison get(); void set(StringComparison value); };" />
      <MemberSignature Language="F#" Value="member this.ComparisonType : StringComparison with get, set" Usage="System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparison</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>実行する文字列比較の種類を取得または設定します。</summary>
        <value>実行する文字列比較の種類。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用すると、 <xref:System.StringComparison>列挙体を使用して検索の実行方法を指定できます。 <xref:System.StringComparison>列挙体は、文字列比較で現在のカルチャまたはインバリアントカルチャを使用するかどうか、およびテキストまたは序数の並べ替え規則を使用するかどうかを指定するために使用されます。 が<xref:System.Web.UI.WebControls.QueryExtender>使用するデータプロバイダーが大文字と小文字の区別をサポートしている場合は、比較型のプロパティのいずれかを使用して、大文字と小文字の区別を有効または無視できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> プロパティが <see langword="null" /> である。</exception>
      </Docs>
    </Member>
    <Member MemberName="DataFields">
      <MemberSignature Language="C#" Value="public string DataFields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFields" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" />
      <MemberSignature Language="VB.NET" Value="Public Property DataFields As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataFields { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFields : string with get, set" Usage="System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>検索する単一のフィールドまたはコンマ区切りのフィールドのリストを取得または設定します。</summary>
        <value>検索するフィールド。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クラス<xref:System.Web.UI.WebControls.Expressions.SearchExpression>は、指定されたテーブル内の1つ以上のデータフィールドで検索を実行します。 インスタンスには、 <xref:System.Web.UI.WebControls.Expressions.SearchExpression>少なくとも1つのデータフィールドを指定する必要があります。 複数のデータフィールドを指定する場合は、コンマを使用してフィールドを区切ります。  
  
   
  
## Examples  
 次の例では、指定された文字列で始まる名前の製品について、AdventureWorks データベースの Products テーブルの Name および ProductNumber データフィールドを検索する方法を示します。 このコード例は、「[チュートリアル: 宣言型の構文を使用した Web ページ内のデータのフィルター処理](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)」で提供されている、より大きな例の一部です。  
  
```  
<asp:SearchExpression SearchType="StartsWith"   
      DataFields="Name","ProductNumber" >  
  <asp:ControlParameter ControlID="SearchTextBox" />  
</asp:SearchExpression>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> プロパティが <see langword="null" /> である。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="searchExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">使用するオブジェクト。</param>
        <summary><see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" /> オブジェクトに基づいて、指定された <see cref="T:System.Linq.IQueryable" /> オブジェクトに <see cref="T:System.Web.UI.WebControls.Expressions.SearchType" /> オブジェクトを適用します。</summary>
        <returns><see cref="T:System.Linq.IQueryable" /> が適用された <see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" /> オブジェクトのインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、 <xref:System.Web.UI.WebControls.Expressions.SearchExpression>オブジェクトで使用されているパラメーターのコレクションを評価し、その式<xref:System.Linq.IQueryable>をオブジェクトに適用します。 複数のデータフィールドが指定`AND`されている場合、演算子はデータフィールドに適用されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> プロパティが <see langword="null" /> である。</exception>
      </Docs>
    </Member>
    <Member MemberName="SearchType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.SearchType SearchType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.SearchType SearchType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType" />
      <MemberSignature Language="VB.NET" Value="Public Property SearchType As SearchType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::SearchType SearchType { System::Web::UI::WebControls::Expressions::SearchType get(); void set(System::Web::UI::WebControls::Expressions::SearchType value); };" />
      <MemberSignature Language="F#" Value="member this.SearchType : System.Web.UI.WebControls.Expressions.SearchType with get, set" Usage="System.Web.UI.WebControls.Expressions.SearchExpression.SearchType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.SearchType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>検索を行う文字列内の位置を特定する <see cref="T:System.Web.UI.WebControls.Expressions.SearchType" /> 値を取得または設定します。</summary>
        <value>実行する検索の種類。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.Expressions.SearchType>は、 <xref:System.Web.UI.WebControls.Expressions.SearchExpression>クラス<xref:System.Web.UI.WebControls.Expressions.SearchType>のインスタンスで使用する検索の種類を含む列挙体を使用します。  
  
 次の表に、使用可能な列挙値を示します。  
  
|列挙|説明|  
|-----------------|-----------------|  
|<xref:System.Web.UI.WebControls.Expressions.SearchType.StartsWith>|フィールド内の任意の場所から検索を開始することを示します。|  
|<xref:System.Web.UI.WebControls.Expressions.SearchType.Contains>|フィールドの先頭から検索を開始することを示します。|  
|<xref:System.Web.UI.WebControls.Expressions.SearchType.EndsWith>|フィールドの末尾にある検索を示します。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
