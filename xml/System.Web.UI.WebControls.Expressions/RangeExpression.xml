<Type Name="RangeExpression" FullName="System.Web.UI.WebControls.Expressions.RangeExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="90b1d04037a75905933b6d6311c400cdbea1ed0a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69402164" /></Metadata><TypeSignature Language="C#" Value="public class RangeExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RangeExpression extends System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.RangeExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class RangeExpression&#xA;Inherits ParameterDataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class RangeExpression : System::Web::UI::WebControls::Expressions::ParameterDataSourceExpression" />
  <TypeSignature Language="F#" Value="type RangeExpression = class&#xA;    inherit ParameterDataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>値が指定した値よりも大きいか小さいか、または値が指定した 2 つの値の間にあるかを判定する方法を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.QueryExtender>は、 <xref:System.Web.UI.WebControls.Expressions>名前空間のクラスを使用して、Web ページ内のデータをフィルター処理する機能を提供します。 これらのクラスに<xref:System.Web.UI.WebControls.Expressions.RangeExpression>は、クラスが含まれます。  
  
 クラス<xref:System.Web.UI.WebControls.Expressions.RangeExpression>は、範囲を定義する値のペアを使用してデータ列を検索します。 検索する列<xref:System.Web.UI.WebControls.Expressions.RangeExpression.DataField%2A>を指定するには、プロパティを使用します。 <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A>プロパティを使用して、検索結果に最小値を含めるか除外するかを指定します。 <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A>また、プロパティを使用して、最大値を含めるか除外するかを指定します。 コントロールで[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]は最大値と最小値を指定できます。その後、値をコントロール<xref:System.Web.UI.WebControls.QueryExtender>のパラメーター <xref:System.Web.UI.WebControls.ControlParameter>としてコントロールに渡すことができます。 結果は通常、データバインドコントロールに表示されます。  
  
   
  
## Examples  
 次の例では、 `FromTextBox`および`ToTextBox`テキストボックスで指定された範囲内に定価がある製品について、AdventureWorks データベースの products テーブルの ListPrice 列を検索する方法を示します。 フィルターには最小値が含まれますが、結果の最大値は除外されます。 結果が<xref:System.Web.UI.WebControls.Label>コントロールに表示されます。  
  
 このコード例は、 [「チュートリアル:宣言型の構文](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)を使用した Web ページ内のデータのフィルター処理。  
  
  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" /> プロパティが <see langword="null" /> である。</exception>
    <related type="Article" href="https://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702">QueryExtender Web サーバーコントロールの概要</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RangeExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.RangeExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RangeExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Expressions.RangeExpression" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>比較に使用するフィールドを取得または設定します。</summary>
        <value>比較に使用するフィールド。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 範囲式は、指定された範囲のデータフィールドを検索します。  
  
   
  
## Examples  
 次の例では、 `FromTextBox`および`ToTextBox`テキストボックスで指定されている範囲内に表示価格が設定されている製品について、AdventureWorks データベースの products テーブルの price 列を検索する方法を示します。  
  
 このコード例は、 [「チュートリアル:宣言型の構文](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)を使用した Web ページ内のデータのフィルター処理。  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="rangeExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">比較に使用するオブジェクト。</param>
        <summary>範囲比較を実行した <see cref="T:System.Linq.IQueryable" /> オブジェクトを取得します。</summary>
        <returns>式が適用された <see cref="T:System.Linq.IQueryable" /> オブジェクトのインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、指定<xref:System.Linq.IQueryable>されたオブジェクトを使用して、式を解決します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" /> プロパティが <see langword="null" /> である。  
  
- または - 
<see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" /> プロパティと <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" /> プロパティを <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" /> に設定します。  
  
- または - 
<see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" /> プロパティまたは <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" /> プロパティが <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" /> に設定されていません。また、パラメーター コレクションが空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.RangeType MaxType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.RangeType MaxType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxType As RangeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::RangeType MaxType { System::Web::UI::WebControls::Expressions::RangeType get(); void set(System::Web::UI::WebControls::Expressions::RangeType value); };" />
      <MemberSignature Language="F#" Value="member this.MaxType : System.Web.UI.WebControls.Expressions.RangeType with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.RangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>範囲の最大値を取得または設定します。</summary>
        <value>最大値に対して使用する比較の種類。 既定値は <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" /> です。最大値の比較を行わないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティに指定できる値<xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>は<xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>、、 <xref:System.Web.UI.WebControls.Expressions.RangeType.None>、およびです。  
  
 <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A>をに<xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>設定すると、範囲の最大値が検索結果に含まれます。 これは、> = 操作を実行することと同じです。 プロパティを field に<xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>設定した場合は、> または < 操作を指定することと同じです。 プロパティをに<xref:System.Web.UI.WebControls.Expressions.RangeType.None>設定すると、範囲に制限は適用されません。  
  
   
  
## Examples  
 次の例では、範囲に指定されている最小値と最大値を除外する方法を示します。 最大値と最小値は、テキストボックスに入力されます。 このコード例は、 [「チュートリアル:宣言型の構文](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)を使用した Web ページ内のデータのフィルター処理。  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.RangeType MinType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.RangeType MinType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" />
      <MemberSignature Language="VB.NET" Value="Public Property MinType As RangeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::RangeType MinType { System::Web::UI::WebControls::Expressions::RangeType get(); void set(System::Web::UI::WebControls::Expressions::RangeType value); };" />
      <MemberSignature Language="F#" Value="member this.MinType : System.Web.UI.WebControls.Expressions.RangeType with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.MinType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.RangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>範囲の最小値を取得または設定します。</summary>
        <value>最小値に対して使用する比較の種類。 既定値は <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" /> です。最小値の比較を行わないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティに指定できる値<xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>は<xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>、、 <xref:System.Web.UI.WebControls.Expressions.RangeType.None>、およびです。  
  
 または<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A>プロパティがに<xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>設定されている場合、範囲の最小値と最大値が検索結果に含まれます。 <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> これは、> = または\<= 操作を実行することと同じです。 フィールドは、> または < 操作に相当し<xref:System.Web.UI.WebControls.Expressions.RangeType.None> 、範囲に制限はありません。 <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>  
  
   
  
## Examples  
 次の例では、範囲に指定されている最小値と最大値を除外する方法を示します。 最大値と最小値は、テキストボックスに入力されます。 このコード例は、 [「チュートリアル:宣言型の構文](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)を使用した Web ページ内のデータのフィルター処理。  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
