<Type Name="RangeExpression" FullName="System.Web.UI.WebControls.Expressions.RangeExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="48f90c0a0c789d50b9df3f9cf17d55258bd68166" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51900500" /></Metadata><TypeSignature Language="C#" Value="public class RangeExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RangeExpression extends System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.RangeExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class RangeExpression&#xA;Inherits ParameterDataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class RangeExpression : System::Web::UI::WebControls::Expressions::ParameterDataSourceExpression" />
  <TypeSignature Language="F#" Value="type RangeExpression = class&#xA;    inherit ParameterDataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>値が指定した値よりも大きいか小さいか、または値が指定した 2 つの値の間にあるかを判定する方法を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.QueryExtender>コントロールのクラスを使用して、Web ページにデータをフィルター処理する機能を提供する、<xref:System.Web.UI.WebControls.Expressions>名前空間。 これらのクラスには、<xref:System.Web.UI.WebControls.Expressions.RangeExpression>クラス。  
  
 <xref:System.Web.UI.WebControls.Expressions.RangeExpression>クラスは、範囲を定義する値のペアを使用して、データ列を検索します。 使用する、<xref:System.Web.UI.WebControls.Expressions.RangeExpression.DataField%2A>プロパティを検索する列を指定します。 使用する、<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A>を含めるか、検索で最小値を除外するかどうかを指定するには、次の結果、使用して、<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A>プロパティまたは最大値を除外するかどうかを指定します。 最大と最小値を指定できます[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]にコントロールと、値を渡されることができますし、<xref:System.Web.UI.WebControls.QueryExtender>コントロール内のパラメーターとして<xref:System.Web.UI.WebControls.ControlParameter>コントロール。 結果は通常、データ バインド コントロールに表示されます。  
  
   
  
## Examples  
 次の例で指定されている範囲内で、表示価格を持つ製品を AdventureWorks データベースの Products テーブルで、ListPrice 列を検索する方法を示しています、`FromTextBox`と`ToTextBox`テキスト ボックス。 フィルターに含まれる最小値は、結果の最大値を除外します。 結果が表示されます、<xref:System.Web.UI.WebControls.Label>コントロール。  
  
 このコード例で示されている例の一部は、[チュートリアル: Web ページを使用しての宣言構文内でのデータのフィルター処理](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)します。  
  
  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" /> プロパティが <see langword="null" /> です。</exception>
    <related type="Article" href="https://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702">による QueryExtender Web サーバー コントロールの概要</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RangeExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.RangeExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RangeExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Expressions.RangeExpression" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>比較に使用するフィールドを取得または設定します。</summary>
        <value>比較に使用するフィールド。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 範囲の式では、指定した範囲のデータ フィールドを検索します。  
  
   
  
## Examples  
 次の例で指定されている範囲内で、表示価格を持つ製品を AdventureWorks データベースの Products テーブル内の一覧の Price 列を検索する方法を示しています、`FromTextBox`と`ToTextBox`テキスト ボックス。  
  
 このコード例で示されている例の一部は、[チュートリアル: Web ページを使用しての宣言構文内でのデータのフィルター処理](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)します。  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="rangeExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">比較に使用するオブジェクト。</param>
        <summary>範囲比較を実行した <see cref="T:System.Linq.IQueryable" /> オブジェクトを取得します。</summary>
        <returns>式が適用された <see cref="T:System.Linq.IQueryable" /> オブジェクトのインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、指定した<xref:System.Linq.IQueryable>式を解決するオブジェクト。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" /> プロパティが <see langword="null" /> です。  
  
- または - 
<see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" /> プロパティと <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" /> プロパティを <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" /> に設定します。  
  
- または - 
<see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" /> プロパティまたは <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" /> プロパティが <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" /> に設定されていません。また、パラメーター コレクションが空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.RangeType MaxType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.RangeType MaxType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxType As RangeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::RangeType MaxType { System::Web::UI::WebControls::Expressions::RangeType get(); void set(System::Web::UI::WebControls::Expressions::RangeType value); };" />
      <MemberSignature Language="F#" Value="member this.MaxType : System.Web.UI.WebControls.Expressions.RangeType with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.RangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>範囲の最大値を取得または設定します。</summary>
        <value>最大値に対して使用する比較の種類。 既定値は <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" /> です。最大値の比較を行わないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの値は、 <xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>、 <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>、および<xref:System.Web.UI.WebControls.Expressions.RangeType.None>します。  
  
 ときに、<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A>に設定されている<xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>、検索結果に範囲の最大値が含まれます。 これを実行するため、> = 操作。 プロパティを設定する場合<xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>を指定することと同じであるフィールドを > または < 操作。 プロパティを設定する場合<xref:System.Web.UI.WebControls.Expressions.RangeType.None>の範囲に制限は適用されません。  
  
   
  
## Examples  
 次の例では、最大値を除外する方法と範囲で指定されている最小値を含める方法を示します。 最大値と最小値は、テキスト ボックスに入力されます。 このコード例で示されている例の一部は、[チュートリアル: Web ページを使用しての宣言構文内でのデータのフィルター処理](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)します。  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.RangeType MinType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.RangeType MinType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" />
      <MemberSignature Language="VB.NET" Value="Public Property MinType As RangeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::RangeType MinType { System::Web::UI::WebControls::Expressions::RangeType get(); void set(System::Web::UI::WebControls::Expressions::RangeType value); };" />
      <MemberSignature Language="F#" Value="member this.MinType : System.Web.UI.WebControls.Expressions.RangeType with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.MinType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.RangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>範囲の最小値を取得または設定します。</summary>
        <value>最小値に対して使用する比較の種類。 既定値は <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" /> です。最小値の比較を行わないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの値は、 <xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>、 <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>、および<xref:System.Web.UI.WebControls.Expressions.RangeType.None>します。  
  
 ときに、<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A>または<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A>プロパティに設定されて<xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>範囲の最小値と最大値が検索結果に含まれています。 これを実行するため、> = または\<操作を = です。 <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>フィールドは、> または < 操作と<xref:System.Web.UI.WebControls.Expressions.RangeType.None>範囲に制限はありません。  
  
   
  
## Examples  
 次の例では、最大値を除外する方法と範囲で指定されている最小値を含める方法を示します。 最大値と最小値は、テキスト ボックスに入力されます。 このコード例で示されている例の一部は、[チュートリアル: Web ページを使用しての宣言構文内でのデータのフィルター処理](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)します。  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>