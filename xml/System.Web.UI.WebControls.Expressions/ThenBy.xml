<Type Name="ThenBy" FullName="System.Web.UI.WebControls.Expressions.ThenBy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9803a974b70a888f0ddc28746ace60d06d636055" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39999226" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ThenBy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ThenBy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.ThenBy" />
  <TypeSignature Language="VB.NET" Value="Public Class ThenBy" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThenBy" />
  <TypeSignature Language="F#" Value="type ThenBy = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Linq.IQueryable" /> 式を適用した後に <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> データ ソース オブジェクトに並べ替え式を適用する方法を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して操作を実行する、並べ替えの後、<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>内の式、<xref:System.Web.UI.WebControls.QueryExtender>制御、後続の並べ替えを使用して操作を実行することができます、<xref:System.Web.UI.WebControls.Expressions.ThenBy>別のデータ フィールドのクラス。  
  
   
  
## Examples  
 次の例を降順で ListPrice フィールドによってデータを並べ替えるし、ProductID を使用して注文を昇順でフィールドでは、<xref:System.Web.UI.WebControls.Expressions.ThenBy>型。 このコード例で示されている例の一部は、[チュートリアル: Web ページを使用しての宣言構文内でのデータのフィルター処理](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)します。  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThenBy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.ThenBy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThenBy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.ThenBy.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.Expressions.ThenBy.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Linq.IQueryable" /> 式を適用する、<see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> オブジェクトのプロパティを取得または設定します。</summary>
        <value>
          <see cref="T:System.Linq.IQueryable" /> 式を適用する、<see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> オブジェクトのプロパティ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression>指定データ フィールドのデータを並べ替えます。 使用して別のデータ フィールドの後続の並べ替え操作を実行できる、 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 、<xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A>コレクション。 このプロパティを適用するデータ フィールドを指定します、`ThenBy`する操作を並べ替えます。  
  
   
  
## Examples  
 次の例では、降順でしてから、製品 ID フィールドを昇順に ListPrice フィールドによってデータを並べ替える方法を示します。 このコード例で示されている例の一部は、[チュートリアル: Web ページを使用しての宣言構文内でのデータのフィルター処理](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)します。  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SortDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SortDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.ThenBy.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As SortDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SortDirection Direction { System::Web::UI::WebControls::SortDirection get(); void set(System::Web::UI::WebControls::SortDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Web.UI.WebControls.SortDirection with get, set" Usage="System.Web.UI.WebControls.Expressions.ThenBy.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Linq.IQueryable" /> データ ソース オブジェクトの並べ替えの方向を取得または設定します。</summary>
        <value>
          <see cref="T:System.Linq.IQueryable" /> データ ソース オブジェクトの並べ替えの方向。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression>で使用されて、<xref:System.Web.UI.WebControls.QueryExtender>データを昇順または降順の並べ替えを制御します。 使用して、並べ替え操作の方向が指定されて、<xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A>プロパティ。  
  
   
  
## Examples  
 次の例では、ProductID フィールドを使用して昇順および降順で ListPrice フィールドによってデータを並べ替える方法を示しています、<xref:System.Web.UI.WebControls.Expressions.ThenBy.Direction%2A>プロパティ。 このコード例で示されている例の一部は、[チュートリアル: Web ページを使用しての宣言構文内でのデータのフィルター処理](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)します。  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>