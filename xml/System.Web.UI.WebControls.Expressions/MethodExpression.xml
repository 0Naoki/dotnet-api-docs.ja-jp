<Type Name="MethodExpression" FullName="System.Web.UI.WebControls.Expressions.MethodExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="18f5a5cc687c76ffbdde27195ed9789b21921d2f" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70510853" /></Metadata><TypeSignature Language="C#" Value="public class MethodExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MethodExpression extends System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.MethodExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class MethodExpression&#xA;Inherits ParameterDataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class MethodExpression : System::Web::UI::WebControls::Expressions::ParameterDataSourceExpression" />
  <TypeSignature Language="F#" Value="type MethodExpression = class&#xA;    inherit ParameterDataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="93cbd-101">メソッドで定義されているカスタム LINQ クエリを指定する方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="93cbd-101">Provides a way to specify a custom LINQ query that is defined in a method.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cbd-102">コントロール<xref:System.Web.UI.WebControls.QueryExtender>は、カスタム LINQ クエリをサポートします。</span><span class="sxs-lookup"><span data-stu-id="93cbd-102">The <xref:System.Web.UI.WebControls.QueryExtender> control supports custom LINQ queries.</span></span> <span data-ttu-id="93cbd-103">メソッドでカスタム LINQ クエリを定義し、 <xref:System.Web.UI.WebControls.Expressions.MethodExpression>フィルターオプションを使用して<xref:System.Web.UI.WebControls.QueryExtender>コントロールでクエリを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="93cbd-103">You can define a custom LINQ query in a method and use the <xref:System.Web.UI.WebControls.Expressions.MethodExpression> filter option to invoke the query in the <xref:System.Web.UI.WebControls.QueryExtender> control.</span></span>  
  
 <span data-ttu-id="93cbd-104">カスタム LINQ クエリを含むメソッドは、次の条件を満たしている必要があります。</span><span class="sxs-lookup"><span data-stu-id="93cbd-104">The method that contains the custom LINQ query must meet the following criteria:</span></span>  
  
-   <span data-ttu-id="93cbd-105">メソッドは静的である必要`Shared`があります (Visual Basic)。</span><span class="sxs-lookup"><span data-stu-id="93cbd-105">The method must be static (`Shared` in Visual Basic).</span></span> <span data-ttu-id="93cbd-106">最初のパラメーターは、オブジェクト<xref:System.Linq.IQueryable%601>また<xref:System.Collections.Generic.IEnumerable%601>はオブジェクトである必要があります。</span><span class="sxs-lookup"><span data-stu-id="93cbd-106">The first parameter must be an <xref:System.Linq.IQueryable%601> or <xref:System.Collections.Generic.IEnumerable%601> object.</span></span> <span data-ttu-id="93cbd-107">メソッドは複数のパラメーターを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="93cbd-107">The method can have more than one parameter.</span></span>  
  
-   <span data-ttu-id="93cbd-108">戻り値は、クエリ対象<xref:System.Linq.IQueryable%601>の<xref:System.Collections.Generic.IEnumerable%601>型または型を変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="93cbd-108">The return value cannot change the <xref:System.Linq.IQueryable%601> or <xref:System.Collections.Generic.IEnumerable%601> type that is queried.</span></span>  
  
 <span data-ttu-id="93cbd-109">は<xref:System.Web.UI.WebControls.Expressions.MethodExpression> 、次の順序でクエリを含むメソッドを検索します。</span><span class="sxs-lookup"><span data-stu-id="93cbd-109">The <xref:System.Web.UI.WebControls.Expressions.MethodExpression> searches for the method that contains the query in the following order:</span></span>  
  
1.  <span data-ttu-id="93cbd-110">コントロールでプロパティが指定されている場合<xref:System.Web.UI.WebControls.Expressions.MethodExpression> 、オブジェクトは指定された型のメソッドを検索します。 <xref:System.Web.UI.WebControls.Expressions.MethodExpression.TypeName%2A> <xref:System.Web.UI.WebControls.QueryExtender></span><span class="sxs-lookup"><span data-stu-id="93cbd-110">If a <xref:System.Web.UI.WebControls.Expressions.MethodExpression.TypeName%2A> property is specified in the <xref:System.Web.UI.WebControls.QueryExtender> control, the <xref:System.Web.UI.WebControls.Expressions.MethodExpression> object looks for the method in the specified type.</span></span>  
  
2.  <span data-ttu-id="93cbd-111">データソースがを実装<xref:System.Web.DynamicData.IDynamicDataSource>している場合、メソッドはコンテキスト型 (<xref:System.Data.Linq.DataContext>または<xref:System.Data.Objects.ObjectContext>オブジェクト) でメソッドを検索します。</span><span class="sxs-lookup"><span data-stu-id="93cbd-111">If the data source implements <xref:System.Web.DynamicData.IDynamicDataSource>, the method looks for the method on the context type (<xref:System.Data.Linq.DataContext> or <xref:System.Data.Objects.ObjectContext> object.)</span></span>  
  
3.  <span data-ttu-id="93cbd-112">メソッドは、テンプレートコントロール、ページの基本クラス、またはユーザーコントロールでメソッドを検索します。</span><span class="sxs-lookup"><span data-stu-id="93cbd-112">The method looks for the method in a template control, in the base class for the page, or in a user control.</span></span>  
  
 <span data-ttu-id="93cbd-113">クラスはクラスに<xref:System.Web.UI.WebControls.Expressions.CustomExpression>似ていますが、メソッドの呼び出しに応答してメソッド式が実行され、イベントに応答してカスタム式が実行される点が異なります。 <xref:System.Web.UI.WebControls.Expressions.MethodExpression></span><span class="sxs-lookup"><span data-stu-id="93cbd-113">The <xref:System.Web.UI.WebControls.Expressions.MethodExpression> class is like the <xref:System.Web.UI.WebControls.Expressions.CustomExpression> class except that the method expression is executed in response to a method call, and the custom expression is executed in response to an event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cbd-114">次の例では、AdventureWorks データベースの Products テーブルの ListPrice フィールドで、定価が400以上の製品を検索する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="93cbd-114">The following example shows how to search the ListPrice field of the Products table in the AdventureWorks database for products that have a list price of 400 or more.</span></span> <span data-ttu-id="93cbd-115">この例では、ページコード内のメソッドでカスタム LINQ クエリを作成する方法と、 <xref:System.Web.UI.WebControls.QueryExtender>コントロールのメソッドを呼び出す方法を示します。</span><span class="sxs-lookup"><span data-stu-id="93cbd-115">This example shows how to create a custom LINQ query in a method in page code and how to invoke the method in the <xref:System.Web.UI.WebControls.QueryExtender> control.</span></span>  
  
```vb  
Public Shared Function FilterStandardPrice(ByVal query As _  
        IQueryable(Of Product)) As IQueryable(Of Product)  
        Return From p In query _  
            Where p.ListPrice >= 400 _  
            Select p  
    End Function  
```  
  
```csharp  
public static IQueryable<Product>   
        FilterStandardPrice(IQueryable<Product> query)  
{  
        return from p in query  
                  where p.ListPrice >= 400  
                  select p;  
  
    }  
```  
  
 <span data-ttu-id="93cbd-116">次の例は、ページでメソッドを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="93cbd-116">The following example shows how to call the method in the page.</span></span>  
  
```  
<html>  
<head runat="server">  
  <title>Custom Filter</title>  
</head>  
<body>  
  <form id="form1" runat="server">  
    <asp:LinqDataSource ID="LinqDataSource1" runat="server"   
        ContextTypeName="AdventureworksDataContext" EntityTypeName=""   
        TableName="Products">  
    </asp:LinqDataSource>  
  
    <asp:QueryExtender ID="QueryExtender1" runat="server"   
        TargetControlID="LinqDataSource1">  
      <asp:MethodExpression MethodName="FilterStandardPrice" >  
      </asp:MethodExpression>  
    </asp:QueryExtender>  
  
    <asp:GridView ID="GridView1" runat="server"   
        DataSourceID="LinqDataSource1"   
        DataKeyNames="ProductID"   
    </asp:GridView>  
  </form>  
</body>  
</html>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MethodExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.MethodExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MethodExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="93cbd-117"><see cref="T:System.Web.UI.WebControls.Expressions.MethodExpression" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="93cbd-117">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Expressions.MethodExpression" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.MethodExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="methodExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="93cbd-118">使用するデータ ソース コントロール。</span><span class="sxs-lookup"><span data-stu-id="93cbd-118">The data source control to use.</span></span></param>
        <summary><span data-ttu-id="93cbd-119">指定された <see cref="T:System.Linq.IQueryable" /> オブジェクトを使用して、式を解決します。</span><span class="sxs-lookup"><span data-stu-id="93cbd-119">Resolves the expression by using the specified <see cref="T:System.Linq.IQueryable" /> object.</span></span></summary>
        <returns><span data-ttu-id="93cbd-120">式の解決に使用された <see cref="T:System.Linq.IQueryable" /> オブジェクトのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="93cbd-120">An instance of the <see cref="T:System.Linq.IQueryable" /> object that was used to resolve the expression.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="93cbd-121">データ ソース コントロールが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="93cbd-121">The data source control is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="93cbd-122">メソッドが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="93cbd-122">The method was not found.</span></span>  
  
<span data-ttu-id="93cbd-123">または</span><span class="sxs-lookup"><span data-stu-id="93cbd-123">-or-</span></span> 
<span data-ttu-id="93cbd-124">メソッドは静的ではありません。</span><span class="sxs-lookup"><span data-stu-id="93cbd-124">The method is not static.</span></span>  
  
<span data-ttu-id="93cbd-125">または</span><span class="sxs-lookup"><span data-stu-id="93cbd-125">-or-</span></span> 
<span data-ttu-id="93cbd-126">渡された <see langword="IQueryable&lt;T&gt;" /> オブジェクトの型が変更されました。</span><span class="sxs-lookup"><span data-stu-id="93cbd-126">The type of the passed <see langword="IQueryable&lt;T&gt;" /> object was changed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IgnoreIfNotFound">
      <MemberSignature Language="C#" Value="public bool IgnoreIfNotFound { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreIfNotFound" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.MethodExpression.IgnoreIfNotFound" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreIfNotFound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreIfNotFound { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreIfNotFound : bool with get, set" Usage="System.Web.UI.WebControls.Expressions.MethodExpression.IgnoreIfNotFound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cbd-127">式を無視する必要があるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="93cbd-127">Gets or sets a value that indicates whether the expression should be ignored.</span></span></summary>
        <value><span data-ttu-id="93cbd-128">式を無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="93cbd-128"><see langword="true" /> if the expression is ignored; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cbd-129">オブジェクト<xref:System.Web.UI.WebControls.Expressions.MethodExpression>は、特定の場所を検索し、特定の順序で検索することで、クエリを含むメソッドを検索します。</span><span class="sxs-lookup"><span data-stu-id="93cbd-129">The <xref:System.Web.UI.WebControls.Expressions.MethodExpression> object searches for a method that contains the query by looking in specific locations and searching in a specific order.</span></span> <span data-ttu-id="93cbd-130">このプロパティをに`false`設定すると、 <xref:System.Web.UI.WebControls.Expressions.CustomExpression>オブジェクトが LINQ を含むメソッドを見つけられなかった場合に例外をスローすることができます。</span><span class="sxs-lookup"><span data-stu-id="93cbd-130">You can set this property to `false` to throw an exception if the <xref:System.Web.UI.WebControls.Expressions.CustomExpression> object does not find a method that contains a LINQ.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public string MethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.MethodExpression.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MethodName : string with get, set" Usage="System.Web.UI.WebControls.Expressions.MethodExpression.MethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cbd-131">カスタム LINQ クエリを含むメソッドの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="93cbd-131">Gets or sets the name of the method that contains a custom LINQ query.</span></span></summary>
        <value><span data-ttu-id="93cbd-132">カスタム LINQ クエリを含むメソッドの名前。</span><span class="sxs-lookup"><span data-stu-id="93cbd-132">The name of the method that contains the custom LINQ query.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cbd-133"><xref:System.Web.UI.WebControls.Expressions.MethodExpression>オブジェクトを使用すると、メソッドで定義されているカスタム LINQ クエリを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="93cbd-133">The <xref:System.Web.UI.WebControls.Expressions.MethodExpression> object enables you to call a custom LINQ query that is defined in a method.</span></span> <span data-ttu-id="93cbd-134">ページの<xref:System.Web.UI.WebControls.QueryExtender>コントロールでメソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="93cbd-134">You specify the method in the <xref:System.Web.UI.WebControls.QueryExtender> control in the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cbd-135">次の例は、 `FilterStandardPrice` <xref:System.Web.UI.WebControls.QueryExtender>コントロールのメソッドを指定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="93cbd-135">The following example shows how to specify the `FilterStandardPrice` method in the <xref:System.Web.UI.WebControls.QueryExtender> control.</span></span> <span data-ttu-id="93cbd-136">カスタム LINQ クエリは、 `FilterStandardPrice`メソッドで定義されています。</span><span class="sxs-lookup"><span data-stu-id="93cbd-136">The custom LINQ query is defined in a `FilterStandardPrice` method.</span></span>  
  
```  
<asp:QueryExtender ID="QueryExtender1" runat="server"   
    TargetControlID="LinqDataSource1">  
  <asp:MethodExpression MethodName="FilterStandardPrice">  
  </asp:MethodExpression>  
  </asp:QueryExtender>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.MethodExpression.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Web.UI.WebControls.Expressions.MethodExpression.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cbd-137">メソッドにカスタム クエリが含まれているクラスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="93cbd-137">Gets or sets the class whose method contains the custom query.</span></span></summary>
        <value><span data-ttu-id="93cbd-138">メソッドが属するクラス。</span><span class="sxs-lookup"><span data-stu-id="93cbd-138">The class that the method is a member of.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cbd-139">クラスを使用すると、 <xref:System.Web.UI.WebControls.QueryExtender>コントロールのデータソースにカスタム式を指定できます。 <xref:System.Web.UI.WebControls.Expressions.MethodExpression></span><span class="sxs-lookup"><span data-stu-id="93cbd-139">The <xref:System.Web.UI.WebControls.Expressions.MethodExpression> class enables you to specify a custom expression for a data source in the <xref:System.Web.UI.WebControls.QueryExtender> control.</span></span> <span data-ttu-id="93cbd-140"><xref:System.Web.UI.WebControls.Expressions.MethodExpression.TypeName%2A>プロパティを使用して、メソッドが属するクラスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="93cbd-140">You can use the <xref:System.Web.UI.WebControls.Expressions.MethodExpression.TypeName%2A> property to specify the class to which the method belongs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
