<Type Name="IsVolatile" FullName="System.Runtime.CompilerServices.IsVolatile">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f15331286c57dd871587d77292a69a44ec47fd1d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30476236" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class IsVolatile" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsVolatile extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsVolatile" />
  <TypeSignature Language="VB.NET" Value="Public Class IsVolatile" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsVolatile abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>フィールドを volatile としてマークします。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `IsVolatile` そのフィールドが揮発性であることを示すメソッドのシグネチャのカスタム修飾子でのみ使用されます。 コンパイラは volatile としてマークされている 1 つまたは複数のフィールドのメタデータをインポートする必要があります付けた命令を使用して`volatile.`このようなフィールドにアクセスします。  
  
 クラスは、<xref:System.Runtime.CompilerServices>コンパイラ ライターの使用のみ。  
  
 コンパイラは、ジャストイン タイム (JIT) コンパイラが既定の動作が適切ではない場合に、値を処理する方法を変更するメタデータ内のカスタム修飾子を生成します。  JIT コンパイラには、カスタム修飾子が検出されると、修飾子を指定する方法で値を処理します。  コンパイラは、メソッド、パラメーターにカスタム修飾子を適用し、値を返します。  JIT コンパイラでは、必須の修飾子に応答する必要がありますが、オプションの修飾子を無視することができます。  C++ コンパイラでは、既定では、バイト処理、JIT コンパイラが C++ との互換性のない方法でバイトを処理する場合に使用する方法を定義するカスタム修飾子を生成可能性があります。  
  
 次の手法のいずれかを使用してメタデータにカスタム修飾子を出力することができます。  
  
-   内のメソッドを使用して、<xref:System.Reflection.Emit.TypeBuilder>などクラス<xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>、 <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>、 <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>、および<xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>です。  
  
-   呼び出しを含む Microsoft intermediate language (MSIL) の命令ファイルを生成する`modopt`と`modreq`を使用してファイルをまとめることと、 [Ilasm.exe (IL アセンブラー)](~/docs/framework/tools/ilasm-exe-il-assembler.md)です。  
  
-   アンマネージ リフレクション API を使用します。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>