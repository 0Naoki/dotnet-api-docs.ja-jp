<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MethodImplOptions.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52a1306513d16e7911502bbab52cc392fd3a1e968.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2a1306513d16e7911502bbab52cc392fd3a1e968</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.CompilerServices.MethodImplOptions">
          <source>Defines the details of how a method is implemented.</source>
          <target state="translated">メソッドを実装する方法の詳細を定義します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.MethodImplOptions">
          <source>This enumeration is used with the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.MethodImplAttribute&gt;</ph> attribute.</source>
          <target state="translated">この列挙体を使用、<ph id="ph1">&lt;xref:System.Runtime.CompilerServices.MethodImplAttribute&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.MethodImplOptions">
          <source>You can specify multiple <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.MethodImplOptions&gt;</ph> values by using the bitwise OR operator.</source>
          <target state="translated">複数を指定することができます<ph id="ph1">&lt;xref:System.Runtime.CompilerServices.MethodImplOptions&gt;</ph>ビットごとの OR 演算子を使用して値にします。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.MethodImplOptions">
          <source>Locking on the instance or on the type, as with the Synchronized flag, is not recommended for public types, because code other than your own can take locks on public types and instances.</source>
          <target state="translated">Synchronized フラグと同様、インスタンス、またはその型でのロックは使用しないでパブリック型の場合、自分以外のコードのパブリック型とインスタンスのロックがかかるためです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.MethodImplOptions">
          <source>This might cause deadlocks or other synchronization problems.</source>
          <target state="translated">デッドロックまたは他の同期に関する問題があります。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="F:System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining">
          <source>The method should be inlined if possible.</source>
          <target state="translated">可能な場合は、メソッドを常にインライン展開する必要があります。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="F:System.Runtime.CompilerServices.MethodImplOptions.ForwardRef">
          <source>The method is declared, but its implementation is provided elsewhere.</source>
          <target state="translated">メソッドが宣言されましたが、その実装は別の場所で提供されます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="F:System.Runtime.CompilerServices.MethodImplOptions.InternalCall">
          <source>The call is internal, that is, it calls a method that is implemented within the common language runtime.</source>
          <target state="translated">この呼び出しは内部的なものです。つまり、共通言語ランタイムの内部に実装されたメソッドの呼び出しです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="F:System.Runtime.CompilerServices.MethodImplOptions.NoInlining">
          <source>The method cannot be inlined.</source>
          <target state="translated">メソッドはインライン化できません。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.Runtime.CompilerServices.MethodImplOptions.NoInlining">
          <source>Inlining is an optimization by which a method call is replaced with the method body.</source>
          <target state="translated">インライン展開とは、メソッド呼び出しをメソッド本体に置換する最適化のことです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Runtime.CompilerServices.MethodImplOptions.NoOptimization">
          <source>The method is not optimized by the just-in-time (JIT) compiler or by native code generation (see <bpt id="p1">[</bpt>Ngen.exe<ept id="p1">](~/docs/framework/tools/ngen-exe-native-image-generator.md)</ept>) when debugging possible code generation problems.</source>
          <target state="translated">コード生成の問題をデバッグする場合に、メソッドを最適化するために Just-In-Time (JIT) コンパイラまたはネイティブ コードによる生成を使用しません (<bpt id="p1">[</bpt>Ngen.exe<ept id="p1">](~/docs/framework/tools/ngen-exe-native-image-generator.md)</ept> を参照)。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Runtime.CompilerServices.MethodImplOptions.PreserveSig">
          <source>The method signature is exported exactly as declared.</source>
          <target state="translated">メソッド シグネチャは宣言どおりにエクスポートされます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.Runtime.CompilerServices.MethodImplOptions.Synchronized">
          <source>The method can be executed by only one thread at a time.</source>
          <target state="translated">メソッドを実行できるのは、一度に 1 つのスレッドだけです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.Runtime.CompilerServices.MethodImplOptions.Synchronized">
          <source>Static methods lock on the type, whereas instance methods lock on the instance.</source>
          <target state="translated">静的メソッドは型をロックし、インスタンス メソッドはインスタンスをロックします。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.Runtime.CompilerServices.MethodImplOptions.Synchronized">
          <source>Only one thread can execute in any of the instance functions, and only one thread can execute in any of a class's static functions.</source>
          <target state="translated">インスタンス関数で実行できるスレッドは 1 つだけです。また、クラスの静的関数で実行できるスレッドも 1 つだけです。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Runtime.CompilerServices.MethodImplOptions.Unmanaged">
          <source>The method is implemented in unmanaged code.</source>
          <target state="translated">メソッドはアンマネージ コードに実装されます。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>