<Type Name="IsCopyConstructed" FullName="System.Runtime.CompilerServices.IsCopyConstructed">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4293a7268613a4d35cc8def8b5d73ebbc82f549c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class IsCopyConstructed" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsCopyConstructed extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsCopyConstructed" />
  <TypeSignature Language="VB.NET" Value="Public Class IsCopyConstructed" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsCopyConstructed abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f8c70-101">この型の値のコピーには、型が提供するコピー コンストラクターを使用する必要があることを示します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f8c70-101">Indicates that any copying of values of this type must use the copy constructor provided by the type.</span>
      </span>
      <span data-ttu-id="f8c70-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f8c70-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8c70-103">任意の型によって変更、<xref:System.Runtime.CompilerServices.IsCopyConstructed>クラスは、という名前のメソッドを実装する必要があります`MarshalCopy`ネイティブ コピー コンス トラクターを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="f8c70-103">Any type modified by the <xref:System.Runtime.CompilerServices.IsCopyConstructed> class must implement a method named `MarshalCopy` that calls the native copy constructor.</span></span>  
  
 <span data-ttu-id="f8c70-104">コピー コンス トラクターを使用してメタデータに出力されるネイティブ C++ 型には、マーシャ リングの境界を越えて値をコピーするときに、マーシャラーによってと呼ばれるこれらのメソッドが必要です。</span><span class="sxs-lookup"><span data-stu-id="f8c70-104">Any native C++ type that is emitted into metadata with copy constructors needs to have those methods called by the marshaler when copying values across the marshaling boundary.</span></span>  <span data-ttu-id="f8c70-105">Microsoft C コンパイラでは、メソッド パラメーター内のすべてのネイティブ C++ 型を変更し、マーシャ リング コードでこの動作をトリガーするには、この修飾子を持つ型を返します。</span><span class="sxs-lookup"><span data-stu-id="f8c70-105">The Microsoft C++ compiler modifies all native C++ types in method parameters and return types that have this modifier to trigger this behavior in the marshaling code.</span></span>  
  
 <span data-ttu-id="f8c70-106">コンパイラは、ジャストイン タイム (JIT) コンパイラが既定の動作が適切ではない場合に、値を処理する方法を変更するメタデータ内のカスタム修飾子を生成します。</span><span class="sxs-lookup"><span data-stu-id="f8c70-106">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="f8c70-107">JIT コンパイラには、カスタム修飾子が検出されると、修飾子を指定する方法で値を処理します。</span><span class="sxs-lookup"><span data-stu-id="f8c70-107">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="f8c70-108">コンパイラは、メソッド、パラメーターにカスタム修飾子を適用し、値を返します。</span><span class="sxs-lookup"><span data-stu-id="f8c70-108">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="f8c70-109">JIT コンパイラでは、必須の修飾子に応答する必要がありますが、オプションの修飾子を無視することができます。</span><span class="sxs-lookup"><span data-stu-id="f8c70-109">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  
  
 <span data-ttu-id="f8c70-110">次の手法のいずれかを使用してメタデータにカスタム修飾子を出力することができます。</span><span class="sxs-lookup"><span data-stu-id="f8c70-110">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="f8c70-111">内のメソッドを使用して、<xref:System.Reflection.Emit.TypeBuilder>などクラス<xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>、 <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>、 <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>、および<xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f8c70-111">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="f8c70-112">呼び出しを含む Microsoft intermediate language (MSIL) の命令ファイルを生成する`modopt`と`modreq`を使用してファイルをまとめることと、 [Ilasm.exe (IL アセンブラー)](~/docs/framework/tools/ilasm-exe-il-assembler.md)です。</span><span class="sxs-lookup"><span data-stu-id="f8c70-112">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="f8c70-113">アンマネージ リフレクション API を使用します。</span><span class="sxs-lookup"><span data-stu-id="f8c70-113">Using the unmanaged reflection API.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>