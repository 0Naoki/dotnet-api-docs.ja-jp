<Type Name="IsExplicitlyDereferenced" FullName="System.Runtime.CompilerServices.IsExplicitlyDereferenced">
  <Metadata><Meta Name="ms.openlocfilehash" Value="120e8d772a4a124b91650cdd2020e5222e67ed69" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37639278" /></Metadata><TypeSignature Language="C#" Value="public static class IsExplicitlyDereferenced" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsExplicitlyDereferenced extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsExplicitlyDereferenced" />
  <TypeSignature Language="VB.NET" Value="Public Class IsExplicitlyDereferenced" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsExplicitlyDereferenced abstract sealed" />
  <TypeSignature Language="F#" Value="type IsExplicitlyDereferenced = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b5ff0-101">マネージド ポインターがメソッド シグネチャ内のポインター パラメーターを表すことを示します。</span><span class="sxs-lookup"><span data-stu-id="b5ff0-101">Indicates that a managed pointer represents a pointer parameter within a method signature.</span></span> <span data-ttu-id="b5ff0-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="b5ff0-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5ff0-103">C++ では、マネージ ポインターおよびマネージ参照が、ポインターとしてメタデータに出力されます。</span><span class="sxs-lookup"><span data-stu-id="b5ff0-103">In C++, managed pointers and managed references are emitted into metadata as pointers.</span></span>  <span data-ttu-id="b5ff0-104">メタデータの 2 つの型を区別するためには、Microsoft C コンパイラは、この修飾子をマネージ ポインターに適用します。</span><span class="sxs-lookup"><span data-stu-id="b5ff0-104">To distinguish between the two types in metadata, the Microsoft  C++ compiler applies this modifier to managed pointers.</span></span>  <span data-ttu-id="b5ff0-105">マネージ参照型の修飾子は出力されません。</span><span class="sxs-lookup"><span data-stu-id="b5ff0-105">It emits no modifier on managed reference types.</span></span>  <span data-ttu-id="b5ff0-106">コンパイラは、メタデータ スコープからメソッドをインポートするときに、適切な呼び出し構文を知っている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5ff0-106">Compilers need to know the correct calling syntax when importing a method from metadata scope.</span></span>  <span data-ttu-id="b5ff0-107"><xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced>クラスと、パートナー、<xref:System.Runtime.CompilerServices.IsImplicitlyDereferenced>クラス、ポインター パラメーターからの参照パラメーターのあいまいさを解消します。</span><span class="sxs-lookup"><span data-stu-id="b5ff0-107">The <xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced> class and its partner, the <xref:System.Runtime.CompilerServices.IsImplicitlyDereferenced> class, disambiguate reference parameters from pointer parameters.</span></span>  
  
 <span data-ttu-id="b5ff0-108">コンパイラは、ジャストイン タイム (JIT) コンパイラが、既定の動作が適切ではない場合に、値を処理する方法を変更するメタデータ内のカスタム修飾子を出力します。</span><span class="sxs-lookup"><span data-stu-id="b5ff0-108">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="b5ff0-109">JIT コンパイラには、カスタム修飾子が検出されると、修飾子を指定する方法で値を処理します。</span><span class="sxs-lookup"><span data-stu-id="b5ff0-109">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="b5ff0-110">コンパイラは、メソッド、パラメーターにカスタム修飾子を適用して、戻り値です。</span><span class="sxs-lookup"><span data-stu-id="b5ff0-110">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="b5ff0-111">JIT コンパイラでは、必須の修飾子に応答する必要がありますが、オプションの修飾子を無視することができます。</span><span class="sxs-lookup"><span data-stu-id="b5ff0-111">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  
  
 <span data-ttu-id="b5ff0-112">カスタム修飾子を使用して、次の手法のいずれかのメタデータに出力できます。</span><span class="sxs-lookup"><span data-stu-id="b5ff0-112">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="b5ff0-113">内のメソッドを使用して、<xref:System.Reflection.Emit.TypeBuilder>などクラス<xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>、 <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>、 <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>、および<xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>します。</span><span class="sxs-lookup"><span data-stu-id="b5ff0-113">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="b5ff0-114">呼び出しを含む Microsoft intermediate language (MSIL) の命令ファイルを生成する`modopt`と`modreq`、使用して、ファイルをアセンブルし、 [Ilasm.exe (IL アセンブラー)](~/docs/framework/tools/ilasm-exe-il-assembler.md)します。</span><span class="sxs-lookup"><span data-stu-id="b5ff0-114">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="b5ff0-115">アンマネージ リフレクション API を使用します。</span><span class="sxs-lookup"><span data-stu-id="b5ff0-115">Using the unmanaged reflection API.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5ff0-116">次の例では、出力する方法、<xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced>リフレクションを使用してアセンブリのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b5ff0-116">The following example demonstrates how to emit an <xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced> object into an assembly using reflection.</span></span>  
  
 [!code-cpp[Runtime.CompilerServices.IsExplicitlyDereferenced#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsExplicitlyDereferenced/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>