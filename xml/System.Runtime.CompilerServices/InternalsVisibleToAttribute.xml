<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="InternalsVisibleToAttribute.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac572f45e174f70fa5053339a1308aae4feae8b8626.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">72f45e174f70fa5053339a1308aae4feae8b8626</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Specifies that types that are ordinarily visible only within the current assembly are visible to a specified assembly.</source>
          <target state="translated">通常は現在のアセンブリ内でのみ参照できる型が、指定したアセンブリから参照可能であることを指定します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Ordinarily, types and members with <ph id="ph1">`internal`</ph> scope (in C#) and <ph id="ph2">`friend`</ph> scope (in Visual Basic) are visible only in the assembly in which they are defined.</source>
          <target state="translated">通常は、型およびメンバーで<ph id="ph1">`internal`</ph>のスコープ (C# の場合) と<ph id="ph2">`friend`</ph>(Visual Basic) のスコープが定義されているアセンブリでのみ表示されます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute makes them also visible to the types in a specified assembly, which is known as a friend assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph>属性は、それらの種類にも表示されているフレンド アセンブリと呼ばれる指定したアセンブリ内。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The attribute is applied at the assembly level.</source>
          <target state="translated">属性がアセンブリ レベルで適用されます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>This means that it can be included at the beginning of a source code file, or it can be included in the AssemblyInfo file in a Visual Studio project.</source>
          <target state="translated">つまり、ソース コード ファイルの先頭には追加できますまたは、Visual Studio プロジェクトの AssemblyInfo ファイルに含まれていることができます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>You can use the attribute to specify a single friend assembly that can access the internal types and members of the current assembly.</source>
          <target state="translated">属性を使用すると、内部の型と、現在のアセンブリのメンバーにアクセスできる 1 つのフレンド アセンブリを指定します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>You can define multiple friend assemblies in two ways.</source>
          <target state="translated">2 つの方法では、複数のフレンド アセンブリを定義できます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>They can appear as individual assembly-level attributes, as the following example illustrates.</source>
          <target state="translated">次の例に示すように、個々 のアセンブリ レベル属性として表示されることができます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>They can also appear with separate <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> tags but a single <ph id="ph2">`assembly`</ph> keyword, as the following example illustrates.</source>
          <target state="translated">個別に表示されます<ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph>タグが 1 つ<ph id="ph2">`assembly`</ph>キーワードとして次の例を示しています。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The friend assembly is identified by the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">フレンド アセンブリは、によって識別される、<ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Both the current assembly and the friend assembly must be unsigned, or both assemblies must be signed with a strong name.</source>
          <target state="translated">現在のアセンブリとフレンド アセンブリの両方が、署名する必要があるまたは両方のアセンブリを厳密な名前で署名する必要があります。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>If both assemblies are unsigned, the <ph id="ph1">`assemblyName`</ph> argument consists of the name of the friend assembly, specified without a directory path or file name extension.</source>
          <target state="translated">両方のアセンブリは符号がない場合、<ph id="ph1">`assemblyName`</ph>引数は、ディレクトリのパスまたはファイル名拡張子なしで指定された、フレンド アセンブリの名前で構成されます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>If both assemblies are signed with a strong name, the argument to the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A&gt;</ph> constructor must consist of the name of the assembly without its directory path or file name extension, along with the full public key (and not its public key token).</source>
          <target state="translated">強力な両方のアセンブリが署名されている場合の名前、引数、<ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A&gt;</ph>コンス トラクターは、ディレクトリ パスまたはファイル名拡張子の付かない、および完全な公開キー (とその公開キー トークンされません)、アセンブリの名前ので構成する必要があります。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>To get the full public key of a strong-named assembly, see the <bpt id="p1">[</bpt>Getting the full public key<ept id="p1">](#Key)</ept> section later in this article.</source>
          <target state="translated">厳密な名前のアセンブリの完全な公開キーを取得するには、次を参照してください。、<bpt id="p1">[</bpt>完全な公開キーの取得<ept id="p1">](#Key)</ept>この記事で後述する「します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>For more information about using <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> with strong-named assemblies, see the <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">使用しての詳細については<ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph>厳密な名前付きのアセンブリを参照してください、<ph id="ph2">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Do not include values for the <ph id="ph1">&lt;xref:System.Reflection.AssemblyName.CultureInfo%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Version%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A&gt;</ph> field in the argument; the Visual Basic, C#, and C++ compilers treat this as a compiler error.</source>
          <target state="translated">値を含めないでください、 <ph id="ph1">&lt;xref:System.Reflection.AssemblyName.CultureInfo%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Version%2A&gt;</ph>、または<ph id="ph3">&lt;xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A&gt;</ph>引数でフィールド以外の場合は、Visual Basic、c#、および C++ コンパイラはコンパイラ エラーとして処理します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>If you use a compiler that does not treat it as an error (such as the <bpt id="p1">[</bpt>IL Assembler (ILAsm.exe)<ept id="p1">](~/docs/framework/tools/ilasm-exe-il-assembler.md)</ept>) and the assemblies are strong-named, a <ph id="ph1">&lt;xref:System.MethodAccessException&gt;</ph> exception is thrown the first time the specified friend assembly accesses the assembly that contains the <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute.</source>
          <target state="translated">コンパイラ エラーとして処理されませんを使用するかどうか (など、 <bpt id="p1">[</bpt>IL アセンブラー (ILAsm.exe)<ept id="p1">](~/docs/framework/tools/ilasm-exe-il-assembler.md)</ept>)、アセンブリが厳密な名前、および、<ph id="ph1">&lt;xref:System.MethodAccessException&gt;</ph>例外は、指定したフレンド アセンブリを含むアセンブリにアクセスを初めて、<ph id="ph2">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>For more information about how to use this attribute, see the following topics:</source>
          <target state="translated">この属性を使用する方法の詳細については、次のトピックを参照してください。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source><bpt id="p1">[</bpt>Friend Assemblies (C++)<ept id="p1">](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>フレンド アセンブリ (C++)<ept id="p1">](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source><bpt id="p1">[</bpt>Friend Assemblies<ept id="p1">](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>フレンド アセンブリ<ept id="p1">](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Getting the full public key</source>
          <target state="translated">完全な公開キーの取得</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>You can use the <bpt id="p1">[</bpt>Strong Name Tool (Sn.exe)<ept id="p1">](~/docs/framework/tools/sn-exe-strong-name-tool.md)</ept> to retrieve the full public key from a strong-named key (.snk) file.</source>
          <target state="translated">使用することができます、<bpt id="p1">[</bpt>厳密名ツール (Sn.exe)<ept id="p1">](~/docs/framework/tools/sn-exe-strong-name-tool.md)</ept>を厳密な名前キー (.snk) ファイルから完全な公開キーを取得します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>To do this, you perform the following steps:</source>
          <target state="translated">これを行うには、次の手順を実行します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Extract the public key from the strong-named key file to a separate file:</source>
          <target state="translated">別のファイル、厳密な名前キー ファイルから公開キーを抽出します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source><bpt id="p1">**</bpt>Sn -p<ept id="p1">**</ept>  <bpt id="p2">*</bpt>snk_file<ept id="p2">*</ept> <bpt id="p3">*</bpt>outfile<ept id="p3">*</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sn -p<ept id="p1">**</ept>  <bpt id="p2">*</bpt>snk_file<ept id="p2">*</ept> <bpt id="p3">*</bpt>outfile<ept id="p3">*</ept></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Display the full public key to the console:</source>
          <target state="translated">完全な公開キーをコンソールに表示します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source><bpt id="p1">**</bpt>Sn -tp<ept id="p1">**</ept>  <bpt id="p2">*</bpt>outfile<ept id="p2">*</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sn -tp<ept id="p1">**</ept>  <bpt id="p2">*</bpt>outfile<ept id="p2">*</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Copy and paste the full public key value into your source code.</source>
          <target state="translated">コピーし、ソース コードに完全な公開キー値を貼り付けます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Compiling the friend assembly with C#</source>
          <target state="translated">C# を使用してフレンド アセンブリをコンパイルします。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>If you use the C# compiler to compile the friend assembly, you must explicitly specify the name of the output file (.exe or .dll) by using the <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> compiler option.</source>
          <target state="translated">使用して、出力ファイル (.exe または .dll) の名前を明示的に指定する必要があります、c# コンパイラを使用してフレンド アセンブリをコンパイルする場合、 <bpt id="p1">**</bpt>/out<ept id="p1">**</ept>コンパイラ オプション。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>This is required because the compiler has not yet generated the name for the assembly it is building at the time it is binding to external references.</source>
          <target state="translated">この指定は必ず行ってください。コンパイラが外部参照にバインドする時点ではまだ、ビルド中のアセンブリの名前が生成されていないためです。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> compiler option is optional for the Visual Basic compiler, and the corresponding <bpt id="p2">**</bpt>-out<ept id="p2">**</ept> or <bpt id="p3">**</bpt>-o<ept id="p3">**</ept> compiler option should not be used when compiling friend assemblies with the F# compiler.</source>
          <target state="translated"><bpt id="p1">**</bpt>/Out<ept id="p1">**</ept>コンパイラ オプションは、Visual Basic コンパイラ、および対応する省略可能な<bpt id="p2">**</bpt>-アウト<ept id="p2">**</ept>または<bpt id="p3">**</bpt>-o<ept id="p3">**</ept> f# コンパイラでフレンド アセンブリをコンパイルするときに、コンパイラ オプションは使用できません。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Compiling the friend assembly with C++</source>
          <target state="translated">C++ でフレンド アセンブリをコンパイルします。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>In C++, in order to make the internal members enabled by the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute accessible to a friend assembly, you must use the <ph id="ph2">`as_friend`</ph> attribute in the C++  directive.</source>
          <target state="translated">C++ では、内部のメンバーで有効にするために、<ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph>フレンド アセンブリにアクセスできる属性を使用する必要があります、 <ph id="ph2">`as_friend`</ph> C++ ディレクティブ内の属性です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>Friend Assemblies (C++)<ept id="p1">](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>フレンド アセンブリ (C++)<ept id="p1">](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)</ept>です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source><bpt id="p1">**</bpt>Signed assemblies<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>署名付きアセンブリ<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute to make an <ph id="ph2">`internal`</ph> method named <ph id="ph3">`AppendDirectorySeparator`</ph> in a signed assembly visible to another signed assembly.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph>属性を<ph id="ph2">`internal`</ph>という名前のメソッド<ph id="ph3">`AppendDirectorySeparator`</ph>は署名付きアセンブリを別の署名されたアセンブリから参照可能にします。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>It defines a <ph id="ph1">`FileUtilities`</ph> class that includes an internal <ph id="ph2">`AppendDirectorySeparator`</ph> method.</source>
          <target state="translated">定義する、<ph id="ph1">`FileUtilities`</ph>を含む内部クラス<ph id="ph2">`AppendDirectorySeparator`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute is applied to the assembly that contains the <ph id="ph2">`FileUtilities`</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph>属性を含むアセンブリに適用した、<ph id="ph2">`FileUtilities`</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The attribute allows an assembly named <ph id="ph1">`Friend1`</ph> to access this internal member.</source>
          <target state="translated">属性により、という名前のアセンブリ<ph id="ph1">`Friend1`</ph>この内部のメンバーにアクセスします。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>If the following example is compiled into a strong-named assembly named <ph id="ph1">`Friend1`</ph>, the <ph id="ph2">`Example.Main`</ph> method in <ph id="ph3">`Friend1`</ph> can successfully call the <ph id="ph4">`FileUtilities.AppendDirectorySeparator`</ph> method, although the method is internal to the <ph id="ph5">`Assembly1`</ph> assembly.</source>
          <target state="translated">かどうかは次の例は、厳密な名前のアセンブリにコンパイルという名前<ph id="ph1">`Friend1`</ph>、<ph id="ph2">`Example.Main`</ph>メソッド<ph id="ph3">`Friend1`</ph>が正常に呼び出すことができます、<ph id="ph4">`FileUtilities.AppendDirectorySeparator`</ph>メソッド、メソッドは内部、<ph id="ph5">`Assembly1`</ph>アセンブリ。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Note that if you are compiling in C# from the command line, you must use the <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</source>
          <target state="translated">C# の場合、コマンドラインからコンパイルする場合を付けることに注意してください、 <bpt id="p1">**</bpt>/out<ept id="p1">**</ept>コンパイラ スイッチに、コンパイラが外部参照に連結すると、フレンド アセンブリの名前が使用可能なことを確認します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source><bpt id="p1">**</bpt>Unsigned assemblies<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>署名のないアセンブリ<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute to make an <ph id="ph2">`internal`</ph> member of an unsigned assembly visible to another unsigned assembly.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph>属性を<ph id="ph2">`internal`</ph>別に表示される署名のないアセンブリのメンバーには、アセンブリが署名されていません。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The attribute ensures that the <ph id="ph1">`internal`</ph> <ph id="ph2">`StringLib.IsFirstLetterUpperCase`</ph> method in an assembly named <ph id="ph3">`UtilityLib`</ph> is visible to the code in an assembly named <ph id="ph4">`Friend2`</ph>.</source>
          <target state="translated">属性により、 <ph id="ph1">`internal`</ph> <ph id="ph2">`StringLib.IsFirstLetterUpperCase`</ph>という名前のアセンブリ内のメソッド<ph id="ph3">`UtilityLib`</ph>がという名前のアセンブリ内のコードに表示される<ph id="ph4">`Friend2`</ph>です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The following is the source code for UtilityLib.dll:</source>
          <target state="translated">UtilityLib.dll のソース コードを次に示します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>The following example provides the source code for the <ph id="ph1">`Friend2`</ph> assembly.</source>
          <target state="translated">次の例のソース コードを提供する、<ph id="ph1">`Friend2`</ph>アセンブリ。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
          <source>Note that if you are compiling in C# from the command line, you must use the <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</source>
          <target state="translated">C# の場合、コマンドラインからコンパイルする場合を付けることに注意してください、 <bpt id="p1">**</bpt>/out<ept id="p1">**</ept>コンパイラ スイッチに、コンパイラが外部参照に連結すると、フレンド アセンブリの名前が使用可能なことを確認します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The name of a friend assembly.</source>
          <target state="translated">フレンド アセンブリの名前。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /&gt;</ph> class with the name of the specified friend assembly.</source>
          <target state="translated">指定したフレンド アセンブリの名前を使用して <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A&gt;</ph> constructor defines a friend assembly, which is an assembly that has access to the internal types and members of the current assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A&gt;</ph>コンス トラクターは内部の型と、現在のアセンブリのメンバーにアクセス権を持つアセンブリをあるフレンド アセンブリを定義します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>Both the current assembly and the friend assembly must be unsigned, or both must be signed with a strong name.</source>
          <target state="translated">現在のアセンブリとフレンド アセンブリの両方が、署名する必要があるまたは両方を厳密な名前で署名する必要があります。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>(For more information about strong-named assemblies, see <bpt id="p1">[</bpt>Creating and Using Strong-Named Assemblies<ept id="p1">](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md)</ept>.) If both are unsigned, the <ph id="ph1">`assemblyName`</ph> argument consists of the name of the friend assembly, specified without a directory path or file extension.</source>
          <target state="translated">(厳密な名前付きアセンブリの詳細については、次を参照してください<bpt id="p1">[</bpt>作成と使用<ept id="p1">](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md)</ept>。)。署名済み、両方がない場合、<ph id="ph1">`assemblyName`</ph>引数は、ディレクトリのパスまたはファイルの拡張子を付けずに指定された、フレンド アセンブリの名前で構成されます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>If both are signed, <ph id="ph1">`assemblyName`</ph> consists of the name of the friend assembly without its directory path or file name extension, along with its full public key (but not its public key token).</source>
          <target state="translated">両方が署名されている場合<ph id="ph1">`assemblyName`</ph>ディレクトリ パスまたはファイル名拡張子の付かない、完全な公開キー (ではない公開キー トークン) とフレンド アセンブリの名前で構成されます。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The other components of a strong name, such as those that provide culture, version, or processor architecture information, cannot be specified in the <ph id="ph1">`assemblyName`</ph> argument.</source>
          <target state="translated">厳密な名前、カルチャ、バージョン、またはプロセッサ アーキテクチャの情報を提供するなどの他のコンポーネントを指定することはできません、<ph id="ph1">`assemblyName`</ph>引数。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>If you use the C# compiler to compile the friend assembly, you must explicitly specify the name of the output file (.exe or .dll) by using the <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> compiler option.</source>
          <target state="translated">使用して、出力ファイル (.exe または .dll) の名前を明示的に指定する必要があります、c# コンパイラを使用してフレンド アセンブリをコンパイルする場合、 <bpt id="p1">**</bpt>/out<ept id="p1">**</ept>コンパイラ オプション。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>This is required because the compiler has not yet generated the name for the assembly it is building at the time it is binding to external references.</source>
          <target state="translated">この指定は必ず行ってください。コンパイラが外部参照にバインドする時点ではまだ、ビルド中のアセンブリの名前が生成されていないためです。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> compiler option is optional for the Visual Basic compiler, and the corresponding <bpt id="p2">**</bpt>-out<ept id="p2">**</ept> or <bpt id="p3">**</bpt>-o<ept id="p3">**</ept> compiler option should not be used when compiling friend assemblies with the F# compiler.</source>
          <target state="translated"><bpt id="p1">**</bpt>/Out<ept id="p1">**</ept>コンパイラ オプションは、Visual Basic コンパイラ、および対応する省略可能な<bpt id="p2">**</bpt>-アウト<ept id="p2">**</ept>または<bpt id="p3">**</bpt>-o<ept id="p3">**</ept> f# コンパイラでフレンド アセンブリをコンパイルするときに、コンパイラ オプションは使用できません。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>You can use <bpt id="p1">[</bpt>Sn.exe (Strong Name Tool)<ept id="p1">](~/docs/framework/tools/sn-exe-strong-name-tool.md)</ept> to retrieve the full public key from a strong-named key (.snk) file.</source>
          <target state="translated">使用することができます<bpt id="p1">[</bpt>Sn.exe (厳密名ツール)<ept id="p1">](~/docs/framework/tools/sn-exe-strong-name-tool.md)</ept>を厳密な名前キー (.snk) ファイルから完全な公開キーを取得します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>To do this, you perform the following steps:</source>
          <target state="translated">これを行うには、次の手順を実行します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>Extract the public key from the strong-named key file to a separate file:</source>
          <target state="translated">別のファイル、厳密な名前キー ファイルから公開キーを抽出します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source><bpt id="p1">**</bpt>Sn -p<ept id="p1">**</ept>  <bpt id="p2">*</bpt>snk_file<ept id="p2">*</ept> <bpt id="p3">*</bpt>outfile<ept id="p3">*</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sn -p<ept id="p1">**</ept>  <bpt id="p2">*</bpt>snk_file<ept id="p2">*</ept> <bpt id="p3">*</bpt>outfile<ept id="p3">*</ept></target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>Display the full public key to the console:</source>
          <target state="translated">完全な公開キーをコンソールに表示します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source><bpt id="p1">**</bpt>Sn -tp<ept id="p1">**</ept>  <bpt id="p2">*</bpt>outfile<ept id="p2">*</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sn -tp<ept id="p1">**</ept>  <bpt id="p2">*</bpt>outfile<ept id="p2">*</ept></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>Copy and paste the full public key value into your source code.</source>
          <target state="translated">コピーし、ソース コードに完全な公開キー値を貼り付けます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>For more information about how to use the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute, see the following topics:</source>
          <target state="translated">使用する方法についての詳細、<ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph>属性を次のトピックを参照してください。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source><bpt id="p1">[</bpt>Friend Assemblies (C++)<ept id="p1">](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>フレンド アセンブリ (C++)<ept id="p1">](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)</ept></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source><bpt id="p1">[</bpt>Friend Assemblies<ept id="p1">](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>フレンド アセンブリ<ept id="p1">](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)</ept></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source><bpt id="p1">**</bpt>Signed assemblies<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>署名付きアセンブリ<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute to make an <ph id="ph2">`internal`</ph> method named <ph id="ph3">`AppendDirectorySeparator`</ph> in a signed assembly visible to another signed assembly.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph>属性を<ph id="ph2">`internal`</ph>という名前のメソッド<ph id="ph3">`AppendDirectorySeparator`</ph>は署名付きアセンブリを別の署名されたアセンブリから参照可能にします。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>It defines a <ph id="ph1">`FileUtilities`</ph> class that includes an internal <ph id="ph2">`AppendDirectorySeparator`</ph> method.</source>
          <target state="translated">定義する、<ph id="ph1">`FileUtilities`</ph>を含む内部クラス<ph id="ph2">`AppendDirectorySeparator`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute is applied to the assembly that contains the <ph id="ph2">`FileUtilities`</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph>属性を含むアセンブリに適用した、<ph id="ph2">`FileUtilities`</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The attribute allows an assembly named <ph id="ph1">`Friend1`</ph> to access this internal member.</source>
          <target state="translated">属性により、という名前のアセンブリ<ph id="ph1">`Friend1`</ph>この内部のメンバーにアクセスします。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>If the following example is compiled into a strong-named assembly named <ph id="ph1">`Friend1`</ph>, it can successfully call the <ph id="ph2">`FileUtilities.AppendDirectorySeparator`</ph> method, even though the method is internal to the <ph id="ph3">`Assembly1`</ph> assembly.</source>
          <target state="translated">次の例のという名前、厳密な名前のアセンブリがコンパイル<ph id="ph1">`Friend1`</ph>、正常に呼び出すことができます、<ph id="ph2">`FileUtilities.AppendDirectorySeparator`</ph>メソッド、メソッドは内部の場合でも、<ph id="ph3">`Assembly1`</ph>アセンブリ。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>Note that if you are compiling in C# from the command line, you must use the <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</source>
          <target state="translated">C# の場合、コマンドラインからコンパイルする場合を付けることに注意してください、 <bpt id="p1">**</bpt>/out<ept id="p1">**</ept>コンパイラ スイッチに、コンパイラが外部参照に連結すると、フレンド アセンブリの名前が使用可能なことを確認します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute to make an <ph id="ph2">`internal`</ph> member of an unsigned assembly visible to another unsigned assembly.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph>属性を<ph id="ph2">`internal`</ph>別に表示される署名のないアセンブリのメンバーには、アセンブリが署名されていません。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The attribute ensures that the <ph id="ph1">`internal`</ph> <ph id="ph2">`StringLib.IsFirstLetterUpperCase`</ph> method in an assembly named <ph id="ph3">`UtilityLib`</ph> is visible to the code in an assembly named <ph id="ph4">`Friend2`</ph>.</source>
          <target state="translated">属性により、 <ph id="ph1">`internal`</ph> <ph id="ph2">`StringLib.IsFirstLetterUpperCase`</ph>という名前のアセンブリ内のメソッド<ph id="ph3">`UtilityLib`</ph>がという名前のアセンブリ内のコードに表示される<ph id="ph4">`Friend2`</ph>です。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The following is the source code for UtilityLib.dll:</source>
          <target state="translated">UtilityLib.dll のソース コードを次に示します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source><bpt id="p1">**</bpt>Unsigned assemblies<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>署名のないアセンブリ<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>The following example provides the source code for the <ph id="ph1">`Friend2`</ph> assembly.</source>
          <target state="translated">次の例のソース コードを提供する、<ph id="ph1">`Friend2`</ph>アセンブリ。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
          <source>Note that if you are compiling in C# from the command line, you must use the <bpt id="p1">**</bpt>/out<ept id="p1">**</ept> compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</source>
          <target state="translated">C# の場合、コマンドラインからコンパイルする場合を付けることに注意してください、 <bpt id="p1">**</bpt>/out<ept id="p1">**</ept>コンパイラ スイッチに、コンパイラが外部参照に連結すると、フレンド アセンブリの名前が使用可能なことを確認します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible">
          <source>This property is not implemented.</source>
          <target state="translated">このプロパティは実装されていません。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible">
          <source>This property does not return a value.</source>
          <target state="translated">このプロパティは値を返しません。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName">
          <source>Gets the name of the friend assembly to which all types and type members that are marked with the <ph id="ph1">&lt;see langword="internal" /&gt;</ph> keyword are to be made visible.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="internal" /&gt;</ph> キーワードを使用してマークされている型と型のメンバーをすべて参照できるようにする、フレンド アセンブリの名前を取得します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName">
          <source>A string that represents the name of the friend assembly.</source>
          <target state="translated">フレンド アセンブリの名前を表す文字列。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName">
          <source>For more information about how to use the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph> attribute, see the following topics:</source>
          <target state="translated">使用する方法についての詳細、<ph id="ph1">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</ph>属性を次のトピックを参照してください。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName">
          <source><bpt id="p1">[</bpt>Friend Assemblies (C++)<ept id="p1">](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>フレンド アセンブリ (C++)<ept id="p1">](http://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)</ept></target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName">
          <source><bpt id="p1">[</bpt>Friend Assemblies<ept id="p1">](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>フレンド アセンブリ<ept id="p1">](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>