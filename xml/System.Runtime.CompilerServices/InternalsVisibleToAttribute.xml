<Type Name="InternalsVisibleToAttribute" FullName="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f0b6174ea837be0c0d10d39a109f0e32df7ca13" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56393594" /></Metadata><TypeSignature Language="C#" Value="public sealed class InternalsVisibleToAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InternalsVisibleToAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InternalsVisibleToAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InternalsVisibleToAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type InternalsVisibleToAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="31137-101">通常は現在のアセンブリ内でのみ参照できる型が、指定したアセンブリから参照可能であることを指定します。</span><span class="sxs-lookup"><span data-stu-id="31137-101">Specifies that types that are ordinarily visible only within the current assembly are visible to a specified assembly.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31137-102">通常、型とメンバーを`internal`または`private protected`スコープ (でC#) と`Friend`と`Private Protected`(Visual Basic) でスコープが定義されているアセンブリでのみ表示されます。</span><span class="sxs-lookup"><span data-stu-id="31137-102">Ordinarily, types and members with `internal` or `private protected` scope (in C#) and `Friend` and `Private Protected` scope (in Visual Basic) are visible only in the assembly in which they are defined.</span></span> <span data-ttu-id="31137-103"><xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>属性は、それらの種類にも表示されているフレンド アセンブリと呼ばれますが、指定したアセンブリ内。</span><span class="sxs-lookup"><span data-stu-id="31137-103">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute makes them also visible to the types in a specified assembly, which is known as a friend assembly.</span></span> <span data-ttu-id="31137-104">これだけに当てはまり`internal`(`Friend` VB で) または`private protected`(`Private Protected` VB で) メソッドにのみ、なく`private`ものです。</span><span class="sxs-lookup"><span data-stu-id="31137-104">This only applies to `internal` (`Friend` in VB) or `private protected`(`Private Protected` in VB) methods only, but not `private` ones.</span></span>
  
 <span data-ttu-id="31137-105">属性は、アセンブリ レベルで適用されます。</span><span class="sxs-lookup"><span data-stu-id="31137-105">The attribute is applied at the assembly level.</span></span> <span data-ttu-id="31137-106">つまり、ソース コード ファイルの先頭には追加できますまたは Visual Studio プロジェクトの AssemblyInfo ファイルに記述できます。</span><span class="sxs-lookup"><span data-stu-id="31137-106">This means that it can be included at the beginning of a source code file, or it can be included in the AssemblyInfo file in a Visual Studio project.</span></span> <span data-ttu-id="31137-107">属性を使用して、内部の型と、現在のアセンブリのメンバーにアクセスできる 1 つのフレンド アセンブリを指定することができます。</span><span class="sxs-lookup"><span data-stu-id="31137-107">You can use the attribute to specify a single friend assembly that can access the internal types and members of the current assembly.</span></span> <span data-ttu-id="31137-108">2 つの方法では、複数のフレンド アセンブリを定義できます。</span><span class="sxs-lookup"><span data-stu-id="31137-108">You can define multiple friend assemblies in two ways.</span></span> <span data-ttu-id="31137-109">それらには、次の例に示すように個々 のアセンブリ レベル属性として表示できます。</span><span class="sxs-lookup"><span data-stu-id="31137-109">They can appear as individual assembly-level attributes, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple1.cs#3)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple1.vb#3)]  
  
 <span data-ttu-id="31137-110">個別に表示されることができますも<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>タグが 1 つ`assembly`キーワードでは、次の例として示します。</span><span class="sxs-lookup"><span data-stu-id="31137-110">They can also appear with separate <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> tags but a single `assembly` keyword, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple2.cs#4)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple2.vb#4)]  
  
 <span data-ttu-id="31137-111">フレンド アセンブリがで識別される、<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="31137-111">The friend assembly is identified by the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor.</span></span> <span data-ttu-id="31137-112">現在のアセンブリとフレンド アセンブリの両方が、署名する必要がある、または両方のアセンブリは厳密な名前で署名する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31137-112">Both the current assembly and the friend assembly must be unsigned, or both assemblies must be signed with a strong name.</span></span>  
  
 <span data-ttu-id="31137-113">両方のアセンブリに署名がない場合、`assemblyName`引数が指定のディレクトリ パスまたはファイル名の拡張子を除いた、フレンド アセンブリの名前で構成されます。</span><span class="sxs-lookup"><span data-stu-id="31137-113">If both assemblies are unsigned, the `assemblyName` argument consists of the name of the friend assembly, specified without a directory path or file name extension.</span></span>  
  
 <span data-ttu-id="31137-114">強力な両方のアセンブリが署名されている場合の名前、引数、<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A>コンス トラクターは、ディレクトリ パスまたはファイル名拡張子を除いた、完全な公開キー (およびない公開キー トークン) と共にアセンブリの名前ので構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31137-114">If both assemblies are signed with a strong name, the argument to the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor must consist of the name of the assembly without its directory path or file name extension, along with the full public key (and not its public key token).</span></span> <span data-ttu-id="31137-115">厳密な名前のアセンブリの完全な公開キーを取得するを参照してください、[完全な公開キーを取得する](#Key)この記事で後述する「します。</span><span class="sxs-lookup"><span data-stu-id="31137-115">To get the full public key of a strong-named assembly, see the [Getting the full public key](#Key) section later in this article.</span></span> <span data-ttu-id="31137-116">使用しての詳細については<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>アセンブリの厳密な名前を使用した、次を参照してください。、<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="31137-116">For more information about using <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> with strong-named assemblies, see the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="31137-117">値を含めないでください、 <xref:System.Reflection.AssemblyName.CultureInfo%2A>、 <xref:System.Reflection.AssemblyName.Version%2A>、または<xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A> フィールドに、引数は、Visual Basic、c#、および C++ コンパイラ、コンパイラ エラーとして処理します。</span><span class="sxs-lookup"><span data-stu-id="31137-117">Do not include values for the <xref:System.Reflection.AssemblyName.CultureInfo%2A>, <xref:System.Reflection.AssemblyName.Version%2A>, or <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A> field in the argument; the Visual Basic, C#, and C++ compilers treat this as a compiler error.</span></span> <span data-ttu-id="31137-118">コンパイラ エラーとして処理しませんを使用するかどうか (など、 [IL アセンブラー (ILAsm.exe)](~/docs/framework/tools/ilasm-exe-il-assembler.md))、アセンブリが厳密な名前と、<xref:System.MethodAccessException>例外がスローされる指定したフレンド アセンブリが初めて、アセンブリを含む、<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>属性。</span><span class="sxs-lookup"><span data-stu-id="31137-118">If you use a compiler that does not treat it as an error (such as the [IL Assembler (ILAsm.exe)](~/docs/framework/tools/ilasm-exe-il-assembler.md)) and the assemblies are strong-named, a <xref:System.MethodAccessException> exception is thrown the first time the specified friend assembly accesses the assembly that contains the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute.</span></span>  
  
 <span data-ttu-id="31137-119">この属性を使用する方法の詳細については、次のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="31137-119">For more information about how to use this attribute, see the following topics:</span></span>  
  
-   [<span data-ttu-id="31137-120">フレンド アセンブリ (C++)</span><span class="sxs-lookup"><span data-stu-id="31137-120">Friend Assemblies (C++)</span></span>](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [<span data-ttu-id="31137-121">フレンド アセンブリ</span><span class="sxs-lookup"><span data-stu-id="31137-121">Friend Assemblies</span></span>](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
<a name="Key"></a>   
## <a name="getting-the-full-public-key"></a><span data-ttu-id="31137-122">完全な公開キーの取得</span><span class="sxs-lookup"><span data-stu-id="31137-122">Getting the full public key</span></span>  
 <span data-ttu-id="31137-123">使用することができます、[厳密名ツール (Sn.exe)](~/docs/framework/tools/sn-exe-strong-name-tool.md)厳密な名前キー (.snk) ファイルから完全な公開キーを取得します。</span><span class="sxs-lookup"><span data-stu-id="31137-123">You can use the [Strong Name Tool (Sn.exe)](~/docs/framework/tools/sn-exe-strong-name-tool.md) to retrieve the full public key from a strong-named key (.snk) file.</span></span> <span data-ttu-id="31137-124">これを行うには、次の手順を実行します。</span><span class="sxs-lookup"><span data-stu-id="31137-124">To do this, you perform the following steps:</span></span>  
  
1.  <span data-ttu-id="31137-125">別のファイルに、厳密な名前キー ファイルから公開キーを抽出します。</span><span class="sxs-lookup"><span data-stu-id="31137-125">Extract the public key from the strong-named key file to a separate file:</span></span>  
  
     <span data-ttu-id="31137-126">**Sn -p**  *snk_file* *outfile*</span><span class="sxs-lookup"><span data-stu-id="31137-126">**Sn -p**  *snk_file* *outfile*</span></span>  
  
2.  <span data-ttu-id="31137-127">完全な公開キーをコンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="31137-127">Display the full public key to the console:</span></span>  
  
     <span data-ttu-id="31137-128">\**Sn tp\*\*\*outfile*</span><span class="sxs-lookup"><span data-stu-id="31137-128">**Sn -tp**  *outfile*</span></span>  
  
3.  <span data-ttu-id="31137-129">コピーして、ソース コードに完全な公開キーの値を貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="31137-129">Copy and paste the full public key value into your source code.</span></span>  
  
## <a name="compiling-the-friend-assembly-with-c"></a><span data-ttu-id="31137-130">C# を使用したフレンド アセンブリをコンパイルします。</span><span class="sxs-lookup"><span data-stu-id="31137-130">Compiling the friend assembly with C#</span></span>  
 <span data-ttu-id="31137-131">使用して、出力ファイル (.exe または .dll) の名前を明示的に指定する必要があります、フレンド アセンブリをコンパイルすると、C# コンパイラを使用する場合、 **/out**コンパイラ オプション。</span><span class="sxs-lookup"><span data-stu-id="31137-131">If you use the C# compiler to compile the friend assembly, you must explicitly specify the name of the output file (.exe or .dll) by using the **/out** compiler option.</span></span> <span data-ttu-id="31137-132">この指定は必ず行ってください。コンパイラが外部参照にバインドする時点ではまだ、ビルド中のアセンブリの名前が生成されていないためです。</span><span class="sxs-lookup"><span data-stu-id="31137-132">This is required because the compiler has not yet generated the name for the assembly it is building at the time it is binding to external references.</span></span> <span data-ttu-id="31137-133">**/Out**コンパイラ オプションは、Visual Basic コンパイラと、対応する省略可能な **-アウト**または **-o**フレンドをコンパイルするときに、コンパイラ オプションを使用しない必要がありますアセンブリをF#コンパイラ。</span><span class="sxs-lookup"><span data-stu-id="31137-133">The **/out** compiler option is optional for the Visual Basic compiler, and the corresponding **-out** or **-o** compiler option should not be used when compiling friend assemblies with the F# compiler.</span></span>  
  
## <a name="compiling-the-friend-assembly-with-c"></a><span data-ttu-id="31137-134">C++ のフレンド アセンブリをコンパイルします。</span><span class="sxs-lookup"><span data-stu-id="31137-134">Compiling the friend assembly with C++</span></span>  
 <span data-ttu-id="31137-135">C++ では、内部のメンバーで有効にするために、<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>フレンド アセンブリにアクセスできる属性は、使用する必要があります、 `as_friend` C++ ディレクティブの属性。</span><span class="sxs-lookup"><span data-stu-id="31137-135">In C++, in order to make the internal members enabled by the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute accessible to a friend assembly, you must use the `as_friend` attribute in the C++  directive.</span></span> <span data-ttu-id="31137-136">詳細については、次を参照してください。[フレンド アセンブリ (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)します。</span><span class="sxs-lookup"><span data-stu-id="31137-136">For more information, see [Friend Assemblies (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31137-137">**署名付きアセンブリ**</span><span class="sxs-lookup"><span data-stu-id="31137-137">**Signed assemblies**</span></span>  
  
 <span data-ttu-id="31137-138">次の例では、<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>属性を`internal`という名前のメソッド`AppendDirectorySeparator`で署名されたアセンブリの署名されたアセンブリを別に表示します。</span><span class="sxs-lookup"><span data-stu-id="31137-138">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` method named `AppendDirectorySeparator` in a signed assembly visible to another signed assembly.</span></span> <span data-ttu-id="31137-139">定義、`FileUtilities`を含む内部クラス`AppendDirectorySeparator`メソッド。</span><span class="sxs-lookup"><span data-stu-id="31137-139">It defines a `FileUtilities` class that includes an internal `AppendDirectorySeparator` method.</span></span> <span data-ttu-id="31137-140"><xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>属性を含むアセンブリに適用されます、`FileUtilities`クラス。</span><span class="sxs-lookup"><span data-stu-id="31137-140">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute is applied to the assembly that contains the `FileUtilities` class.</span></span> <span data-ttu-id="31137-141">属性は、という名前のアセンブリ`Friend1`この内部メンバーにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="31137-141">The attribute allows an assembly named `Friend1` to access this internal member.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 <span data-ttu-id="31137-142">次の例をという名前の厳密な名前付きアセンブリにコンパイルされているかどうか`Friend1`、`Example.Main`メソッド`Friend1`正常に呼び出すことができます、`FileUtilities.AppendDirectorySeparator`メソッド、メソッドは内部ですが、`Assembly1`アセンブリ。</span><span class="sxs-lookup"><span data-stu-id="31137-142">If the following example is compiled into a strong-named assembly named `Friend1`, the `Example.Main` method in `Friend1` can successfully call the `FileUtilities.AppendDirectorySeparator` method, although the method is internal to the `Assembly1` assembly.</span></span> <span data-ttu-id="31137-143">場合は、コマンドラインから c# でコンパイルする必要がありますを使用することに注意してください、 **/out**コンパイラ スイッチ、コンパイラが外部参照に連結すると、フレンド アセンブリの名前が使用できるようにします。</span><span class="sxs-lookup"><span data-stu-id="31137-143">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 <span data-ttu-id="31137-144">**署名のないアセンブリ**</span><span class="sxs-lookup"><span data-stu-id="31137-144">**Unsigned assemblies**</span></span>  
  
 <span data-ttu-id="31137-145">次の例では、<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>属性を`internal`アセンブリ別に表示される符号なしのメンバーには、アセンブリが署名されていません。</span><span class="sxs-lookup"><span data-stu-id="31137-145">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` member of an unsigned assembly visible to another unsigned assembly.</span></span> <span data-ttu-id="31137-146">属性により、 `internal` `StringLib.IsFirstLetterUpperCase`という名前のアセンブリ内のメソッド`UtilityLib`という名前のアセンブリ内のコードに表示される`Friend2`します。</span><span class="sxs-lookup"><span data-stu-id="31137-146">The attribute ensures that the `internal` `StringLib.IsFirstLetterUpperCase` method in an assembly named `UtilityLib` is visible to the code in an assembly named `Friend2`.</span></span>  <span data-ttu-id="31137-147">UtilityLib.dll のソース コードを次に示します。</span><span class="sxs-lookup"><span data-stu-id="31137-147">The following is the source code for UtilityLib.dll:</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 <span data-ttu-id="31137-148">次の例のソース コードを提供する、`Friend2`アセンブリ。</span><span class="sxs-lookup"><span data-stu-id="31137-148">The following example provides the source code for the `Friend2` assembly.</span></span> <span data-ttu-id="31137-149">場合は、コマンドラインから c# でコンパイルする必要がありますを使用することに注意してください、 **/out**コンパイラ スイッチ、コンパイラが外部参照に連結すると、フレンド アセンブリの名前が使用できるようにします。</span><span class="sxs-lookup"><span data-stu-id="31137-149">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalsVisibleToAttribute (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InternalsVisibleToAttribute(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.CompilerServices.InternalsVisibleToAttribute : string -&gt; System.Runtime.CompilerServices.InternalsVisibleToAttribute" Usage="new System.Runtime.CompilerServices.InternalsVisibleToAttribute assemblyName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="31137-150">フレンド アセンブリの名前。</span><span class="sxs-lookup"><span data-stu-id="31137-150">The name of a friend assembly.</span></span></param>
        <summary><span data-ttu-id="31137-151">指定したフレンド アセンブリの名前を使用して <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="31137-151">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /> class with the name of the specified friend assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31137-152"><xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A>コンス トラクターは内部にアクセスできるアセンブリがフレンド アセンブリを定義し、現在のアセンブリの型とメンバーがプライベートに保護されています。</span><span class="sxs-lookup"><span data-stu-id="31137-152">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor defines a friend assembly, which is an assembly that has access to the internal and private protected types and members of the current assembly.</span></span>  
  
 <span data-ttu-id="31137-153">現在のアセンブリとフレンド アセンブリの両方が、署名する必要があるか、両方は厳密な名前で署名する必要があります。</span><span class="sxs-lookup"><span data-stu-id="31137-153">Both the current assembly and the friend assembly must be unsigned, or both must be signed with a strong name.</span></span> <span data-ttu-id="31137-154">(厳密な名前付きアセンブリの詳細については、次を参照してください[の作成と using strong-named Assemblies](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md)。)。署名済み、両方がない場合、`assemblyName`引数は、ディレクトリのパスまたはファイルの拡張機能なしで指定したフレンド アセンブリの名前で構成されます。</span><span class="sxs-lookup"><span data-stu-id="31137-154">(For more information about strong-named assemblies, see [Creating and Using Strong-Named Assemblies](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md).) If both are unsigned, the `assemblyName` argument consists of the name of the friend assembly, specified without a directory path or file extension.</span></span> <span data-ttu-id="31137-155">両方が署名されている場合`assemblyName`そのディレクトリ パスまたはファイル名拡張子を除いた、完全な公開キー (がない公開キー トークン) と共にフレンド アセンブリの名前で構成されます。</span><span class="sxs-lookup"><span data-stu-id="31137-155">If both are signed, `assemblyName` consists of the name of the friend assembly without its directory path or file name extension, along with its full public key (but not its public key token).</span></span> <span data-ttu-id="31137-156">カルチャ、バージョン、またはプロセッサ アーキテクチャの情報を提供するような厳密な名前の他のコンポーネントを指定することはできません、`assemblyName`引数。</span><span class="sxs-lookup"><span data-stu-id="31137-156">The other components of a strong name, such as those that provide culture, version, or processor architecture information, cannot be specified in the `assemblyName` argument.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="31137-157">使用して、出力ファイル (.exe または .dll) の名前を明示的に指定する必要があります、フレンド アセンブリをコンパイルすると、C# コンパイラを使用する場合、 **/out**コンパイラ オプション。</span><span class="sxs-lookup"><span data-stu-id="31137-157">If you use the C# compiler to compile the friend assembly, you must explicitly specify the name of the output file (.exe or .dll) by using the **/out** compiler option.</span></span> <span data-ttu-id="31137-158">この指定は必ず行ってください。コンパイラが外部参照にバインドする時点ではまだ、ビルド中のアセンブリの名前が生成されていないためです。</span><span class="sxs-lookup"><span data-stu-id="31137-158">This is required because the compiler has not yet generated the name for the assembly it is building at the time it is binding to external references.</span></span> <span data-ttu-id="31137-159">**/Out**コンパイラ オプションは、Visual Basic コンパイラと、対応する省略可能な **-アウト**または **-o**フレンドをコンパイルするときに、コンパイラ オプションを使用しない必要がありますアセンブリをF#コンパイラ。</span><span class="sxs-lookup"><span data-stu-id="31137-159">The **/out** compiler option is optional for the Visual Basic compiler, and the corresponding **-out** or **-o** compiler option should not be used when compiling friend assemblies with the F# compiler.</span></span>  
  
 <span data-ttu-id="31137-160">使用することができます[Sn.exe (厳密名ツール)](~/docs/framework/tools/sn-exe-strong-name-tool.md)厳密な名前キー (.snk) ファイルから完全な公開キーを取得します。</span><span class="sxs-lookup"><span data-stu-id="31137-160">You can use [Sn.exe (Strong Name Tool)](~/docs/framework/tools/sn-exe-strong-name-tool.md) to retrieve the full public key from a strong-named key (.snk) file.</span></span> <span data-ttu-id="31137-161">これを行うには、次の手順を実行します。</span><span class="sxs-lookup"><span data-stu-id="31137-161">To do this, you perform the following steps:</span></span>  
  
1.  <span data-ttu-id="31137-162">別のファイルに、厳密な名前キー ファイルから公開キーを抽出します。</span><span class="sxs-lookup"><span data-stu-id="31137-162">Extract the public key from the strong-named key file to a separate file:</span></span>  
  
     <span data-ttu-id="31137-163">**Sn -p**  *snk_file* *outfile*</span><span class="sxs-lookup"><span data-stu-id="31137-163">**Sn -p**  *snk_file* *outfile*</span></span>  
  
2.  <span data-ttu-id="31137-164">完全な公開キーをコンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="31137-164">Display the full public key to the console:</span></span>  
  
     <span data-ttu-id="31137-165">\**Sn tp\*\*\*outfile*</span><span class="sxs-lookup"><span data-stu-id="31137-165">**Sn -tp**  *outfile*</span></span>  
  
3.  <span data-ttu-id="31137-166">コピーして、ソース コードに完全な公開キーの値を貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="31137-166">Copy and paste the full public key value into your source code.</span></span>  
  
 <span data-ttu-id="31137-167">使用する方法についての詳細、<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>属性を次のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="31137-167">For more information about how to use the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute, see the following topics:</span></span>  
  
-   [<span data-ttu-id="31137-168">フレンド アセンブリ (C++)</span><span class="sxs-lookup"><span data-stu-id="31137-168">Friend Assemblies (C++)</span></span>](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [<span data-ttu-id="31137-169">フレンド アセンブリ</span><span class="sxs-lookup"><span data-stu-id="31137-169">Friend Assemblies</span></span>](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
   
  
## Examples  
 <span data-ttu-id="31137-170">**署名付きアセンブリ**</span><span class="sxs-lookup"><span data-stu-id="31137-170">**Signed assemblies**</span></span>  
  
 <span data-ttu-id="31137-171">次の例では、<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>属性を`internal`という名前のメソッド`AppendDirectorySeparator`で署名されたアセンブリの署名されたアセンブリを別に表示します。</span><span class="sxs-lookup"><span data-stu-id="31137-171">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` method named `AppendDirectorySeparator` in a signed assembly visible to another signed assembly.</span></span> <span data-ttu-id="31137-172">定義、`FileUtilities`を含む内部クラス`AppendDirectorySeparator`メソッド。</span><span class="sxs-lookup"><span data-stu-id="31137-172">It defines a `FileUtilities` class that includes an internal `AppendDirectorySeparator` method.</span></span> <span data-ttu-id="31137-173"><xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>属性を含むアセンブリに適用されます、`FileUtilities`クラス。</span><span class="sxs-lookup"><span data-stu-id="31137-173">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute is applied to the assembly that contains the `FileUtilities` class.</span></span> <span data-ttu-id="31137-174">属性は、という名前のアセンブリ`Friend1`この内部メンバーにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="31137-174">The attribute allows an assembly named `Friend1` to access this internal member.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 <span data-ttu-id="31137-175">次の例のという名前の厳密な名前のアセンブリがコンパイル`Friend1`、正常に呼び出すことができます、`FileUtilities.AppendDirectorySeparator`メソッド、メソッドは内部場合でも、`Assembly1`アセンブリ。</span><span class="sxs-lookup"><span data-stu-id="31137-175">If the following example is compiled into a strong-named assembly named `Friend1`, it can successfully call the `FileUtilities.AppendDirectorySeparator` method, even though the method is internal to the `Assembly1` assembly.</span></span> <span data-ttu-id="31137-176">場合は、コマンドラインから c# でコンパイルする必要がありますを使用することに注意してください、 **/out**コンパイラ スイッチ、コンパイラが外部参照に連結すると、フレンド アセンブリの名前が使用できるようにします。</span><span class="sxs-lookup"><span data-stu-id="31137-176">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 <span data-ttu-id="31137-177">次の例では、<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>属性を`internal`アセンブリ別に表示される符号なしのメンバーには、アセンブリが署名されていません。</span><span class="sxs-lookup"><span data-stu-id="31137-177">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` member of an unsigned assembly visible to another unsigned assembly.</span></span> <span data-ttu-id="31137-178">属性により、 `internal` `StringLib.IsFirstLetterUpperCase`という名前のアセンブリ内のメソッド`UtilityLib`という名前のアセンブリ内のコードに表示される`Friend2`します。</span><span class="sxs-lookup"><span data-stu-id="31137-178">The attribute ensures that the `internal` `StringLib.IsFirstLetterUpperCase` method in an assembly named `UtilityLib` is visible to the code in an assembly named `Friend2`.</span></span>  <span data-ttu-id="31137-179">UtilityLib.dll のソース コードを次に示します。</span><span class="sxs-lookup"><span data-stu-id="31137-179">The following is the source code for UtilityLib.dll:</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 <span data-ttu-id="31137-180">**署名のないアセンブリ**</span><span class="sxs-lookup"><span data-stu-id="31137-180">**Unsigned assemblies**</span></span>  
  
 <span data-ttu-id="31137-181">次の例のソース コードを提供する、`Friend2`アセンブリ。</span><span class="sxs-lookup"><span data-stu-id="31137-181">The following example provides the source code for the `Friend2` assembly.</span></span> <span data-ttu-id="31137-182">場合は、コマンドラインから c# でコンパイルする必要がありますを使用することに注意してください、 **/out**コンパイラ スイッチ、コンパイラが外部参照に連結すると、フレンド アセンブリの名前が使用できるようにします。</span><span class="sxs-lookup"><span data-stu-id="31137-182">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllInternalsVisible">
      <MemberSignature Language="C#" Value="public bool AllInternalsVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllInternalsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property AllInternalsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllInternalsVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllInternalsVisible : bool with get, set" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31137-183">このプロパティは実装されていません。</span><span class="sxs-lookup"><span data-stu-id="31137-183">This property is not implemented.</span></span></summary>
        <value><span data-ttu-id="31137-184">このプロパティは値を返しません。</span><span class="sxs-lookup"><span data-stu-id="31137-184">This property does not return a value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public string AssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssemblyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyName : string" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31137-185"><see langword="internal" /> キーワードを使用してマークされている型と型のメンバーをすべて参照できるようにする、フレンド アセンブリの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="31137-185">Gets the name of the friend assembly to which all types and type members that are marked with the <see langword="internal" /> keyword are to be made visible.</span></span></summary>
        <value><span data-ttu-id="31137-186">フレンド アセンブリの名前を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="31137-186">A string that represents the name of the friend assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31137-187">使用する方法についての詳細、<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>属性を次のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="31137-187">For more information about how to use the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute, see the following topics:</span></span>  
  
-   [<span data-ttu-id="31137-188">フレンド アセンブリ (C++)</span><span class="sxs-lookup"><span data-stu-id="31137-188">Friend Assemblies (C++)</span></span>](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [<span data-ttu-id="31137-189">フレンド アセンブリ</span><span class="sxs-lookup"><span data-stu-id="31137-189">Friend Assemblies</span></span>](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>