<Type Name="ContractHandle" FullName="System.AddIn.Pipeline.ContractHandle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5565bfb6f9f3ce8255c0ca1ca8bf3a4c0c2e3bdc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30359676" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ContractHandle : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContractHandle extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.ContractHandle" />
  <TypeSignature Language="VB.NET" Value="Public Class ContractHandle&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContractHandle : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="4a5c2-101">アドインの有効期間を制御するメソッドを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a5c2-101">Provides methods that control the lifetime of an add-in.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a5c2-102">アドイン モデルでは、アプリケーション ドメイン間、およびプロセス間の通信には、アドインの機能を提供するためは、それらを解放するガベージ コレクターを使用できません。</span><span class="sxs-lookup"><span data-stu-id="4a5c2-102">Because the add-in model provides the ability for add-ins to communicate between application domains and between processes, it cannot rely on the garbage collector to reclaim them.</span></span> <span data-ttu-id="4a5c2-103">このクラスは、そのコントラクトの有効期間トークンを取得することによって、アドインのメカニズムをカウントの参照を提供します。</span><span class="sxs-lookup"><span data-stu-id="4a5c2-103">This class provides a reference counting mechanism for the add-in by obtaining a lifetime token to its contract.</span></span>  
  
 <span data-ttu-id="4a5c2-104">ときに、<xref:System.AddIn.Pipeline.ContractHandle>オブジェクトが構築された、呼び出し、<xref:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken%2A>コンス トラクターに渡されるコントラクトのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="4a5c2-104">When a <xref:System.AddIn.Pipeline.ContractHandle> object is constructed, it calls the <xref:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken%2A> method on the contract that is passed to the constructor.</span></span> <span data-ttu-id="4a5c2-105">ときに、<xref:System.AddIn.Pipeline.ContractHandle>呼び出し、オブジェクトが破棄されるか、終了、<xref:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken%2A>コントラクトでの保留中の削除がされたコントラクトのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="4a5c2-105">When the <xref:System.AddIn.Pipeline.ContractHandle> object is disposed or finalized, it calls the <xref:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken%2A> method on the contract, which removes its hold on the contract.</span></span>  
  
 <span data-ttu-id="4a5c2-106">アダプターは、コントラクトを実装します。</span><span class="sxs-lookup"><span data-stu-id="4a5c2-106">Adapters implement the contract.</span></span> <span data-ttu-id="4a5c2-107"><xref:System.AddIn.Pipeline.ContractHandle>クラスがパイプラインの開発者が適合しているコントラクトの有効期間を管理するのに役立つ、コントラクトのビューへのアダプターで使用するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="4a5c2-107">The <xref:System.AddIn.Pipeline.ContractHandle> class is designed to be used in a contract-to-view adapter to help pipeline developers manage the lifetime of the contract that is being adapted.</span></span> <span data-ttu-id="4a5c2-108">通常、このクラスのインスタンスは、アダプター クラスの構築時にインスタンス化され、アダプターのインスタンスのフィールドに格納されます。</span><span class="sxs-lookup"><span data-stu-id="4a5c2-108">Typically, an instance of this class is instantiated during the construction of the adapter class and is stored in an instance field of the adapter.</span></span> <span data-ttu-id="4a5c2-109">アダプター クラスは、ガベージ コレクトされたときに、<xref:System.AddIn.Pipeline.ContractHandle>オブジェクトが収集される場合も、<xref:System.AddIn.Pipeline.ContractHandle>オブジェクトは、契約の有効期間トークンを取り消します。</span><span class="sxs-lookup"><span data-stu-id="4a5c2-109">When the adapter class is garbage-collected, the <xref:System.AddIn.Pipeline.ContractHandle> object will also be collected and the <xref:System.AddIn.Pipeline.ContractHandle> object will revoke the lifetime token on the contract.</span></span>  
  
 <span data-ttu-id="4a5c2-110">ビューからコントラクトのアダプターを継承することをお勧め、<xref:System.AddIn.Pipeline.ContractBase>クラスです。</span><span class="sxs-lookup"><span data-stu-id="4a5c2-110">It is recommended that your view-to-contract adapters inherit from the <xref:System.AddIn.Pipeline.ContractBase> class.</span></span> <span data-ttu-id="4a5c2-111">メンバーの既定の実装を使用することができますし、 <xref:System.AddIn.Contract.IContract>、つまり、特定のコントラクトのメンバーのみを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a5c2-111">You can then use a default implementation for the members of <xref:System.AddIn.Contract.IContract>, which means you need to implement only the members of your specific contract.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a5c2-112">次の例では、コントラクトのビューへのアダプターで側アドイン パイプラインの有効期間のトークンのハンドルを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="4a5c2-112">The following example shows how to set the lifetime token handle in a contract-to-view adapter on the add-in side of a pipeline.</span></span>  
  
 [!code-csharp[AddinP2HostSideAdapters#2](~/samples/snippets/csharp/VS_Snippets_CLR/AddInP2HostSideAdapters/cs/Calc2ContractToViewHostSideAdapter.cs#2)]
 [!code-vb[AddinP2HostSideAdapters#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInP2HostSideAdapters/vb/Calc2ContractToViewHostSideAdapter.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContractHandle (System.AddIn.Contract.IContract contract);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.AddIn.Contract.IContract contract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.#ctor(System.AddIn.Contract.IContract)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contract As IContract)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContractHandle(System::AddIn::Contract::IContract ^ contract);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Contract.IContract" />
      </Parameters>
      <Docs>
        <param name="contract">
          <span data-ttu-id="4a5c2-113">パイプラインで使用されるコントラクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a5c2-113">The contract to use in the pipeline.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a5c2-114">
            <see cref="T:System.AddIn.Pipeline.ContractHandle" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a5c2-114">Initializes a new instance of the <see cref="T:System.AddIn.Pipeline.ContractHandle" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a5c2-115">
            <paramref name="contract" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a5c2-115">
              <paramref name="contract" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AppDomainOwner">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.IContract AppDomainOwner (AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.IContract AppDomainOwner(class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AppDomainOwner (domain As AppDomain) As IContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Contract::IContract ^ AppDomainOwner(AppDomain ^ domain);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="4a5c2-116">チェックするアプリケーション ドメイン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a5c2-116">The application domain to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a5c2-117">アプリケーション ドメインが作成されたときに、アドイン側アダプターのインスタンスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a5c2-117">Gets the instance of the add-in-side adapter when the application domain was created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a5c2-118">アプリケーション ドメインの所有者を表す <see cref="T:System.AddIn.Contract.IContract" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a5c2-118">An <see cref="T:System.AddIn.Contract.IContract" /> object that represents the owner of the application domain.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a5c2-119">アドイン側アダプターは、入力<xref:System.AddIn.Contract.IContract>です。</span><span class="sxs-lookup"><span data-stu-id="4a5c2-119">The add-in-side adapters are typed as <xref:System.AddIn.Contract.IContract>.</span></span>  
  
 <span data-ttu-id="4a5c2-120">場合は、アプリケーション ドメインは、ユーザーが既に作成されました、所有者はありません。</span><span class="sxs-lookup"><span data-stu-id="4a5c2-120">If the application domain was previously created by a user, there is no owner.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a5c2-121">
            <paramref name="domain" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a5c2-121">
              <paramref name="domain" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Contract">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.IContract Contract { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AddIn.Contract.IContract Contract" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Pipeline.ContractHandle.Contract" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contract As IContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Contract::IContract ^ Contract { System::AddIn::Contract::IContract ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a5c2-122">パイプラインで使用されるコントラクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a5c2-122">Gets the contract used by a pipeline.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a5c2-123">
            <see cref="T:System.AddIn.Contract.IContract" /> から派生するコントラクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a5c2-123">The contract, which is derived from <see cref="T:System.AddIn.Contract.IContract" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractOwnsAppDomain">
      <MemberSignature Language="C#" Value="public static bool ContractOwnsAppDomain (System.AddIn.Contract.IContract contract, AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContractOwnsAppDomain(class System.AddIn.Contract.IContract contract, class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(System.AddIn.Contract.IContract,System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractOwnsAppDomain (contract As IContract, domain As AppDomain) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContractOwnsAppDomain(System::AddIn::Contract::IContract ^ contract, AppDomain ^ domain);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Contract.IContract" />
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="contract">
          <span data-ttu-id="4a5c2-124">チェックするコントラクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a5c2-124">The contract to check.</span>
          </span>
        </param>
        <param name="domain">
          <span data-ttu-id="4a5c2-125">チェックするアプリケーション ドメイン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a5c2-125">The application domain to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a5c2-126">アプリケーション ドメインが指定したコントラクトによって所有されているかどうかを確認します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a5c2-126">Determines whether an application domain is owned by the specified contract.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a5c2-127">コントラクトがアプリケーション ドメインを所有している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a5c2-127">
              <see langword="true" /> if the contract owns the application domain; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a5c2-128">
            <paramref name="contract" /> または <paramref name="domain" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a5c2-128">
              <paramref name="contract" /> or <paramref name="domain" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a5c2-129">コントラクトの有効期間トークンを破棄します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a5c2-129">Revokes the lifetime token on a contract.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a5c2-130">入力に関係なく、コントラクトの有効期間トークンを破棄します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a5c2-130">Revokes the lifetime token on a contract, regardless of input.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="4a5c2-131">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a5c2-131">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a5c2-132">入力に関係なくコントラクトの有効期間トークンを破棄し、オプションでマネージ リソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a5c2-132">Revokes the lifetime token on the contract regardless of input and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ContractHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ContractHandle ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a5c2-133">
            <see cref="T:System.AddIn.Pipeline.ContractHandle" /> インスタンスと関連付けられたリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a5c2-133">Releases the resources associated with the <see cref="T:System.AddIn.Pipeline.ContractHandle" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a5c2-134">このメソッドは、<xref:System.Object.Finalize%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="4a5c2-134">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4a5c2-135">アプリケーション コードではこのメソッドを呼び出す必要がありますいません。オブジェクトの<xref:System.AddIn.Pipeline.ContractHandle.Finalize%2A>への呼び出しによって、ガベージ コレクターによって終了処理が無効になっていない限り、ガベージ コレクション中にメソッドが自動的に起動、<xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4a5c2-135">Application code should not call this method; an object's <xref:System.AddIn.Pipeline.ContractHandle.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4a5c2-136">ガベージ コレクターによって呼び出されると、このメソッドを呼び出す、<xref:System.AddIn.Pipeline.ContractHandle.Dispose%28System.Boolean%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4a5c2-136">When called by the garbage collector, this method calls the <xref:System.AddIn.Pipeline.ContractHandle.Dispose%28System.Boolean%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>