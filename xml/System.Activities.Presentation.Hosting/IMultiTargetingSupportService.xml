<Type Name="IMultiTargetingSupportService" FullName="System.Activities.Presentation.Hosting.IMultiTargetingSupportService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b12eb6687768cbaf8cf1257245a6655d5f196f04" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36653718" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IMultiTargetingSupportService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMultiTargetingSupportService" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Hosting.IMultiTargetingSupportService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMultiTargetingSupportService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMultiTargetingSupportService" />
  <TypeSignature Language="F#" Value="type IMultiTargetingSupportService = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0e555-101">Windows ワークフロー デザイナー ホストのマルチ ターゲットを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0e555-101">Provides multi-targeting for Windows Workflow Designer hosts.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e555-102">*マルチ ターゲット*ターゲットに対応する読み込まれたアセンブリの正しいバージョンを見つけることができるは[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]バージョンでは、現在のワークフロー プロジェクトの[!INCLUDE[vs2010](~/includes/vs2010-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="0e555-102">*Multi-targeting* is the ability to find the right version of the loaded assembly that corresponds to the target [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] version of the current workflow project in [!INCLUDE[vs2010](~/includes/vs2010-md.md)].</span></span>  
  
 <span data-ttu-id="0e555-103">このインターフェイスは、[!INCLUDE[wf1](~/includes/wf1-md.md)] ホスト アプリケーション内で複数バージョン対応方式で [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] アセンブリを解決するために、[!INCLUDE[vs2010](~/includes/vs2010-md.md)] デザイナー コンポーネントによって内部的に実装および使用されます。</span><span class="sxs-lookup"><span data-stu-id="0e555-103">This interface is implemented and used internally by [!INCLUDE[wf1](~/includes/wf1-md.md)] designer components to resolve [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] assemblies in a multi-targeting aware fashion within the [!INCLUDE[vs2010](~/includes/vs2010-md.md)] hosting application.</span></span> <span data-ttu-id="0e555-104">[!INCLUDE[wf1](~/includes/wf1-md.md)]デザイナー コンポーネントが追加のアセンブリが、編集を動的に読み込む必要がある場合にのみ、このインターフェイスの実装を使用`AppDomain`です。</span><span class="sxs-lookup"><span data-stu-id="0e555-104">The [!INCLUDE[wf1](~/includes/wf1-md.md)] designer components use the implementation of this interface only when additional assemblies need to be loaded dynamically into the editing `AppDomain`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetReflectionAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetReflectionAssembly (System.Reflection.AssemblyName targetAssemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetReflectionAssembly(class System.Reflection.AssemblyName targetAssemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReflectionAssembly (targetAssemblyName As AssemblyName) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ GetReflectionAssembly(System::Reflection::AssemblyName ^ targetAssemblyName);" />
      <MemberSignature Language="F#" Value="abstract member GetReflectionAssembly : System.Reflection.AssemblyName -&gt; System.Reflection.Assembly" Usage="iMultiTargetingSupportService.GetReflectionAssembly targetAssemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetAssemblyName" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="targetAssemblyName">
          <span data-ttu-id="0e555-105">アセンブリ名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e555-105">The assembly name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e555-106">現在読み込まれているアセンブリのうち、指定されたアセンブリ名を持つアセンブリを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e555-106">Returns the currently loaded assembly given the assembly name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0e555-107">現在読み込まれているアセンブリのうち、指定されたアセンブリ名を持つアセンブリ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e555-107">The currently loaded assembly given the assembly name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeType">
      <MemberSignature Language="C#" Value="public Type GetRuntimeType (Type reflectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetRuntimeType(class System.Type reflectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeType (reflectionType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetRuntimeType(Type ^ reflectionType);" />
      <MemberSignature Language="F#" Value="abstract member GetRuntimeType : Type -&gt; Type" Usage="iMultiTargetingSupportService.GetRuntimeType reflectionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reflectionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="reflectionType">
          <span data-ttu-id="0e555-108">ランタイム型を取得する型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e555-108">The type to get the runtime type of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e555-109">指定された型に対応するランタイム型を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e555-109">Gets the runtime type that corresponds to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0e555-110">指定された型に対応するランタイム型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e555-110">The runtime type that corresponds to the specified type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedType">
      <MemberSignature Language="C#" Value="public bool IsSupportedType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSupportedType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSupportedType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsSupportedType : Type -&gt; bool" Usage="iMultiTargetingSupportService.IsSupportedType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0e555-111">検査対象の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e555-111">The type to inspect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e555-112">指定された型がサポートされているかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e555-112">Returns a value that indicates whether the specified type is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0e555-113">指定した型がサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e555-113">
              <see langword="true" /> if the specified type is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>