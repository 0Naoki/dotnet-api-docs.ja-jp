<Type Name="IDocumentPersistenceService" FullName="System.Activities.Presentation.Hosting.IDocumentPersistenceService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="afd87ed728b69f8b9ee3087897a1bb883ec117d4" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36721828" /></Metadata><TypeSignature Language="C#" Value="public interface IDocumentPersistenceService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDocumentPersistenceService" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Hosting.IDocumentPersistenceService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDocumentPersistenceService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDocumentPersistenceService" />
  <TypeSignature Language="F#" Value="type IDocumentPersistenceService = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="44de8-101">ドキュメントを永続化する機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="44de8-101">Provides the functionality to persist a document.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44de8-102">このインターフェイスを実装すると、異なるシリアル化形式または保存形式を指定できます。</span><span class="sxs-lookup"><span data-stu-id="44de8-102">An implementation of this interface allows you to specify a different serialization or storage format.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush (object documentRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush(object documentRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.IDocumentPersistenceService.Flush(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush (documentRoot As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush(System::Object ^ documentRoot);" />
      <MemberSignature Language="F#" Value="abstract member Flush : obj -&gt; unit" Usage="iDocumentPersistenceService.Flush documentRoot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentRoot" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="documentRoot"><span data-ttu-id="44de8-103">Web サイトのルート ディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="44de8-103">The root directory for a Web site.</span></span></param>
        <summary><span data-ttu-id="44de8-104">派生クラスで実装された場合、指定したドキュメントをディスクに保存して、メモリ バッファーをクリアします。</span><span class="sxs-lookup"><span data-stu-id="44de8-104">When implemented by a derived class, saves the specified document to disk and clears the memory buffer.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public object Load (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Load(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.IDocumentPersistenceService.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Load (fileName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Load(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="abstract member Load : string -&gt; obj" Usage="iDocumentPersistenceService.Load fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="44de8-105">読み込むドキュメント。</span><span class="sxs-lookup"><span data-stu-id="44de8-105">The document to load.</span></span></param>
        <summary><span data-ttu-id="44de8-106">派生クラスで実装された場合、指定した保存済みドキュメントをメモリに配置して処理できるようにします。</span><span class="sxs-lookup"><span data-stu-id="44de8-106">When implemented by a derived class, places the specified stored document into memory for processing.</span></span></summary>
        <returns><span data-ttu-id="44de8-107">読み込まれたドキュメントを格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44de8-107">An object that contains the loaded document.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnModelChanged">
      <MemberSignature Language="C#" Value="public void OnModelChanged (object documentRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnModelChanged(object documentRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.IDocumentPersistenceService.OnModelChanged(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnModelChanged (documentRoot As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnModelChanged(System::Object ^ documentRoot);" />
      <MemberSignature Language="F#" Value="abstract member OnModelChanged : obj -&gt; unit" Usage="iDocumentPersistenceService.OnModelChanged documentRoot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentRoot" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="documentRoot"><span data-ttu-id="44de8-108">Web サイトのルート ディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="44de8-108">The root directory for a Web site.</span></span></param>
        <summary><span data-ttu-id="44de8-109">派生クラスで実装された場合、設計中のワークフロー モデルに対する変更内容を統合する処理を開始します。</span><span class="sxs-lookup"><span data-stu-id="44de8-109">When implemented by a derived class, starts the process of incorporating changes to the workflow model that is being designed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>