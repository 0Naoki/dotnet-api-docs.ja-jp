<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PrintQueueStream.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57ae1a990e368d1e9d571a481b437ea60c7603ffa.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7ae1a990e368d1e9d571a481b437ea60c7603ffa</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Printing.PrintQueueStream">
          <source>A stream that represents a spooled print job in a print queue.</source>
          <target state="translated">印刷キューにスプールされた印刷ジョブを表すストリーム。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintQueueStream">
          <source>Use this class to write device specific information to a spool file that is not automatically included by the <ph id="ph1">[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)]</ph> spooler.</source>
          <target state="translated">このクラスを使用して、によって自動的に含まれていないスプール ファイルにデバイス固有の情報を書き込む、<ph id="ph1">[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)]</ph>スプーラーです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintQueueStream">
          <source>Of course, you need to know whether the spool file is <ph id="ph1">[!INCLUDE[TLA#tla_emf](~/includes/tlasharptla-emf-md.md)]</ph> or <ph id="ph2">[!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]</ph>.</source>
          <target state="translated">もちろん、操作のスプール ファイルかどうかを把握する必要があります<ph id="ph1">[!INCLUDE[TLA#tla_emf](~/includes/tlasharptla-emf-md.md)]</ph>または<ph id="ph2">[!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintQueueStream">
          <source>If you prefer working with a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array, you can also use two of the overloads of the <ph id="ph2">&lt;xref:System.Printing.PrintQueue.AddJob%2A&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Printing.PrintSystemJobInfo.JobStream%2A&gt;</ph> property to write to the spool file.</source>
          <target state="translated">操作する場合、<ph id="ph1">&lt;xref:System.Byte&gt;</ph>配列を使用することも 2 つのオーバー ロードの<ph id="ph2">&lt;xref:System.Printing.PrintQueue.AddJob%2A&gt;</ph>メソッドおよび<ph id="ph3">&lt;xref:System.Printing.PrintSystemJobInfo.JobStream%2A&gt;</ph>操作のスプール ファイルに書き込むプロパティです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintQueueStream">
          <source>Classes within the <ph id="ph1">&lt;xref:System.Printing&gt;</ph> namespace are not supported for use within a Windows service or ASP.NET application or service.</source>
          <target state="translated">クラス内で、 <ph id="ph1">&lt;xref:System.Printing&gt;</ph> Windows サービスや ASP.NET アプリケーションまたはサービス内で使用する名前空間はサポートされていません。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintQueueStream">
          <source>Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.</source>
          <target state="translated">パフォーマンスと実行時の例外をサービス低下のいずれかのようなアプリケーションからこれらのクラスを使用しようと、予期しない問題が生じる可能性があります。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintQueueStream">
          <source>If you want to print from a Windows Forms application, see the <ph id="ph1">&lt;xref:System.Drawing.Printing&gt;</ph> namespace.</source>
          <target state="translated">Windows フォーム アプリケーションから印刷する場合を参照してください、<ph id="ph1">&lt;xref:System.Drawing.Printing&gt;</ph>名前空間。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Printing.PrintQueueStream">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueStream" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueStream" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueue" /&gt;</ph> that hosts the print job that provides the content of the stream.</source>
          <target state="translated">ストリームのコンテンツを提供する印刷ジョブをホストする <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String)">
          <source>The name of the print job that provides the content of the stream.</source>
          <target state="translated">ストリームのコンテンツを提供する印刷ジョブの名前。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueStream" /&gt;</ph> class for the specified print job that is hosted in the specified <ph id="ph2">&lt;see cref="T:System.Printing.PrintQueue" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueStream" /&gt;</ph> でホストされている、指定した印刷ジョブの <ph id="ph2">&lt;see cref="T:System.Printing.PrintQueue" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueue" /&gt;</ph> that hosts the print job that provides the content of the stream.</source>
          <target state="translated">ストリームのコンテンツを提供する印刷ジョブをホストする <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean)">
          <source>The name of the print job that provides the content of the stream.</source>
          <target state="translated">ストリームのコンテンツを提供する印刷ジョブの名前。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to commit data in the <ph id="ph2">&lt;see cref="T:System.Printing.PrintQueueStream" /&gt;</ph> when the <ph id="ph3">&lt;see cref="M:System.Printing.PrintQueueStream.Close" /&gt;</ph> method is called; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph3">&lt;see cref="M:System.Printing.PrintQueueStream.Close" /&gt;</ph> メソッドが呼び出されたときに <ph id="ph2">&lt;see cref="T:System.Printing.PrintQueueStream" /&gt;</ph> 内のデータをコミットする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueStream" /&gt;</ph> class for the specified print job that is hosted in the specified <ph id="ph2">&lt;see cref="T:System.Printing.PrintQueue" /&gt;</ph>, with an indication of whether data in the <ph id="ph3">&lt;see cref="T:System.Printing.PrintQueueStream" /&gt;</ph> should be committed when the stream is closed.</source>
          <target state="translated">ストリームが閉じたときに <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueStream" /&gt;</ph> 内のデータをコミットする必要があるかどうかを示す情報を使用して、指定した <ph id="ph2">&lt;see cref="T:System.Printing.PrintQueue" /&gt;</ph> でホストされている、指定した印刷ジョブの <ph id="ph3">&lt;see cref="T:System.Printing.PrintQueueStream" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean,System.Printing.PrintTicket)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueue" /&gt;</ph> that hosts the print job that provides the content of the stream.</source>
          <target state="translated">ストリームのコンテンツを提供する印刷ジョブをホストする <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean,System.Printing.PrintTicket)">
          <source>The name of the print job that provides the content of the stream.</source>
          <target state="translated">ストリームのコンテンツを提供する印刷ジョブの名前。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean,System.Printing.PrintTicket)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to commit data in the <ph id="ph2">&lt;see cref="T:System.Printing.PrintQueueStream" /&gt;</ph> when the <ph id="ph3">&lt;see cref="M:System.Printing.PrintQueueStream.Close" /&gt;</ph> method is called; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph3">&lt;see cref="M:System.Printing.PrintQueueStream.Close" /&gt;</ph> メソッドが呼び出されたときに <ph id="ph2">&lt;see cref="T:System.Printing.PrintQueueStream" /&gt;</ph> 内のデータをコミットする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean,System.Printing.PrintTicket)">
          <source>The settings of the print job.</source>
          <target state="translated">印刷ジョブの設定。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean,System.Printing.PrintTicket)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueStream" /&gt;</ph> class for the specified print job that is hosted in the specified <ph id="ph2">&lt;see cref="T:System.Printing.PrintQueue" /&gt;</ph>, with the specified settings and an indication of whether data in the <ph id="ph3">&lt;see cref="T:System.Printing.PrintQueueStream" /&gt;</ph> should be committed when the stream is closed.</source>
          <target state="translated">ストリームが閉じたときに <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueStream" /&gt;</ph> 内のデータをコミットする必要があるかどうかを示す情報および指定した設定を使用して、指定した <ph id="ph2">&lt;see cref="T:System.Printing.PrintQueue" /&gt;</ph> でホストされている、指定した印刷ジョブの <ph id="ph3">&lt;see cref="T:System.Printing.PrintQueueStream" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The buffer from which to write data.</source>
          <target state="translated">データの書き込み元のバッファー。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The byte offset in the buffer from which to begin writing.</source>
          <target state="translated">書き込みの開始位置を示すバッファー内のバイト オフセット。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">書き込む最大バイト数。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An asynchronous callback, which is called when the writing operation is complete.</source>
          <target state="translated">書き込み操作の完了時に呼び出される非同期コールバック。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-provided object that distinguishes this asynchronous writing request from other requests.</source>
          <target state="translated">この非同期書き込み要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous write operation.</source>
          <target state="translated">非同期の書き込み操作を開始します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that represents the asynchronous write, which might still be pending.</source>
          <target state="translated">非同期の書き込みを表す <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。保留状態になっている場合もあります。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Printing.PrintQueueStream.CanRead">
          <source>Gets a value that indicates whether the stream supports reading.</source>
          <target state="translated">ストリームで読み取りがサポートされているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Printing.PrintQueueStream.CanRead">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if reading is supported; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">読み取りがサポートされている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Printing.PrintQueueStream.CanSeek">
          <source>Gets a value that indicates whether the stream supports seeking, which is moving the read/write position to a new position in the stream.</source>
          <target state="translated">ストリームが、読み取り/書き込み位置をストリーム内の新しい位置に移動するシークをサポートするかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Printing.PrintQueueStream.CanSeek">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if seeking is supported; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">シークがサポートされている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Printing.PrintQueueStream.CanWrite">
          <source>Gets a value that indicates whether the stream supports writing.</source>
          <target state="translated">ストリームで書き込みがサポートされているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Printing.PrintQueueStream.CanWrite">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if writing is supported; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">書き込みがサポートされている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.Close">
          <source>Closes the stream and releases any resources, such as sockets and file handles, that are associated with it.</source>
          <target state="translated">ストリームを閉じて、これに関連付けられているソケットやファイル ハンドルなどのリソースをすべて解放します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources that are used by the <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueStream" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueStream" /&gt;</ph> によって使用されているアンマネージ リソースを解放します。オプションでマネージ リソースも解放できます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueStream.Dispose(System.Boolean)">
          <source>This method is called by the <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueStream.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the unnamed Boolean parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> プロテクト呼び出します<ph id="ph2">`Dispose(Boolean)`</ph>に設定された名前のないブール値パラメーターを持つメソッド<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with the unnamed Boolean parameter set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 呼び出す<ph id="ph2">`Dispose`</ph>無名のブール型パラメーターを設定して<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueStream.Dispose(System.Boolean)">
          <source>When the unnamed Boolean parameter is <ph id="ph1">`true`</ph>, this method releases all resources that are held by any managed objects that this <ph id="ph2">&lt;xref:System.Printing.PrintQueueStream&gt;</ph> references.</source>
          <target state="translated">無名のブール型パラメーターがの場合<ph id="ph1">`true`</ph>、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<ph id="ph2">&lt;xref:System.Printing.PrintQueueStream&gt;</ph>参照します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueStream.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">このメソッドは、参照される各オブジェクトの <ph id="ph1">`Dispose()`</ph> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> は、他のオブジェクトから複数回呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueStream.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that were previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">オーバーライドする場合<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>で事前に呼び出したが破棄されたオブジェクトを参照しないように注意、<ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueStream.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">実装する方法の詳細についての<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>Dispose メソッドの実装<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueStream.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">詳細については<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>と<bpt id="p2">[</bpt>Finalize メソッドをオーバーライドする<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.EndWrite(System.IAsyncResult)">
          <source>A reference to the pending asynchronous I/O request.</source>
          <target state="translated">保留状態の非同期 I/O 要求への参照。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.EndWrite(System.IAsyncResult)">
          <source>Ends an asynchronous write operation.</source>
          <target state="translated">非同期書き込み操作を終了します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueStream.EndWrite(System.IAsyncResult)">
          <source><ph id="ph1">&lt;xref:System.Printing.PrintQueueStream.EndWrite%2A&gt;</ph> must be called exactly once on every <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> that is returned from a call to <ph id="ph3">&lt;xref:System.Printing.PrintQueueStream.BeginWrite%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Printing.PrintQueueStream.EndWrite%2A&gt;</ph> 1 回だけ呼び出す必要がありますすべて<ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph>への呼び出しから返された<ph id="ph3">&lt;xref:System.Printing.PrintQueueStream.BeginWrite%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.Finalize">
          <source>Enables a <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueStream" /&gt;</ph> to attempt to free resources and perform other cleanup operations before the <ph id="ph2">&lt;see cref="T:System.Printing.PrintQueueStream" /&gt;</ph> is reclaimed by garbage collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueStream" /&gt;</ph> がガベージ コレクションにより収集される前に、この <ph id="ph2">&lt;see cref="T:System.Printing.PrintQueueStream" /&gt;</ph> がリソースを解放し、その他のクリーンアップ操作を実行できるようにします。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueStream.Finalize">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph> をオーバーライドします。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueStream.Finalize">
          <source>Application code should not call this method; an object's <ph id="ph1">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A&gt;</ph> method.</source>
          <target state="translated">アプリケーション コードではこのメソッドを呼び出す必要がありますいません。オブジェクトの<ph id="ph1">`Finalize`</ph>への呼び出しによって、ガベージ コレクターによって終了処理が無効になっていない限り、ガベージ コレクション中にメソッドが自動的に起動、<ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueStream.Finalize">
          <source>For more information, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Finalize メソッドおよびデストラクター<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>、<bpt id="p2">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>、および<bpt id="p3">[</bpt>Finalize メソッドをオーバーライドする<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.Flush">
          <source>Clears all the buffers for this stream and writes any buffered data to the underlying device.</source>
          <target state="translated">このストリームに対応するすべてのバッファーをクリアし、バッファー内のデータを基になるデバイスに書き込みます。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.HandlePackagingProgressEvent(System.Object,System.Windows.Xps.Packaging.PackagingProgressEventArgs)">
          <source>The source of the event.</source>
          <target state="translated">イベントのソース。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.HandlePackagingProgressEvent(System.Object,System.Windows.Xps.Packaging.PackagingProgressEventArgs)">
          <source>The event data.</source>
          <target state="translated">イベントのデータ。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.HandlePackagingProgressEvent(System.Object,System.Windows.Xps.Packaging.PackagingProgressEventArgs)">
          <source>Enables the <ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueStream" /&gt;</ph> to respond to the packaging progress by handling the <ph id="ph2">&lt;see cref="E:System.Windows.Xps.Serialization.XpsPackagingPolicy.PackagingProgressEvent" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Printing.PrintQueueStream" /&gt;</ph> を処理して、<ph id="ph2">&lt;see cref="E:System.Windows.Xps.Serialization.XpsPackagingPolicy.PackagingProgressEvent" /&gt;</ph> がパッケージ化の進行状況に応答できるようにします。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Printing.PrintQueueStream.JobIdentifier">
          <source>Gets the ID number of the print job.</source>
          <target state="translated">印刷ジョブの ID 番号を取得します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Printing.PrintQueueStream.JobIdentifier">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that represents an ID number.</source>
          <target state="translated">ID 番号を表す <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Printing.PrintQueueStream.Length">
          <source>Gets the length of the stream in bytes.</source>
          <target state="translated">バイト単位のストリーム長を取得します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Printing.PrintQueueStream.Length">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> that represents the length of the stream in bytes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>バイト単位のストリームの長さを表すです。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.Printing.PrintQueueStream.Position">
          <source>Gets or sets the current read/write position in the stream.</source>
          <target state="translated">ストリーム内の現在の読み取り/書き込み位置を取得または設定します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Printing.PrintQueueStream.Position">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> that represents the current position in the stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>ストリーム内の現在位置を表すです。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>An array of bytes.</source>
          <target state="translated">バイト配列。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The zero-based byte offset in the buffer where you want to begin storing the data that is read from the stream.</source>
          <target state="translated">ストリームから読み取ったデータの格納を開始する位置を示す、バッファー内の 0 から始まるバイト オフセット。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to be read from the stream.</source>
          <target state="translated">ストリームから読み取る最大バイト数。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Reads a sequence of bytes from the stream and advances the read/write position in the stream by the number of bytes that were read.</source>
          <target state="translated">ストリームからバイト シーケンスを読み取り、読み取ったバイト数だけストリーム内の読み取り/書き込み位置を進めます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that holds the total number of bytes that are read into the buffer.</source>
          <target state="translated">バッファーへ読み込まれる合計バイト数を保持する <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The return value can be less than the number of requested bytes if that many bytes are not currently available; or the number can be zero (0) if the read/write position is at the end of the stream.</source>
          <target state="translated">戻り値である要求されたバイト数よりも少ない場合はバイト数は現在利用できません。または、読み取り/書き込み位置がストリームの末尾にある場合はゼロ (0) に指定できます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>When this method returns, <ph id="ph1">`buffer`</ph> contains the specified byte array and the values between <ph id="ph2">`offset`</ph> and (offset + count - 1) are replaced by the bytes that are read from the source.</source>
          <target state="translated">このメソッドが戻るとき<ph id="ph1">`buffer`</ph>指定したバイト配列との間で値を含む<ph id="ph2">`offset`</ph>から (オフセット + 数 - 1) は、ソースから読み取られるバイトに置き換えられます。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>A byte offset that is relative to the origin parameter.</source>
          <target state="translated">元のパラメーターを基準とするバイト オフセット。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph> that indicates the reference point that is used to obtain the new position.</source>
          <target state="translated">新しい位置を取得するために使用する参照ポイントを示す <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph> 型の値。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Sets the read/write position within the stream.</source>
          <target state="translated">ストリーム内の読み取り/書き込みの位置を設定します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> that represents the new read/write position.</source>
          <target state="translated">新しい読み取り/書き込み位置を表す <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.SetLength(System.Int64)">
          <source>The needed length, in bytes, of the current stream.</source>
          <target state="translated">現在のストリームのバイト単位の必要な長さ。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.SetLength(System.Int64)">
          <source>Sets the length of the stream.</source>
          <target state="translated">ストリームの長さを設定します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueStream.SetLength(System.Int64)">
          <source>A stream must support both writing and seeking for <ph id="ph1">&lt;xref:System.Printing.PrintQueueStream.SetLength%2A&gt;</ph> to work.</source>
          <target state="translated">ストリームは書き込みとシークの両方をサポートする必要があります<ph id="ph1">&lt;xref:System.Printing.PrintQueueStream.SetLength%2A&gt;</ph>動作をします。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintQueueStream.SetLength(System.Int64)">
          <source>Use the <ph id="ph1">&lt;xref:System.Printing.PrintQueueStream.CanWrite%2A&gt;</ph> property to determine whether the current instance supports writing, and use the <ph id="ph2">&lt;xref:System.Printing.PrintQueueStream.CanSeek%2A&gt;</ph> property to determine whether seeking is supported.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Printing.PrintQueueStream.CanWrite%2A&gt;</ph>プロパティを現在のインスタンスがドキュメントの作成をサポートするかどうかを確認し、使用、<ph id="ph2">&lt;xref:System.Printing.PrintQueueStream.CanSeek%2A&gt;</ph>シークがサポートされているかどうかを決定するプロパティです。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>An array of bytes from which to copy to the stream.</source>
          <target state="translated">ストリームにコピーするバイトの配列。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The zero-based byte offset in the <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> where you want to begin copying bytes to the stream.</source>
          <target state="translated">ストリームへのバイトのコピーを開始する位置を示す、<bpt id="p1">&lt;c&gt;</bpt>バッファー<ept id="p1">&lt;/c&gt;</ept>内の 0 から始まるバイト オフセット。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to write to the stream.</source>
          <target state="translated">ストリームに書き込むバイト数。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintQueueStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Writes a sequence of bytes to the stream and advances the read/write position in the stream by the number of bytes that are written.</source>
          <target state="translated">ストリームにバイトのシーケンスを書き込み、書き込んだバイト数だけストリーム内の読み取り/書き込み位置を進めます。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>