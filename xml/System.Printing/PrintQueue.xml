<Type Name="PrintQueue" FullName="System.Printing.PrintQueue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0e01fd1fd35502612ecaece32fd8133fcb4e4593" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55348906" /></Metadata><TypeSignature Language="C#" Value="public class PrintQueue : System.Printing.PrintSystemObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PrintQueue extends System.Printing.PrintSystemObject" />
  <TypeSignature Language="DocId" Value="T:System.Printing.PrintQueue" />
  <TypeSignature Language="VB.NET" Value="Public Class PrintQueue&#xA;Inherits PrintSystemObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintQueue : System::Printing::PrintSystemObject" />
  <TypeSignature Language="F#" Value="type PrintQueue = class&#xA;    inherit PrintSystemObject" />
  <AssemblyInfo>
    <AssemblyName>System.Printing</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Printing.PrintSystemObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5d805-101">プリンターと印刷ジョブを管理します。</span><span class="sxs-lookup"><span data-stu-id="5d805-101">Manages printers and print jobs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-102">一部のプロパティ、<xref:System.Printing.PrintQueue>コンピューターで実行される印刷キュー ユーティリティの特性を表すオブジェクトですが、機能や、プリンター自体の状態を表す他のユーザー。</span><span class="sxs-lookup"><span data-stu-id="5d805-102">Some properties of the <xref:System.Printing.PrintQueue> object represent characteristics of the print queue utility that runs on the computer, but others represent features or states of the printer itself.</span></span> <span data-ttu-id="5d805-103">たとえば、 <xref:System.Printing.PrintQueue.NumberOfJobs%2A> 、印刷キューの特性が<xref:System.Printing.PrintQueue.Location%2A>プリンターのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="5d805-103">For example, <xref:System.Printing.PrintQueue.NumberOfJobs%2A> is a characteristic of the print queue, but <xref:System.Printing.PrintQueue.Location%2A> is a property of the printer.</span></span> <span data-ttu-id="5d805-104">ユーザーの介入が必要があるかどうかなど、プリンターのプロパティの多くの方法で渡される必要があります、 <xref:System.Printing.PrintQueue.Refresh%2A> 、プリンター自体からのメソッドを<xref:System.Printing.PrintQueue>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5d805-104">Many of the properties of the printer, such as whether it needs user attention, need to be passed, by means of the <xref:System.Printing.PrintQueue.Refresh%2A> method, from the printer itself to the <xref:System.Printing.PrintQueue> object.</span></span> <span data-ttu-id="5d805-105">これは、対応するプロパティの前に行う必要があります (<xref:System.Printing.PrintQueue.NeedUserIntervention%2A>) は、プログラムによって読み取られます。</span><span class="sxs-lookup"><span data-stu-id="5d805-105">This should be done before the corresponding property (<xref:System.Printing.PrintQueue.NeedUserIntervention%2A>) is read by your program.</span></span> <span data-ttu-id="5d805-106">同様に、プログラムがの 1 つまたは複数のプロパティの値を変更すると、<xref:System.Printing.PrintQueue>オブジェクト、コンピューター上、実際の印刷キュー ユーティリティに変更を記述する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5d805-106">Similarly, when your program changes the values of one or more properties of a <xref:System.Printing.PrintQueue> object, the change must be written to the actual print queue utility on the computer.</span></span> <span data-ttu-id="5d805-107">そのためには、<xref:System.Printing.PrintQueue.Commit%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="5d805-107">Do this with the <xref:System.Printing.PrintQueue.Commit%2A> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="5d805-108">クラス内で、 <xref:System.Printing> Windows サービスまたは ASP.NET アプリケーションまたはサービス内で使用する名前空間はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="5d805-108">Classes within the <xref:System.Printing> namespace are not supported for use within a Windows service or ASP.NET application or service.</span></span> <span data-ttu-id="5d805-109">内でこれらのアプリケーションの種類のいずれかからこれらのクラスを使用すると、予期しない問題が発生する可能性があります、低下などのサービスのパフォーマンスと実行時の例外。</span><span class="sxs-lookup"><span data-stu-id="5d805-109">Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.</span></span>  
  
 <span data-ttu-id="5d805-110">Windows フォーム アプリケーションから印刷する場合を参照してください、<xref:System.Drawing.Printing>名前空間。</span><span class="sxs-lookup"><span data-stu-id="5d805-110">If you want to print from a Windows Forms application, see the <xref:System.Drawing.Printing> namespace.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Printing.PrintServer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5d805-111"><see cref="T:System.Printing.PrintQueue" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5d805-111">Initializes a new instance of the <see cref="T:System.Printing.PrintQueue" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="5d805-112">印刷キューをホストするプリント サーバー。</span><span class="sxs-lookup"><span data-stu-id="5d805-112">The print server to host the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="5d805-113">印刷キューの名前。</span><span class="sxs-lookup"><span data-stu-id="5d805-113">The name of the print queue.</span></span></param>
        <summary><span data-ttu-id="5d805-114">指定した <see cref="T:System.Printing.PrintQueue" /> とキュー名を使用して、<see cref="T:System.Printing.PrintServer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5d805-114">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" /> and queue name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-115"><xref:System.Printing.PrintQueue> コンス トラクターを含まない、<xref:System.Printing.PrintSystemDesiredAccess>パラメーターの既定値は<xref:System.Printing.PrintSystemDesiredAccess.UsePrinter>アクセスします。</span><span class="sxs-lookup"><span data-stu-id="5d805-115"><xref:System.Printing.PrintQueue> constructors that do not include a <xref:System.Printing.PrintSystemDesiredAccess> parameter default to <xref:System.Printing.PrintSystemDesiredAccess.UsePrinter> access.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, int printSchemaVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, int32 printSchemaVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, int printSchemaVersion);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * int -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, printSchemaVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="printSchemaVersion" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="5d805-116">印刷キューをホストするプリント サーバー。</span><span class="sxs-lookup"><span data-stu-id="5d805-116">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="5d805-117">印刷キューの名前。</span><span class="sxs-lookup"><span data-stu-id="5d805-117">The name of the print queue.</span></span></param>
        <param name="printSchemaVersion"><span data-ttu-id="5d805-118">使用する印刷スキーマのバージョン。</span><span class="sxs-lookup"><span data-stu-id="5d805-118">The version of the Print Schema to use.</span></span></param>
        <summary><span data-ttu-id="5d805-119">指定した <see cref="T:System.Printing.PrintQueue" />、キュー名、および印刷スキーマのバージョンを使用して、<see cref="T:System.Printing.PrintServer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5d805-119">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, and print schema version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-120"><xref:System.Printing.PrintQueue> コンス トラクターを含まない、<xref:System.Printing.PrintSystemDesiredAccess>パラメーターの既定値は<xref:System.Printing.PrintSystemDesiredAccess.UsePrinter>アクセスします。</span><span class="sxs-lookup"><span data-stu-id="5d805-120"><xref:System.Printing.PrintQueue> constructors that do not include a <xref:System.Printing.PrintSystemDesiredAccess> parameter  default to <xref:System.Printing.PrintSystemDesiredAccess.UsePrinter> access.</span></span>  
  
 <span data-ttu-id="5d805-121">[印刷スキーマ](https://go.microsoft.com/fwlink/?LinkId=186397)Windows Vista と共にリリースされたバージョンが「1」です。</span><span class="sxs-lookup"><span data-stu-id="5d805-121">The [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) version released with Windows Vista is "1".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, System.Printing.PrintQueueIndexedProperty[] propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, valuetype System.Printing.PrintQueueIndexedProperty[] propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, cli::array &lt;System::Printing::PrintQueueIndexedProperty&gt; ^ propertyFilter);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * System.Printing.PrintQueueIndexedProperty[] -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, propertyFilter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="propertyFilter" Type="System.Printing.PrintQueueIndexedProperty[]" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="5d805-122">印刷キューをホストするプリント サーバー。</span><span class="sxs-lookup"><span data-stu-id="5d805-122">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="5d805-123">印刷キューの名前。</span><span class="sxs-lookup"><span data-stu-id="5d805-123">The name of the print queue.</span></span></param>
        <param name="propertyFilter"><span data-ttu-id="5d805-124">初期化するプロパティ値を指定する <see cref="T:System.Printing.PrintQueueIndexedProperty" /> 値の配列。</span><span class="sxs-lookup"><span data-stu-id="5d805-124">An array of <see cref="T:System.Printing.PrintQueueIndexedProperty" /> values that specifies the property values to initialize.</span></span></param>
        <summary><span data-ttu-id="5d805-125">指定した <see cref="T:System.Printing.PrintQueue" />、キュー名、および初期化する <see cref="T:System.Printing.PrintServer" /> 値の配列を使用して、<see cref="T:System.Printing.PrintQueueIndexedProperty" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5d805-125">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, and array of <see cref="T:System.Printing.PrintQueueIndexedProperty" /> values to initialize.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-126"><xref:System.Printing.PrintQueue> コンス トラクターを含まない、<xref:System.Printing.PrintSystemDesiredAccess>パラメーターの既定値は<xref:System.Printing.PrintSystemDesiredAccess.UsePrinter>アクセスします。</span><span class="sxs-lookup"><span data-stu-id="5d805-126"><xref:System.Printing.PrintQueue> constructors that do not include a <xref:System.Printing.PrintSystemDesiredAccess> parameter default to <xref:System.Printing.PrintSystemDesiredAccess.UsePrinter> access.</span></span>  
  
 <span data-ttu-id="5d805-127">持つコンス トラクターの使用、`propertyFilter`パラメーターのパフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="5d805-127">The use of a constructor with the `propertyFilter` parameter improves performance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, System.Printing.PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, valuetype System.Printing.PrintSystemDesiredAccess desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintSystemDesiredAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, System::Printing::PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * System.Printing.PrintSystemDesiredAccess -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, desiredAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="desiredAccess" Type="System.Printing.PrintSystemDesiredAccess" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="5d805-128">印刷キューをホストするプリント サーバー。</span><span class="sxs-lookup"><span data-stu-id="5d805-128">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="5d805-129">印刷キューの名前。</span><span class="sxs-lookup"><span data-stu-id="5d805-129">The name of the print queue.</span></span></param>
        <param name="desiredAccess"><span data-ttu-id="5d805-130">プログラムで必要な、印刷キューへのアクセスの種類を指定する、いずれかの <see cref="T:System.Printing.PrintSystemDesiredAccess" /> 値。</span><span class="sxs-lookup"><span data-stu-id="5d805-130">One of the <see cref="T:System.Printing.PrintSystemDesiredAccess" /> values that specifies the type of access to the print queue that your program needs.</span></span></param>
        <summary><span data-ttu-id="5d805-131">指定した <see cref="T:System.Printing.PrintQueue" />、キュー名、および必要なアクセスを使用して、<see cref="T:System.Printing.PrintServer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5d805-131">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, and desired access.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="5d805-132"><paramref name="desiredAccess" /> は、<see cref="T:System.Printing.PrintServer" /> オブジェクトだけに適用できる値で、<see cref="T:System.Printing.PrintQueue" /> には適用できません。</span><span class="sxs-lookup"><span data-stu-id="5d805-132"><paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintServer" /> object, not a <see cref="T:System.Printing.PrintQueue" /> object.</span></span> <span data-ttu-id="5d805-133">たとえば、<see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" /> のようにします。</span><span class="sxs-lookup"><span data-stu-id="5d805-133">For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, string[] propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, string[] propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, cli::array &lt;System::String ^&gt; ^ propertyFilter);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * string[] -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, propertyFilter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="propertyFilter" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="5d805-134">印刷キューをホストするプリント サーバー。</span><span class="sxs-lookup"><span data-stu-id="5d805-134">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="5d805-135">印刷キューの名前。</span><span class="sxs-lookup"><span data-stu-id="5d805-135">The name of the print queue.</span></span></param>
        <param name="propertyFilter"><span data-ttu-id="5d805-136">初期化するプロパティ名の配列。</span><span class="sxs-lookup"><span data-stu-id="5d805-136">An array of the names of properties to initialize.</span></span></param>
        <summary><span data-ttu-id="5d805-137">指定した <see cref="T:System.Printing.PrintQueue" />、キュー名、および初期化するプロパティ名の配列を使用して、<see cref="T:System.Printing.PrintServer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5d805-137">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, and array of property names to initialize.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-138"><xref:System.Printing.PrintQueue> コンス トラクターを含まない、<xref:System.Printing.PrintSystemDesiredAccess>パラメーターの既定値は<xref:System.Printing.PrintSystemDesiredAccess.UsePrinter>アクセスします。</span><span class="sxs-lookup"><span data-stu-id="5d805-138"><xref:System.Printing.PrintQueue> constructors that do not include a <xref:System.Printing.PrintSystemDesiredAccess> parameter default to <xref:System.Printing.PrintSystemDesiredAccess.UsePrinter> access.</span></span>  
  
 <span data-ttu-id="5d805-139">持つコンス トラクターの使用、`propertyFilter`パラメーターのパフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="5d805-139">The use of a constructor with the `propertyFilter` parameter improves performance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, int printSchemaVersion, System.Printing.PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, int32 printSchemaVersion, valuetype System.Printing.PrintSystemDesiredAccess desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32,System.Printing.PrintSystemDesiredAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, int printSchemaVersion, System::Printing::PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * int * System.Printing.PrintSystemDesiredAccess -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, printSchemaVersion, desiredAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="printSchemaVersion" Type="System.Int32" />
        <Parameter Name="desiredAccess" Type="System.Printing.PrintSystemDesiredAccess" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="5d805-140">印刷キューをホストするプリント サーバー。</span><span class="sxs-lookup"><span data-stu-id="5d805-140">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="5d805-141">印刷キューの名前。</span><span class="sxs-lookup"><span data-stu-id="5d805-141">The name of the print queue.</span></span></param>
        <param name="printSchemaVersion"><span data-ttu-id="5d805-142">使用する印刷スキーマのバージョン。</span><span class="sxs-lookup"><span data-stu-id="5d805-142">The version of the Print Schema to use.</span></span></param>
        <param name="desiredAccess"><span data-ttu-id="5d805-143">プログラムで必要な、印刷キューへのアクセスの種類を指定する、いずれかの <see cref="T:System.Printing.PrintSystemDesiredAccess" /> 値。</span><span class="sxs-lookup"><span data-stu-id="5d805-143">One of the <see cref="T:System.Printing.PrintSystemDesiredAccess" /> values that specifies the type of access to the print queue that your program needs.</span></span></param>
        <summary><span data-ttu-id="5d805-144">指定した <see cref="T:System.Printing.PrintQueue" />、キュー名、印刷スキーマのバージョン、および必要なアクセスを使用して、<see cref="T:System.Printing.PrintServer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5d805-144">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, print schema version, and desired access.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-145">[印刷スキーマ](https://go.microsoft.com/fwlink/?LinkId=186397)Windows Vista と共にリリースされたバージョンが「1」です。</span><span class="sxs-lookup"><span data-stu-id="5d805-145">The [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) version released with Windows Vista is "1".</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="5d805-146"><paramref name="desiredAccess" /> は、<see cref="T:System.Printing.PrintServer" /> オブジェクトだけに適用できる値で、<see cref="T:System.Printing.PrintQueue" /> には適用できません。</span><span class="sxs-lookup"><span data-stu-id="5d805-146"><paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintServer" /> object, not a <see cref="T:System.Printing.PrintQueue" /> object.</span></span> <span data-ttu-id="5d805-147">たとえば、<see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" /> のようにします。</span><span class="sxs-lookup"><span data-stu-id="5d805-147">For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, System.Printing.PrintQueueIndexedProperty[] propertyFilter, System.Printing.PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, valuetype System.Printing.PrintQueueIndexedProperty[] propertyFilter, valuetype System.Printing.PrintSystemDesiredAccess desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[],System.Printing.PrintSystemDesiredAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, cli::array &lt;System::Printing::PrintQueueIndexedProperty&gt; ^ propertyFilter, System::Printing::PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * System.Printing.PrintQueueIndexedProperty[] * System.Printing.PrintSystemDesiredAccess -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, propertyFilter, desiredAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="propertyFilter" Type="System.Printing.PrintQueueIndexedProperty[]" />
        <Parameter Name="desiredAccess" Type="System.Printing.PrintSystemDesiredAccess" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="5d805-148">印刷キューをホストするプリント サーバー。</span><span class="sxs-lookup"><span data-stu-id="5d805-148">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="5d805-149">印刷キューの名前。</span><span class="sxs-lookup"><span data-stu-id="5d805-149">The name of the print queue.</span></span></param>
        <param name="propertyFilter"><span data-ttu-id="5d805-150">初期化するプロパティを指定する <see cref="T:System.Printing.PrintQueueIndexedProperty" /> 値の配列。</span><span class="sxs-lookup"><span data-stu-id="5d805-150">An array of <see cref="T:System.Printing.PrintQueueIndexedProperty" /> values that specifies the properties to initialize.</span></span></param>
        <param name="desiredAccess"><span data-ttu-id="5d805-151">プログラムで必要な、印刷キューへのアクセスの種類を指定する、いずれかの <see cref="T:System.Printing.PrintSystemDesiredAccess" /> 値。</span><span class="sxs-lookup"><span data-stu-id="5d805-151">One of the <see cref="T:System.Printing.PrintSystemDesiredAccess" /> values that specifies the type of access to the print queue that your program needs.</span></span></param>
        <summary><span data-ttu-id="5d805-152">指定した <see cref="T:System.Printing.PrintQueue" />、キュー名、初期化する <see cref="T:System.Printing.PrintServer" /> 値の配列、および必要なアクセスを使用して、<see cref="T:System.Printing.PrintQueueIndexedProperty" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5d805-152">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class with the specified <see cref="T:System.Printing.PrintServer" />, queue name, array of <see cref="T:System.Printing.PrintQueueIndexedProperty" /> values to initialize, and desired access.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-153">持つコンス トラクターの使用、`propertyFilter`パラメーターのパフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="5d805-153">The use of a constructor with the `propertyFilter` parameter improves performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="5d805-154"><paramref name="desiredAccess" /> は、<see cref="T:System.Printing.PrintServer" /> オブジェクトだけに適用できる値で、<see cref="T:System.Printing.PrintQueue" /> には適用できません。</span><span class="sxs-lookup"><span data-stu-id="5d805-154"><paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintServer" /> object, not a <see cref="T:System.Printing.PrintQueue" /> object.</span></span> <span data-ttu-id="5d805-155">たとえば、<see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" /> のようにします。</span><span class="sxs-lookup"><span data-stu-id="5d805-155">For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, string[] propertyFilter, System.Printing.PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, string[] propertyFilter, valuetype System.Printing.PrintSystemDesiredAccess desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[],System.Printing.PrintSystemDesiredAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, cli::array &lt;System::String ^&gt; ^ propertyFilter, System::Printing::PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * string[] * System.Printing.PrintSystemDesiredAccess -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, propertyFilter, desiredAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="propertyFilter" Type="System.String[]" />
        <Parameter Name="desiredAccess" Type="System.Printing.PrintSystemDesiredAccess" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="5d805-156">印刷キューをホストするプリント サーバー。</span><span class="sxs-lookup"><span data-stu-id="5d805-156">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="5d805-157">印刷キューの名前。</span><span class="sxs-lookup"><span data-stu-id="5d805-157">The name of the print queue.</span></span></param>
        <param name="propertyFilter"><span data-ttu-id="5d805-158">初期化するプロパティ名の配列。</span><span class="sxs-lookup"><span data-stu-id="5d805-158">An array of the names of properties to initialize.</span></span></param>
        <param name="desiredAccess"><span data-ttu-id="5d805-159">プログラムで必要な、印刷キューへのアクセスの種類を指定する、いずれかの <see cref="T:System.Printing.PrintSystemDesiredAccess" /> 値。</span><span class="sxs-lookup"><span data-stu-id="5d805-159">One of the <see cref="T:System.Printing.PrintSystemDesiredAccess" /> values that specifies the type of access to the print queue that your program needs.</span></span></param>
        <summary><span data-ttu-id="5d805-160">指定した <see cref="T:System.Printing.PrintQueue" />、キュー名、プロパティ フィルター、および必要なアクセスを使用して、<see cref="T:System.Printing.PrintServer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5d805-160">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, property filter, and desired access.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-161">持つコンス トラクターの使用、`propertyFilter`パラメーターのパフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="5d805-161">The use of a constructor with the `propertyFilter` parameter improves performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="5d805-162"><paramref name="desiredAccess" /> は、<see cref="T:System.Printing.PrintServer" /> オブジェクトだけに適用できる値で、<see cref="T:System.Printing.PrintQueue" /> には適用できません。</span><span class="sxs-lookup"><span data-stu-id="5d805-162"><paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintServer" /> object, not a <see cref="T:System.Printing.PrintQueue" /> object.</span></span> <span data-ttu-id="5d805-163">たとえば、<see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" /> のようにします。</span><span class="sxs-lookup"><span data-stu-id="5d805-163">For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddJob">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5d805-164">キューに新しい印刷ジョブを挿入します。</span><span class="sxs-lookup"><span data-stu-id="5d805-164">Inserts a new print job into the queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-165">キューが一時停止またはエラー状態のジョブの印刷キューの先頭に達したとき、場合を除き、これは印刷関数。</span><span class="sxs-lookup"><span data-stu-id="5d805-165">Unless the queue is paused or in an error state, the job prints when it reaches the top of the queue, so this is a printing function.</span></span>  
  
 <span data-ttu-id="5d805-166">その他の方法で印刷する[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]含める、<xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType>メソッドで、または、ダイアログ ボックスを開き、多なしで使用することができます<xref:System.Windows.Xps.XpsDocumentWriter.Write%2A>と<xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A>のメソッド、 <xref:System.Windows.Xps.XpsDocumentWriter>。</span><span class="sxs-lookup"><span data-stu-id="5d805-166">Other ways to print in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] include the <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType> method, which can be used with or without opening the dialog, and the many <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> and <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> methods of the <xref:System.Windows.Xps.XpsDocumentWriter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddJob">
      <MemberSignature Language="C#" Value="public System.Printing.PrintSystemJobInfo AddJob ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintSystemJobInfo AddJob() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.AddJob" />
      <MemberSignature Language="VB.NET" Value="Public Function AddJob () As PrintSystemJobInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintSystemJobInfo ^ AddJob();" />
      <MemberSignature Language="F#" Value="member this.AddJob : unit -&gt; System.Printing.PrintSystemJobInfo" Usage="printQueue.AddJob " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5d805-167"><see cref="T:System.Byte" /> 配列の内容を持つ新しい (汎用的な名前が付いた) 印刷ジョブをキューに挿入します。</span><span class="sxs-lookup"><span data-stu-id="5d805-167">Inserts a new (generically named) print job, whose content is a <see cref="T:System.Byte" /> array, into the queue.</span></span></summary>
        <returns><span data-ttu-id="5d805-168">印刷ジョブおよびそのステータスを表す <see cref="T:System.Printing.PrintSystemJobInfo" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-168">A <see cref="T:System.Printing.PrintSystemJobInfo" /> that represents the print job and its status.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-169">このメソッドを使用して、によって自動的に含まれていないスプール ファイルをデバイス固有の情報を書き込む、[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)]スプーラーです。</span><span class="sxs-lookup"><span data-stu-id="5d805-169">Use this method to write device specific information, to a spool file, that is not automatically included by the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] spooler.</span></span> <span data-ttu-id="5d805-170">もちろん、スプール ファイルかどうかを把握する必要があります[!INCLUDE[TLA#tla_emf](~/includes/tlasharptla-emf-md.md)]または[!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="5d805-170">Of course, you need to know whether the spool file is [!INCLUDE[TLA#tla_emf](~/includes/tlasharptla-emf-md.md)] or [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)].</span></span> <span data-ttu-id="5d805-171">使用する場合、 <xref:System.IO.Stream> [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)]、使用することができます、<xref:System.Printing.PrintQueueStream>このメソッドではなくクラス。</span><span class="sxs-lookup"><span data-stu-id="5d805-171">If you prefer to work with the <xref:System.IO.Stream> [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)], you can use the <xref:System.Printing.PrintQueueStream> class instead of this method.</span></span>  
  
 <span data-ttu-id="5d805-172">後に、<xref:System.Printing.PrintQueue.AddJob%2A>するを記述する必要がありますメソッドが呼び出された、<xref:System.Byte>配列を<xref:System.Printing.PrintSystemJobInfo.JobStream%2A>のプロパティ、<xref:System.Printing.PrintSystemJobInfo>によって返される<xref:System.Printing.PrintQueue.AddJob%2A>または印刷ジョブは作成されません。</span><span class="sxs-lookup"><span data-stu-id="5d805-172">After the <xref:System.Printing.PrintQueue.AddJob%2A> method has been called, you must write a <xref:System.Byte> array to the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> property of the <xref:System.Printing.PrintSystemJobInfo> that is returned by <xref:System.Printing.PrintQueue.AddJob%2A> or no print job is created.</span></span> <span data-ttu-id="5d805-173">この配列は、プリンターが動作して、一時停止されていない場合に印刷する内容です。</span><span class="sxs-lookup"><span data-stu-id="5d805-173">This array is what prints if the printer is working and is not paused.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="5d805-174">場合、<xref:System.Printing.PrintSystemJobInfo.JobStream%2A>でが閉じられていない<xref:System.IO.Stream.Close%2A>のスレッドが終了する前に<xref:System.Printing.PrintQueue.AddJob%2A>が呼び出される、<xref:System.InvalidOperationException>スプーラー スレッドに制御を取得できないため、そのスレッドが終了したときにスローされる、<xref:System.IO.Stream>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5d805-174">If the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> is not closed with <xref:System.IO.Stream.Close%2A> before the end of the thread in which <xref:System.Printing.PrintQueue.AddJob%2A> is called, then an <xref:System.InvalidOperationException> is thrown when that thread ends because the spooler thread cannot gain control over the <xref:System.IO.Stream> object.</span></span>  
  
 <span data-ttu-id="5d805-175">印刷キューの[!INCLUDE[TLA#tla_gui](~/includes/tlasharptla-gui-md.md)]ジョブが「System のドキュメントを印刷する」の名前。</span><span class="sxs-lookup"><span data-stu-id="5d805-175">In the print queue's [!INCLUDE[TLA#tla_gui](~/includes/tlasharptla-gui-md.md)], the job has the name "Print System Document".</span></span> <span data-ttu-id="5d805-176">ジョブに、別の名前を付けてを使用して、<xref:System.Printing.PrintQueue.AddJob%28System.String%29>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="5d805-176">To give the job a different name, use the <xref:System.Printing.PrintQueue.AddJob%28System.String%29> overload.</span></span>  
  
 <span data-ttu-id="5d805-177">その他の方法で印刷する[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]含める、<xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType>メソッドで、または、ダイアログ ボックスを開き、多なしで使用することができます<xref:System.Windows.Xps.XpsDocumentWriter.Write%2A>と<xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A>のメソッド、 <xref:System.Windows.Xps.XpsDocumentWriter>。</span><span class="sxs-lookup"><span data-stu-id="5d805-177">Other ways to print in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] include the <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType> method, which can be used with or without opening the dialog, and the many <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> and <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> methods of the <xref:System.Windows.Xps.XpsDocumentWriter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-178">次の例は、使用する方法を示します<xref:System.Printing.PrintQueue.AddJob>を送信する、<xref:System.Byte>印刷キューへの配列。</span><span class="sxs-lookup"><span data-stu-id="5d805-178">The following example shows how to use <xref:System.Printing.PrintQueue.AddJob> to send a <xref:System.Byte> array to a print queue.</span></span> <span data-ttu-id="5d805-179">このコードは、検出したり、プレーン テキストを印刷するプリンターでのみ機能します。</span><span class="sxs-lookup"><span data-stu-id="5d805-179">This code only works with printers that can detect and print plain text.</span></span> <span data-ttu-id="5d805-180">その一部ことはできません。</span><span class="sxs-lookup"><span data-stu-id="5d805-180">Some of them cannot.</span></span>  
  
 [!code-csharp[WriteToSpoolFile#AddUnnamedJob](~/samples/snippets/csharp/VS_Snippets_Wpf/WriteToSpoolFile/CSharp/Program.cs#addunnamedjob)]
 [!code-vb[WriteToSpoolFile#AddUnnamedJob](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WriteToSpoolFile/visualbasic/program.vb#addunnamedjob)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddJob">
      <MemberSignature Language="C#" Value="public System.Printing.PrintSystemJobInfo AddJob (string jobName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintSystemJobInfo AddJob(string jobName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.AddJob(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddJob (jobName As String) As PrintSystemJobInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintSystemJobInfo ^ AddJob(System::String ^ jobName);" />
      <MemberSignature Language="F#" Value="member this.AddJob : string -&gt; System.Printing.PrintSystemJobInfo" Usage="printQueue.AddJob jobName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="jobName"><span data-ttu-id="5d805-181">印刷ジョブの名前。</span><span class="sxs-lookup"><span data-stu-id="5d805-181">The name of the print job.</span></span></param>
        <summary><span data-ttu-id="5d805-182"><see cref="T:System.Byte" /> 配列の内容を持つ新しい印刷ジョブをキューに挿入します。</span><span class="sxs-lookup"><span data-stu-id="5d805-182">Inserts a new print job, whose content is a <see cref="T:System.Byte" /> array, into the queue.</span></span></summary>
        <returns><span data-ttu-id="5d805-183">印刷ジョブおよびそのステータスを表す <see cref="T:System.Printing.PrintSystemJobInfo" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-183">A <see cref="T:System.Printing.PrintSystemJobInfo" /> that represents the print job and its status.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-184">このメソッドを使用して、によって自動的に含まれていないスプール ファイルをデバイス固有の情報を書き込む、[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)]スプーラーです。</span><span class="sxs-lookup"><span data-stu-id="5d805-184">Use this method to write device specific information, to a spool file, that is not automatically included by the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] spooler.</span></span> <span data-ttu-id="5d805-185">もちろん、スプール ファイルかどうかを把握する必要があります[!INCLUDE[TLA#tla_emf](~/includes/tlasharptla-emf-md.md)]または[!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="5d805-185">Of course, you need to know whether the spool file is [!INCLUDE[TLA#tla_emf](~/includes/tlasharptla-emf-md.md)] or [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)].</span></span> <span data-ttu-id="5d805-186">使用する場合、 <xref:System.IO.Stream> [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)]、使用することができます、<xref:System.Printing.PrintQueueStream>このメソッドではなくクラス。</span><span class="sxs-lookup"><span data-stu-id="5d805-186">If you prefer to work with the <xref:System.IO.Stream> [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)], you can use the <xref:System.Printing.PrintQueueStream> class instead of this method.</span></span>  
  
 <span data-ttu-id="5d805-187">後に、<xref:System.Printing.PrintQueue.AddJob%2A>するを記述する必要がありますメソッドが呼び出された、<xref:System.Byte>配列を<xref:System.Printing.PrintSystemJobInfo.JobStream%2A>のプロパティ、<xref:System.Printing.PrintSystemJobInfo>によって返される<xref:System.Printing.PrintQueue.AddJob%2A>または印刷ジョブは作成されません。</span><span class="sxs-lookup"><span data-stu-id="5d805-187">After the <xref:System.Printing.PrintQueue.AddJob%2A> method has been called, you must write a <xref:System.Byte> array to the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> property of the <xref:System.Printing.PrintSystemJobInfo> that is returned by <xref:System.Printing.PrintQueue.AddJob%2A> or no print job is created.</span></span> <span data-ttu-id="5d805-188">この配列は、プリンターが動作して、一時停止されていない場合に印刷する内容です。</span><span class="sxs-lookup"><span data-stu-id="5d805-188">This array is what prints if the printer is working and is not paused.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="5d805-189">場合、<xref:System.Printing.PrintSystemJobInfo.JobStream%2A>でが閉じられていない<xref:System.IO.Stream.Close%2A>のスレッドが終了する前に<xref:System.Printing.PrintQueue.AddJob%2A>が呼び出される、<xref:System.InvalidOperationException>スプーラー スレッドに制御を取得できないため、そのスレッドが終了したときにスローされる、<xref:System.IO.Stream>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5d805-189">If the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> is not closed with <xref:System.IO.Stream.Close%2A> before the end of the thread in which <xref:System.Printing.PrintQueue.AddJob%2A> is called, then an <xref:System.InvalidOperationException> is thrown when that thread ends because the spooler thread cannot gain control over the <xref:System.IO.Stream> object.</span></span>  
  
 <span data-ttu-id="5d805-190">その他の方法で印刷する[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]含める、<xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType>メソッドで、または、ダイアログ ボックスを開き、多なしで使用することができます<xref:System.Windows.Xps.XpsDocumentWriter.Write%2A>と<xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A>のメソッド、 <xref:System.Windows.Xps.XpsDocumentWriter>。</span><span class="sxs-lookup"><span data-stu-id="5d805-190">Other ways to print in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] include the <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType> method, which can be used with or without opening the dialog, and the many <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> and <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> methods of the <xref:System.Windows.Xps.XpsDocumentWriter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-191">次の例は、使用する方法を示します<xref:System.Printing.PrintQueue.AddJob%28System.String%29>にファイルを読み取る、<xref:System.Byte>配列し、配列を印刷キューに送信します。</span><span class="sxs-lookup"><span data-stu-id="5d805-191">The following example shows how to use <xref:System.Printing.PrintQueue.AddJob%28System.String%29> to read a file into a <xref:System.Byte> array and send the array to a print queue.</span></span> <span data-ttu-id="5d805-192">このコードでは、c: ドライブのルートに test.txt をという名前のファイルがあることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="5d805-192">This code assumes that there is a file called test.txt in the root of the C: drive.</span></span> <span data-ttu-id="5d805-193">このコードは、検出したり、プレーン テキストを印刷するプリンターでのみ機能します。</span><span class="sxs-lookup"><span data-stu-id="5d805-193">This code only works with printers that can detect and print plain text.</span></span> <span data-ttu-id="5d805-194">その一部ことはできません。</span><span class="sxs-lookup"><span data-stu-id="5d805-194">Some of them cannot.</span></span>  
  
 [!code-csharp[WriteToSpoolFile#AddNamedJob](~/samples/snippets/csharp/VS_Snippets_Wpf/WriteToSpoolFile/CSharp/Program.cs#addnamedjob)]
 [!code-vb[WriteToSpoolFile#AddNamedJob](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WriteToSpoolFile/visualbasic/program.vb#addnamedjob)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddJob">
      <MemberSignature Language="C#" Value="public System.Printing.PrintSystemJobInfo AddJob (string jobName, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintSystemJobInfo AddJob(string jobName, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.AddJob(System.String,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintSystemJobInfo ^ AddJob(System::String ^ jobName, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="member this.AddJob : string * System.Printing.PrintTicket -&gt; System.Printing.PrintSystemJobInfo" Usage="printQueue.AddJob (jobName, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobName" Type="System.String" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="jobName"><span data-ttu-id="5d805-195">印刷するドキュメントのパスと名前。</span><span class="sxs-lookup"><span data-stu-id="5d805-195">The path and name of the document that is being printed.</span></span></param>
        <param name="printTicket"><span data-ttu-id="5d805-196">印刷ジョブの設定。</span><span class="sxs-lookup"><span data-stu-id="5d805-196">The settings of the print job.</span></span></param>
        <summary><span data-ttu-id="5d805-197">[!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] ドキュメントの新しい印刷ジョブをキューに挿入し、指定した名前と設定を適用します。</span><span class="sxs-lookup"><span data-stu-id="5d805-197">Inserts a new print job for an [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] Document into the queue, and gives it the specified name and settings.</span></span></summary>
        <returns><span data-ttu-id="5d805-198">印刷ジョブおよびそのステータスを表す <see cref="T:System.Printing.PrintSystemJobInfo" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-198">A <see cref="T:System.Printing.PrintSystemJobInfo" /> that represents the print job and its status.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-199">詳細については、「<xref:System.Printing.PrintQueue.AddJob%28System.String%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5d805-199">For more information, see <xref:System.Printing.PrintQueue.AddJob%28System.String%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddJob">
      <MemberSignature Language="C#" Value="public System.Printing.PrintSystemJobInfo AddJob (string jobName, string documentPath, bool fastCopy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintSystemJobInfo AddJob(string jobName, string documentPath, bool fastCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddJob (jobName As String, documentPath As String, fastCopy As Boolean) As PrintSystemJobInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintSystemJobInfo ^ AddJob(System::String ^ jobName, System::String ^ documentPath, bool fastCopy);" />
      <MemberSignature Language="F#" Value="member this.AddJob : string * string * bool -&gt; System.Printing.PrintSystemJobInfo" Usage="printQueue.AddJob (jobName, documentPath, fastCopy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobName" Type="System.String" />
        <Parameter Name="documentPath" Type="System.String" />
        <Parameter Name="fastCopy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="jobName"><span data-ttu-id="5d805-200">印刷ジョブの名前。</span><span class="sxs-lookup"><span data-stu-id="5d805-200">The name of the print job.</span></span></param>
        <param name="documentPath"><span data-ttu-id="5d805-201">印刷するドキュメントのパスと名前。</span><span class="sxs-lookup"><span data-stu-id="5d805-201">The path and name of the document that is being printed.</span></span></param>
        <param name="fastCopy"><span data-ttu-id="5d805-202">ページごとの進行状況のフィードバックを行わず、ファイルが有効な [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] であることを検証せずにすばやくスプールする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-202"><see langword="true" /> to spool quickly without page-by-page progress feedback and without validating that the file is valid [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)]; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="5d805-203">[!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] ドキュメントの新しい印刷ジョブをキューに挿入し、指定した名前を付けて、検証する必要があるかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="5d805-203">Inserts a new print job for an [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] Document into the queue, gives it the specified name, and specifies whether or not it should be validated.</span></span></summary>
        <returns><span data-ttu-id="5d805-204">印刷ジョブおよびそのステータスを表す <see cref="T:System.Printing.PrintSystemJobInfo" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-204">A <see cref="T:System.Printing.PrintSystemJobInfo" /> that represents the print job and its status.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-205">場合`fastCopy`は`true`、プリンターにする必要があります、[印刷の概要](~/docs/framework/wpf/advanced/printing-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="5d805-205">If `fastCopy` is `true`, then the printer must be an [Printing Overview](~/docs/framework/wpf/advanced/printing-overview.md).</span></span> <span data-ttu-id="5d805-206">そうでない場合、<xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29>メソッドが例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="5d805-206">If it is not, the <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29> method throws an exception.</span></span>  
  
 <span data-ttu-id="5d805-207">場合`fastCopy`は`false`、XPSDrv プリンターを使用する必要はなくなります。</span><span class="sxs-lookup"><span data-stu-id="5d805-207">If `fastCopy` is `false`, then it is not necessary to use an XPSDrv printer.</span></span> <span data-ttu-id="5d805-208">[!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)]をキューに追加するファイルは、PCL や Postscript などのプリンターのページ記述言語に変換されます。</span><span class="sxs-lookup"><span data-stu-id="5d805-208">The [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] file being added to the queue is converted to the printer's page description language, such as PCL or Postscript.</span></span> <span data-ttu-id="5d805-209">ただしへの呼び出しは、この種の印刷[!INCLUDE[TLA#tla_com](~/includes/tlasharptla-com-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="5d805-209">However, this kind of printing makes a call to [!INCLUDE[TLA#tla_com](~/includes/tlasharptla-com-md.md)].</span></span> <span data-ttu-id="5d805-210">呼び出し[!INCLUDE[TLA2#tla_com](~/includes/tla2sharptla-com-md.md)]呼び出し元のスレッドは、シングル スレッド アパートメントである必要があります (<xref:System.Threading.ApartmentState.STA>) マルチ スレッド アパートメントではなく (<xref:System.Threading.ApartmentState.MTA>) は、既定で[!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)]2.0 以降。</span><span class="sxs-lookup"><span data-stu-id="5d805-210">The call to [!INCLUDE[TLA2#tla_com](~/includes/tla2sharptla-com-md.md)] requires that the calling thread have a single-threaded apartment (<xref:System.Threading.ApartmentState.STA>) instead of multiple-threaded apartment (<xref:System.Threading.ApartmentState.MTA>) which is the default in [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] 2.0 and later.</span></span> <span data-ttu-id="5d805-211">(詳細については、スレッド、アパートメントの状態、次を参照してください[マネージとアンマネージ スレッド](https://msdn.microsoft.com/library/db425c20-4b2f-4433-bf96-76071c7881e5)、および<xref:System.Threading.ApartmentState>。)。これを行う 2 つの方法はあります。</span><span class="sxs-lookup"><span data-stu-id="5d805-211">(For more on threading and apartment states, see [Managed and Unmanaged Threading](https://msdn.microsoft.com/library/db425c20-4b2f-4433-bf96-76071c7881e5), and <xref:System.Threading.ApartmentState>.) There are two ways of doing this:</span></span>  
  
-   <span data-ttu-id="5d805-212">追加する最も簡単な方法です、 <xref:System.STAThreadAttribute> (つまり、"`[System.STAThreadAttribute()]`") のアプリケーションの最初の行のすぐ上`Main`メソッド (通常は"`static void Main(string[] args)`")。</span><span class="sxs-lookup"><span data-stu-id="5d805-212">The simplest way is to add the <xref:System.STAThreadAttribute> (that is, "`[System.STAThreadAttribute()]`") just above the first line of the application's `Main` method (usually "`static void Main(string[] args)`").</span></span>  
  
-   <span data-ttu-id="5d805-213">必要がある場合、`Main`スレッドのアパートメントの状態になる<xref:System.Threading.ApartmentState.MTA>への呼び出しを収容する<xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29>アパートメント状態が に設定されている別のスレッドで<xref:System.Threading.ApartmentState.STA>で<xref:System.Threading.Thread.SetApartmentState%2A>します。</span><span class="sxs-lookup"><span data-stu-id="5d805-213">If you need your `Main` thread's apartment state to be <xref:System.Threading.ApartmentState.MTA>, you can house the call to <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29> in a separate thread whose apartment state is set to <xref:System.Threading.ApartmentState.STA> with <xref:System.Threading.Thread.SetApartmentState%2A>.</span></span> <span data-ttu-id="5d805-214">次の例では、この 2 つ目の方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-214">The example below illustrates this second technique.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d805-215">適用することはできません、<xref:System.STAThreadAttribute>を除くすべてのメソッドに`Main`を使用することはできませんと<xref:System.Threading.Thread.SetApartmentState%2A>の`Main`スレッド。</span><span class="sxs-lookup"><span data-stu-id="5d805-215">You cannot apply the <xref:System.STAThreadAttribute> to any method except `Main` and you cannot use <xref:System.Threading.Thread.SetApartmentState%2A> for the `Main` thread.</span></span>  
  
 <span data-ttu-id="5d805-216">その他の方法で印刷する[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]含める、<xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType>メソッドで、または、ダイアログ ボックスを開き、多なしで使用することができます<xref:System.Windows.Xps.XpsDocumentWriter.Write%2A>と<xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A>のメソッド、 <xref:System.Windows.Xps.XpsDocumentWriter>。</span><span class="sxs-lookup"><span data-stu-id="5d805-216">Other ways to print in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] include the <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType> method, which can be used with or without opening the dialog, and the many <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> and <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> methods of the <xref:System.Windows.Xps.XpsDocumentWriter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-217">次の例は、使用する方法を示します<xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29>バッチ処理全体を印刷する、[!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]ディレクトリ内のファイル。</span><span class="sxs-lookup"><span data-stu-id="5d805-217">The following example shows how to use <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29> to batch print all the [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] files in a directory.</span></span>  
  
 [!code-csharp[BatchPrintXPSFiles#BatchPrintXPSFiles](~/samples/snippets/csharp/VS_Snippets_Wpf/BatchPrintXPSFiles/CSharp/Program.cs#batchprintxpsfiles)]
 [!code-vb[BatchPrintXPSFiles#BatchPrintXPSFiles](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BatchPrintXPSFiles/visualbasic/program.vb#batchprintxpsfiles)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.ApartmentState" />
        <altmember cref="T:System.STAThreadAttribute" />
        <related type="Article" href="https://msdn.microsoft.com/library/e78b14f1-e487-43cd-9c6d-1a07483f1730"><span data-ttu-id="5d805-218">.NET Framework への COM コンポーネントの公開</span><span class="sxs-lookup"><span data-stu-id="5d805-218">Exposing COM Components to the .NET Framework</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="5d805-219">isxps 適合性ツール</span><span class="sxs-lookup"><span data-stu-id="5d805-219">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddJob">
      <MemberSignature Language="C#" Value="public System.Printing.PrintSystemJobInfo AddJob (string jobName, string documentPath, bool fastCopy, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintSystemJobInfo AddJob(string jobName, string documentPath, bool fastCopy, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintSystemJobInfo ^ AddJob(System::String ^ jobName, System::String ^ documentPath, bool fastCopy, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="member this.AddJob : string * string * bool * System.Printing.PrintTicket -&gt; System.Printing.PrintSystemJobInfo" Usage="printQueue.AddJob (jobName, documentPath, fastCopy, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobName" Type="System.String" />
        <Parameter Name="documentPath" Type="System.String" />
        <Parameter Name="fastCopy" Type="System.Boolean" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="jobName"><span data-ttu-id="5d805-220">印刷するドキュメントのパスと名前。</span><span class="sxs-lookup"><span data-stu-id="5d805-220">The path and name of the document that is being printed.</span></span></param>
        <param name="documentPath"><span data-ttu-id="5d805-221">印刷するドキュメントのパスと名前。</span><span class="sxs-lookup"><span data-stu-id="5d805-221">The path and name of the document that is being printed.</span></span></param>
        <param name="fastCopy"><span data-ttu-id="5d805-222">ページごとの進行状況のフィードバックを行わず、ファイルが有効な [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] であることを検証せずにすばやくスプールする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-222"><see langword="true" /> to spool quickly without page-by-page progress feedback and without validating that the file is valid [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)]; otherwise, <see langword="false" />.</span></span></param>
        <param name="printTicket"><span data-ttu-id="5d805-223">印刷ジョブの設定。</span><span class="sxs-lookup"><span data-stu-id="5d805-223">The settings of the print job.</span></span></param>
        <summary><span data-ttu-id="5d805-224">[!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] ドキュメントの新しい印刷ジョブをキューに挿入し、指定した名前と設定を与え、検証する必要があるかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="5d805-224">Inserts a new print job for an [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] Document into the queue, gives it the specified name and settings, and specifies whether or not it should be validated.</span></span></summary>
        <returns><span data-ttu-id="5d805-225">印刷ジョブおよびそのステータスを表す <see cref="T:System.Printing.PrintSystemJobInfo" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-225">A <see cref="T:System.Printing.PrintSystemJobInfo" /> that represents the print job and its status.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-226">詳細については、「<xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5d805-226">For more information, see <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AveragePagesPerMinute">
      <MemberSignature Language="C#" Value="public virtual int AveragePagesPerMinute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AveragePagesPerMinute" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.AveragePagesPerMinute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AveragePagesPerMinute As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int AveragePagesPerMinute { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AveragePagesPerMinute : int" Usage="System.Printing.PrintQueue.AveragePagesPerMinute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-227">ページ/分で測定されたプリンターの速度を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-227">Gets the speed of the printer measured in pages per minute.</span></span></summary>
        <value><span data-ttu-id="5d805-228">プリンターで 1 分間に印刷されるページ数の平均。</span><span class="sxs-lookup"><span data-stu-id="5d805-228">The average pages printed per minute of the printer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientPrintSchemaVersion">
      <MemberSignature Language="C#" Value="public int ClientPrintSchemaVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ClientPrintSchemaVersion" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.ClientPrintSchemaVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientPrintSchemaVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ClientPrintSchemaVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientPrintSchemaVersion : int" Usage="System.Printing.PrintQueue.ClientPrintSchemaVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-229"><see href="https://docs.microsoft.com/windows/desktop/printdocs/printschema">印刷スキーマ</see>のバージョンを取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-229">Gets the version of the <see href="https://docs.microsoft.com/windows/desktop/printdocs/printschema">Print Schema</see>.</span></span></summary>
        <value><span data-ttu-id="5d805-230">バージョン、[印刷スキーマ](https://go.microsoft.com/fwlink/?LinkId=186397)使用します。</span><span class="sxs-lookup"><span data-stu-id="5d805-230">The version of the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) in use.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-231">[印刷スキーマ](https://go.microsoft.com/fwlink/?LinkId=186397)Windows Vista でリリースされたバージョンは 1 です。</span><span class="sxs-lookup"><span data-stu-id="5d805-231">The [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) version released with Windows Vista is 1.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=186397"><span data-ttu-id="5d805-232">印刷スキーマ</span><span class="sxs-lookup"><span data-stu-id="5d805-232">Print Schema</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public virtual string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.Comment" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Comment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Comment { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Comment : string with get, set" Usage="System.Printing.PrintQueue.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-233">プリンターに関するコメントを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5d805-233">Gets or sets a comment about the printer.</span></span></summary>
        <value><span data-ttu-id="5d805-234">プリンターに関するコメント。</span><span class="sxs-lookup"><span data-stu-id="5d805-234">A comment about the printer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-235">コメントは、Windows プリンターの一覧で、Windows のコモン印刷ダイアログでユーザーに表示されます。</span><span class="sxs-lookup"><span data-stu-id="5d805-235">The comment is visible to users in the Windows printer list and on the Windows common print dialog.</span></span> <span data-ttu-id="5d805-236">プリンターの名前、モデル、または同じの場所に表示されても、場所のプロパティに含まれていない情報を提供できます。たとえば、"のための予約給与午後 3 時と午後 4 時間の部署。"</span><span class="sxs-lookup"><span data-stu-id="5d805-236">It can provide information not contained in the printer's name, model, or location properties, which are also visible in the same places; for example, "Reserved for Payroll Dept. between 3 pm and 4 pm."</span></span> <span data-ttu-id="5d805-237">(、<xref:System.Printing.PrintQueue.Description%2A>プロパティでは、アプリケーションでは、可視化しない限り、ユーザーが表示できない情報を格納することができます)。</span><span class="sxs-lookup"><span data-stu-id="5d805-237">(The <xref:System.Printing.PrintQueue.Description%2A> property enables you to store information that users cannot view unless your application makes it visible.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit();" />
      <MemberSignature Language="F#" Value="override this.Commit : unit -&gt; unit" Usage="printQueue.Commit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5d805-238"><see cref="T:System.Printing.PrintQueue" /> オブジェクトの現在のプロパティをプリント サーバーの実際の印刷キューに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="5d805-238">Writes the current properties of the <see cref="T:System.Printing.PrintQueue" /> object to the actual print queue on the print server.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-239">プログラムがのプロパティに加える変更を<xref:System.Printing.PrintQueue>オブジェクトは実際には反映されません、プログラムが実行されるまで、<xref:System.Printing.PrintQueue.Commit%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="5d805-239">Changes that your program makes to the properties of a <xref:System.Printing.PrintQueue> object do not actually take effect until the program executes the <xref:System.Printing.PrintQueue.Commit%2A> method.</span></span>  
  
 <span data-ttu-id="5d805-240">メソッドである必要があります、<xref:System.Printing.PrintQueue>でオブジェクトを作成する<xref:System.Printing.PrintSystemDesiredAccess.AdministratePrinter>権限。</span><span class="sxs-lookup"><span data-stu-id="5d805-240">The method requires that the <xref:System.Printing.PrintQueue> object be created with <xref:System.Printing.PrintSystemDesiredAccess.AdministratePrinter> rights.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-241">次の例では、2 つの印刷チケットをマージするときにこのメソッドを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-241">The following example shows how to use this method while merging two print tickets.</span></span>  
  
 [!code-csharp[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintTicketManagment/CSharp/printticket.cs#usingmergeandvalidate)]
 [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintTicketManagment/visualbasic/printticket.vb#usingmergeandvalidate)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintSystemException"><span data-ttu-id="5d805-242">いくつかのプロパティをコミットできませんでした。</span><span class="sxs-lookup"><span data-stu-id="5d805-242">Some of the properties could not be committed.</span></span></exception>
        <exception cref="T:System.Printing.PrintCommitAttributesException"><span data-ttu-id="5d805-243">いくつかのプロパティをコミットできませんでした。</span><span class="sxs-lookup"><span data-stu-id="5d805-243">Some of the properties could not be committed.</span></span>  
  
<span data-ttu-id="5d805-244">または</span><span class="sxs-lookup"><span data-stu-id="5d805-244">-or-</span></span> 
<span data-ttu-id="5d805-245"><see cref="T:System.Printing.PrintQueue" /> オブジェクトが、十分な権限で作成されていません。</span><span class="sxs-lookup"><span data-stu-id="5d805-245">The <see cref="T:System.Printing.PrintQueue" /> object was not created with sufficient rights.</span></span></exception>
        <altmember cref="M:System.Printing.PrintQueue.Refresh" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateXpsDocumentWriter">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5d805-246"><see cref="T:System.Windows.Xps.XpsDocumentWriter" /> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="5d805-246">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="5d805-247">isxps 適合性ツール</span><span class="sxs-lookup"><span data-stu-id="5d805-247">isXPS Conformance Tool</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateXpsDocumentWriter">
      <MemberSignature Language="C#" Value="public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (ref System.Printing.PrintDocumentImageableArea documentImageableArea);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter(class System.Printing.PrintDocumentImageableArea&amp; documentImageableArea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateXpsDocumentWriter (ByRef documentImageableArea As PrintDocumentImageableArea) As XpsDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Xps::XpsDocumentWriter ^ CreateXpsDocumentWriter(System::Printing::PrintDocumentImageableArea ^ % documentImageableArea);" />
      <MemberSignature Language="F#" Value="static member CreateXpsDocumentWriter :  -&gt; System.Windows.Xps.XpsDocumentWriter" Usage="System.Printing.PrintQueue.CreateXpsDocumentWriter documentImageableArea" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.XpsDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentImageableArea" Type="System.Printing.PrintDocumentImageableArea" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="documentImageableArea"><span data-ttu-id="5d805-248">デバイスが印刷できるページ領域の寸法を含むオブジェクトへの参照。</span><span class="sxs-lookup"><span data-stu-id="5d805-248">A reference to an object that contains the dimensions of the area of the page on which the device can print.</span></span> <span data-ttu-id="5d805-249">このパラメーターのデータ型にパブリック コンストラクターが存在しないため、このパラメーターは初期化されずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="5d805-249">Since its data type has no public constructor, this parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="5d805-250"><see cref="T:System.Windows.Xps.XpsDocumentWriter" /> オブジェクトを作成し、Windows のコモン印刷ダイアログを開き、イメージ可能領域とメディアのサイズに関する情報を表す <see langword="ref" /> (Visual Basic の場合は <see langword="ByRef" />) パラメーターを返します。</span><span class="sxs-lookup"><span data-stu-id="5d805-250">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object, opens a Windows common print dialog and returns a <see langword="ref" /> (<see langword="ByRef" /> in Visual Basic) parameter that represents information about the imageable area and the dimensions of the media.</span></span></summary>
        <returns><span data-ttu-id="5d805-251">XPS データをストリームに書き込む <see cref="T:System.Windows.Xps.XpsDocumentWriter" /></span><span class="sxs-lookup"><span data-stu-id="5d805-251">An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes XPS data to a stream.</span></span> <span data-ttu-id="5d805-252">この値は、<see langword="null" /> でもかまいません。</span><span class="sxs-lookup"><span data-stu-id="5d805-252">This can be <see langword="null" />.</span></span> <span data-ttu-id="5d805-253">パラメーター <paramref name="documentImageableArea" /> は <see langword="ref" /> (Visual Basic では <see langword="ByRef" />) パラメーターであり、このメソッドで初期化されます。したがって、このパラメーターは 2 番目に返される項目を表します。</span><span class="sxs-lookup"><span data-stu-id="5d805-253">(The parameter <paramref name="documentImageableArea" /> is a <see langword="ref" /> [<see langword="ByRef" /> in Visual Basic] parameter that is initialized by the method, so it represents a second returned item.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-254">多くのプリンターでは、グリップ用紙に各ページの端を余白のインチの四半期にし、プリンターに進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="5d805-254">Many printers need up to a quarter of an inch of unprinted space around the edges of each page to grip the paper and move it through the printer.</span></span> <span data-ttu-id="5d805-255">それ以外の場合トナーは用紙のフロー メカニズムをいきませんが。</span><span class="sxs-lookup"><span data-stu-id="5d805-255">Otherwise toner would foul the paper flow mechanism.</span></span> <span data-ttu-id="5d805-256">出力する領域は、「イメージ可能領域」。</span><span class="sxs-lookup"><span data-stu-id="5d805-256">The area which can be printed is the "imageable area."</span></span>  
  
 <span data-ttu-id="5d805-257">型<xref:System.Printing.PrintDocumentImageableArea>パブリック コンス トラクターがありません。</span><span class="sxs-lookup"><span data-stu-id="5d805-257">The type <xref:System.Printing.PrintDocumentImageableArea> has no public constructor.</span></span> <span data-ttu-id="5d805-258">そのため、変数`documentImageableArea`宣言およびに割り当てられている必要があります`null`のみ、メソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="5d805-258">Hence, the variable `documentImageableArea` must be declared and assigned to `null` and only then passed to the method.</span></span> <span data-ttu-id="5d805-259">このメソッドは、表示、<xref:System.Windows.Controls.PrintDialog>ユーザーからの入力を必要とします。</span><span class="sxs-lookup"><span data-stu-id="5d805-259">This method displays a <xref:System.Windows.Controls.PrintDialog> requiring input from the user.</span></span> <span data-ttu-id="5d805-260">ユーザーがプリンター、用紙のサイズと向きを選択し、ダイアログ ボックスを閉じた後`documentImageableArea`実際のオブジェクトとそのプロパティへのポインターを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5d805-260">After the user has selected a printer, paper size, and orientation and closed the dialog, `documentImageableArea` points to an actual object and its properties are initialized.</span></span>  
  
 <span data-ttu-id="5d805-261">戻り値は、ユーザーは、キャンセルまたはダイアログを閉じる、`null`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-261">If the user cancels or closes the dialog, the return value is `null`.</span></span> <span data-ttu-id="5d805-262">戻り値をチェックする必要が結果として、`null`アプリケーションでします。</span><span class="sxs-lookup"><span data-stu-id="5d805-262">As a consequence, the return value must be checked for `null` by your application.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="5d805-263">isxps 適合性ツール</span><span class="sxs-lookup"><span data-stu-id="5d805-263">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateXpsDocumentWriter">
      <MemberSignature Language="C#" Value="public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (System.Printing.PrintQueue printQueue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter(class System.Printing.PrintQueue printQueue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintQueue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Xps::XpsDocumentWriter ^ CreateXpsDocumentWriter(System::Printing::PrintQueue ^ printQueue);" />
      <MemberSignature Language="F#" Value="static member CreateXpsDocumentWriter : System.Printing.PrintQueue -&gt; System.Windows.Xps.XpsDocumentWriter" Usage="System.Printing.PrintQueue.CreateXpsDocumentWriter printQueue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.XpsDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printQueue" Type="System.Printing.PrintQueue" />
      </Parameters>
      <Docs>
        <param name="printQueue"><span data-ttu-id="5d805-264">XPS ドキュメントを印刷する印刷キュー。</span><span class="sxs-lookup"><span data-stu-id="5d805-264">A print queue to print the XPS document.</span></span></param>
        <summary><span data-ttu-id="5d805-265"><see cref="T:System.Windows.Xps.XpsDocumentWriter" /> オブジェクトを作成し、指定した印刷キューに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="5d805-265">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object and associates it with the specified print queue.</span></span></summary>
        <returns><span data-ttu-id="5d805-266">XPS ストリームに書き込む <see cref="T:System.Windows.Xps.XpsDocumentWriter" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-266">An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes to an XPS stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5d805-267">次の例では、このメソッドを使用して作成する方法を示しています、<xref:System.Windows.Xps.XpsDocumentWriter>します。</span><span class="sxs-lookup"><span data-stu-id="5d805-267">The following example shows how to use this method to create an <xref:System.Windows.Xps.XpsDocumentWriter>.</span></span>  
  
 [!code-csharp[XpsPrint#PrintQueueSnip](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsPrint/CSharp/XpsPrintHelper.cs#printqueuesnip)]
 [!code-vb[XpsPrint#PrintQueueSnip](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsPrint/visualbasic/xpsprinthelper.vb#printqueuesnip)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="5d805-268">isxps 適合性ツール</span><span class="sxs-lookup"><span data-stu-id="5d805-268">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateXpsDocumentWriter">
      <MemberSignature Language="C#" Value="public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (ref double width, ref double height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter(float64&amp; width, float64&amp; height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Double@,System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateXpsDocumentWriter (ByRef width As Double, ByRef height As Double) As XpsDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Xps::XpsDocumentWriter ^ CreateXpsDocumentWriter(double % width, double % height);" />
      <MemberSignature Language="F#" Value="static member CreateXpsDocumentWriter :  *  -&gt; System.Windows.Xps.XpsDocumentWriter" Usage="System.Printing.PrintQueue.CreateXpsDocumentWriter (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.XpsDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" RefType="ref" />
        <Parameter Name="height" Type="System.Double" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="width"><span data-ttu-id="5d805-269">XPS ドキュメントの幅。</span><span class="sxs-lookup"><span data-stu-id="5d805-269">The width of the XPS document.</span></span></param>
        <param name="height"><span data-ttu-id="5d805-270">XPS ドキュメントの高さ。</span><span class="sxs-lookup"><span data-stu-id="5d805-270">The height of the XPS document.</span></span></param>
        <summary><span data-ttu-id="5d805-271">指定したサイズで <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="5d805-271">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object with the specified dimensions.</span></span></summary>
        <returns><span data-ttu-id="5d805-272">XPS ストリームに書き込む <see cref="T:System.Windows.Xps.XpsDocumentWriter" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-272">An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes to an XPS stream.</span></span> <span data-ttu-id="5d805-273">この値は、<see langword="null" /> でもかまいません。</span><span class="sxs-lookup"><span data-stu-id="5d805-273">This can be <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-274">このメソッドは、表示、<xref:System.Windows.Controls.PrintDialog>ユーザーからの入力を必要とします。</span><span class="sxs-lookup"><span data-stu-id="5d805-274">This method displays a <xref:System.Windows.Controls.PrintDialog> requiring input from the user.</span></span> <span data-ttu-id="5d805-275">戻り値は、ユーザーは、キャンセルまたはダイアログを閉じる、`null`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-275">If the user cancels or closes the dialog, the return value is `null`.</span></span> <span data-ttu-id="5d805-276">戻り値をチェックする必要が結果として、`null`アプリケーションでします。</span><span class="sxs-lookup"><span data-stu-id="5d805-276">As a consequence, the return value must be checked for `null` by your application.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="5d805-277">isxps 適合性ツール</span><span class="sxs-lookup"><span data-stu-id="5d805-277">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateXpsDocumentWriter">
      <MemberSignature Language="C#" Value="public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (string jobDescription, ref System.Printing.PrintDocumentImageableArea documentImageableArea);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter(string jobDescription, class System.Printing.PrintDocumentImageableArea&amp; documentImageableArea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateXpsDocumentWriter (jobDescription As String, ByRef documentImageableArea As PrintDocumentImageableArea) As XpsDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Xps::XpsDocumentWriter ^ CreateXpsDocumentWriter(System::String ^ jobDescription, System::Printing::PrintDocumentImageableArea ^ % documentImageableArea);" />
      <MemberSignature Language="F#" Value="static member CreateXpsDocumentWriter : string *  -&gt; System.Windows.Xps.XpsDocumentWriter" Usage="System.Printing.PrintQueue.CreateXpsDocumentWriter (jobDescription, documentImageableArea)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.XpsDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobDescription" Type="System.String" />
        <Parameter Name="documentImageableArea" Type="System.Printing.PrintDocumentImageableArea" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="jobDescription"><span data-ttu-id="5d805-278">印刷ジョブの名前。</span><span class="sxs-lookup"><span data-stu-id="5d805-278">A name for the print job.</span></span> <span data-ttu-id="5d805-279">これは、Windows 印刷ユーザー インターフェイスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="5d805-279">It appears in the Windows printing user interface.</span></span></param>
        <param name="documentImageableArea"><span data-ttu-id="5d805-280">デバイスが印刷できるページ領域の寸法を含むオブジェクトへの参照。</span><span class="sxs-lookup"><span data-stu-id="5d805-280">A reference to an object that contains the dimensions of the area of the page on which the device can print.</span></span> <span data-ttu-id="5d805-281">このパラメーターのデータ型にパブリック コンストラクターが存在しないため、このパラメーターは初期化されずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="5d805-281">Since its data type has no public constructor, this parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="5d805-282"><see cref="T:System.Windows.Xps.XpsDocumentWriter" /> オブジェクトを作成し、Windows のコモン印刷ダイアログを開いてジョブの説明を指定し、イメージ可能領域とメディアのサイズに関する情報を表す <see langword="ref" /> (Visual Basic の場合は <see langword="ByRef" />) パラメーターを返します。</span><span class="sxs-lookup"><span data-stu-id="5d805-282">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object, opens a Windows common print dialog (and provides it a job description) and returns a <see langword="ref" /> (<see langword="ByRef" /> in Visual Basic) parameter that represents information about the imageable area and the dimensions of the media.</span></span></summary>
        <returns><span data-ttu-id="5d805-283">XPS データをストリームに書き込む <see cref="T:System.Windows.Xps.XpsDocumentWriter" /></span><span class="sxs-lookup"><span data-stu-id="5d805-283">An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes XPS data to a stream.</span></span> <span data-ttu-id="5d805-284">この値は、<see langword="null" /> でもかまいません。</span><span class="sxs-lookup"><span data-stu-id="5d805-284">This can be <see langword="null" />.</span></span> <span data-ttu-id="5d805-285">パラメーター <paramref name="documentImageableArea" /> は <see langword="ref" /> (Visual Basic では <see langword="ByRef" />) パラメーターであり、このメソッドで初期化されます。したがって、このパラメーターは 2 番目に返される項目を表します。</span><span class="sxs-lookup"><span data-stu-id="5d805-285">(The parameter <paramref name="documentImageableArea" /> is a <see langword="ref" /> [<see langword="ByRef" /> in Visual Basic] parameter that is initialized by the method, so it represents a second returned item.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-286">多くのプリンターでは、グリップ用紙に各ページの端を余白のインチの四半期にし、プリンターに進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="5d805-286">Many printers need up to a quarter of an inch of unprinted space around the edges of each page to grip the paper and move it through the printer.</span></span> <span data-ttu-id="5d805-287">それ以外の場合トナーは用紙のフロー メカニズムをいきませんが。</span><span class="sxs-lookup"><span data-stu-id="5d805-287">Otherwise toner would foul the paper flow mechanism.</span></span> <span data-ttu-id="5d805-288">出力する領域は、「イメージ可能領域」。</span><span class="sxs-lookup"><span data-stu-id="5d805-288">The area which can be printed is the "imageable area."</span></span>  
  
 <span data-ttu-id="5d805-289">型<xref:System.Printing.PrintDocumentImageableArea>パブリック コンス トラクターがありません。</span><span class="sxs-lookup"><span data-stu-id="5d805-289">The type <xref:System.Printing.PrintDocumentImageableArea> has no public constructor.</span></span> <span data-ttu-id="5d805-290">そのため、変数`documentImageableArea`宣言およびに割り当てられている必要があります`null`のみ、メソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="5d805-290">Hence, the variable `documentImageableArea` must be declared and assigned to `null` and only then passed to the method.</span></span> <span data-ttu-id="5d805-291">このメソッドは、表示、<xref:System.Windows.Controls.PrintDialog>ユーザーからの入力を必要とします。</span><span class="sxs-lookup"><span data-stu-id="5d805-291">This method displays a <xref:System.Windows.Controls.PrintDialog> requiring input from the user.</span></span> <span data-ttu-id="5d805-292">ユーザーがプリンター、用紙のサイズと向きを選択し、ダイアログ ボックスを閉じた後`documentImageableArea`、実際のオブジェクトとそのプロパティへのポインターを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5d805-292">After the user has selected a printer, paper size, and orientation and closed the dialog, `documentImageableArea` points to an actual object, and its properties are initialized.</span></span>  
  
 <span data-ttu-id="5d805-293">戻り値は、ユーザーは、キャンセルまたはダイアログを閉じる、`null`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-293">If the user cancels or closes the dialog, the return value is `null`.</span></span> <span data-ttu-id="5d805-294">戻り値をチェックする必要が結果として、`null`アプリケーションでします。</span><span class="sxs-lookup"><span data-stu-id="5d805-294">As a consequence, the return value must be checked for `null` by your application.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="5d805-295">isxps 適合性ツール</span><span class="sxs-lookup"><span data-stu-id="5d805-295">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateXpsDocumentWriter">
      <MemberSignature Language="C#" Value="public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (ref System.Printing.PrintDocumentImageableArea documentImageableArea, ref System.Windows.Controls.PageRangeSelection pageRangeSelection, ref System.Windows.Controls.PageRange pageRange);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter(class System.Printing.PrintDocumentImageableArea&amp; documentImageableArea, valuetype System.Windows.Controls.PageRangeSelection&amp; pageRangeSelection, valuetype System.Windows.Controls.PageRange&amp; pageRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateXpsDocumentWriter (ByRef documentImageableArea As PrintDocumentImageableArea, ByRef pageRangeSelection As PageRangeSelection, ByRef pageRange As PageRange) As XpsDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Xps::XpsDocumentWriter ^ CreateXpsDocumentWriter(System::Printing::PrintDocumentImageableArea ^ % documentImageableArea, System::Windows::Controls::PageRangeSelection % pageRangeSelection, System::Windows::Controls::PageRange % pageRange);" />
      <MemberSignature Language="F#" Value="static member CreateXpsDocumentWriter :  *  *  -&gt; System.Windows.Xps.XpsDocumentWriter" Usage="System.Printing.PrintQueue.CreateXpsDocumentWriter (documentImageableArea, pageRangeSelection, pageRange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.XpsDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentImageableArea" Type="System.Printing.PrintDocumentImageableArea" RefType="ref" />
        <Parameter Name="pageRangeSelection" Type="System.Windows.Controls.PageRangeSelection" RefType="ref" />
        <Parameter Name="pageRange" Type="System.Windows.Controls.PageRange" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="documentImageableArea"><span data-ttu-id="5d805-296">デバイスが印刷できるページ領域の寸法を含むオブジェクトへの参照。</span><span class="sxs-lookup"><span data-stu-id="5d805-296">A reference to an object that contains the dimensions of the area of the page on which the device can print.</span></span> <span data-ttu-id="5d805-297">このパラメーターのデータ型にパブリック コンストラクターが存在しないため、このパラメーターは初期化されずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="5d805-297">Since its data type has no public constructor, this parameter is passed uninitialized.</span></span></param>
        <param name="pageRangeSelection"><span data-ttu-id="5d805-298">すべてのページを印刷するか、ユーザーによって指定された範囲だけを印刷するかを指定する値。</span><span class="sxs-lookup"><span data-stu-id="5d805-298">A value that specifies whether to print all pages or only a range that is specified by the user.</span></span></param>
        <param name="pageRange"><span data-ttu-id="5d805-299">印刷されるページの範囲</span><span class="sxs-lookup"><span data-stu-id="5d805-299">The range of pages that is printed.</span></span></param>
        <summary><span data-ttu-id="5d805-300"><see cref="T:System.Windows.Xps.XpsDocumentWriter" /> オブジェクトを作成し、Windows のコモン印刷ダイアログを開いてページの範囲と印刷ジョブの説明を指定し、イメージ可能領域とメディアのサイズに関する情報を表す <see langword="ref" /> (Visual Basic の場合は <see langword="ByRef" />) パラメーターを返します。</span><span class="sxs-lookup"><span data-stu-id="5d805-300">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object, opens a Windows common print dialog, provides the dialog with a page range and a description of the print job, and returns a <see langword="ref" /> (<see langword="ByRef" /> in Visual Basic) parameter that represents information about the imageable area and the dimensions of the media.</span></span></summary>
        <returns><span data-ttu-id="5d805-301">XPS データをストリームに書き込む <see cref="T:System.Windows.Xps.XpsDocumentWriter" /></span><span class="sxs-lookup"><span data-stu-id="5d805-301">An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes XPS data to a stream.</span></span> <span data-ttu-id="5d805-302">この値は、<see langword="null" /> でもかまいません。</span><span class="sxs-lookup"><span data-stu-id="5d805-302">This can be <see langword="null" />.</span></span> <span data-ttu-id="5d805-303"><paramref name="documentImageableArea" />、<paramref name="pageRangeSelection" />、<paramref name="pageRange" /> の各パラメーターはいずれもユーザーによって初期化され、ダイアログ ボックスを閉じると返される <see langword="ref" /> (Visual Basic では <see langword="ByRef" />) であるため、それぞれが追加の戻り項目を表します。</span><span class="sxs-lookup"><span data-stu-id="5d805-303">(The parameters <paramref name="documentImageableArea" />, <paramref name="pageRangeSelection" />, and <paramref name="pageRange" /> are all <see langword="ref" /> [<see langword="ByRef" /> in Visual Basic] parameters that are initialized by the user and returned when the dialog is closed, so each represents an additional returned item.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-304">多くのプリンターでは、グリップ用紙に各ページの端を余白のインチの四半期にし、プリンターに進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="5d805-304">Many printers need up to a quarter of an inch of unprinted space around the edges of each page to grip the paper and move it through the printer.</span></span> <span data-ttu-id="5d805-305">それ以外の場合トナーは用紙のフロー メカニズムをいきませんが。</span><span class="sxs-lookup"><span data-stu-id="5d805-305">Otherwise toner would foul the paper flow mechanism.</span></span> <span data-ttu-id="5d805-306">出力する領域は、「イメージ可能領域」。</span><span class="sxs-lookup"><span data-stu-id="5d805-306">The area which can be printed is the "imageable area."</span></span>  
  
 <span data-ttu-id="5d805-307">型<xref:System.Printing.PrintDocumentImageableArea>パブリック コンス トラクターがありません。</span><span class="sxs-lookup"><span data-stu-id="5d805-307">The type <xref:System.Printing.PrintDocumentImageableArea> has no public constructor.</span></span> <span data-ttu-id="5d805-308">そのため、変数`documentImageableArea`宣言およびに割り当てられている必要があります`null`のみ、メソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="5d805-308">Hence, the variable `documentImageableArea` must be declared and assigned to `null` and only then passed to the method.</span></span> <span data-ttu-id="5d805-309">このメソッドは、表示、<xref:System.Windows.Controls.PrintDialog>ユーザーからの入力を必要とします。</span><span class="sxs-lookup"><span data-stu-id="5d805-309">This method displays a <xref:System.Windows.Controls.PrintDialog> requiring input from the user.</span></span> <span data-ttu-id="5d805-310">ユーザーは、(プリンター、用紙サイズ、向き、およびページ範囲の選択を含む) ダイアログで、印刷ジョブを構成します。</span><span class="sxs-lookup"><span data-stu-id="5d805-310">The user configures his print job on the dialog (including selecting a printer, paper size, orientation, and page range).</span></span> <span data-ttu-id="5d805-311">ダイアログ ボックスが閉じられたときに`pageRangeSelection`と`pageRange`値を持つと`documentImageableArea`プロパティを持つが初期化される実際のオブジェクトを指します。</span><span class="sxs-lookup"><span data-stu-id="5d805-311">When the dialog is closed, `pageRangeSelection` and `pageRange` have values, and `documentImageableArea` points to an actual object whose properties are initialized.</span></span>  
  
 <span data-ttu-id="5d805-312">戻り値は、ユーザーは、キャンセルまたはダイアログを閉じる、`null`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-312">If the user cancels or closes the dialog, the return value is `null`.</span></span> <span data-ttu-id="5d805-313">戻り値をチェックする必要が結果として、`null`アプリケーションでします。</span><span class="sxs-lookup"><span data-stu-id="5d805-313">As a consequence, the return value must be checked for `null` by your application.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="5d805-314">isxps 適合性ツール</span><span class="sxs-lookup"><span data-stu-id="5d805-314">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateXpsDocumentWriter">
      <MemberSignature Language="C#" Value="public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (string jobDescription, ref System.Printing.PrintDocumentImageableArea documentImageableArea, ref System.Windows.Controls.PageRangeSelection pageRangeSelection, ref System.Windows.Controls.PageRange pageRange);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter(string jobDescription, class System.Printing.PrintDocumentImageableArea&amp; documentImageableArea, valuetype System.Windows.Controls.PageRangeSelection&amp; pageRangeSelection, valuetype System.Windows.Controls.PageRange&amp; pageRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateXpsDocumentWriter (jobDescription As String, ByRef documentImageableArea As PrintDocumentImageableArea, ByRef pageRangeSelection As PageRangeSelection, ByRef pageRange As PageRange) As XpsDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Xps::XpsDocumentWriter ^ CreateXpsDocumentWriter(System::String ^ jobDescription, System::Printing::PrintDocumentImageableArea ^ % documentImageableArea, System::Windows::Controls::PageRangeSelection % pageRangeSelection, System::Windows::Controls::PageRange % pageRange);" />
      <MemberSignature Language="F#" Value="static member CreateXpsDocumentWriter : string *  *  *  -&gt; System.Windows.Xps.XpsDocumentWriter" Usage="System.Printing.PrintQueue.CreateXpsDocumentWriter (jobDescription, documentImageableArea, pageRangeSelection, pageRange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.XpsDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobDescription" Type="System.String" />
        <Parameter Name="documentImageableArea" Type="System.Printing.PrintDocumentImageableArea" RefType="ref" />
        <Parameter Name="pageRangeSelection" Type="System.Windows.Controls.PageRangeSelection" RefType="ref" />
        <Parameter Name="pageRange" Type="System.Windows.Controls.PageRange" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="jobDescription"><span data-ttu-id="5d805-315">印刷ジョブの名前。</span><span class="sxs-lookup"><span data-stu-id="5d805-315">A name for the print job.</span></span> <span data-ttu-id="5d805-316">これは、Windows 印刷ユーザー インターフェイスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="5d805-316">It appears in the Windows printing user interface.</span></span></param>
        <param name="documentImageableArea"><span data-ttu-id="5d805-317">デバイスが印刷できるページ領域の寸法を含むオブジェクトへの参照。</span><span class="sxs-lookup"><span data-stu-id="5d805-317">A reference to an object that contains the dimensions of the area of the page on which the device can print.</span></span> <span data-ttu-id="5d805-318">このパラメーターのデータ型にパブリック コンストラクターが存在しないため、このパラメーターは初期化されずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="5d805-318">Since its data type has no public constructor, this parameter is passed uninitialized.</span></span></param>
        <param name="pageRangeSelection"><span data-ttu-id="5d805-319">すべてのページを印刷するか、ユーザーによって指定された範囲だけを印刷するかを指定する値。</span><span class="sxs-lookup"><span data-stu-id="5d805-319">A value that specifies whether to print all pages or only a range that is specified by the user.</span></span></param>
        <param name="pageRange"><span data-ttu-id="5d805-320">印刷されるページの範囲</span><span class="sxs-lookup"><span data-stu-id="5d805-320">The range of pages that is printed.</span></span></param>
        <summary><span data-ttu-id="5d805-321"><see cref="T:System.Windows.Xps.XpsDocumentWriter" /> オブジェクトを作成し、Windows のコモン印刷ダイアログを開いてページの範囲を指定し、イメージ可能領域とメディアのサイズに関する情報を表す <see langword="ref" /> (Visual Basic の場合は <see langword="ByRef" />) パラメーターを返します。</span><span class="sxs-lookup"><span data-stu-id="5d805-321">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object, opens a Windows common print dialog, provides the dialog with a page range, and returns a <see langword="ref" /> (<see langword="ByRef" /> in Visual Basic) parameter that represents information about the imageable area and the dimensions of the media.</span></span></summary>
        <returns><span data-ttu-id="5d805-322">XPS データをストリームに書き込む <see cref="T:System.Windows.Xps.XpsDocumentWriter" /></span><span class="sxs-lookup"><span data-stu-id="5d805-322">An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes XPS data to a stream.</span></span> <span data-ttu-id="5d805-323">この値は、<see langword="null" /> でもかまいません。</span><span class="sxs-lookup"><span data-stu-id="5d805-323">This can be <see langword="null" />.</span></span> <span data-ttu-id="5d805-324"><paramref name="documentImageableArea" />、<paramref name="pageRangeSelection" />、<paramref name="pageRange" /> の各パラメーターはいずれもユーザーによって初期化され、ダイアログ ボックスを閉じると返される <see langword="ref" /> (Visual Basic では <see langword="ByRef" />) であるため、それぞれが追加の戻り項目を表します。</span><span class="sxs-lookup"><span data-stu-id="5d805-324">(The parameters <paramref name="documentImageableArea" />, <paramref name="pageRangeSelection" />, and <paramref name="pageRange" /> are all <see langword="ref" /> [<see langword="ByRef" /> in Visual Basic] parameters that are initialized by the user and returned when the dialog is closed, so each represents an additional returned item.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-325">多くのプリンターでは、グリップ用紙に各ページの端を余白のインチの四半期にし、プリンターに進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="5d805-325">Many printers need up to a quarter of an inch of unprinted space around the edges of each page to grip the paper and move it through the printer.</span></span> <span data-ttu-id="5d805-326">それ以外の場合トナーは用紙のフロー メカニズムをいきませんが。</span><span class="sxs-lookup"><span data-stu-id="5d805-326">Otherwise toner would foul the paper flow mechanism.</span></span> <span data-ttu-id="5d805-327">出力する領域は、「イメージ可能領域」。</span><span class="sxs-lookup"><span data-stu-id="5d805-327">The area which can be printed is the "imageable area."</span></span>  
  
 <span data-ttu-id="5d805-328">型<xref:System.Printing.PrintDocumentImageableArea>パブリック コンス トラクターがありません。</span><span class="sxs-lookup"><span data-stu-id="5d805-328">The type <xref:System.Printing.PrintDocumentImageableArea> has no public constructor.</span></span> <span data-ttu-id="5d805-329">そのため、変数`documentImageableArea`宣言およびに割り当てられている必要があります`null`のみ、メソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="5d805-329">Hence, the variable `documentImageableArea` must be declared and assigned to `null` and only then passed to the method.</span></span> <span data-ttu-id="5d805-330">このメソッドは、表示、<xref:System.Windows.Controls.PrintDialog>ユーザーからの入力を必要とします。</span><span class="sxs-lookup"><span data-stu-id="5d805-330">This method displays a <xref:System.Windows.Controls.PrintDialog> requiring input from the user.</span></span> <span data-ttu-id="5d805-331">ユーザーは、(プリンター、用紙サイズ、向き、およびページ範囲の選択を含む) ダイアログで、印刷ジョブを構成します。</span><span class="sxs-lookup"><span data-stu-id="5d805-331">The user configures his print job on the dialog (including selecting a printer, paper size, orientation, and page range).</span></span> <span data-ttu-id="5d805-332">ダイアログ ボックスが閉じられたときに`pageRangeSelection`と`pageRange`値を持つと`documentImageableArea`プロパティを持つが初期化される実際のオブジェクトを指します。</span><span class="sxs-lookup"><span data-stu-id="5d805-332">When the dialog is closed, `pageRangeSelection` and `pageRange` have values, and `documentImageableArea` points to an actual object whose properties are initialized.</span></span>  
  
 <span data-ttu-id="5d805-333">戻り値は、ユーザーは、キャンセルまたはダイアログを閉じる、`null`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-333">If the user cancels or closes the dialog, the return value is `null`.</span></span> <span data-ttu-id="5d805-334">戻り値をチェックする必要が結果として、`null`アプリケーションでします。</span><span class="sxs-lookup"><span data-stu-id="5d805-334">As a consequence, the return value must be checked for `null` by your application.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="5d805-335">isxps 適合性ツール</span><span class="sxs-lookup"><span data-stu-id="5d805-335">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CurrentJobSettings">
      <MemberSignature Language="C#" Value="public System.Printing.PrintJobSettings CurrentJobSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintJobSettings CurrentJobSettings" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.CurrentJobSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentJobSettings As PrintJobSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintJobSettings ^ CurrentJobSettings { System::Printing::PrintJobSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentJobSettings : System.Printing.PrintJobSettings" Usage="System.Printing.PrintQueue.CurrentJobSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintJobSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-336">現在の印刷ジョブの構成設定を格納するオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-336">Gets an object that contains the configuration settings for the current print job.</span></span></summary>
        <value><span data-ttu-id="5d805-337">現在印刷中のジョブの設定を保持する <see cref="T:System.Printing.PrintJobSettings" /> 値。</span><span class="sxs-lookup"><span data-stu-id="5d805-337">A <see cref="T:System.Printing.PrintJobSettings" /> value that holds the settings of the currently printing job.</span></span> <span data-ttu-id="5d805-338">これらの設定には、ジョブの説明やジョブの <see cref="T:System.Printing.PrintTicket" /> への参照などが含まれます。</span><span class="sxs-lookup"><span data-stu-id="5d805-338">These settings include a description of the job and a reference to the job's <see cref="T:System.Printing.PrintTicket" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Printing.PrintTicket" />
      </Docs>
    </Member>
    <Member MemberName="DefaultPrintTicket">
      <MemberSignature Language="C#" Value="public virtual System.Printing.PrintTicket DefaultPrintTicket { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintTicket DefaultPrintTicket" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.DefaultPrintTicket" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultPrintTicket As PrintTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Printing::PrintTicket ^ DefaultPrintTicket { System::Printing::PrintTicket ^ get(); void set(System::Printing::PrintTicket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPrintTicket : System.Printing.PrintTicket with get, set" Usage="System.Printing.PrintQueue.DefaultPrintTicket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintTicket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-339">この <see cref="T:System.Printing.PrintQueue" /> に関連付けられている既定のプリンター オプションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5d805-339">Gets or sets the default printer options associated with this <see cref="T:System.Printing.PrintQueue" />.</span></span></summary>
        <value><span data-ttu-id="5d805-340">印刷キューの既定の <see cref="T:System.Printing.PrintTicket" />。印刷キューでエラーが発生した場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-340">The default <see cref="T:System.Printing.PrintTicket" /> for the print queue; or <see langword="null" /> if an error has occurred in the print queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-341">既定の<xref:System.Printing.PrintTicket>などの印刷ジョブのオプションを指定<xref:System.Printing.PrintTicket.CopyCount%2A>、 <xref:System.Printing.PrintTicket.PageOrientation%2A>、 <xref:System.Printing.PrintTicket.Duplexing%2A>、 <xref:System.Printing.PrintTicket.Stapling%2A>、およびその他。</span><span class="sxs-lookup"><span data-stu-id="5d805-341">The default <xref:System.Printing.PrintTicket> specifies print job options such as <xref:System.Printing.PrintTicket.CopyCount%2A>, <xref:System.Printing.PrintTicket.PageOrientation%2A>, <xref:System.Printing.PrintTicket.Duplexing%2A>, <xref:System.Printing.PrintTicket.Stapling%2A>, and others.</span></span>  
  
 <span data-ttu-id="5d805-342">各<xref:System.Printing.PrintQueue>独自に維持<xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>します。</span><span class="sxs-lookup"><span data-stu-id="5d805-342">Each <xref:System.Printing.PrintQueue> maintains its own <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>.</span></span>  
  
 <span data-ttu-id="5d805-343">通常の操作で、<xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>プロパティが返す、<xref:System.Printing.PrintTicket>します。</span><span class="sxs-lookup"><span data-stu-id="5d805-343">In normal operation the <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> property returns a <xref:System.Printing.PrintTicket>.</span></span>  <span data-ttu-id="5d805-344">場合、<xref:System.Printing.PrintQueue>無効な状態を検出した<xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>返します`null`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-344">If the <xref:System.Printing.PrintQueue> detects an invalid state, <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> returns `null`.</span></span>  <span data-ttu-id="5d805-345">場合<xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>返します`null`アプリケーションがこの印刷キューでエラーが発生したことにユーザー情報ダイアログ ボックスを表示し、さまざまな印刷キューへの出力で印刷ジョブを再起動する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5d805-345">If <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> returns `null`, the application should display an informational user dialog that an error has occurred on this print queue and that the print job should be restarted with the output directed to a different print queue.</span></span>  
  
 <span data-ttu-id="5d805-346">取得または設定、<xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>プロパティを検証しません、<xref:System.Printing.PrintTicket>します。</span><span class="sxs-lookup"><span data-stu-id="5d805-346">Getting or setting the <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> property does not validate the <xref:System.Printing.PrintTicket>.</span></span>  <span data-ttu-id="5d805-347"><xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>メソッドを使用して検証すること、<xref:System.Printing.PrintTicket>します。</span><span class="sxs-lookup"><span data-stu-id="5d805-347">The <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> method can be used to validate a <xref:System.Printing.PrintTicket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-348">次の例では、それらを活用するために、プリンターの機能をテストおよび印刷ジョブを構成するときにこのプロパティを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-348">The following example shows how to use this property while testing a printer's capabilities and configuring a print job to take advantage of them.</span></span>  
  
 [!code-cpp[XpsCreate#PrinterCapabilities](~/samples/snippets/cpp/VS_Snippets_Wpf/XpsCreate/CPP/XpsCreate.cpp#printercapabilities)]
 [!code-csharp[XpsCreate#PrinterCapabilities](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsCreate/CSharp/XpsCreate.cs#printercapabilities)]
 [!code-vb[XpsCreate#PrinterCapabilities](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsCreate/visualbasic/xpscreate.vb#printercapabilities)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Printing.PrintQueue.UserPrintTicket" />
        <altmember cref="P:System.Printing.PrintQueue.DefaultPriority" />
      </Docs>
    </Member>
    <Member MemberName="DefaultPriority">
      <MemberSignature Language="C#" Value="public virtual int DefaultPriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultPriority" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.DefaultPriority" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DefaultPriority { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPriority : int with get, set" Usage="System.Printing.PrintQueue.DefaultPriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-349">新たにキューに追加される各印刷ジョブに割り当てられる既定の優先順位を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5d805-349">Gets or sets the default priority that is given to each new print job added to the queue.</span></span></summary>
        <value><span data-ttu-id="5d805-350">キューに追加される印刷ジョブの既定の優先順位。</span><span class="sxs-lookup"><span data-stu-id="5d805-350">The default priority for print jobs added to the queue.</span></span> <span data-ttu-id="5d805-351">1 ～ 99 の値を指定できます。</span><span class="sxs-lookup"><span data-stu-id="5d805-351">Possible values range from 1 through 99.</span></span> <span data-ttu-id="5d805-352">既定値は 1 です。</span><span class="sxs-lookup"><span data-stu-id="5d805-352">The default is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-353">印刷キューに入った後、ユーザーが印刷ジョブの優先順位を変更できます。</span><span class="sxs-lookup"><span data-stu-id="5d805-353">A print job's priority can be changed by users after it enters the print queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Printing.PrintQueue.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-354">印刷キューの説明を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-354">Gets a description of the print queue.</span></span></summary>
        <value><span data-ttu-id="5d805-355">印刷キューの説明。</span><span class="sxs-lookup"><span data-stu-id="5d805-355">A description of the print queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-356">キューが作成されると、キュー名、モデル、およびコンマで区切られた場所で構成される 3 つの部分文字列を既定の説明。</span><span class="sxs-lookup"><span data-stu-id="5d805-356">When the queue is created, the description defaults to a three part string that consists of the queue name, model, and location separated by commas.</span></span> <span data-ttu-id="5d805-357">これに対して、<xref:System.Printing.PrintQueue.Description%2A>プロパティを<xref:System.Printing.PrintQueue.Comment%2A>コモン印刷ダイアログおよびプリンターと Fax の一覧でユーザーに表示されるプロパティ。</span><span class="sxs-lookup"><span data-stu-id="5d805-357">Contrast the <xref:System.Printing.PrintQueue.Description%2A> property with the <xref:System.Printing.PrintQueue.Comment%2A> property which is visible to users in the common print dialog and the Printers and Faxes list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.Printing.PrintQueue.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-358">キューの完全な名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-358">Gets the complete name of the queue.</span></span></summary>
        <value><span data-ttu-id="5d805-359">キューの完全な名前。</span><span class="sxs-lookup"><span data-stu-id="5d805-359">The complete name of the print queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-360">このプロパティの値はローカル プリント サーバーの印刷キューの場合と同じでは<xref:System.Printing.PrintQueue.Name%2A>、それ以外の場合、完全 UNC (汎用名前付け規則) 名が含まれます。</span><span class="sxs-lookup"><span data-stu-id="5d805-360">For print queues on the local print server, this property's value is identical to <xref:System.Printing.PrintQueue.Name%2A>, otherwise it includes the full UNC (Universal Naming Convention) name.</span></span>  
  
 <span data-ttu-id="5d805-361"><xref:System.Printing.PrintQueue>オブジェクトもが書き込み可能な<xref:System.Printing.PrintQueue.Name%2A>と<xref:System.Printing.PrintQueue.ShareName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5d805-361">The <xref:System.Printing.PrintQueue> object also has writeable <xref:System.Printing.PrintQueue.Name%2A> and <xref:System.Printing.PrintQueue.ShareName%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-362">次の例では、2 つの印刷チケットをマージするときにこのプロパティを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-362">The following example shows how to use this property while merging two print tickets.</span></span>  
  
 [!code-csharp[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintTicketManagment/CSharp/printticket.cs#usingmergeandvalidate)]
 [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintTicketManagment/visualbasic/printticket.vb#usingmergeandvalidate)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJob">
      <MemberSignature Language="C#" Value="public System.Printing.PrintSystemJobInfo GetJob (int jobId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintSystemJobInfo GetJob(int32 jobId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.GetJob(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetJob (jobId As Integer) As PrintSystemJobInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintSystemJobInfo ^ GetJob(int jobId);" />
      <MemberSignature Language="F#" Value="member this.GetJob : int -&gt; System.Printing.PrintSystemJobInfo" Usage="printQueue.GetJob jobId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="jobId"><span data-ttu-id="5d805-363">キュー内のジョブの番号。</span><span class="sxs-lookup"><span data-stu-id="5d805-363">The number of the job in the queue.</span></span></param>
        <summary><span data-ttu-id="5d805-364">指定した ID 番号の印刷ジョブを取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-364">Gets the print job with the specified ID number.</span></span></summary>
        <returns><span data-ttu-id="5d805-365">ジョブのプロパティとステータスを指定する <see cref="T:System.Printing.PrintSystemJobInfo" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-365">A <see cref="T:System.Printing.PrintSystemJobInfo" /> that specifies the properties of the job and its status.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-366">使用することも、<xref:System.Printing.PrintSystemJobInfo.Get%2A?displayProperty=nameWithType>同じ目的のためのメソッド。</span><span class="sxs-lookup"><span data-stu-id="5d805-366">You can also use the <xref:System.Printing.PrintSystemJobInfo.Get%2A?displayProperty=nameWithType> method for the same purpose.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-367">次の例では、印刷ジョブに問題を診断するときに、このメソッドを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-367">The following example shows how to use this method when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#enumeratejobsinqueues)]
 [!code-csharp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#enumeratejobsinqueues)]
 [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#enumeratejobsinqueues)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Get(System.Printing.PrintQueue,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPrintCapabilities">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5d805-368">カラー印刷や両面印刷に対応しているかどうかなど、プリンターやデバイスの機能を識別する <see cref="T:System.Printing.PrintCapabilities" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-368">Gets a <see cref="T:System.Printing.PrintCapabilities" /> object that identifies the capabilities of the printer or device, such as whether it prints in color or is capable of two-sided printing.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPrintCapabilities">
      <MemberSignature Language="C#" Value="public System.Printing.PrintCapabilities GetPrintCapabilities ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintCapabilities GetPrintCapabilities() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.GetPrintCapabilities" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrintCapabilities () As PrintCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintCapabilities ^ GetPrintCapabilities();" />
      <MemberSignature Language="F#" Value="member this.GetPrintCapabilities : unit -&gt; System.Printing.PrintCapabilities" Usage="printQueue.GetPrintCapabilities " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintCapabilities</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5d805-369">プリンターの機能を識別する <see cref="T:System.Printing.PrintCapabilities" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-369">Gets a <see cref="T:System.Printing.PrintCapabilities" /> object that identifies the capabilities of the printer.</span></span></summary>
        <returns><span data-ttu-id="5d805-370">両面処理や自動ステープル処理など、プリンターが実行できる処理および実行できない処理を指定する <see cref="T:System.Printing.PrintCapabilities" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5d805-370">A <see cref="T:System.Printing.PrintCapabilities" /> object that specifies what the printer can and cannot do, such as two-sided coping or automatic stapling.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5d805-371">次の例では、2 つの印刷チケットをマージするときにこのメソッドを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-371">The following example shows how to use this method while merging two print tickets.</span></span>  
  
 [!code-csharp[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintTicketManagment/CSharp/printticket.cs#usingmergeandvalidate)]
 [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintTicketManagment/visualbasic/printticket.vb#usingmergeandvalidate)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="5d805-372"><see cref="T:System.Printing.PrintCapabilities" /> オブジェクトを取得できませんでした。</span><span class="sxs-lookup"><span data-stu-id="5d805-372">The <see cref="T:System.Printing.PrintCapabilities" /> object could not be retrieved.</span></span></exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission"><span data-ttu-id="5d805-373">印刷機能を取得する権限。</span><span class="sxs-lookup"><span data-stu-id="5d805-373">for permission to get print capabilities.</span></span> <span data-ttu-id="5d805-374">関連付けられた列挙体。 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></span><span class="sxs-lookup"><span data-stu-id="5d805-374">Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetPrintCapabilities">
      <MemberSignature Language="C#" Value="public System.Printing.PrintCapabilities GetPrintCapabilities (System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintCapabilities GetPrintCapabilities(class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.GetPrintCapabilities(System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintCapabilities ^ GetPrintCapabilities(System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="member this.GetPrintCapabilities : System.Printing.PrintTicket -&gt; System.Printing.PrintCapabilities" Usage="printQueue.GetPrintCapabilities printTicket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintCapabilities</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="printTicket"><span data-ttu-id="5d805-375">印刷機能を報告するための基準となる印刷チケット。</span><span class="sxs-lookup"><span data-stu-id="5d805-375">A print ticket that provides the basis on which the print capabilities are reported.</span></span></param>
        <summary><span data-ttu-id="5d805-376">プリンターの機能を識別する <see cref="T:System.Printing.PrintCapabilities" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-376">Gets a <see cref="T:System.Printing.PrintCapabilities" /> object that identifies the capabilities of the printer.</span></span></summary>
        <returns><span data-ttu-id="5d805-377">両面処理や自動ステープル処理など、プリンターが実行できる処理および実行できない処理を指定する <see cref="T:System.Printing.PrintCapabilities" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5d805-377">A <see cref="T:System.Printing.PrintCapabilities" /> object that specifies what the printer can and cannot do, such as two-sided coping or automatic stapling.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-378"><xref:System.Printing.PrintTicket>パラメーターを作成する基礎として使用、<xref:System.Printing.PrintCapabilities>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5d805-378">The <xref:System.Printing.PrintTicket> parameter is used as the basis on which to construct the <xref:System.Printing.PrintCapabilities> object.</span></span> <span data-ttu-id="5d805-379">たとえば、プリンターには、メディアの種類 A のみがサポートされているし、入力ビン 1 から B とその入力ビン 2 からメディアの種類 C のみサポートされてください。</span><span class="sxs-lookup"><span data-stu-id="5d805-379">For example, suppose the printer supported only media types A and B from input bin 1 and it only supported media type C from input bin 2.</span></span> <span data-ttu-id="5d805-380">場合、`printTicket`パラメーターに指定された入力ビン、1、<xref:System.Printing.PrintCapabilities>返されるオブジェクトはすべての 3 つのメディアの種類が含まれますが、その「制約」として C 型は報告</span><span class="sxs-lookup"><span data-stu-id="5d805-380">If the `printTicket` parameter specified input bin 1, then the <xref:System.Printing.PrintCapabilities> object that is returned would include all three media types, but it would report type C as "constrained."</span></span> <span data-ttu-id="5d805-381">場合、`printTicket`パラメーターに指定された入力ビン、2、<xref:System.Printing.PrintCapabilities>返されるオブジェクトはすべての 3 つのメディアの種類が含まれますが、その型 A と B「制約」とは報告</span><span class="sxs-lookup"><span data-stu-id="5d805-381">If the `printTicket` parameter specified input bin 2, then the <xref:System.Printing.PrintCapabilities> object that is returned would include all three media types, but it would report types A and B as "constrained."</span></span> <span data-ttu-id="5d805-382">参照してください、[印刷スキーマ](https://go.microsoft.com/fwlink/?LinkId=186397)制約の詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="5d805-382">See the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) for more information on constraints.</span></span>  
  
 <span data-ttu-id="5d805-383">場合`printTicket`は`null`、<xref:System.Printing.PrintQueue.UserPrintTicket%2A>使用されます。</span><span class="sxs-lookup"><span data-stu-id="5d805-383">If `printTicket` is `null`, the <xref:System.Printing.PrintQueue.UserPrintTicket%2A> is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="5d805-384"><see cref="T:System.Printing.PrintCapabilities" /> オブジェクトを取得できませんでした。</span><span class="sxs-lookup"><span data-stu-id="5d805-384">The <see cref="T:System.Printing.PrintCapabilities" /> object could not be retrieved.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5d805-385"><paramref name="printTicket" /> の形式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="5d805-385"><paramref name="printTicket" /> is not well-formed.</span></span></exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission"><span data-ttu-id="5d805-386">印刷機能を取得する権限。</span><span class="sxs-lookup"><span data-stu-id="5d805-386">for permission to get print capabilities.</span></span> <span data-ttu-id="5d805-387">関連付けられた列挙体。 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></span><span class="sxs-lookup"><span data-stu-id="5d805-387">Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPrintCapabilitiesAsXml">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5d805-388">[印刷スキーマ](https://go.microsoft.com/fwlink/?LinkId=186397)に従う XML ストリームとしてプリンターの機能を指定する <see cref="T:System.IO.MemoryStream" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-388">Gets a <see cref="T:System.IO.MemoryStream" /> object that specifies the printer's capabilities as an XML stream that complies with the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-389">使用する XML スキーマ"PrintCapabilities"の一部と呼びます、[印刷スキーマ](https://go.microsoft.com/fwlink/?LinkId=186397)システム。</span><span class="sxs-lookup"><span data-stu-id="5d805-389">The XML schema used is called "PrintCapabilities," a part of the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPrintCapabilitiesAsXml">
      <MemberSignature Language="C#" Value="public System.IO.MemoryStream GetPrintCapabilitiesAsXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryStream GetPrintCapabilitiesAsXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.GetPrintCapabilitiesAsXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrintCapabilitiesAsXml () As MemoryStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryStream ^ GetPrintCapabilitiesAsXml();" />
      <MemberSignature Language="F#" Value="member this.GetPrintCapabilitiesAsXml : unit -&gt; System.IO.MemoryStream" Usage="printQueue.GetPrintCapabilitiesAsXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5d805-390">[印刷スキーマ](https://go.microsoft.com/fwlink/?LinkId=186397)に従う XML ストリームとしてプリンターの機能を指定する <see cref="T:System.IO.MemoryStream" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-390">Gets a <see cref="T:System.IO.MemoryStream" /> object that specifies the printer's capabilities as an XML stream that complies with the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397).</span></span></summary>
        <returns><span data-ttu-id="5d805-391"><see href="https://docs.microsoft.com/windows/desktop/printdocs/printschema">印刷スキーマ</see> システムの一部である XML スキーマ "PrintCapabilities" を使用して、プリンターの機能を指定する <see cref="T:System.IO.MemoryStream" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-391">A <see cref="T:System.IO.MemoryStream" /> specifying the printer's capabilities by using the XML schema "PrintCapabilities," a part of the <see href="https://docs.microsoft.com/windows/desktop/printdocs/printschema">Print Schema</see> system.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="5d805-392">印刷機能を取得できませんでした。</span><span class="sxs-lookup"><span data-stu-id="5d805-392">The print capabilities could not be retrieved.</span></span></exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission"><span data-ttu-id="5d805-393">印刷機能を取得する権限。</span><span class="sxs-lookup"><span data-stu-id="5d805-393">for permission to get print capabilities.</span></span> <span data-ttu-id="5d805-394">関連付けられた列挙体。 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></span><span class="sxs-lookup"><span data-stu-id="5d805-394">Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetPrintCapabilitiesAsXml">
      <MemberSignature Language="C#" Value="public System.IO.MemoryStream GetPrintCapabilitiesAsXml (System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryStream GetPrintCapabilitiesAsXml(class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.GetPrintCapabilitiesAsXml(System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryStream ^ GetPrintCapabilitiesAsXml(System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="member this.GetPrintCapabilitiesAsXml : System.Printing.PrintTicket -&gt; System.IO.MemoryStream" Usage="printQueue.GetPrintCapabilitiesAsXml printTicket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="printTicket"><span data-ttu-id="5d805-395">印刷機能を報告するための基準となる印刷チケット。</span><span class="sxs-lookup"><span data-stu-id="5d805-395">A print ticket that provides the basis on which the print capabilities are reported.</span></span></param>
        <summary><span data-ttu-id="5d805-396">[印刷スキーマ](https://go.microsoft.com/fwlink/?LinkId=186397)に従う XML 形式のプリンターの機能を指定する <see cref="T:System.IO.MemoryStream" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-396">Gets a <see cref="T:System.IO.MemoryStream" /> object that specifies the printer's capabilities in an XML format that complies with the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397).</span></span></summary>
        <returns><span data-ttu-id="5d805-397"><see href="https://docs.microsoft.com/windows/desktop/printdocs/printschema">印刷スキーマ</see> システムの一部である XML スキーマ "PrintCapabilities" を使用して、プリンターの機能を指定する <see cref="T:System.IO.MemoryStream" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-397">A <see cref="T:System.IO.MemoryStream" /> specifying the printer's capabilities by using the XML schema "PrintCapabilities," a part of the <see href="https://docs.microsoft.com/windows/desktop/printdocs/printschema">Print Schema</see> system.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-398"><xref:System.Printing.PrintTicket>パラメーターは、印刷機能の XML を構築する基礎として使用します。</span><span class="sxs-lookup"><span data-stu-id="5d805-398">The <xref:System.Printing.PrintTicket> parameter is used as the basis on which to construct the print capabilities XML.</span></span> <span data-ttu-id="5d805-399">たとえば、プリンターには、メディアの種類 A のみがサポートされているし、入力ビン 1 から B とその入力ビン 2 からメディアの種類 C のみサポートされてください。</span><span class="sxs-lookup"><span data-stu-id="5d805-399">For example, suppose the printer supported only media types A and B from input bin 1 and it only supported media type C from input bin 2.</span></span> <span data-ttu-id="5d805-400">場合、`printTicket`パラメーターに指定された入力ビン 1、し、印刷機能が返される XML には、すべての 3 つのメディアの種類にが含まれますが、その「制約」として C 型は報告</span><span class="sxs-lookup"><span data-stu-id="5d805-400">If the `printTicket` parameter specified input bin 1, then the print capabilities XML that is returned would include all three media types, but it would report type C as "constrained."</span></span> <span data-ttu-id="5d805-401">場合、`printTicket`パラメーターが入力ビン 2 を指定し、印刷機能が返される XML には、すべての 3 つのメディアの種類にが含まれますがそのは A と B のように「制約」の種類を報告</span><span class="sxs-lookup"><span data-stu-id="5d805-401">If the `printTicket` parameter specified input bin 2, then the print capabilities XML that is returned would include all three media types, but it would report types A and B as "constrained."</span></span> <span data-ttu-id="5d805-402">参照してください、[印刷スキーマ](https://go.microsoft.com/fwlink/?LinkId=186397)制約の詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="5d805-402">See the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) for more information on constraints.</span></span>  
  
 <span data-ttu-id="5d805-403">場合`printTicket`は`null`、<xref:System.Printing.PrintQueue.UserPrintTicket%2A>使用されます。</span><span class="sxs-lookup"><span data-stu-id="5d805-403">If `printTicket` is `null`, the <xref:System.Printing.PrintQueue.UserPrintTicket%2A> is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="5d805-404">印刷機能を取得できませんでした。</span><span class="sxs-lookup"><span data-stu-id="5d805-404">The print capabilities could not be retrieved.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5d805-405"><paramref name="printTicket" /> の形式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="5d805-405"><paramref name="printTicket" /> is not well-formed.</span></span></exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission"><span data-ttu-id="5d805-406">印刷機能を取得する権限。</span><span class="sxs-lookup"><span data-stu-id="5d805-406">for permission to get print capabilities.</span></span> <span data-ttu-id="5d805-407">関連付けられた列挙体。 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></span><span class="sxs-lookup"><span data-stu-id="5d805-407">Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetPrintJobInfoCollection">
      <MemberSignature Language="C#" Value="public System.Printing.PrintJobInfoCollection GetPrintJobInfoCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintJobInfoCollection GetPrintJobInfoCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.GetPrintJobInfoCollection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrintJobInfoCollection () As PrintJobInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintJobInfoCollection ^ GetPrintJobInfoCollection();" />
      <MemberSignature Language="F#" Value="member this.GetPrintJobInfoCollection : unit -&gt; System.Printing.PrintJobInfoCollection" Usage="printQueue.GetPrintJobInfoCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintJobInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5d805-408">キュー内の各ジョブの <see cref="T:System.Printing.PrintSystemJobInfo" /> オブジェクトを格納するコレクションを作成します。</span><span class="sxs-lookup"><span data-stu-id="5d805-408">Creates a collection that contains a <see cref="T:System.Printing.PrintSystemJobInfo" /> object for each job in the queue.</span></span></summary>
        <returns><span data-ttu-id="5d805-409"><see cref="T:System.Printing.PrintSystemJobInfo" /> オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="5d805-409">A collection of <see cref="T:System.Printing.PrintSystemJobInfo" /> objects.</span></span> <span data-ttu-id="5d805-410">このオブジェクトはキュー内の各ジョブに 1 つずつあります。</span><span class="sxs-lookup"><span data-stu-id="5d805-410">There is one for each job in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5d805-411">次の例では、キュー内のすべてのジョブで同じアクションを実行するときに、このメソッドを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-411">The following example shows how to use this method when performing the same action on every job in a queue.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#enumeratejobsinqueues)]
 [!code-csharp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#enumeratejobsinqueues)]
 [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#enumeratejobsinqueues)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPaperProblem">
      <MemberSignature Language="C#" Value="public bool HasPaperProblem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPaperProblem" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.HasPaperProblem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPaperProblem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPaperProblem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasPaperProblem : bool" Usage="System.Printing.PrintQueue.HasPaperProblem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-412">特定できない用紙の問題がプリンターで発生しているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-412">Gets a value that indicates if the printer is having an unspecified paper problem.</span></span></summary>
        <value><span data-ttu-id="5d805-413">特定できない用紙の問題が発生している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-413"><see langword="true" /> if there is an unspecified paper problem; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-414">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-414">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 <span data-ttu-id="5d805-415"><xref:System.Printing.PrintQueue>オブジェクトもあります<xref:System.Printing.PrintQueue.IsPaperJammed%2A>と<xref:System.Printing.PrintQueue.IsOutOfPaper%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5d805-415">The <xref:System.Printing.PrintQueue> object also has <xref:System.Printing.PrintQueue.IsPaperJammed%2A> and <xref:System.Printing.PrintQueue.IsOutOfPaper%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-416">次の例では、可能性のあるエラー状態をすべてのプリンター、アンケートの一部としてこのプロパティを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-416">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasToner">
      <MemberSignature Language="C#" Value="public bool HasToner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasToner" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.HasToner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasToner As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasToner { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasToner : bool" Usage="System.Printing.PrintQueue.HasToner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-417">プリンターにトナーがあるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-417">Gets a value that indicates if the printer has toner.</span></span></summary>
        <value><span data-ttu-id="5d805-418">現在のプリンターにトナーがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-418"><see langword="true" /> if the current printer has toner; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-419">プリンターの製造元では、このシグナルを使用して、そのトナーが不足していないことを示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-419">Some printer manufacturers may use this signal to indicate that toner is not low.</span></span> <span data-ttu-id="5d805-420">トナー カートリッジが存在し、正しく挿入されて使用中に使用することが他のユーザー<xref:System.Printing.PrintQueue.IsTonerLow%2A>トナーが低いことを示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-420">Others may use it to indicate that the toner cartridge is present and properly inserted while using <xref:System.Printing.PrintQueue.IsTonerLow%2A> to indicate that toner is low.</span></span>  
  
 <span data-ttu-id="5d805-421">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-421">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-422">次の例では、可能性のあるエラー状態をすべてのプリンター、アンケートの一部としてこのプロパティを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-422">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingPrintServer">
      <MemberSignature Language="C#" Value="public virtual System.Printing.PrintServer HostingPrintServer { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintServer HostingPrintServer" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.HostingPrintServer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HostingPrintServer As PrintServer" />
      <MemberSignature Language="C++ CLI" Value="public:  virtual property System::Printing::PrintServer ^ HostingPrintServer {  public:&#xA;System::Printing::PrintServer ^ get(); protected:&#xA; void set(System::Printing::PrintServer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HostingPrintServer : System.Printing.PrintServer with get, set" Usage="System.Printing.PrintQueue.HostingPrintServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintServer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-423">印刷キューを制御するプリント サーバーを取得または設定 (protected) します。</span><span class="sxs-lookup"><span data-stu-id="5d805-423">Gets or sets (protected) the print server that controls the print queue.</span></span></summary>
        <value><span data-ttu-id="5d805-424">印刷キューをホストしている <see cref="T:System.Printing.PrintServer" /> の名前およびその他のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="5d805-424">The name and other properties of the <see cref="T:System.Printing.PrintServer" /> that is hosting the print queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-425">派生したクラスによってのみ、このプロパティを設定できます<xref:System.Printing.PrintQueue>プロパティの setter はため`protected`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-425">This property can be set only by a class that derives from <xref:System.Printing.PrintQueue> because the property's setter is `protected`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InPartialTrust">
      <MemberSignature Language="C#" Value="public bool InPartialTrust { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InPartialTrust" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.InPartialTrust" />
      <MemberSignature Language="VB.NET" Value="Public Property InPartialTrust As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InPartialTrust { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.InPartialTrust : bool with get, set" Usage="System.Printing.PrintQueue.InPartialTrust" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-426">キューが部分信頼モード (より高いレベルの信頼) で動作しているかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5d805-426">Gets or sets a value that indicates whether the queue is operating in a partially trusted mode, a higher level of trust.</span></span></summary>
        <value><span data-ttu-id="5d805-427">キューが部分信頼モードで動作している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-427"><see langword="true" /> if the queue is operating in a partially trusted mode; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-428">ときに、<xref:System.Printing.PrintQueue.InPartialTrust%2A>プロパティは`true`、プログラムを作成できません、<xref:System.Printing.PrintQueue>ユーザーがあるプリンターの完全な印刷アクセス許可がない場合は、このプリンターを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5d805-428">When the <xref:System.Printing.PrintQueue.InPartialTrust%2A> property is `true`, your program cannot create a <xref:System.Printing.PrintQueue> object that represents this printer unless the user has full printing permissions for the printer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalDispose">
      <MemberSignature Language="C#" Value="protected override sealed void InternalDispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InternalDispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.InternalDispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub InternalDispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InternalDispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.InternalDispose : bool -&gt; unit" Usage="printQueue.InternalDispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="5d805-429">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-429"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="5d805-430"><see cref="T:System.Printing.PrintQueue" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="5d805-430">Releases the unmanaged resources used by the <see cref="T:System.Printing.PrintQueue" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBidiEnabled">
      <MemberSignature Language="C#" Value="public bool IsBidiEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBidiEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsBidiEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBidiEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBidiEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBidiEnabled : bool" Usage="System.Printing.PrintQueue.IsBidiEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-431">プリンターとの双方向通信が有効かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-431">Gets a value that indicates whether bidirectional communication with the printer is enabled.</span></span></summary>
        <value><span data-ttu-id="5d805-432">プリンターとの双方向通信が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-432"><see langword="true" /> if bidirectional communication with the printer is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsBusy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBusy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBusy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBusy : bool" Usage="System.Printing.PrintQueue.IsBusy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-433">印刷デバイスがビジーかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-433">Gets a value that indicates whether the printing device is busy.</span></span></summary>
        <value><span data-ttu-id="5d805-434">デバイスがビジーの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-434"><see langword="true" /> if the device is busy; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-435">ビジー状態は必ずしも印刷ジョブを処理します。</span><span class="sxs-lookup"><span data-stu-id="5d805-435">Busy does not necessarily mean that it is processing a print job.</span></span> <span data-ttu-id="5d805-436">デバイスが組み合わせプリンターと fax/機の場合は、し、その可能性がある fax、コピーします。</span><span class="sxs-lookup"><span data-stu-id="5d805-436">If the device is a combination printer/fax/copier, then it might be faxing or copying.</span></span> <span data-ttu-id="5d805-437">比較、<xref:System.Printing.PrintQueue.IsProcessing%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5d805-437">Compare with the <xref:System.Printing.PrintQueue.IsProcessing%2A> property.</span></span>  
  
 <span data-ttu-id="5d805-438">デバイスは、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-438">If the device does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDevQueryEnabled">
      <MemberSignature Language="C#" Value="public bool IsDevQueryEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDevQueryEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsDevQueryEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDevQueryEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDevQueryEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDevQueryEnabled : bool" Usage="System.Printing.PrintQueue.IsDevQueryEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-439">ドキュメントとプリンターの構成が一致しない場合にキューでドキュメントを保持するかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-439">Gets a value that indicates whether the queue holds documents when document and printer configurations do not match.</span></span></summary>
        <value><span data-ttu-id="5d805-440">一致しない構成をキューで保持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-440"><see langword="true" /> if the queue holds mismatched configurations; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirect">
      <MemberSignature Language="C#" Value="public bool IsDirect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirect" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsDirect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirect { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirect : bool" Usage="System.Printing.PrintQueue.IsDirect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-441">キューから直接プリンターに印刷するかドキュメントをスプールしてから印刷するかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-441">Gets a value that indicates whether the queue prints directly to the printer or spools documents first and then prints them.</span></span></summary>
        <value><span data-ttu-id="5d805-442">キューから直接プリンターに印刷する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-442"><see langword="true" /> if the queue prints directly to the printer; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-443">このプロパティは、Windows のコモン印刷ダイアログを通じてのみ設定できます。</span><span class="sxs-lookup"><span data-stu-id="5d805-443">This property can be set only through the Windows common print dialog.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDoorOpened">
      <MemberSignature Language="C#" Value="public bool IsDoorOpened { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDoorOpened" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsDoorOpened" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDoorOpened As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDoorOpened { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDoorOpened : bool" Usage="System.Printing.PrintQueue.IsDoorOpened" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-444">プリンターのドアが開いているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-444">Gets a value that indicates whether a door is open on the printer.</span></span></summary>
        <value><span data-ttu-id="5d805-445">ドアが開いている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-445"><see langword="true" /> if a door is open; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-446">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-446">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-447">次の例では、可能性のあるエラー状態をすべてのプリンター、アンケートの一部としてこのプロパティを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-447">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHidden">
      <MemberSignature Language="C#" Value="public bool IsHidden { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHidden" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsHidden" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHidden As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHidden { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHidden : bool" Usage="System.Printing.PrintQueue.IsHidden" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-448">アプリケーションのユーザー インターフェイスで印刷キューが非表示になっているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-448">Gets a value that indicates whether the print queue is hidden in your application's user interface.</span></span></summary>
        <value><span data-ttu-id="5d805-449">Windows のユーザー インターフェイスで印刷キューが非表示の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-449"><see langword="true" /> if the print queue is hidden in the Windows user interface; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-450">自動的に隠ぺいしない印刷キューこのプロパティを設定すると`true`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-450">You do not automatically hide the print queue when you set this property to `true`.</span></span> <span data-ttu-id="5d805-451">まだプログラムは、プログラムのインターフェイスでのキューの一覧に表示されないかどうかを確認する手順を実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5d805-451">Your program still must take steps to make sure it does not appear in any list of queues in the program's interface.</span></span>  
  
 <span data-ttu-id="5d805-452">印刷キューは、プリンタと Fax の一覧など、Windows ユーザー インターフェイスで非表示にできません。</span><span class="sxs-lookup"><span data-stu-id="5d805-452">Print queues cannot be hidden in the Windows user interface, such as the Printers and Faxes list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInError">
      <MemberSignature Language="C#" Value="public bool IsInError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInError" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsInError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInError : bool" Usage="System.Printing.PrintQueue.IsInError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-453">プリンターやデバイスがエラー状態になっているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-453">Gets a value that indicates whether the printer or device is in an error condition.</span></span></summary>
        <value><span data-ttu-id="5d805-454">デバイスがエラー状態になっている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-454"><see langword="true" /> if the device is in an error condition; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-455">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-455">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-456">次の例では、可能性のあるエラー状態をすべてのプリンター、アンケートの一部としてこのプロパティを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-456">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitializing">
      <MemberSignature Language="C#" Value="public bool IsInitializing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitializing" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsInitializing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInitializing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitializing { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInitializing : bool" Usage="System.Printing.PrintQueue.IsInitializing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-457">プリンターが初期化中かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-457">Gets a value that indicates whether the printer is initializing itself.</span></span></summary>
        <value><span data-ttu-id="5d805-458">プリンターが初期化中の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-458"><see langword="true" /> if the printer is initializing; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-459">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-459">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIOActive">
      <MemberSignature Language="C#" Value="public bool IsIOActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIOActive" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsIOActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIOActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIOActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsIOActive : bool" Usage="System.Printing.PrintQueue.IsIOActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-460">プリンターがデータやシグナルを送受信しているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-460">Gets a value that indicates whether the printer is receiving or sending data or signals.</span></span></summary>
        <value><span data-ttu-id="5d805-461">送受信している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-461"><see langword="true" /> if the printer is receiving or sending; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-462">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-462">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManualFeedRequired">
      <MemberSignature Language="C#" Value="public bool IsManualFeedRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsManualFeedRequired" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsManualFeedRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsManualFeedRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsManualFeedRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsManualFeedRequired : bool" Usage="System.Printing.PrintQueue.IsManualFeedRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-463">現在の印刷ジョブで、プリンターに手差しで給紙する必要があるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-463">Gets a value that indicates whether the printer needs to be manually fed paper for the current print job.</span></span></summary>
        <value><span data-ttu-id="5d805-464">手差しで給紙する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-464"><see langword="true" /> if the printer needs to be manually fed paper; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-465">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-465">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNotAvailable">
      <MemberSignature Language="C#" Value="public bool IsNotAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNotAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsNotAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNotAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNotAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNotAvailable : bool" Usage="System.Printing.PrintQueue.IsNotAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-466">プリンターが使用可能かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-466">Gets a value that indicates whether the printer is available.</span></span></summary>
        <value><span data-ttu-id="5d805-467">プリンターが使用可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-467"><see langword="true" /> if the printer is available; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-468">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-468">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-469">次の例では、可能性のあるエラー状態をすべてのプリンター、アンケートの一部としてこのプロパティを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-469">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOffline">
      <MemberSignature Language="C#" Value="public bool IsOffline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOffline" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsOffline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOffline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOffline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOffline : bool" Usage="System.Printing.PrintQueue.IsOffline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-470">プリンターがオフラインであるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-470">Gets a value that indicates whether the printer is offline.</span></span></summary>
        <value><span data-ttu-id="5d805-471">プリンターがオフラインの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-471"><see langword="true" /> if the printer is offline; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-472">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-472">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-473">次の例では、可能性のあるエラー状態をすべてのプリンター、アンケートの一部としてこのプロパティを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-473">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutOfMemory">
      <MemberSignature Language="C#" Value="public bool IsOutOfMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOutOfMemory" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsOutOfMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOutOfMemory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOutOfMemory { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOutOfMemory : bool" Usage="System.Printing.PrintQueue.IsOutOfMemory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-474">プリンターのメモリが不足しているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-474">Gets a value that indicates whether the printer is out of memory.</span></span></summary>
        <value><span data-ttu-id="5d805-475">プリンターのメモリが不足している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-475"><see langword="true" /> if the printer is out of memory; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-476">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-476">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-477">次の例では、可能性のあるエラー状態をすべてのプリンター、アンケートの一部としてこのプロパティを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-477">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutOfPaper">
      <MemberSignature Language="C#" Value="public bool IsOutOfPaper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOutOfPaper" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsOutOfPaper" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOutOfPaper As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOutOfPaper { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOutOfPaper : bool" Usage="System.Printing.PrintQueue.IsOutOfPaper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-478">現在のジョブに必要なサイズの用紙をプリンターに補充する必要があるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-478">Gets a value that indicates whether the printer needs to be reloaded with paper of the size required for the current job.</span></span></summary>
        <value><span data-ttu-id="5d805-479">プリンターに用紙を補充する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-479"><see langword="true" /> if the printer needs to be reloaded; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-480">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-480">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-481">次の例では、可能性のあるエラー状態をすべてのプリンター、アンケートの一部としてこのプロパティを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-481">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutputBinFull">
      <MemberSignature Language="C#" Value="public bool IsOutputBinFull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOutputBinFull" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsOutputBinFull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOutputBinFull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOutputBinFull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOutputBinFull : bool" Usage="System.Printing.PrintQueue.IsOutputBinFull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-482">プリンターの出力領域がいっぱいになっているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-482">Gets a value that indicates whether the output area of the printer is in danger of overflowing.</span></span></summary>
        <value><span data-ttu-id="5d805-483">プリンターの出力領域がいっぱいになっている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-483"><see langword="true" /> if the output area of the printer is full; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-484">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-484">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-485">次の例では、可能性のあるエラー状態をすべてのプリンター、アンケートの一部としてこのプロパティを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-485">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPaperJammed">
      <MemberSignature Language="C#" Value="public bool IsPaperJammed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaperJammed" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsPaperJammed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPaperJammed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPaperJammed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPaperJammed : bool" Usage="System.Printing.PrintQueue.IsPaperJammed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-486">プリンターで紙詰まりが発生しているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-486">Gets a value that indicates whether the current sheet of paper is stuck in the printer.</span></span></summary>
        <value><span data-ttu-id="5d805-487">用紙が詰まっている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-487"><see langword="true" /> if the paper is stuck; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-488">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-488">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-489">次の例では、可能性のあるエラー状態をすべてのプリンター、アンケートの一部としてこのプロパティを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-489">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPaused">
      <MemberSignature Language="C#" Value="public bool IsPaused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaused" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsPaused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPaused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPaused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPaused : bool" Usage="System.Printing.PrintQueue.IsPaused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-490">印刷キューが一時停止されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-490">Gets a value that indicates whether the print queue has been paused.</span></span></summary>
        <value><span data-ttu-id="5d805-491">印刷キューが一時停止されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-491"><see langword="true" /> if the print queue has been paused; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-492">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-492">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-493">次の例では、可能性のあるエラー状態をすべてのプリンター、アンケートの一部としてこのプロパティを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-493">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPendingDeletion">
      <MemberSignature Language="C#" Value="public bool IsPendingDeletion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPendingDeletion" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsPendingDeletion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPendingDeletion As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPendingDeletion { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPendingDeletion : bool" Usage="System.Printing.PrintQueue.IsPendingDeletion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-494">プリンターが印刷ジョブの削除中かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-494">Gets a value that indicates whether the printer is in the process of deleting a print job.</span></span></summary>
        <value><span data-ttu-id="5d805-495">プリンターがジョブを削除している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-495"><see langword="true" /> if the printer is deleting a job; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-496">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-496">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPowerSaveOn">
      <MemberSignature Language="C#" Value="public bool IsPowerSaveOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPowerSaveOn" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsPowerSaveOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPowerSaveOn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPowerSaveOn { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPowerSaveOn : bool" Usage="System.Printing.PrintQueue.IsPowerSaveOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-497">プリンターが省電力モードかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-497">Gets a value that indicates whether the printer is in power save mode.</span></span></summary>
        <value><span data-ttu-id="5d805-498">プリンターが省電力モードの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-498"><see langword="true" /> if the printer is in power save mode; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-499">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-499">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrinting">
      <MemberSignature Language="C#" Value="public bool IsPrinting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrinting" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsPrinting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrinting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrinting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrinting : bool" Usage="System.Printing.PrintQueue.IsPrinting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-500">ジョブが印刷中かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-500">Gets a value that indicates whether a job is printing.</span></span></summary>
        <value><span data-ttu-id="5d805-501">ジョブが印刷中の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-501"><see langword="true" /> if a job is printing; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-502">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-502">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsProcessing">
      <MemberSignature Language="C#" Value="public bool IsProcessing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsProcessing" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsProcessing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsProcessing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsProcessing { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsProcessing : bool" Usage="System.Printing.PrintQueue.IsProcessing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-503">プリンターが印刷ジョブを処理しているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-503">Gets a value that indicates whether the printer is processing a print job.</span></span></summary>
        <value><span data-ttu-id="5d805-504">プリンターが印刷ジョブを処理している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-504"><see langword="true" /> if the printer is processing a print job; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-505">Less 固有ではなくこの信号をサポートして、プリンターの製造元<xref:System.Printing.PrintQueue.IsBusy%2A>します。</span><span class="sxs-lookup"><span data-stu-id="5d805-505">Some printer manufacturers support this signal instead of the less specific <xref:System.Printing.PrintQueue.IsBusy%2A>.</span></span>  
  
 <span data-ttu-id="5d805-506">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-506">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublished">
      <MemberSignature Language="C#" Value="public bool IsPublished { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublished" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsPublished" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublished As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublished { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPublished : bool" Usage="System.Printing.PrintQueue.IsPublished" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-507">プリンターが他のネットワーク ユーザーに表示されるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-507">Gets a value that indicates whether the printer is visible to other network users.</span></span></summary>
        <value><span data-ttu-id="5d805-508">プリンターが他のネットワーク ユーザーに表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-508"><see langword="true" /> if the printer is visible to other network users; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsQueued">
      <MemberSignature Language="C#" Value="public bool IsQueued { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsQueued" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsQueued" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsQueued As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsQueued { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsQueued : bool" Usage="System.Printing.PrintQueue.IsQueued" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-509">一度に複数の印刷ジョブを含むキューがプリンターでサポートされているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-509">Gets a value that indicates whether the printer can support a queue with more than one print job in it at a time.</span></span></summary>
        <value><span data-ttu-id="5d805-510">複数の印刷ジョブを含むキューがプリンターでサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-510"><see langword="true" /> if the printer can support the queuing of multiple print jobs; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-511">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-511">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRawOnlyEnabled">
      <MemberSignature Language="C#" Value="public bool IsRawOnlyEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRawOnlyEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsRawOnlyEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRawOnlyEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRawOnlyEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRawOnlyEnabled : bool" Usage="System.Printing.PrintQueue.IsRawOnlyEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-512">印刷元のアプリケーションから Windows スプーラーへのデータ フローを高速化できる EMF (拡張メタファイル) を印刷キューで使用できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-512">Gets a value that indicates whether the print queue can use EMF (Enhanced Meta File) that enables faster data flow from a printing application to the Windows spooler.</span></span></summary>
        <value><span data-ttu-id="5d805-513">プリンターで EMF 印刷を使用できない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-513"><see langword="true" /> if the printer cannot use EMF printing; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServerUnknown">
      <MemberSignature Language="C#" Value="public bool IsServerUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServerUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsServerUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsServerUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsServerUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServerUnknown : bool" Usage="System.Printing.PrintQueue.IsServerUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-514">プリンターがエラー状態になっているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-514">Gets a value that indicates whether the printer is in an error state.</span></span></summary>
        <value><span data-ttu-id="5d805-515">プリンターがエラー状態になっている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-515"><see langword="true" /> if in the printer is in an error state; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-516">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-516">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsShared">
      <MemberSignature Language="C#" Value="public bool IsShared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsShared" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsShared" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsShared As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsShared { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsShared : bool" Usage="System.Printing.PrintQueue.IsShared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-517">ネットワーク上の他のコンピューターがこのプリンターを使用できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-517">Gets a value that indicates whether the printer is available for use by other computers on the network.</span></span></summary>
        <value><span data-ttu-id="5d805-518">プリンターが共有されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-518"><see langword="true" /> if the printer is shared; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-519">このプロパティは、Windows のコモン印刷ダイアログでのみ設定できます。</span><span class="sxs-lookup"><span data-stu-id="5d805-519">This property can only be set with the Windows common print dialog.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTonerLow">
      <MemberSignature Language="C#" Value="public bool IsTonerLow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTonerLow" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsTonerLow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTonerLow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTonerLow { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTonerLow : bool" Usage="System.Printing.PrintQueue.IsTonerLow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-520">プリンターのトナーが不足しているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-520">Gets a value that indicates whether the printer is running short of toner.</span></span></summary>
        <value><span data-ttu-id="5d805-521">プリンターのトナーが不足している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-521"><see langword="true" /> if the printer is running short of toner; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-522">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-522">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 <span data-ttu-id="5d805-523"><xref:System.Printing.PrintQueue>オブジェクトも、<xref:System.Printing.PrintQueue.HasToner%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5d805-523">The <xref:System.Printing.PrintQueue> object also has a <xref:System.Printing.PrintQueue.HasToner%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-524">次の例では、可能性のあるエラー状態をすべてのプリンター、アンケートの一部としてこのプロパティを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-524">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWaiting">
      <MemberSignature Language="C#" Value="public bool IsWaiting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWaiting" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsWaiting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWaiting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWaiting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWaiting : bool" Usage="System.Printing.PrintQueue.IsWaiting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-525">キューがジョブの追加を待機しているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-525">Gets a value that indicates whether the queue is waiting for a job to be added.</span></span></summary>
        <value><span data-ttu-id="5d805-526">キューがジョブを待機している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-526"><see langword="true" /> if the queue is waiting for a job; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-527">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-527">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWarmingUp">
      <MemberSignature Language="C#" Value="public bool IsWarmingUp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWarmingUp" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsWarmingUp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWarmingUp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWarmingUp { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWarmingUp : bool" Usage="System.Printing.PrintQueue.IsWarmingUp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-528">プリンターがウォームアップ中かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-528">Gets a value that indicates whether the printer is warming up.</span></span></summary>
        <value><span data-ttu-id="5d805-529">プリンターがウォームアップ中の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-529"><see langword="true" /> if the printer is warming up; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-530">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-530">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXpsDevice">
      <MemberSignature Language="C#" Value="public bool IsXpsDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXpsDevice" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsXpsDevice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsXpsDevice As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsXpsDevice { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsXpsDevice : bool" Usage="System.Printing.PrintQueue.IsXpsDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-531">プリンターのドライバーが[印刷の概要](~/docs/framework/wpf/advanced/printing-overview.md)に基づいて作成され、ページ記述言語として [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] を使用しているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-531">Gets a value that indicates whether the printer's driver is built on the [Printing Overview](~/docs/framework/wpf/advanced/printing-overview.md) so it uses [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] as its page description language.</span></span></summary>
        <value><span data-ttu-id="5d805-532"><see langword="true" /> プリンターで使用する場合、[印刷の概要](~/docs/framework/wpf/advanced/printing-overview.md)、それ以外の<see langword="false" />します。</span><span class="sxs-lookup"><span data-stu-id="5d805-532"><see langword="true" /> if the printer uses the [Printing Overview](~/docs/framework/wpf/advanced/printing-overview.md); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-533">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-533">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepPrintedJobs">
      <MemberSignature Language="C#" Value="public bool KeepPrintedJobs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepPrintedJobs" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.KeepPrintedJobs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeepPrintedJobs As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepPrintedJobs { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeepPrintedJobs : bool" Usage="System.Printing.PrintQueue.KeepPrintedJobs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-534">キューでプリンター言語ファイルを印刷後に削除せずに保存するかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-534">Gets a value that indicates whether the queue is saving the printer language file instead of deleting it following printing.</span></span></summary>
        <value><span data-ttu-id="5d805-535">キューでプリンター言語ファイルを保存する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-535"><see langword="true" /> if the queue is saving the printer language file; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-536">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-536">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public virtual string Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Location" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.Location" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Location As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Location { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Location : string with get, set" Usage="System.Printing.PrintQueue.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-537">プリンターの物理的な場所を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5d805-537">Gets or sets the printer's physical location.</span></span></summary>
        <value><span data-ttu-id="5d805-538">プリンターの物理的な場所。</span><span class="sxs-lookup"><span data-stu-id="5d805-538">The printer's physical location.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5d805-539">次の例は、このプロパティを使用して、利用可能な印刷キューのサブセットを一覧表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5d805-539">The following example shows how to use this property to list a subset of available print queues.</span></span>  
  
 [!code-cpp[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/EnumerateSubsetOfPrintQueues/CPP/Program.cpp#listsubsetofprintqueues)]
 [!code-csharp[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/EnumerateSubsetOfPrintQueues/CSharp/Program.cs#listsubsetofprintqueues)]
 [!code-vb[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EnumerateSubsetOfPrintQueues/visualbasic/program.vb#listsubsetofprintqueues)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPrintSchemaVersion">
      <MemberSignature Language="C#" Value="public static int MaxPrintSchemaVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxPrintSchemaVersion" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.MaxPrintSchemaVersion" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxPrintSchemaVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxPrintSchemaVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxPrintSchemaVersion : int" Usage="System.Printing.PrintQueue.MaxPrintSchemaVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-540">キューで使用できる[印刷スキーマ](https://go.microsoft.com/fwlink/?LinkId=186397)の最新のバージョン番号を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-540">Gets the most recent possible version number of the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) that the queue can use.</span></span></summary>
        <value><span data-ttu-id="5d805-541">最新のバージョン番号、[印刷スキーマ](https://go.microsoft.com/fwlink/?LinkId=186397)キューを使用できます。</span><span class="sxs-lookup"><span data-stu-id="5d805-541">The most recent version number of the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) that the queue can use.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-542">バージョン、[印刷スキーマ](https://go.microsoft.com/fwlink/?LinkId=186397)1 は、Windows Vista でリリースされました。</span><span class="sxs-lookup"><span data-stu-id="5d805-542">The version of the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) released with Windows Vista is 1.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=186397"><span data-ttu-id="5d805-543">印刷スキーマ</span><span class="sxs-lookup"><span data-stu-id="5d805-543">Print Schema</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="MergeAndValidatePrintTicket">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5d805-544">2 つの <see cref="T:System.Printing.PrintTicket" /> がマージされ、結果の <see cref="T:System.Printing.PrintTicket" /> は有効な印刷チケットであり、プリンターのサポート対象外となる印刷機能は要求されないことが保証されます。</span><span class="sxs-lookup"><span data-stu-id="5d805-544">Merges two <see cref="T:System.Printing.PrintTicket" />s and guarantees that the resulting <see cref="T:System.Printing.PrintTicket" /> is valid and does not ask for any printing functionality that the printer does not support.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MergeAndValidatePrintTicket">
      <MemberSignature Language="C#" Value="public System.Printing.ValidationResult MergeAndValidatePrintTicket (System.Printing.PrintTicket basePrintTicket, System.Printing.PrintTicket deltaPrintTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Printing.ValidationResult MergeAndValidatePrintTicket(class System.Printing.PrintTicket basePrintTicket, class System.Printing.PrintTicket deltaPrintTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)" />
      <MemberSignature Language="VB.NET" Value="Public Function MergeAndValidatePrintTicket (basePrintTicket As PrintTicket, deltaPrintTicket As PrintTicket) As ValidationResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::ValidationResult MergeAndValidatePrintTicket(System::Printing::PrintTicket ^ basePrintTicket, System::Printing::PrintTicket ^ deltaPrintTicket);" />
      <MemberSignature Language="F#" Value="member this.MergeAndValidatePrintTicket : System.Printing.PrintTicket * System.Printing.PrintTicket -&gt; System.Printing.ValidationResult" Usage="printQueue.MergeAndValidatePrintTicket (basePrintTicket, deltaPrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePrintTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="deltaPrintTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="basePrintTicket"><span data-ttu-id="5d805-545">1 番目の印刷チケット。</span><span class="sxs-lookup"><span data-stu-id="5d805-545">The first print ticket.</span></span></param>
        <param name="deltaPrintTicket"><span data-ttu-id="5d805-546">2 番目の印刷チケット。</span><span class="sxs-lookup"><span data-stu-id="5d805-546">The second print ticket.</span></span> <span data-ttu-id="5d805-547">この値は、<see langword="null" /> でもかまいません。</span><span class="sxs-lookup"><span data-stu-id="5d805-547">This can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="5d805-548">2 つの <see cref="T:System.Printing.PrintTicket" /> がマージされ、結果の <see cref="T:System.Printing.PrintTicket" /> は有効な印刷チケットであり、プリンターのサポート対象外となる印刷機能は要求されないことが保証されます。</span><span class="sxs-lookup"><span data-stu-id="5d805-548">Merges two <see cref="T:System.Printing.PrintTicket" />s and guarantees that the resulting <see cref="T:System.Printing.PrintTicket" /> is valid and does not ask for any printing functionality that the printer does not support.</span></span></summary>
        <returns><span data-ttu-id="5d805-549">マージされた <see cref="T:System.Printing.ValidationResult" /> および実行可能性を保証するために設定のいずれかを変更する必要があるかどうかを示す情報を含む <see cref="T:System.Printing.PrintTicket" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-549">A <see cref="T:System.Printing.ValidationResult" /> that includes the merged <see cref="T:System.Printing.PrintTicket" /> and an indication of whether any of its settings had to be changed to guarantee viability.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-550">メソッド生成の実行可能な印刷チケット。つまり、チケットな印刷機能を要求していないプリンターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="5d805-550">The method produces a viable print ticket; that is, a ticket that does not request printing features that the printer does not support.</span></span> <span data-ttu-id="5d805-551">メソッドは、まずに対して 2 つの入力の印刷チケットを検証、[印刷スキーマ](https://go.microsoft.com/fwlink/?LinkId=186397)します。</span><span class="sxs-lookup"><span data-stu-id="5d805-551">The method first validates the two input print tickets against the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397).</span></span> <span data-ttu-id="5d805-552">いずれかの情報が有効でない場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="5d805-552">If either is invalid, an exception is thrown.</span></span>  
  
 <span data-ttu-id="5d805-553">2 つのチケットがマージされます。</span><span class="sxs-lookup"><span data-stu-id="5d805-553">The two tickets are then merged.</span></span> <span data-ttu-id="5d805-554">特定のプロパティに別の値がある場合しマージされたチケットはデルタ チケットの値を最初に使用します。</span><span class="sxs-lookup"><span data-stu-id="5d805-554">If they have different values for a particular property then the resulting merged ticket initially uses the value of the delta ticket.</span></span>  
  
 <span data-ttu-id="5d805-555">マージされたチケットは、プリンターの実際の機能は照合されます。</span><span class="sxs-lookup"><span data-stu-id="5d805-555">The merged ticket is then checked against the actual capabilities of the printer.</span></span> <span data-ttu-id="5d805-556">チケットの設定は、プリンターの機能と互換性がない、プリンター ドライバーは、任意のロジックを使用してこれらの設定を変更し、存在する場合、次の必要があります。</span><span class="sxs-lookup"><span data-stu-id="5d805-556">If any settings in the ticket are incompatible with the printer's capabilities, then the printer driver changes those settings by using whatever logic it wants.</span></span> <span data-ttu-id="5d805-557">通常、設定のユーザーまたはプリンターの既定の値が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="5d805-557">Typically, it substitutes the user's or printer's default value for the setting.</span></span> <span data-ttu-id="5d805-558">代替値のドライバーのソースでないと同じチケット`basePrintTicket`、マージされたチケットは、入力されたチケットの両方とは異なるいくつかの設定を持つ可能性があります。</span><span class="sxs-lookup"><span data-stu-id="5d805-558">It the driver's source of substitute values is not the same ticket as `basePrintTicket`, then the merged ticket might have some settings that are different from both of the input tickets.</span></span> <span data-ttu-id="5d805-559">プリンター ドライバーは、設定を変更する必要がありますし、この事実がで報告されるかどうか、<xref:System.Printing.ValidationResult.ConflictStatus%2A>のプロパティ、<xref:System.Printing.ValidationResult>します。</span><span class="sxs-lookup"><span data-stu-id="5d805-559">If the printer driver has to change any settings then this fact is reported in the <xref:System.Printing.ValidationResult.ConflictStatus%2A> property of the <xref:System.Printing.ValidationResult>.</span></span>  
  
 <span data-ttu-id="5d805-560">印刷キューの既定の設定に基づいて、マージ、および検証する、設定する必要があります`basePrintTicket`を<xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>または<xref:System.Printing.PrintQueue.UserPrintTicket%2A>します。</span><span class="sxs-lookup"><span data-stu-id="5d805-560">To merge and validate based on a print queue's default settings, you should set `basePrintTicket` to the <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> or the <xref:System.Printing.PrintQueue.UserPrintTicket%2A>.</span></span>  
  
 <span data-ttu-id="5d805-561">`deltaPrintTicket`パラメーターを指定できます`null`、その場合、`basePrintTicket`を検証、実行可能性をチェックおよびと共に返される、場合によって変更します。</span><span class="sxs-lookup"><span data-stu-id="5d805-561">The `deltaPrintTicket` parameter can be `null`, in which case the `basePrintTicket` is validated, checked for viability, and returned, possibly with changes.</span></span>  
  
 <span data-ttu-id="5d805-562">このオーバー ロードで<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>の両方を`deltaPrintTicket`と<xref:System.Printing.PrintTicket>で、<xref:System.Printing.ValidationResult>返されるジョブ全体のスコープがあります。</span><span class="sxs-lookup"><span data-stu-id="5d805-562">With this overload of <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>, both the `deltaPrintTicket` and the <xref:System.Printing.PrintTicket> in the <xref:System.Printing.ValidationResult> that is returned have job wide scope.</span></span> <span data-ttu-id="5d805-563">別のスコープを指定するには、このメソッドの他のオーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="5d805-563">To specify a different scope use the other overload of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-564">次の例では、このメソッドを使用して、2 つの印刷チケットをマージして応答する方法を示しています、<xref:System.Printing.ValidationResult>が返されます。</span><span class="sxs-lookup"><span data-stu-id="5d805-564">The following example shows how to use this method to merge two print tickets and respond to the <xref:System.Printing.ValidationResult> that is returned.</span></span>  
  
 [!code-csharp[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintTicketManagment/CSharp/printticket.cs#usingmergeandvalidate)]
 [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintTicketManagment/visualbasic/printticket.vb#usingmergeandvalidate)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5d805-565">入力された印刷チケットの少なくとも 1 つが無効です。</span><span class="sxs-lookup"><span data-stu-id="5d805-565">At least one of the input print tickets is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5d805-566"><paramref name="basePrintTicket" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5d805-566">The <paramref name="basePrintTicket" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="5d805-567">検証、マージ、および実行可能性の確認操作が失敗しました。</span><span class="sxs-lookup"><span data-stu-id="5d805-567">The validation, merger, and viability checking operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MergeAndValidatePrintTicket">
      <MemberSignature Language="C#" Value="public System.Printing.ValidationResult MergeAndValidatePrintTicket (System.Printing.PrintTicket basePrintTicket, System.Printing.PrintTicket deltaPrintTicket, System.Printing.PrintTicketScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Printing.ValidationResult MergeAndValidatePrintTicket(class System.Printing.PrintTicket basePrintTicket, class System.Printing.PrintTicket deltaPrintTicket, valuetype System.Printing.PrintTicketScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket,System.Printing.PrintTicketScope)" />
      <MemberSignature Language="VB.NET" Value="Public Function MergeAndValidatePrintTicket (basePrintTicket As PrintTicket, deltaPrintTicket As PrintTicket, scope As PrintTicketScope) As ValidationResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::ValidationResult MergeAndValidatePrintTicket(System::Printing::PrintTicket ^ basePrintTicket, System::Printing::PrintTicket ^ deltaPrintTicket, System::Printing::PrintTicketScope scope);" />
      <MemberSignature Language="F#" Value="member this.MergeAndValidatePrintTicket : System.Printing.PrintTicket * System.Printing.PrintTicket * System.Printing.PrintTicketScope -&gt; System.Printing.ValidationResult" Usage="printQueue.MergeAndValidatePrintTicket (basePrintTicket, deltaPrintTicket, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePrintTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="deltaPrintTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="scope" Type="System.Printing.PrintTicketScope" />
      </Parameters>
      <Docs>
        <param name="basePrintTicket"><span data-ttu-id="5d805-568">1 番目の印刷チケット。</span><span class="sxs-lookup"><span data-stu-id="5d805-568">The first print ticket.</span></span></param>
        <param name="deltaPrintTicket"><span data-ttu-id="5d805-569">2 番目の印刷チケット。</span><span class="sxs-lookup"><span data-stu-id="5d805-569">The second print ticket.</span></span> <span data-ttu-id="5d805-570">この値は、<see langword="null" /> でもかまいません。</span><span class="sxs-lookup"><span data-stu-id="5d805-570">This can be <see langword="null" />.</span></span></param>
        <param name="scope"><span data-ttu-id="5d805-571"><paramref name="deltaPrintTicket" /> のスコープと、<see cref="T:System.Printing.ValidationResult" /> で返される印刷チケットのスコープ (ページ、ドキュメント、またはジョブ全体) を示す値。</span><span class="sxs-lookup"><span data-stu-id="5d805-571">A value indicating whether the scope of <paramref name="deltaPrintTicket" />, and the scope of the print ticket returned in the <see cref="T:System.Printing.ValidationResult" />, is a page, a document, or the whole job.</span></span></param>
        <summary><span data-ttu-id="5d805-572">2 つの <see cref="T:System.Printing.PrintTicket" /> がマージされ、結果の <see cref="T:System.Printing.PrintTicket" /> は有効な印刷チケットであり、プリンターのサポート対象外となる印刷機能は要求されないこと、および指定したスコープに制限されることが保証されます。</span><span class="sxs-lookup"><span data-stu-id="5d805-572">Merges two <see cref="T:System.Printing.PrintTicket" />s and guarantees that the resulting <see cref="T:System.Printing.PrintTicket" /> is valid, does not ask for any printing functionality that the printer does not support, and is limited to the specified scope.</span></span></summary>
        <returns><span data-ttu-id="5d805-573">マージされた <see cref="T:System.Printing.ValidationResult" /> および実行可能性を保証するために設定のいずれかを変更する必要があるかどうかを示す情報を含む <see cref="T:System.Printing.PrintTicket" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-573">A <see cref="T:System.Printing.ValidationResult" /> that includes the merged <see cref="T:System.Printing.PrintTicket" /> and an indication of whether any of its settings had to be changed to guarantee viability.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-574">メソッド生成の実行可能な印刷チケット。つまり、チケットな印刷機能を要求していないプリンターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="5d805-574">The method produces a viable print ticket; that is, a ticket that does not request printing features that the printer does not support.</span></span> <span data-ttu-id="5d805-575">メソッドは、まずに対して 2 つの入力の印刷チケットを検証、[印刷スキーマ](https://go.microsoft.com/fwlink/?LinkId=186397)します。</span><span class="sxs-lookup"><span data-stu-id="5d805-575">The method first validates the two input print tickets against the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397).</span></span> <span data-ttu-id="5d805-576">いずれかの情報が有効でない場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="5d805-576">If either is invalid, an exception is thrown.</span></span>  
  
 <span data-ttu-id="5d805-577">2 つのチケットがマージされます。</span><span class="sxs-lookup"><span data-stu-id="5d805-577">The two tickets are then merged.</span></span> <span data-ttu-id="5d805-578">特定のプロパティに別の値がある場合しマージされたチケットはデルタ チケットの値を最初に使用します。</span><span class="sxs-lookup"><span data-stu-id="5d805-578">If they have different values for a particular property then the resulting merged ticket initially uses the value of the delta ticket.</span></span>  
  
 <span data-ttu-id="5d805-579">マージされたチケットは、プリンターの実際の機能は照合されます。</span><span class="sxs-lookup"><span data-stu-id="5d805-579">The merged ticket is then checked against the actual capabilities of the printer.</span></span> <span data-ttu-id="5d805-580">チケットの設定は、プリンターの機能と互換性がない、プリンター ドライバーは、任意のロジックを使用してこれらの設定を変更し、存在する場合、次の必要があります。</span><span class="sxs-lookup"><span data-stu-id="5d805-580">If any settings in the ticket are incompatible with the printer's capabilities, then the printer driver changes those settings by using whatever logic it wants.</span></span> <span data-ttu-id="5d805-581">通常、設定のユーザーまたはプリンターの既定の値が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="5d805-581">Typically, it substitutes the user's or printer's default value for the setting.</span></span> <span data-ttu-id="5d805-582">代替値のドライバーのソースでないと同じチケット`basePrintTicket`、マージされたチケットは、入力されたチケットの両方とは異なるいくつかの設定を持つ可能性があります。</span><span class="sxs-lookup"><span data-stu-id="5d805-582">It the driver's source of substitute values is not the same ticket as `basePrintTicket`, then the merged ticket might have some settings that are different from both of the input tickets.</span></span> <span data-ttu-id="5d805-583">プリンター ドライバーは、設定を変更する必要がありますし、この事実がで報告されるかどうか、<xref:System.Printing.ValidationResult.ConflictStatus%2A>のプロパティ、<xref:System.Printing.ValidationResult>します。</span><span class="sxs-lookup"><span data-stu-id="5d805-583">If the printer driver has to change any settings then this fact is reported in the <xref:System.Printing.ValidationResult.ConflictStatus%2A> property of the <xref:System.Printing.ValidationResult>.</span></span>  
  
 <span data-ttu-id="5d805-584">印刷キューの既定の設定に基づいて、マージ、および検証する、設定する必要があります`basePrintTicket`を<xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>または<xref:System.Printing.PrintQueue.UserPrintTicket%2A>します。</span><span class="sxs-lookup"><span data-stu-id="5d805-584">To merge and validate based on a print queue's default settings, you should set `basePrintTicket` to the <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> or the <xref:System.Printing.PrintQueue.UserPrintTicket%2A>.</span></span>  
  
 <span data-ttu-id="5d805-585">`deltaPrintTicket`パラメーターを指定できます`null`、その場合、`basePrintTicket`を検証、実行可能性をチェックおよびと共に返される、場合によって変更します。</span><span class="sxs-lookup"><span data-stu-id="5d805-585">The `deltaPrintTicket` parameter can be `null`, in which case the `basePrintTicket` is validated, checked for viability, and returned, possibly with changes.</span></span>  
  
 <span data-ttu-id="5d805-586">場合、`scope`で返される印刷チケットが、ジョブ、<xref:System.Printing.ValidationResult>含めることができます[印刷スキーマ](https://go.microsoft.com/fwlink/?LinkId=186397)ジョブ、ドキュメント、およびページのプレフィックスを持つパラメーター。</span><span class="sxs-lookup"><span data-stu-id="5d805-586">If the `scope` is a job, then the print ticket returned in the <xref:System.Printing.ValidationResult> can include [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) parameters with Job, Document, and Page prefixes.</span></span> <span data-ttu-id="5d805-587">場合、`scope`がドキュメント、ジョブごとの設定`deltaPrintTicket`は無視され、ページのプレフィックスし、返されたチケットでドキュメントを持つパラメーターを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="5d805-587">If the `scope` is a document, then per-job settings in `deltaPrintTicket` are ignored, and the returned ticket can include parameters with Document and Page prefixes.</span></span> <span data-ttu-id="5d805-588">場合、 `scope`  ページでは、し、ジョブごとの設定、ドキュメントごとの設定は、`deltaPrintTicket`は無視され、返されたチケットは、ページのプレフィックスだけを持つパラメーターを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="5d805-588">If the `scope` is a page, then the per-job settings and the per-document settings in `deltaPrintTicket` are ignored, and the returned ticket can include parameters with only the Page prefix.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5d805-589">入力された印刷チケットの少なくとも 1 つが無効です。</span><span class="sxs-lookup"><span data-stu-id="5d805-589">At least one of the input print tickets is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5d805-590"><paramref name="basePrintTicket" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5d805-590">The <paramref name="basePrintTicket" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5d805-591"><paramref name="scope" /> パラメーターに有効な <see cref="T:System.Printing.PrintTicketScope" /> 値がありません。</span><span class="sxs-lookup"><span data-stu-id="5d805-591">The <paramref name="scope" /> parameter does not have a valid <see cref="T:System.Printing.PrintTicketScope" /> value.</span></span></exception>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="5d805-592">検証、マージ、および実行可能性の確認操作が失敗しました。</span><span class="sxs-lookup"><span data-stu-id="5d805-592">The validation, merger, and viability checking operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override sealed string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Printing.PrintQueue.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-593">印刷キューの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5d805-593">Gets or sets the print queue's name.</span></span></summary>
        <value><span data-ttu-id="5d805-594">印刷キューの名前。</span><span class="sxs-lookup"><span data-stu-id="5d805-594">The name of the print queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-595"><xref:System.Printing.PrintQueue>オブジェクトにも読み取り専用<xref:System.Printing.PrintQueue.FullName%2A>プロパティと、書き込み可能な<xref:System.Printing.PrintQueue.ShareName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5d805-595">The <xref:System.Printing.PrintQueue> object also has a read only <xref:System.Printing.PrintQueue.FullName%2A> property and a writeable <xref:System.Printing.PrintQueue.ShareName%2A> property.</span></span>  
  
 <span data-ttu-id="5d805-596">ローカル プリント サーバー上のキューの<xref:System.Printing.PrintQueue.Name%2A>と<xref:System.Printing.PrintQueue.FullName%2A>は同じです。</span><span class="sxs-lookup"><span data-stu-id="5d805-596">For queues on the local print server, <xref:System.Printing.PrintQueue.Name%2A> and <xref:System.Printing.PrintQueue.FullName%2A> are the same.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-597">次の例は、このプロパティを使用して、利用可能な印刷キューのサブセットを一覧表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5d805-597">The following example shows how to use this property to list a subset of available print queues.</span></span>  
  
 [!code-cpp[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/EnumerateSubsetOfPrintQueues/CPP/Program.cpp#listsubsetofprintqueues)]
 [!code-csharp[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/EnumerateSubsetOfPrintQueues/CSharp/Program.cs#listsubsetofprintqueues)]
 [!code-vb[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EnumerateSubsetOfPrintQueues/visualbasic/program.vb#listsubsetofprintqueues)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NeedUserIntervention">
      <MemberSignature Language="C#" Value="public bool NeedUserIntervention { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NeedUserIntervention" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.NeedUserIntervention" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NeedUserIntervention As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NeedUserIntervention { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.NeedUserIntervention : bool" Usage="System.Printing.PrintQueue.NeedUserIntervention" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-598">プリンターが人の介入を必要とするかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-598">Gets a value that indicates whether the printer needs the attention of a human being.</span></span></summary>
        <value><span data-ttu-id="5d805-599">プリンターが人の介入を必要とする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-599"><see langword="true" /> if the printer needs human attention; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-600">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-600">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-601">次の例では、可能性のあるエラー状態をすべてのプリンター、アンケートの一部としてこのプロパティを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-601">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfJobs">
      <MemberSignature Language="C#" Value="public virtual int NumberOfJobs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfJobs" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.NumberOfJobs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NumberOfJobs As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NumberOfJobs { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfJobs : int" Usage="System.Printing.PrintQueue.NumberOfJobs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-602">印刷キューに並んでいるジョブの合計数を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-602">Gets the total number of jobs lined up in the print queue.</span></span></summary>
        <value><span data-ttu-id="5d805-603">キュー内のジョブの数。</span><span class="sxs-lookup"><span data-stu-id="5d805-603">The number of jobs in the queue.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PagePunt">
      <MemberSignature Language="C#" Value="public bool PagePunt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PagePunt" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.PagePunt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PagePunt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PagePunt { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.PagePunt : bool" Usage="System.Printing.PrintQueue.PagePunt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-604">プリンターで現在のページを印刷できないかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-604">Gets a value that indicates whether the printer is unable to print the current page.</span></span></summary>
        <value><span data-ttu-id="5d805-605">プリンターで現在のページを印刷できない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-605"><see langword="true" /> if the printer is unable to print the current page; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-606">プリンターが、この意味を持つ信号をサポートしていない場合、プロパティは常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="5d805-606">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public virtual void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Pause();" />
      <MemberSignature Language="F#" Value="abstract member Pause : unit -&gt; unit&#xA;override this.Pause : unit -&gt; unit" Usage="printQueue.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5d805-607">印刷キューを一時停止します。</span><span class="sxs-lookup"><span data-stu-id="5d805-607">Pauses the print queue.</span></span> <span data-ttu-id="5d805-608">印刷キューは、<see cref="M:System.Printing.PrintQueue.Resume" /> を実行するまで一時停止したままになります。</span><span class="sxs-lookup"><span data-stu-id="5d805-608">It remains paused until <see cref="M:System.Printing.PrintQueue.Resume" /> is executed.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Printing.PrintSystemException"><span data-ttu-id="5d805-609">プリンターを一時停止できません。</span><span class="sxs-lookup"><span data-stu-id="5d805-609">The printer cannot be paused.</span></span></exception>
        <altmember cref="M:System.Printing.PrintQueue.Resume" />
      </Docs>
    </Member>
    <Member MemberName="PrintingIsCancelled">
      <MemberSignature Language="C#" Value="public bool PrintingIsCancelled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintingIsCancelled" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.PrintingIsCancelled" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintingIsCancelled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintingIsCancelled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PrintingIsCancelled : bool with get, set" Usage="System.Printing.PrintQueue.PrintingIsCancelled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-610">現在の印刷ジョブをキャンセルするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5d805-610">Gets or sets a value that indicates whether the current print job is being cancelled.</span></span></summary>
        <value><span data-ttu-id="5d805-611">印刷ジョブをキャンセルする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-611"><see langword="true" /> if the print job is being cancelled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public virtual int Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Priority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Priority { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : int with get, set" Usage="System.Printing.PrintQueue.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-612">同じプリント サーバーでホストされており、同じ物理プリンターを使用する他の印刷キューと比較した場合の、この印刷キューの優先順位を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5d805-612">Gets or sets the priority of the print queue relative to other print queues that are hosted by the same print server and that use the same physical printer.</span></span></summary>
        <value><span data-ttu-id="5d805-613">印刷キューの優先順位。</span><span class="sxs-lookup"><span data-stu-id="5d805-613">The priority for the print queue.</span></span> <span data-ttu-id="5d805-614">有効値は 1 から 99 です。</span><span class="sxs-lookup"><span data-stu-id="5d805-614">Possible values are from 1 through 99.</span></span> <span data-ttu-id="5d805-615">既定値は 1 です。</span><span class="sxs-lookup"><span data-stu-id="5d805-615">The default is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-616">対照的にこのプロパティを<xref:System.Printing.PrintQueue.DefaultPriority%2A>キューで印刷ジョブの相対的な優先順位の詳細については、プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5d805-616">Contrast this property with the <xref:System.Printing.PrintQueue.DefaultPriority%2A> property which is about the relative priority of print jobs in the queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Purge">
      <MemberSignature Language="C#" Value="public virtual void Purge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Purge() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.Purge" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Purge ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Purge();" />
      <MemberSignature Language="F#" Value="abstract member Purge : unit -&gt; unit&#xA;override this.Purge : unit -&gt; unit" Usage="printQueue.Purge " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5d805-617">印刷キューのすべてのジョブを削除します。</span><span class="sxs-lookup"><span data-stu-id="5d805-617">Removes all the jobs in the print queue.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Printing.PrintSystemException"><span data-ttu-id="5d805-618">一部の印刷ジョブをキューから削除できませんでした。</span><span class="sxs-lookup"><span data-stu-id="5d805-618">Some print jobs could not be removed from the queue.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="QueueAttributes">
      <MemberSignature Language="C#" Value="public System.Printing.PrintQueueAttributes QueueAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Printing.PrintQueueAttributes QueueAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.QueueAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueueAttributes As PrintQueueAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintQueueAttributes QueueAttributes { System::Printing::PrintQueueAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.QueueAttributes : System.Printing.PrintQueueAttributes" Usage="System.Printing.PrintQueue.QueueAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintQueueAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-619">印刷キューのプロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-619">Gets the properties of the print queue.</span></span></summary>
        <value><span data-ttu-id="5d805-620"><see cref="T:System.Printing.PrintQueueAttributes" /> 列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="5d805-620">A bitwise combination of the <see cref="T:System.Printing.PrintQueueAttributes" /> enumeration values.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueDriver">
      <MemberSignature Language="C#" Value="public virtual System.Printing.PrintDriver QueueDriver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintDriver QueueDriver" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.QueueDriver" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QueueDriver As PrintDriver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Printing::PrintDriver ^ QueueDriver { System::Printing::PrintDriver ^ get(); void set(System::Printing::PrintDriver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QueueDriver : System.Printing.PrintDriver with get, set" Usage="System.Printing.PrintQueue.QueueDriver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintDriver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-621">キューのプリンター ドライバーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5d805-621">Gets or sets the printer driver for the queue.</span></span></summary>
        <value><span data-ttu-id="5d805-622">キューが使用する <see cref="T:System.Printing.PrintDriver" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-622">The <see cref="T:System.Printing.PrintDriver" /> that the queue uses.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueuePort">
      <MemberSignature Language="C#" Value="public virtual System.Printing.PrintPort QueuePort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintPort QueuePort" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.QueuePort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QueuePort As PrintPort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Printing::PrintPort ^ QueuePort { System::Printing::PrintPort ^ get(); void set(System::Printing::PrintPort ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QueuePort : System.Printing.PrintPort with get, set" Usage="System.Printing.PrintQueue.QueuePort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintPort</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-623">キューが使用するポートを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5d805-623">Gets or sets the port that the queue uses.</span></span></summary>
        <value><span data-ttu-id="5d805-624">印刷キューに割り当てられている <see cref="T:System.Printing.PrintPort" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-624">The <see cref="T:System.Printing.PrintPort" /> that is assigned to the print queue.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueuePrintProcessor">
      <MemberSignature Language="C#" Value="public virtual System.Printing.PrintProcessor QueuePrintProcessor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintProcessor QueuePrintProcessor" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.QueuePrintProcessor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QueuePrintProcessor As PrintProcessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Printing::PrintProcessor ^ QueuePrintProcessor { System::Printing::PrintProcessor ^ get(); void set(System::Printing::PrintProcessor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QueuePrintProcessor : System.Printing.PrintProcessor with get, set" Usage="System.Printing.PrintQueue.QueuePrintProcessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintProcessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-625">キューが使用するプリント プロセッサを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5d805-625">Gets or sets the print processor that the queue uses.</span></span></summary>
        <value><span data-ttu-id="5d805-626">キューが使用する <see cref="T:System.Printing.PrintProcessor" /> (WinPrint や ModiPrint など)。</span><span class="sxs-lookup"><span data-stu-id="5d805-626">The <see cref="T:System.Printing.PrintProcessor" /> that the queue uses, such as WinPrint or ModiPrint.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueStatus">
      <MemberSignature Language="C#" Value="public System.Printing.PrintQueueStatus QueueStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Printing.PrintQueueStatus QueueStatus" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.QueueStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueueStatus As PrintQueueStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintQueueStatus QueueStatus { System::Printing::PrintQueueStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.QueueStatus : System.Printing.PrintQueueStatus" Usage="System.Printing.PrintQueue.QueueStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintQueueStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-627">プリンターのステータスを表す値を取得します </span><span class="sxs-lookup"><span data-stu-id="5d805-627">Gets a value that represents the status of the printer.</span></span> <span data-ttu-id="5d805-628">("ウォームアップ中"、"初期化中"、"印刷中" など)。</span><span class="sxs-lookup"><span data-stu-id="5d805-628">These include "warming up," "initializing," "printing," and others.</span></span></summary>
        <value><span data-ttu-id="5d805-629">現在の <see cref="T:System.Printing.PrintQueueStatus" /> 値。</span><span class="sxs-lookup"><span data-stu-id="5d805-629">The current <see cref="T:System.Printing.PrintQueueStatus" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5d805-630">次の例では、可能性のあるエラー状態をすべてのプリンター、アンケートの一部としてこのプロパティを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-630">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueAttributes](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueattributes)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueattributes)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueattributes)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public override void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Refresh();" />
      <MemberSignature Language="F#" Value="override this.Refresh : unit -&gt; unit" Usage="printQueue.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5d805-631"><see cref="T:System.Printing.PrintQueue" /> オブジェクトのプロパティを、プリンターの値とコンピューターで実行されている印刷キュー ユーティリティの値で更新します。</span><span class="sxs-lookup"><span data-stu-id="5d805-631">Updates the properties of the <see cref="T:System.Printing.PrintQueue" /> object with values from the printer and the print queue utility that runs on the computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-632">プログラムに加える変更を<xref:System.Printing.PrintQueue>オブジェクトのプロパティが失われたときに<xref:System.Printing.PrintQueue.Refresh%2A>実行、プリンターと印刷キューでに記述されている場合、<xref:System.Printing.PrintQueue.Commit%2A>します。</span><span class="sxs-lookup"><span data-stu-id="5d805-632">Changes your program makes to a <xref:System.Printing.PrintQueue> object's properties are lost when <xref:System.Printing.PrintQueue.Refresh%2A> executes, unless they have been written to the printer and print queue with <xref:System.Printing.PrintQueue.Commit%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-633">次の例では、可能性のあるエラー状態をすべてのプリンター、アンケートの一部としてこのメソッドを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-633">The following example shows how to use this method as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SurveyQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#surveyqueues)]
 [!code-csharp[PrinterStatusSurvey#SurveyQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#surveyqueues)]
 [!code-vb[PrinterStatusSurvey#SurveyQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#surveyqueues)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintSystemException"><span data-ttu-id="5d805-634">いくつかのプロパティを更新できませんでした。</span><span class="sxs-lookup"><span data-stu-id="5d805-634">Some of the properties could not be refreshed.</span></span></exception>
        <altmember cref="M:System.Printing.PrintQueue.Commit" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public virtual void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Resume();" />
      <MemberSignature Language="F#" Value="abstract member Resume : unit -&gt; unit&#xA;override this.Resume : unit -&gt; unit" Usage="printQueue.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5d805-635">一時停止された印刷キューを再開します。</span><span class="sxs-lookup"><span data-stu-id="5d805-635">Restarts a print queue that was paused.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5d805-636">次の例では、このメソッドを使用して、一時停止された印刷キューを再開する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-636">The following example shows how to use this method to resume a paused print queue.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#handlepausedjob)]
 [!code-csharp[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#handlepausedjob)]
 [!code-vb[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#handlepausedjob)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintSystemException"><span data-ttu-id="5d805-637">プリンターを再開できません。</span><span class="sxs-lookup"><span data-stu-id="5d805-637">The printer cannot resume.</span></span></exception>
        <altmember cref="M:System.Printing.PrintQueue.Pause" />
      </Docs>
    </Member>
    <Member MemberName="ScheduleCompletedJobsFirst">
      <MemberSignature Language="C#" Value="public bool ScheduleCompletedJobsFirst { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScheduleCompletedJobsFirst" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.ScheduleCompletedJobsFirst" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScheduleCompletedJobsFirst As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScheduleCompletedJobsFirst { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ScheduleCompletedJobsFirst : bool" Usage="System.Printing.PrintQueue.ScheduleCompletedJobsFirst" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-638">プリンターで、キューに入った順序や優先順位に関係なく、スプール処理が完了したジョブから先に印刷するかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5d805-638">Gets a value that indicates whether the printer prints jobs that have completed the spooling process before jobs that have not fully spooled even if the latter entered the queue first or have a higher priority.</span></span></summary>
        <value><span data-ttu-id="5d805-639">スプール処理が完了したジョブを完了していないジョブより先に印刷する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-639"><see langword="true" /> if the printer prints jobs that have completed the spooling process before jobs that have not fully spooled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeparatorFile">
      <MemberSignature Language="C#" Value="public virtual string SeparatorFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SeparatorFile" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.SeparatorFile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SeparatorFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SeparatorFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SeparatorFile : string with get, set" Usage="System.Printing.PrintQueue.SeparatorFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-640">各印刷ジョブの先頭に挿入されるファイルのパスとファイル名を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5d805-640">Gets or sets the path and file name of a file that is inserted at the beginning of each print job.</span></span></summary>
        <value><span data-ttu-id="5d805-641">区切りファイルのパスとファイル名。</span><span class="sxs-lookup"><span data-stu-id="5d805-641">The path and file name of the separator file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-642">通常は 1 ページのファイルを別の印刷ジョブの出力を区別しやすくために使用です。</span><span class="sxs-lookup"><span data-stu-id="5d805-642">This is normally a single-page file used to make it easier to separate the output of different print jobs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShareName">
      <MemberSignature Language="C#" Value="public virtual string ShareName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShareName" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.ShareName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShareName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ShareName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShareName : string with get, set" Usage="System.Printing.PrintQueue.ShareName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-643">プリンターが共有されている場合にネットワーク上のユーザーに表示されるプリンターの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5d805-643">Gets or sets a name for the printer that is seen by users on the network when it is shared.</span></span></summary>
        <value><span data-ttu-id="5d805-644">共有プリンターのパブリック名。</span><span class="sxs-lookup"><span data-stu-id="5d805-644">The public name of a shared printer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-645"><xref:System.Printing.PrintQueue>オブジェクトにも読み取り専用<xref:System.Printing.PrintQueue.FullName%2A>プロパティと、書き込み可能な<xref:System.Printing.PrintQueue.Name%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5d805-645">The <xref:System.Printing.PrintQueue> object also has a read only <xref:System.Printing.PrintQueue.FullName%2A> property and a writeable <xref:System.Printing.PrintQueue.Name%2A> property.</span></span> <span data-ttu-id="5d805-646">ローカル プリント サーバーのキューの場合は、これらのプロパティは、同じ値を指定します。</span><span class="sxs-lookup"><span data-stu-id="5d805-646">For queues on the local print server, these properties have the same value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTimeOfDay">
      <MemberSignature Language="C#" Value="public virtual int StartTimeOfDay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartTimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.StartTimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StartTimeOfDay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int StartTimeOfDay { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.StartTimeOfDay : int with get, set" Usage="System.Printing.PrintQueue.StartTimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-647">プリンターがジョブを印刷する最も早い時刻を取得または設定します。この時刻は、協定世界時刻 (UTC) (グリニッジ標準時 [GMT] とも呼ばれます) の午前 0 時からの分数で表現されます。</span><span class="sxs-lookup"><span data-stu-id="5d805-647">Gets or sets the earliest time of day, expressed as the number of minutes after midnight Coordinated Universal Time (UTC) (also called Greenwich Mean Time [GMT]), that the printer will print a job.</span></span></summary>
        <value><span data-ttu-id="5d805-648">プリンターが最初に使用できるようになる時刻。この時刻は、午前 0 時 (UTC) からの分数で表現されます。</span><span class="sxs-lookup"><span data-stu-id="5d805-648">The time of day that the printer first becomes available, expressed as the number of minutes after midnight (UTC).</span></span> <span data-ttu-id="5d805-649">最大値は 1439 です。</span><span class="sxs-lookup"><span data-stu-id="5d805-649">The maximum value is 1439.</span></span> <span data-ttu-id="5d805-650">[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] プリンターの追加ウィザードを使用してプリンターを初めてインストールすると、プリンターは既定で常時使用可能に設定され、このプロパティは、すべてのタイム ゾーンで 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="5d805-650">When a printer is first installed by using the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] Add Printer Wizard, the printer defaults to being available all the time, and this property returns 0 in all time zones.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-651">UTC タイム ゾーンでない場合は、追加またはタイム ゾーンの正しい時刻を取得または設定に 60 の倍数を減算する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5d805-651">If you are not in the UTC time zone, you must add or subtract multiples of 60 to set or get the correct time for your time zone.</span></span> <span data-ttu-id="5d805-652">たとえば、North America の太平洋標準時タイム ゾーンと夏時間の削減に使用するがされていない場合有効になって、現地時刻は UTC よりも 8 の時間。</span><span class="sxs-lookup"><span data-stu-id="5d805-652">For example, if you are in the Pacific Time Zone of North America and daylight savings time is not in effect, then your local time is 8 hours earlier than UTC.</span></span> <span data-ttu-id="5d805-653">設定する<xref:System.Printing.PrintQueue.StartTimeOfDay%2A>タイム ゾーンの 12 AM に設定する UTC の午前 8 時、480 (8 \* 60 =) であります。</span><span class="sxs-lookup"><span data-stu-id="5d805-653">To set <xref:System.Printing.PrintQueue.StartTimeOfDay%2A> to 12 AM in your time zone, you set it to 8 AM UTC, which is 480 (= 8 \* 60).</span></span> <span data-ttu-id="5d805-654">忘れないでください時間は 24 時間後に 0 にロール オーバーする (つまり; 1439 分後)。</span><span class="sxs-lookup"><span data-stu-id="5d805-654">You also must remember that time rolls over to zero after 24 hours (that is; after the 1439th minute).</span></span> <span data-ttu-id="5d805-655">タイム ゾーンの午後 6 時に設定するに設定する UTC の午前 2 時、120 (2 \* 60 =) であります。</span><span class="sxs-lookup"><span data-stu-id="5d805-655">To set it to 6 PM in your time zone, you set it to 2 AM UTC, which is 120 (= 2 \* 60).</span></span> <span data-ttu-id="5d805-656">参照してください<xref:System.TimeZone>、 <xref:System.TimeSpan>、および<xref:System.DateTime>便利なタイム ゾーンがメソッドを操作するためのクラス。</span><span class="sxs-lookup"><span data-stu-id="5d805-656">See <xref:System.TimeZone>, <xref:System.TimeSpan>, and <xref:System.DateTime> classes for helpful time zone manipulating methods.</span></span>  
  
 <span data-ttu-id="5d805-657">プリンターが常に場合、このプロパティはすべてのタイム ゾーンで 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="5d805-657">If the printer is always available, then this property returns 0 in all time zones.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-658">次の例では、このプロパティを使用して、現時点では、プリンターが使用できるかどうかを決定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-658">The following example shows how to use this property to determine whether a printer is available at the present time.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#UsingStartAndUntilTimes](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#usingstartanduntiltimes)]
 [!code-csharp[PrinterStatusSurvey#UsingStartAndUntilTimes](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#usingstartanduntiltimes)]
 [!code-vb[PrinterStatusSurvey#UsingStartAndUntilTimes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#usingstartanduntiltimes)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeZone" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Printing.PrintQueue.UntilTimeOfDay" />
      </Docs>
    </Member>
    <Member MemberName="UntilTimeOfDay">
      <MemberSignature Language="C#" Value="public virtual int UntilTimeOfDay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UntilTimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.UntilTimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UntilTimeOfDay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UntilTimeOfDay { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UntilTimeOfDay : int with get, set" Usage="System.Printing.PrintQueue.UntilTimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-659">プリンターがジョブを印刷する最も遅い時刻を取得または設定します。この時刻は、協定世界時刻 (UTC) (グリニッジ標準時 [GMT] とも呼ばれます) の午前 0 時からの分数で表現されます。</span><span class="sxs-lookup"><span data-stu-id="5d805-659">Gets or sets the latest time, expressed as the number of minutes after midnight Coordinated Universal Time (UTC) (also called Greenwich Mean Time [GMT]), that the printer will print a job.</span></span></summary>
        <value><span data-ttu-id="5d805-660">プリンターが使用できなくなる時刻。この時刻は、午前 0 時 (UTC) からの分数で表現されます。</span><span class="sxs-lookup"><span data-stu-id="5d805-660">The time of day that the printer is no longer available, expressed as the number of minutes after midnight (UTC).</span></span> <span data-ttu-id="5d805-661">最大値は 1439 です。</span><span class="sxs-lookup"><span data-stu-id="5d805-661">The maximum value is 1439.</span></span> <span data-ttu-id="5d805-662">[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] プリンターの追加ウィザードを使用してプリンターを初めてインストールすると、プリンターは既定で常時使用可能に設定され、このプロパティは、すべてのタイム ゾーンで 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="5d805-662">When a printer is first installed by using the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] Add Printer Wizard, the printer defaults to being available all the time, and this property returns 0 in all time zones.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-663">UTC タイム ゾーンでない場合は、追加またはタイム ゾーンの正しい時刻を取得または設定に 60 の倍数を減算する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5d805-663">If you are not in the UTC time zone, you must add or subtract multiples of 60 to set or get the correct time for your time zone.</span></span> <span data-ttu-id="5d805-664">たとえば、North America の太平洋標準時タイム ゾーンと夏時間の削減に使用するがされていない場合有効になって、現地時刻は UTC よりも 8 の時間。</span><span class="sxs-lookup"><span data-stu-id="5d805-664">For example, if you are in the Pacific Time Zone of North America and daylight savings time is not in effect, then your local time is 8 hours earlier than UTC.</span></span> <span data-ttu-id="5d805-665">設定する<xref:System.Printing.PrintQueue.UntilTimeOfDay%2A>タイム ゾーンの 12 AM に設定する UTC の午前 8 時、480 (8 \* 60 =) であります。</span><span class="sxs-lookup"><span data-stu-id="5d805-665">To set <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A> to 12 AM in your time zone, you set it to 8 AM UTC, which is 480 (= 8 \* 60).</span></span> <span data-ttu-id="5d805-666">忘れないでくださいその時間は 24 時間 (1439 分) 後に 0 にロール オーバーします。</span><span class="sxs-lookup"><span data-stu-id="5d805-666">You also must remember that time rolls over to zero after the 24th hour (the 1439th minute).</span></span> <span data-ttu-id="5d805-667">タイム ゾーンの午後 6 時に設定するに設定する UTC の午前 2 時、120 (2 \* 60 =) であります。</span><span class="sxs-lookup"><span data-stu-id="5d805-667">To set it to 6 PM in your time zone, you set it to 2 AM UTC, which is 120 (= 2 \* 60).</span></span> <span data-ttu-id="5d805-668">参照してください<xref:System.TimeZone>、 <xref:System.TimeSpan>、および<xref:System.DateTime>便利なタイム ゾーンがメソッドを操作するためのクラス。</span><span class="sxs-lookup"><span data-stu-id="5d805-668">See <xref:System.TimeZone>, <xref:System.TimeSpan>, and <xref:System.DateTime> classes for helpful time zone manipulating methods.</span></span>  
  
 <span data-ttu-id="5d805-669">プリンターが常に場合、このプロパティはすべてのタイム ゾーンで 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="5d805-669">If the printer is always available, then this property returns 0 in all time zones.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-670">次の例では、このプロパティを使用して、現時点では、プリンターが使用できるかどうかを決定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-670">The following example shows how to use this property to determine whether a printer is available at the present time.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#UsingStartAndUntilTimes](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#usingstartanduntiltimes)]
 [!code-csharp[PrinterStatusSurvey#UsingStartAndUntilTimes](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#usingstartanduntiltimes)]
 [!code-vb[PrinterStatusSurvey#UsingStartAndUntilTimes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#usingstartanduntiltimes)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeZone" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Printing.PrintQueue.StartTimeOfDay" />
      </Docs>
    </Member>
    <Member MemberName="UserPrintTicket">
      <MemberSignature Language="C#" Value="public virtual System.Printing.PrintTicket UserPrintTicket { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintTicket UserPrintTicket" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.UserPrintTicket" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UserPrintTicket As PrintTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Printing::PrintTicket ^ UserPrintTicket { System::Printing::PrintTicket ^ get(); void set(System::Printing::PrintTicket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserPrintTicket : System.Printing.PrintTicket with get, set" Usage="System.Printing.PrintQueue.UserPrintTicket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintTicket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d805-671">現在のユーザーの既定の <see cref="T:System.Printing.PrintTicket" /> オブジェクトを取得または設定します。このオブジェクトには、印刷ジョブに関する詳細情報が格納されます。</span><span class="sxs-lookup"><span data-stu-id="5d805-671">Gets or sets the current user's default <see cref="T:System.Printing.PrintTicket" /> object which contains detailed information about the print job.</span></span></summary>
        <value><span data-ttu-id="5d805-672">現在のユーザーの <see cref="T:System.Printing.PrintTicket" />。ユーザーの <see cref="T:System.Printing.PrintTicket" /> が指定されていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5d805-672">The <see cref="T:System.Printing.PrintTicket" /> for the current user, or <see langword="null" /> if a user <see cref="T:System.Printing.PrintTicket" /> has not been specified.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d805-673">各ユーザーが自分の既定値を持つことができます<xref:System.Printing.PrintTicket>します。</span><span class="sxs-lookup"><span data-stu-id="5d805-673">Each user can have his or her own default <xref:System.Printing.PrintTicket>.</span></span>  
  
 <span data-ttu-id="5d805-674">このプロパティは `null` に設定できます。</span><span class="sxs-lookup"><span data-stu-id="5d805-674">This property can be `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d805-675">次の例では、2 つの印刷チケットをマージするときにこのプロパティを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5d805-675">The following example shows how to use this property while merging two print tickets.</span></span>  
  
 [!code-csharp[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintTicketManagment/CSharp/printticket.cs#usingmergeandvalidate)]
 [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintTicketManagment/visualbasic/printticket.vb#usingmergeandvalidate)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Printing.PrintQueue.DefaultPrintTicket" />
      </Docs>
    </Member>
  </Members>
</Type>