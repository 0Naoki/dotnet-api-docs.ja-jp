<Type Name="PrintJobInfoCollection" FullName="System.Printing.PrintJobInfoCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="41b8d4339cfca290e3de8f7f68dacb6dba562f83" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37641886" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PrintJobInfoCollection : System.Printing.PrintSystemObjects, IDisposable, System.Collections.Generic.IEnumerable&lt;System.Printing.PrintSystemJobInfo&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrintJobInfoCollection extends System.Printing.PrintSystemObjects implements class System.Collections.Generic.IEnumerable`1&lt;class System.Printing.PrintSystemJobInfo&gt;, class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Printing.PrintJobInfoCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class PrintJobInfoCollection&#xA;Inherits PrintSystemObjects&#xA;Implements IDisposable, IEnumerable(Of PrintSystemJobInfo)" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintJobInfoCollection : System::Printing::PrintSystemObjects, IDisposable, System::Collections::Generic::IEnumerable&lt;System::Printing::PrintSystemJobInfo ^&gt;" />
  <TypeSignature Language="F#" Value="type PrintJobInfoCollection = class&#xA;    inherit PrintSystemObjects&#xA;    interface seq&lt;PrintSystemJobInfo&gt;&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Printing</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Printing.PrintSystemObjects</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Printing.PrintSystemJobInfo&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="a01bb-101">1 つ以上の <see cref="T:System.Printing.PrintSystemJobInfo" /> オブジェクトを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a01bb-101">Represents one or more <see cref="T:System.Printing.PrintSystemJobInfo" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="a01bb-102">クラス内で、 <xref:System.Printing> Windows サービスまたは ASP.NET アプリケーションまたはサービス内で使用する名前空間はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="a01bb-102">Classes within the <xref:System.Printing> namespace are not supported for use within a Windows service or ASP.NET application or service.</span></span> <span data-ttu-id="a01bb-103">内でこれらのアプリケーションの種類のいずれかからこれらのクラスを使用すると、予期しない問題が発生する可能性があります、低下などのサービスのパフォーマンスと実行時の例外。</span><span class="sxs-lookup"><span data-stu-id="a01bb-103">Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.</span></span>  
  
 <span data-ttu-id="a01bb-104">Windows フォーム アプリケーションから印刷する場合を参照してください、<xref:System.Drawing.Printing>名前空間。</span><span class="sxs-lookup"><span data-stu-id="a01bb-104">If you want to print from a Windows Forms application, see the <xref:System.Drawing.Printing> namespace.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintJobInfoCollection (System.Printing.PrintQueue printQueue, string[] propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintQueue printQueue, string[] propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintJobInfoCollection.#ctor(System.Printing.PrintQueue,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintJobInfoCollection(System::Printing::PrintQueue ^ printQueue, cli::array &lt;System::String ^&gt; ^ propertyFilter);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintJobInfoCollection : System.Printing.PrintQueue * string[] -&gt; System.Printing.PrintJobInfoCollection" Usage="new System.Printing.PrintJobInfoCollection (printQueue, propertyFilter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="printQueue" Type="System.Printing.PrintQueue" />
        <Parameter Name="propertyFilter" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="printQueue">
          <span data-ttu-id="a01bb-105">コレクションに値を設定する印刷ジョブを含む印刷キュー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a01bb-105">The print queue whose print jobs will populate the collection.</span>
          </span>
        </param>
        <param name="propertyFilter">
          <span data-ttu-id="a01bb-106">
            <see cref="T:System.Printing.PrintSystemJobInfo" /> オブジェクトのプロパティのサブセットのリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a01bb-106">A list of a subset of the properties of a <see cref="T:System.Printing.PrintSystemJobInfo" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a01bb-107">
            <see cref="T:System.Printing.PrintJobInfoCollection" /> クラスの新しいインスタンスを初期化します。このクラスは、指定した <see cref="T:System.Printing.PrintSystemJobInfo" /> 内にあるすべてのジョブの <see cref="T:System.Printing.PrintQueue" /> オブジェクトを含んでおり、指定したプロパティ フィルターに示されるプロパティのみを使用してこれらのオブジェクトを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a01bb-107">Initializes a new instance of the <see cref="T:System.Printing.PrintJobInfoCollection" /> class that contains the <see cref="T:System.Printing.PrintSystemJobInfo" /> objects for every job that is in the specified <see cref="T:System.Printing.PrintQueue" /> and that initializes those objects only in the properties that are listed in the specified property filter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a01bb-108"><xref:System.Printing.PrintSystemJobInfo>コレクション内のオブジェクトが記載されているこれらのプロパティでのみ初期化されます、`propertyFilter`します。</span><span class="sxs-lookup"><span data-stu-id="a01bb-108">The <xref:System.Printing.PrintSystemJobInfo> objects in the collection are initialized only in those properties that are listed in the `propertyFilter`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Printing.PrintSystemJobInfo printObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Printing.PrintSystemJobInfo printObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintJobInfoCollection.Add(System.Printing.PrintSystemJobInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (printObject As PrintSystemJobInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Printing::PrintSystemJobInfo ^ printObject);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Printing.PrintSystemJobInfo -&gt; unit" Usage="printJobInfoCollection.Add printObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printObject" Type="System.Printing.PrintSystemJobInfo" />
      </Parameters>
      <Docs>
        <param name="printObject">
          <span data-ttu-id="a01bb-109">追加されるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a01bb-109">The object that is added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a01bb-110">メンバーを <see cref="T:System.Printing.PrintJobInfoCollection" /> に追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a01bb-110">Adds a member to the <see cref="T:System.Printing.PrintJobInfoCollection" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool );" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool ) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintJobInfoCollection.Dispose(System.Boolean)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose ( As Boolean)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool );" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="printJobInfoCollection.Dispose " FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="protected override void Dispose (bool A_0);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool A_0) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintJobInfoCollection.Dispose(System.Boolean)" FrameworkAlternate="netframework-4.5" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (A_0 As Boolean)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool A_0);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="printJobInfoCollection.Dispose A_0" FrameworkAlternate="netframework-4.5" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="A_0" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="A_0">To be added.</param>
        <summary>
          <span data-ttu-id="a01bb-111">ph x="1" /&amp;gt; によって使用されているアンマネージド リソースを解放します。オプションでマネージド リソースも解放できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a01bb-111">Releases the unmanaged resources that are being used by the <see cref="T:System.Printing.PrintJobInfoCollection" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a01bb-112">このメソッドは、パブリック`Dispose()`メソッドと<xref:System.Object.Finalize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="a01bb-112">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="a01bb-113">`Dispose()` 保護された起動`Dispose(Boolean)`無名のブール型パラメーターを設定したメソッド`true`します。</span><span class="sxs-lookup"><span data-stu-id="a01bb-113">`Dispose()` invokes the protected `Dispose(Boolean)` method with the unnamed Boolean parameter set to `true`.</span></span> <span data-ttu-id="a01bb-114"><xref:System.Object.Finalize%2A> 呼び出す`Dispose`パラメーターを設定して`false`します。</span><span class="sxs-lookup"><span data-stu-id="a01bb-114"><xref:System.Object.Finalize%2A> invokes `Dispose` with the parameter set to `false`.</span></span>  
  
 <span data-ttu-id="a01bb-115">このメソッドがすべてのマネージ オブジェクトによって保持されているすべてのリソースを解放するブール型パラメーターが true の場合この<xref:System.Printing.PrintJobInfoCollection>参照。</span><span class="sxs-lookup"><span data-stu-id="a01bb-115">When the Boolean parameter is true, this method releases all resources held by any managed objects that this <xref:System.Printing.PrintJobInfoCollection> references.</span></span> <span data-ttu-id="a01bb-116">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a01bb-116">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a01bb-117">
            <para>
              <see langword="Dispose" /> 他のオブジェクトで何度も呼び出せます。<see langword="Dispose(Boolean)" /> をオーバーライドする場合は、以前に <see langword="Dispose" /> を呼び出したときに破棄されたオブジェクトを参照しないように注意する必要があります。実装する方法についての詳細は<see langword="Dispose(Boolean)" />、[Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md) を実装を参照してください。 します。詳細については<see langword="Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください [アンマネージ Resources](~/docs/standard/garbage-collection/unmanaged.md) をクリーニングし、[Finalize メソッドをオーバーライドする] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a01bb-117">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerator&lt;System.Printing.PrintSystemJobInfo&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Printing.PrintSystemJobInfo&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintJobInfoCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator(Of PrintSystemJobInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Printing::PrintSystemJobInfo ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Printing.PrintSystemJobInfo&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Printing.PrintSystemJobInfo&gt;" Usage="printJobInfoCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Printing.PrintSystemJobInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a01bb-118">
            <see cref="T:System.Collections.IEnumerator" /> によって閉じられるジェネリックの <see cref="T:System.Printing.PrintSystemJobInfo" /> インターフェイスを実装するオブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a01bb-118">Gets an object that implements the generic <see cref="T:System.Collections.IEnumerator" /> interface that is closed with <see cref="T:System.Printing.PrintSystemJobInfo" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a01bb-119">ジェネリックな <see cref="T:System.Collections.IEnumerator" /> インターフェイスを実装し、<see cref="T:System.Printing.PrintSystemJobInfo" /> に含まれている <see cref="T:System.Printing.PrintJobInfoCollection" /> オブジェクトを反復処理できるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a01bb-119">An object that implements the generic <see cref="T:System.Collections.IEnumerator" /> interface and that can iterate through the <see cref="T:System.Printing.PrintSystemJobInfo" /> objects that the <see cref="T:System.Printing.PrintJobInfoCollection" /> contains.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a01bb-120">使用することをお勧め、`foreach`コレクションのすべてのメンバーを反復処理するステートメント。</span><span class="sxs-lookup"><span data-stu-id="a01bb-120">We recommend that you use the `foreach` statement to iterate through all members of the collection.</span></span> <span data-ttu-id="a01bb-121">使用<xref:System.Printing.PrintJobInfoCollection.GetEnumerator%2A>などその他のすべてのメンバーをスキップして、イテレーションをカスタマイズする必要がある場合にのみです。</span><span class="sxs-lookup"><span data-stu-id="a01bb-121">Use <xref:System.Printing.PrintJobInfoCollection.GetEnumerator%2A> only when you need to customize iteration, such as by skipping every other member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNonGenericEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetNonGenericEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetNonGenericEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintJobInfoCollection.GetNonGenericEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNonGenericEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetNonGenericEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member GetNonGenericEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetNonGenericEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="printJobInfoCollection.GetNonGenericEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a01bb-122">非ジェネリックの <see cref="T:System.Collections.IEnumerator" /> インターフェイスを実装するオブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a01bb-122">Gets an object that implements the non-generic <see cref="T:System.Collections.IEnumerator" /> interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a01bb-123">非ジェネリック <see cref="T:System.Collections.IEnumerator" /> インターフェイスを実装し、<see cref="T:System.Printing.PrintSystemJobInfo" /> に含まれている <see cref="T:System.Printing.PrintJobInfoCollection" /> オブジェクトを反復処理できるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a01bb-123">An object that implements the non-generic <see cref="T:System.Collections.IEnumerator" /> interface and that can iterate through the <see cref="T:System.Printing.PrintSystemJobInfo" /> objects that the <see cref="T:System.Printing.PrintJobInfoCollection" /> contains.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a01bb-124">使用することをお勧め、`foreach`コレクションのすべてのメンバーを反復処理するステートメント。</span><span class="sxs-lookup"><span data-stu-id="a01bb-124">We recommend that you use the `foreach` statement to iterate through all members of the collection.</span></span> <span data-ttu-id="a01bb-125">などの他のすべてのメンバーをスキップして、イテレーションをカスタマイズする必要がある場合にのみ、独自の列挙子オブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="a01bb-125">Use your own enumerator object only when you need to customize iteration, such as by skipping every other member.</span></span>  
  
 <span data-ttu-id="a01bb-126">ジェネリック、タイプ セーフな関数を使用することをお勧め、独自の列挙子が必要な場合<xref:System.Printing.PrintJobInfoCollection.GetEnumerator%2A>の代わりに<xref:System.Printing.PrintJobInfoCollection.GetNonGenericEnumerator%2A>します。</span><span class="sxs-lookup"><span data-stu-id="a01bb-126">If you need your own enumerator, we recommend that you use the generic, type-safe function <xref:System.Printing.PrintJobInfoCollection.GetEnumerator%2A> instead of <xref:System.Printing.PrintJobInfoCollection.GetNonGenericEnumerator%2A>.</span></span> <span data-ttu-id="a01bb-127"><xref:System.Printing.PrintJobInfoCollection.GetNonGenericEnumerator%2A>がパブリックの要件を満たす場合にのみ、<xref:System.Collections.IEnumerable>インターフェイスで、このコレクションによって実装されます。</span><span class="sxs-lookup"><span data-stu-id="a01bb-127">The <xref:System.Printing.PrintJobInfoCollection.GetNonGenericEnumerator%2A> is public only to fulfill the requirements of the <xref:System.Collections.IEnumerable> interface, which is implemented by this collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>