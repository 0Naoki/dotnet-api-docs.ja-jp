<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PrintSystemObject.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac551b35a7dda6fd535113870889c578063a0d45951.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">51b35a7dda6fd535113870889c578063a0d45951</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Printing.PrintSystemObject">
          <source>Defines basic properties and methods that are common to the objects of the printing system.</source>
          <target state="translated">印刷システムのオブジェクトに共通する基本的なプロパティとメソッドを定義します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Printing.PrintSystemObject">
          <source>Classes that derive from this class represent such objects as print queues, print servers, and print jobs.</source>
          <target state="translated">このクラスの派生クラスは、印刷キュー、プリント サーバー、印刷ジョブなどのオブジェクトを表します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintSystemObject">
          <source>In addition to being the base class for print system objects, this class can be useful for calling methods when your application does not know or does not care what particular type of print system object it is using.</source>
          <target state="translated">印刷システム オブジェクトの基本クラスでなく、このクラスは、役立ちますメソッドを呼び出すと、アプリケーションが認識していないどのような特定の印刷システム オブジェクトが使用されている型はありません。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintSystemObject">
          <source>For example, you could enumerate through a <ph id="ph1">&lt;xref:System.Printing.PrintSystemObjects&gt;</ph> collection of different object types, calling the <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject.Commit%2A&gt;</ph> method on each of them in turn.</source>
          <target state="translated">などを列挙する可能性があります、<ph id="ph1">&lt;xref:System.Printing.PrintSystemObjects&gt;</ph>別のオブジェクトの型、呼び出しのコレクション、<ph id="ph2">&lt;xref:System.Printing.PrintSystemObject.Commit%2A&gt;</ph>順番のそれぞれのメソッドです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintSystemObject">
          <source>Classes within the <ph id="ph1">&lt;xref:System.Printing&gt;</ph> namespace are not supported for use within a Windows service or ASP.NET application or service.</source>
          <target state="translated">クラス内で、 <ph id="ph1">&lt;xref:System.Printing&gt;</ph> Windows サービスや ASP.NET アプリケーションまたはサービス内で使用する名前空間はサポートされていません。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintSystemObject">
          <source>Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.</source>
          <target state="translated">パフォーマンスと実行時の例外をサービス低下のいずれかのようなアプリケーションからこれらのクラスを使用しようと、予期しない問題が生じる可能性があります。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintSystemObject">
          <source>If you want to print from a Windows Forms application, see the <ph id="ph1">&lt;xref:System.Drawing.Printing&gt;</ph> namespace.</source>
          <target state="translated">Windows フォーム アプリケーションから印刷する場合を参照してください、<ph id="ph1">&lt;xref:System.Drawing.Printing&gt;</ph>名前空間。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintSystemObject">
          <source>If you derive a class from <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>, you may want to derive a collection of objects of that class from <ph id="ph2">&lt;see cref="T:System.Printing.PrintSystemObjects" /&gt;</ph>.</source>
          <target state="translated">クラスを派生させた場合<ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>、そのクラスからのオブジェクトのコレクションを取得することができます<ph id="ph2">&lt;see cref="T:System.Printing.PrintSystemObjects" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Printing.PrintSystemObject">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.#ctor(System.Printing.PrintSystemObjectLoadMode)">
          <source>A value that specifies whether the properties of the object should be initialized when the object is loaded.</source>
          <target state="translated">オブジェクトの読み込み時にそのプロパティを初期化するかどうかを指定する値。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.#ctor(System.Printing.PrintSystemObjectLoadMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph> class by using the specified <ph id="ph2">&lt;see cref="T:System.Printing.PrintSystemObjectLoadMode" /&gt;</ph>.</source>
          <target state="translated">指定された <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph> を使用して、<ph id="ph2">&lt;see cref="T:System.Printing.PrintSystemObjectLoadMode" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.BaseAttributeNames">
          <source>Gets the names of the attributes of the derived class.</source>
          <target state="translated">派生クラスの属性の名前を取得します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.BaseAttributeNames">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 値の配列。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.Commit">
          <source>When overridden in a derived class, writes any changes that your program has made to the object's properties to the actual software or hardware component that the object represents.</source>
          <target state="translated">派生クラスでオーバーライドされると、オブジェクトのプロパティに対してプログラムで行った変更を、オブジェクトが表す実際のソフトウェア コンポーネントまたはハードウェア コンポーネントに書き込みます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Commit">
          <source>For example, when overridden by the <ph id="ph1">&lt;xref:System.Printing.PrintServer&gt;</ph> class, <ph id="ph2">&lt;xref:System.Printing.PrintServer.Commit%2A&gt;</ph> will write changes that are made to the <ph id="ph3">&lt;xref:System.Printing.PrintServer&gt;</ph> object's properties to the actual computer that the object represents.</source>
          <target state="translated">によってオーバーライドされた場合など、<ph id="ph1">&lt;xref:System.Printing.PrintServer&gt;</ph>クラス、<ph id="ph2">&lt;xref:System.Printing.PrintServer.Commit%2A&gt;</ph>に加えられた変更を書き込み、<ph id="ph3">&lt;xref:System.Printing.PrintServer&gt;</ph>オブジェクトが表す実際のコンピューターにオブジェクトのプロパティです。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Commit">
          <source>The following example shows how to use this method (called on a <ph id="ph1">&lt;xref:System.Printing.PrintQueue&gt;</ph> object, which overrides the method from <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph>) as part of the process of merging print tickets.</source>
          <target state="translated">次の例は、このメソッドを使用する方法を示しています (上と呼ばれる、<ph id="ph1">&lt;xref:System.Printing.PrintQueue&gt;</ph>からメソッドをオーバーライドして、オブジェクト<ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph>) 印刷チケットをマージするプロセスの一部として。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.Printing.PrintSystemObject">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph> で使用したリソースを解放します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph> によって使用されているすべてのリソースを解放します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Dispose&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Dispose&gt;</ph> を使い終わったら <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Dispose&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Dispose&gt;</ph> メソッドによって、<ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph> は使用不可の状態になります。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Dispose&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Printing.PrintSystemObject&gt;</ph> was occupying.</source>
          <target state="translated">呼び出した後<ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Dispose&gt;</ph>へのすべての参照を解放する必要があります、<ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph>ガベージ コレクターがメモリを再利用できるようにする、<ph id="ph3">&lt;xref:System.Printing.PrintSystemObject&gt;</ph>占有されていた。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>と<bpt id="p2">[</bpt>Dispose メソッドの実装<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Dispose&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Dispose&gt;</ph> への最後の参照を解放する前に、必ず <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph> を呼び出してください。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject&gt;</ph> object's <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">そうしないと、ガベージ コレクターが <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject&gt;</ph> オブジェクトの <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> メソッドを呼び出すまで、使用されているリソースは解放されません。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">このメソッドは、パブリック<ph id="ph1">`Dispose()`</ph>メソッドおよび<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the unnamed Boolean parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> プロテクト呼び出します<ph id="ph2">`Dispose(Boolean)`</ph>に設定された名前のないブール値パラメーターを持つメソッド<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with the parameter set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 呼び出す<ph id="ph2">`Dispose`</ph>パラメーターを設定して<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source>When the Boolean parameter is <ph id="ph1">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph> references.</source>
          <target state="translated">ブール型のパラメーターがの場合<ph id="ph1">`true`</ph>、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph>参照します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">このメソッドは、参照される各オブジェクトの <ph id="ph1">`Dispose()`</ph> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> は、他のオブジェクトから複数回呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> をオーバーライドする場合は、以前に <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph> を呼び出したときに破棄されたオブジェクトを参照しないように注意する必要があります。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">実装する方法の詳細についての<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>Dispose メソッドの実装<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">詳細については<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>と<bpt id="p2">[</bpt>Finalize メソッドをオーバーライドする<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.Finalize">
          <source>Releases the resources that are being used by the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph> によって使用されているリソースを解放します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Finalize">
          <source>The <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Finalize%2A&gt;</ph> method acts as a safeguard to clean up resources in the event that the <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject.Dispose%2A&gt;</ph> method is not called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Finalize%2A&gt;</ph>メソッドとしてリソースをクリーンアップするためのセーフガード機能した場合に、<ph id="ph2">&lt;xref:System.Printing.PrintSystemObject.Dispose%2A&gt;</ph>メソッドは呼び出されません。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Finalize">
          <source>You should implement the <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Finalize%2A&gt;</ph> method to clean up only unmanaged resources.</source>
          <target state="translated">実装する必要があります、<ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Finalize%2A&gt;</ph>アンマネージ リソースだけをクリーンアップします。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Finalize">
          <source>You should not implement this method for managed objects, because the garbage collector cleans up managed resources automatically.</source>
          <target state="translated">ガベージ コレクターは自動的にマネージ リソースをクリーンアップするため、管理対象のオブジェクトに対してこのメソッドを実装しないでください。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.Initialize">
          <source>Initializes the properties of the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph> のプロパティを初期化します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.InternalDispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">マネージ リソースとアンマネージ リソースの両方を解放する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。アンマネージ リソースだけを解放する場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.InternalDispose(System.Boolean)">
          <source>When overridden in a derived class, releases the unmanaged resources that are being used by the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>, and optionally releases the managed resources that are being used.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph> によって使用されているアンマネージ リソースを解放します。オプションでマネージ リソースも解放できます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Printing.PrintSystemObject.IsDisposed">
          <source>Gets or sets a value that indicates whether the object has been disposed.</source>
          <target state="translated">オブジェクトが破棄されたかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Printing.PrintSystemObject.IsDisposed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object has been disposed; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">オブジェクトが破棄されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Printing.PrintSystemObject.Name">
          <source>Gets the name of the object.</source>
          <target state="translated">オブジェクトの名前を取得します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Printing.PrintSystemObject.Name">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that represents the name of the object.</source>
          <target state="translated">オブジェクトの名前を表す <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Printing.PrintSystemObject.Parent">
          <source>Gets the parent of the object.</source>
          <target state="translated">オブジェクトの親を取得します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Printing.PrintSystemObject.Parent">
          <source>Another <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>.</source>
          <target state="translated">別の <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Printing.PrintSystemObject.Parent">
          <source>For example, the parent of a print queue is the print server that hosts the queue.</source>
          <target state="translated">たとえば、印刷キューの親は、キューをホストするプリント サーバーが。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Printing.PrintSystemObject.PropertiesCollection">
          <source>Gets a collection of attribute and value pairs.</source>
          <target state="translated">属性と値のペアのコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Printing.PrintSystemObject.PropertiesCollection">
          <source>A <ph id="ph1">&lt;see cref="T:System.Printing.IndexedProperties.PrintPropertyDictionary" /&gt;</ph> that contains attribute and value pairs.</source>
          <target state="translated">属性と値のペアを格納している <ph id="ph1">&lt;see cref="T:System.Printing.IndexedProperties.PrintPropertyDictionary" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Printing.PrintSystemObject.PropertiesCollection">
          <source>The following example shows how to use this property to discover at run time the properties, and the types of those properties, of a print system object, without using reflection.</source>
          <target state="translated">次の例では、このプロパティを使用して、リフレクションを使用せず、プロパティ、および印刷システム オブジェクトでは、これらのプロパティの種類を実行時に検出する方法を示します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.Refresh">
          <source>When overridden in a derived class, updates the properties of an object of the derived class so that its values match the values of the actual software or hardware component that the object represents.</source>
          <target state="translated">派生クラスでオーバーライドされると、派生クラスのオブジェクトのプロパティを更新し、オブジェクトが表す実際のソフトウェア コンポーネントまたはハードウェア コンポーネントの値にプロパティの値が一致するようにします。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Refresh">
          <source>Any changes that you have made to the properties of an object of the derived class may be lost when the <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Refresh%2A&gt;</ph> of the derived class executes.</source>
          <target state="translated">派生クラスのオブジェクトのプロパティに対して行った変更を加えたときに失われる可能性があります、<ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Refresh%2A&gt;</ph>派生クラスを実行します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Refresh">
          <source>The loss will occur if the changes have not yet been written to the actual software or hardware component, by using the derived class' implementation of <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Commit%2A&gt;</ph>.</source>
          <target state="translated">場合は、変更がまだ書き込まれていない実際のソフトウェアまたはハードウェアのコンポーネントの派生クラスの実装を使用して、損失が発生<ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Commit%2A&gt;</ph>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>